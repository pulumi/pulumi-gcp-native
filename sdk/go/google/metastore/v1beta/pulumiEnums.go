// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//	AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of the database.
type DatabaseDumpDatabaseType string

const (
	// The type of the source database is unknown.
	DatabaseDumpDatabaseTypeDatabaseTypeUnspecified = DatabaseDumpDatabaseType("DATABASE_TYPE_UNSPECIFIED")
	// The type of the source database is MySQL.
	DatabaseDumpDatabaseTypeMysql = DatabaseDumpDatabaseType("MYSQL")
)

func (DatabaseDumpDatabaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpDatabaseType)(nil)).Elem()
}

func (e DatabaseDumpDatabaseType) ToDatabaseDumpDatabaseTypeOutput() DatabaseDumpDatabaseTypeOutput {
	return pulumi.ToOutput(e).(DatabaseDumpDatabaseTypeOutput)
}

func (e DatabaseDumpDatabaseType) ToDatabaseDumpDatabaseTypeOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseDumpDatabaseTypeOutput)
}

func (e DatabaseDumpDatabaseType) ToDatabaseDumpDatabaseTypePtrOutput() DatabaseDumpDatabaseTypePtrOutput {
	return e.ToDatabaseDumpDatabaseTypePtrOutputWithContext(context.Background())
}

func (e DatabaseDumpDatabaseType) ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypePtrOutput {
	return DatabaseDumpDatabaseType(e).ToDatabaseDumpDatabaseTypeOutputWithContext(ctx).ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx)
}

func (e DatabaseDumpDatabaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpDatabaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpDatabaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseDumpDatabaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseDumpDatabaseTypeOutput struct{ *pulumi.OutputState }

func (DatabaseDumpDatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpDatabaseType)(nil)).Elem()
}

func (o DatabaseDumpDatabaseTypeOutput) ToDatabaseDumpDatabaseTypeOutput() DatabaseDumpDatabaseTypeOutput {
	return o
}

func (o DatabaseDumpDatabaseTypeOutput) ToDatabaseDumpDatabaseTypeOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypeOutput {
	return o
}

func (o DatabaseDumpDatabaseTypeOutput) ToDatabaseDumpDatabaseTypePtrOutput() DatabaseDumpDatabaseTypePtrOutput {
	return o.ToDatabaseDumpDatabaseTypePtrOutputWithContext(context.Background())
}

func (o DatabaseDumpDatabaseTypeOutput) ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseDumpDatabaseType) *DatabaseDumpDatabaseType {
		return &v
	}).(DatabaseDumpDatabaseTypePtrOutput)
}

func (o DatabaseDumpDatabaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseDumpDatabaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDumpDatabaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseDumpDatabaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDumpDatabaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDumpDatabaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseDumpDatabaseTypePtrOutput struct{ *pulumi.OutputState }

func (DatabaseDumpDatabaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDumpDatabaseType)(nil)).Elem()
}

func (o DatabaseDumpDatabaseTypePtrOutput) ToDatabaseDumpDatabaseTypePtrOutput() DatabaseDumpDatabaseTypePtrOutput {
	return o
}

func (o DatabaseDumpDatabaseTypePtrOutput) ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypePtrOutput {
	return o
}

func (o DatabaseDumpDatabaseTypePtrOutput) Elem() DatabaseDumpDatabaseTypeOutput {
	return o.ApplyT(func(v *DatabaseDumpDatabaseType) DatabaseDumpDatabaseType {
		if v != nil {
			return *v
		}
		var ret DatabaseDumpDatabaseType
		return ret
	}).(DatabaseDumpDatabaseTypeOutput)
}

func (o DatabaseDumpDatabaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDumpDatabaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseDumpDatabaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseDumpDatabaseTypeInput is an input type that accepts DatabaseDumpDatabaseTypeArgs and DatabaseDumpDatabaseTypeOutput values.
// You can construct a concrete instance of `DatabaseDumpDatabaseTypeInput` via:
//
//	DatabaseDumpDatabaseTypeArgs{...}
type DatabaseDumpDatabaseTypeInput interface {
	pulumi.Input

	ToDatabaseDumpDatabaseTypeOutput() DatabaseDumpDatabaseTypeOutput
	ToDatabaseDumpDatabaseTypeOutputWithContext(context.Context) DatabaseDumpDatabaseTypeOutput
}

var databaseDumpDatabaseTypePtrType = reflect.TypeOf((**DatabaseDumpDatabaseType)(nil)).Elem()

type DatabaseDumpDatabaseTypePtrInput interface {
	pulumi.Input

	ToDatabaseDumpDatabaseTypePtrOutput() DatabaseDumpDatabaseTypePtrOutput
	ToDatabaseDumpDatabaseTypePtrOutputWithContext(context.Context) DatabaseDumpDatabaseTypePtrOutput
}

type databaseDumpDatabaseTypePtr string

func DatabaseDumpDatabaseTypePtr(v string) DatabaseDumpDatabaseTypePtrInput {
	return (*databaseDumpDatabaseTypePtr)(&v)
}

func (*databaseDumpDatabaseTypePtr) ElementType() reflect.Type {
	return databaseDumpDatabaseTypePtrType
}

func (in *databaseDumpDatabaseTypePtr) ToDatabaseDumpDatabaseTypePtrOutput() DatabaseDumpDatabaseTypePtrOutput {
	return pulumi.ToOutput(in).(DatabaseDumpDatabaseTypePtrOutput)
}

func (in *databaseDumpDatabaseTypePtr) ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx context.Context) DatabaseDumpDatabaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseDumpDatabaseTypePtrOutput)
}

func (in *databaseDumpDatabaseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseDumpDatabaseType] {
	return pulumix.Output[*DatabaseDumpDatabaseType]{
		OutputState: in.ToDatabaseDumpDatabaseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
type DatabaseDumpType string

const (
	// The type of the database dump is unknown.
	DatabaseDumpTypeTypeUnspecified = DatabaseDumpType("TYPE_UNSPECIFIED")
	// Database dump is a MySQL dump file.
	DatabaseDumpTypeMysql = DatabaseDumpType("MYSQL")
	// Database dump contains Avro files.
	DatabaseDumpTypeAvro = DatabaseDumpType("AVRO")
)

func (DatabaseDumpType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpType)(nil)).Elem()
}

func (e DatabaseDumpType) ToDatabaseDumpTypeOutput() DatabaseDumpTypeOutput {
	return pulumi.ToOutput(e).(DatabaseDumpTypeOutput)
}

func (e DatabaseDumpType) ToDatabaseDumpTypeOutputWithContext(ctx context.Context) DatabaseDumpTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseDumpTypeOutput)
}

func (e DatabaseDumpType) ToDatabaseDumpTypePtrOutput() DatabaseDumpTypePtrOutput {
	return e.ToDatabaseDumpTypePtrOutputWithContext(context.Background())
}

func (e DatabaseDumpType) ToDatabaseDumpTypePtrOutputWithContext(ctx context.Context) DatabaseDumpTypePtrOutput {
	return DatabaseDumpType(e).ToDatabaseDumpTypeOutputWithContext(ctx).ToDatabaseDumpTypePtrOutputWithContext(ctx)
}

func (e DatabaseDumpType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseDumpType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseDumpTypeOutput struct{ *pulumi.OutputState }

func (DatabaseDumpTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDumpType)(nil)).Elem()
}

func (o DatabaseDumpTypeOutput) ToDatabaseDumpTypeOutput() DatabaseDumpTypeOutput {
	return o
}

func (o DatabaseDumpTypeOutput) ToDatabaseDumpTypeOutputWithContext(ctx context.Context) DatabaseDumpTypeOutput {
	return o
}

func (o DatabaseDumpTypeOutput) ToDatabaseDumpTypePtrOutput() DatabaseDumpTypePtrOutput {
	return o.ToDatabaseDumpTypePtrOutputWithContext(context.Background())
}

func (o DatabaseDumpTypeOutput) ToDatabaseDumpTypePtrOutputWithContext(ctx context.Context) DatabaseDumpTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseDumpType) *DatabaseDumpType {
		return &v
	}).(DatabaseDumpTypePtrOutput)
}

func (o DatabaseDumpTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseDumpTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDumpType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseDumpTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDumpTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDumpType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseDumpTypePtrOutput struct{ *pulumi.OutputState }

func (DatabaseDumpTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDumpType)(nil)).Elem()
}

func (o DatabaseDumpTypePtrOutput) ToDatabaseDumpTypePtrOutput() DatabaseDumpTypePtrOutput {
	return o
}

func (o DatabaseDumpTypePtrOutput) ToDatabaseDumpTypePtrOutputWithContext(ctx context.Context) DatabaseDumpTypePtrOutput {
	return o
}

func (o DatabaseDumpTypePtrOutput) Elem() DatabaseDumpTypeOutput {
	return o.ApplyT(func(v *DatabaseDumpType) DatabaseDumpType {
		if v != nil {
			return *v
		}
		var ret DatabaseDumpType
		return ret
	}).(DatabaseDumpTypeOutput)
}

func (o DatabaseDumpTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDumpTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseDumpType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseDumpTypeInput is an input type that accepts DatabaseDumpTypeArgs and DatabaseDumpTypeOutput values.
// You can construct a concrete instance of `DatabaseDumpTypeInput` via:
//
//	DatabaseDumpTypeArgs{...}
type DatabaseDumpTypeInput interface {
	pulumi.Input

	ToDatabaseDumpTypeOutput() DatabaseDumpTypeOutput
	ToDatabaseDumpTypeOutputWithContext(context.Context) DatabaseDumpTypeOutput
}

var databaseDumpTypePtrType = reflect.TypeOf((**DatabaseDumpType)(nil)).Elem()

type DatabaseDumpTypePtrInput interface {
	pulumi.Input

	ToDatabaseDumpTypePtrOutput() DatabaseDumpTypePtrOutput
	ToDatabaseDumpTypePtrOutputWithContext(context.Context) DatabaseDumpTypePtrOutput
}

type databaseDumpTypePtr string

func DatabaseDumpTypePtr(v string) DatabaseDumpTypePtrInput {
	return (*databaseDumpTypePtr)(&v)
}

func (*databaseDumpTypePtr) ElementType() reflect.Type {
	return databaseDumpTypePtrType
}

func (in *databaseDumpTypePtr) ToDatabaseDumpTypePtrOutput() DatabaseDumpTypePtrOutput {
	return pulumi.ToOutput(in).(DatabaseDumpTypePtrOutput)
}

func (in *databaseDumpTypePtr) ToDatabaseDumpTypePtrOutputWithContext(ctx context.Context) DatabaseDumpTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseDumpTypePtrOutput)
}

func (in *databaseDumpTypePtr) ToOutput(ctx context.Context) pulumix.Output[*DatabaseDumpType] {
	return pulumix.Output[*DatabaseDumpType]{
		OutputState: in.ToDatabaseDumpTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
type HiveMetastoreConfigEndpointProtocol string

const (
	// The protocol is not set.
	HiveMetastoreConfigEndpointProtocolEndpointProtocolUnspecified = HiveMetastoreConfigEndpointProtocol("ENDPOINT_PROTOCOL_UNSPECIFIED")
	// Use the legacy Apache Thrift protocol for the metastore service endpoint.
	HiveMetastoreConfigEndpointProtocolThrift = HiveMetastoreConfigEndpointProtocol("THRIFT")
	// Use the modernized gRPC protocol for the metastore service endpoint.
	HiveMetastoreConfigEndpointProtocolGrpc = HiveMetastoreConfigEndpointProtocol("GRPC")
)

func (HiveMetastoreConfigEndpointProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfigEndpointProtocol)(nil)).Elem()
}

func (e HiveMetastoreConfigEndpointProtocol) ToHiveMetastoreConfigEndpointProtocolOutput() HiveMetastoreConfigEndpointProtocolOutput {
	return pulumi.ToOutput(e).(HiveMetastoreConfigEndpointProtocolOutput)
}

func (e HiveMetastoreConfigEndpointProtocol) ToHiveMetastoreConfigEndpointProtocolOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HiveMetastoreConfigEndpointProtocolOutput)
}

func (e HiveMetastoreConfigEndpointProtocol) ToHiveMetastoreConfigEndpointProtocolPtrOutput() HiveMetastoreConfigEndpointProtocolPtrOutput {
	return e.ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(context.Background())
}

func (e HiveMetastoreConfigEndpointProtocol) ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolPtrOutput {
	return HiveMetastoreConfigEndpointProtocol(e).ToHiveMetastoreConfigEndpointProtocolOutputWithContext(ctx).ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx)
}

func (e HiveMetastoreConfigEndpointProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HiveMetastoreConfigEndpointProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HiveMetastoreConfigEndpointProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HiveMetastoreConfigEndpointProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HiveMetastoreConfigEndpointProtocolOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigEndpointProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveMetastoreConfigEndpointProtocol)(nil)).Elem()
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToHiveMetastoreConfigEndpointProtocolOutput() HiveMetastoreConfigEndpointProtocolOutput {
	return o
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToHiveMetastoreConfigEndpointProtocolOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolOutput {
	return o
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToHiveMetastoreConfigEndpointProtocolPtrOutput() HiveMetastoreConfigEndpointProtocolPtrOutput {
	return o.ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HiveMetastoreConfigEndpointProtocol) *HiveMetastoreConfigEndpointProtocol {
		return &v
	}).(HiveMetastoreConfigEndpointProtocolPtrOutput)
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HiveMetastoreConfigEndpointProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigEndpointProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HiveMetastoreConfigEndpointProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HiveMetastoreConfigEndpointProtocolPtrOutput struct{ *pulumi.OutputState }

func (HiveMetastoreConfigEndpointProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveMetastoreConfigEndpointProtocol)(nil)).Elem()
}

func (o HiveMetastoreConfigEndpointProtocolPtrOutput) ToHiveMetastoreConfigEndpointProtocolPtrOutput() HiveMetastoreConfigEndpointProtocolPtrOutput {
	return o
}

func (o HiveMetastoreConfigEndpointProtocolPtrOutput) ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolPtrOutput {
	return o
}

func (o HiveMetastoreConfigEndpointProtocolPtrOutput) Elem() HiveMetastoreConfigEndpointProtocolOutput {
	return o.ApplyT(func(v *HiveMetastoreConfigEndpointProtocol) HiveMetastoreConfigEndpointProtocol {
		if v != nil {
			return *v
		}
		var ret HiveMetastoreConfigEndpointProtocol
		return ret
	}).(HiveMetastoreConfigEndpointProtocolOutput)
}

func (o HiveMetastoreConfigEndpointProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HiveMetastoreConfigEndpointProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HiveMetastoreConfigEndpointProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HiveMetastoreConfigEndpointProtocolInput is an input type that accepts HiveMetastoreConfigEndpointProtocolArgs and HiveMetastoreConfigEndpointProtocolOutput values.
// You can construct a concrete instance of `HiveMetastoreConfigEndpointProtocolInput` via:
//
//	HiveMetastoreConfigEndpointProtocolArgs{...}
type HiveMetastoreConfigEndpointProtocolInput interface {
	pulumi.Input

	ToHiveMetastoreConfigEndpointProtocolOutput() HiveMetastoreConfigEndpointProtocolOutput
	ToHiveMetastoreConfigEndpointProtocolOutputWithContext(context.Context) HiveMetastoreConfigEndpointProtocolOutput
}

var hiveMetastoreConfigEndpointProtocolPtrType = reflect.TypeOf((**HiveMetastoreConfigEndpointProtocol)(nil)).Elem()

type HiveMetastoreConfigEndpointProtocolPtrInput interface {
	pulumi.Input

	ToHiveMetastoreConfigEndpointProtocolPtrOutput() HiveMetastoreConfigEndpointProtocolPtrOutput
	ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(context.Context) HiveMetastoreConfigEndpointProtocolPtrOutput
}

type hiveMetastoreConfigEndpointProtocolPtr string

func HiveMetastoreConfigEndpointProtocolPtr(v string) HiveMetastoreConfigEndpointProtocolPtrInput {
	return (*hiveMetastoreConfigEndpointProtocolPtr)(&v)
}

func (*hiveMetastoreConfigEndpointProtocolPtr) ElementType() reflect.Type {
	return hiveMetastoreConfigEndpointProtocolPtrType
}

func (in *hiveMetastoreConfigEndpointProtocolPtr) ToHiveMetastoreConfigEndpointProtocolPtrOutput() HiveMetastoreConfigEndpointProtocolPtrOutput {
	return pulumi.ToOutput(in).(HiveMetastoreConfigEndpointProtocolPtrOutput)
}

func (in *hiveMetastoreConfigEndpointProtocolPtr) ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx context.Context) HiveMetastoreConfigEndpointProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HiveMetastoreConfigEndpointProtocolPtrOutput)
}

func (in *hiveMetastoreConfigEndpointProtocolPtr) ToOutput(ctx context.Context) pulumix.Output[*HiveMetastoreConfigEndpointProtocol] {
	return pulumix.Output[*HiveMetastoreConfigEndpointProtocol]{
		OutputState: in.ToHiveMetastoreConfigEndpointProtocolPtrOutputWithContext(ctx).OutputState,
	}
}

// The day of week, when the window starts.
type MaintenanceWindowDayOfWeek string

const (
	// The day of the week is unspecified.
	MaintenanceWindowDayOfWeekDayOfWeekUnspecified = MaintenanceWindowDayOfWeek("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	MaintenanceWindowDayOfWeekMonday = MaintenanceWindowDayOfWeek("MONDAY")
	// Tuesday
	MaintenanceWindowDayOfWeekTuesday = MaintenanceWindowDayOfWeek("TUESDAY")
	// Wednesday
	MaintenanceWindowDayOfWeekWednesday = MaintenanceWindowDayOfWeek("WEDNESDAY")
	// Thursday
	MaintenanceWindowDayOfWeekThursday = MaintenanceWindowDayOfWeek("THURSDAY")
	// Friday
	MaintenanceWindowDayOfWeekFriday = MaintenanceWindowDayOfWeek("FRIDAY")
	// Saturday
	MaintenanceWindowDayOfWeekSaturday = MaintenanceWindowDayOfWeek("SATURDAY")
	// Sunday
	MaintenanceWindowDayOfWeekSunday = MaintenanceWindowDayOfWeek("SUNDAY")
)

func (MaintenanceWindowDayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (e MaintenanceWindowDayOfWeek) ToMaintenanceWindowDayOfWeekOutput() MaintenanceWindowDayOfWeekOutput {
	return pulumi.ToOutput(e).(MaintenanceWindowDayOfWeekOutput)
}

func (e MaintenanceWindowDayOfWeek) ToMaintenanceWindowDayOfWeekOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MaintenanceWindowDayOfWeekOutput)
}

func (e MaintenanceWindowDayOfWeek) ToMaintenanceWindowDayOfWeekPtrOutput() MaintenanceWindowDayOfWeekPtrOutput {
	return e.ToMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowDayOfWeek) ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekPtrOutput {
	return MaintenanceWindowDayOfWeek(e).ToMaintenanceWindowDayOfWeekOutputWithContext(ctx).ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx)
}

func (e MaintenanceWindowDayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowDayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowDayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowDayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MaintenanceWindowDayOfWeekOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowDayOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (o MaintenanceWindowDayOfWeekOutput) ToMaintenanceWindowDayOfWeekOutput() MaintenanceWindowDayOfWeekOutput {
	return o
}

func (o MaintenanceWindowDayOfWeekOutput) ToMaintenanceWindowDayOfWeekOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekOutput {
	return o
}

func (o MaintenanceWindowDayOfWeekOutput) ToMaintenanceWindowDayOfWeekPtrOutput() MaintenanceWindowDayOfWeekPtrOutput {
	return o.ToMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowDayOfWeekOutput) ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenanceWindowDayOfWeek) *MaintenanceWindowDayOfWeek {
		return &v
	}).(MaintenanceWindowDayOfWeekPtrOutput)
}

func (o MaintenanceWindowDayOfWeekOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MaintenanceWindowDayOfWeekOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceWindowDayOfWeek) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MaintenanceWindowDayOfWeekOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowDayOfWeekOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MaintenanceWindowDayOfWeek) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MaintenanceWindowDayOfWeekPtrOutput struct{ *pulumi.OutputState }

func (MaintenanceWindowDayOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenanceWindowDayOfWeek)(nil)).Elem()
}

func (o MaintenanceWindowDayOfWeekPtrOutput) ToMaintenanceWindowDayOfWeekPtrOutput() MaintenanceWindowDayOfWeekPtrOutput {
	return o
}

func (o MaintenanceWindowDayOfWeekPtrOutput) ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekPtrOutput {
	return o
}

func (o MaintenanceWindowDayOfWeekPtrOutput) Elem() MaintenanceWindowDayOfWeekOutput {
	return o.ApplyT(func(v *MaintenanceWindowDayOfWeek) MaintenanceWindowDayOfWeek {
		if v != nil {
			return *v
		}
		var ret MaintenanceWindowDayOfWeek
		return ret
	}).(MaintenanceWindowDayOfWeekOutput)
}

func (o MaintenanceWindowDayOfWeekPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MaintenanceWindowDayOfWeekPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MaintenanceWindowDayOfWeek) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MaintenanceWindowDayOfWeekInput is an input type that accepts MaintenanceWindowDayOfWeekArgs and MaintenanceWindowDayOfWeekOutput values.
// You can construct a concrete instance of `MaintenanceWindowDayOfWeekInput` via:
//
//	MaintenanceWindowDayOfWeekArgs{...}
type MaintenanceWindowDayOfWeekInput interface {
	pulumi.Input

	ToMaintenanceWindowDayOfWeekOutput() MaintenanceWindowDayOfWeekOutput
	ToMaintenanceWindowDayOfWeekOutputWithContext(context.Context) MaintenanceWindowDayOfWeekOutput
}

var maintenanceWindowDayOfWeekPtrType = reflect.TypeOf((**MaintenanceWindowDayOfWeek)(nil)).Elem()

type MaintenanceWindowDayOfWeekPtrInput interface {
	pulumi.Input

	ToMaintenanceWindowDayOfWeekPtrOutput() MaintenanceWindowDayOfWeekPtrOutput
	ToMaintenanceWindowDayOfWeekPtrOutputWithContext(context.Context) MaintenanceWindowDayOfWeekPtrOutput
}

type maintenanceWindowDayOfWeekPtr string

func MaintenanceWindowDayOfWeekPtr(v string) MaintenanceWindowDayOfWeekPtrInput {
	return (*maintenanceWindowDayOfWeekPtr)(&v)
}

func (*maintenanceWindowDayOfWeekPtr) ElementType() reflect.Type {
	return maintenanceWindowDayOfWeekPtrType
}

func (in *maintenanceWindowDayOfWeekPtr) ToMaintenanceWindowDayOfWeekPtrOutput() MaintenanceWindowDayOfWeekPtrOutput {
	return pulumi.ToOutput(in).(MaintenanceWindowDayOfWeekPtrOutput)
}

func (in *maintenanceWindowDayOfWeekPtr) ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx context.Context) MaintenanceWindowDayOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MaintenanceWindowDayOfWeekPtrOutput)
}

func (in *maintenanceWindowDayOfWeekPtr) ToOutput(ctx context.Context) pulumix.Output[*MaintenanceWindowDayOfWeek] {
	return pulumix.Output[*MaintenanceWindowDayOfWeek]{
		OutputState: in.ToMaintenanceWindowDayOfWeekPtrOutputWithContext(ctx).OutputState,
	}
}

// An enum of readable instance sizes, with each instance size mapping to a float value (e.g. InstanceSize.EXTRA_SMALL = scaling_factor(0.1))
type ScalingConfigInstanceSize string

const (
	// Unspecified instance size
	ScalingConfigInstanceSizeInstanceSizeUnspecified = ScalingConfigInstanceSize("INSTANCE_SIZE_UNSPECIFIED")
	// Extra small instance size, maps to a scaling factor of 0.1.
	ScalingConfigInstanceSizeExtraSmall = ScalingConfigInstanceSize("EXTRA_SMALL")
	// Small instance size, maps to a scaling factor of 0.5.
	ScalingConfigInstanceSizeSmall = ScalingConfigInstanceSize("SMALL")
	// Medium instance size, maps to a scaling factor of 1.0.
	ScalingConfigInstanceSizeMedium = ScalingConfigInstanceSize("MEDIUM")
	// Large instance size, maps to a scaling factor of 3.0.
	ScalingConfigInstanceSizeLarge = ScalingConfigInstanceSize("LARGE")
	// Extra large instance size, maps to a scaling factor of 6.0.
	ScalingConfigInstanceSizeExtraLarge = ScalingConfigInstanceSize("EXTRA_LARGE")
)

func (ScalingConfigInstanceSize) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigInstanceSize)(nil)).Elem()
}

func (e ScalingConfigInstanceSize) ToScalingConfigInstanceSizeOutput() ScalingConfigInstanceSizeOutput {
	return pulumi.ToOutput(e).(ScalingConfigInstanceSizeOutput)
}

func (e ScalingConfigInstanceSize) ToScalingConfigInstanceSizeOutputWithContext(ctx context.Context) ScalingConfigInstanceSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ScalingConfigInstanceSizeOutput)
}

func (e ScalingConfigInstanceSize) ToScalingConfigInstanceSizePtrOutput() ScalingConfigInstanceSizePtrOutput {
	return e.ToScalingConfigInstanceSizePtrOutputWithContext(context.Background())
}

func (e ScalingConfigInstanceSize) ToScalingConfigInstanceSizePtrOutputWithContext(ctx context.Context) ScalingConfigInstanceSizePtrOutput {
	return ScalingConfigInstanceSize(e).ToScalingConfigInstanceSizeOutputWithContext(ctx).ToScalingConfigInstanceSizePtrOutputWithContext(ctx)
}

func (e ScalingConfigInstanceSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScalingConfigInstanceSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ScalingConfigInstanceSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ScalingConfigInstanceSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ScalingConfigInstanceSizeOutput struct{ *pulumi.OutputState }

func (ScalingConfigInstanceSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigInstanceSize)(nil)).Elem()
}

func (o ScalingConfigInstanceSizeOutput) ToScalingConfigInstanceSizeOutput() ScalingConfigInstanceSizeOutput {
	return o
}

func (o ScalingConfigInstanceSizeOutput) ToScalingConfigInstanceSizeOutputWithContext(ctx context.Context) ScalingConfigInstanceSizeOutput {
	return o
}

func (o ScalingConfigInstanceSizeOutput) ToScalingConfigInstanceSizePtrOutput() ScalingConfigInstanceSizePtrOutput {
	return o.ToScalingConfigInstanceSizePtrOutputWithContext(context.Background())
}

func (o ScalingConfigInstanceSizeOutput) ToScalingConfigInstanceSizePtrOutputWithContext(ctx context.Context) ScalingConfigInstanceSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingConfigInstanceSize) *ScalingConfigInstanceSize {
		return &v
	}).(ScalingConfigInstanceSizePtrOutput)
}

func (o ScalingConfigInstanceSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ScalingConfigInstanceSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalingConfigInstanceSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ScalingConfigInstanceSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalingConfigInstanceSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ScalingConfigInstanceSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ScalingConfigInstanceSizePtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigInstanceSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfigInstanceSize)(nil)).Elem()
}

func (o ScalingConfigInstanceSizePtrOutput) ToScalingConfigInstanceSizePtrOutput() ScalingConfigInstanceSizePtrOutput {
	return o
}

func (o ScalingConfigInstanceSizePtrOutput) ToScalingConfigInstanceSizePtrOutputWithContext(ctx context.Context) ScalingConfigInstanceSizePtrOutput {
	return o
}

func (o ScalingConfigInstanceSizePtrOutput) Elem() ScalingConfigInstanceSizeOutput {
	return o.ApplyT(func(v *ScalingConfigInstanceSize) ScalingConfigInstanceSize {
		if v != nil {
			return *v
		}
		var ret ScalingConfigInstanceSize
		return ret
	}).(ScalingConfigInstanceSizeOutput)
}

func (o ScalingConfigInstanceSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ScalingConfigInstanceSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ScalingConfigInstanceSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ScalingConfigInstanceSizeInput is an input type that accepts ScalingConfigInstanceSizeArgs and ScalingConfigInstanceSizeOutput values.
// You can construct a concrete instance of `ScalingConfigInstanceSizeInput` via:
//
//	ScalingConfigInstanceSizeArgs{...}
type ScalingConfigInstanceSizeInput interface {
	pulumi.Input

	ToScalingConfigInstanceSizeOutput() ScalingConfigInstanceSizeOutput
	ToScalingConfigInstanceSizeOutputWithContext(context.Context) ScalingConfigInstanceSizeOutput
}

var scalingConfigInstanceSizePtrType = reflect.TypeOf((**ScalingConfigInstanceSize)(nil)).Elem()

type ScalingConfigInstanceSizePtrInput interface {
	pulumi.Input

	ToScalingConfigInstanceSizePtrOutput() ScalingConfigInstanceSizePtrOutput
	ToScalingConfigInstanceSizePtrOutputWithContext(context.Context) ScalingConfigInstanceSizePtrOutput
}

type scalingConfigInstanceSizePtr string

func ScalingConfigInstanceSizePtr(v string) ScalingConfigInstanceSizePtrInput {
	return (*scalingConfigInstanceSizePtr)(&v)
}

func (*scalingConfigInstanceSizePtr) ElementType() reflect.Type {
	return scalingConfigInstanceSizePtrType
}

func (in *scalingConfigInstanceSizePtr) ToScalingConfigInstanceSizePtrOutput() ScalingConfigInstanceSizePtrOutput {
	return pulumi.ToOutput(in).(ScalingConfigInstanceSizePtrOutput)
}

func (in *scalingConfigInstanceSizePtr) ToScalingConfigInstanceSizePtrOutputWithContext(ctx context.Context) ScalingConfigInstanceSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ScalingConfigInstanceSizePtrOutput)
}

func (in *scalingConfigInstanceSizePtr) ToOutput(ctx context.Context) pulumix.Output[*ScalingConfigInstanceSize] {
	return pulumix.Output[*ScalingConfigInstanceSize]{
		OutputState: in.ToScalingConfigInstanceSizePtrOutputWithContext(ctx).OutputState,
	}
}

// Immutable. The database type that the Metastore service stores its data.
type ServiceDatabaseType string

const (
	// The DATABASE_TYPE is not set.
	ServiceDatabaseTypeDatabaseTypeUnspecified = ServiceDatabaseType("DATABASE_TYPE_UNSPECIFIED")
	// MySQL is used to persist the metastore data.
	ServiceDatabaseTypeMysql = ServiceDatabaseType("MYSQL")
	// Spanner is used to persist the metastore data.
	ServiceDatabaseTypeSpanner = ServiceDatabaseType("SPANNER")
)

func (ServiceDatabaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDatabaseType)(nil)).Elem()
}

func (e ServiceDatabaseType) ToServiceDatabaseTypeOutput() ServiceDatabaseTypeOutput {
	return pulumi.ToOutput(e).(ServiceDatabaseTypeOutput)
}

func (e ServiceDatabaseType) ToServiceDatabaseTypeOutputWithContext(ctx context.Context) ServiceDatabaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceDatabaseTypeOutput)
}

func (e ServiceDatabaseType) ToServiceDatabaseTypePtrOutput() ServiceDatabaseTypePtrOutput {
	return e.ToServiceDatabaseTypePtrOutputWithContext(context.Background())
}

func (e ServiceDatabaseType) ToServiceDatabaseTypePtrOutputWithContext(ctx context.Context) ServiceDatabaseTypePtrOutput {
	return ServiceDatabaseType(e).ToServiceDatabaseTypeOutputWithContext(ctx).ToServiceDatabaseTypePtrOutputWithContext(ctx)
}

func (e ServiceDatabaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceDatabaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceDatabaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceDatabaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceDatabaseTypeOutput struct{ *pulumi.OutputState }

func (ServiceDatabaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDatabaseType)(nil)).Elem()
}

func (o ServiceDatabaseTypeOutput) ToServiceDatabaseTypeOutput() ServiceDatabaseTypeOutput {
	return o
}

func (o ServiceDatabaseTypeOutput) ToServiceDatabaseTypeOutputWithContext(ctx context.Context) ServiceDatabaseTypeOutput {
	return o
}

func (o ServiceDatabaseTypeOutput) ToServiceDatabaseTypePtrOutput() ServiceDatabaseTypePtrOutput {
	return o.ToServiceDatabaseTypePtrOutputWithContext(context.Background())
}

func (o ServiceDatabaseTypeOutput) ToServiceDatabaseTypePtrOutputWithContext(ctx context.Context) ServiceDatabaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDatabaseType) *ServiceDatabaseType {
		return &v
	}).(ServiceDatabaseTypePtrOutput)
}

func (o ServiceDatabaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceDatabaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceDatabaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceDatabaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceDatabaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceDatabaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceDatabaseTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceDatabaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDatabaseType)(nil)).Elem()
}

func (o ServiceDatabaseTypePtrOutput) ToServiceDatabaseTypePtrOutput() ServiceDatabaseTypePtrOutput {
	return o
}

func (o ServiceDatabaseTypePtrOutput) ToServiceDatabaseTypePtrOutputWithContext(ctx context.Context) ServiceDatabaseTypePtrOutput {
	return o
}

func (o ServiceDatabaseTypePtrOutput) Elem() ServiceDatabaseTypeOutput {
	return o.ApplyT(func(v *ServiceDatabaseType) ServiceDatabaseType {
		if v != nil {
			return *v
		}
		var ret ServiceDatabaseType
		return ret
	}).(ServiceDatabaseTypeOutput)
}

func (o ServiceDatabaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceDatabaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceDatabaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceDatabaseTypeInput is an input type that accepts ServiceDatabaseTypeArgs and ServiceDatabaseTypeOutput values.
// You can construct a concrete instance of `ServiceDatabaseTypeInput` via:
//
//	ServiceDatabaseTypeArgs{...}
type ServiceDatabaseTypeInput interface {
	pulumi.Input

	ToServiceDatabaseTypeOutput() ServiceDatabaseTypeOutput
	ToServiceDatabaseTypeOutputWithContext(context.Context) ServiceDatabaseTypeOutput
}

var serviceDatabaseTypePtrType = reflect.TypeOf((**ServiceDatabaseType)(nil)).Elem()

type ServiceDatabaseTypePtrInput interface {
	pulumi.Input

	ToServiceDatabaseTypePtrOutput() ServiceDatabaseTypePtrOutput
	ToServiceDatabaseTypePtrOutputWithContext(context.Context) ServiceDatabaseTypePtrOutput
}

type serviceDatabaseTypePtr string

func ServiceDatabaseTypePtr(v string) ServiceDatabaseTypePtrInput {
	return (*serviceDatabaseTypePtr)(&v)
}

func (*serviceDatabaseTypePtr) ElementType() reflect.Type {
	return serviceDatabaseTypePtrType
}

func (in *serviceDatabaseTypePtr) ToServiceDatabaseTypePtrOutput() ServiceDatabaseTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceDatabaseTypePtrOutput)
}

func (in *serviceDatabaseTypePtr) ToServiceDatabaseTypePtrOutputWithContext(ctx context.Context) ServiceDatabaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceDatabaseTypePtrOutput)
}

func (in *serviceDatabaseTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ServiceDatabaseType] {
	return pulumix.Output[*ServiceDatabaseType]{
		OutputState: in.ToServiceDatabaseTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
type ServiceReleaseChannel string

const (
	// Release channel is not specified.
	ServiceReleaseChannelReleaseChannelUnspecified = ServiceReleaseChannel("RELEASE_CHANNEL_UNSPECIFIED")
	// The CANARY release channel contains the newest features, which may be unstable and subject to unresolved issues with no known workarounds. Services using the CANARY release channel are not subject to any SLAs.
	ServiceReleaseChannelCanary = ServiceReleaseChannel("CANARY")
	// The STABLE release channel contains features that are considered stable and have been validated for production use.
	ServiceReleaseChannelStable = ServiceReleaseChannel("STABLE")
)

func (ServiceReleaseChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReleaseChannel)(nil)).Elem()
}

func (e ServiceReleaseChannel) ToServiceReleaseChannelOutput() ServiceReleaseChannelOutput {
	return pulumi.ToOutput(e).(ServiceReleaseChannelOutput)
}

func (e ServiceReleaseChannel) ToServiceReleaseChannelOutputWithContext(ctx context.Context) ServiceReleaseChannelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceReleaseChannelOutput)
}

func (e ServiceReleaseChannel) ToServiceReleaseChannelPtrOutput() ServiceReleaseChannelPtrOutput {
	return e.ToServiceReleaseChannelPtrOutputWithContext(context.Background())
}

func (e ServiceReleaseChannel) ToServiceReleaseChannelPtrOutputWithContext(ctx context.Context) ServiceReleaseChannelPtrOutput {
	return ServiceReleaseChannel(e).ToServiceReleaseChannelOutputWithContext(ctx).ToServiceReleaseChannelPtrOutputWithContext(ctx)
}

func (e ServiceReleaseChannel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceReleaseChannel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceReleaseChannel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceReleaseChannel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceReleaseChannelOutput struct{ *pulumi.OutputState }

func (ServiceReleaseChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReleaseChannel)(nil)).Elem()
}

func (o ServiceReleaseChannelOutput) ToServiceReleaseChannelOutput() ServiceReleaseChannelOutput {
	return o
}

func (o ServiceReleaseChannelOutput) ToServiceReleaseChannelOutputWithContext(ctx context.Context) ServiceReleaseChannelOutput {
	return o
}

func (o ServiceReleaseChannelOutput) ToServiceReleaseChannelPtrOutput() ServiceReleaseChannelPtrOutput {
	return o.ToServiceReleaseChannelPtrOutputWithContext(context.Background())
}

func (o ServiceReleaseChannelOutput) ToServiceReleaseChannelPtrOutputWithContext(ctx context.Context) ServiceReleaseChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceReleaseChannel) *ServiceReleaseChannel {
		return &v
	}).(ServiceReleaseChannelPtrOutput)
}

func (o ServiceReleaseChannelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceReleaseChannelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceReleaseChannel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceReleaseChannelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceReleaseChannelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceReleaseChannel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceReleaseChannelPtrOutput struct{ *pulumi.OutputState }

func (ServiceReleaseChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceReleaseChannel)(nil)).Elem()
}

func (o ServiceReleaseChannelPtrOutput) ToServiceReleaseChannelPtrOutput() ServiceReleaseChannelPtrOutput {
	return o
}

func (o ServiceReleaseChannelPtrOutput) ToServiceReleaseChannelPtrOutputWithContext(ctx context.Context) ServiceReleaseChannelPtrOutput {
	return o
}

func (o ServiceReleaseChannelPtrOutput) Elem() ServiceReleaseChannelOutput {
	return o.ApplyT(func(v *ServiceReleaseChannel) ServiceReleaseChannel {
		if v != nil {
			return *v
		}
		var ret ServiceReleaseChannel
		return ret
	}).(ServiceReleaseChannelOutput)
}

func (o ServiceReleaseChannelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceReleaseChannelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceReleaseChannel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceReleaseChannelInput is an input type that accepts ServiceReleaseChannelArgs and ServiceReleaseChannelOutput values.
// You can construct a concrete instance of `ServiceReleaseChannelInput` via:
//
//	ServiceReleaseChannelArgs{...}
type ServiceReleaseChannelInput interface {
	pulumi.Input

	ToServiceReleaseChannelOutput() ServiceReleaseChannelOutput
	ToServiceReleaseChannelOutputWithContext(context.Context) ServiceReleaseChannelOutput
}

var serviceReleaseChannelPtrType = reflect.TypeOf((**ServiceReleaseChannel)(nil)).Elem()

type ServiceReleaseChannelPtrInput interface {
	pulumi.Input

	ToServiceReleaseChannelPtrOutput() ServiceReleaseChannelPtrOutput
	ToServiceReleaseChannelPtrOutputWithContext(context.Context) ServiceReleaseChannelPtrOutput
}

type serviceReleaseChannelPtr string

func ServiceReleaseChannelPtr(v string) ServiceReleaseChannelPtrInput {
	return (*serviceReleaseChannelPtr)(&v)
}

func (*serviceReleaseChannelPtr) ElementType() reflect.Type {
	return serviceReleaseChannelPtrType
}

func (in *serviceReleaseChannelPtr) ToServiceReleaseChannelPtrOutput() ServiceReleaseChannelPtrOutput {
	return pulumi.ToOutput(in).(ServiceReleaseChannelPtrOutput)
}

func (in *serviceReleaseChannelPtr) ToServiceReleaseChannelPtrOutputWithContext(ctx context.Context) ServiceReleaseChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceReleaseChannelPtrOutput)
}

func (in *serviceReleaseChannelPtr) ToOutput(ctx context.Context) pulumix.Output[*ServiceReleaseChannel] {
	return pulumix.Output[*ServiceReleaseChannel]{
		OutputState: in.ToServiceReleaseChannelPtrOutputWithContext(ctx).OutputState,
	}
}

// The tier of the service.
type ServiceTier string

const (
	// The tier is not set.
	ServiceTierTierUnspecified = ServiceTier("TIER_UNSPECIFIED")
	// The developer tier provides limited scalability and no fault tolerance. Good for low-cost proof-of-concept.
	ServiceTierDeveloper = ServiceTier("DEVELOPER")
	// The enterprise tier provides multi-zone high availability, and sufficient scalability for enterprise-level Dataproc Metastore workloads.
	ServiceTierEnterprise = ServiceTier("ENTERPRISE")
)

func (ServiceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTier)(nil)).Elem()
}

func (e ServiceTier) ToServiceTierOutput() ServiceTierOutput {
	return pulumi.ToOutput(e).(ServiceTierOutput)
}

func (e ServiceTier) ToServiceTierOutputWithContext(ctx context.Context) ServiceTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceTierOutput)
}

func (e ServiceTier) ToServiceTierPtrOutput() ServiceTierPtrOutput {
	return e.ToServiceTierPtrOutputWithContext(context.Background())
}

func (e ServiceTier) ToServiceTierPtrOutputWithContext(ctx context.Context) ServiceTierPtrOutput {
	return ServiceTier(e).ToServiceTierOutputWithContext(ctx).ToServiceTierPtrOutputWithContext(ctx)
}

func (e ServiceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceTierOutput struct{ *pulumi.OutputState }

func (ServiceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTier)(nil)).Elem()
}

func (o ServiceTierOutput) ToServiceTierOutput() ServiceTierOutput {
	return o
}

func (o ServiceTierOutput) ToServiceTierOutputWithContext(ctx context.Context) ServiceTierOutput {
	return o
}

func (o ServiceTierOutput) ToServiceTierPtrOutput() ServiceTierPtrOutput {
	return o.ToServiceTierPtrOutputWithContext(context.Background())
}

func (o ServiceTierOutput) ToServiceTierPtrOutputWithContext(ctx context.Context) ServiceTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceTier) *ServiceTier {
		return &v
	}).(ServiceTierPtrOutput)
}

func (o ServiceTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceTierPtrOutput struct{ *pulumi.OutputState }

func (ServiceTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTier)(nil)).Elem()
}

func (o ServiceTierPtrOutput) ToServiceTierPtrOutput() ServiceTierPtrOutput {
	return o
}

func (o ServiceTierPtrOutput) ToServiceTierPtrOutputWithContext(ctx context.Context) ServiceTierPtrOutput {
	return o
}

func (o ServiceTierPtrOutput) Elem() ServiceTierOutput {
	return o.ApplyT(func(v *ServiceTier) ServiceTier {
		if v != nil {
			return *v
		}
		var ret ServiceTier
		return ret
	}).(ServiceTierOutput)
}

func (o ServiceTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceTierInput is an input type that accepts ServiceTierArgs and ServiceTierOutput values.
// You can construct a concrete instance of `ServiceTierInput` via:
//
//	ServiceTierArgs{...}
type ServiceTierInput interface {
	pulumi.Input

	ToServiceTierOutput() ServiceTierOutput
	ToServiceTierOutputWithContext(context.Context) ServiceTierOutput
}

var serviceTierPtrType = reflect.TypeOf((**ServiceTier)(nil)).Elem()

type ServiceTierPtrInput interface {
	pulumi.Input

	ToServiceTierPtrOutput() ServiceTierPtrOutput
	ToServiceTierPtrOutputWithContext(context.Context) ServiceTierPtrOutput
}

type serviceTierPtr string

func ServiceTierPtr(v string) ServiceTierPtrInput {
	return (*serviceTierPtr)(&v)
}

func (*serviceTierPtr) ElementType() reflect.Type {
	return serviceTierPtrType
}

func (in *serviceTierPtr) ToServiceTierPtrOutput() ServiceTierPtrOutput {
	return pulumi.ToOutput(in).(ServiceTierPtrOutput)
}

func (in *serviceTierPtr) ToServiceTierPtrOutputWithContext(ctx context.Context) ServiceTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceTierPtrOutput)
}

func (in *serviceTierPtr) ToOutput(ctx context.Context) pulumix.Output[*ServiceTier] {
	return pulumix.Output[*ServiceTier]{
		OutputState: in.ToServiceTierPtrOutputWithContext(ctx).OutputState,
	}
}

// The output format of the Dataproc Metastore service's logs.
type TelemetryConfigLogFormat string

const (
	// The LOG_FORMAT is not set.
	TelemetryConfigLogFormatLogFormatUnspecified = TelemetryConfigLogFormat("LOG_FORMAT_UNSPECIFIED")
	// Logging output uses the legacy textPayload format.
	TelemetryConfigLogFormatLegacy = TelemetryConfigLogFormat("LEGACY")
	// Logging output uses the jsonPayload format.
	TelemetryConfigLogFormatJson = TelemetryConfigLogFormat("JSON")
)

func (TelemetryConfigLogFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryConfigLogFormat)(nil)).Elem()
}

func (e TelemetryConfigLogFormat) ToTelemetryConfigLogFormatOutput() TelemetryConfigLogFormatOutput {
	return pulumi.ToOutput(e).(TelemetryConfigLogFormatOutput)
}

func (e TelemetryConfigLogFormat) ToTelemetryConfigLogFormatOutputWithContext(ctx context.Context) TelemetryConfigLogFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TelemetryConfigLogFormatOutput)
}

func (e TelemetryConfigLogFormat) ToTelemetryConfigLogFormatPtrOutput() TelemetryConfigLogFormatPtrOutput {
	return e.ToTelemetryConfigLogFormatPtrOutputWithContext(context.Background())
}

func (e TelemetryConfigLogFormat) ToTelemetryConfigLogFormatPtrOutputWithContext(ctx context.Context) TelemetryConfigLogFormatPtrOutput {
	return TelemetryConfigLogFormat(e).ToTelemetryConfigLogFormatOutputWithContext(ctx).ToTelemetryConfigLogFormatPtrOutputWithContext(ctx)
}

func (e TelemetryConfigLogFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TelemetryConfigLogFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TelemetryConfigLogFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TelemetryConfigLogFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TelemetryConfigLogFormatOutput struct{ *pulumi.OutputState }

func (TelemetryConfigLogFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TelemetryConfigLogFormat)(nil)).Elem()
}

func (o TelemetryConfigLogFormatOutput) ToTelemetryConfigLogFormatOutput() TelemetryConfigLogFormatOutput {
	return o
}

func (o TelemetryConfigLogFormatOutput) ToTelemetryConfigLogFormatOutputWithContext(ctx context.Context) TelemetryConfigLogFormatOutput {
	return o
}

func (o TelemetryConfigLogFormatOutput) ToTelemetryConfigLogFormatPtrOutput() TelemetryConfigLogFormatPtrOutput {
	return o.ToTelemetryConfigLogFormatPtrOutputWithContext(context.Background())
}

func (o TelemetryConfigLogFormatOutput) ToTelemetryConfigLogFormatPtrOutputWithContext(ctx context.Context) TelemetryConfigLogFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TelemetryConfigLogFormat) *TelemetryConfigLogFormat {
		return &v
	}).(TelemetryConfigLogFormatPtrOutput)
}

func (o TelemetryConfigLogFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TelemetryConfigLogFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TelemetryConfigLogFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TelemetryConfigLogFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TelemetryConfigLogFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TelemetryConfigLogFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TelemetryConfigLogFormatPtrOutput struct{ *pulumi.OutputState }

func (TelemetryConfigLogFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TelemetryConfigLogFormat)(nil)).Elem()
}

func (o TelemetryConfigLogFormatPtrOutput) ToTelemetryConfigLogFormatPtrOutput() TelemetryConfigLogFormatPtrOutput {
	return o
}

func (o TelemetryConfigLogFormatPtrOutput) ToTelemetryConfigLogFormatPtrOutputWithContext(ctx context.Context) TelemetryConfigLogFormatPtrOutput {
	return o
}

func (o TelemetryConfigLogFormatPtrOutput) Elem() TelemetryConfigLogFormatOutput {
	return o.ApplyT(func(v *TelemetryConfigLogFormat) TelemetryConfigLogFormat {
		if v != nil {
			return *v
		}
		var ret TelemetryConfigLogFormat
		return ret
	}).(TelemetryConfigLogFormatOutput)
}

func (o TelemetryConfigLogFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TelemetryConfigLogFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TelemetryConfigLogFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TelemetryConfigLogFormatInput is an input type that accepts TelemetryConfigLogFormatArgs and TelemetryConfigLogFormatOutput values.
// You can construct a concrete instance of `TelemetryConfigLogFormatInput` via:
//
//	TelemetryConfigLogFormatArgs{...}
type TelemetryConfigLogFormatInput interface {
	pulumi.Input

	ToTelemetryConfigLogFormatOutput() TelemetryConfigLogFormatOutput
	ToTelemetryConfigLogFormatOutputWithContext(context.Context) TelemetryConfigLogFormatOutput
}

var telemetryConfigLogFormatPtrType = reflect.TypeOf((**TelemetryConfigLogFormat)(nil)).Elem()

type TelemetryConfigLogFormatPtrInput interface {
	pulumi.Input

	ToTelemetryConfigLogFormatPtrOutput() TelemetryConfigLogFormatPtrOutput
	ToTelemetryConfigLogFormatPtrOutputWithContext(context.Context) TelemetryConfigLogFormatPtrOutput
}

type telemetryConfigLogFormatPtr string

func TelemetryConfigLogFormatPtr(v string) TelemetryConfigLogFormatPtrInput {
	return (*telemetryConfigLogFormatPtr)(&v)
}

func (*telemetryConfigLogFormatPtr) ElementType() reflect.Type {
	return telemetryConfigLogFormatPtrType
}

func (in *telemetryConfigLogFormatPtr) ToTelemetryConfigLogFormatPtrOutput() TelemetryConfigLogFormatPtrOutput {
	return pulumi.ToOutput(in).(TelemetryConfigLogFormatPtrOutput)
}

func (in *telemetryConfigLogFormatPtr) ToTelemetryConfigLogFormatPtrOutputWithContext(ctx context.Context) TelemetryConfigLogFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TelemetryConfigLogFormatPtrOutput)
}

func (in *telemetryConfigLogFormatPtr) ToOutput(ctx context.Context) pulumix.Output[*TelemetryConfigLogFormat] {
	return pulumix.Output[*TelemetryConfigLogFormat]{
		OutputState: in.ToTelemetryConfigLogFormatPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDumpDatabaseTypeInput)(nil)).Elem(), DatabaseDumpDatabaseType("DATABASE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDumpDatabaseTypePtrInput)(nil)).Elem(), DatabaseDumpDatabaseType("DATABASE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDumpTypeInput)(nil)).Elem(), DatabaseDumpType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDumpTypePtrInput)(nil)).Elem(), DatabaseDumpType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HiveMetastoreConfigEndpointProtocolInput)(nil)).Elem(), HiveMetastoreConfigEndpointProtocol("ENDPOINT_PROTOCOL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HiveMetastoreConfigEndpointProtocolPtrInput)(nil)).Elem(), HiveMetastoreConfigEndpointProtocol("ENDPOINT_PROTOCOL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowDayOfWeekInput)(nil)).Elem(), MaintenanceWindowDayOfWeek("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenanceWindowDayOfWeekPtrInput)(nil)).Elem(), MaintenanceWindowDayOfWeek("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigInstanceSizeInput)(nil)).Elem(), ScalingConfigInstanceSize("INSTANCE_SIZE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigInstanceSizePtrInput)(nil)).Elem(), ScalingConfigInstanceSize("INSTANCE_SIZE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDatabaseTypeInput)(nil)).Elem(), ServiceDatabaseType("DATABASE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDatabaseTypePtrInput)(nil)).Elem(), ServiceDatabaseType("DATABASE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReleaseChannelInput)(nil)).Elem(), ServiceReleaseChannel("RELEASE_CHANNEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReleaseChannelPtrInput)(nil)).Elem(), ServiceReleaseChannel("RELEASE_CHANNEL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTierInput)(nil)).Elem(), ServiceTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTierPtrInput)(nil)).Elem(), ServiceTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryConfigLogFormatInput)(nil)).Elem(), TelemetryConfigLogFormat("LOG_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TelemetryConfigLogFormatPtrInput)(nil)).Elem(), TelemetryConfigLogFormat("LOG_FORMAT_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(DatabaseDumpDatabaseTypeOutput{})
	pulumi.RegisterOutputType(DatabaseDumpDatabaseTypePtrOutput{})
	pulumi.RegisterOutputType(DatabaseDumpTypeOutput{})
	pulumi.RegisterOutputType(DatabaseDumpTypePtrOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigEndpointProtocolOutput{})
	pulumi.RegisterOutputType(HiveMetastoreConfigEndpointProtocolPtrOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowDayOfWeekOutput{})
	pulumi.RegisterOutputType(MaintenanceWindowDayOfWeekPtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigInstanceSizeOutput{})
	pulumi.RegisterOutputType(ScalingConfigInstanceSizePtrOutput{})
	pulumi.RegisterOutputType(ServiceDatabaseTypeOutput{})
	pulumi.RegisterOutputType(ServiceDatabaseTypePtrOutput{})
	pulumi.RegisterOutputType(ServiceReleaseChannelOutput{})
	pulumi.RegisterOutputType(ServiceReleaseChannelPtrOutput{})
	pulumi.RegisterOutputType(ServiceTierOutput{})
	pulumi.RegisterOutputType(ServiceTierPtrOutput{})
	pulumi.RegisterOutputType(TelemetryConfigLogFormatOutput{})
	pulumi.RegisterOutputType(TelemetryConfigLogFormatPtrOutput{})
}
