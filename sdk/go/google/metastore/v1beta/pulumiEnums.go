// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType pulumi.String

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of the database.
type DatabaseDumpDatabaseType pulumi.String

const (
	// The type of the source database is unknown.
	DatabaseDumpDatabaseTypeDatabaseTypeUnspecified = DatabaseDumpDatabaseType("DATABASE_TYPE_UNSPECIFIED")
	// The type of the source database is MySQL.
	DatabaseDumpDatabaseTypeMysql = DatabaseDumpDatabaseType("MYSQL")
)

func (DatabaseDumpDatabaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DatabaseDumpDatabaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpDatabaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpDatabaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseDumpDatabaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. The type of the database dump. If unspecified, defaults to MYSQL.
type DatabaseDumpType pulumi.String

const (
	// The type of the database dump is unknown.
	DatabaseDumpTypeTypeUnspecified = DatabaseDumpType("TYPE_UNSPECIFIED")
	// Database dump is a MySQL dump file.
	DatabaseDumpTypeMysql = DatabaseDumpType("MYSQL")
	// Database dump contains Avro files.
	DatabaseDumpTypeAvro = DatabaseDumpType("AVRO")
)

func (DatabaseDumpType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e DatabaseDumpType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDumpType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseDumpType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The day of week, when the window starts.
type MaintenanceWindowDayOfWeek pulumi.String

const (
	// The day of the week is unspecified.
	MaintenanceWindowDayOfWeekDayOfWeekUnspecified = MaintenanceWindowDayOfWeek("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	MaintenanceWindowDayOfWeekMonday = MaintenanceWindowDayOfWeek("MONDAY")
	// Tuesday
	MaintenanceWindowDayOfWeekTuesday = MaintenanceWindowDayOfWeek("TUESDAY")
	// Wednesday
	MaintenanceWindowDayOfWeekWednesday = MaintenanceWindowDayOfWeek("WEDNESDAY")
	// Thursday
	MaintenanceWindowDayOfWeekThursday = MaintenanceWindowDayOfWeek("THURSDAY")
	// Friday
	MaintenanceWindowDayOfWeekFriday = MaintenanceWindowDayOfWeek("FRIDAY")
	// Saturday
	MaintenanceWindowDayOfWeekSaturday = MaintenanceWindowDayOfWeek("SATURDAY")
	// Sunday
	MaintenanceWindowDayOfWeekSunday = MaintenanceWindowDayOfWeek("SUNDAY")
)

func (MaintenanceWindowDayOfWeek) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e MaintenanceWindowDayOfWeek) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowDayOfWeek) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowDayOfWeek) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowDayOfWeek) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Immutable. The release channel of the service. If unspecified, defaults to STABLE.
type ServiceReleaseChannel pulumi.String

const (
	// Release channel is not specified.
	ServiceReleaseChannelReleaseChannelUnspecified = ServiceReleaseChannel("RELEASE_CHANNEL_UNSPECIFIED")
	// The CANARY release channel contains the newest features, which may be unstable and subject to unresolved issues with no known workarounds. Services using the CANARY release channel are not subject to any SLAs.
	ServiceReleaseChannelCanary = ServiceReleaseChannel("CANARY")
	// The STABLE release channel contains features that are considered stable and have been validated for production use.
	ServiceReleaseChannelStable = ServiceReleaseChannel("STABLE")
)

func (ServiceReleaseChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ServiceReleaseChannel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceReleaseChannel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceReleaseChannel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceReleaseChannel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The tier of the service.
type ServiceTier pulumi.String

const (
	// The tier is not set.
	ServiceTierTierUnspecified = ServiceTier("TIER_UNSPECIFIED")
	// The developer tier provides limited scalability and no fault tolerance. Good for low-cost proof-of-concept.
	ServiceTierDeveloper = ServiceTier("DEVELOPER")
	// The enterprise tier provides multi-zone high availability, and sufficient scalability for enterprise-level Dataproc Metastore workloads.
	ServiceTierEnterprise = ServiceTier("ENTERPRISE")
)

func (ServiceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ServiceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
