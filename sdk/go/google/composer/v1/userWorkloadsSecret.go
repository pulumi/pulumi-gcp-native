// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a user workloads Secret. This method is supported for Cloud Composer environments in versions composer-3.*.*-airflow-*.*.* and newer.
type UserWorkloadsSecret struct {
	pulumi.CustomResourceState

	// Optional. The "data" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/
	Data          pulumi.StringMapOutput `pulumi:"data"`
	EnvironmentId pulumi.StringOutput    `pulumi:"environmentId"`
	Location      pulumi.StringOutput    `pulumi:"location"`
	// Identifier. The resource name of the Secret, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}"
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewUserWorkloadsSecret registers a new resource with the given unique name, arguments, and options.
func NewUserWorkloadsSecret(ctx *pulumi.Context,
	name string, args *UserWorkloadsSecretArgs, opts ...pulumi.ResourceOption) (*UserWorkloadsSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"environmentId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserWorkloadsSecret
	err := ctx.RegisterResource("google-native:composer/v1:UserWorkloadsSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserWorkloadsSecret gets an existing UserWorkloadsSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserWorkloadsSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserWorkloadsSecretState, opts ...pulumi.ResourceOption) (*UserWorkloadsSecret, error) {
	var resource UserWorkloadsSecret
	err := ctx.ReadResource("google-native:composer/v1:UserWorkloadsSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserWorkloadsSecret resources.
type userWorkloadsSecretState struct {
}

type UserWorkloadsSecretState struct {
}

func (UserWorkloadsSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*userWorkloadsSecretState)(nil)).Elem()
}

type userWorkloadsSecretArgs struct {
	// Optional. The "data" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/
	Data          map[string]string `pulumi:"data"`
	EnvironmentId string            `pulumi:"environmentId"`
	Location      *string           `pulumi:"location"`
	// Identifier. The resource name of the Secret, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}"
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a UserWorkloadsSecret resource.
type UserWorkloadsSecretArgs struct {
	// Optional. The "data" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/
	Data          pulumi.StringMapInput
	EnvironmentId pulumi.StringInput
	Location      pulumi.StringPtrInput
	// Identifier. The resource name of the Secret, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}"
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (UserWorkloadsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userWorkloadsSecretArgs)(nil)).Elem()
}

type UserWorkloadsSecretInput interface {
	pulumi.Input

	ToUserWorkloadsSecretOutput() UserWorkloadsSecretOutput
	ToUserWorkloadsSecretOutputWithContext(ctx context.Context) UserWorkloadsSecretOutput
}

func (*UserWorkloadsSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**UserWorkloadsSecret)(nil)).Elem()
}

func (i *UserWorkloadsSecret) ToUserWorkloadsSecretOutput() UserWorkloadsSecretOutput {
	return i.ToUserWorkloadsSecretOutputWithContext(context.Background())
}

func (i *UserWorkloadsSecret) ToUserWorkloadsSecretOutputWithContext(ctx context.Context) UserWorkloadsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserWorkloadsSecretOutput)
}

type UserWorkloadsSecretOutput struct{ *pulumi.OutputState }

func (UserWorkloadsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserWorkloadsSecret)(nil)).Elem()
}

func (o UserWorkloadsSecretOutput) ToUserWorkloadsSecretOutput() UserWorkloadsSecretOutput {
	return o
}

func (o UserWorkloadsSecretOutput) ToUserWorkloadsSecretOutputWithContext(ctx context.Context) UserWorkloadsSecretOutput {
	return o
}

// Optional. The "data" field of Kubernetes Secret, organized in key-value pairs, which can contain sensitive values such as a password, a token, or a key. The values for all keys have to be base64-encoded strings. For details see: https://kubernetes.io/docs/concepts/configuration/secret/
func (o UserWorkloadsSecretOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UserWorkloadsSecret) pulumi.StringMapOutput { return v.Data }).(pulumi.StringMapOutput)
}

func (o UserWorkloadsSecretOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserWorkloadsSecret) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

func (o UserWorkloadsSecretOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *UserWorkloadsSecret) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of the Secret, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}/userWorkloadsSecrets/{userWorkloadsSecretId}"
func (o UserWorkloadsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UserWorkloadsSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o UserWorkloadsSecretOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *UserWorkloadsSecret) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserWorkloadsSecretInput)(nil)).Elem(), &UserWorkloadsSecret{})
	pulumi.RegisterOutputType(UserWorkloadsSecretOutput{})
}
