// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single game server deployment.
func LookupGameServerDeployment(ctx *pulumi.Context, args *LookupGameServerDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupGameServerDeploymentResult, error) {
	var rv LookupGameServerDeploymentResult
	err := ctx.Invoke("google-native:gameservices/v1:getGameServerDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGameServerDeploymentArgs struct {
	GameServerDeploymentId string  `pulumi:"gameServerDeploymentId"`
	Location               string  `pulumi:"location"`
	Project                *string `pulumi:"project"`
}

type LookupGameServerDeploymentResult struct {
	// The creation time.
	CreateTime string `pulumi:"createTime"`
	// Human readable description of the game server deployment.
	Description string `pulumi:"description"`
	// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
	Etag string `pulumi:"etag"`
	// The labels associated with this game server deployment. Each label is a key-value pair.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.
	Name string `pulumi:"name"`
	// The last-modified time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupGameServerDeploymentOutput(ctx *pulumi.Context, args LookupGameServerDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupGameServerDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGameServerDeploymentResult, error) {
			args := v.(LookupGameServerDeploymentArgs)
			r, err := LookupGameServerDeployment(ctx, &args, opts...)
			var s LookupGameServerDeploymentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGameServerDeploymentResultOutput)
}

type LookupGameServerDeploymentOutputArgs struct {
	GameServerDeploymentId pulumi.StringInput    `pulumi:"gameServerDeploymentId"`
	Location               pulumi.StringInput    `pulumi:"location"`
	Project                pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupGameServerDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGameServerDeploymentArgs)(nil)).Elem()
}

type LookupGameServerDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupGameServerDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGameServerDeploymentResult)(nil)).Elem()
}

func (o LookupGameServerDeploymentResultOutput) ToLookupGameServerDeploymentResultOutput() LookupGameServerDeploymentResultOutput {
	return o
}

func (o LookupGameServerDeploymentResultOutput) ToLookupGameServerDeploymentResultOutputWithContext(ctx context.Context) LookupGameServerDeploymentResultOutput {
	return o
}

// The creation time.
func (o LookupGameServerDeploymentResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Human readable description of the game server deployment.
func (o LookupGameServerDeploymentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) string { return v.Description }).(pulumi.StringOutput)
}

// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
func (o LookupGameServerDeploymentResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The labels associated with this game server deployment. Each label is a key-value pair.
func (o LookupGameServerDeploymentResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the game server deployment, in the following form: `projects/{project}/locations/{locationId}/gameServerDeployments/{deploymentId}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.
func (o LookupGameServerDeploymentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The last-modified time.
func (o LookupGameServerDeploymentResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGameServerDeploymentResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGameServerDeploymentResultOutput{})
}
