// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new service configuration rollout. Based on rollout, the Google Service Management will roll out the service configurations to different backend services. For example, the logging configuration will be pushed to Google Cloud Logging. Please note that any previous pending and running Rollouts and associated Operations will be automatically cancelled so that the latest Rollout will not be blocked by previous Rollouts. Only the 100 most recent (in any state) and the last 10 successful (if not already part of the set of 100 most recent) rollouts are kept for each service. The rest will be deleted eventually. Operation
type ServiceRollout struct {
	pulumi.CustomResourceState
}

// NewServiceRollout registers a new resource with the given unique name, arguments, and options.
func NewServiceRollout(ctx *pulumi.Context,
	name string, args *ServiceRolloutArgs, opts ...pulumi.ResourceOption) (*ServiceRollout, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RolloutId == nil {
		return nil, errors.New("invalid value for required argument 'RolloutId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource ServiceRollout
	err := ctx.RegisterResource("google-cloud:servicemanagement/v1:ServiceRollout", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceRollout gets an existing ServiceRollout resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceRollout(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceRolloutState, opts ...pulumi.ResourceOption) (*ServiceRollout, error) {
	var resource ServiceRollout
	err := ctx.ReadResource("google-cloud:servicemanagement/v1:ServiceRollout", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceRollout resources.
type serviceRolloutState struct {
}

type ServiceRolloutState struct {
}

func (ServiceRolloutState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRolloutState)(nil)).Elem()
}

type serviceRolloutArgs struct {
	// Creation time of the rollout. Readonly.
	CreateTime *string `pulumi:"createTime"`
	// This field is deprecated and will be deleted. Please remove usage of this field.
	CreatedBy *string `pulumi:"createdBy"`
	// The strategy associated with a rollout to delete a `ManagedService`. Readonly.
	DeleteServiceStrategy *DeleteServiceStrategy `pulumi:"deleteServiceStrategy"`
	// Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where "date" is the create date in ISO 8601 format. "revision number" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'
	RolloutId string `pulumi:"rolloutId"`
	// The name of the service associated with this Rollout.
	ServiceName string `pulumi:"serviceName"`
	// The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.
	Status *string `pulumi:"status"`
	// Google Service Control selects service configurations based on traffic percentage.
	TrafficPercentStrategy *TrafficPercentStrategy `pulumi:"trafficPercentStrategy"`
}

// The set of arguments for constructing a ServiceRollout resource.
type ServiceRolloutArgs struct {
	// Creation time of the rollout. Readonly.
	CreateTime pulumi.StringPtrInput
	// This field is deprecated and will be deleted. Please remove usage of this field.
	CreatedBy pulumi.StringPtrInput
	// The strategy associated with a rollout to delete a `ManagedService`. Readonly.
	DeleteServiceStrategy DeleteServiceStrategyPtrInput
	// Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where "date" is the create date in ISO 8601 format. "revision number" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'
	RolloutId pulumi.StringInput
	// The name of the service associated with this Rollout.
	ServiceName pulumi.StringInput
	// The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.
	Status pulumi.StringPtrInput
	// Google Service Control selects service configurations based on traffic percentage.
	TrafficPercentStrategy TrafficPercentStrategyPtrInput
}

func (ServiceRolloutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRolloutArgs)(nil)).Elem()
}

type ServiceRolloutInput interface {
	pulumi.Input

	ToServiceRolloutOutput() ServiceRolloutOutput
	ToServiceRolloutOutputWithContext(ctx context.Context) ServiceRolloutOutput
}

func (*ServiceRollout) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRollout)(nil))
}

func (i *ServiceRollout) ToServiceRolloutOutput() ServiceRolloutOutput {
	return i.ToServiceRolloutOutputWithContext(context.Background())
}

func (i *ServiceRollout) ToServiceRolloutOutputWithContext(ctx context.Context) ServiceRolloutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRolloutOutput)
}

type ServiceRolloutOutput struct {
	*pulumi.OutputState
}

func (ServiceRolloutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRollout)(nil))
}

func (o ServiceRolloutOutput) ToServiceRolloutOutput() ServiceRolloutOutput {
	return o
}

func (o ServiceRolloutOutput) ToServiceRolloutOutputWithContext(ctx context.Context) ServiceRolloutOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ServiceRolloutOutput{})
}
