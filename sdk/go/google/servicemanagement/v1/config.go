// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new service configuration (version) for a managed service. This method only stores the service configuration. To roll out the service configuration to backend systems please call CreateServiceRollout. Only the 100 most recent service configurations and ones referenced by existing rollouts are kept for each service. The rest will be deleted eventually.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type Config struct {
	pulumi.CustomResourceState

	// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
	Apis ApiResponseArrayOutput `pulumi:"apis"`
	// Auth configuration.
	Authentication AuthenticationResponseOutput `pulumi:"authentication"`
	// API backend configuration.
	Backend BackendResponseOutput `pulumi:"backend"`
	// Billing configuration.
	Billing BillingResponseOutput `pulumi:"billing"`
	// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
	ConfigVersion pulumi.IntOutput `pulumi:"configVersion"`
	// Context configuration.
	Context ContextResponseOutput `pulumi:"context"`
	// Configuration for the service control plane.
	Control ControlResponseOutput `pulumi:"control"`
	// Custom error configuration.
	CustomError CustomErrorResponseOutput `pulumi:"customError"`
	// Additional API documentation.
	Documentation DocumentationResponseOutput `pulumi:"documentation"`
	// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
	Endpoints EndpointResponseArrayOutput `pulumi:"endpoints"`
	// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
	Enums EnumResponseArrayOutput `pulumi:"enums"`
	// HTTP configuration.
	Http HttpResponseOutput `pulumi:"http"`
	// Logging configuration.
	Logging LoggingResponseOutput `pulumi:"logging"`
	// Defines the logs used by this service.
	Logs LogDescriptorResponseArrayOutput `pulumi:"logs"`
	// Defines the metrics used by this service.
	Metrics MetricDescriptorResponseArrayOutput `pulumi:"metrics"`
	// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
	MonitoredResources MonitoredResourceDescriptorResponseArrayOutput `pulumi:"monitoredResources"`
	// Monitoring configuration.
	Monitoring MonitoringResponseOutput `pulumi:"monitoring"`
	// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Google project that owns this service.
	ProducerProjectId pulumi.StringOutput `pulumi:"producerProjectId"`
	// Settings for [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from APIs defined as protocol buffers.
	Publishing PublishingResponseOutput `pulumi:"publishing"`
	// Quota configuration.
	Quota       QuotaResponseOutput `pulumi:"quota"`
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The source information for this configuration if available.
	SourceInfo SourceInfoResponseOutput `pulumi:"sourceInfo"`
	// System parameter configuration.
	SystemParameters SystemParametersResponseOutput `pulumi:"systemParameters"`
	// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
	SystemTypes TypeResponseArrayOutput `pulumi:"systemTypes"`
	// The product title for this service, it is the name displayed in Google Cloud Console.
	Title pulumi.StringOutput `pulumi:"title"`
	// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
	Types TypeResponseArrayOutput `pulumi:"types"`
	// Configuration controlling usage of this service.
	Usage UsageResponseOutput `pulumi:"usage"`
}

// NewConfig registers a new resource with the given unique name, arguments, and options.
func NewConfig(ctx *pulumi.Context,
	name string, args *ConfigArgs, opts ...pulumi.ResourceOption) (*Config, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"serviceName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Config
	err := ctx.RegisterResource("google-native:servicemanagement/v1:Config", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfig gets an existing Config resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigState, opts ...pulumi.ResourceOption) (*Config, error) {
	var resource Config
	err := ctx.ReadResource("google-native:servicemanagement/v1:Config", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Config resources.
type configState struct {
}

type ConfigState struct {
}

func (ConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*configState)(nil)).Elem()
}

type configArgs struct {
	// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
	Apis []Api `pulumi:"apis"`
	// Auth configuration.
	Authentication *Authentication `pulumi:"authentication"`
	// API backend configuration.
	Backend *Backend `pulumi:"backend"`
	// Billing configuration.
	Billing *Billing `pulumi:"billing"`
	// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
	ConfigVersion *int `pulumi:"configVersion"`
	// Context configuration.
	Context *Context `pulumi:"context"`
	// Configuration for the service control plane.
	Control *Control `pulumi:"control"`
	// Custom error configuration.
	CustomError *CustomError `pulumi:"customError"`
	// Additional API documentation.
	Documentation *Documentation `pulumi:"documentation"`
	// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
	Endpoints []Endpoint `pulumi:"endpoints"`
	// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
	Enums []Enum `pulumi:"enums"`
	// HTTP configuration.
	Http *Http `pulumi:"http"`
	// A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead.
	Id *string `pulumi:"id"`
	// Logging configuration.
	Logging *Logging `pulumi:"logging"`
	// Defines the logs used by this service.
	Logs []LogDescriptor `pulumi:"logs"`
	// Defines the metrics used by this service.
	Metrics []MetricDescriptor `pulumi:"metrics"`
	// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
	MonitoredResources []MonitoredResourceDescriptor `pulumi:"monitoredResources"`
	// Monitoring configuration.
	Monitoring *Monitoring `pulumi:"monitoring"`
	// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
	Name *string `pulumi:"name"`
	// The Google project that owns this service.
	ProducerProjectId *string `pulumi:"producerProjectId"`
	// Settings for [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from APIs defined as protocol buffers.
	Publishing *Publishing `pulumi:"publishing"`
	// Quota configuration.
	Quota       *Quota `pulumi:"quota"`
	ServiceName string `pulumi:"serviceName"`
	// System parameter configuration.
	SystemParameters *SystemParameters `pulumi:"systemParameters"`
	// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
	SystemTypes []Type `pulumi:"systemTypes"`
	// The product title for this service, it is the name displayed in Google Cloud Console.
	Title *string `pulumi:"title"`
	// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
	Types []Type `pulumi:"types"`
	// Configuration controlling usage of this service.
	Usage *Usage `pulumi:"usage"`
}

// The set of arguments for constructing a Config resource.
type ConfigArgs struct {
	// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
	Apis ApiArrayInput
	// Auth configuration.
	Authentication AuthenticationPtrInput
	// API backend configuration.
	Backend BackendPtrInput
	// Billing configuration.
	Billing BillingPtrInput
	// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
	ConfigVersion pulumi.IntPtrInput
	// Context configuration.
	Context ContextPtrInput
	// Configuration for the service control plane.
	Control ControlPtrInput
	// Custom error configuration.
	CustomError CustomErrorPtrInput
	// Additional API documentation.
	Documentation DocumentationPtrInput
	// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
	Endpoints EndpointArrayInput
	// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
	Enums EnumArrayInput
	// HTTP configuration.
	Http HttpPtrInput
	// A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead.
	Id pulumi.StringPtrInput
	// Logging configuration.
	Logging LoggingPtrInput
	// Defines the logs used by this service.
	Logs LogDescriptorArrayInput
	// Defines the metrics used by this service.
	Metrics MetricDescriptorArrayInput
	// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
	MonitoredResources MonitoredResourceDescriptorArrayInput
	// Monitoring configuration.
	Monitoring MonitoringPtrInput
	// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
	Name pulumi.StringPtrInput
	// The Google project that owns this service.
	ProducerProjectId pulumi.StringPtrInput
	// Settings for [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from APIs defined as protocol buffers.
	Publishing PublishingPtrInput
	// Quota configuration.
	Quota       QuotaPtrInput
	ServiceName pulumi.StringInput
	// System parameter configuration.
	SystemParameters SystemParametersPtrInput
	// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
	SystemTypes TypeArrayInput
	// The product title for this service, it is the name displayed in Google Cloud Console.
	Title pulumi.StringPtrInput
	// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
	Types TypeArrayInput
	// Configuration controlling usage of this service.
	Usage UsagePtrInput
}

func (ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configArgs)(nil)).Elem()
}

type ConfigInput interface {
	pulumi.Input

	ToConfigOutput() ConfigOutput
	ToConfigOutputWithContext(ctx context.Context) ConfigOutput
}

func (*Config) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (i *Config) ToConfigOutput() ConfigOutput {
	return i.ToConfigOutputWithContext(context.Background())
}

func (i *Config) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput)
}

type ConfigOutput struct{ *pulumi.OutputState }

func (ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (o ConfigOutput) ToConfigOutput() ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return o
}

// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
func (o ConfigOutput) Apis() ApiResponseArrayOutput {
	return o.ApplyT(func(v *Config) ApiResponseArrayOutput { return v.Apis }).(ApiResponseArrayOutput)
}

// Auth configuration.
func (o ConfigOutput) Authentication() AuthenticationResponseOutput {
	return o.ApplyT(func(v *Config) AuthenticationResponseOutput { return v.Authentication }).(AuthenticationResponseOutput)
}

// API backend configuration.
func (o ConfigOutput) Backend() BackendResponseOutput {
	return o.ApplyT(func(v *Config) BackendResponseOutput { return v.Backend }).(BackendResponseOutput)
}

// Billing configuration.
func (o ConfigOutput) Billing() BillingResponseOutput {
	return o.ApplyT(func(v *Config) BillingResponseOutput { return v.Billing }).(BillingResponseOutput)
}

// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
func (o ConfigOutput) ConfigVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Config) pulumi.IntOutput { return v.ConfigVersion }).(pulumi.IntOutput)
}

// Context configuration.
func (o ConfigOutput) Context() ContextResponseOutput {
	return o.ApplyT(func(v *Config) ContextResponseOutput { return v.Context }).(ContextResponseOutput)
}

// Configuration for the service control plane.
func (o ConfigOutput) Control() ControlResponseOutput {
	return o.ApplyT(func(v *Config) ControlResponseOutput { return v.Control }).(ControlResponseOutput)
}

// Custom error configuration.
func (o ConfigOutput) CustomError() CustomErrorResponseOutput {
	return o.ApplyT(func(v *Config) CustomErrorResponseOutput { return v.CustomError }).(CustomErrorResponseOutput)
}

// Additional API documentation.
func (o ConfigOutput) Documentation() DocumentationResponseOutput {
	return o.ApplyT(func(v *Config) DocumentationResponseOutput { return v.Documentation }).(DocumentationResponseOutput)
}

// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
func (o ConfigOutput) Endpoints() EndpointResponseArrayOutput {
	return o.ApplyT(func(v *Config) EndpointResponseArrayOutput { return v.Endpoints }).(EndpointResponseArrayOutput)
}

// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
func (o ConfigOutput) Enums() EnumResponseArrayOutput {
	return o.ApplyT(func(v *Config) EnumResponseArrayOutput { return v.Enums }).(EnumResponseArrayOutput)
}

// HTTP configuration.
func (o ConfigOutput) Http() HttpResponseOutput {
	return o.ApplyT(func(v *Config) HttpResponseOutput { return v.Http }).(HttpResponseOutput)
}

// Logging configuration.
func (o ConfigOutput) Logging() LoggingResponseOutput {
	return o.ApplyT(func(v *Config) LoggingResponseOutput { return v.Logging }).(LoggingResponseOutput)
}

// Defines the logs used by this service.
func (o ConfigOutput) Logs() LogDescriptorResponseArrayOutput {
	return o.ApplyT(func(v *Config) LogDescriptorResponseArrayOutput { return v.Logs }).(LogDescriptorResponseArrayOutput)
}

// Defines the metrics used by this service.
func (o ConfigOutput) Metrics() MetricDescriptorResponseArrayOutput {
	return o.ApplyT(func(v *Config) MetricDescriptorResponseArrayOutput { return v.Metrics }).(MetricDescriptorResponseArrayOutput)
}

// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
func (o ConfigOutput) MonitoredResources() MonitoredResourceDescriptorResponseArrayOutput {
	return o.ApplyT(func(v *Config) MonitoredResourceDescriptorResponseArrayOutput { return v.MonitoredResources }).(MonitoredResourceDescriptorResponseArrayOutput)
}

// Monitoring configuration.
func (o ConfigOutput) Monitoring() MonitoringResponseOutput {
	return o.ApplyT(func(v *Config) MonitoringResponseOutput { return v.Monitoring }).(MonitoringResponseOutput)
}

// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
func (o ConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Google project that owns this service.
func (o ConfigOutput) ProducerProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.ProducerProjectId }).(pulumi.StringOutput)
}

// Settings for [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from APIs defined as protocol buffers.
func (o ConfigOutput) Publishing() PublishingResponseOutput {
	return o.ApplyT(func(v *Config) PublishingResponseOutput { return v.Publishing }).(PublishingResponseOutput)
}

// Quota configuration.
func (o ConfigOutput) Quota() QuotaResponseOutput {
	return o.ApplyT(func(v *Config) QuotaResponseOutput { return v.Quota }).(QuotaResponseOutput)
}

func (o ConfigOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The source information for this configuration if available.
func (o ConfigOutput) SourceInfo() SourceInfoResponseOutput {
	return o.ApplyT(func(v *Config) SourceInfoResponseOutput { return v.SourceInfo }).(SourceInfoResponseOutput)
}

// System parameter configuration.
func (o ConfigOutput) SystemParameters() SystemParametersResponseOutput {
	return o.ApplyT(func(v *Config) SystemParametersResponseOutput { return v.SystemParameters }).(SystemParametersResponseOutput)
}

// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
func (o ConfigOutput) SystemTypes() TypeResponseArrayOutput {
	return o.ApplyT(func(v *Config) TypeResponseArrayOutput { return v.SystemTypes }).(TypeResponseArrayOutput)
}

// The product title for this service, it is the name displayed in Google Cloud Console.
func (o ConfigOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *Config) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
func (o ConfigOutput) Types() TypeResponseArrayOutput {
	return o.ApplyT(func(v *Config) TypeResponseArrayOutput { return v.Types }).(TypeResponseArrayOutput)
}

// Configuration controlling usage of this service.
func (o ConfigOutput) Usage() UsageResponseOutput {
	return o.ApplyT(func(v *Config) UsageResponseOutput { return v.Usage }).(UsageResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInput)(nil)).Elem(), &Config{})
	pulumi.RegisterOutputType(ConfigOutput{})
}
