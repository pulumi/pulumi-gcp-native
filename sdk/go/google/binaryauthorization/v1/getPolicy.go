// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a platform policy. Returns `NOT_FOUND` if the policy doesn't exist.
func LookupPolicy(ctx *pulumi.Context, args *LookupPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyResult
	err := ctx.Invoke("google-native:binaryauthorization/v1:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPolicyArgs struct {
	PlatformId string  `pulumi:"platformId"`
	PolicyId   string  `pulumi:"policyId"`
	Project    *string `pulumi:"project"`
}

type LookupPolicyResult struct {
	// Optional. A description comment about the policy.
	Description string `pulumi:"description"`
	// Optional. GKE platform-specific policy.
	GkePolicy GkePolicyResponse `pulumi:"gkePolicy"`
	// The relative resource name of the Binary Authorization platform policy, in the form of `projects/*/platforms/*/policies/*`.
	Name string `pulumi:"name"`
	// Time when the policy was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupPolicyOutput(ctx *pulumi.Context, args LookupPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicyResult, error) {
			args := v.(LookupPolicyArgs)
			r, err := LookupPolicy(ctx, &args, opts...)
			var s LookupPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicyResultOutput)
}

type LookupPolicyOutputArgs struct {
	PlatformId pulumi.StringInput    `pulumi:"platformId"`
	PolicyId   pulumi.StringInput    `pulumi:"policyId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyArgs)(nil)).Elem()
}

type LookupPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyResult)(nil)).Elem()
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutput() LookupPolicyResultOutput {
	return o
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutputWithContext(ctx context.Context) LookupPolicyResultOutput {
	return o
}

// Optional. A description comment about the policy.
func (o LookupPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. GKE platform-specific policy.
func (o LookupPolicyResultOutput) GkePolicy() GkePolicyResponseOutput {
	return o.ApplyT(func(v LookupPolicyResult) GkePolicyResponse { return v.GkePolicy }).(GkePolicyResponseOutput)
}

// The relative resource name of the Binary Authorization platform policy, in the form of `projects/*/platforms/*/policies/*`.
func (o LookupPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Time when the policy was last updated.
func (o LookupPolicyResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyResultOutput{})
}
