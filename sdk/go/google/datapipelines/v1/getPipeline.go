// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Looks up a single pipeline. Returns a "NOT_FOUND" error if no such pipeline exists. Returns a "FORBIDDEN" error if the caller doesn't have permission to access it.
func LookupPipeline(ctx *pulumi.Context, args *LookupPipelineArgs, opts ...pulumi.InvokeOption) (*LookupPipelineResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPipelineResult
	err := ctx.Invoke("google-native:datapipelines/v1:getPipeline", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPipelineArgs struct {
	Location   string  `pulumi:"location"`
	PipelineId string  `pulumi:"pipelineId"`
	Project    *string `pulumi:"project"`
}

type LookupPipelineResult struct {
	// Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
	CreateTime string `pulumi:"createTime"`
	// The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
	DisplayName string `pulumi:"displayName"`
	// Number of jobs.
	JobCount int `pulumi:"jobCount"`
	// Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.
	Name string `pulumi:"name"`
	// Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
	PipelineSources map[string]string `pulumi:"pipelineSources"`
	// Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the schedule. If not, users are responsible for creating jobs externally.
	ScheduleInfo GoogleCloudDatapipelinesV1ScheduleSpecResponse `pulumi:"scheduleInfo"`
	// Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
	SchedulerServiceAccountEmail string `pulumi:"schedulerServiceAccountEmail"`
	// The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
	State string `pulumi:"state"`
	// The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
	Type string `pulumi:"type"`
	// Workload information for creating new jobs.
	Workload GoogleCloudDatapipelinesV1WorkloadResponse `pulumi:"workload"`
}

func LookupPipelineOutput(ctx *pulumi.Context, args LookupPipelineOutputArgs, opts ...pulumi.InvokeOption) LookupPipelineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPipelineResult, error) {
			args := v.(LookupPipelineArgs)
			r, err := LookupPipeline(ctx, &args, opts...)
			var s LookupPipelineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPipelineResultOutput)
}

type LookupPipelineOutputArgs struct {
	Location   pulumi.StringInput    `pulumi:"location"`
	PipelineId pulumi.StringInput    `pulumi:"pipelineId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPipelineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineArgs)(nil)).Elem()
}

type LookupPipelineResultOutput struct{ *pulumi.OutputState }

func (LookupPipelineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineResult)(nil)).Elem()
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutput() LookupPipelineResultOutput {
	return o
}

func (o LookupPipelineResultOutput) ToLookupPipelineResultOutputWithContext(ctx context.Context) LookupPipelineResultOutput {
	return o
}

func (o LookupPipelineResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupPipelineResult] {
	return pulumix.Output[LookupPipelineResult]{
		OutputState: o.OutputState,
	}
}

// Immutable. The timestamp when the pipeline was initially created. Set by the Data Pipelines service.
func (o LookupPipelineResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The display name of the pipeline. It can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), and underscores (_).
func (o LookupPipelineResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Number of jobs.
func (o LookupPipelineResultOutput) JobCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPipelineResult) int { return v.JobCount }).(pulumi.IntOutput)
}

// Immutable. The timestamp when the pipeline was last modified. Set by the Data Pipelines service.
func (o LookupPipelineResultOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The pipeline name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/pipelines/PIPELINE_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), and periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects). * `LOCATION_ID` is the canonical ID for the pipeline's location. The list of available locations can be obtained by calling `google.cloud.location.Locations.ListLocations`. Note that the Data Pipelines service is not available in all regions. It depends on Cloud Scheduler, an App Engine application, so it's only available in [App Engine regions](https://cloud.google.com/about/locations#region). * `PIPELINE_ID` is the ID of the pipeline. Must be unique for the selected project and location.
func (o LookupPipelineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The sources of the pipeline (for example, Dataplex). The keys and values are set by the corresponding sources during pipeline creation.
func (o LookupPipelineResultOutput) PipelineSources() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPipelineResult) map[string]string { return v.PipelineSources }).(pulumi.StringMapOutput)
}

// Internal scheduling information for a pipeline. If this information is provided, periodic jobs will be created per the schedule. If not, users are responsible for creating jobs externally.
func (o LookupPipelineResultOutput) ScheduleInfo() GoogleCloudDatapipelinesV1ScheduleSpecResponseOutput {
	return o.ApplyT(func(v LookupPipelineResult) GoogleCloudDatapipelinesV1ScheduleSpecResponse { return v.ScheduleInfo }).(GoogleCloudDatapipelinesV1ScheduleSpecResponseOutput)
}

// Optional. A service account email to be used with the Cloud Scheduler job. If not specified, the default compute engine service account will be used.
func (o LookupPipelineResultOutput) SchedulerServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.SchedulerServiceAccountEmail }).(pulumi.StringOutput)
}

// The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
func (o LookupPipelineResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.State }).(pulumi.StringOutput)
}

// The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
func (o LookupPipelineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPipelineResult) string { return v.Type }).(pulumi.StringOutput)
}

// Workload information for creating new jobs.
func (o LookupPipelineResultOutput) Workload() GoogleCloudDatapipelinesV1WorkloadResponseOutput {
	return o.ApplyT(func(v LookupPipelineResult) GoogleCloudDatapipelinesV1WorkloadResponse { return v.Workload }).(GoogleCloudDatapipelinesV1WorkloadResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPipelineResultOutput{})
}
