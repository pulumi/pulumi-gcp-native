// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single CloneJob.
func LookupCloneJob(ctx *pulumi.Context, args *LookupCloneJobArgs, opts ...pulumi.InvokeOption) (*LookupCloneJobResult, error) {
	var rv LookupCloneJobResult
	err := ctx.Invoke("google-native:vmmigration/v1alpha1:getCloneJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCloneJobArgs struct {
	CloneJobId    string  `pulumi:"cloneJobId"`
	Location      string  `pulumi:"location"`
	MigratingVmId string  `pulumi:"migratingVmId"`
	Project       *string `pulumi:"project"`
	SourceId      string  `pulumi:"sourceId"`
}

type LookupCloneJobResult struct {
	// Details of the target VM in Compute Engine.
	ComputeEngineTargetDetails ComputeEngineTargetDetailsResponse `pulumi:"computeEngineTargetDetails"`
	// Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.
	//
	// Deprecated: Output only. Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.
	ComputeEngineVmDetails TargetVMDetailsResponse `pulumi:"computeEngineVmDetails"`
	// The time the clone job was created (as an API call, not when it was actually created in the target).
	CreateTime string `pulumi:"createTime"`
	// Provides details for the errors that led to the Clone Job's state.
	Error StatusResponse `pulumi:"error"`
	// The name of the clone.
	Name string `pulumi:"name"`
	// State of the clone job.
	State string `pulumi:"state"`
	// The time the state was last updated.
	StateTime string `pulumi:"stateTime"`
	// Details of the VM to create as the target of this clone job. Deprecated: Use compute_engine_target_details instead.
	//
	// Deprecated: Output only. Details of the VM to create as the target of this clone job. Deprecated: Use compute_engine_target_details instead.
	TargetDetails TargetVMDetailsResponse `pulumi:"targetDetails"`
}

func LookupCloneJobOutput(ctx *pulumi.Context, args LookupCloneJobOutputArgs, opts ...pulumi.InvokeOption) LookupCloneJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloneJobResult, error) {
			args := v.(LookupCloneJobArgs)
			r, err := LookupCloneJob(ctx, &args, opts...)
			return *r, err
		}).(LookupCloneJobResultOutput)
}

type LookupCloneJobOutputArgs struct {
	CloneJobId    pulumi.StringInput    `pulumi:"cloneJobId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	MigratingVmId pulumi.StringInput    `pulumi:"migratingVmId"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	SourceId      pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupCloneJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloneJobArgs)(nil)).Elem()
}

type LookupCloneJobResultOutput struct{ *pulumi.OutputState }

func (LookupCloneJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloneJobResult)(nil)).Elem()
}

func (o LookupCloneJobResultOutput) ToLookupCloneJobResultOutput() LookupCloneJobResultOutput {
	return o
}

func (o LookupCloneJobResultOutput) ToLookupCloneJobResultOutputWithContext(ctx context.Context) LookupCloneJobResultOutput {
	return o
}

// Details of the target VM in Compute Engine.
func (o LookupCloneJobResultOutput) ComputeEngineTargetDetails() ComputeEngineTargetDetailsResponseOutput {
	return o.ApplyT(func(v LookupCloneJobResult) ComputeEngineTargetDetailsResponse { return v.ComputeEngineTargetDetails }).(ComputeEngineTargetDetailsResponseOutput)
}

// Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.
//
// Deprecated: Output only. Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.
func (o LookupCloneJobResultOutput) ComputeEngineVmDetails() TargetVMDetailsResponseOutput {
	return o.ApplyT(func(v LookupCloneJobResult) TargetVMDetailsResponse { return v.ComputeEngineVmDetails }).(TargetVMDetailsResponseOutput)
}

// The time the clone job was created (as an API call, not when it was actually created in the target).
func (o LookupCloneJobResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloneJobResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Provides details for the errors that led to the Clone Job's state.
func (o LookupCloneJobResultOutput) Error() StatusResponseOutput {
	return o.ApplyT(func(v LookupCloneJobResult) StatusResponse { return v.Error }).(StatusResponseOutput)
}

// The name of the clone.
func (o LookupCloneJobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloneJobResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the clone job.
func (o LookupCloneJobResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloneJobResult) string { return v.State }).(pulumi.StringOutput)
}

// The time the state was last updated.
func (o LookupCloneJobResultOutput) StateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloneJobResult) string { return v.StateTime }).(pulumi.StringOutput)
}

// Details of the VM to create as the target of this clone job. Deprecated: Use compute_engine_target_details instead.
//
// Deprecated: Output only. Details of the VM to create as the target of this clone job. Deprecated: Use compute_engine_target_details instead.
func (o LookupCloneJobResultOutput) TargetDetails() TargetVMDetailsResponseOutput {
	return o.ApplyT(func(v LookupCloneJobResult) TargetVMDetailsResponse { return v.TargetDetails }).(TargetVMDetailsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloneJobResultOutput{})
}
