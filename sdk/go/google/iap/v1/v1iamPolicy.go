// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy for an Identity-Aware Proxy protected resource. Replaces any existing policy. More information about managing access via IAP can be found at: https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
type V1IamPolicy struct {
	pulumi.CustomResourceState
}

// NewV1IamPolicy registers a new resource with the given unique name, arguments, and options.
func NewV1IamPolicy(ctx *pulumi.Context,
	name string, args *V1IamPolicyArgs, opts ...pulumi.ResourceOption) (*V1IamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.V1Id == nil {
		return nil, errors.New("invalid value for required argument 'V1Id'")
	}
	var resource V1IamPolicy
	err := ctx.RegisterResource("google-cloud:iap/v1:V1IamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV1IamPolicy gets an existing V1IamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV1IamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V1IamPolicyState, opts ...pulumi.ResourceOption) (*V1IamPolicy, error) {
	var resource V1IamPolicy
	err := ctx.ReadResource("google-cloud:iap/v1:V1IamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V1IamPolicy resources.
type v1iamPolicyState struct {
}

type V1IamPolicyState struct {
}

func (V1IamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*v1iamPolicyState)(nil)).Elem()
}

type v1iamPolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy *Policy `pulumi:"policy"`
	V1Id   string  `pulumi:"v1Id"`
}

// The set of arguments for constructing a V1IamPolicy resource.
type V1IamPolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy PolicyPtrInput
	V1Id   pulumi.StringInput
}

func (V1IamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v1iamPolicyArgs)(nil)).Elem()
}

type V1IamPolicyInput interface {
	pulumi.Input

	ToV1IamPolicyOutput() V1IamPolicyOutput
	ToV1IamPolicyOutputWithContext(ctx context.Context) V1IamPolicyOutput
}

func (*V1IamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*V1IamPolicy)(nil))
}

func (i *V1IamPolicy) ToV1IamPolicyOutput() V1IamPolicyOutput {
	return i.ToV1IamPolicyOutputWithContext(context.Background())
}

func (i *V1IamPolicy) ToV1IamPolicyOutputWithContext(ctx context.Context) V1IamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V1IamPolicyOutput)
}

type V1IamPolicyOutput struct {
	*pulumi.OutputState
}

func (V1IamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*V1IamPolicy)(nil))
}

func (o V1IamPolicyOutput) ToV1IamPolicyOutput() V1IamPolicyOutput {
	return o
}

func (o V1IamPolicyOutput) ToV1IamPolicyOutputWithContext(ctx context.Context) V1IamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(V1IamPolicyOutput{})
}
