// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves an existing TunnelDestGroup.
func LookupDestGroup(ctx *pulumi.Context, args *LookupDestGroupArgs, opts ...pulumi.InvokeOption) (*LookupDestGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestGroupResult
	err := ctx.Invoke("google-native:iap/v1:getDestGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDestGroupArgs struct {
	DestGroupId string  `pulumi:"destGroupId"`
	Location    string  `pulumi:"location"`
	Project     *string `pulumi:"project"`
}

type LookupDestGroupResult struct {
	// Unordered list. List of CIDRs that this group applies to.
	Cidrs []string `pulumi:"cidrs"`
	// Unordered list. List of FQDNs that this group applies to.
	Fqdns []string `pulumi:"fqdns"`
	// Immutable. Identifier for the TunnelDestGroup. Must be unique within the project and contain only lower case letters (a-z) and dashes (-).
	Name string `pulumi:"name"`
}

func LookupDestGroupOutput(ctx *pulumi.Context, args LookupDestGroupOutputArgs, opts ...pulumi.InvokeOption) LookupDestGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestGroupResult, error) {
			args := v.(LookupDestGroupArgs)
			r, err := LookupDestGroup(ctx, &args, opts...)
			var s LookupDestGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestGroupResultOutput)
}

type LookupDestGroupOutputArgs struct {
	DestGroupId pulumi.StringInput    `pulumi:"destGroupId"`
	Location    pulumi.StringInput    `pulumi:"location"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDestGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestGroupArgs)(nil)).Elem()
}

type LookupDestGroupResultOutput struct{ *pulumi.OutputState }

func (LookupDestGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestGroupResult)(nil)).Elem()
}

func (o LookupDestGroupResultOutput) ToLookupDestGroupResultOutput() LookupDestGroupResultOutput {
	return o
}

func (o LookupDestGroupResultOutput) ToLookupDestGroupResultOutputWithContext(ctx context.Context) LookupDestGroupResultOutput {
	return o
}

func (o LookupDestGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDestGroupResult] {
	return pulumix.Output[LookupDestGroupResult]{
		OutputState: o.OutputState,
	}
}

// Unordered list. List of CIDRs that this group applies to.
func (o LookupDestGroupResultOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDestGroupResult) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// Unordered list. List of FQDNs that this group applies to.
func (o LookupDestGroupResultOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDestGroupResult) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// Immutable. Identifier for the TunnelDestGroup. Must be unique within the project and contain only lower case letters (a-z) and dashes (-).
func (o LookupDestGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestGroupResultOutput{})
}
