// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v4

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves specified tenant.
func LookupTenant(ctx *pulumi.Context, args *LookupTenantArgs, opts ...pulumi.InvokeOption) (*LookupTenantResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTenantResult
	err := ctx.Invoke("google-native:jobs/v4:getTenant", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTenantArgs struct {
	Project  *string `pulumi:"project"`
	TenantId string  `pulumi:"tenantId"`
}

type LookupTenantResult struct {
	// Client side tenant identifier, used to uniquely identify the tenant. The maximum number of allowed characters is 255.
	ExternalId string `pulumi:"externalId"`
	// Required during tenant update. The resource name for a tenant. This is generated by the service when a tenant is created. The format is "projects/{project_id}/tenants/{tenant_id}", for example, "projects/foo/tenants/bar".
	Name string `pulumi:"name"`
}

func LookupTenantOutput(ctx *pulumi.Context, args LookupTenantOutputArgs, opts ...pulumi.InvokeOption) LookupTenantResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTenantResult, error) {
			args := v.(LookupTenantArgs)
			r, err := LookupTenant(ctx, &args, opts...)
			var s LookupTenantResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTenantResultOutput)
}

type LookupTenantOutputArgs struct {
	Project  pulumi.StringPtrInput `pulumi:"project"`
	TenantId pulumi.StringInput    `pulumi:"tenantId"`
}

func (LookupTenantOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTenantArgs)(nil)).Elem()
}

type LookupTenantResultOutput struct{ *pulumi.OutputState }

func (LookupTenantResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTenantResult)(nil)).Elem()
}

func (o LookupTenantResultOutput) ToLookupTenantResultOutput() LookupTenantResultOutput {
	return o
}

func (o LookupTenantResultOutput) ToLookupTenantResultOutputWithContext(ctx context.Context) LookupTenantResultOutput {
	return o
}

func (o LookupTenantResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTenantResult] {
	return pulumix.Output[LookupTenantResult]{
		OutputState: o.OutputState,
	}
}

// Client side tenant identifier, used to uniquely identify the tenant. The maximum number of allowed characters is 255.
func (o LookupTenantResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTenantResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Required during tenant update. The resource name for a tenant. This is generated by the service when a tenant is created. The format is "projects/{project_id}/tenants/{tenant_id}", for example, "projects/foo/tenants/bar".
func (o LookupTenantResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTenantResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTenantResultOutput{})
}
