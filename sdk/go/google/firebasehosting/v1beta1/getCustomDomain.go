// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified `CustomDomain`.
func LookupCustomDomain(ctx *pulumi.Context, args *LookupCustomDomainArgs, opts ...pulumi.InvokeOption) (*LookupCustomDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomDomainResult
	err := ctx.Invoke("google-native:firebasehosting/v1beta1:getCustomDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomDomainArgs struct {
	CustomDomainId string  `pulumi:"customDomainId"`
	Project        *string `pulumi:"project"`
	SiteId         string  `pulumi:"siteId"`
}

type LookupCustomDomainResult struct {
	// Annotations you can add to leave both human- and machine-readable metadata about your `CustomDomain`.
	Annotations map[string]string `pulumi:"annotations"`
	// The SSL certificate Hosting has for this custom domain's domain name. For new custom domains, this often represents Hosting's intent to create a certificate, rather than an actual cert. Check the `state` field for more.
	Cert CertificateResponse `pulumi:"cert"`
	// A field that lets you specify which SSL certificate type Hosting creates for your domain name. Spark plan custom domains only have access to the `GROUPED` cert type, while Blaze plan domains can select any option.
	CertPreference string `pulumi:"certPreference"`
	// The custom domain's create time.
	CreateTime string `pulumi:"createTime"`
	// The time the `CustomDomain` was deleted; null for custom domains that haven't been deleted. Deleted custom domains persist for approximately 30 days, after which time Hosting removes them completely. To restore a deleted custom domain, make an `UndeleteCustomDomain` request.
	DeleteTime string `pulumi:"deleteTime"`
	// A string that represents the current state of the `CustomDomain` and allows you to confirm its initial state in requests that would modify it. Use the tag to ensure consistency when making `UpdateCustomDomain`, `DeleteCustomDomain`, and `UndeleteCustomDomain` requests.
	Etag string `pulumi:"etag"`
	// The minimum time before a soft-deleted `CustomDomain` is completely removed from Hosting; null for custom domains that haven't been deleted.
	ExpireTime string `pulumi:"expireTime"`
	// The `HostState` of the domain name this `CustomDomain` refers to.
	HostState string `pulumi:"hostState"`
	// A set of errors Hosting systems encountered when trying to establish Hosting's ability to serve secure content for your domain name. Resolve these issues to ensure your `CustomDomain` behaves properly.
	Issues []StatusResponse `pulumi:"issues"`
	// Labels used for extra metadata and/or filtering.
	Labels map[string]string `pulumi:"labels"`
	// The fully-qualified name of the `CustomDomain`.
	Name string `pulumi:"name"`
	// The `OwnershipState` of the domain name this `CustomDomain` refers to.
	OwnershipState string `pulumi:"ownershipState"`
	// A field that, if true, indicates that Hosting's systems are attmepting to make the custom domain's state match your preferred state. This is most frequently `true` when initially provisioning a `CustomDomain` after a `CreateCustomDomain` request or when creating a new SSL certificate to match an updated `cert_preference` after an `UpdateCustomDomain` request.
	Reconciling bool `pulumi:"reconciling"`
	// A domain name that this `CustomDomain` should direct traffic towards. If specified, Hosting will respond to requests against this custom domain with an HTTP 301 code, and route traffic to the specified `redirect_target` instead.
	RedirectTarget string `pulumi:"redirectTarget"`
	// A set of updates you should make to the domain name's DNS records to let Hosting serve secure content on its behalf.
	RequiredDnsUpdates DnsUpdatesResponse `pulumi:"requiredDnsUpdates"`
	// The last time the `CustomDomain` was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupCustomDomainOutput(ctx *pulumi.Context, args LookupCustomDomainOutputArgs, opts ...pulumi.InvokeOption) LookupCustomDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomDomainResult, error) {
			args := v.(LookupCustomDomainArgs)
			r, err := LookupCustomDomain(ctx, &args, opts...)
			var s LookupCustomDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomDomainResultOutput)
}

type LookupCustomDomainOutputArgs struct {
	CustomDomainId pulumi.StringInput    `pulumi:"customDomainId"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
	SiteId         pulumi.StringInput    `pulumi:"siteId"`
}

func (LookupCustomDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDomainArgs)(nil)).Elem()
}

type LookupCustomDomainResultOutput struct{ *pulumi.OutputState }

func (LookupCustomDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomDomainResult)(nil)).Elem()
}

func (o LookupCustomDomainResultOutput) ToLookupCustomDomainResultOutput() LookupCustomDomainResultOutput {
	return o
}

func (o LookupCustomDomainResultOutput) ToLookupCustomDomainResultOutputWithContext(ctx context.Context) LookupCustomDomainResultOutput {
	return o
}

// Annotations you can add to leave both human- and machine-readable metadata about your `CustomDomain`.
func (o LookupCustomDomainResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The SSL certificate Hosting has for this custom domain's domain name. For new custom domains, this often represents Hosting's intent to create a certificate, rather than an actual cert. Check the `state` field for more.
func (o LookupCustomDomainResultOutput) Cert() CertificateResponseOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) CertificateResponse { return v.Cert }).(CertificateResponseOutput)
}

// A field that lets you specify which SSL certificate type Hosting creates for your domain name. Spark plan custom domains only have access to the `GROUPED` cert type, while Blaze plan domains can select any option.
func (o LookupCustomDomainResultOutput) CertPreference() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.CertPreference }).(pulumi.StringOutput)
}

// The custom domain's create time.
func (o LookupCustomDomainResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The time the `CustomDomain` was deleted; null for custom domains that haven't been deleted. Deleted custom domains persist for approximately 30 days, after which time Hosting removes them completely. To restore a deleted custom domain, make an `UndeleteCustomDomain` request.
func (o LookupCustomDomainResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// A string that represents the current state of the `CustomDomain` and allows you to confirm its initial state in requests that would modify it. Use the tag to ensure consistency when making `UpdateCustomDomain`, `DeleteCustomDomain`, and `UndeleteCustomDomain` requests.
func (o LookupCustomDomainResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The minimum time before a soft-deleted `CustomDomain` is completely removed from Hosting; null for custom domains that haven't been deleted.
func (o LookupCustomDomainResultOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The `HostState` of the domain name this `CustomDomain` refers to.
func (o LookupCustomDomainResultOutput) HostState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.HostState }).(pulumi.StringOutput)
}

// A set of errors Hosting systems encountered when trying to establish Hosting's ability to serve secure content for your domain name. Resolve these issues to ensure your `CustomDomain` behaves properly.
func (o LookupCustomDomainResultOutput) Issues() StatusResponseArrayOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) []StatusResponse { return v.Issues }).(StatusResponseArrayOutput)
}

// Labels used for extra metadata and/or filtering.
func (o LookupCustomDomainResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The fully-qualified name of the `CustomDomain`.
func (o LookupCustomDomainResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.Name }).(pulumi.StringOutput)
}

// The `OwnershipState` of the domain name this `CustomDomain` refers to.
func (o LookupCustomDomainResultOutput) OwnershipState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.OwnershipState }).(pulumi.StringOutput)
}

// A field that, if true, indicates that Hosting's systems are attmepting to make the custom domain's state match your preferred state. This is most frequently `true` when initially provisioning a `CustomDomain` after a `CreateCustomDomain` request or when creating a new SSL certificate to match an updated `cert_preference` after an `UpdateCustomDomain` request.
func (o LookupCustomDomainResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

// A domain name that this `CustomDomain` should direct traffic towards. If specified, Hosting will respond to requests against this custom domain with an HTTP 301 code, and route traffic to the specified `redirect_target` instead.
func (o LookupCustomDomainResultOutput) RedirectTarget() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.RedirectTarget }).(pulumi.StringOutput)
}

// A set of updates you should make to the domain name's DNS records to let Hosting serve secure content on its behalf.
func (o LookupCustomDomainResultOutput) RequiredDnsUpdates() DnsUpdatesResponseOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) DnsUpdatesResponse { return v.RequiredDnsUpdates }).(DnsUpdatesResponseOutput)
}

// The last time the `CustomDomain` was updated.
func (o LookupCustomDomainResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomDomainResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomDomainResultOutput{})
}
