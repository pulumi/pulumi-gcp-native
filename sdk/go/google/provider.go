// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the Google Cloud package.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.AppendUserAgent == nil {
		args.AppendUserAgent = pulumi.StringPtr(getEnvOrDefault("", nil, "GOOGLE_APPEND_USER_AGENT").(string))
	}
	if args.DisablePartnerName == nil {
		args.DisablePartnerName = pulumi.BoolPtr(getEnvOrDefault(false, parseEnvBool, "GOOGLE_DISABLE_PARTNER_NAME").(bool))
	}
	if args.PartnerName == nil {
		args.PartnerName = pulumi.StringPtr(getEnvOrDefault("", nil, "GOOGLE_PARTNER_NAME").(string))
	}
	if args.Project == nil {
		args.Project = pulumi.StringPtr(getEnvOrDefault("", nil, "GOOGLE_PROJECT", "GOOGLE_CLOUD_PROJECT", "GCLOUD_PROJECT", "CLOUDSDK_CORE_PROJECT").(string))
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:google-native", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Additional user-agent string to append to the default one (<prod_name>/<ver>).
	AppendUserAgent *string `pulumi:"appendUserAgent"`
	// This will disable the Pulumi Partner Name which is used if a custom `partnerName` isn't specified.
	DisablePartnerName *bool `pulumi:"disablePartnerName"`
	// A Google Partner Name to facilitate partner resource usage attribution.
	PartnerName *string `pulumi:"partnerName"`
	// A Google Cloud project name.
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Additional user-agent string to append to the default one (<prod_name>/<ver>).
	AppendUserAgent pulumi.StringPtrInput
	// This will disable the Pulumi Partner Name which is used if a custom `partnerName` isn't specified.
	DisablePartnerName pulumi.BoolPtrInput
	// A Google Partner Name to facilitate partner resource usage attribution.
	PartnerName pulumi.StringPtrInput
	// A Google Cloud project name.
	Project pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct {
	*pulumi.OutputState
}

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Provider)(nil))
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ProviderOutput{})
}
