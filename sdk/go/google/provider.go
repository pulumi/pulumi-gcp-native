// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the Google Cloud package.
type Provider struct {
	pulumi.ProviderResourceState

	// The default project to manage resources in. If another project is specified on a resource, it will take precedence.
	Project pulumi.StringPtrOutput `pulumi:"project"`
	// The default region to manage resources in. If another region is specified on a regional resource, it will take precedence.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The default zone to manage resources in. Generally, this zone should be within the default region you specified. If another zone is specified on a zonal resource, it will take precedence.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.AppendUserAgent == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "GOOGLE_APPEND_USER_AGENT"); d != nil {
			args.AppendUserAgent = pulumi.StringPtr(d.(string))
		}
	}
	if args.DisablePartnerName == nil {
		if d := internal.GetEnvOrDefault(nil, internal.ParseEnvBool, "GOOGLE_DISABLE_PARTNER_NAME"); d != nil {
			args.DisablePartnerName = pulumi.BoolPtr(d.(bool))
		}
	}
	if args.PartnerName == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "GOOGLE_PARTNER_NAME"); d != nil {
			args.PartnerName = pulumi.StringPtr(d.(string))
		}
	}
	if args.Project == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "GOOGLE_PROJECT", "GOOGLE_CLOUD_PROJECT", "GCLOUD_PROJECT", "CLOUDSDK_CORE_PROJECT"); d != nil {
			args.Project = pulumi.StringPtr(d.(string))
		}
	}
	if args.Region == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "GOOGLE_REGION", "GCLOUD_REGION", "CLOUDSDK_COMPUTE_REGION"); d != nil {
			args.Region = pulumi.StringPtr(d.(string))
		}
	}
	if args.Zone == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "GOOGLE_ZONE", "GCLOUD_ZONE", "CLOUDSDK_COMPUTE_ZONE"); d != nil {
			args.Zone = pulumi.StringPtr(d.(string))
		}
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:google-native", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Additional user-agent string to append to the default one (<prod_name>/<ver>).
	AppendUserAgent *string `pulumi:"appendUserAgent"`
	// This will disable the Pulumi Partner Name which is used if a custom `partnerName` isn't specified.
	DisablePartnerName *bool `pulumi:"disablePartnerName"`
	// A Google Partner Name to facilitate partner resource usage attribution.
	PartnerName *string `pulumi:"partnerName"`
	// The default project to manage resources in. If another project is specified on a resource, it will take precedence.
	Project *string `pulumi:"project"`
	// The default region to manage resources in. If another region is specified on a regional resource, it will take precedence.
	Region *string `pulumi:"region"`
	// The default zone to manage resources in. Generally, this zone should be within the default region you specified. If another zone is specified on a zonal resource, it will take precedence.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Additional user-agent string to append to the default one (<prod_name>/<ver>).
	AppendUserAgent pulumi.StringPtrInput
	// This will disable the Pulumi Partner Name which is used if a custom `partnerName` isn't specified.
	DisablePartnerName pulumi.BoolPtrInput
	// A Google Partner Name to facilitate partner resource usage attribution.
	PartnerName pulumi.StringPtrInput
	// The default project to manage resources in. If another project is specified on a resource, it will take precedence.
	Project pulumi.StringPtrInput
	// The default region to manage resources in. If another region is specified on a regional resource, it will take precedence.
	Region pulumi.StringPtrInput
	// The default zone to manage resources in. Generally, this zone should be within the default region you specified. If another zone is specified on a zonal resource, it will take precedence.
	Zone pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The default project to manage resources in. If another project is specified on a resource, it will take precedence.
func (o ProviderOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Project }).(pulumi.StringPtrOutput)
}

// The default region to manage resources in. If another region is specified on a regional resource, it will take precedence.
func (o ProviderOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The default zone to manage resources in. Generally, this zone should be within the default region you specified. If another zone is specified on a zonal resource, it will take precedence.
func (o ProviderOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
