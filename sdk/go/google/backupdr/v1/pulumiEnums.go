// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts values of the AuditLogConfigLogType enum
// A concrete instance of `AuditLogConfigLogTypeInput` can be one of the following:
//
//	AuditLogConfigLogTypeLogTypeUnspecified
//	AuditLogConfigLogTypeAdminRead
//	AuditLogConfigLogTypeDataWrite
//	AuditLogConfigLogTypeDataRead
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of the ManagementServer resource.
type ManagementServerType string

const (
	// Instance type is not mentioned.
	ManagementServerTypeInstanceTypeUnspecified = ManagementServerType("INSTANCE_TYPE_UNSPECIFIED")
	// Instance for backup and restore management (i.e., AGM).
	ManagementServerTypeBackupRestore = ManagementServerType("BACKUP_RESTORE")
)

func (ManagementServerType) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerType)(nil)).Elem()
}

func (e ManagementServerType) ToManagementServerTypeOutput() ManagementServerTypeOutput {
	return pulumi.ToOutput(e).(ManagementServerTypeOutput)
}

func (e ManagementServerType) ToManagementServerTypeOutputWithContext(ctx context.Context) ManagementServerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagementServerTypeOutput)
}

func (e ManagementServerType) ToManagementServerTypePtrOutput() ManagementServerTypePtrOutput {
	return e.ToManagementServerTypePtrOutputWithContext(context.Background())
}

func (e ManagementServerType) ToManagementServerTypePtrOutputWithContext(ctx context.Context) ManagementServerTypePtrOutput {
	return ManagementServerType(e).ToManagementServerTypeOutputWithContext(ctx).ToManagementServerTypePtrOutputWithContext(ctx)
}

func (e ManagementServerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementServerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagementServerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagementServerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagementServerTypeOutput struct{ *pulumi.OutputState }

func (ManagementServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagementServerType)(nil)).Elem()
}

func (o ManagementServerTypeOutput) ToManagementServerTypeOutput() ManagementServerTypeOutput {
	return o
}

func (o ManagementServerTypeOutput) ToManagementServerTypeOutputWithContext(ctx context.Context) ManagementServerTypeOutput {
	return o
}

func (o ManagementServerTypeOutput) ToManagementServerTypePtrOutput() ManagementServerTypePtrOutput {
	return o.ToManagementServerTypePtrOutputWithContext(context.Background())
}

func (o ManagementServerTypeOutput) ToManagementServerTypePtrOutputWithContext(ctx context.Context) ManagementServerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagementServerType) *ManagementServerType {
		return &v
	}).(ManagementServerTypePtrOutput)
}

func (o ManagementServerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagementServerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagementServerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagementServerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagementServerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagementServerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagementServerTypePtrOutput struct{ *pulumi.OutputState }

func (ManagementServerTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementServerType)(nil)).Elem()
}

func (o ManagementServerTypePtrOutput) ToManagementServerTypePtrOutput() ManagementServerTypePtrOutput {
	return o
}

func (o ManagementServerTypePtrOutput) ToManagementServerTypePtrOutputWithContext(ctx context.Context) ManagementServerTypePtrOutput {
	return o
}

func (o ManagementServerTypePtrOutput) Elem() ManagementServerTypeOutput {
	return o.ApplyT(func(v *ManagementServerType) ManagementServerType {
		if v != nil {
			return *v
		}
		var ret ManagementServerType
		return ret
	}).(ManagementServerTypeOutput)
}

func (o ManagementServerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagementServerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagementServerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ManagementServerTypeInput is an input type that accepts values of the ManagementServerType enum
// A concrete instance of `ManagementServerTypeInput` can be one of the following:
//
//	ManagementServerTypeInstanceTypeUnspecified
//	ManagementServerTypeBackupRestore
type ManagementServerTypeInput interface {
	pulumi.Input

	ToManagementServerTypeOutput() ManagementServerTypeOutput
	ToManagementServerTypeOutputWithContext(context.Context) ManagementServerTypeOutput
}

var managementServerTypePtrType = reflect.TypeOf((**ManagementServerType)(nil)).Elem()

type ManagementServerTypePtrInput interface {
	pulumi.Input

	ToManagementServerTypePtrOutput() ManagementServerTypePtrOutput
	ToManagementServerTypePtrOutputWithContext(context.Context) ManagementServerTypePtrOutput
}

type managementServerTypePtr string

func ManagementServerTypePtr(v string) ManagementServerTypePtrInput {
	return (*managementServerTypePtr)(&v)
}

func (*managementServerTypePtr) ElementType() reflect.Type {
	return managementServerTypePtrType
}

func (in *managementServerTypePtr) ToManagementServerTypePtrOutput() ManagementServerTypePtrOutput {
	return pulumi.ToOutput(in).(ManagementServerTypePtrOutput)
}

func (in *managementServerTypePtr) ToManagementServerTypePtrOutputWithContext(ctx context.Context) ManagementServerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagementServerTypePtrOutput)
}

func (in *managementServerTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ManagementServerType] {
	return pulumix.Output[*ManagementServerType]{
		OutputState: in.ToManagementServerTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The network connect mode of the ManagementServer instance. For this version, only PRIVATE_SERVICE_ACCESS is supported.
type NetworkConfigPeeringMode string

const (
	// Peering mode not set.
	NetworkConfigPeeringModePeeringModeUnspecified = NetworkConfigPeeringMode("PEERING_MODE_UNSPECIFIED")
	// Connect using Private Service Access to the Management Server. Private services access provides an IP address range for multiple Google Cloud services, including Cloud BackupDR.
	NetworkConfigPeeringModePrivateServiceAccess = NetworkConfigPeeringMode("PRIVATE_SERVICE_ACCESS")
)

func (NetworkConfigPeeringMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigPeeringMode)(nil)).Elem()
}

func (e NetworkConfigPeeringMode) ToNetworkConfigPeeringModeOutput() NetworkConfigPeeringModeOutput {
	return pulumi.ToOutput(e).(NetworkConfigPeeringModeOutput)
}

func (e NetworkConfigPeeringMode) ToNetworkConfigPeeringModeOutputWithContext(ctx context.Context) NetworkConfigPeeringModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkConfigPeeringModeOutput)
}

func (e NetworkConfigPeeringMode) ToNetworkConfigPeeringModePtrOutput() NetworkConfigPeeringModePtrOutput {
	return e.ToNetworkConfigPeeringModePtrOutputWithContext(context.Background())
}

func (e NetworkConfigPeeringMode) ToNetworkConfigPeeringModePtrOutputWithContext(ctx context.Context) NetworkConfigPeeringModePtrOutput {
	return NetworkConfigPeeringMode(e).ToNetworkConfigPeeringModeOutputWithContext(ctx).ToNetworkConfigPeeringModePtrOutputWithContext(ctx)
}

func (e NetworkConfigPeeringMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigPeeringMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigPeeringMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkConfigPeeringMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkConfigPeeringModeOutput struct{ *pulumi.OutputState }

func (NetworkConfigPeeringModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigPeeringMode)(nil)).Elem()
}

func (o NetworkConfigPeeringModeOutput) ToNetworkConfigPeeringModeOutput() NetworkConfigPeeringModeOutput {
	return o
}

func (o NetworkConfigPeeringModeOutput) ToNetworkConfigPeeringModeOutputWithContext(ctx context.Context) NetworkConfigPeeringModeOutput {
	return o
}

func (o NetworkConfigPeeringModeOutput) ToNetworkConfigPeeringModePtrOutput() NetworkConfigPeeringModePtrOutput {
	return o.ToNetworkConfigPeeringModePtrOutputWithContext(context.Background())
}

func (o NetworkConfigPeeringModeOutput) ToNetworkConfigPeeringModePtrOutputWithContext(ctx context.Context) NetworkConfigPeeringModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConfigPeeringMode) *NetworkConfigPeeringMode {
		return &v
	}).(NetworkConfigPeeringModePtrOutput)
}

func (o NetworkConfigPeeringModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkConfigPeeringModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigPeeringMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkConfigPeeringModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigPeeringModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigPeeringMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkConfigPeeringModePtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigPeeringModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigPeeringMode)(nil)).Elem()
}

func (o NetworkConfigPeeringModePtrOutput) ToNetworkConfigPeeringModePtrOutput() NetworkConfigPeeringModePtrOutput {
	return o
}

func (o NetworkConfigPeeringModePtrOutput) ToNetworkConfigPeeringModePtrOutputWithContext(ctx context.Context) NetworkConfigPeeringModePtrOutput {
	return o
}

func (o NetworkConfigPeeringModePtrOutput) Elem() NetworkConfigPeeringModeOutput {
	return o.ApplyT(func(v *NetworkConfigPeeringMode) NetworkConfigPeeringMode {
		if v != nil {
			return *v
		}
		var ret NetworkConfigPeeringMode
		return ret
	}).(NetworkConfigPeeringModeOutput)
}

func (o NetworkConfigPeeringModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigPeeringModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkConfigPeeringMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkConfigPeeringModeInput is an input type that accepts values of the NetworkConfigPeeringMode enum
// A concrete instance of `NetworkConfigPeeringModeInput` can be one of the following:
//
//	NetworkConfigPeeringModePeeringModeUnspecified
//	NetworkConfigPeeringModePrivateServiceAccess
type NetworkConfigPeeringModeInput interface {
	pulumi.Input

	ToNetworkConfigPeeringModeOutput() NetworkConfigPeeringModeOutput
	ToNetworkConfigPeeringModeOutputWithContext(context.Context) NetworkConfigPeeringModeOutput
}

var networkConfigPeeringModePtrType = reflect.TypeOf((**NetworkConfigPeeringMode)(nil)).Elem()

type NetworkConfigPeeringModePtrInput interface {
	pulumi.Input

	ToNetworkConfigPeeringModePtrOutput() NetworkConfigPeeringModePtrOutput
	ToNetworkConfigPeeringModePtrOutputWithContext(context.Context) NetworkConfigPeeringModePtrOutput
}

type networkConfigPeeringModePtr string

func NetworkConfigPeeringModePtr(v string) NetworkConfigPeeringModePtrInput {
	return (*networkConfigPeeringModePtr)(&v)
}

func (*networkConfigPeeringModePtr) ElementType() reflect.Type {
	return networkConfigPeeringModePtrType
}

func (in *networkConfigPeeringModePtr) ToNetworkConfigPeeringModePtrOutput() NetworkConfigPeeringModePtrOutput {
	return pulumi.ToOutput(in).(NetworkConfigPeeringModePtrOutput)
}

func (in *networkConfigPeeringModePtr) ToNetworkConfigPeeringModePtrOutputWithContext(ctx context.Context) NetworkConfigPeeringModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkConfigPeeringModePtrOutput)
}

func (in *networkConfigPeeringModePtr) ToOutput(ctx context.Context) pulumix.Output[*NetworkConfigPeeringMode] {
	return pulumix.Output[*NetworkConfigPeeringMode]{
		OutputState: in.ToNetworkConfigPeeringModePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerTypeInput)(nil)).Elem(), ManagementServerType("INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerTypePtrInput)(nil)).Elem(), ManagementServerType("INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigPeeringModeInput)(nil)).Elem(), NetworkConfigPeeringMode("PEERING_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigPeeringModePtrInput)(nil)).Elem(), NetworkConfigPeeringMode("PEERING_MODE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(ManagementServerTypeOutput{})
	pulumi.RegisterOutputType(ManagementServerTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigPeeringModeOutput{})
	pulumi.RegisterOutputType(NetworkConfigPeeringModePtrOutput{})
}
