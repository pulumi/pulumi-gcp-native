// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new ManagementServer in a given project and location.
// Auto-naming is currently not supported for this resource.
type ManagementServer struct {
	pulumi.CustomResourceState

	// The time when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The description of the ManagementServer instance (2048 characters or less).
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Server specified ETag for the ManagementServer resource to prevent simultaneous updates from overwiting each other.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. Resource labels to represent user provided metadata. Labels currently defined: 1. migrate_from_go= If set to true, the MS is created in migration ready mode.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Required. The name of the management server to create. The name must be unique for the specified project and location.
	ManagementServerId pulumi.StringOutput `pulumi:"managementServerId"`
	// The hostname or ip address of the exposed AGM endpoints, used by clients to connect to AGM/RD graphical user interface and APIs.
	ManagementUri ManagementURIResponseOutput `pulumi:"managementUri"`
	// The resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// VPC networks to which the ManagementServer instance is connected. For this version, only a single network is supported.
	Networks NetworkConfigResponseArrayOutput `pulumi:"networks"`
	// The OAuth 2.0 client id is required to make API calls to the BackupDR instance API of this ManagementServer. This is the value that should be provided in the ‘aud’ field of the OIDC ID Token (see openid specification https://openid.net/specs/openid-connect-core-1_0.html#IDToken).
	Oauth2ClientId pulumi.StringOutput `pulumi:"oauth2ClientId"`
	Project        pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The ManagementServer state.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of the ManagementServer resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The time when the instance was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The hostnames of the exposed AGM endpoints for both types of user i.e. 1p and 3p, used to connect AGM/RM UI.
	WorkforceIdentityBasedManagementUri WorkforceIdentityBasedManagementURIResponseOutput `pulumi:"workforceIdentityBasedManagementUri"`
	// The OAuth client IDs for both types of user i.e. 1p and 3p.
	WorkforceIdentityBasedOauth2ClientId WorkforceIdentityBasedOAuth2ClientIDResponseOutput `pulumi:"workforceIdentityBasedOauth2ClientId"`
}

// NewManagementServer registers a new resource with the given unique name, arguments, and options.
func NewManagementServer(ctx *pulumi.Context,
	name string, args *ManagementServerArgs, opts ...pulumi.ResourceOption) (*ManagementServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementServerId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementServerId'")
	}
	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"managementServerId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagementServer
	err := ctx.RegisterResource("google-native:backupdr/v1:ManagementServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementServer gets an existing ManagementServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementServerState, opts ...pulumi.ResourceOption) (*ManagementServer, error) {
	var resource ManagementServer
	err := ctx.ReadResource("google-native:backupdr/v1:ManagementServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementServer resources.
type managementServerState struct {
}

type ManagementServerState struct {
}

func (ManagementServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*managementServerState)(nil)).Elem()
}

type managementServerArgs struct {
	// Optional. The description of the ManagementServer instance (2048 characters or less).
	Description *string `pulumi:"description"`
	// Optional. Server specified ETag for the ManagementServer resource to prevent simultaneous updates from overwiting each other.
	Etag *string `pulumi:"etag"`
	// Optional. Resource labels to represent user provided metadata. Labels currently defined: 1. migrate_from_go= If set to true, the MS is created in migration ready mode.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Required. The name of the management server to create. The name must be unique for the specified project and location.
	ManagementServerId string `pulumi:"managementServerId"`
	// VPC networks to which the ManagementServer instance is connected. For this version, only a single network is supported.
	Networks []NetworkConfig `pulumi:"networks"`
	Project  *string         `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// The type of the ManagementServer resource.
	Type ManagementServerType `pulumi:"type"`
}

// The set of arguments for constructing a ManagementServer resource.
type ManagementServerArgs struct {
	// Optional. The description of the ManagementServer instance (2048 characters or less).
	Description pulumi.StringPtrInput
	// Optional. Server specified ETag for the ManagementServer resource to prevent simultaneous updates from overwiting each other.
	Etag pulumi.StringPtrInput
	// Optional. Resource labels to represent user provided metadata. Labels currently defined: 1. migrate_from_go= If set to true, the MS is created in migration ready mode.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Required. The name of the management server to create. The name must be unique for the specified project and location.
	ManagementServerId pulumi.StringInput
	// VPC networks to which the ManagementServer instance is connected. For this version, only a single network is supported.
	Networks NetworkConfigArrayInput
	Project  pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// The type of the ManagementServer resource.
	Type ManagementServerTypeInput
}

func (ManagementServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managementServerArgs)(nil)).Elem()
}

type ManagementServerInput interface {
	pulumi.Input

	ToManagementServerOutput() ManagementServerOutput
	ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput
}

func (*ManagementServer) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementServer)(nil)).Elem()
}

func (i *ManagementServer) ToManagementServerOutput() ManagementServerOutput {
	return i.ToManagementServerOutputWithContext(context.Background())
}

func (i *ManagementServer) ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagementServerOutput)
}

func (i *ManagementServer) ToOutput(ctx context.Context) pulumix.Output[*ManagementServer] {
	return pulumix.Output[*ManagementServer]{
		OutputState: i.ToManagementServerOutputWithContext(ctx).OutputState,
	}
}

type ManagementServerOutput struct{ *pulumi.OutputState }

func (ManagementServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagementServer)(nil)).Elem()
}

func (o ManagementServerOutput) ToManagementServerOutput() ManagementServerOutput {
	return o
}

func (o ManagementServerOutput) ToManagementServerOutputWithContext(ctx context.Context) ManagementServerOutput {
	return o
}

func (o ManagementServerOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagementServer] {
	return pulumix.Output[*ManagementServer]{
		OutputState: o.OutputState,
	}
}

// The time when the instance was created.
func (o ManagementServerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The description of the ManagementServer instance (2048 characters or less).
func (o ManagementServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Server specified ETag for the ManagementServer resource to prevent simultaneous updates from overwiting each other.
func (o ManagementServerOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user provided metadata. Labels currently defined: 1. migrate_from_go= If set to true, the MS is created in migration ready mode.
func (o ManagementServerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ManagementServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Required. The name of the management server to create. The name must be unique for the specified project and location.
func (o ManagementServerOutput) ManagementServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.ManagementServerId }).(pulumi.StringOutput)
}

// The hostname or ip address of the exposed AGM endpoints, used by clients to connect to AGM/RD graphical user interface and APIs.
func (o ManagementServerOutput) ManagementUri() ManagementURIResponseOutput {
	return o.ApplyT(func(v *ManagementServer) ManagementURIResponseOutput { return v.ManagementUri }).(ManagementURIResponseOutput)
}

// The resource name.
func (o ManagementServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VPC networks to which the ManagementServer instance is connected. For this version, only a single network is supported.
func (o ManagementServerOutput) Networks() NetworkConfigResponseArrayOutput {
	return o.ApplyT(func(v *ManagementServer) NetworkConfigResponseArrayOutput { return v.Networks }).(NetworkConfigResponseArrayOutput)
}

// The OAuth 2.0 client id is required to make API calls to the BackupDR instance API of this ManagementServer. This is the value that should be provided in the ‘aud’ field of the OIDC ID Token (see openid specification https://openid.net/specs/openid-connect-core-1_0.html#IDToken).
func (o ManagementServerOutput) Oauth2ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Oauth2ClientId }).(pulumi.StringOutput)
}

func (o ManagementServerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ManagementServerOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The ManagementServer state.
func (o ManagementServerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The type of the ManagementServer resource.
func (o ManagementServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The time when the instance was updated.
func (o ManagementServerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagementServer) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The hostnames of the exposed AGM endpoints for both types of user i.e. 1p and 3p, used to connect AGM/RM UI.
func (o ManagementServerOutput) WorkforceIdentityBasedManagementUri() WorkforceIdentityBasedManagementURIResponseOutput {
	return o.ApplyT(func(v *ManagementServer) WorkforceIdentityBasedManagementURIResponseOutput {
		return v.WorkforceIdentityBasedManagementUri
	}).(WorkforceIdentityBasedManagementURIResponseOutput)
}

// The OAuth client IDs for both types of user i.e. 1p and 3p.
func (o ManagementServerOutput) WorkforceIdentityBasedOauth2ClientId() WorkforceIdentityBasedOAuth2ClientIDResponseOutput {
	return o.ApplyT(func(v *ManagementServer) WorkforceIdentityBasedOAuth2ClientIDResponseOutput {
		return v.WorkforceIdentityBasedOauth2ClientId
	}).(WorkforceIdentityBasedOAuth2ClientIDResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagementServerInput)(nil)).Elem(), &ManagementServer{})
	pulumi.RegisterOutputType(ManagementServerOutput{})
}
