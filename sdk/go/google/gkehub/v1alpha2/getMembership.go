// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of a Membership.
func LookupMembership(ctx *pulumi.Context, args *LookupMembershipArgs, opts ...pulumi.InvokeOption) (*LookupMembershipResult, error) {
	var rv LookupMembershipResult
	err := ctx.Invoke("google-native:gkehub/v1alpha2:getMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMembershipArgs struct {
	Location     string  `pulumi:"location"`
	MembershipId string  `pulumi:"membershipId"`
	Project      *string `pulumi:"project"`
}

type LookupMembershipResult struct {
	// Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority AuthorityResponse `pulumi:"authority"`
	// When the Membership was created.
	CreateTime string `pulumi:"createTime"`
	// When the Membership was deleted.
	DeleteTime string `pulumi:"deleteTime"`
	// Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.
	Description string `pulumi:"description"`
	// Optional. Endpoint information to reach this member.
	Endpoint MembershipEndpointResponse `pulumi:"endpoint"`
	// Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. For GKE clusters, external_id is managed by the Hub API and updates will be ignored. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.
	ExternalId string `pulumi:"externalId"`
	// Optional. The infrastructure type this Membership is running on.
	InfrastructureType string `pulumi:"infrastructureType"`
	// Optional. GCP labels for this membership.
	Labels map[string]string `pulumi:"labels"`
	// For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.
	LastConnectionTime string `pulumi:"lastConnectionTime"`
	// The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.
	Name string `pulumi:"name"`
	// State of the Membership resource.
	State MembershipStateResponse `pulumi:"state"`
	// Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
	UniqueId string `pulumi:"uniqueId"`
	// When the Membership was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupMembershipOutput(ctx *pulumi.Context, args LookupMembershipOutputArgs, opts ...pulumi.InvokeOption) LookupMembershipResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMembershipResult, error) {
			args := v.(LookupMembershipArgs)
			r, err := LookupMembership(ctx, &args, opts...)
			return *r, err
		}).(LookupMembershipResultOutput)
}

type LookupMembershipOutputArgs struct {
	Location     pulumi.StringInput    `pulumi:"location"`
	MembershipId pulumi.StringInput    `pulumi:"membershipId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipArgs)(nil)).Elem()
}

type LookupMembershipResultOutput struct{ *pulumi.OutputState }

func (LookupMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipResult)(nil)).Elem()
}

func (o LookupMembershipResultOutput) ToLookupMembershipResultOutput() LookupMembershipResultOutput {
	return o
}

func (o LookupMembershipResultOutput) ToLookupMembershipResultOutputWithContext(ctx context.Context) LookupMembershipResultOutput {
	return o
}

// Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
func (o LookupMembershipResultOutput) Authority() AuthorityResponseOutput {
	return o.ApplyT(func(v LookupMembershipResult) AuthorityResponse { return v.Authority }).(AuthorityResponseOutput)
}

// When the Membership was created.
func (o LookupMembershipResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// When the Membership was deleted.
func (o LookupMembershipResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.
func (o LookupMembershipResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Endpoint information to reach this member.
func (o LookupMembershipResultOutput) Endpoint() MembershipEndpointResponseOutput {
	return o.ApplyT(func(v LookupMembershipResult) MembershipEndpointResponse { return v.Endpoint }).(MembershipEndpointResponseOutput)
}

// Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. For GKE clusters, external_id is managed by the Hub API and updates will be ignored. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object.
func (o LookupMembershipResultOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Optional. The infrastructure type this Membership is running on.
func (o LookupMembershipResultOutput) InfrastructureType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.InfrastructureType }).(pulumi.StringOutput)
}

// Optional. GCP labels for this membership.
func (o LookupMembershipResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMembershipResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.
func (o LookupMembershipResultOutput) LastConnectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.LastConnectionTime }).(pulumi.StringOutput)
}

// The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.
func (o LookupMembershipResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.Name }).(pulumi.StringOutput)
}

// State of the Membership resource.
func (o LookupMembershipResultOutput) State() MembershipStateResponseOutput {
	return o.ApplyT(func(v LookupMembershipResult) MembershipStateResponse { return v.State }).(MembershipStateResponseOutput)
}

// Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
func (o LookupMembershipResultOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.UniqueId }).(pulumi.StringOutput)
}

// When the Membership was last updated.
func (o LookupMembershipResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMembershipResultOutput{})
}
