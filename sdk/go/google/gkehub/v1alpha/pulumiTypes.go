// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **Anthos Observability**: Spec
type AnthosObservabilityFeatureSpec struct {
	// Default membership spec for unconfigured memberships
	DefaultMembershipSpec *AnthosObservabilityMembershipSpec `pulumi:"defaultMembershipSpec"`
}

// AnthosObservabilityFeatureSpecInput is an input type that accepts AnthosObservabilityFeatureSpecArgs and AnthosObservabilityFeatureSpecOutput values.
// You can construct a concrete instance of `AnthosObservabilityFeatureSpecInput` via:
//
//	AnthosObservabilityFeatureSpecArgs{...}
type AnthosObservabilityFeatureSpecInput interface {
	pulumi.Input

	ToAnthosObservabilityFeatureSpecOutput() AnthosObservabilityFeatureSpecOutput
	ToAnthosObservabilityFeatureSpecOutputWithContext(context.Context) AnthosObservabilityFeatureSpecOutput
}

// **Anthos Observability**: Spec
type AnthosObservabilityFeatureSpecArgs struct {
	// Default membership spec for unconfigured memberships
	DefaultMembershipSpec AnthosObservabilityMembershipSpecPtrInput `pulumi:"defaultMembershipSpec"`
}

func (AnthosObservabilityFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityFeatureSpec)(nil)).Elem()
}

func (i AnthosObservabilityFeatureSpecArgs) ToAnthosObservabilityFeatureSpecOutput() AnthosObservabilityFeatureSpecOutput {
	return i.ToAnthosObservabilityFeatureSpecOutputWithContext(context.Background())
}

func (i AnthosObservabilityFeatureSpecArgs) ToAnthosObservabilityFeatureSpecOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityFeatureSpecOutput)
}

func (i AnthosObservabilityFeatureSpecArgs) ToAnthosObservabilityFeatureSpecPtrOutput() AnthosObservabilityFeatureSpecPtrOutput {
	return i.ToAnthosObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (i AnthosObservabilityFeatureSpecArgs) ToAnthosObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityFeatureSpecOutput).ToAnthosObservabilityFeatureSpecPtrOutputWithContext(ctx)
}

// AnthosObservabilityFeatureSpecPtrInput is an input type that accepts AnthosObservabilityFeatureSpecArgs, AnthosObservabilityFeatureSpecPtr and AnthosObservabilityFeatureSpecPtrOutput values.
// You can construct a concrete instance of `AnthosObservabilityFeatureSpecPtrInput` via:
//
//	        AnthosObservabilityFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type AnthosObservabilityFeatureSpecPtrInput interface {
	pulumi.Input

	ToAnthosObservabilityFeatureSpecPtrOutput() AnthosObservabilityFeatureSpecPtrOutput
	ToAnthosObservabilityFeatureSpecPtrOutputWithContext(context.Context) AnthosObservabilityFeatureSpecPtrOutput
}

type anthosObservabilityFeatureSpecPtrType AnthosObservabilityFeatureSpecArgs

func AnthosObservabilityFeatureSpecPtr(v *AnthosObservabilityFeatureSpecArgs) AnthosObservabilityFeatureSpecPtrInput {
	return (*anthosObservabilityFeatureSpecPtrType)(v)
}

func (*anthosObservabilityFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnthosObservabilityFeatureSpec)(nil)).Elem()
}

func (i *anthosObservabilityFeatureSpecPtrType) ToAnthosObservabilityFeatureSpecPtrOutput() AnthosObservabilityFeatureSpecPtrOutput {
	return i.ToAnthosObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *anthosObservabilityFeatureSpecPtrType) ToAnthosObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityFeatureSpecPtrOutput)
}

// **Anthos Observability**: Spec
type AnthosObservabilityFeatureSpecOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityFeatureSpec)(nil)).Elem()
}

func (o AnthosObservabilityFeatureSpecOutput) ToAnthosObservabilityFeatureSpecOutput() AnthosObservabilityFeatureSpecOutput {
	return o
}

func (o AnthosObservabilityFeatureSpecOutput) ToAnthosObservabilityFeatureSpecOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecOutput {
	return o
}

func (o AnthosObservabilityFeatureSpecOutput) ToAnthosObservabilityFeatureSpecPtrOutput() AnthosObservabilityFeatureSpecPtrOutput {
	return o.ToAnthosObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (o AnthosObservabilityFeatureSpecOutput) ToAnthosObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnthosObservabilityFeatureSpec) *AnthosObservabilityFeatureSpec {
		return &v
	}).(AnthosObservabilityFeatureSpecPtrOutput)
}

// Default membership spec for unconfigured memberships
func (o AnthosObservabilityFeatureSpecOutput) DefaultMembershipSpec() AnthosObservabilityMembershipSpecPtrOutput {
	return o.ApplyT(func(v AnthosObservabilityFeatureSpec) *AnthosObservabilityMembershipSpec {
		return v.DefaultMembershipSpec
	}).(AnthosObservabilityMembershipSpecPtrOutput)
}

type AnthosObservabilityFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnthosObservabilityFeatureSpec)(nil)).Elem()
}

func (o AnthosObservabilityFeatureSpecPtrOutput) ToAnthosObservabilityFeatureSpecPtrOutput() AnthosObservabilityFeatureSpecPtrOutput {
	return o
}

func (o AnthosObservabilityFeatureSpecPtrOutput) ToAnthosObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecPtrOutput {
	return o
}

func (o AnthosObservabilityFeatureSpecPtrOutput) Elem() AnthosObservabilityFeatureSpecOutput {
	return o.ApplyT(func(v *AnthosObservabilityFeatureSpec) AnthosObservabilityFeatureSpec {
		if v != nil {
			return *v
		}
		var ret AnthosObservabilityFeatureSpec
		return ret
	}).(AnthosObservabilityFeatureSpecOutput)
}

// Default membership spec for unconfigured memberships
func (o AnthosObservabilityFeatureSpecPtrOutput) DefaultMembershipSpec() AnthosObservabilityMembershipSpecPtrOutput {
	return o.ApplyT(func(v *AnthosObservabilityFeatureSpec) *AnthosObservabilityMembershipSpec {
		if v == nil {
			return nil
		}
		return v.DefaultMembershipSpec
	}).(AnthosObservabilityMembershipSpecPtrOutput)
}

// **Anthos Observability**: Spec
type AnthosObservabilityFeatureSpecResponse struct {
	// Default membership spec for unconfigured memberships
	DefaultMembershipSpec AnthosObservabilityMembershipSpecResponse `pulumi:"defaultMembershipSpec"`
}

// **Anthos Observability**: Spec
type AnthosObservabilityFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityFeatureSpecResponse)(nil)).Elem()
}

func (o AnthosObservabilityFeatureSpecResponseOutput) ToAnthosObservabilityFeatureSpecResponseOutput() AnthosObservabilityFeatureSpecResponseOutput {
	return o
}

func (o AnthosObservabilityFeatureSpecResponseOutput) ToAnthosObservabilityFeatureSpecResponseOutputWithContext(ctx context.Context) AnthosObservabilityFeatureSpecResponseOutput {
	return o
}

// Default membership spec for unconfigured memberships
func (o AnthosObservabilityFeatureSpecResponseOutput) DefaultMembershipSpec() AnthosObservabilityMembershipSpecResponseOutput {
	return o.ApplyT(func(v AnthosObservabilityFeatureSpecResponse) AnthosObservabilityMembershipSpecResponse {
		return v.DefaultMembershipSpec
	}).(AnthosObservabilityMembershipSpecResponseOutput)
}

// **Anthosobservability**: Per-Membership Feature spec.
type AnthosObservabilityMembershipSpec struct {
	// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
	DoNotOptimizeMetrics *bool `pulumi:"doNotOptimizeMetrics"`
	// Enable collecting and reporting metrics and logs from user apps.
	EnableStackdriverOnApplications *bool `pulumi:"enableStackdriverOnApplications"`
	// the version of stackdriver operator used by this feature
	Version *string `pulumi:"version"`
}

// AnthosObservabilityMembershipSpecInput is an input type that accepts AnthosObservabilityMembershipSpecArgs and AnthosObservabilityMembershipSpecOutput values.
// You can construct a concrete instance of `AnthosObservabilityMembershipSpecInput` via:
//
//	AnthosObservabilityMembershipSpecArgs{...}
type AnthosObservabilityMembershipSpecInput interface {
	pulumi.Input

	ToAnthosObservabilityMembershipSpecOutput() AnthosObservabilityMembershipSpecOutput
	ToAnthosObservabilityMembershipSpecOutputWithContext(context.Context) AnthosObservabilityMembershipSpecOutput
}

// **Anthosobservability**: Per-Membership Feature spec.
type AnthosObservabilityMembershipSpecArgs struct {
	// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
	DoNotOptimizeMetrics pulumi.BoolPtrInput `pulumi:"doNotOptimizeMetrics"`
	// Enable collecting and reporting metrics and logs from user apps.
	EnableStackdriverOnApplications pulumi.BoolPtrInput `pulumi:"enableStackdriverOnApplications"`
	// the version of stackdriver operator used by this feature
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AnthosObservabilityMembershipSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityMembershipSpec)(nil)).Elem()
}

func (i AnthosObservabilityMembershipSpecArgs) ToAnthosObservabilityMembershipSpecOutput() AnthosObservabilityMembershipSpecOutput {
	return i.ToAnthosObservabilityMembershipSpecOutputWithContext(context.Background())
}

func (i AnthosObservabilityMembershipSpecArgs) ToAnthosObservabilityMembershipSpecOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityMembershipSpecOutput)
}

func (i AnthosObservabilityMembershipSpecArgs) ToAnthosObservabilityMembershipSpecPtrOutput() AnthosObservabilityMembershipSpecPtrOutput {
	return i.ToAnthosObservabilityMembershipSpecPtrOutputWithContext(context.Background())
}

func (i AnthosObservabilityMembershipSpecArgs) ToAnthosObservabilityMembershipSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityMembershipSpecOutput).ToAnthosObservabilityMembershipSpecPtrOutputWithContext(ctx)
}

// AnthosObservabilityMembershipSpecPtrInput is an input type that accepts AnthosObservabilityMembershipSpecArgs, AnthosObservabilityMembershipSpecPtr and AnthosObservabilityMembershipSpecPtrOutput values.
// You can construct a concrete instance of `AnthosObservabilityMembershipSpecPtrInput` via:
//
//	        AnthosObservabilityMembershipSpecArgs{...}
//
//	or:
//
//	        nil
type AnthosObservabilityMembershipSpecPtrInput interface {
	pulumi.Input

	ToAnthosObservabilityMembershipSpecPtrOutput() AnthosObservabilityMembershipSpecPtrOutput
	ToAnthosObservabilityMembershipSpecPtrOutputWithContext(context.Context) AnthosObservabilityMembershipSpecPtrOutput
}

type anthosObservabilityMembershipSpecPtrType AnthosObservabilityMembershipSpecArgs

func AnthosObservabilityMembershipSpecPtr(v *AnthosObservabilityMembershipSpecArgs) AnthosObservabilityMembershipSpecPtrInput {
	return (*anthosObservabilityMembershipSpecPtrType)(v)
}

func (*anthosObservabilityMembershipSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnthosObservabilityMembershipSpec)(nil)).Elem()
}

func (i *anthosObservabilityMembershipSpecPtrType) ToAnthosObservabilityMembershipSpecPtrOutput() AnthosObservabilityMembershipSpecPtrOutput {
	return i.ToAnthosObservabilityMembershipSpecPtrOutputWithContext(context.Background())
}

func (i *anthosObservabilityMembershipSpecPtrType) ToAnthosObservabilityMembershipSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnthosObservabilityMembershipSpecPtrOutput)
}

// **Anthosobservability**: Per-Membership Feature spec.
type AnthosObservabilityMembershipSpecOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityMembershipSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityMembershipSpec)(nil)).Elem()
}

func (o AnthosObservabilityMembershipSpecOutput) ToAnthosObservabilityMembershipSpecOutput() AnthosObservabilityMembershipSpecOutput {
	return o
}

func (o AnthosObservabilityMembershipSpecOutput) ToAnthosObservabilityMembershipSpecOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecOutput {
	return o
}

func (o AnthosObservabilityMembershipSpecOutput) ToAnthosObservabilityMembershipSpecPtrOutput() AnthosObservabilityMembershipSpecPtrOutput {
	return o.ToAnthosObservabilityMembershipSpecPtrOutputWithContext(context.Background())
}

func (o AnthosObservabilityMembershipSpecOutput) ToAnthosObservabilityMembershipSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnthosObservabilityMembershipSpec) *AnthosObservabilityMembershipSpec {
		return &v
	}).(AnthosObservabilityMembershipSpecPtrOutput)
}

// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
func (o AnthosObservabilityMembershipSpecOutput) DoNotOptimizeMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpec) *bool { return v.DoNotOptimizeMetrics }).(pulumi.BoolPtrOutput)
}

// Enable collecting and reporting metrics and logs from user apps.
func (o AnthosObservabilityMembershipSpecOutput) EnableStackdriverOnApplications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpec) *bool { return v.EnableStackdriverOnApplications }).(pulumi.BoolPtrOutput)
}

// the version of stackdriver operator used by this feature
func (o AnthosObservabilityMembershipSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AnthosObservabilityMembershipSpecPtrOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityMembershipSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnthosObservabilityMembershipSpec)(nil)).Elem()
}

func (o AnthosObservabilityMembershipSpecPtrOutput) ToAnthosObservabilityMembershipSpecPtrOutput() AnthosObservabilityMembershipSpecPtrOutput {
	return o
}

func (o AnthosObservabilityMembershipSpecPtrOutput) ToAnthosObservabilityMembershipSpecPtrOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecPtrOutput {
	return o
}

func (o AnthosObservabilityMembershipSpecPtrOutput) Elem() AnthosObservabilityMembershipSpecOutput {
	return o.ApplyT(func(v *AnthosObservabilityMembershipSpec) AnthosObservabilityMembershipSpec {
		if v != nil {
			return *v
		}
		var ret AnthosObservabilityMembershipSpec
		return ret
	}).(AnthosObservabilityMembershipSpecOutput)
}

// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
func (o AnthosObservabilityMembershipSpecPtrOutput) DoNotOptimizeMetrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnthosObservabilityMembershipSpec) *bool {
		if v == nil {
			return nil
		}
		return v.DoNotOptimizeMetrics
	}).(pulumi.BoolPtrOutput)
}

// Enable collecting and reporting metrics and logs from user apps.
func (o AnthosObservabilityMembershipSpecPtrOutput) EnableStackdriverOnApplications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AnthosObservabilityMembershipSpec) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStackdriverOnApplications
	}).(pulumi.BoolPtrOutput)
}

// the version of stackdriver operator used by this feature
func (o AnthosObservabilityMembershipSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnthosObservabilityMembershipSpec) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// **Anthosobservability**: Per-Membership Feature spec.
type AnthosObservabilityMembershipSpecResponse struct {
	// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
	DoNotOptimizeMetrics bool `pulumi:"doNotOptimizeMetrics"`
	// Enable collecting and reporting metrics and logs from user apps.
	EnableStackdriverOnApplications bool `pulumi:"enableStackdriverOnApplications"`
	// the version of stackdriver operator used by this feature
	Version string `pulumi:"version"`
}

// **Anthosobservability**: Per-Membership Feature spec.
type AnthosObservabilityMembershipSpecResponseOutput struct{ *pulumi.OutputState }

func (AnthosObservabilityMembershipSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnthosObservabilityMembershipSpecResponse)(nil)).Elem()
}

func (o AnthosObservabilityMembershipSpecResponseOutput) ToAnthosObservabilityMembershipSpecResponseOutput() AnthosObservabilityMembershipSpecResponseOutput {
	return o
}

func (o AnthosObservabilityMembershipSpecResponseOutput) ToAnthosObservabilityMembershipSpecResponseOutputWithContext(ctx context.Context) AnthosObservabilityMembershipSpecResponseOutput {
	return o
}

// Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
func (o AnthosObservabilityMembershipSpecResponseOutput) DoNotOptimizeMetrics() pulumi.BoolOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpecResponse) bool { return v.DoNotOptimizeMetrics }).(pulumi.BoolOutput)
}

// Enable collecting and reporting metrics and logs from user apps.
func (o AnthosObservabilityMembershipSpecResponseOutput) EnableStackdriverOnApplications() pulumi.BoolOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpecResponse) bool { return v.EnableStackdriverOnApplications }).(pulumi.BoolOutput)
}

// the version of stackdriver operator used by this feature
func (o AnthosObservabilityMembershipSpecResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AnthosObservabilityMembershipSpecResponse) string { return v.Version }).(pulumi.StringOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpec struct {
}

// AppDevExperienceFeatureSpecInput is an input type that accepts AppDevExperienceFeatureSpecArgs and AppDevExperienceFeatureSpecOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecInput` via:
//
//	AppDevExperienceFeatureSpecArgs{...}
type AppDevExperienceFeatureSpecInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput
	ToAppDevExperienceFeatureSpecOutputWithContext(context.Context) AppDevExperienceFeatureSpecOutput
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecArgs struct {
}

func (AppDevExperienceFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput {
	return i.ToAppDevExperienceFeatureSpecOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecOutput)
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return i.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecOutput).ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx)
}

// AppDevExperienceFeatureSpecPtrInput is an input type that accepts AppDevExperienceFeatureSpecArgs, AppDevExperienceFeatureSpecPtr and AppDevExperienceFeatureSpecPtrOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecPtrInput` via:
//
//	        AppDevExperienceFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type AppDevExperienceFeatureSpecPtrInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput
	ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Context) AppDevExperienceFeatureSpecPtrOutput
}

type appDevExperienceFeatureSpecPtrType AppDevExperienceFeatureSpecArgs

func AppDevExperienceFeatureSpecPtr(v *AppDevExperienceFeatureSpecArgs) AppDevExperienceFeatureSpecPtrInput {
	return (*appDevExperienceFeatureSpecPtrType)(v)
}

func (*appDevExperienceFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (i *appDevExperienceFeatureSpecPtrType) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return i.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *appDevExperienceFeatureSpecPtrType) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecPtrOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput {
	return o
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecOutput {
	return o
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return o.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDevExperienceFeatureSpec) *AppDevExperienceFeatureSpec {
		return &v
	}).(AppDevExperienceFeatureSpecPtrOutput)
}

type AppDevExperienceFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecPtrOutput) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecPtrOutput) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecPtrOutput) Elem() AppDevExperienceFeatureSpecOutput {
	return o.ApplyT(func(v *AppDevExperienceFeatureSpec) AppDevExperienceFeatureSpec {
		if v != nil {
			return *v
		}
		var ret AppDevExperienceFeatureSpec
		return ret
	}).(AppDevExperienceFeatureSpecOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecResponse struct {
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpecResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponseOutput() AppDevExperienceFeatureSpecResponseOutput {
	return o
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponseOutput {
	return o
}

// State for App Dev Exp Feature.
type AppDevExperienceFeatureStateResponse struct {
	// Status of subcomponent that detects configured Service Mesh resources.
	NetworkingInstallSucceeded StatusResponse `pulumi:"networkingInstallSucceeded"`
}

// State for App Dev Exp Feature.
type AppDevExperienceFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureStateResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponseOutput() AppDevExperienceFeatureStateResponseOutput {
	return o
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponseOutput {
	return o
}

// Status of subcomponent that detects configured Service Mesh resources.
func (o AppDevExperienceFeatureStateResponseOutput) NetworkingInstallSucceeded() StatusResponseOutput {
	return o.ApplyT(func(v AppDevExperienceFeatureStateResponse) StatusResponse { return v.NetworkingInstallSucceeded }).(StatusResponseOutput)
}

// ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
type ApplianceCluster struct {
	// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
	ResourceLink *string `pulumi:"resourceLink"`
}

// ApplianceClusterInput is an input type that accepts ApplianceClusterArgs and ApplianceClusterOutput values.
// You can construct a concrete instance of `ApplianceClusterInput` via:
//
//	ApplianceClusterArgs{...}
type ApplianceClusterInput interface {
	pulumi.Input

	ToApplianceClusterOutput() ApplianceClusterOutput
	ToApplianceClusterOutputWithContext(context.Context) ApplianceClusterOutput
}

// ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
type ApplianceClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (ApplianceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceCluster)(nil)).Elem()
}

func (i ApplianceClusterArgs) ToApplianceClusterOutput() ApplianceClusterOutput {
	return i.ToApplianceClusterOutputWithContext(context.Background())
}

func (i ApplianceClusterArgs) ToApplianceClusterOutputWithContext(ctx context.Context) ApplianceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceClusterOutput)
}

func (i ApplianceClusterArgs) ToApplianceClusterPtrOutput() ApplianceClusterPtrOutput {
	return i.ToApplianceClusterPtrOutputWithContext(context.Background())
}

func (i ApplianceClusterArgs) ToApplianceClusterPtrOutputWithContext(ctx context.Context) ApplianceClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceClusterOutput).ToApplianceClusterPtrOutputWithContext(ctx)
}

// ApplianceClusterPtrInput is an input type that accepts ApplianceClusterArgs, ApplianceClusterPtr and ApplianceClusterPtrOutput values.
// You can construct a concrete instance of `ApplianceClusterPtrInput` via:
//
//	        ApplianceClusterArgs{...}
//
//	or:
//
//	        nil
type ApplianceClusterPtrInput interface {
	pulumi.Input

	ToApplianceClusterPtrOutput() ApplianceClusterPtrOutput
	ToApplianceClusterPtrOutputWithContext(context.Context) ApplianceClusterPtrOutput
}

type applianceClusterPtrType ApplianceClusterArgs

func ApplianceClusterPtr(v *ApplianceClusterArgs) ApplianceClusterPtrInput {
	return (*applianceClusterPtrType)(v)
}

func (*applianceClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceCluster)(nil)).Elem()
}

func (i *applianceClusterPtrType) ToApplianceClusterPtrOutput() ApplianceClusterPtrOutput {
	return i.ToApplianceClusterPtrOutputWithContext(context.Background())
}

func (i *applianceClusterPtrType) ToApplianceClusterPtrOutputWithContext(ctx context.Context) ApplianceClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplianceClusterPtrOutput)
}

// ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
type ApplianceClusterOutput struct{ *pulumi.OutputState }

func (ApplianceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceCluster)(nil)).Elem()
}

func (o ApplianceClusterOutput) ToApplianceClusterOutput() ApplianceClusterOutput {
	return o
}

func (o ApplianceClusterOutput) ToApplianceClusterOutputWithContext(ctx context.Context) ApplianceClusterOutput {
	return o
}

func (o ApplianceClusterOutput) ToApplianceClusterPtrOutput() ApplianceClusterPtrOutput {
	return o.ToApplianceClusterPtrOutputWithContext(context.Background())
}

func (o ApplianceClusterOutput) ToApplianceClusterPtrOutputWithContext(ctx context.Context) ApplianceClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplianceCluster) *ApplianceCluster {
		return &v
	}).(ApplianceClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
func (o ApplianceClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplianceCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type ApplianceClusterPtrOutput struct{ *pulumi.OutputState }

func (ApplianceClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplianceCluster)(nil)).Elem()
}

func (o ApplianceClusterPtrOutput) ToApplianceClusterPtrOutput() ApplianceClusterPtrOutput {
	return o
}

func (o ApplianceClusterPtrOutput) ToApplianceClusterPtrOutputWithContext(ctx context.Context) ApplianceClusterPtrOutput {
	return o
}

func (o ApplianceClusterPtrOutput) Elem() ApplianceClusterOutput {
	return o.ApplyT(func(v *ApplianceCluster) ApplianceCluster {
		if v != nil {
			return *v
		}
		var ret ApplianceCluster
		return ret
	}).(ApplianceClusterOutput)
}

// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
func (o ApplianceClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplianceCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
type ApplianceClusterResponse struct {
	// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
	ResourceLink string `pulumi:"resourceLink"`
}

// ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
type ApplianceClusterResponseOutput struct{ *pulumi.OutputState }

func (ApplianceClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplianceClusterResponse)(nil)).Elem()
}

func (o ApplianceClusterResponseOutput) ToApplianceClusterResponseOutput() ApplianceClusterResponseOutput {
	return o
}

func (o ApplianceClusterResponseOutput) ToApplianceClusterResponseOutputWithContext(ctx context.Context) ApplianceClusterResponseOutput {
	return o
}

// Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
func (o ApplianceClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v ApplianceClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//	AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//	AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//	AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//	AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type Authority struct {
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer *string `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks *string `pulumi:"oidcJwks"`
}

// AuthorityInput is an input type that accepts AuthorityArgs and AuthorityOutput values.
// You can construct a concrete instance of `AuthorityInput` via:
//
//	AuthorityArgs{...}
type AuthorityInput interface {
	pulumi.Input

	ToAuthorityOutput() AuthorityOutput
	ToAuthorityOutputWithContext(context.Context) AuthorityOutput
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityArgs struct {
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks pulumi.StringPtrInput `pulumi:"oidcJwks"`
}

func (AuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authority)(nil)).Elem()
}

func (i AuthorityArgs) ToAuthorityOutput() AuthorityOutput {
	return i.ToAuthorityOutputWithContext(context.Background())
}

func (i AuthorityArgs) ToAuthorityOutputWithContext(ctx context.Context) AuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityOutput)
}

func (i AuthorityArgs) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return i.ToAuthorityPtrOutputWithContext(context.Background())
}

func (i AuthorityArgs) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityOutput).ToAuthorityPtrOutputWithContext(ctx)
}

// AuthorityPtrInput is an input type that accepts AuthorityArgs, AuthorityPtr and AuthorityPtrOutput values.
// You can construct a concrete instance of `AuthorityPtrInput` via:
//
//	        AuthorityArgs{...}
//
//	or:
//
//	        nil
type AuthorityPtrInput interface {
	pulumi.Input

	ToAuthorityPtrOutput() AuthorityPtrOutput
	ToAuthorityPtrOutputWithContext(context.Context) AuthorityPtrOutput
}

type authorityPtrType AuthorityArgs

func AuthorityPtr(v *AuthorityArgs) AuthorityPtrInput {
	return (*authorityPtrType)(v)
}

func (*authorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authority)(nil)).Elem()
}

func (i *authorityPtrType) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return i.ToAuthorityPtrOutputWithContext(context.Background())
}

func (i *authorityPtrType) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityPtrOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityOutput struct{ *pulumi.OutputState }

func (AuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authority)(nil)).Elem()
}

func (o AuthorityOutput) ToAuthorityOutput() AuthorityOutput {
	return o
}

func (o AuthorityOutput) ToAuthorityOutputWithContext(ctx context.Context) AuthorityOutput {
	return o
}

func (o AuthorityOutput) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return o.ToAuthorityPtrOutputWithContext(context.Background())
}

func (o AuthorityOutput) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authority) *Authority {
		return &v
	}).(AuthorityPtrOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authority) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityOutput) OidcJwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authority) *string { return v.OidcJwks }).(pulumi.StringPtrOutput)
}

type AuthorityPtrOutput struct{ *pulumi.OutputState }

func (AuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authority)(nil)).Elem()
}

func (o AuthorityPtrOutput) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return o
}

func (o AuthorityPtrOutput) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return o
}

func (o AuthorityPtrOutput) Elem() AuthorityOutput {
	return o.ApplyT(func(v *Authority) Authority {
		if v != nil {
			return *v
		}
		var ret Authority
		return ret
	}).(AuthorityOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authority) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityPtrOutput) OidcJwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authority) *string {
		if v == nil {
			return nil
		}
		return v.OidcJwks
	}).(pulumi.StringPtrOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityResponse struct {
	// An identity provider that reflects the `issuer` in the workload identity pool.
	IdentityProvider string `pulumi:"identityProvider"`
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer string `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks string `pulumi:"oidcJwks"`
	// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
	WorkloadIdentityPool string `pulumi:"workloadIdentityPool"`
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityResponseOutput struct{ *pulumi.OutputState }

func (AuthorityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityResponse)(nil)).Elem()
}

func (o AuthorityResponseOutput) ToAuthorityResponseOutput() AuthorityResponseOutput {
	return o
}

func (o AuthorityResponseOutput) ToAuthorityResponseOutputWithContext(ctx context.Context) AuthorityResponseOutput {
	return o
}

// An identity provider that reflects the `issuer` in the workload identity pool.
func (o AuthorityResponseOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityResponseOutput) OidcJwks() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.OidcJwks }).(pulumi.StringOutput)
}

// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
func (o AuthorityResponseOutput) WorkloadIdentityPool() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.WorkloadIdentityPool }).(pulumi.StringOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//	BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//	BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
type CloudAuditLoggingFeatureSpec struct {
	// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
	AllowlistedServiceAccounts []string `pulumi:"allowlistedServiceAccounts"`
}

// CloudAuditLoggingFeatureSpecInput is an input type that accepts CloudAuditLoggingFeatureSpecArgs and CloudAuditLoggingFeatureSpecOutput values.
// You can construct a concrete instance of `CloudAuditLoggingFeatureSpecInput` via:
//
//	CloudAuditLoggingFeatureSpecArgs{...}
type CloudAuditLoggingFeatureSpecInput interface {
	pulumi.Input

	ToCloudAuditLoggingFeatureSpecOutput() CloudAuditLoggingFeatureSpecOutput
	ToCloudAuditLoggingFeatureSpecOutputWithContext(context.Context) CloudAuditLoggingFeatureSpecOutput
}

// **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
type CloudAuditLoggingFeatureSpecArgs struct {
	// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
	AllowlistedServiceAccounts pulumi.StringArrayInput `pulumi:"allowlistedServiceAccounts"`
}

func (CloudAuditLoggingFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAuditLoggingFeatureSpec)(nil)).Elem()
}

func (i CloudAuditLoggingFeatureSpecArgs) ToCloudAuditLoggingFeatureSpecOutput() CloudAuditLoggingFeatureSpecOutput {
	return i.ToCloudAuditLoggingFeatureSpecOutputWithContext(context.Background())
}

func (i CloudAuditLoggingFeatureSpecArgs) ToCloudAuditLoggingFeatureSpecOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAuditLoggingFeatureSpecOutput)
}

func (i CloudAuditLoggingFeatureSpecArgs) ToCloudAuditLoggingFeatureSpecPtrOutput() CloudAuditLoggingFeatureSpecPtrOutput {
	return i.ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(context.Background())
}

func (i CloudAuditLoggingFeatureSpecArgs) ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAuditLoggingFeatureSpecOutput).ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(ctx)
}

// CloudAuditLoggingFeatureSpecPtrInput is an input type that accepts CloudAuditLoggingFeatureSpecArgs, CloudAuditLoggingFeatureSpecPtr and CloudAuditLoggingFeatureSpecPtrOutput values.
// You can construct a concrete instance of `CloudAuditLoggingFeatureSpecPtrInput` via:
//
//	        CloudAuditLoggingFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type CloudAuditLoggingFeatureSpecPtrInput interface {
	pulumi.Input

	ToCloudAuditLoggingFeatureSpecPtrOutput() CloudAuditLoggingFeatureSpecPtrOutput
	ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(context.Context) CloudAuditLoggingFeatureSpecPtrOutput
}

type cloudAuditLoggingFeatureSpecPtrType CloudAuditLoggingFeatureSpecArgs

func CloudAuditLoggingFeatureSpecPtr(v *CloudAuditLoggingFeatureSpecArgs) CloudAuditLoggingFeatureSpecPtrInput {
	return (*cloudAuditLoggingFeatureSpecPtrType)(v)
}

func (*cloudAuditLoggingFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAuditLoggingFeatureSpec)(nil)).Elem()
}

func (i *cloudAuditLoggingFeatureSpecPtrType) ToCloudAuditLoggingFeatureSpecPtrOutput() CloudAuditLoggingFeatureSpecPtrOutput {
	return i.ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *cloudAuditLoggingFeatureSpecPtrType) ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAuditLoggingFeatureSpecPtrOutput)
}

// **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
type CloudAuditLoggingFeatureSpecOutput struct{ *pulumi.OutputState }

func (CloudAuditLoggingFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAuditLoggingFeatureSpec)(nil)).Elem()
}

func (o CloudAuditLoggingFeatureSpecOutput) ToCloudAuditLoggingFeatureSpecOutput() CloudAuditLoggingFeatureSpecOutput {
	return o
}

func (o CloudAuditLoggingFeatureSpecOutput) ToCloudAuditLoggingFeatureSpecOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecOutput {
	return o
}

func (o CloudAuditLoggingFeatureSpecOutput) ToCloudAuditLoggingFeatureSpecPtrOutput() CloudAuditLoggingFeatureSpecPtrOutput {
	return o.ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(context.Background())
}

func (o CloudAuditLoggingFeatureSpecOutput) ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudAuditLoggingFeatureSpec) *CloudAuditLoggingFeatureSpec {
		return &v
	}).(CloudAuditLoggingFeatureSpecPtrOutput)
}

// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
func (o CloudAuditLoggingFeatureSpecOutput) AllowlistedServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudAuditLoggingFeatureSpec) []string { return v.AllowlistedServiceAccounts }).(pulumi.StringArrayOutput)
}

type CloudAuditLoggingFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (CloudAuditLoggingFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAuditLoggingFeatureSpec)(nil)).Elem()
}

func (o CloudAuditLoggingFeatureSpecPtrOutput) ToCloudAuditLoggingFeatureSpecPtrOutput() CloudAuditLoggingFeatureSpecPtrOutput {
	return o
}

func (o CloudAuditLoggingFeatureSpecPtrOutput) ToCloudAuditLoggingFeatureSpecPtrOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecPtrOutput {
	return o
}

func (o CloudAuditLoggingFeatureSpecPtrOutput) Elem() CloudAuditLoggingFeatureSpecOutput {
	return o.ApplyT(func(v *CloudAuditLoggingFeatureSpec) CloudAuditLoggingFeatureSpec {
		if v != nil {
			return *v
		}
		var ret CloudAuditLoggingFeatureSpec
		return ret
	}).(CloudAuditLoggingFeatureSpecOutput)
}

// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
func (o CloudAuditLoggingFeatureSpecPtrOutput) AllowlistedServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAuditLoggingFeatureSpec) []string {
		if v == nil {
			return nil
		}
		return v.AllowlistedServiceAccounts
	}).(pulumi.StringArrayOutput)
}

// **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
type CloudAuditLoggingFeatureSpecResponse struct {
	// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
	AllowlistedServiceAccounts []string `pulumi:"allowlistedServiceAccounts"`
}

// **Cloud Audit Logging**: Spec for Audit Logging Allowlisting.
type CloudAuditLoggingFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (CloudAuditLoggingFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudAuditLoggingFeatureSpecResponse)(nil)).Elem()
}

func (o CloudAuditLoggingFeatureSpecResponseOutput) ToCloudAuditLoggingFeatureSpecResponseOutput() CloudAuditLoggingFeatureSpecResponseOutput {
	return o
}

func (o CloudAuditLoggingFeatureSpecResponseOutput) ToCloudAuditLoggingFeatureSpecResponseOutputWithContext(ctx context.Context) CloudAuditLoggingFeatureSpecResponseOutput {
	return o
}

// Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)
func (o CloudAuditLoggingFeatureSpecResponseOutput) AllowlistedServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudAuditLoggingFeatureSpecResponse) []string { return v.AllowlistedServiceAccounts }).(pulumi.StringArrayOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpec struct {
	// Anthos Observability spec
	Anthosobservability *AnthosObservabilityFeatureSpec `pulumi:"anthosobservability"`
	// Appdevexperience specific spec.
	Appdevexperience *AppDevExperienceFeatureSpec `pulumi:"appdevexperience"`
	// Cloud Audit Logging-specific spec.
	Cloudauditlogging *CloudAuditLoggingFeatureSpec `pulumi:"cloudauditlogging"`
	// FleetObservability feature spec.
	Fleetobservability *FleetObservabilityFeatureSpec `pulumi:"fleetobservability"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress *MultiClusterIngressFeatureSpec `pulumi:"multiclusteringress"`
	// Workload Certificate spec.
	Workloadcertificate *FeatureSpec `pulumi:"workloadcertificate"`
}

// CommonFeatureSpecInput is an input type that accepts CommonFeatureSpecArgs and CommonFeatureSpecOutput values.
// You can construct a concrete instance of `CommonFeatureSpecInput` via:
//
//	CommonFeatureSpecArgs{...}
type CommonFeatureSpecInput interface {
	pulumi.Input

	ToCommonFeatureSpecOutput() CommonFeatureSpecOutput
	ToCommonFeatureSpecOutputWithContext(context.Context) CommonFeatureSpecOutput
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecArgs struct {
	// Anthos Observability spec
	Anthosobservability AnthosObservabilityFeatureSpecPtrInput `pulumi:"anthosobservability"`
	// Appdevexperience specific spec.
	Appdevexperience AppDevExperienceFeatureSpecPtrInput `pulumi:"appdevexperience"`
	// Cloud Audit Logging-specific spec.
	Cloudauditlogging CloudAuditLoggingFeatureSpecPtrInput `pulumi:"cloudauditlogging"`
	// FleetObservability feature spec.
	Fleetobservability FleetObservabilityFeatureSpecPtrInput `pulumi:"fleetobservability"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress MultiClusterIngressFeatureSpecPtrInput `pulumi:"multiclusteringress"`
	// Workload Certificate spec.
	Workloadcertificate FeatureSpecPtrInput `pulumi:"workloadcertificate"`
}

func (CommonFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpec)(nil)).Elem()
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecOutput() CommonFeatureSpecOutput {
	return i.ToCommonFeatureSpecOutputWithContext(context.Background())
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecOutputWithContext(ctx context.Context) CommonFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecOutput)
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return i.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecOutput).ToCommonFeatureSpecPtrOutputWithContext(ctx)
}

// CommonFeatureSpecPtrInput is an input type that accepts CommonFeatureSpecArgs, CommonFeatureSpecPtr and CommonFeatureSpecPtrOutput values.
// You can construct a concrete instance of `CommonFeatureSpecPtrInput` via:
//
//	        CommonFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type CommonFeatureSpecPtrInput interface {
	pulumi.Input

	ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput
	ToCommonFeatureSpecPtrOutputWithContext(context.Context) CommonFeatureSpecPtrOutput
}

type commonFeatureSpecPtrType CommonFeatureSpecArgs

func CommonFeatureSpecPtr(v *CommonFeatureSpecArgs) CommonFeatureSpecPtrInput {
	return (*commonFeatureSpecPtrType)(v)
}

func (*commonFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpec)(nil)).Elem()
}

func (i *commonFeatureSpecPtrType) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return i.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *commonFeatureSpecPtrType) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecPtrOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpec)(nil)).Elem()
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecOutput() CommonFeatureSpecOutput {
	return o
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecOutputWithContext(ctx context.Context) CommonFeatureSpecOutput {
	return o
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return o.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommonFeatureSpec) *CommonFeatureSpec {
		return &v
	}).(CommonFeatureSpecPtrOutput)
}

// Anthos Observability spec
func (o CommonFeatureSpecOutput) Anthosobservability() AnthosObservabilityFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *AnthosObservabilityFeatureSpec { return v.Anthosobservability }).(AnthosObservabilityFeatureSpecPtrOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecOutput) Appdevexperience() AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *AppDevExperienceFeatureSpec { return v.Appdevexperience }).(AppDevExperienceFeatureSpecPtrOutput)
}

// Cloud Audit Logging-specific spec.
func (o CommonFeatureSpecOutput) Cloudauditlogging() CloudAuditLoggingFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *CloudAuditLoggingFeatureSpec { return v.Cloudauditlogging }).(CloudAuditLoggingFeatureSpecPtrOutput)
}

// FleetObservability feature spec.
func (o CommonFeatureSpecOutput) Fleetobservability() FleetObservabilityFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *FleetObservabilityFeatureSpec { return v.Fleetobservability }).(FleetObservabilityFeatureSpecPtrOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecOutput) Multiclusteringress() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *MultiClusterIngressFeatureSpec { return v.Multiclusteringress }).(MultiClusterIngressFeatureSpecPtrOutput)
}

// Workload Certificate spec.
func (o CommonFeatureSpecOutput) Workloadcertificate() FeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *FeatureSpec { return v.Workloadcertificate }).(FeatureSpecPtrOutput)
}

type CommonFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpec)(nil)).Elem()
}

func (o CommonFeatureSpecPtrOutput) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return o
}

func (o CommonFeatureSpecPtrOutput) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return o
}

func (o CommonFeatureSpecPtrOutput) Elem() CommonFeatureSpecOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) CommonFeatureSpec {
		if v != nil {
			return *v
		}
		var ret CommonFeatureSpec
		return ret
	}).(CommonFeatureSpecOutput)
}

// Anthos Observability spec
func (o CommonFeatureSpecPtrOutput) Anthosobservability() AnthosObservabilityFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *AnthosObservabilityFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Anthosobservability
	}).(AnthosObservabilityFeatureSpecPtrOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecPtrOutput) Appdevexperience() AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *AppDevExperienceFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Appdevexperience
	}).(AppDevExperienceFeatureSpecPtrOutput)
}

// Cloud Audit Logging-specific spec.
func (o CommonFeatureSpecPtrOutput) Cloudauditlogging() CloudAuditLoggingFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *CloudAuditLoggingFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Cloudauditlogging
	}).(CloudAuditLoggingFeatureSpecPtrOutput)
}

// FleetObservability feature spec.
func (o CommonFeatureSpecPtrOutput) Fleetobservability() FleetObservabilityFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *FleetObservabilityFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Fleetobservability
	}).(FleetObservabilityFeatureSpecPtrOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecPtrOutput) Multiclusteringress() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *MultiClusterIngressFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Multiclusteringress
	}).(MultiClusterIngressFeatureSpecPtrOutput)
}

// Workload Certificate spec.
func (o CommonFeatureSpecPtrOutput) Workloadcertificate() FeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *FeatureSpec {
		if v == nil {
			return nil
		}
		return v.Workloadcertificate
	}).(FeatureSpecPtrOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecResponse struct {
	// Anthos Observability spec
	Anthosobservability AnthosObservabilityFeatureSpecResponse `pulumi:"anthosobservability"`
	// Appdevexperience specific spec.
	Appdevexperience AppDevExperienceFeatureSpecResponse `pulumi:"appdevexperience"`
	// Cloud Audit Logging-specific spec.
	Cloudauditlogging CloudAuditLoggingFeatureSpecResponse `pulumi:"cloudauditlogging"`
	// FleetObservability feature spec.
	Fleetobservability FleetObservabilityFeatureSpecResponse `pulumi:"fleetobservability"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress MultiClusterIngressFeatureSpecResponse `pulumi:"multiclusteringress"`
	// Workload Certificate spec.
	Workloadcertificate FeatureSpecResponse `pulumi:"workloadcertificate"`
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpecResponse)(nil)).Elem()
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponseOutput() CommonFeatureSpecResponseOutput {
	return o
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponseOutputWithContext(ctx context.Context) CommonFeatureSpecResponseOutput {
	return o
}

// Anthos Observability spec
func (o CommonFeatureSpecResponseOutput) Anthosobservability() AnthosObservabilityFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) AnthosObservabilityFeatureSpecResponse { return v.Anthosobservability }).(AnthosObservabilityFeatureSpecResponseOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecResponseOutput) Appdevexperience() AppDevExperienceFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) AppDevExperienceFeatureSpecResponse { return v.Appdevexperience }).(AppDevExperienceFeatureSpecResponseOutput)
}

// Cloud Audit Logging-specific spec.
func (o CommonFeatureSpecResponseOutput) Cloudauditlogging() CloudAuditLoggingFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) CloudAuditLoggingFeatureSpecResponse { return v.Cloudauditlogging }).(CloudAuditLoggingFeatureSpecResponseOutput)
}

// FleetObservability feature spec.
func (o CommonFeatureSpecResponseOutput) Fleetobservability() FleetObservabilityFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) FleetObservabilityFeatureSpecResponse { return v.Fleetobservability }).(FleetObservabilityFeatureSpecResponseOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecResponseOutput) Multiclusteringress() MultiClusterIngressFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) MultiClusterIngressFeatureSpecResponse { return v.Multiclusteringress }).(MultiClusterIngressFeatureSpecResponseOutput)
}

// Workload Certificate spec.
func (o CommonFeatureSpecResponseOutput) Workloadcertificate() FeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) FeatureSpecResponse { return v.Workloadcertificate }).(FeatureSpecResponseOutput)
}

// CommonFeatureState contains Hub-wide Feature status information.
type CommonFeatureStateResponse struct {
	// Appdevexperience specific state.
	Appdevexperience AppDevExperienceFeatureStateResponse `pulumi:"appdevexperience"`
	// FleetObservability feature state.
	Fleetobservability FleetObservabilityFeatureStateResponse `pulumi:"fleetobservability"`
	// Service Mesh-specific state.
	Servicemesh ServiceMeshFeatureStateResponse `pulumi:"servicemesh"`
	// The "running state" of the Feature in this Hub.
	State FeatureStateResponse `pulumi:"state"`
}

// CommonFeatureState contains Hub-wide Feature status information.
type CommonFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (CommonFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureStateResponse)(nil)).Elem()
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponseOutput() CommonFeatureStateResponseOutput {
	return o
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponseOutputWithContext(ctx context.Context) CommonFeatureStateResponseOutput {
	return o
}

// Appdevexperience specific state.
func (o CommonFeatureStateResponseOutput) Appdevexperience() AppDevExperienceFeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) AppDevExperienceFeatureStateResponse { return v.Appdevexperience }).(AppDevExperienceFeatureStateResponseOutput)
}

// FleetObservability feature state.
func (o CommonFeatureStateResponseOutput) Fleetobservability() FleetObservabilityFeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) FleetObservabilityFeatureStateResponse { return v.Fleetobservability }).(FleetObservabilityFeatureStateResponseOutput)
}

// Service Mesh-specific state.
func (o CommonFeatureStateResponseOutput) Servicemesh() ServiceMeshFeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) ServiceMeshFeatureStateResponse { return v.Servicemesh }).(ServiceMeshFeatureStateResponseOutput)
}

// The "running state" of the Feature in this Hub.
func (o CommonFeatureStateResponseOutput) State() FeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) FeatureStateResponse { return v.State }).(FeatureStateResponseOutput)
}

// EdgeCluster contains information specific to Google Edge Clusters.
type EdgeCluster struct {
	// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
	ResourceLink *string `pulumi:"resourceLink"`
}

// EdgeClusterInput is an input type that accepts EdgeClusterArgs and EdgeClusterOutput values.
// You can construct a concrete instance of `EdgeClusterInput` via:
//
//	EdgeClusterArgs{...}
type EdgeClusterInput interface {
	pulumi.Input

	ToEdgeClusterOutput() EdgeClusterOutput
	ToEdgeClusterOutputWithContext(context.Context) EdgeClusterOutput
}

// EdgeCluster contains information specific to Google Edge Clusters.
type EdgeClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (EdgeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeCluster)(nil)).Elem()
}

func (i EdgeClusterArgs) ToEdgeClusterOutput() EdgeClusterOutput {
	return i.ToEdgeClusterOutputWithContext(context.Background())
}

func (i EdgeClusterArgs) ToEdgeClusterOutputWithContext(ctx context.Context) EdgeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeClusterOutput)
}

func (i EdgeClusterArgs) ToEdgeClusterPtrOutput() EdgeClusterPtrOutput {
	return i.ToEdgeClusterPtrOutputWithContext(context.Background())
}

func (i EdgeClusterArgs) ToEdgeClusterPtrOutputWithContext(ctx context.Context) EdgeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeClusterOutput).ToEdgeClusterPtrOutputWithContext(ctx)
}

// EdgeClusterPtrInput is an input type that accepts EdgeClusterArgs, EdgeClusterPtr and EdgeClusterPtrOutput values.
// You can construct a concrete instance of `EdgeClusterPtrInput` via:
//
//	        EdgeClusterArgs{...}
//
//	or:
//
//	        nil
type EdgeClusterPtrInput interface {
	pulumi.Input

	ToEdgeClusterPtrOutput() EdgeClusterPtrOutput
	ToEdgeClusterPtrOutputWithContext(context.Context) EdgeClusterPtrOutput
}

type edgeClusterPtrType EdgeClusterArgs

func EdgeClusterPtr(v *EdgeClusterArgs) EdgeClusterPtrInput {
	return (*edgeClusterPtrType)(v)
}

func (*edgeClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCluster)(nil)).Elem()
}

func (i *edgeClusterPtrType) ToEdgeClusterPtrOutput() EdgeClusterPtrOutput {
	return i.ToEdgeClusterPtrOutputWithContext(context.Background())
}

func (i *edgeClusterPtrType) ToEdgeClusterPtrOutputWithContext(ctx context.Context) EdgeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeClusterPtrOutput)
}

// EdgeCluster contains information specific to Google Edge Clusters.
type EdgeClusterOutput struct{ *pulumi.OutputState }

func (EdgeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeCluster)(nil)).Elem()
}

func (o EdgeClusterOutput) ToEdgeClusterOutput() EdgeClusterOutput {
	return o
}

func (o EdgeClusterOutput) ToEdgeClusterOutputWithContext(ctx context.Context) EdgeClusterOutput {
	return o
}

func (o EdgeClusterOutput) ToEdgeClusterPtrOutput() EdgeClusterPtrOutput {
	return o.ToEdgeClusterPtrOutputWithContext(context.Background())
}

func (o EdgeClusterOutput) ToEdgeClusterPtrOutputWithContext(ctx context.Context) EdgeClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EdgeCluster) *EdgeCluster {
		return &v
	}).(EdgeClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
func (o EdgeClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EdgeCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type EdgeClusterPtrOutput struct{ *pulumi.OutputState }

func (EdgeClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeCluster)(nil)).Elem()
}

func (o EdgeClusterPtrOutput) ToEdgeClusterPtrOutput() EdgeClusterPtrOutput {
	return o
}

func (o EdgeClusterPtrOutput) ToEdgeClusterPtrOutputWithContext(ctx context.Context) EdgeClusterPtrOutput {
	return o
}

func (o EdgeClusterPtrOutput) Elem() EdgeClusterOutput {
	return o.ApplyT(func(v *EdgeCluster) EdgeCluster {
		if v != nil {
			return *v
		}
		var ret EdgeCluster
		return ret
	}).(EdgeClusterOutput)
}

// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
func (o EdgeClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// EdgeCluster contains information specific to Google Edge Clusters.
type EdgeClusterResponse struct {
	// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
	ResourceLink string `pulumi:"resourceLink"`
}

// EdgeCluster contains information specific to Google Edge Clusters.
type EdgeClusterResponseOutput struct{ *pulumi.OutputState }

func (EdgeClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EdgeClusterResponse)(nil)).Elem()
}

func (o EdgeClusterResponseOutput) ToEdgeClusterResponseOutput() EdgeClusterResponseOutput {
	return o
}

func (o EdgeClusterResponseOutput) ToEdgeClusterResponseOutputWithContext(ctx context.Context) EdgeClusterResponseOutput {
	return o
}

// Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
func (o EdgeClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v EdgeClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//	ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//	        ExprArgs{...}
//
//	or:
//
//	        nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceStateResponse struct {
	// The current state of the Feature resource in the Hub API.
	State string `pulumi:"state"`
}

// FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceStateResponseOutput struct{ *pulumi.OutputState }

func (FeatureResourceStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureResourceStateResponse)(nil)).Elem()
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponseOutput() FeatureResourceStateResponseOutput {
	return o
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponseOutputWithContext(ctx context.Context) FeatureResourceStateResponseOutput {
	return o
}

// The current state of the Feature resource in the Hub API.
func (o FeatureResourceStateResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureResourceStateResponse) string { return v.State }).(pulumi.StringOutput)
}

// **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpec struct {
	// Specifies default membership spec. Users can override the default in the member_configs for each member.
	DefaultConfig *MembershipSpec `pulumi:"defaultConfig"`
	// Immutable. Specifies CA configuration.
	ProvisionGoogleCa *FeatureSpecProvisionGoogleCa `pulumi:"provisionGoogleCa"`
}

// FeatureSpecInput is an input type that accepts FeatureSpecArgs and FeatureSpecOutput values.
// You can construct a concrete instance of `FeatureSpecInput` via:
//
//	FeatureSpecArgs{...}
type FeatureSpecInput interface {
	pulumi.Input

	ToFeatureSpecOutput() FeatureSpecOutput
	ToFeatureSpecOutputWithContext(context.Context) FeatureSpecOutput
}

// **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpecArgs struct {
	// Specifies default membership spec. Users can override the default in the member_configs for each member.
	DefaultConfig MembershipSpecPtrInput `pulumi:"defaultConfig"`
	// Immutable. Specifies CA configuration.
	ProvisionGoogleCa FeatureSpecProvisionGoogleCaPtrInput `pulumi:"provisionGoogleCa"`
}

func (FeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpec)(nil)).Elem()
}

func (i FeatureSpecArgs) ToFeatureSpecOutput() FeatureSpecOutput {
	return i.ToFeatureSpecOutputWithContext(context.Background())
}

func (i FeatureSpecArgs) ToFeatureSpecOutputWithContext(ctx context.Context) FeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecOutput)
}

func (i FeatureSpecArgs) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return i.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (i FeatureSpecArgs) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecOutput).ToFeatureSpecPtrOutputWithContext(ctx)
}

// FeatureSpecPtrInput is an input type that accepts FeatureSpecArgs, FeatureSpecPtr and FeatureSpecPtrOutput values.
// You can construct a concrete instance of `FeatureSpecPtrInput` via:
//
//	        FeatureSpecArgs{...}
//
//	or:
//
//	        nil
type FeatureSpecPtrInput interface {
	pulumi.Input

	ToFeatureSpecPtrOutput() FeatureSpecPtrOutput
	ToFeatureSpecPtrOutputWithContext(context.Context) FeatureSpecPtrOutput
}

type featureSpecPtrType FeatureSpecArgs

func FeatureSpecPtr(v *FeatureSpecArgs) FeatureSpecPtrInput {
	return (*featureSpecPtrType)(v)
}

func (*featureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpec)(nil)).Elem()
}

func (i *featureSpecPtrType) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return i.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *featureSpecPtrType) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureSpecPtrOutput)
}

// **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpecOutput struct{ *pulumi.OutputState }

func (FeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpec)(nil)).Elem()
}

func (o FeatureSpecOutput) ToFeatureSpecOutput() FeatureSpecOutput {
	return o
}

func (o FeatureSpecOutput) ToFeatureSpecOutputWithContext(ctx context.Context) FeatureSpecOutput {
	return o
}

func (o FeatureSpecOutput) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return o.ToFeatureSpecPtrOutputWithContext(context.Background())
}

func (o FeatureSpecOutput) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureSpec) *FeatureSpec {
		return &v
	}).(FeatureSpecPtrOutput)
}

// Specifies default membership spec. Users can override the default in the member_configs for each member.
func (o FeatureSpecOutput) DefaultConfig() MembershipSpecPtrOutput {
	return o.ApplyT(func(v FeatureSpec) *MembershipSpec { return v.DefaultConfig }).(MembershipSpecPtrOutput)
}

// Immutable. Specifies CA configuration.
func (o FeatureSpecOutput) ProvisionGoogleCa() FeatureSpecProvisionGoogleCaPtrOutput {
	return o.ApplyT(func(v FeatureSpec) *FeatureSpecProvisionGoogleCa { return v.ProvisionGoogleCa }).(FeatureSpecProvisionGoogleCaPtrOutput)
}

type FeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (FeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureSpec)(nil)).Elem()
}

func (o FeatureSpecPtrOutput) ToFeatureSpecPtrOutput() FeatureSpecPtrOutput {
	return o
}

func (o FeatureSpecPtrOutput) ToFeatureSpecPtrOutputWithContext(ctx context.Context) FeatureSpecPtrOutput {
	return o
}

func (o FeatureSpecPtrOutput) Elem() FeatureSpecOutput {
	return o.ApplyT(func(v *FeatureSpec) FeatureSpec {
		if v != nil {
			return *v
		}
		var ret FeatureSpec
		return ret
	}).(FeatureSpecOutput)
}

// Specifies default membership spec. Users can override the default in the member_configs for each member.
func (o FeatureSpecPtrOutput) DefaultConfig() MembershipSpecPtrOutput {
	return o.ApplyT(func(v *FeatureSpec) *MembershipSpec {
		if v == nil {
			return nil
		}
		return v.DefaultConfig
	}).(MembershipSpecPtrOutput)
}

// Immutable. Specifies CA configuration.
func (o FeatureSpecPtrOutput) ProvisionGoogleCa() FeatureSpecProvisionGoogleCaPtrOutput {
	return o.ApplyT(func(v *FeatureSpec) *FeatureSpecProvisionGoogleCa {
		if v == nil {
			return nil
		}
		return v.ProvisionGoogleCa
	}).(FeatureSpecProvisionGoogleCaPtrOutput)
}

// **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpecResponse struct {
	// Specifies default membership spec. Users can override the default in the member_configs for each member.
	DefaultConfig MembershipSpecResponse `pulumi:"defaultConfig"`
	// Immutable. Specifies CA configuration.
	ProvisionGoogleCa string `pulumi:"provisionGoogleCa"`
}

// **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (FeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureSpecResponse)(nil)).Elem()
}

func (o FeatureSpecResponseOutput) ToFeatureSpecResponseOutput() FeatureSpecResponseOutput {
	return o
}

func (o FeatureSpecResponseOutput) ToFeatureSpecResponseOutputWithContext(ctx context.Context) FeatureSpecResponseOutput {
	return o
}

// Specifies default membership spec. Users can override the default in the member_configs for each member.
func (o FeatureSpecResponseOutput) DefaultConfig() MembershipSpecResponseOutput {
	return o.ApplyT(func(v FeatureSpecResponse) MembershipSpecResponse { return v.DefaultConfig }).(MembershipSpecResponseOutput)
}

// Immutable. Specifies CA configuration.
func (o FeatureSpecResponseOutput) ProvisionGoogleCa() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureSpecResponse) string { return v.ProvisionGoogleCa }).(pulumi.StringOutput)
}

// FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureStateResponse struct {
	// The high-level, machine-readable status of this Feature.
	Code string `pulumi:"code"`
	// A human-readable description of the current status.
	Description string `pulumi:"description"`
	// The time this status and any related Feature-specific details were updated.
	UpdateTime string `pulumi:"updateTime"`
}

// FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureStateResponseOutput struct{ *pulumi.OutputState }

func (FeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateResponse)(nil)).Elem()
}

func (o FeatureStateResponseOutput) ToFeatureStateResponseOutput() FeatureStateResponseOutput {
	return o
}

func (o FeatureStateResponseOutput) ToFeatureStateResponseOutputWithContext(ctx context.Context) FeatureStateResponseOutput {
	return o
}

// The high-level, machine-readable status of this Feature.
func (o FeatureStateResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A human-readable description of the current status.
func (o FeatureStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The time this status and any related Feature-specific details were updated.
func (o FeatureStateResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// FleetLifecycleState describes the state of a Fleet resource.
type FleetLifecycleStateResponse struct {
	// The current state of the Fleet resource.
	Code string `pulumi:"code"`
}

// FleetLifecycleState describes the state of a Fleet resource.
type FleetLifecycleStateResponseOutput struct{ *pulumi.OutputState }

func (FleetLifecycleStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLifecycleStateResponse)(nil)).Elem()
}

func (o FleetLifecycleStateResponseOutput) ToFleetLifecycleStateResponseOutput() FleetLifecycleStateResponseOutput {
	return o
}

func (o FleetLifecycleStateResponseOutput) ToFleetLifecycleStateResponseOutputWithContext(ctx context.Context) FleetLifecycleStateResponseOutput {
	return o
}

// The current state of the Fleet resource.
func (o FleetLifecycleStateResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLifecycleStateResponse) string { return v.Code }).(pulumi.StringOutput)
}

// **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
type FleetObservabilityFeatureSpec struct {
}

// FleetObservabilityFeatureSpecInput is an input type that accepts FleetObservabilityFeatureSpecArgs and FleetObservabilityFeatureSpecOutput values.
// You can construct a concrete instance of `FleetObservabilityFeatureSpecInput` via:
//
//	FleetObservabilityFeatureSpecArgs{...}
type FleetObservabilityFeatureSpecInput interface {
	pulumi.Input

	ToFleetObservabilityFeatureSpecOutput() FleetObservabilityFeatureSpecOutput
	ToFleetObservabilityFeatureSpecOutputWithContext(context.Context) FleetObservabilityFeatureSpecOutput
}

// **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
type FleetObservabilityFeatureSpecArgs struct {
}

func (FleetObservabilityFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetObservabilityFeatureSpec)(nil)).Elem()
}

func (i FleetObservabilityFeatureSpecArgs) ToFleetObservabilityFeatureSpecOutput() FleetObservabilityFeatureSpecOutput {
	return i.ToFleetObservabilityFeatureSpecOutputWithContext(context.Background())
}

func (i FleetObservabilityFeatureSpecArgs) ToFleetObservabilityFeatureSpecOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetObservabilityFeatureSpecOutput)
}

func (i FleetObservabilityFeatureSpecArgs) ToFleetObservabilityFeatureSpecPtrOutput() FleetObservabilityFeatureSpecPtrOutput {
	return i.ToFleetObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (i FleetObservabilityFeatureSpecArgs) ToFleetObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetObservabilityFeatureSpecOutput).ToFleetObservabilityFeatureSpecPtrOutputWithContext(ctx)
}

// FleetObservabilityFeatureSpecPtrInput is an input type that accepts FleetObservabilityFeatureSpecArgs, FleetObservabilityFeatureSpecPtr and FleetObservabilityFeatureSpecPtrOutput values.
// You can construct a concrete instance of `FleetObservabilityFeatureSpecPtrInput` via:
//
//	        FleetObservabilityFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type FleetObservabilityFeatureSpecPtrInput interface {
	pulumi.Input

	ToFleetObservabilityFeatureSpecPtrOutput() FleetObservabilityFeatureSpecPtrOutput
	ToFleetObservabilityFeatureSpecPtrOutputWithContext(context.Context) FleetObservabilityFeatureSpecPtrOutput
}

type fleetObservabilityFeatureSpecPtrType FleetObservabilityFeatureSpecArgs

func FleetObservabilityFeatureSpecPtr(v *FleetObservabilityFeatureSpecArgs) FleetObservabilityFeatureSpecPtrInput {
	return (*fleetObservabilityFeatureSpecPtrType)(v)
}

func (*fleetObservabilityFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetObservabilityFeatureSpec)(nil)).Elem()
}

func (i *fleetObservabilityFeatureSpecPtrType) ToFleetObservabilityFeatureSpecPtrOutput() FleetObservabilityFeatureSpecPtrOutput {
	return i.ToFleetObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *fleetObservabilityFeatureSpecPtrType) ToFleetObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetObservabilityFeatureSpecPtrOutput)
}

// **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
type FleetObservabilityFeatureSpecOutput struct{ *pulumi.OutputState }

func (FleetObservabilityFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetObservabilityFeatureSpec)(nil)).Elem()
}

func (o FleetObservabilityFeatureSpecOutput) ToFleetObservabilityFeatureSpecOutput() FleetObservabilityFeatureSpecOutput {
	return o
}

func (o FleetObservabilityFeatureSpecOutput) ToFleetObservabilityFeatureSpecOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecOutput {
	return o
}

func (o FleetObservabilityFeatureSpecOutput) ToFleetObservabilityFeatureSpecPtrOutput() FleetObservabilityFeatureSpecPtrOutput {
	return o.ToFleetObservabilityFeatureSpecPtrOutputWithContext(context.Background())
}

func (o FleetObservabilityFeatureSpecOutput) ToFleetObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetObservabilityFeatureSpec) *FleetObservabilityFeatureSpec {
		return &v
	}).(FleetObservabilityFeatureSpecPtrOutput)
}

type FleetObservabilityFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (FleetObservabilityFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetObservabilityFeatureSpec)(nil)).Elem()
}

func (o FleetObservabilityFeatureSpecPtrOutput) ToFleetObservabilityFeatureSpecPtrOutput() FleetObservabilityFeatureSpecPtrOutput {
	return o
}

func (o FleetObservabilityFeatureSpecPtrOutput) ToFleetObservabilityFeatureSpecPtrOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecPtrOutput {
	return o
}

func (o FleetObservabilityFeatureSpecPtrOutput) Elem() FleetObservabilityFeatureSpecOutput {
	return o.ApplyT(func(v *FleetObservabilityFeatureSpec) FleetObservabilityFeatureSpec {
		if v != nil {
			return *v
		}
		var ret FleetObservabilityFeatureSpec
		return ret
	}).(FleetObservabilityFeatureSpecOutput)
}

// **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
type FleetObservabilityFeatureSpecResponse struct {
}

// **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
type FleetObservabilityFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (FleetObservabilityFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetObservabilityFeatureSpecResponse)(nil)).Elem()
}

func (o FleetObservabilityFeatureSpecResponseOutput) ToFleetObservabilityFeatureSpecResponseOutput() FleetObservabilityFeatureSpecResponseOutput {
	return o
}

func (o FleetObservabilityFeatureSpecResponseOutput) ToFleetObservabilityFeatureSpecResponseOutputWithContext(ctx context.Context) FleetObservabilityFeatureSpecResponseOutput {
	return o
}

// **FleetObservability**: An empty state left as an example Hub-wide Feature state.
type FleetObservabilityFeatureStateResponse struct {
}

// **FleetObservability**: An empty state left as an example Hub-wide Feature state.
type FleetObservabilityFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (FleetObservabilityFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetObservabilityFeatureStateResponse)(nil)).Elem()
}

func (o FleetObservabilityFeatureStateResponseOutput) ToFleetObservabilityFeatureStateResponseOutput() FleetObservabilityFeatureStateResponseOutput {
	return o
}

func (o FleetObservabilityFeatureStateResponseOutput) ToFleetObservabilityFeatureStateResponseOutputWithContext(ctx context.Context) FleetObservabilityFeatureStateResponseOutput {
	return o
}

// GkeCluster contains information specific to GKE clusters.
type GkeCluster struct {
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink *string `pulumi:"resourceLink"`
}

// GkeClusterInput is an input type that accepts GkeClusterArgs and GkeClusterOutput values.
// You can construct a concrete instance of `GkeClusterInput` via:
//
//	GkeClusterArgs{...}
type GkeClusterInput interface {
	pulumi.Input

	ToGkeClusterOutput() GkeClusterOutput
	ToGkeClusterOutputWithContext(context.Context) GkeClusterOutput
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (GkeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeCluster)(nil)).Elem()
}

func (i GkeClusterArgs) ToGkeClusterOutput() GkeClusterOutput {
	return i.ToGkeClusterOutputWithContext(context.Background())
}

func (i GkeClusterArgs) ToGkeClusterOutputWithContext(ctx context.Context) GkeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterOutput)
}

func (i GkeClusterArgs) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return i.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (i GkeClusterArgs) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterOutput).ToGkeClusterPtrOutputWithContext(ctx)
}

// GkeClusterPtrInput is an input type that accepts GkeClusterArgs, GkeClusterPtr and GkeClusterPtrOutput values.
// You can construct a concrete instance of `GkeClusterPtrInput` via:
//
//	        GkeClusterArgs{...}
//
//	or:
//
//	        nil
type GkeClusterPtrInput interface {
	pulumi.Input

	ToGkeClusterPtrOutput() GkeClusterPtrOutput
	ToGkeClusterPtrOutputWithContext(context.Context) GkeClusterPtrOutput
}

type gkeClusterPtrType GkeClusterArgs

func GkeClusterPtr(v *GkeClusterArgs) GkeClusterPtrInput {
	return (*gkeClusterPtrType)(v)
}

func (*gkeClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeCluster)(nil)).Elem()
}

func (i *gkeClusterPtrType) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return i.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (i *gkeClusterPtrType) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterPtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterOutput struct{ *pulumi.OutputState }

func (GkeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeCluster)(nil)).Elem()
}

func (o GkeClusterOutput) ToGkeClusterOutput() GkeClusterOutput {
	return o
}

func (o GkeClusterOutput) ToGkeClusterOutputWithContext(ctx context.Context) GkeClusterOutput {
	return o
}

func (o GkeClusterOutput) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return o.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (o GkeClusterOutput) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GkeCluster) *GkeCluster {
		return &v
	}).(GkeClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type GkeClusterPtrOutput struct{ *pulumi.OutputState }

func (GkeClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeCluster)(nil)).Elem()
}

func (o GkeClusterPtrOutput) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return o
}

func (o GkeClusterPtrOutput) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return o
}

func (o GkeClusterPtrOutput) Elem() GkeClusterOutput {
	return o.ApplyT(func(v *GkeCluster) GkeCluster {
		if v != nil {
			return *v
		}
		var ret GkeCluster
		return ret
	}).(GkeClusterOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterResponse struct {
	// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink string `pulumi:"resourceLink"`
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterResponseOutput struct{ *pulumi.OutputState }

func (GkeClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterResponse)(nil)).Elem()
}

func (o GkeClusterResponseOutput) ToGkeClusterResponseOutput() GkeClusterResponseOutput {
	return o
}

func (o GkeClusterResponseOutput) ToGkeClusterResponseOutputWithContext(ctx context.Context) GkeClusterResponseOutput {
	return o
}

// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
func (o GkeClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v GkeClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v GkeClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
type KubernetesMetadataResponse struct {
	// Kubernetes API server version string as reported by `/version`.
	KubernetesApiServerVersion string `pulumi:"kubernetesApiServerVersion"`
	// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
	MemoryMb int `pulumi:"memoryMb"`
	// Node count as reported by Kubernetes nodes resources.
	NodeCount int `pulumi:"nodeCount"`
	// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
	NodeProviderId string `pulumi:"nodeProviderId"`
	// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
	UpdateTime string `pulumi:"updateTime"`
	// vCPU count as reported by Kubernetes nodes resources.
	VcpuCount int `pulumi:"vcpuCount"`
}

// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
type KubernetesMetadataResponseOutput struct{ *pulumi.OutputState }

func (KubernetesMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesMetadataResponse)(nil)).Elem()
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponseOutput() KubernetesMetadataResponseOutput {
	return o
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponseOutputWithContext(ctx context.Context) KubernetesMetadataResponseOutput {
	return o
}

// Kubernetes API server version string as reported by `/version`.
func (o KubernetesMetadataResponseOutput) KubernetesApiServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.KubernetesApiServerVersion }).(pulumi.StringOutput)
}

// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
func (o KubernetesMetadataResponseOutput) MemoryMb() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.MemoryMb }).(pulumi.IntOutput)
}

// Node count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponseOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
func (o KubernetesMetadataResponseOutput) NodeProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.NodeProviderId }).(pulumi.StringOutput)
}

// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
func (o KubernetesMetadataResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// vCPU count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponseOutput) VcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.VcpuCount }).(pulumi.IntOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResource struct {
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest *string `pulumi:"membershipCrManifest"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions *ResourceOptions `pulumi:"resourceOptions"`
}

// KubernetesResourceInput is an input type that accepts KubernetesResourceArgs and KubernetesResourceOutput values.
// You can construct a concrete instance of `KubernetesResourceInput` via:
//
//	KubernetesResourceArgs{...}
type KubernetesResourceInput interface {
	pulumi.Input

	ToKubernetesResourceOutput() KubernetesResourceOutput
	ToKubernetesResourceOutputWithContext(context.Context) KubernetesResourceOutput
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceArgs struct {
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest pulumi.StringPtrInput `pulumi:"membershipCrManifest"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions ResourceOptionsPtrInput `pulumi:"resourceOptions"`
}

func (KubernetesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResource)(nil)).Elem()
}

func (i KubernetesResourceArgs) ToKubernetesResourceOutput() KubernetesResourceOutput {
	return i.ToKubernetesResourceOutputWithContext(context.Background())
}

func (i KubernetesResourceArgs) ToKubernetesResourceOutputWithContext(ctx context.Context) KubernetesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceOutput)
}

func (i KubernetesResourceArgs) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return i.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (i KubernetesResourceArgs) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceOutput).ToKubernetesResourcePtrOutputWithContext(ctx)
}

// KubernetesResourcePtrInput is an input type that accepts KubernetesResourceArgs, KubernetesResourcePtr and KubernetesResourcePtrOutput values.
// You can construct a concrete instance of `KubernetesResourcePtrInput` via:
//
//	        KubernetesResourceArgs{...}
//
//	or:
//
//	        nil
type KubernetesResourcePtrInput interface {
	pulumi.Input

	ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput
	ToKubernetesResourcePtrOutputWithContext(context.Context) KubernetesResourcePtrOutput
}

type kubernetesResourcePtrType KubernetesResourceArgs

func KubernetesResourcePtr(v *KubernetesResourceArgs) KubernetesResourcePtrInput {
	return (*kubernetesResourcePtrType)(v)
}

func (*kubernetesResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResource)(nil)).Elem()
}

func (i *kubernetesResourcePtrType) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return i.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (i *kubernetesResourcePtrType) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourcePtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceOutput struct{ *pulumi.OutputState }

func (KubernetesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResource)(nil)).Elem()
}

func (o KubernetesResourceOutput) ToKubernetesResourceOutput() KubernetesResourceOutput {
	return o
}

func (o KubernetesResourceOutput) ToKubernetesResourceOutputWithContext(ctx context.Context) KubernetesResourceOutput {
	return o
}

func (o KubernetesResourceOutput) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return o.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (o KubernetesResourceOutput) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesResource) *KubernetesResource {
		return &v
	}).(KubernetesResourcePtrOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourceOutput) MembershipCrManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesResource) *string { return v.MembershipCrManifest }).(pulumi.StringPtrOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourceOutput) ResourceOptions() ResourceOptionsPtrOutput {
	return o.ApplyT(func(v KubernetesResource) *ResourceOptions { return v.ResourceOptions }).(ResourceOptionsPtrOutput)
}

type KubernetesResourcePtrOutput struct{ *pulumi.OutputState }

func (KubernetesResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResource)(nil)).Elem()
}

func (o KubernetesResourcePtrOutput) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return o
}

func (o KubernetesResourcePtrOutput) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return o
}

func (o KubernetesResourcePtrOutput) Elem() KubernetesResourceOutput {
	return o.ApplyT(func(v *KubernetesResource) KubernetesResource {
		if v != nil {
			return *v
		}
		var ret KubernetesResource
		return ret
	}).(KubernetesResourceOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourcePtrOutput) MembershipCrManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesResource) *string {
		if v == nil {
			return nil
		}
		return v.MembershipCrManifest
	}).(pulumi.StringPtrOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourcePtrOutput) ResourceOptions() ResourceOptionsPtrOutput {
	return o.ApplyT(func(v *KubernetesResource) *ResourceOptions {
		if v == nil {
			return nil
		}
		return v.ResourceOptions
	}).(ResourceOptionsPtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceResponse struct {
	// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	ConnectResources []ResourceManifestResponse `pulumi:"connectResources"`
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest string `pulumi:"membershipCrManifest"`
	// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	MembershipResources []ResourceManifestResponse `pulumi:"membershipResources"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions ResourceOptionsResponse `pulumi:"resourceOptions"`
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceResponseOutput struct{ *pulumi.OutputState }

func (KubernetesResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResourceResponse)(nil)).Elem()
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponseOutput() KubernetesResourceResponseOutput {
	return o
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponseOutputWithContext(ctx context.Context) KubernetesResourceResponseOutput {
	return o
}

// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponseOutput) ConnectResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) []ResourceManifestResponse { return v.ConnectResources }).(ResourceManifestResponseArrayOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourceResponseOutput) MembershipCrManifest() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) string { return v.MembershipCrManifest }).(pulumi.StringOutput)
}

// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponseOutput) MembershipResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) []ResourceManifestResponse { return v.MembershipResources }).(ResourceManifestResponseArrayOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourceResponseOutput) ResourceOptions() ResourceOptionsResponseOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) ResourceOptionsResponse { return v.ResourceOptions }).(ResourceOptionsResponseOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpoint struct {
	// Optional. Specific information for a GDC Edge Appliance cluster.
	ApplianceCluster *ApplianceCluster `pulumi:"applianceCluster"`
	// Optional. Specific information for a Google Edge cluster.
	EdgeCluster *EdgeCluster `pulumi:"edgeCluster"`
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster *GkeCluster `pulumi:"gkeCluster"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource *KubernetesResource `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster *MultiCloudCluster `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster *OnPremCluster `pulumi:"onPremCluster"`
}

// MembershipEndpointInput is an input type that accepts MembershipEndpointArgs and MembershipEndpointOutput values.
// You can construct a concrete instance of `MembershipEndpointInput` via:
//
//	MembershipEndpointArgs{...}
type MembershipEndpointInput interface {
	pulumi.Input

	ToMembershipEndpointOutput() MembershipEndpointOutput
	ToMembershipEndpointOutputWithContext(context.Context) MembershipEndpointOutput
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointArgs struct {
	// Optional. Specific information for a GDC Edge Appliance cluster.
	ApplianceCluster ApplianceClusterPtrInput `pulumi:"applianceCluster"`
	// Optional. Specific information for a Google Edge cluster.
	EdgeCluster EdgeClusterPtrInput `pulumi:"edgeCluster"`
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster GkeClusterPtrInput `pulumi:"gkeCluster"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource KubernetesResourcePtrInput `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster MultiCloudClusterPtrInput `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster OnPremClusterPtrInput `pulumi:"onPremCluster"`
}

func (MembershipEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return i.ToMembershipEndpointOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput)
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput).ToMembershipEndpointPtrOutputWithContext(ctx)
}

// MembershipEndpointPtrInput is an input type that accepts MembershipEndpointArgs, MembershipEndpointPtr and MembershipEndpointPtrOutput values.
// You can construct a concrete instance of `MembershipEndpointPtrInput` via:
//
//	        MembershipEndpointArgs{...}
//
//	or:
//
//	        nil
type MembershipEndpointPtrInput interface {
	pulumi.Input

	ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput
	ToMembershipEndpointPtrOutputWithContext(context.Context) MembershipEndpointPtrOutput
}

type membershipEndpointPtrType MembershipEndpointArgs

func MembershipEndpointPtr(v *MembershipEndpointArgs) MembershipEndpointPtrInput {
	return (*membershipEndpointPtrType)(v)
}

func (*membershipEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointPtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointOutput struct{ *pulumi.OutputState }

func (MembershipEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipEndpoint) *MembershipEndpoint {
		return &v
	}).(MembershipEndpointPtrOutput)
}

// Optional. Specific information for a GDC Edge Appliance cluster.
func (o MembershipEndpointOutput) ApplianceCluster() ApplianceClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *ApplianceCluster { return v.ApplianceCluster }).(ApplianceClusterPtrOutput)
}

// Optional. Specific information for a Google Edge cluster.
func (o MembershipEndpointOutput) EdgeCluster() EdgeClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *EdgeCluster { return v.EdgeCluster }).(EdgeClusterPtrOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointOutput) GkeCluster() GkeClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *GkeCluster { return v.GkeCluster }).(GkeClusterPtrOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointOutput) KubernetesResource() KubernetesResourcePtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *KubernetesResource { return v.KubernetesResource }).(KubernetesResourcePtrOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointOutput) MultiCloudCluster() MultiCloudClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *MultiCloudCluster { return v.MultiCloudCluster }).(MultiCloudClusterPtrOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointOutput) OnPremCluster() OnPremClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *OnPremCluster { return v.OnPremCluster }).(OnPremClusterPtrOutput)
}

type MembershipEndpointPtrOutput struct{ *pulumi.OutputState }

func (MembershipEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) Elem() MembershipEndpointOutput {
	return o.ApplyT(func(v *MembershipEndpoint) MembershipEndpoint {
		if v != nil {
			return *v
		}
		var ret MembershipEndpoint
		return ret
	}).(MembershipEndpointOutput)
}

// Optional. Specific information for a GDC Edge Appliance cluster.
func (o MembershipEndpointPtrOutput) ApplianceCluster() ApplianceClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *ApplianceCluster {
		if v == nil {
			return nil
		}
		return v.ApplianceCluster
	}).(ApplianceClusterPtrOutput)
}

// Optional. Specific information for a Google Edge cluster.
func (o MembershipEndpointPtrOutput) EdgeCluster() EdgeClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *EdgeCluster {
		if v == nil {
			return nil
		}
		return v.EdgeCluster
	}).(EdgeClusterPtrOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointPtrOutput) GkeCluster() GkeClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *GkeCluster {
		if v == nil {
			return nil
		}
		return v.GkeCluster
	}).(GkeClusterPtrOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointPtrOutput) KubernetesResource() KubernetesResourcePtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *KubernetesResource {
		if v == nil {
			return nil
		}
		return v.KubernetesResource
	}).(KubernetesResourcePtrOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointPtrOutput) MultiCloudCluster() MultiCloudClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *MultiCloudCluster {
		if v == nil {
			return nil
		}
		return v.MultiCloudCluster
	}).(MultiCloudClusterPtrOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointPtrOutput) OnPremCluster() OnPremClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *OnPremCluster {
		if v == nil {
			return nil
		}
		return v.OnPremCluster
	}).(OnPremClusterPtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointResponse struct {
	// Optional. Specific information for a GDC Edge Appliance cluster.
	ApplianceCluster ApplianceClusterResponse `pulumi:"applianceCluster"`
	// Optional. Specific information for a Google Edge cluster.
	EdgeCluster EdgeClusterResponse `pulumi:"edgeCluster"`
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster GkeClusterResponse `pulumi:"gkeCluster"`
	// Useful Kubernetes-specific metadata.
	KubernetesMetadata KubernetesMetadataResponse `pulumi:"kubernetesMetadata"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource KubernetesResourceResponse `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster MultiCloudClusterResponse `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster OnPremClusterResponse `pulumi:"onPremCluster"`
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointResponseOutput struct{ *pulumi.OutputState }

func (MembershipEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpointResponse)(nil)).Elem()
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponseOutput() MembershipEndpointResponseOutput {
	return o
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponseOutputWithContext(ctx context.Context) MembershipEndpointResponseOutput {
	return o
}

// Optional. Specific information for a GDC Edge Appliance cluster.
func (o MembershipEndpointResponseOutput) ApplianceCluster() ApplianceClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) ApplianceClusterResponse { return v.ApplianceCluster }).(ApplianceClusterResponseOutput)
}

// Optional. Specific information for a Google Edge cluster.
func (o MembershipEndpointResponseOutput) EdgeCluster() EdgeClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) EdgeClusterResponse { return v.EdgeCluster }).(EdgeClusterResponseOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointResponseOutput) GkeCluster() GkeClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) GkeClusterResponse { return v.GkeCluster }).(GkeClusterResponseOutput)
}

// Useful Kubernetes-specific metadata.
func (o MembershipEndpointResponseOutput) KubernetesMetadata() KubernetesMetadataResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) KubernetesMetadataResponse { return v.KubernetesMetadata }).(KubernetesMetadataResponseOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointResponseOutput) KubernetesResource() KubernetesResourceResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) KubernetesResourceResponse { return v.KubernetesResource }).(KubernetesResourceResponseOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointResponseOutput) MultiCloudCluster() MultiCloudClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) MultiCloudClusterResponse { return v.MultiCloudCluster }).(MultiCloudClusterResponseOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointResponseOutput) OnPremCluster() OnPremClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) OnPremClusterResponse { return v.OnPremCluster }).(OnPremClusterResponseOutput)
}

// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpec struct {
	// Specifies workload certificate management.
	CertificateManagement *MembershipSpecCertificateManagement `pulumi:"certificateManagement"`
}

// MembershipSpecInput is an input type that accepts MembershipSpecArgs and MembershipSpecOutput values.
// You can construct a concrete instance of `MembershipSpecInput` via:
//
//	MembershipSpecArgs{...}
type MembershipSpecInput interface {
	pulumi.Input

	ToMembershipSpecOutput() MembershipSpecOutput
	ToMembershipSpecOutputWithContext(context.Context) MembershipSpecOutput
}

// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpecArgs struct {
	// Specifies workload certificate management.
	CertificateManagement MembershipSpecCertificateManagementPtrInput `pulumi:"certificateManagement"`
}

func (MembershipSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipSpec)(nil)).Elem()
}

func (i MembershipSpecArgs) ToMembershipSpecOutput() MembershipSpecOutput {
	return i.ToMembershipSpecOutputWithContext(context.Background())
}

func (i MembershipSpecArgs) ToMembershipSpecOutputWithContext(ctx context.Context) MembershipSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipSpecOutput)
}

func (i MembershipSpecArgs) ToMembershipSpecPtrOutput() MembershipSpecPtrOutput {
	return i.ToMembershipSpecPtrOutputWithContext(context.Background())
}

func (i MembershipSpecArgs) ToMembershipSpecPtrOutputWithContext(ctx context.Context) MembershipSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipSpecOutput).ToMembershipSpecPtrOutputWithContext(ctx)
}

// MembershipSpecPtrInput is an input type that accepts MembershipSpecArgs, MembershipSpecPtr and MembershipSpecPtrOutput values.
// You can construct a concrete instance of `MembershipSpecPtrInput` via:
//
//	        MembershipSpecArgs{...}
//
//	or:
//
//	        nil
type MembershipSpecPtrInput interface {
	pulumi.Input

	ToMembershipSpecPtrOutput() MembershipSpecPtrOutput
	ToMembershipSpecPtrOutputWithContext(context.Context) MembershipSpecPtrOutput
}

type membershipSpecPtrType MembershipSpecArgs

func MembershipSpecPtr(v *MembershipSpecArgs) MembershipSpecPtrInput {
	return (*membershipSpecPtrType)(v)
}

func (*membershipSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipSpec)(nil)).Elem()
}

func (i *membershipSpecPtrType) ToMembershipSpecPtrOutput() MembershipSpecPtrOutput {
	return i.ToMembershipSpecPtrOutputWithContext(context.Background())
}

func (i *membershipSpecPtrType) ToMembershipSpecPtrOutputWithContext(ctx context.Context) MembershipSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipSpecPtrOutput)
}

// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpecOutput struct{ *pulumi.OutputState }

func (MembershipSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipSpec)(nil)).Elem()
}

func (o MembershipSpecOutput) ToMembershipSpecOutput() MembershipSpecOutput {
	return o
}

func (o MembershipSpecOutput) ToMembershipSpecOutputWithContext(ctx context.Context) MembershipSpecOutput {
	return o
}

func (o MembershipSpecOutput) ToMembershipSpecPtrOutput() MembershipSpecPtrOutput {
	return o.ToMembershipSpecPtrOutputWithContext(context.Background())
}

func (o MembershipSpecOutput) ToMembershipSpecPtrOutputWithContext(ctx context.Context) MembershipSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipSpec) *MembershipSpec {
		return &v
	}).(MembershipSpecPtrOutput)
}

// Specifies workload certificate management.
func (o MembershipSpecOutput) CertificateManagement() MembershipSpecCertificateManagementPtrOutput {
	return o.ApplyT(func(v MembershipSpec) *MembershipSpecCertificateManagement { return v.CertificateManagement }).(MembershipSpecCertificateManagementPtrOutput)
}

type MembershipSpecPtrOutput struct{ *pulumi.OutputState }

func (MembershipSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipSpec)(nil)).Elem()
}

func (o MembershipSpecPtrOutput) ToMembershipSpecPtrOutput() MembershipSpecPtrOutput {
	return o
}

func (o MembershipSpecPtrOutput) ToMembershipSpecPtrOutputWithContext(ctx context.Context) MembershipSpecPtrOutput {
	return o
}

func (o MembershipSpecPtrOutput) Elem() MembershipSpecOutput {
	return o.ApplyT(func(v *MembershipSpec) MembershipSpec {
		if v != nil {
			return *v
		}
		var ret MembershipSpec
		return ret
	}).(MembershipSpecOutput)
}

// Specifies workload certificate management.
func (o MembershipSpecPtrOutput) CertificateManagement() MembershipSpecCertificateManagementPtrOutput {
	return o.ApplyT(func(v *MembershipSpec) *MembershipSpecCertificateManagement {
		if v == nil {
			return nil
		}
		return v.CertificateManagement
	}).(MembershipSpecCertificateManagementPtrOutput)
}

// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpecResponse struct {
	// Specifies workload certificate management.
	CertificateManagement string `pulumi:"certificateManagement"`
}

// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpecResponseOutput struct{ *pulumi.OutputState }

func (MembershipSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipSpecResponse)(nil)).Elem()
}

func (o MembershipSpecResponseOutput) ToMembershipSpecResponseOutput() MembershipSpecResponseOutput {
	return o
}

func (o MembershipSpecResponseOutput) ToMembershipSpecResponseOutputWithContext(ctx context.Context) MembershipSpecResponseOutput {
	return o
}

// Specifies workload certificate management.
func (o MembershipSpecResponseOutput) CertificateManagement() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipSpecResponse) string { return v.CertificateManagement }).(pulumi.StringOutput)
}

// MembershipState describes the state of a Membership resource.
type MembershipStateResponse struct {
	// The current state of the Membership resource.
	Code string `pulumi:"code"`
}

// MembershipState describes the state of a Membership resource.
type MembershipStateResponseOutput struct{ *pulumi.OutputState }

func (MembershipStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipStateResponse)(nil)).Elem()
}

func (o MembershipStateResponseOutput) ToMembershipStateResponseOutput() MembershipStateResponseOutput {
	return o
}

func (o MembershipStateResponseOutput) ToMembershipStateResponseOutputWithContext(ctx context.Context) MembershipStateResponseOutput {
	return o
}

// The current state of the Membership resource.
func (o MembershipStateResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipStateResponse) string { return v.Code }).(pulumi.StringOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudCluster struct {
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
	ResourceLink *string `pulumi:"resourceLink"`
}

// MultiCloudClusterInput is an input type that accepts MultiCloudClusterArgs and MultiCloudClusterOutput values.
// You can construct a concrete instance of `MultiCloudClusterInput` via:
//
//	MultiCloudClusterArgs{...}
type MultiCloudClusterInput interface {
	pulumi.Input

	ToMultiCloudClusterOutput() MultiCloudClusterOutput
	ToMultiCloudClusterOutputWithContext(context.Context) MultiCloudClusterOutput
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (MultiCloudClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudCluster)(nil)).Elem()
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterOutput() MultiCloudClusterOutput {
	return i.ToMultiCloudClusterOutputWithContext(context.Background())
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterOutputWithContext(ctx context.Context) MultiCloudClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterOutput)
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return i.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterOutput).ToMultiCloudClusterPtrOutputWithContext(ctx)
}

// MultiCloudClusterPtrInput is an input type that accepts MultiCloudClusterArgs, MultiCloudClusterPtr and MultiCloudClusterPtrOutput values.
// You can construct a concrete instance of `MultiCloudClusterPtrInput` via:
//
//	        MultiCloudClusterArgs{...}
//
//	or:
//
//	        nil
type MultiCloudClusterPtrInput interface {
	pulumi.Input

	ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput
	ToMultiCloudClusterPtrOutputWithContext(context.Context) MultiCloudClusterPtrOutput
}

type multiCloudClusterPtrType MultiCloudClusterArgs

func MultiCloudClusterPtr(v *MultiCloudClusterArgs) MultiCloudClusterPtrInput {
	return (*multiCloudClusterPtrType)(v)
}

func (*multiCloudClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudCluster)(nil)).Elem()
}

func (i *multiCloudClusterPtrType) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return i.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (i *multiCloudClusterPtrType) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterPtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudCluster)(nil)).Elem()
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterOutput() MultiCloudClusterOutput {
	return o
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterOutputWithContext(ctx context.Context) MultiCloudClusterOutput {
	return o
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return o.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiCloudCluster) *MultiCloudCluster {
		return &v
	}).(MultiCloudClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
func (o MultiCloudClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiCloudCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type MultiCloudClusterPtrOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudCluster)(nil)).Elem()
}

func (o MultiCloudClusterPtrOutput) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return o
}

func (o MultiCloudClusterPtrOutput) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return o
}

func (o MultiCloudClusterPtrOutput) Elem() MultiCloudClusterOutput {
	return o.ApplyT(func(v *MultiCloudCluster) MultiCloudCluster {
		if v != nil {
			return *v
		}
		var ret MultiCloudCluster
		return ret
	}).(MultiCloudClusterOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
func (o MultiCloudClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiCloudCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterResponse struct {
	// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
	ResourceLink string `pulumi:"resourceLink"`
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterResponseOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudClusterResponse)(nil)).Elem()
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponseOutput() MultiCloudClusterResponseOutput {
	return o
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponseOutputWithContext(ctx context.Context) MultiCloudClusterResponseOutput {
	return o
}

// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
func (o MultiCloudClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v MultiCloudClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
func (o MultiCloudClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v MultiCloudClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpec struct {
	// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	//
	// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	Billing *MultiClusterIngressFeatureSpecBilling `pulumi:"billing"`
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership *string `pulumi:"configMembership"`
}

// MultiClusterIngressFeatureSpecInput is an input type that accepts MultiClusterIngressFeatureSpecArgs and MultiClusterIngressFeatureSpecOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecInput` via:
//
//	MultiClusterIngressFeatureSpecArgs{...}
type MultiClusterIngressFeatureSpecInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput
	ToMultiClusterIngressFeatureSpecOutputWithContext(context.Context) MultiClusterIngressFeatureSpecOutput
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecArgs struct {
	// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	//
	// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	Billing MultiClusterIngressFeatureSpecBillingPtrInput `pulumi:"billing"`
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership pulumi.StringPtrInput `pulumi:"configMembership"`
}

func (MultiClusterIngressFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput {
	return i.ToMultiClusterIngressFeatureSpecOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecOutput)
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return i.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecOutput).ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx)
}

// MultiClusterIngressFeatureSpecPtrInput is an input type that accepts MultiClusterIngressFeatureSpecArgs, MultiClusterIngressFeatureSpecPtr and MultiClusterIngressFeatureSpecPtrOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecPtrInput` via:
//
//	        MultiClusterIngressFeatureSpecArgs{...}
//
//	or:
//
//	        nil
type MultiClusterIngressFeatureSpecPtrInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput
	ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Context) MultiClusterIngressFeatureSpecPtrOutput
}

type multiClusterIngressFeatureSpecPtrType MultiClusterIngressFeatureSpecArgs

func MultiClusterIngressFeatureSpecPtr(v *MultiClusterIngressFeatureSpecArgs) MultiClusterIngressFeatureSpecPtrInput {
	return (*multiClusterIngressFeatureSpecPtrType)(v)
}

func (*multiClusterIngressFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (i *multiClusterIngressFeatureSpecPtrType) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return i.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *multiClusterIngressFeatureSpecPtrType) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecPtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiClusterIngressFeatureSpec) *MultiClusterIngressFeatureSpec {
		return &v
	}).(MultiClusterIngressFeatureSpecPtrOutput)
}

// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
//
// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
func (o MultiClusterIngressFeatureSpecOutput) Billing() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpec) *MultiClusterIngressFeatureSpecBilling { return v.Billing }).(MultiClusterIngressFeatureSpecBillingPtrOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpec) *string { return v.ConfigMembership }).(pulumi.StringPtrOutput)
}

type MultiClusterIngressFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecPtrOutput) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecPtrOutput) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecPtrOutput) Elem() MultiClusterIngressFeatureSpecOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpec) MultiClusterIngressFeatureSpec {
		if v != nil {
			return *v
		}
		var ret MultiClusterIngressFeatureSpec
		return ret
	}).(MultiClusterIngressFeatureSpecOutput)
}

// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
//
// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
func (o MultiClusterIngressFeatureSpecPtrOutput) Billing() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpec) *MultiClusterIngressFeatureSpecBilling {
		if v == nil {
			return nil
		}
		return v.Billing
	}).(MultiClusterIngressFeatureSpecBillingPtrOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecPtrOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpec) *string {
		if v == nil {
			return nil
		}
		return v.ConfigMembership
	}).(pulumi.StringPtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecResponse struct {
	// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	//
	// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
	Billing string `pulumi:"billing"`
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership string `pulumi:"configMembership"`
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpecResponse)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponseOutput() MultiClusterIngressFeatureSpecResponseOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponseOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponseOutput {
	return o
}

// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
//
// Deprecated: Deprecated: This field will be ignored and should not be set. Customer's billing structure.
func (o MultiClusterIngressFeatureSpecResponseOutput) Billing() pulumi.StringOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpecResponse) string { return v.Billing }).(pulumi.StringOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecResponseOutput) ConfigMembership() pulumi.StringOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpecResponse) string { return v.ConfigMembership }).(pulumi.StringOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremCluster struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster *bool `pulumi:"adminCluster"`
	// Immutable. The on prem cluster's type.
	ClusterType *OnPremClusterClusterType `pulumi:"clusterType"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink *string `pulumi:"resourceLink"`
}

// OnPremClusterInput is an input type that accepts OnPremClusterArgs and OnPremClusterOutput values.
// You can construct a concrete instance of `OnPremClusterInput` via:
//
//	OnPremClusterArgs{...}
type OnPremClusterInput interface {
	pulumi.Input

	ToOnPremClusterOutput() OnPremClusterOutput
	ToOnPremClusterOutputWithContext(context.Context) OnPremClusterOutput
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterArgs struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster pulumi.BoolPtrInput `pulumi:"adminCluster"`
	// Immutable. The on prem cluster's type.
	ClusterType OnPremClusterClusterTypePtrInput `pulumi:"clusterType"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (OnPremClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremCluster)(nil)).Elem()
}

func (i OnPremClusterArgs) ToOnPremClusterOutput() OnPremClusterOutput {
	return i.ToOnPremClusterOutputWithContext(context.Background())
}

func (i OnPremClusterArgs) ToOnPremClusterOutputWithContext(ctx context.Context) OnPremClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterOutput)
}

func (i OnPremClusterArgs) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return i.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (i OnPremClusterArgs) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterOutput).ToOnPremClusterPtrOutputWithContext(ctx)
}

// OnPremClusterPtrInput is an input type that accepts OnPremClusterArgs, OnPremClusterPtr and OnPremClusterPtrOutput values.
// You can construct a concrete instance of `OnPremClusterPtrInput` via:
//
//	        OnPremClusterArgs{...}
//
//	or:
//
//	        nil
type OnPremClusterPtrInput interface {
	pulumi.Input

	ToOnPremClusterPtrOutput() OnPremClusterPtrOutput
	ToOnPremClusterPtrOutputWithContext(context.Context) OnPremClusterPtrOutput
}

type onPremClusterPtrType OnPremClusterArgs

func OnPremClusterPtr(v *OnPremClusterArgs) OnPremClusterPtrInput {
	return (*onPremClusterPtrType)(v)
}

func (*onPremClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremCluster)(nil)).Elem()
}

func (i *onPremClusterPtrType) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return i.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (i *onPremClusterPtrType) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterPtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterOutput struct{ *pulumi.OutputState }

func (OnPremClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremCluster)(nil)).Elem()
}

func (o OnPremClusterOutput) ToOnPremClusterOutput() OnPremClusterOutput {
	return o
}

func (o OnPremClusterOutput) ToOnPremClusterOutputWithContext(ctx context.Context) OnPremClusterOutput {
	return o
}

func (o OnPremClusterOutput) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return o.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (o OnPremClusterOutput) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnPremCluster) *OnPremCluster {
		return &v
	}).(OnPremClusterPtrOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterOutput) AdminCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnPremCluster) *bool { return v.AdminCluster }).(pulumi.BoolPtrOutput)
}

// Immutable. The on prem cluster's type.
func (o OnPremClusterOutput) ClusterType() OnPremClusterClusterTypePtrOutput {
	return o.ApplyT(func(v OnPremCluster) *OnPremClusterClusterType { return v.ClusterType }).(OnPremClusterClusterTypePtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnPremCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type OnPremClusterPtrOutput struct{ *pulumi.OutputState }

func (OnPremClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremCluster)(nil)).Elem()
}

func (o OnPremClusterPtrOutput) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return o
}

func (o OnPremClusterPtrOutput) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return o
}

func (o OnPremClusterPtrOutput) Elem() OnPremClusterOutput {
	return o.ApplyT(func(v *OnPremCluster) OnPremCluster {
		if v != nil {
			return *v
		}
		var ret OnPremCluster
		return ret
	}).(OnPremClusterOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterPtrOutput) AdminCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnPremCluster) *bool {
		if v == nil {
			return nil
		}
		return v.AdminCluster
	}).(pulumi.BoolPtrOutput)
}

// Immutable. The on prem cluster's type.
func (o OnPremClusterPtrOutput) ClusterType() OnPremClusterClusterTypePtrOutput {
	return o.ApplyT(func(v *OnPremCluster) *OnPremClusterClusterType {
		if v == nil {
			return nil
		}
		return v.ClusterType
	}).(OnPremClusterClusterTypePtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterResponse struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster bool `pulumi:"adminCluster"`
	// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. The on prem cluster's type.
	ClusterType string `pulumi:"clusterType"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink string `pulumi:"resourceLink"`
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterResponseOutput struct{ *pulumi.OutputState }

func (OnPremClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremClusterResponse)(nil)).Elem()
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponseOutput() OnPremClusterResponseOutput {
	return o
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponseOutputWithContext(ctx context.Context) OnPremClusterResponseOutput {
	return o
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterResponseOutput) AdminCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v OnPremClusterResponse) bool { return v.AdminCluster }).(pulumi.BoolOutput)
}

// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
func (o OnPremClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v OnPremClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. The on prem cluster's type.
func (o OnPremClusterResponseOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremClusterResponse) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

// ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
type ResourceManifestResponse struct {
	// Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
	ClusterScoped bool `pulumi:"clusterScoped"`
	// YAML manifest of the resource.
	Manifest string `pulumi:"manifest"`
}

// ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
type ResourceManifestResponseOutput struct{ *pulumi.OutputState }

func (ResourceManifestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceManifestResponse)(nil)).Elem()
}

func (o ResourceManifestResponseOutput) ToResourceManifestResponseOutput() ResourceManifestResponseOutput {
	return o
}

func (o ResourceManifestResponseOutput) ToResourceManifestResponseOutputWithContext(ctx context.Context) ResourceManifestResponseOutput {
	return o
}

// Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
func (o ResourceManifestResponseOutput) ClusterScoped() pulumi.BoolOutput {
	return o.ApplyT(func(v ResourceManifestResponse) bool { return v.ClusterScoped }).(pulumi.BoolOutput)
}

// YAML manifest of the resource.
func (o ResourceManifestResponseOutput) Manifest() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceManifestResponse) string { return v.Manifest }).(pulumi.StringOutput)
}

type ResourceManifestResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceManifestResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceManifestResponse)(nil)).Elem()
}

func (o ResourceManifestResponseArrayOutput) ToResourceManifestResponseArrayOutput() ResourceManifestResponseArrayOutput {
	return o
}

func (o ResourceManifestResponseArrayOutput) ToResourceManifestResponseArrayOutputWithContext(ctx context.Context) ResourceManifestResponseArrayOutput {
	return o
}

func (o ResourceManifestResponseArrayOutput) Index(i pulumi.IntInput) ResourceManifestResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceManifestResponse {
		return vs[0].([]ResourceManifestResponse)[vs[1].(int)]
	}).(ResourceManifestResponseOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptions struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion *string `pulumi:"connectVersion"`
	// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
	K8sVersion *string `pulumi:"k8sVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd *bool `pulumi:"v1beta1Crd"`
}

// ResourceOptionsInput is an input type that accepts ResourceOptionsArgs and ResourceOptionsOutput values.
// You can construct a concrete instance of `ResourceOptionsInput` via:
//
//	ResourceOptionsArgs{...}
type ResourceOptionsInput interface {
	pulumi.Input

	ToResourceOptionsOutput() ResourceOptionsOutput
	ToResourceOptionsOutputWithContext(context.Context) ResourceOptionsOutput
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsArgs struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion pulumi.StringPtrInput `pulumi:"connectVersion"`
	// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
	K8sVersion pulumi.StringPtrInput `pulumi:"k8sVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd pulumi.BoolPtrInput `pulumi:"v1beta1Crd"`
}

func (ResourceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptions)(nil)).Elem()
}

func (i ResourceOptionsArgs) ToResourceOptionsOutput() ResourceOptionsOutput {
	return i.ToResourceOptionsOutputWithContext(context.Background())
}

func (i ResourceOptionsArgs) ToResourceOptionsOutputWithContext(ctx context.Context) ResourceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsOutput)
}

func (i ResourceOptionsArgs) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return i.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (i ResourceOptionsArgs) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsOutput).ToResourceOptionsPtrOutputWithContext(ctx)
}

// ResourceOptionsPtrInput is an input type that accepts ResourceOptionsArgs, ResourceOptionsPtr and ResourceOptionsPtrOutput values.
// You can construct a concrete instance of `ResourceOptionsPtrInput` via:
//
//	        ResourceOptionsArgs{...}
//
//	or:
//
//	        nil
type ResourceOptionsPtrInput interface {
	pulumi.Input

	ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput
	ToResourceOptionsPtrOutputWithContext(context.Context) ResourceOptionsPtrOutput
}

type resourceOptionsPtrType ResourceOptionsArgs

func ResourceOptionsPtr(v *ResourceOptionsArgs) ResourceOptionsPtrInput {
	return (*resourceOptionsPtrType)(v)
}

func (*resourceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptions)(nil)).Elem()
}

func (i *resourceOptionsPtrType) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return i.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (i *resourceOptionsPtrType) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsPtrOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsOutput struct{ *pulumi.OutputState }

func (ResourceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptions)(nil)).Elem()
}

func (o ResourceOptionsOutput) ToResourceOptionsOutput() ResourceOptionsOutput {
	return o
}

func (o ResourceOptionsOutput) ToResourceOptionsOutputWithContext(ctx context.Context) ResourceOptionsOutput {
	return o
}

func (o ResourceOptionsOutput) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return o.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (o ResourceOptionsOutput) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceOptions) *ResourceOptions {
		return &v
	}).(ResourceOptionsPtrOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsOutput) ConnectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOptions) *string { return v.ConnectVersion }).(pulumi.StringPtrOutput)
}

// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
func (o ResourceOptionsOutput) K8sVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOptions) *string { return v.K8sVersion }).(pulumi.StringPtrOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsOutput) V1beta1Crd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceOptions) *bool { return v.V1beta1Crd }).(pulumi.BoolPtrOutput)
}

type ResourceOptionsPtrOutput struct{ *pulumi.OutputState }

func (ResourceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptions)(nil)).Elem()
}

func (o ResourceOptionsPtrOutput) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return o
}

func (o ResourceOptionsPtrOutput) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return o
}

func (o ResourceOptionsPtrOutput) Elem() ResourceOptionsOutput {
	return o.ApplyT(func(v *ResourceOptions) ResourceOptions {
		if v != nil {
			return *v
		}
		var ret ResourceOptions
		return ret
	}).(ResourceOptionsOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsPtrOutput) ConnectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceOptions) *string {
		if v == nil {
			return nil
		}
		return v.ConnectVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
func (o ResourceOptionsPtrOutput) K8sVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceOptions) *string {
		if v == nil {
			return nil
		}
		return v.K8sVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsPtrOutput) V1beta1Crd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceOptions) *bool {
		if v == nil {
			return nil
		}
		return v.V1beta1Crd
	}).(pulumi.BoolPtrOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsResponse struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion string `pulumi:"connectVersion"`
	// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
	K8sVersion string `pulumi:"k8sVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd bool `pulumi:"v1beta1Crd"`
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsResponseOutput struct{ *pulumi.OutputState }

func (ResourceOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptionsResponse)(nil)).Elem()
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponseOutput() ResourceOptionsResponseOutput {
	return o
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponseOutputWithContext(ctx context.Context) ResourceOptionsResponseOutput {
	return o
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsResponseOutput) ConnectVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOptionsResponse) string { return v.ConnectVersion }).(pulumi.StringOutput)
}

// Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
func (o ResourceOptionsResponseOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOptionsResponse) string { return v.K8sVersion }).(pulumi.StringOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsResponseOutput) V1beta1Crd() pulumi.BoolOutput {
	return o.ApplyT(func(v ResourceOptionsResponse) bool { return v.V1beta1Crd }).(pulumi.BoolOutput)
}

// AnalysisMessageBase describes some common information that is needed for all messages.
type ServiceMeshAnalysisMessageBaseResponse struct {
	// A url pointing to the Service Mesh or Istio documentation for this specific error type.
	DocumentationUrl string `pulumi:"documentationUrl"`
	// Represents how severe a message is.
	Level string `pulumi:"level"`
	// Represents the specific type of a message.
	Type ServiceMeshTypeResponse `pulumi:"type"`
}

// AnalysisMessageBase describes some common information that is needed for all messages.
type ServiceMeshAnalysisMessageBaseResponseOutput struct{ *pulumi.OutputState }

func (ServiceMeshAnalysisMessageBaseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMeshAnalysisMessageBaseResponse)(nil)).Elem()
}

func (o ServiceMeshAnalysisMessageBaseResponseOutput) ToServiceMeshAnalysisMessageBaseResponseOutput() ServiceMeshAnalysisMessageBaseResponseOutput {
	return o
}

func (o ServiceMeshAnalysisMessageBaseResponseOutput) ToServiceMeshAnalysisMessageBaseResponseOutputWithContext(ctx context.Context) ServiceMeshAnalysisMessageBaseResponseOutput {
	return o
}

// A url pointing to the Service Mesh or Istio documentation for this specific error type.
func (o ServiceMeshAnalysisMessageBaseResponseOutput) DocumentationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageBaseResponse) string { return v.DocumentationUrl }).(pulumi.StringOutput)
}

// Represents how severe a message is.
func (o ServiceMeshAnalysisMessageBaseResponseOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageBaseResponse) string { return v.Level }).(pulumi.StringOutput)
}

// Represents the specific type of a message.
func (o ServiceMeshAnalysisMessageBaseResponseOutput) Type() ServiceMeshTypeResponseOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageBaseResponse) ServiceMeshTypeResponse { return v.Type }).(ServiceMeshTypeResponseOutput)
}

// AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration.
type ServiceMeshAnalysisMessageResponse struct {
	// A UI can combine these args with a template (based on message_base.type) to produce an internationalized message.
	Args map[string]string `pulumi:"args"`
	// A human readable description of what the error means. It is suitable for non-internationalize display purposes.
	Description string `pulumi:"description"`
	// Details common to all types of Istio and ServiceMesh analysis messages.
	MessageBase ServiceMeshAnalysisMessageBaseResponse `pulumi:"messageBase"`
	// A list of strings specifying the resource identifiers that were the cause of message generation. A "path" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster
	ResourcePaths []string `pulumi:"resourcePaths"`
}

// AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration.
type ServiceMeshAnalysisMessageResponseOutput struct{ *pulumi.OutputState }

func (ServiceMeshAnalysisMessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMeshAnalysisMessageResponse)(nil)).Elem()
}

func (o ServiceMeshAnalysisMessageResponseOutput) ToServiceMeshAnalysisMessageResponseOutput() ServiceMeshAnalysisMessageResponseOutput {
	return o
}

func (o ServiceMeshAnalysisMessageResponseOutput) ToServiceMeshAnalysisMessageResponseOutputWithContext(ctx context.Context) ServiceMeshAnalysisMessageResponseOutput {
	return o
}

// A UI can combine these args with a template (based on message_base.type) to produce an internationalized message.
func (o ServiceMeshAnalysisMessageResponseOutput) Args() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageResponse) map[string]string { return v.Args }).(pulumi.StringMapOutput)
}

// A human readable description of what the error means. It is suitable for non-internationalize display purposes.
func (o ServiceMeshAnalysisMessageResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Details common to all types of Istio and ServiceMesh analysis messages.
func (o ServiceMeshAnalysisMessageResponseOutput) MessageBase() ServiceMeshAnalysisMessageBaseResponseOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageResponse) ServiceMeshAnalysisMessageBaseResponse {
		return v.MessageBase
	}).(ServiceMeshAnalysisMessageBaseResponseOutput)
}

// A list of strings specifying the resource identifiers that were the cause of message generation. A "path" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster
func (o ServiceMeshAnalysisMessageResponseOutput) ResourcePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceMeshAnalysisMessageResponse) []string { return v.ResourcePaths }).(pulumi.StringArrayOutput)
}

type ServiceMeshAnalysisMessageResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceMeshAnalysisMessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceMeshAnalysisMessageResponse)(nil)).Elem()
}

func (o ServiceMeshAnalysisMessageResponseArrayOutput) ToServiceMeshAnalysisMessageResponseArrayOutput() ServiceMeshAnalysisMessageResponseArrayOutput {
	return o
}

func (o ServiceMeshAnalysisMessageResponseArrayOutput) ToServiceMeshAnalysisMessageResponseArrayOutputWithContext(ctx context.Context) ServiceMeshAnalysisMessageResponseArrayOutput {
	return o
}

func (o ServiceMeshAnalysisMessageResponseArrayOutput) Index(i pulumi.IntInput) ServiceMeshAnalysisMessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceMeshAnalysisMessageResponse {
		return vs[0].([]ServiceMeshAnalysisMessageResponse)[vs[1].(int)]
	}).(ServiceMeshAnalysisMessageResponseOutput)
}

// **Service Mesh**: State for the whole Hub, as analyzed by the Service Mesh Hub Controller.
type ServiceMeshFeatureStateResponse struct {
	// Results of running Service Mesh analyzers.
	AnalysisMessages []ServiceMeshAnalysisMessageResponse `pulumi:"analysisMessages"`
}

// **Service Mesh**: State for the whole Hub, as analyzed by the Service Mesh Hub Controller.
type ServiceMeshFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (ServiceMeshFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMeshFeatureStateResponse)(nil)).Elem()
}

func (o ServiceMeshFeatureStateResponseOutput) ToServiceMeshFeatureStateResponseOutput() ServiceMeshFeatureStateResponseOutput {
	return o
}

func (o ServiceMeshFeatureStateResponseOutput) ToServiceMeshFeatureStateResponseOutputWithContext(ctx context.Context) ServiceMeshFeatureStateResponseOutput {
	return o
}

// Results of running Service Mesh analyzers.
func (o ServiceMeshFeatureStateResponseOutput) AnalysisMessages() ServiceMeshAnalysisMessageResponseArrayOutput {
	return o.ApplyT(func(v ServiceMeshFeatureStateResponse) []ServiceMeshAnalysisMessageResponse {
		return v.AnalysisMessages
	}).(ServiceMeshAnalysisMessageResponseArrayOutput)
}

// A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type
type ServiceMeshTypeResponse struct {
	// A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. "IST0001" is mapped to the "InternalError" message type.)
	Code string `pulumi:"code"`
	// A human-readable name for the message type. e.g. "InternalError", "PodMissingProxy". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)
	DisplayName string `pulumi:"displayName"`
}

// A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type
type ServiceMeshTypeResponseOutput struct{ *pulumi.OutputState }

func (ServiceMeshTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceMeshTypeResponse)(nil)).Elem()
}

func (o ServiceMeshTypeResponseOutput) ToServiceMeshTypeResponseOutput() ServiceMeshTypeResponseOutput {
	return o
}

func (o ServiceMeshTypeResponseOutput) ToServiceMeshTypeResponseOutputWithContext(ctx context.Context) ServiceMeshTypeResponseOutput {
	return o
}

// A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. "IST0001" is mapped to the "InternalError" message type.)
func (o ServiceMeshTypeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceMeshTypeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A human-readable name for the message type. e.g. "InternalError", "PodMissingProxy". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)
func (o ServiceMeshTypeResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceMeshTypeResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Status specifies state for the subcomponent.
type StatusResponse struct {
	// Code specifies AppDevExperienceFeature's subcomponent ready state.
	Code string `pulumi:"code"`
	// Description is populated if Code is Failed, explaining why it has failed.
	Description string `pulumi:"description"`
}

// Status specifies state for the subcomponent.
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

// Code specifies AppDevExperienceFeature's subcomponent ready state.
func (o StatusResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Description is populated if Code is Failed, explaining why it has failed.
func (o StatusResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Description }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnthosObservabilityFeatureSpecInput)(nil)).Elem(), AnthosObservabilityFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnthosObservabilityFeatureSpecPtrInput)(nil)).Elem(), AnthosObservabilityFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnthosObservabilityMembershipSpecInput)(nil)).Elem(), AnthosObservabilityMembershipSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnthosObservabilityMembershipSpecPtrInput)(nil)).Elem(), AnthosObservabilityMembershipSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecInput)(nil)).Elem(), AppDevExperienceFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecPtrInput)(nil)).Elem(), AppDevExperienceFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceClusterInput)(nil)).Elem(), ApplianceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplianceClusterPtrInput)(nil)).Elem(), ApplianceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigInput)(nil)).Elem(), AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigArrayInput)(nil)).Elem(), AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigInput)(nil)).Elem(), AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigArrayInput)(nil)).Elem(), AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityInput)(nil)).Elem(), AuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityPtrInput)(nil)).Elem(), AuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAuditLoggingFeatureSpecInput)(nil)).Elem(), CloudAuditLoggingFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAuditLoggingFeatureSpecPtrInput)(nil)).Elem(), CloudAuditLoggingFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecInput)(nil)).Elem(), CommonFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecPtrInput)(nil)).Elem(), CommonFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeClusterInput)(nil)).Elem(), EdgeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeClusterPtrInput)(nil)).Elem(), EdgeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecInput)(nil)).Elem(), FeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureSpecPtrInput)(nil)).Elem(), FeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetObservabilityFeatureSpecInput)(nil)).Elem(), FleetObservabilityFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetObservabilityFeatureSpecPtrInput)(nil)).Elem(), FleetObservabilityFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterInput)(nil)).Elem(), GkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterPtrInput)(nil)).Elem(), GkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourceInput)(nil)).Elem(), KubernetesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourcePtrInput)(nil)).Elem(), KubernetesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointPtrInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipSpecInput)(nil)).Elem(), MembershipSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipSpecPtrInput)(nil)).Elem(), MembershipSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterInput)(nil)).Elem(), MultiCloudClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterPtrInput)(nil)).Elem(), MultiCloudClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecInput)(nil)).Elem(), MultiClusterIngressFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecPtrInput)(nil)).Elem(), MultiClusterIngressFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterInput)(nil)).Elem(), OnPremClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterPtrInput)(nil)).Elem(), OnPremClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsInput)(nil)).Elem(), ResourceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsPtrInput)(nil)).Elem(), ResourceOptionsArgs{})
	pulumi.RegisterOutputType(AnthosObservabilityFeatureSpecOutput{})
	pulumi.RegisterOutputType(AnthosObservabilityFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(AnthosObservabilityFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(AnthosObservabilityMembershipSpecOutput{})
	pulumi.RegisterOutputType(AnthosObservabilityMembershipSpecPtrOutput{})
	pulumi.RegisterOutputType(AnthosObservabilityMembershipSpecResponseOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(ApplianceClusterOutput{})
	pulumi.RegisterOutputType(ApplianceClusterPtrOutput{})
	pulumi.RegisterOutputType(ApplianceClusterResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuthorityOutput{})
	pulumi.RegisterOutputType(AuthorityPtrOutput{})
	pulumi.RegisterOutputType(AuthorityResponseOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(CloudAuditLoggingFeatureSpecOutput{})
	pulumi.RegisterOutputType(CloudAuditLoggingFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(CloudAuditLoggingFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(CommonFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(EdgeClusterOutput{})
	pulumi.RegisterOutputType(EdgeClusterPtrOutput{})
	pulumi.RegisterOutputType(EdgeClusterResponseOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(FeatureResourceStateResponseOutput{})
	pulumi.RegisterOutputType(FeatureSpecOutput{})
	pulumi.RegisterOutputType(FeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(FeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(FeatureStateResponseOutput{})
	pulumi.RegisterOutputType(FleetLifecycleStateResponseOutput{})
	pulumi.RegisterOutputType(FleetObservabilityFeatureSpecOutput{})
	pulumi.RegisterOutputType(FleetObservabilityFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(FleetObservabilityFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(FleetObservabilityFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(GkeClusterOutput{})
	pulumi.RegisterOutputType(GkeClusterPtrOutput{})
	pulumi.RegisterOutputType(GkeClusterResponseOutput{})
	pulumi.RegisterOutputType(KubernetesMetadataResponseOutput{})
	pulumi.RegisterOutputType(KubernetesResourceOutput{})
	pulumi.RegisterOutputType(KubernetesResourcePtrOutput{})
	pulumi.RegisterOutputType(KubernetesResourceResponseOutput{})
	pulumi.RegisterOutputType(MembershipEndpointOutput{})
	pulumi.RegisterOutputType(MembershipEndpointPtrOutput{})
	pulumi.RegisterOutputType(MembershipEndpointResponseOutput{})
	pulumi.RegisterOutputType(MembershipSpecOutput{})
	pulumi.RegisterOutputType(MembershipSpecPtrOutput{})
	pulumi.RegisterOutputType(MembershipSpecResponseOutput{})
	pulumi.RegisterOutputType(MembershipStateResponseOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterPtrOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterResponseOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(OnPremClusterOutput{})
	pulumi.RegisterOutputType(OnPremClusterPtrOutput{})
	pulumi.RegisterOutputType(OnPremClusterResponseOutput{})
	pulumi.RegisterOutputType(ResourceManifestResponseOutput{})
	pulumi.RegisterOutputType(ResourceManifestResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceOptionsOutput{})
	pulumi.RegisterOutputType(ResourceOptionsPtrOutput{})
	pulumi.RegisterOutputType(ResourceOptionsResponseOutput{})
	pulumi.RegisterOutputType(ServiceMeshAnalysisMessageBaseResponseOutput{})
	pulumi.RegisterOutputType(ServiceMeshAnalysisMessageResponseOutput{})
	pulumi.RegisterOutputType(ServiceMeshAnalysisMessageResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceMeshFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(ServiceMeshTypeResponseOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
}
