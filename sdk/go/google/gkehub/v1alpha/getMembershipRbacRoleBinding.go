// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns the details of a Membership RBACRoleBinding.
func LookupMembershipRbacRoleBinding(ctx *pulumi.Context, args *LookupMembershipRbacRoleBindingArgs, opts ...pulumi.InvokeOption) (*LookupMembershipRbacRoleBindingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMembershipRbacRoleBindingResult
	err := ctx.Invoke("google-native:gkehub/v1alpha:getMembershipRbacRoleBinding", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMembershipRbacRoleBindingArgs struct {
	Location          string  `pulumi:"location"`
	MembershipId      string  `pulumi:"membershipId"`
	Project           *string `pulumi:"project"`
	RbacrolebindingId string  `pulumi:"rbacrolebindingId"`
}

type LookupMembershipRbacRoleBindingResult struct {
	// When the rbacrolebinding was created.
	CreateTime string `pulumi:"createTime"`
	// When the rbacrolebinding was deleted.
	DeleteTime string `pulumi:"deleteTime"`
	// group is the group, as seen by the kubernetes cluster.
	Group string `pulumi:"group"`
	// Optional. Labels for this RBACRolebinding.
	Labels map[string]string `pulumi:"labels"`
	// The resource name for the rbacrolebinding `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
	Name string `pulumi:"name"`
	// Role to bind to the principal
	Role RoleResponse `pulumi:"role"`
	// State of the rbacrolebinding resource.
	State RBACRoleBindingLifecycleStateResponse `pulumi:"state"`
	// Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
	Uid string `pulumi:"uid"`
	// When the rbacrolebinding was last updated.
	UpdateTime string `pulumi:"updateTime"`
	// user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
	User string `pulumi:"user"`
}

func LookupMembershipRbacRoleBindingOutput(ctx *pulumi.Context, args LookupMembershipRbacRoleBindingOutputArgs, opts ...pulumi.InvokeOption) LookupMembershipRbacRoleBindingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMembershipRbacRoleBindingResult, error) {
			args := v.(LookupMembershipRbacRoleBindingArgs)
			r, err := LookupMembershipRbacRoleBinding(ctx, &args, opts...)
			var s LookupMembershipRbacRoleBindingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMembershipRbacRoleBindingResultOutput)
}

type LookupMembershipRbacRoleBindingOutputArgs struct {
	Location          pulumi.StringInput    `pulumi:"location"`
	MembershipId      pulumi.StringInput    `pulumi:"membershipId"`
	Project           pulumi.StringPtrInput `pulumi:"project"`
	RbacrolebindingId pulumi.StringInput    `pulumi:"rbacrolebindingId"`
}

func (LookupMembershipRbacRoleBindingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipRbacRoleBindingArgs)(nil)).Elem()
}

type LookupMembershipRbacRoleBindingResultOutput struct{ *pulumi.OutputState }

func (LookupMembershipRbacRoleBindingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipRbacRoleBindingResult)(nil)).Elem()
}

func (o LookupMembershipRbacRoleBindingResultOutput) ToLookupMembershipRbacRoleBindingResultOutput() LookupMembershipRbacRoleBindingResultOutput {
	return o
}

func (o LookupMembershipRbacRoleBindingResultOutput) ToLookupMembershipRbacRoleBindingResultOutputWithContext(ctx context.Context) LookupMembershipRbacRoleBindingResultOutput {
	return o
}

func (o LookupMembershipRbacRoleBindingResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupMembershipRbacRoleBindingResult] {
	return pulumix.Output[LookupMembershipRbacRoleBindingResult]{
		OutputState: o.OutputState,
	}
}

// When the rbacrolebinding was created.
func (o LookupMembershipRbacRoleBindingResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// When the rbacrolebinding was deleted.
func (o LookupMembershipRbacRoleBindingResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// group is the group, as seen by the kubernetes cluster.
func (o LookupMembershipRbacRoleBindingResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.Group }).(pulumi.StringOutput)
}

// Optional. Labels for this RBACRolebinding.
func (o LookupMembershipRbacRoleBindingResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name for the rbacrolebinding `projects/{project}/locations/{location}/scopes/{scope}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
func (o LookupMembershipRbacRoleBindingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.Name }).(pulumi.StringOutput)
}

// Role to bind to the principal
func (o LookupMembershipRbacRoleBindingResultOutput) Role() RoleResponseOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) RoleResponse { return v.Role }).(RoleResponseOutput)
}

// State of the rbacrolebinding resource.
func (o LookupMembershipRbacRoleBindingResultOutput) State() RBACRoleBindingLifecycleStateResponseOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) RBACRoleBindingLifecycleStateResponse { return v.State }).(RBACRoleBindingLifecycleStateResponseOutput)
}

// Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
func (o LookupMembershipRbacRoleBindingResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.Uid }).(pulumi.StringOutput)
}

// When the rbacrolebinding was last updated.
func (o LookupMembershipRbacRoleBindingResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
func (o LookupMembershipRbacRoleBindingResultOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipRbacRoleBindingResult) string { return v.User }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMembershipRbacRoleBindingResultOutput{})
}
