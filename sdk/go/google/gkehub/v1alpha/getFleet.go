// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the details of a fleet.
func LookupFleet(ctx *pulumi.Context, args *LookupFleetArgs, opts ...pulumi.InvokeOption) (*LookupFleetResult, error) {
	var rv LookupFleetResult
	err := ctx.Invoke("google-native:gkehub/v1alpha:getFleet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFleetArgs struct {
	FleetId  string  `pulumi:"fleetId"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
}

type LookupFleetResult struct {
	// When the Fleet was created.
	CreateTime string `pulumi:"createTime"`
	// When the Fleet was deleted.
	DeleteTime string `pulumi:"deleteTime"`
	// Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`
	DisplayName string `pulumi:"displayName"`
	// The name for the fleet. The name must meet the following constraints: + The name of a fleet should be unique within the organization; + It must consist of lower case alphanumeric characters or `-`; + The length of the name must be less than or equal to 63; + Unicode names must be expressed in Punycode format (rfc3492). Examples: + prod-fleet + xn--wlq33vhyw9jb （Punycode form for "生产环境")
	FleetName string `pulumi:"fleetName"`
	// The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each GCP project can have at most one fleet resource, named "default".
	Name string `pulumi:"name"`
	// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.
	Uid string `pulumi:"uid"`
	// When the Fleet was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFleetOutput(ctx *pulumi.Context, args LookupFleetOutputArgs, opts ...pulumi.InvokeOption) LookupFleetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFleetResult, error) {
			args := v.(LookupFleetArgs)
			r, err := LookupFleet(ctx, &args, opts...)
			var s LookupFleetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFleetResultOutput)
}

type LookupFleetOutputArgs struct {
	FleetId  pulumi.StringInput    `pulumi:"fleetId"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFleetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetArgs)(nil)).Elem()
}

type LookupFleetResultOutput struct{ *pulumi.OutputState }

func (LookupFleetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResult)(nil)).Elem()
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutput() LookupFleetResultOutput {
	return o
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutputWithContext(ctx context.Context) LookupFleetResultOutput {
	return o
}

// When the Fleet was created.
func (o LookupFleetResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// When the Fleet was deleted.
func (o LookupFleetResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`
func (o LookupFleetResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The name for the fleet. The name must meet the following constraints: + The name of a fleet should be unique within the organization; + It must consist of lower case alphanumeric characters or `-`; + The length of the name must be less than or equal to 63; + Unicode names must be expressed in Punycode format (rfc3492). Examples: + prod-fleet + xn--wlq33vhyw9jb （Punycode form for "生产环境")
func (o LookupFleetResultOutput) FleetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.FleetName }).(pulumi.StringOutput)
}

// The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each GCP project can have at most one fleet resource, named "default".
func (o LookupFleetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid.
func (o LookupFleetResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.Uid }).(pulumi.StringOutput)
}

// When the Fleet was last updated.
func (o LookupFleetResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFleetResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetResultOutput{})
}
