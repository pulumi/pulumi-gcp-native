// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ========= FeatureConfig Services ========= Gets details of a featureConfig.
func LookupFeatureConfig(ctx *pulumi.Context, args *LookupFeatureConfigArgs, opts ...pulumi.InvokeOption) (*LookupFeatureConfigResult, error) {
	var rv LookupFeatureConfigResult
	err := ctx.Invoke("google-native:gkehub/v2alpha:getFeatureConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeatureConfigArgs struct {
	FeatureConfigId string  `pulumi:"featureConfigId"`
	Location        string  `pulumi:"location"`
	Project         *string `pulumi:"project"`
}

type LookupFeatureConfigResult struct {
	// When the FeatureConfig resource was created.
	CreateTime string `pulumi:"createTime"`
	// When the FeatureConfig resource was deleted.
	DeleteTime string `pulumi:"deleteTime"`
	// GCP labels for this FeatureConfig.
	Labels map[string]string `pulumi:"labels"`
	// Resource name of this FeatureConfig, in the format: `projects/{project}/locations/global/FeatureConfigs/{feature_type}/{feature_config}`
	Name string `pulumi:"name"`
	// Input only. Immutable. User input of feature spec. Note that this field is immutable. Must create a new FeatureConfig if a new feature spec is needed.
	Spec FeatureSpecResponse `pulumi:"spec"`
	// Lifecycle information of the FeatureConfig.
	State FeatureConfigStateResponse `pulumi:"state"`
	// Google-generated UUID for this resource. This is unique across all FeatureConfig resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
	UniqueId string `pulumi:"uniqueId"`
	// When the FeatureConfig resource was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFeatureConfigOutput(ctx *pulumi.Context, args LookupFeatureConfigOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureConfigResult, error) {
			args := v.(LookupFeatureConfigArgs)
			r, err := LookupFeatureConfig(ctx, &args, opts...)
			return *r, err
		}).(LookupFeatureConfigResultOutput)
}

type LookupFeatureConfigOutputArgs struct {
	FeatureConfigId pulumi.StringInput    `pulumi:"featureConfigId"`
	Location        pulumi.StringInput    `pulumi:"location"`
	Project         pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFeatureConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureConfigArgs)(nil)).Elem()
}

type LookupFeatureConfigResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureConfigResult)(nil)).Elem()
}

func (o LookupFeatureConfigResultOutput) ToLookupFeatureConfigResultOutput() LookupFeatureConfigResultOutput {
	return o
}

func (o LookupFeatureConfigResultOutput) ToLookupFeatureConfigResultOutputWithContext(ctx context.Context) LookupFeatureConfigResultOutput {
	return o
}

// When the FeatureConfig resource was created.
func (o LookupFeatureConfigResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// When the FeatureConfig resource was deleted.
func (o LookupFeatureConfigResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// GCP labels for this FeatureConfig.
func (o LookupFeatureConfigResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of this FeatureConfig, in the format: `projects/{project}/locations/global/FeatureConfigs/{feature_type}/{feature_config}`
func (o LookupFeatureConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Input only. Immutable. User input of feature spec. Note that this field is immutable. Must create a new FeatureConfig if a new feature spec is needed.
func (o LookupFeatureConfigResultOutput) Spec() FeatureSpecResponseOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) FeatureSpecResponse { return v.Spec }).(FeatureSpecResponseOutput)
}

// Lifecycle information of the FeatureConfig.
func (o LookupFeatureConfigResultOutput) State() FeatureConfigStateResponseOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) FeatureConfigStateResponse { return v.State }).(FeatureConfigStateResponseOutput)
}

// Google-generated UUID for this resource. This is unique across all FeatureConfig resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
func (o LookupFeatureConfigResultOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) string { return v.UniqueId }).(pulumi.StringOutput)
}

// When the FeatureConfig resource was last updated.
func (o LookupFeatureConfigResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFeatureConfigResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureConfigResultOutput{})
}
