// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpec struct {
}

// AppDevExperienceFeatureSpecInput is an input type that accepts AppDevExperienceFeatureSpecArgs and AppDevExperienceFeatureSpecOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecInput` via:
//
//          AppDevExperienceFeatureSpecArgs{...}
type AppDevExperienceFeatureSpecInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput
	ToAppDevExperienceFeatureSpecOutputWithContext(context.Context) AppDevExperienceFeatureSpecOutput
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecArgs struct {
}

func (AppDevExperienceFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput {
	return i.ToAppDevExperienceFeatureSpecOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecOutput)
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return i.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecArgs) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecOutput).ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx)
}

// AppDevExperienceFeatureSpecPtrInput is an input type that accepts AppDevExperienceFeatureSpecArgs, AppDevExperienceFeatureSpecPtr and AppDevExperienceFeatureSpecPtrOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecPtrInput` via:
//
//          AppDevExperienceFeatureSpecArgs{...}
//
//  or:
//
//          nil
type AppDevExperienceFeatureSpecPtrInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput
	ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Context) AppDevExperienceFeatureSpecPtrOutput
}

type appDevExperienceFeatureSpecPtrType AppDevExperienceFeatureSpecArgs

func AppDevExperienceFeatureSpecPtr(v *AppDevExperienceFeatureSpecArgs) AppDevExperienceFeatureSpecPtrInput {
	return (*appDevExperienceFeatureSpecPtrType)(v)
}

func (*appDevExperienceFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (i *appDevExperienceFeatureSpecPtrType) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return i.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *appDevExperienceFeatureSpecPtrType) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecPtrOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecOutput() AppDevExperienceFeatureSpecOutput {
	return o
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecOutput {
	return o
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return o.ToAppDevExperienceFeatureSpecPtrOutputWithContext(context.Background())
}

func (o AppDevExperienceFeatureSpecOutput) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDevExperienceFeatureSpec) *AppDevExperienceFeatureSpec {
		return &v
	}).(AppDevExperienceFeatureSpecPtrOutput)
}

type AppDevExperienceFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpec)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecPtrOutput) ToAppDevExperienceFeatureSpecPtrOutput() AppDevExperienceFeatureSpecPtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecPtrOutput) ToAppDevExperienceFeatureSpecPtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecPtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecPtrOutput) Elem() AppDevExperienceFeatureSpecOutput {
	return o.ApplyT(func(v *AppDevExperienceFeatureSpec) AppDevExperienceFeatureSpec {
		if v != nil {
			return *v
		}
		var ret AppDevExperienceFeatureSpec
		return ret
	}).(AppDevExperienceFeatureSpecOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecResponse struct {
}

// AppDevExperienceFeatureSpecResponseInput is an input type that accepts AppDevExperienceFeatureSpecResponseArgs and AppDevExperienceFeatureSpecResponseOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecResponseInput` via:
//
//          AppDevExperienceFeatureSpecResponseArgs{...}
type AppDevExperienceFeatureSpecResponseInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecResponseOutput() AppDevExperienceFeatureSpecResponseOutput
	ToAppDevExperienceFeatureSpecResponseOutputWithContext(context.Context) AppDevExperienceFeatureSpecResponseOutput
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecResponseArgs struct {
}

func (AppDevExperienceFeatureSpecResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpecResponse)(nil)).Elem()
}

func (i AppDevExperienceFeatureSpecResponseArgs) ToAppDevExperienceFeatureSpecResponseOutput() AppDevExperienceFeatureSpecResponseOutput {
	return i.ToAppDevExperienceFeatureSpecResponseOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecResponseArgs) ToAppDevExperienceFeatureSpecResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecResponseOutput)
}

func (i AppDevExperienceFeatureSpecResponseArgs) ToAppDevExperienceFeatureSpecResponsePtrOutput() AppDevExperienceFeatureSpecResponsePtrOutput {
	return i.ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureSpecResponseArgs) ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecResponseOutput).ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(ctx)
}

// AppDevExperienceFeatureSpecResponsePtrInput is an input type that accepts AppDevExperienceFeatureSpecResponseArgs, AppDevExperienceFeatureSpecResponsePtr and AppDevExperienceFeatureSpecResponsePtrOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureSpecResponsePtrInput` via:
//
//          AppDevExperienceFeatureSpecResponseArgs{...}
//
//  or:
//
//          nil
type AppDevExperienceFeatureSpecResponsePtrInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureSpecResponsePtrOutput() AppDevExperienceFeatureSpecResponsePtrOutput
	ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(context.Context) AppDevExperienceFeatureSpecResponsePtrOutput
}

type appDevExperienceFeatureSpecResponsePtrType AppDevExperienceFeatureSpecResponseArgs

func AppDevExperienceFeatureSpecResponsePtr(v *AppDevExperienceFeatureSpecResponseArgs) AppDevExperienceFeatureSpecResponsePtrInput {
	return (*appDevExperienceFeatureSpecResponsePtrType)(v)
}

func (*appDevExperienceFeatureSpecResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpecResponse)(nil)).Elem()
}

func (i *appDevExperienceFeatureSpecResponsePtrType) ToAppDevExperienceFeatureSpecResponsePtrOutput() AppDevExperienceFeatureSpecResponsePtrOutput {
	return i.ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i *appDevExperienceFeatureSpecResponsePtrType) ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureSpecResponsePtrOutput)
}

// Spec for App Dev Experience Feature.
type AppDevExperienceFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureSpecResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponseOutput() AppDevExperienceFeatureSpecResponseOutput {
	return o
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponseOutput {
	return o
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponsePtrOutput() AppDevExperienceFeatureSpecResponsePtrOutput {
	return o.ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (o AppDevExperienceFeatureSpecResponseOutput) ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDevExperienceFeatureSpecResponse) *AppDevExperienceFeatureSpecResponse {
		return &v
	}).(AppDevExperienceFeatureSpecResponsePtrOutput)
}

type AppDevExperienceFeatureSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureSpecResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureSpecResponsePtrOutput) ToAppDevExperienceFeatureSpecResponsePtrOutput() AppDevExperienceFeatureSpecResponsePtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecResponsePtrOutput) ToAppDevExperienceFeatureSpecResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureSpecResponsePtrOutput {
	return o
}

func (o AppDevExperienceFeatureSpecResponsePtrOutput) Elem() AppDevExperienceFeatureSpecResponseOutput {
	return o.ApplyT(func(v *AppDevExperienceFeatureSpecResponse) AppDevExperienceFeatureSpecResponse {
		if v != nil {
			return *v
		}
		var ret AppDevExperienceFeatureSpecResponse
		return ret
	}).(AppDevExperienceFeatureSpecResponseOutput)
}

// State for App Dev Exp Feature.
type AppDevExperienceFeatureStateResponse struct {
	// Status of subcomponent that detects configured Service Mesh resources.
	NetworkingInstallSucceeded StatusResponse `pulumi:"networkingInstallSucceeded"`
}

// AppDevExperienceFeatureStateResponseInput is an input type that accepts AppDevExperienceFeatureStateResponseArgs and AppDevExperienceFeatureStateResponseOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureStateResponseInput` via:
//
//          AppDevExperienceFeatureStateResponseArgs{...}
type AppDevExperienceFeatureStateResponseInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureStateResponseOutput() AppDevExperienceFeatureStateResponseOutput
	ToAppDevExperienceFeatureStateResponseOutputWithContext(context.Context) AppDevExperienceFeatureStateResponseOutput
}

// State for App Dev Exp Feature.
type AppDevExperienceFeatureStateResponseArgs struct {
	// Status of subcomponent that detects configured Service Mesh resources.
	NetworkingInstallSucceeded StatusResponseInput `pulumi:"networkingInstallSucceeded"`
}

func (AppDevExperienceFeatureStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureStateResponse)(nil)).Elem()
}

func (i AppDevExperienceFeatureStateResponseArgs) ToAppDevExperienceFeatureStateResponseOutput() AppDevExperienceFeatureStateResponseOutput {
	return i.ToAppDevExperienceFeatureStateResponseOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureStateResponseArgs) ToAppDevExperienceFeatureStateResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureStateResponseOutput)
}

func (i AppDevExperienceFeatureStateResponseArgs) ToAppDevExperienceFeatureStateResponsePtrOutput() AppDevExperienceFeatureStateResponsePtrOutput {
	return i.ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i AppDevExperienceFeatureStateResponseArgs) ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureStateResponseOutput).ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(ctx)
}

// AppDevExperienceFeatureStateResponsePtrInput is an input type that accepts AppDevExperienceFeatureStateResponseArgs, AppDevExperienceFeatureStateResponsePtr and AppDevExperienceFeatureStateResponsePtrOutput values.
// You can construct a concrete instance of `AppDevExperienceFeatureStateResponsePtrInput` via:
//
//          AppDevExperienceFeatureStateResponseArgs{...}
//
//  or:
//
//          nil
type AppDevExperienceFeatureStateResponsePtrInput interface {
	pulumi.Input

	ToAppDevExperienceFeatureStateResponsePtrOutput() AppDevExperienceFeatureStateResponsePtrOutput
	ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(context.Context) AppDevExperienceFeatureStateResponsePtrOutput
}

type appDevExperienceFeatureStateResponsePtrType AppDevExperienceFeatureStateResponseArgs

func AppDevExperienceFeatureStateResponsePtr(v *AppDevExperienceFeatureStateResponseArgs) AppDevExperienceFeatureStateResponsePtrInput {
	return (*appDevExperienceFeatureStateResponsePtrType)(v)
}

func (*appDevExperienceFeatureStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureStateResponse)(nil)).Elem()
}

func (i *appDevExperienceFeatureStateResponsePtrType) ToAppDevExperienceFeatureStateResponsePtrOutput() AppDevExperienceFeatureStateResponsePtrOutput {
	return i.ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i *appDevExperienceFeatureStateResponsePtrType) ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDevExperienceFeatureStateResponsePtrOutput)
}

// State for App Dev Exp Feature.
type AppDevExperienceFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDevExperienceFeatureStateResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponseOutput() AppDevExperienceFeatureStateResponseOutput {
	return o
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponseOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponseOutput {
	return o
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponsePtrOutput() AppDevExperienceFeatureStateResponsePtrOutput {
	return o.ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (o AppDevExperienceFeatureStateResponseOutput) ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDevExperienceFeatureStateResponse) *AppDevExperienceFeatureStateResponse {
		return &v
	}).(AppDevExperienceFeatureStateResponsePtrOutput)
}

// Status of subcomponent that detects configured Service Mesh resources.
func (o AppDevExperienceFeatureStateResponseOutput) NetworkingInstallSucceeded() StatusResponseOutput {
	return o.ApplyT(func(v AppDevExperienceFeatureStateResponse) StatusResponse { return v.NetworkingInstallSucceeded }).(StatusResponseOutput)
}

type AppDevExperienceFeatureStateResponsePtrOutput struct{ *pulumi.OutputState }

func (AppDevExperienceFeatureStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDevExperienceFeatureStateResponse)(nil)).Elem()
}

func (o AppDevExperienceFeatureStateResponsePtrOutput) ToAppDevExperienceFeatureStateResponsePtrOutput() AppDevExperienceFeatureStateResponsePtrOutput {
	return o
}

func (o AppDevExperienceFeatureStateResponsePtrOutput) ToAppDevExperienceFeatureStateResponsePtrOutputWithContext(ctx context.Context) AppDevExperienceFeatureStateResponsePtrOutput {
	return o
}

func (o AppDevExperienceFeatureStateResponsePtrOutput) Elem() AppDevExperienceFeatureStateResponseOutput {
	return o.ApplyT(func(v *AppDevExperienceFeatureStateResponse) AppDevExperienceFeatureStateResponse {
		if v != nil {
			return *v
		}
		var ret AppDevExperienceFeatureStateResponse
		return ret
	}).(AppDevExperienceFeatureStateResponseOutput)
}

// Status of subcomponent that detects configured Service Mesh resources.
func (o AppDevExperienceFeatureStateResponsePtrOutput) NetworkingInstallSucceeded() StatusResponsePtrOutput {
	return o.ApplyT(func(v *AppDevExperienceFeatureStateResponse) *StatusResponse {
		if v == nil {
			return nil
		}
		return &v.NetworkingInstallSucceeded
	}).(StatusResponsePtrOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//          AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//          AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// AuditConfigResponseInput is an input type that accepts AuditConfigResponseArgs and AuditConfigResponseOutput values.
// You can construct a concrete instance of `AuditConfigResponseInput` via:
//
//          AuditConfigResponseArgs{...}
type AuditConfigResponseInput interface {
	pulumi.Input

	ToAuditConfigResponseOutput() AuditConfigResponseOutput
	ToAuditConfigResponseOutputWithContext(context.Context) AuditConfigResponseOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponseArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigResponseArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringInput `pulumi:"service"`
}

func (AuditConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (i AuditConfigResponseArgs) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return i.ToAuditConfigResponseOutputWithContext(context.Background())
}

func (i AuditConfigResponseArgs) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigResponseOutput)
}

// AuditConfigResponseArrayInput is an input type that accepts AuditConfigResponseArray and AuditConfigResponseArrayOutput values.
// You can construct a concrete instance of `AuditConfigResponseArrayInput` via:
//
//          AuditConfigResponseArray{ AuditConfigResponseArgs{...} }
type AuditConfigResponseArrayInput interface {
	pulumi.Input

	ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput
	ToAuditConfigResponseArrayOutputWithContext(context.Context) AuditConfigResponseArrayOutput
}

type AuditConfigResponseArray []AuditConfigResponseInput

func (AuditConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (i AuditConfigResponseArray) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return i.ToAuditConfigResponseArrayOutputWithContext(context.Background())
}

func (i AuditConfigResponseArray) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigResponseArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//          AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//          AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// AuditLogConfigResponseInput is an input type that accepts AuditLogConfigResponseArgs and AuditLogConfigResponseOutput values.
// You can construct a concrete instance of `AuditLogConfigResponseInput` via:
//
//          AuditLogConfigResponseArgs{...}
type AuditLogConfigResponseInput interface {
	pulumi.Input

	ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput
	ToAuditLogConfigResponseOutputWithContext(context.Context) AuditLogConfigResponseOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (AuditLogConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (i AuditLogConfigResponseArgs) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return i.ToAuditLogConfigResponseOutputWithContext(context.Background())
}

func (i AuditLogConfigResponseArgs) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigResponseOutput)
}

// AuditLogConfigResponseArrayInput is an input type that accepts AuditLogConfigResponseArray and AuditLogConfigResponseArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigResponseArrayInput` via:
//
//          AuditLogConfigResponseArray{ AuditLogConfigResponseArgs{...} }
type AuditLogConfigResponseArrayInput interface {
	pulumi.Input

	ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput
	ToAuditLogConfigResponseArrayOutputWithContext(context.Context) AuditLogConfigResponseArrayOutput
}

type AuditLogConfigResponseArray []AuditLogConfigResponseInput

func (AuditLogConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (i AuditLogConfigResponseArray) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return i.ToAuditLogConfigResponseArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigResponseArray) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigResponseArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type Authority struct {
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer *string `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks *string `pulumi:"oidcJwks"`
}

// AuthorityInput is an input type that accepts AuthorityArgs and AuthorityOutput values.
// You can construct a concrete instance of `AuthorityInput` via:
//
//          AuthorityArgs{...}
type AuthorityInput interface {
	pulumi.Input

	ToAuthorityOutput() AuthorityOutput
	ToAuthorityOutputWithContext(context.Context) AuthorityOutput
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityArgs struct {
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks pulumi.StringPtrInput `pulumi:"oidcJwks"`
}

func (AuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authority)(nil)).Elem()
}

func (i AuthorityArgs) ToAuthorityOutput() AuthorityOutput {
	return i.ToAuthorityOutputWithContext(context.Background())
}

func (i AuthorityArgs) ToAuthorityOutputWithContext(ctx context.Context) AuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityOutput)
}

func (i AuthorityArgs) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return i.ToAuthorityPtrOutputWithContext(context.Background())
}

func (i AuthorityArgs) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityOutput).ToAuthorityPtrOutputWithContext(ctx)
}

// AuthorityPtrInput is an input type that accepts AuthorityArgs, AuthorityPtr and AuthorityPtrOutput values.
// You can construct a concrete instance of `AuthorityPtrInput` via:
//
//          AuthorityArgs{...}
//
//  or:
//
//          nil
type AuthorityPtrInput interface {
	pulumi.Input

	ToAuthorityPtrOutput() AuthorityPtrOutput
	ToAuthorityPtrOutputWithContext(context.Context) AuthorityPtrOutput
}

type authorityPtrType AuthorityArgs

func AuthorityPtr(v *AuthorityArgs) AuthorityPtrInput {
	return (*authorityPtrType)(v)
}

func (*authorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Authority)(nil)).Elem()
}

func (i *authorityPtrType) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return i.ToAuthorityPtrOutputWithContext(context.Background())
}

func (i *authorityPtrType) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityPtrOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityOutput struct{ *pulumi.OutputState }

func (AuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authority)(nil)).Elem()
}

func (o AuthorityOutput) ToAuthorityOutput() AuthorityOutput {
	return o
}

func (o AuthorityOutput) ToAuthorityOutputWithContext(ctx context.Context) AuthorityOutput {
	return o
}

func (o AuthorityOutput) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return o.ToAuthorityPtrOutputWithContext(context.Background())
}

func (o AuthorityOutput) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Authority) *Authority {
		return &v
	}).(AuthorityPtrOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authority) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityOutput) OidcJwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authority) *string { return v.OidcJwks }).(pulumi.StringPtrOutput)
}

type AuthorityPtrOutput struct{ *pulumi.OutputState }

func (AuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Authority)(nil)).Elem()
}

func (o AuthorityPtrOutput) ToAuthorityPtrOutput() AuthorityPtrOutput {
	return o
}

func (o AuthorityPtrOutput) ToAuthorityPtrOutputWithContext(ctx context.Context) AuthorityPtrOutput {
	return o
}

func (o AuthorityPtrOutput) Elem() AuthorityOutput {
	return o.ApplyT(func(v *Authority) Authority {
		if v != nil {
			return *v
		}
		var ret Authority
		return ret
	}).(AuthorityOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authority) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityPtrOutput) OidcJwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Authority) *string {
		if v == nil {
			return nil
		}
		return v.OidcJwks
	}).(pulumi.StringPtrOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityResponse struct {
	// An identity provider that reflects the `issuer` in the workload identity pool.
	IdentityProvider string `pulumi:"identityProvider"`
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer string `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks string `pulumi:"oidcJwks"`
	// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
	WorkloadIdentityPool string `pulumi:"workloadIdentityPool"`
}

// AuthorityResponseInput is an input type that accepts AuthorityResponseArgs and AuthorityResponseOutput values.
// You can construct a concrete instance of `AuthorityResponseInput` via:
//
//          AuthorityResponseArgs{...}
type AuthorityResponseInput interface {
	pulumi.Input

	ToAuthorityResponseOutput() AuthorityResponseOutput
	ToAuthorityResponseOutputWithContext(context.Context) AuthorityResponseOutput
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityResponseArgs struct {
	// An identity provider that reflects the `issuer` in the workload identity pool.
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
	OidcJwks pulumi.StringInput `pulumi:"oidcJwks"`
	// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
	WorkloadIdentityPool pulumi.StringInput `pulumi:"workloadIdentityPool"`
}

func (AuthorityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityResponse)(nil)).Elem()
}

func (i AuthorityResponseArgs) ToAuthorityResponseOutput() AuthorityResponseOutput {
	return i.ToAuthorityResponseOutputWithContext(context.Background())
}

func (i AuthorityResponseArgs) ToAuthorityResponseOutputWithContext(ctx context.Context) AuthorityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityResponseOutput)
}

func (i AuthorityResponseArgs) ToAuthorityResponsePtrOutput() AuthorityResponsePtrOutput {
	return i.ToAuthorityResponsePtrOutputWithContext(context.Background())
}

func (i AuthorityResponseArgs) ToAuthorityResponsePtrOutputWithContext(ctx context.Context) AuthorityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityResponseOutput).ToAuthorityResponsePtrOutputWithContext(ctx)
}

// AuthorityResponsePtrInput is an input type that accepts AuthorityResponseArgs, AuthorityResponsePtr and AuthorityResponsePtrOutput values.
// You can construct a concrete instance of `AuthorityResponsePtrInput` via:
//
//          AuthorityResponseArgs{...}
//
//  or:
//
//          nil
type AuthorityResponsePtrInput interface {
	pulumi.Input

	ToAuthorityResponsePtrOutput() AuthorityResponsePtrOutput
	ToAuthorityResponsePtrOutputWithContext(context.Context) AuthorityResponsePtrOutput
}

type authorityResponsePtrType AuthorityResponseArgs

func AuthorityResponsePtr(v *AuthorityResponseArgs) AuthorityResponsePtrInput {
	return (*authorityResponsePtrType)(v)
}

func (*authorityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityResponse)(nil)).Elem()
}

func (i *authorityResponsePtrType) ToAuthorityResponsePtrOutput() AuthorityResponsePtrOutput {
	return i.ToAuthorityResponsePtrOutputWithContext(context.Background())
}

func (i *authorityResponsePtrType) ToAuthorityResponsePtrOutputWithContext(ctx context.Context) AuthorityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorityResponsePtrOutput)
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
type AuthorityResponseOutput struct{ *pulumi.OutputState }

func (AuthorityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorityResponse)(nil)).Elem()
}

func (o AuthorityResponseOutput) ToAuthorityResponseOutput() AuthorityResponseOutput {
	return o
}

func (o AuthorityResponseOutput) ToAuthorityResponseOutputWithContext(ctx context.Context) AuthorityResponseOutput {
	return o
}

func (o AuthorityResponseOutput) ToAuthorityResponsePtrOutput() AuthorityResponsePtrOutput {
	return o.ToAuthorityResponsePtrOutputWithContext(context.Background())
}

func (o AuthorityResponseOutput) ToAuthorityResponsePtrOutputWithContext(ctx context.Context) AuthorityResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthorityResponse) *AuthorityResponse {
		return &v
	}).(AuthorityResponsePtrOutput)
}

// An identity provider that reflects the `issuer` in the workload identity pool.
func (o AuthorityResponseOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityResponseOutput) OidcJwks() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.OidcJwks }).(pulumi.StringOutput)
}

// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
func (o AuthorityResponseOutput) WorkloadIdentityPool() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorityResponse) string { return v.WorkloadIdentityPool }).(pulumi.StringOutput)
}

type AuthorityResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthorityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorityResponse)(nil)).Elem()
}

func (o AuthorityResponsePtrOutput) ToAuthorityResponsePtrOutput() AuthorityResponsePtrOutput {
	return o
}

func (o AuthorityResponsePtrOutput) ToAuthorityResponsePtrOutputWithContext(ctx context.Context) AuthorityResponsePtrOutput {
	return o
}

func (o AuthorityResponsePtrOutput) Elem() AuthorityResponseOutput {
	return o.ApplyT(func(v *AuthorityResponse) AuthorityResponse {
		if v != nil {
			return *v
		}
		var ret AuthorityResponse
		return ret
	}).(AuthorityResponseOutput)
}

// An identity provider that reflects the `issuer` in the workload identity pool.
func (o AuthorityResponsePtrOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityProvider
	}).(pulumi.StringPtrOutput)
}

// Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
func (o AuthorityResponsePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

// Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
func (o AuthorityResponsePtrOutput) OidcJwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OidcJwks
	}).(pulumi.StringPtrOutput)
}

// The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
func (o AuthorityResponsePtrOutput) WorkloadIdentityPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.WorkloadIdentityPool
	}).(pulumi.StringPtrOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//          BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//          BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// BindingResponseInput is an input type that accepts BindingResponseArgs and BindingResponseOutput values.
// You can construct a concrete instance of `BindingResponseInput` via:
//
//          BindingResponseArgs{...}
type BindingResponseInput interface {
	pulumi.Input

	ToBindingResponseOutput() BindingResponseOutput
	ToBindingResponseOutputWithContext(context.Context) BindingResponseOutput
}

// Associates `members`, or principals, with a `role`.
type BindingResponseArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponseInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringInput `pulumi:"role"`
}

func (BindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (i BindingResponseArgs) ToBindingResponseOutput() BindingResponseOutput {
	return i.ToBindingResponseOutputWithContext(context.Background())
}

func (i BindingResponseArgs) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseOutput)
}

// BindingResponseArrayInput is an input type that accepts BindingResponseArray and BindingResponseArrayOutput values.
// You can construct a concrete instance of `BindingResponseArrayInput` via:
//
//          BindingResponseArray{ BindingResponseArgs{...} }
type BindingResponseArrayInput interface {
	pulumi.Input

	ToBindingResponseArrayOutput() BindingResponseArrayOutput
	ToBindingResponseArrayOutputWithContext(context.Context) BindingResponseArrayOutput
}

type BindingResponseArray []BindingResponseInput

func (BindingResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (i BindingResponseArray) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return i.ToBindingResponseArrayOutputWithContext(context.Background())
}

func (i BindingResponseArray) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingResponseArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpec struct {
	// Appdevexperience specific spec.
	Appdevexperience *AppDevExperienceFeatureSpec `pulumi:"appdevexperience"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress *MultiClusterIngressFeatureSpec `pulumi:"multiclusteringress"`
}

// CommonFeatureSpecInput is an input type that accepts CommonFeatureSpecArgs and CommonFeatureSpecOutput values.
// You can construct a concrete instance of `CommonFeatureSpecInput` via:
//
//          CommonFeatureSpecArgs{...}
type CommonFeatureSpecInput interface {
	pulumi.Input

	ToCommonFeatureSpecOutput() CommonFeatureSpecOutput
	ToCommonFeatureSpecOutputWithContext(context.Context) CommonFeatureSpecOutput
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecArgs struct {
	// Appdevexperience specific spec.
	Appdevexperience AppDevExperienceFeatureSpecPtrInput `pulumi:"appdevexperience"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress MultiClusterIngressFeatureSpecPtrInput `pulumi:"multiclusteringress"`
}

func (CommonFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpec)(nil)).Elem()
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecOutput() CommonFeatureSpecOutput {
	return i.ToCommonFeatureSpecOutputWithContext(context.Background())
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecOutputWithContext(ctx context.Context) CommonFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecOutput)
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return i.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (i CommonFeatureSpecArgs) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecOutput).ToCommonFeatureSpecPtrOutputWithContext(ctx)
}

// CommonFeatureSpecPtrInput is an input type that accepts CommonFeatureSpecArgs, CommonFeatureSpecPtr and CommonFeatureSpecPtrOutput values.
// You can construct a concrete instance of `CommonFeatureSpecPtrInput` via:
//
//          CommonFeatureSpecArgs{...}
//
//  or:
//
//          nil
type CommonFeatureSpecPtrInput interface {
	pulumi.Input

	ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput
	ToCommonFeatureSpecPtrOutputWithContext(context.Context) CommonFeatureSpecPtrOutput
}

type commonFeatureSpecPtrType CommonFeatureSpecArgs

func CommonFeatureSpecPtr(v *CommonFeatureSpecArgs) CommonFeatureSpecPtrInput {
	return (*commonFeatureSpecPtrType)(v)
}

func (*commonFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpec)(nil)).Elem()
}

func (i *commonFeatureSpecPtrType) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return i.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *commonFeatureSpecPtrType) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecPtrOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpec)(nil)).Elem()
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecOutput() CommonFeatureSpecOutput {
	return o
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecOutputWithContext(ctx context.Context) CommonFeatureSpecOutput {
	return o
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return o.ToCommonFeatureSpecPtrOutputWithContext(context.Background())
}

func (o CommonFeatureSpecOutput) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommonFeatureSpec) *CommonFeatureSpec {
		return &v
	}).(CommonFeatureSpecPtrOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecOutput) Appdevexperience() AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *AppDevExperienceFeatureSpec { return v.Appdevexperience }).(AppDevExperienceFeatureSpecPtrOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecOutput) Multiclusteringress() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyT(func(v CommonFeatureSpec) *MultiClusterIngressFeatureSpec { return v.Multiclusteringress }).(MultiClusterIngressFeatureSpecPtrOutput)
}

type CommonFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpec)(nil)).Elem()
}

func (o CommonFeatureSpecPtrOutput) ToCommonFeatureSpecPtrOutput() CommonFeatureSpecPtrOutput {
	return o
}

func (o CommonFeatureSpecPtrOutput) ToCommonFeatureSpecPtrOutputWithContext(ctx context.Context) CommonFeatureSpecPtrOutput {
	return o
}

func (o CommonFeatureSpecPtrOutput) Elem() CommonFeatureSpecOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) CommonFeatureSpec {
		if v != nil {
			return *v
		}
		var ret CommonFeatureSpec
		return ret
	}).(CommonFeatureSpecOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecPtrOutput) Appdevexperience() AppDevExperienceFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *AppDevExperienceFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Appdevexperience
	}).(AppDevExperienceFeatureSpecPtrOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecPtrOutput) Multiclusteringress() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpec) *MultiClusterIngressFeatureSpec {
		if v == nil {
			return nil
		}
		return v.Multiclusteringress
	}).(MultiClusterIngressFeatureSpecPtrOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecResponse struct {
	// Appdevexperience specific spec.
	Appdevexperience AppDevExperienceFeatureSpecResponse `pulumi:"appdevexperience"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress MultiClusterIngressFeatureSpecResponse `pulumi:"multiclusteringress"`
}

// CommonFeatureSpecResponseInput is an input type that accepts CommonFeatureSpecResponseArgs and CommonFeatureSpecResponseOutput values.
// You can construct a concrete instance of `CommonFeatureSpecResponseInput` via:
//
//          CommonFeatureSpecResponseArgs{...}
type CommonFeatureSpecResponseInput interface {
	pulumi.Input

	ToCommonFeatureSpecResponseOutput() CommonFeatureSpecResponseOutput
	ToCommonFeatureSpecResponseOutputWithContext(context.Context) CommonFeatureSpecResponseOutput
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecResponseArgs struct {
	// Appdevexperience specific spec.
	Appdevexperience AppDevExperienceFeatureSpecResponseInput `pulumi:"appdevexperience"`
	// Multicluster Ingress-specific spec.
	Multiclusteringress MultiClusterIngressFeatureSpecResponseInput `pulumi:"multiclusteringress"`
}

func (CommonFeatureSpecResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpecResponse)(nil)).Elem()
}

func (i CommonFeatureSpecResponseArgs) ToCommonFeatureSpecResponseOutput() CommonFeatureSpecResponseOutput {
	return i.ToCommonFeatureSpecResponseOutputWithContext(context.Background())
}

func (i CommonFeatureSpecResponseArgs) ToCommonFeatureSpecResponseOutputWithContext(ctx context.Context) CommonFeatureSpecResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecResponseOutput)
}

func (i CommonFeatureSpecResponseArgs) ToCommonFeatureSpecResponsePtrOutput() CommonFeatureSpecResponsePtrOutput {
	return i.ToCommonFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i CommonFeatureSpecResponseArgs) ToCommonFeatureSpecResponsePtrOutputWithContext(ctx context.Context) CommonFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecResponseOutput).ToCommonFeatureSpecResponsePtrOutputWithContext(ctx)
}

// CommonFeatureSpecResponsePtrInput is an input type that accepts CommonFeatureSpecResponseArgs, CommonFeatureSpecResponsePtr and CommonFeatureSpecResponsePtrOutput values.
// You can construct a concrete instance of `CommonFeatureSpecResponsePtrInput` via:
//
//          CommonFeatureSpecResponseArgs{...}
//
//  or:
//
//          nil
type CommonFeatureSpecResponsePtrInput interface {
	pulumi.Input

	ToCommonFeatureSpecResponsePtrOutput() CommonFeatureSpecResponsePtrOutput
	ToCommonFeatureSpecResponsePtrOutputWithContext(context.Context) CommonFeatureSpecResponsePtrOutput
}

type commonFeatureSpecResponsePtrType CommonFeatureSpecResponseArgs

func CommonFeatureSpecResponsePtr(v *CommonFeatureSpecResponseArgs) CommonFeatureSpecResponsePtrInput {
	return (*commonFeatureSpecResponsePtrType)(v)
}

func (*commonFeatureSpecResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpecResponse)(nil)).Elem()
}

func (i *commonFeatureSpecResponsePtrType) ToCommonFeatureSpecResponsePtrOutput() CommonFeatureSpecResponsePtrOutput {
	return i.ToCommonFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i *commonFeatureSpecResponsePtrType) ToCommonFeatureSpecResponsePtrOutputWithContext(ctx context.Context) CommonFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureSpecResponsePtrOutput)
}

// CommonFeatureSpec contains Hub-wide configuration information
type CommonFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureSpecResponse)(nil)).Elem()
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponseOutput() CommonFeatureSpecResponseOutput {
	return o
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponseOutputWithContext(ctx context.Context) CommonFeatureSpecResponseOutput {
	return o
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponsePtrOutput() CommonFeatureSpecResponsePtrOutput {
	return o.ToCommonFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (o CommonFeatureSpecResponseOutput) ToCommonFeatureSpecResponsePtrOutputWithContext(ctx context.Context) CommonFeatureSpecResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommonFeatureSpecResponse) *CommonFeatureSpecResponse {
		return &v
	}).(CommonFeatureSpecResponsePtrOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecResponseOutput) Appdevexperience() AppDevExperienceFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) AppDevExperienceFeatureSpecResponse { return v.Appdevexperience }).(AppDevExperienceFeatureSpecResponseOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecResponseOutput) Multiclusteringress() MultiClusterIngressFeatureSpecResponseOutput {
	return o.ApplyT(func(v CommonFeatureSpecResponse) MultiClusterIngressFeatureSpecResponse { return v.Multiclusteringress }).(MultiClusterIngressFeatureSpecResponseOutput)
}

type CommonFeatureSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (CommonFeatureSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureSpecResponse)(nil)).Elem()
}

func (o CommonFeatureSpecResponsePtrOutput) ToCommonFeatureSpecResponsePtrOutput() CommonFeatureSpecResponsePtrOutput {
	return o
}

func (o CommonFeatureSpecResponsePtrOutput) ToCommonFeatureSpecResponsePtrOutputWithContext(ctx context.Context) CommonFeatureSpecResponsePtrOutput {
	return o
}

func (o CommonFeatureSpecResponsePtrOutput) Elem() CommonFeatureSpecResponseOutput {
	return o.ApplyT(func(v *CommonFeatureSpecResponse) CommonFeatureSpecResponse {
		if v != nil {
			return *v
		}
		var ret CommonFeatureSpecResponse
		return ret
	}).(CommonFeatureSpecResponseOutput)
}

// Appdevexperience specific spec.
func (o CommonFeatureSpecResponsePtrOutput) Appdevexperience() AppDevExperienceFeatureSpecResponsePtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpecResponse) *AppDevExperienceFeatureSpecResponse {
		if v == nil {
			return nil
		}
		return &v.Appdevexperience
	}).(AppDevExperienceFeatureSpecResponsePtrOutput)
}

// Multicluster Ingress-specific spec.
func (o CommonFeatureSpecResponsePtrOutput) Multiclusteringress() MultiClusterIngressFeatureSpecResponsePtrOutput {
	return o.ApplyT(func(v *CommonFeatureSpecResponse) *MultiClusterIngressFeatureSpecResponse {
		if v == nil {
			return nil
		}
		return &v.Multiclusteringress
	}).(MultiClusterIngressFeatureSpecResponsePtrOutput)
}

// CommonFeatureState contains Hub-wide Feature status information.
type CommonFeatureStateResponse struct {
	// Appdevexperience specific state.
	Appdevexperience AppDevExperienceFeatureStateResponse `pulumi:"appdevexperience"`
	// The "running state" of the Feature in this Hub.
	State FeatureStateResponse `pulumi:"state"`
}

// CommonFeatureStateResponseInput is an input type that accepts CommonFeatureStateResponseArgs and CommonFeatureStateResponseOutput values.
// You can construct a concrete instance of `CommonFeatureStateResponseInput` via:
//
//          CommonFeatureStateResponseArgs{...}
type CommonFeatureStateResponseInput interface {
	pulumi.Input

	ToCommonFeatureStateResponseOutput() CommonFeatureStateResponseOutput
	ToCommonFeatureStateResponseOutputWithContext(context.Context) CommonFeatureStateResponseOutput
}

// CommonFeatureState contains Hub-wide Feature status information.
type CommonFeatureStateResponseArgs struct {
	// Appdevexperience specific state.
	Appdevexperience AppDevExperienceFeatureStateResponseInput `pulumi:"appdevexperience"`
	// The "running state" of the Feature in this Hub.
	State FeatureStateResponseInput `pulumi:"state"`
}

func (CommonFeatureStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureStateResponse)(nil)).Elem()
}

func (i CommonFeatureStateResponseArgs) ToCommonFeatureStateResponseOutput() CommonFeatureStateResponseOutput {
	return i.ToCommonFeatureStateResponseOutputWithContext(context.Background())
}

func (i CommonFeatureStateResponseArgs) ToCommonFeatureStateResponseOutputWithContext(ctx context.Context) CommonFeatureStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureStateResponseOutput)
}

func (i CommonFeatureStateResponseArgs) ToCommonFeatureStateResponsePtrOutput() CommonFeatureStateResponsePtrOutput {
	return i.ToCommonFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i CommonFeatureStateResponseArgs) ToCommonFeatureStateResponsePtrOutputWithContext(ctx context.Context) CommonFeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureStateResponseOutput).ToCommonFeatureStateResponsePtrOutputWithContext(ctx)
}

// CommonFeatureStateResponsePtrInput is an input type that accepts CommonFeatureStateResponseArgs, CommonFeatureStateResponsePtr and CommonFeatureStateResponsePtrOutput values.
// You can construct a concrete instance of `CommonFeatureStateResponsePtrInput` via:
//
//          CommonFeatureStateResponseArgs{...}
//
//  or:
//
//          nil
type CommonFeatureStateResponsePtrInput interface {
	pulumi.Input

	ToCommonFeatureStateResponsePtrOutput() CommonFeatureStateResponsePtrOutput
	ToCommonFeatureStateResponsePtrOutputWithContext(context.Context) CommonFeatureStateResponsePtrOutput
}

type commonFeatureStateResponsePtrType CommonFeatureStateResponseArgs

func CommonFeatureStateResponsePtr(v *CommonFeatureStateResponseArgs) CommonFeatureStateResponsePtrInput {
	return (*commonFeatureStateResponsePtrType)(v)
}

func (*commonFeatureStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureStateResponse)(nil)).Elem()
}

func (i *commonFeatureStateResponsePtrType) ToCommonFeatureStateResponsePtrOutput() CommonFeatureStateResponsePtrOutput {
	return i.ToCommonFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i *commonFeatureStateResponsePtrType) ToCommonFeatureStateResponsePtrOutputWithContext(ctx context.Context) CommonFeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommonFeatureStateResponsePtrOutput)
}

// CommonFeatureState contains Hub-wide Feature status information.
type CommonFeatureStateResponseOutput struct{ *pulumi.OutputState }

func (CommonFeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommonFeatureStateResponse)(nil)).Elem()
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponseOutput() CommonFeatureStateResponseOutput {
	return o
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponseOutputWithContext(ctx context.Context) CommonFeatureStateResponseOutput {
	return o
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponsePtrOutput() CommonFeatureStateResponsePtrOutput {
	return o.ToCommonFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (o CommonFeatureStateResponseOutput) ToCommonFeatureStateResponsePtrOutputWithContext(ctx context.Context) CommonFeatureStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommonFeatureStateResponse) *CommonFeatureStateResponse {
		return &v
	}).(CommonFeatureStateResponsePtrOutput)
}

// Appdevexperience specific state.
func (o CommonFeatureStateResponseOutput) Appdevexperience() AppDevExperienceFeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) AppDevExperienceFeatureStateResponse { return v.Appdevexperience }).(AppDevExperienceFeatureStateResponseOutput)
}

// The "running state" of the Feature in this Hub.
func (o CommonFeatureStateResponseOutput) State() FeatureStateResponseOutput {
	return o.ApplyT(func(v CommonFeatureStateResponse) FeatureStateResponse { return v.State }).(FeatureStateResponseOutput)
}

type CommonFeatureStateResponsePtrOutput struct{ *pulumi.OutputState }

func (CommonFeatureStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommonFeatureStateResponse)(nil)).Elem()
}

func (o CommonFeatureStateResponsePtrOutput) ToCommonFeatureStateResponsePtrOutput() CommonFeatureStateResponsePtrOutput {
	return o
}

func (o CommonFeatureStateResponsePtrOutput) ToCommonFeatureStateResponsePtrOutputWithContext(ctx context.Context) CommonFeatureStateResponsePtrOutput {
	return o
}

func (o CommonFeatureStateResponsePtrOutput) Elem() CommonFeatureStateResponseOutput {
	return o.ApplyT(func(v *CommonFeatureStateResponse) CommonFeatureStateResponse {
		if v != nil {
			return *v
		}
		var ret CommonFeatureStateResponse
		return ret
	}).(CommonFeatureStateResponseOutput)
}

// Appdevexperience specific state.
func (o CommonFeatureStateResponsePtrOutput) Appdevexperience() AppDevExperienceFeatureStateResponsePtrOutput {
	return o.ApplyT(func(v *CommonFeatureStateResponse) *AppDevExperienceFeatureStateResponse {
		if v == nil {
			return nil
		}
		return &v.Appdevexperience
	}).(AppDevExperienceFeatureStateResponsePtrOutput)
}

// The "running state" of the Feature in this Hub.
func (o CommonFeatureStateResponsePtrOutput) State() FeatureStateResponsePtrOutput {
	return o.ApplyT(func(v *CommonFeatureStateResponse) *FeatureStateResponse {
		if v == nil {
			return nil
		}
		return &v.State
	}).(FeatureStateResponsePtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//          ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//          ExprArgs{...}
//
//  or:
//
//          nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// ExprResponseInput is an input type that accepts ExprResponseArgs and ExprResponseOutput values.
// You can construct a concrete instance of `ExprResponseInput` via:
//
//          ExprResponseArgs{...}
type ExprResponseInput interface {
	pulumi.Input

	ToExprResponseOutput() ExprResponseOutput
	ToExprResponseOutputWithContext(context.Context) ExprResponseOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ExprResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (i ExprResponseArgs) ToExprResponseOutput() ExprResponseOutput {
	return i.ToExprResponseOutputWithContext(context.Background())
}

func (i ExprResponseArgs) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceStateResponse struct {
	// The current state of the Feature resource in the Hub API.
	State string `pulumi:"state"`
}

// FeatureResourceStateResponseInput is an input type that accepts FeatureResourceStateResponseArgs and FeatureResourceStateResponseOutput values.
// You can construct a concrete instance of `FeatureResourceStateResponseInput` via:
//
//          FeatureResourceStateResponseArgs{...}
type FeatureResourceStateResponseInput interface {
	pulumi.Input

	ToFeatureResourceStateResponseOutput() FeatureResourceStateResponseOutput
	ToFeatureResourceStateResponseOutputWithContext(context.Context) FeatureResourceStateResponseOutput
}

// FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceStateResponseArgs struct {
	// The current state of the Feature resource in the Hub API.
	State pulumi.StringInput `pulumi:"state"`
}

func (FeatureResourceStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureResourceStateResponse)(nil)).Elem()
}

func (i FeatureResourceStateResponseArgs) ToFeatureResourceStateResponseOutput() FeatureResourceStateResponseOutput {
	return i.ToFeatureResourceStateResponseOutputWithContext(context.Background())
}

func (i FeatureResourceStateResponseArgs) ToFeatureResourceStateResponseOutputWithContext(ctx context.Context) FeatureResourceStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureResourceStateResponseOutput)
}

func (i FeatureResourceStateResponseArgs) ToFeatureResourceStateResponsePtrOutput() FeatureResourceStateResponsePtrOutput {
	return i.ToFeatureResourceStateResponsePtrOutputWithContext(context.Background())
}

func (i FeatureResourceStateResponseArgs) ToFeatureResourceStateResponsePtrOutputWithContext(ctx context.Context) FeatureResourceStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureResourceStateResponseOutput).ToFeatureResourceStateResponsePtrOutputWithContext(ctx)
}

// FeatureResourceStateResponsePtrInput is an input type that accepts FeatureResourceStateResponseArgs, FeatureResourceStateResponsePtr and FeatureResourceStateResponsePtrOutput values.
// You can construct a concrete instance of `FeatureResourceStateResponsePtrInput` via:
//
//          FeatureResourceStateResponseArgs{...}
//
//  or:
//
//          nil
type FeatureResourceStateResponsePtrInput interface {
	pulumi.Input

	ToFeatureResourceStateResponsePtrOutput() FeatureResourceStateResponsePtrOutput
	ToFeatureResourceStateResponsePtrOutputWithContext(context.Context) FeatureResourceStateResponsePtrOutput
}

type featureResourceStateResponsePtrType FeatureResourceStateResponseArgs

func FeatureResourceStateResponsePtr(v *FeatureResourceStateResponseArgs) FeatureResourceStateResponsePtrInput {
	return (*featureResourceStateResponsePtrType)(v)
}

func (*featureResourceStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureResourceStateResponse)(nil)).Elem()
}

func (i *featureResourceStateResponsePtrType) ToFeatureResourceStateResponsePtrOutput() FeatureResourceStateResponsePtrOutput {
	return i.ToFeatureResourceStateResponsePtrOutputWithContext(context.Background())
}

func (i *featureResourceStateResponsePtrType) ToFeatureResourceStateResponsePtrOutputWithContext(ctx context.Context) FeatureResourceStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureResourceStateResponsePtrOutput)
}

// FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceStateResponseOutput struct{ *pulumi.OutputState }

func (FeatureResourceStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureResourceStateResponse)(nil)).Elem()
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponseOutput() FeatureResourceStateResponseOutput {
	return o
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponseOutputWithContext(ctx context.Context) FeatureResourceStateResponseOutput {
	return o
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponsePtrOutput() FeatureResourceStateResponsePtrOutput {
	return o.ToFeatureResourceStateResponsePtrOutputWithContext(context.Background())
}

func (o FeatureResourceStateResponseOutput) ToFeatureResourceStateResponsePtrOutputWithContext(ctx context.Context) FeatureResourceStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureResourceStateResponse) *FeatureResourceStateResponse {
		return &v
	}).(FeatureResourceStateResponsePtrOutput)
}

// The current state of the Feature resource in the Hub API.
func (o FeatureResourceStateResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureResourceStateResponse) string { return v.State }).(pulumi.StringOutput)
}

type FeatureResourceStateResponsePtrOutput struct{ *pulumi.OutputState }

func (FeatureResourceStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureResourceStateResponse)(nil)).Elem()
}

func (o FeatureResourceStateResponsePtrOutput) ToFeatureResourceStateResponsePtrOutput() FeatureResourceStateResponsePtrOutput {
	return o
}

func (o FeatureResourceStateResponsePtrOutput) ToFeatureResourceStateResponsePtrOutputWithContext(ctx context.Context) FeatureResourceStateResponsePtrOutput {
	return o
}

func (o FeatureResourceStateResponsePtrOutput) Elem() FeatureResourceStateResponseOutput {
	return o.ApplyT(func(v *FeatureResourceStateResponse) FeatureResourceStateResponse {
		if v != nil {
			return *v
		}
		var ret FeatureResourceStateResponse
		return ret
	}).(FeatureResourceStateResponseOutput)
}

// The current state of the Feature resource in the Hub API.
func (o FeatureResourceStateResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureResourceStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureStateResponse struct {
	// The high-level, machine-readable status of this Feature.
	Code string `pulumi:"code"`
	// A human-readable description of the current status.
	Description string `pulumi:"description"`
	// The time this status and any related Feature-specific details were updated.
	UpdateTime string `pulumi:"updateTime"`
}

// FeatureStateResponseInput is an input type that accepts FeatureStateResponseArgs and FeatureStateResponseOutput values.
// You can construct a concrete instance of `FeatureStateResponseInput` via:
//
//          FeatureStateResponseArgs{...}
type FeatureStateResponseInput interface {
	pulumi.Input

	ToFeatureStateResponseOutput() FeatureStateResponseOutput
	ToFeatureStateResponseOutputWithContext(context.Context) FeatureStateResponseOutput
}

// FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureStateResponseArgs struct {
	// The high-level, machine-readable status of this Feature.
	Code pulumi.StringInput `pulumi:"code"`
	// A human-readable description of the current status.
	Description pulumi.StringInput `pulumi:"description"`
	// The time this status and any related Feature-specific details were updated.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (FeatureStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateResponse)(nil)).Elem()
}

func (i FeatureStateResponseArgs) ToFeatureStateResponseOutput() FeatureStateResponseOutput {
	return i.ToFeatureStateResponseOutputWithContext(context.Background())
}

func (i FeatureStateResponseArgs) ToFeatureStateResponseOutputWithContext(ctx context.Context) FeatureStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateResponseOutput)
}

func (i FeatureStateResponseArgs) ToFeatureStateResponsePtrOutput() FeatureStateResponsePtrOutput {
	return i.ToFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i FeatureStateResponseArgs) ToFeatureStateResponsePtrOutputWithContext(ctx context.Context) FeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateResponseOutput).ToFeatureStateResponsePtrOutputWithContext(ctx)
}

// FeatureStateResponsePtrInput is an input type that accepts FeatureStateResponseArgs, FeatureStateResponsePtr and FeatureStateResponsePtrOutput values.
// You can construct a concrete instance of `FeatureStateResponsePtrInput` via:
//
//          FeatureStateResponseArgs{...}
//
//  or:
//
//          nil
type FeatureStateResponsePtrInput interface {
	pulumi.Input

	ToFeatureStateResponsePtrOutput() FeatureStateResponsePtrOutput
	ToFeatureStateResponsePtrOutputWithContext(context.Context) FeatureStateResponsePtrOutput
}

type featureStateResponsePtrType FeatureStateResponseArgs

func FeatureStateResponsePtr(v *FeatureStateResponseArgs) FeatureStateResponsePtrInput {
	return (*featureStateResponsePtrType)(v)
}

func (*featureStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureStateResponse)(nil)).Elem()
}

func (i *featureStateResponsePtrType) ToFeatureStateResponsePtrOutput() FeatureStateResponsePtrOutput {
	return i.ToFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (i *featureStateResponsePtrType) ToFeatureStateResponsePtrOutputWithContext(ctx context.Context) FeatureStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureStateResponsePtrOutput)
}

// FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureStateResponseOutput struct{ *pulumi.OutputState }

func (FeatureStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureStateResponse)(nil)).Elem()
}

func (o FeatureStateResponseOutput) ToFeatureStateResponseOutput() FeatureStateResponseOutput {
	return o
}

func (o FeatureStateResponseOutput) ToFeatureStateResponseOutputWithContext(ctx context.Context) FeatureStateResponseOutput {
	return o
}

func (o FeatureStateResponseOutput) ToFeatureStateResponsePtrOutput() FeatureStateResponsePtrOutput {
	return o.ToFeatureStateResponsePtrOutputWithContext(context.Background())
}

func (o FeatureStateResponseOutput) ToFeatureStateResponsePtrOutputWithContext(ctx context.Context) FeatureStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureStateResponse) *FeatureStateResponse {
		return &v
	}).(FeatureStateResponsePtrOutput)
}

// The high-level, machine-readable status of this Feature.
func (o FeatureStateResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.Code }).(pulumi.StringOutput)
}

// A human-readable description of the current status.
func (o FeatureStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The time this status and any related Feature-specific details were updated.
func (o FeatureStateResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureStateResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type FeatureStateResponsePtrOutput struct{ *pulumi.OutputState }

func (FeatureStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureStateResponse)(nil)).Elem()
}

func (o FeatureStateResponsePtrOutput) ToFeatureStateResponsePtrOutput() FeatureStateResponsePtrOutput {
	return o
}

func (o FeatureStateResponsePtrOutput) ToFeatureStateResponsePtrOutputWithContext(ctx context.Context) FeatureStateResponsePtrOutput {
	return o
}

func (o FeatureStateResponsePtrOutput) Elem() FeatureStateResponseOutput {
	return o.ApplyT(func(v *FeatureStateResponse) FeatureStateResponse {
		if v != nil {
			return *v
		}
		var ret FeatureStateResponse
		return ret
	}).(FeatureStateResponseOutput)
}

// The high-level, machine-readable status of this Feature.
func (o FeatureStateResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// A human-readable description of the current status.
func (o FeatureStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

// The time this status and any related Feature-specific details were updated.
func (o FeatureStateResponsePtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeCluster struct {
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink *string `pulumi:"resourceLink"`
}

// GkeClusterInput is an input type that accepts GkeClusterArgs and GkeClusterOutput values.
// You can construct a concrete instance of `GkeClusterInput` via:
//
//          GkeClusterArgs{...}
type GkeClusterInput interface {
	pulumi.Input

	ToGkeClusterOutput() GkeClusterOutput
	ToGkeClusterOutputWithContext(context.Context) GkeClusterOutput
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (GkeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeCluster)(nil)).Elem()
}

func (i GkeClusterArgs) ToGkeClusterOutput() GkeClusterOutput {
	return i.ToGkeClusterOutputWithContext(context.Background())
}

func (i GkeClusterArgs) ToGkeClusterOutputWithContext(ctx context.Context) GkeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterOutput)
}

func (i GkeClusterArgs) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return i.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (i GkeClusterArgs) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterOutput).ToGkeClusterPtrOutputWithContext(ctx)
}

// GkeClusterPtrInput is an input type that accepts GkeClusterArgs, GkeClusterPtr and GkeClusterPtrOutput values.
// You can construct a concrete instance of `GkeClusterPtrInput` via:
//
//          GkeClusterArgs{...}
//
//  or:
//
//          nil
type GkeClusterPtrInput interface {
	pulumi.Input

	ToGkeClusterPtrOutput() GkeClusterPtrOutput
	ToGkeClusterPtrOutputWithContext(context.Context) GkeClusterPtrOutput
}

type gkeClusterPtrType GkeClusterArgs

func GkeClusterPtr(v *GkeClusterArgs) GkeClusterPtrInput {
	return (*gkeClusterPtrType)(v)
}

func (*gkeClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeCluster)(nil)).Elem()
}

func (i *gkeClusterPtrType) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return i.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (i *gkeClusterPtrType) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterPtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterOutput struct{ *pulumi.OutputState }

func (GkeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeCluster)(nil)).Elem()
}

func (o GkeClusterOutput) ToGkeClusterOutput() GkeClusterOutput {
	return o
}

func (o GkeClusterOutput) ToGkeClusterOutputWithContext(ctx context.Context) GkeClusterOutput {
	return o
}

func (o GkeClusterOutput) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return o.ToGkeClusterPtrOutputWithContext(context.Background())
}

func (o GkeClusterOutput) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GkeCluster) *GkeCluster {
		return &v
	}).(GkeClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type GkeClusterPtrOutput struct{ *pulumi.OutputState }

func (GkeClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeCluster)(nil)).Elem()
}

func (o GkeClusterPtrOutput) ToGkeClusterPtrOutput() GkeClusterPtrOutput {
	return o
}

func (o GkeClusterPtrOutput) ToGkeClusterPtrOutputWithContext(ctx context.Context) GkeClusterPtrOutput {
	return o
}

func (o GkeClusterPtrOutput) Elem() GkeClusterOutput {
	return o.ApplyT(func(v *GkeCluster) GkeCluster {
		if v != nil {
			return *v
		}
		var ret GkeCluster
		return ret
	}).(GkeClusterOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterResponse struct {
	// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink string `pulumi:"resourceLink"`
}

// GkeClusterResponseInput is an input type that accepts GkeClusterResponseArgs and GkeClusterResponseOutput values.
// You can construct a concrete instance of `GkeClusterResponseInput` via:
//
//          GkeClusterResponseArgs{...}
type GkeClusterResponseInput interface {
	pulumi.Input

	ToGkeClusterResponseOutput() GkeClusterResponseOutput
	ToGkeClusterResponseOutputWithContext(context.Context) GkeClusterResponseOutput
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterResponseArgs struct {
	// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
	ClusterMissing pulumi.BoolInput `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
	ResourceLink pulumi.StringInput `pulumi:"resourceLink"`
}

func (GkeClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterResponse)(nil)).Elem()
}

func (i GkeClusterResponseArgs) ToGkeClusterResponseOutput() GkeClusterResponseOutput {
	return i.ToGkeClusterResponseOutputWithContext(context.Background())
}

func (i GkeClusterResponseArgs) ToGkeClusterResponseOutputWithContext(ctx context.Context) GkeClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterResponseOutput)
}

func (i GkeClusterResponseArgs) ToGkeClusterResponsePtrOutput() GkeClusterResponsePtrOutput {
	return i.ToGkeClusterResponsePtrOutputWithContext(context.Background())
}

func (i GkeClusterResponseArgs) ToGkeClusterResponsePtrOutputWithContext(ctx context.Context) GkeClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterResponseOutput).ToGkeClusterResponsePtrOutputWithContext(ctx)
}

// GkeClusterResponsePtrInput is an input type that accepts GkeClusterResponseArgs, GkeClusterResponsePtr and GkeClusterResponsePtrOutput values.
// You can construct a concrete instance of `GkeClusterResponsePtrInput` via:
//
//          GkeClusterResponseArgs{...}
//
//  or:
//
//          nil
type GkeClusterResponsePtrInput interface {
	pulumi.Input

	ToGkeClusterResponsePtrOutput() GkeClusterResponsePtrOutput
	ToGkeClusterResponsePtrOutputWithContext(context.Context) GkeClusterResponsePtrOutput
}

type gkeClusterResponsePtrType GkeClusterResponseArgs

func GkeClusterResponsePtr(v *GkeClusterResponseArgs) GkeClusterResponsePtrInput {
	return (*gkeClusterResponsePtrType)(v)
}

func (*gkeClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterResponse)(nil)).Elem()
}

func (i *gkeClusterResponsePtrType) ToGkeClusterResponsePtrOutput() GkeClusterResponsePtrOutput {
	return i.ToGkeClusterResponsePtrOutputWithContext(context.Background())
}

func (i *gkeClusterResponsePtrType) ToGkeClusterResponsePtrOutputWithContext(ctx context.Context) GkeClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterResponsePtrOutput)
}

// GkeCluster contains information specific to GKE clusters.
type GkeClusterResponseOutput struct{ *pulumi.OutputState }

func (GkeClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterResponse)(nil)).Elem()
}

func (o GkeClusterResponseOutput) ToGkeClusterResponseOutput() GkeClusterResponseOutput {
	return o
}

func (o GkeClusterResponseOutput) ToGkeClusterResponseOutputWithContext(ctx context.Context) GkeClusterResponseOutput {
	return o
}

func (o GkeClusterResponseOutput) ToGkeClusterResponsePtrOutput() GkeClusterResponsePtrOutput {
	return o.ToGkeClusterResponsePtrOutputWithContext(context.Background())
}

func (o GkeClusterResponseOutput) ToGkeClusterResponsePtrOutputWithContext(ctx context.Context) GkeClusterResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GkeClusterResponse) *GkeClusterResponse {
		return &v
	}).(GkeClusterResponsePtrOutput)
}

// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
func (o GkeClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v GkeClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v GkeClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

type GkeClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (GkeClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterResponse)(nil)).Elem()
}

func (o GkeClusterResponsePtrOutput) ToGkeClusterResponsePtrOutput() GkeClusterResponsePtrOutput {
	return o
}

func (o GkeClusterResponsePtrOutput) ToGkeClusterResponsePtrOutputWithContext(ctx context.Context) GkeClusterResponsePtrOutput {
	return o
}

func (o GkeClusterResponsePtrOutput) Elem() GkeClusterResponseOutput {
	return o.ApplyT(func(v *GkeClusterResponse) GkeClusterResponse {
		if v != nil {
			return *v
		}
		var ret GkeClusterResponse
		return ret
	}).(GkeClusterResponseOutput)
}

// If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
func (o GkeClusterResponsePtrOutput) ClusterMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GkeClusterResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ClusterMissing
	}).(pulumi.BoolPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
func (o GkeClusterResponsePtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
type KubernetesMetadataResponse struct {
	// Kubernetes API server version string as reported by `/version`.
	KubernetesApiServerVersion string `pulumi:"kubernetesApiServerVersion"`
	// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
	MemoryMb int `pulumi:"memoryMb"`
	// Node count as reported by Kubernetes nodes resources.
	NodeCount int `pulumi:"nodeCount"`
	// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
	NodeProviderId string `pulumi:"nodeProviderId"`
	// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
	UpdateTime string `pulumi:"updateTime"`
	// vCPU count as reported by Kubernetes nodes resources.
	VcpuCount int `pulumi:"vcpuCount"`
}

// KubernetesMetadataResponseInput is an input type that accepts KubernetesMetadataResponseArgs and KubernetesMetadataResponseOutput values.
// You can construct a concrete instance of `KubernetesMetadataResponseInput` via:
//
//          KubernetesMetadataResponseArgs{...}
type KubernetesMetadataResponseInput interface {
	pulumi.Input

	ToKubernetesMetadataResponseOutput() KubernetesMetadataResponseOutput
	ToKubernetesMetadataResponseOutputWithContext(context.Context) KubernetesMetadataResponseOutput
}

// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
type KubernetesMetadataResponseArgs struct {
	// Kubernetes API server version string as reported by `/version`.
	KubernetesApiServerVersion pulumi.StringInput `pulumi:"kubernetesApiServerVersion"`
	// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
	MemoryMb pulumi.IntInput `pulumi:"memoryMb"`
	// Node count as reported by Kubernetes nodes resources.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
	NodeProviderId pulumi.StringInput `pulumi:"nodeProviderId"`
	// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// vCPU count as reported by Kubernetes nodes resources.
	VcpuCount pulumi.IntInput `pulumi:"vcpuCount"`
}

func (KubernetesMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesMetadataResponse)(nil)).Elem()
}

func (i KubernetesMetadataResponseArgs) ToKubernetesMetadataResponseOutput() KubernetesMetadataResponseOutput {
	return i.ToKubernetesMetadataResponseOutputWithContext(context.Background())
}

func (i KubernetesMetadataResponseArgs) ToKubernetesMetadataResponseOutputWithContext(ctx context.Context) KubernetesMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesMetadataResponseOutput)
}

func (i KubernetesMetadataResponseArgs) ToKubernetesMetadataResponsePtrOutput() KubernetesMetadataResponsePtrOutput {
	return i.ToKubernetesMetadataResponsePtrOutputWithContext(context.Background())
}

func (i KubernetesMetadataResponseArgs) ToKubernetesMetadataResponsePtrOutputWithContext(ctx context.Context) KubernetesMetadataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesMetadataResponseOutput).ToKubernetesMetadataResponsePtrOutputWithContext(ctx)
}

// KubernetesMetadataResponsePtrInput is an input type that accepts KubernetesMetadataResponseArgs, KubernetesMetadataResponsePtr and KubernetesMetadataResponsePtrOutput values.
// You can construct a concrete instance of `KubernetesMetadataResponsePtrInput` via:
//
//          KubernetesMetadataResponseArgs{...}
//
//  or:
//
//          nil
type KubernetesMetadataResponsePtrInput interface {
	pulumi.Input

	ToKubernetesMetadataResponsePtrOutput() KubernetesMetadataResponsePtrOutput
	ToKubernetesMetadataResponsePtrOutputWithContext(context.Context) KubernetesMetadataResponsePtrOutput
}

type kubernetesMetadataResponsePtrType KubernetesMetadataResponseArgs

func KubernetesMetadataResponsePtr(v *KubernetesMetadataResponseArgs) KubernetesMetadataResponsePtrInput {
	return (*kubernetesMetadataResponsePtrType)(v)
}

func (*kubernetesMetadataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesMetadataResponse)(nil)).Elem()
}

func (i *kubernetesMetadataResponsePtrType) ToKubernetesMetadataResponsePtrOutput() KubernetesMetadataResponsePtrOutput {
	return i.ToKubernetesMetadataResponsePtrOutputWithContext(context.Background())
}

func (i *kubernetesMetadataResponsePtrType) ToKubernetesMetadataResponsePtrOutputWithContext(ctx context.Context) KubernetesMetadataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesMetadataResponsePtrOutput)
}

// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
type KubernetesMetadataResponseOutput struct{ *pulumi.OutputState }

func (KubernetesMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesMetadataResponse)(nil)).Elem()
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponseOutput() KubernetesMetadataResponseOutput {
	return o
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponseOutputWithContext(ctx context.Context) KubernetesMetadataResponseOutput {
	return o
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponsePtrOutput() KubernetesMetadataResponsePtrOutput {
	return o.ToKubernetesMetadataResponsePtrOutputWithContext(context.Background())
}

func (o KubernetesMetadataResponseOutput) ToKubernetesMetadataResponsePtrOutputWithContext(ctx context.Context) KubernetesMetadataResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesMetadataResponse) *KubernetesMetadataResponse {
		return &v
	}).(KubernetesMetadataResponsePtrOutput)
}

// Kubernetes API server version string as reported by `/version`.
func (o KubernetesMetadataResponseOutput) KubernetesApiServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.KubernetesApiServerVersion }).(pulumi.StringOutput)
}

// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
func (o KubernetesMetadataResponseOutput) MemoryMb() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.MemoryMb }).(pulumi.IntOutput)
}

// Node count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponseOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
func (o KubernetesMetadataResponseOutput) NodeProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.NodeProviderId }).(pulumi.StringOutput)
}

// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
func (o KubernetesMetadataResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// vCPU count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponseOutput) VcpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesMetadataResponse) int { return v.VcpuCount }).(pulumi.IntOutput)
}

type KubernetesMetadataResponsePtrOutput struct{ *pulumi.OutputState }

func (KubernetesMetadataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesMetadataResponse)(nil)).Elem()
}

func (o KubernetesMetadataResponsePtrOutput) ToKubernetesMetadataResponsePtrOutput() KubernetesMetadataResponsePtrOutput {
	return o
}

func (o KubernetesMetadataResponsePtrOutput) ToKubernetesMetadataResponsePtrOutputWithContext(ctx context.Context) KubernetesMetadataResponsePtrOutput {
	return o
}

func (o KubernetesMetadataResponsePtrOutput) Elem() KubernetesMetadataResponseOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) KubernetesMetadataResponse {
		if v != nil {
			return *v
		}
		var ret KubernetesMetadataResponse
		return ret
	}).(KubernetesMetadataResponseOutput)
}

// Kubernetes API server version string as reported by `/version`.
func (o KubernetesMetadataResponsePtrOutput) KubernetesApiServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KubernetesApiServerVersion
	}).(pulumi.StringPtrOutput)
}

// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
func (o KubernetesMetadataResponsePtrOutput) MemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MemoryMb
	}).(pulumi.IntPtrOutput)
}

// Node count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponsePtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
func (o KubernetesMetadataResponsePtrOutput) NodeProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NodeProviderId
	}).(pulumi.StringPtrOutput)
}

// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
func (o KubernetesMetadataResponsePtrOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(pulumi.StringPtrOutput)
}

// vCPU count as reported by Kubernetes nodes resources.
func (o KubernetesMetadataResponsePtrOutput) VcpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesMetadataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.VcpuCount
	}).(pulumi.IntPtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResource struct {
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest *string `pulumi:"membershipCrManifest"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions *ResourceOptions `pulumi:"resourceOptions"`
}

// KubernetesResourceInput is an input type that accepts KubernetesResourceArgs and KubernetesResourceOutput values.
// You can construct a concrete instance of `KubernetesResourceInput` via:
//
//          KubernetesResourceArgs{...}
type KubernetesResourceInput interface {
	pulumi.Input

	ToKubernetesResourceOutput() KubernetesResourceOutput
	ToKubernetesResourceOutputWithContext(context.Context) KubernetesResourceOutput
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceArgs struct {
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest pulumi.StringPtrInput `pulumi:"membershipCrManifest"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions ResourceOptionsPtrInput `pulumi:"resourceOptions"`
}

func (KubernetesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResource)(nil)).Elem()
}

func (i KubernetesResourceArgs) ToKubernetesResourceOutput() KubernetesResourceOutput {
	return i.ToKubernetesResourceOutputWithContext(context.Background())
}

func (i KubernetesResourceArgs) ToKubernetesResourceOutputWithContext(ctx context.Context) KubernetesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceOutput)
}

func (i KubernetesResourceArgs) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return i.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (i KubernetesResourceArgs) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceOutput).ToKubernetesResourcePtrOutputWithContext(ctx)
}

// KubernetesResourcePtrInput is an input type that accepts KubernetesResourceArgs, KubernetesResourcePtr and KubernetesResourcePtrOutput values.
// You can construct a concrete instance of `KubernetesResourcePtrInput` via:
//
//          KubernetesResourceArgs{...}
//
//  or:
//
//          nil
type KubernetesResourcePtrInput interface {
	pulumi.Input

	ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput
	ToKubernetesResourcePtrOutputWithContext(context.Context) KubernetesResourcePtrOutput
}

type kubernetesResourcePtrType KubernetesResourceArgs

func KubernetesResourcePtr(v *KubernetesResourceArgs) KubernetesResourcePtrInput {
	return (*kubernetesResourcePtrType)(v)
}

func (*kubernetesResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResource)(nil)).Elem()
}

func (i *kubernetesResourcePtrType) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return i.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (i *kubernetesResourcePtrType) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourcePtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceOutput struct{ *pulumi.OutputState }

func (KubernetesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResource)(nil)).Elem()
}

func (o KubernetesResourceOutput) ToKubernetesResourceOutput() KubernetesResourceOutput {
	return o
}

func (o KubernetesResourceOutput) ToKubernetesResourceOutputWithContext(ctx context.Context) KubernetesResourceOutput {
	return o
}

func (o KubernetesResourceOutput) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return o.ToKubernetesResourcePtrOutputWithContext(context.Background())
}

func (o KubernetesResourceOutput) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesResource) *KubernetesResource {
		return &v
	}).(KubernetesResourcePtrOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourceOutput) MembershipCrManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesResource) *string { return v.MembershipCrManifest }).(pulumi.StringPtrOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourceOutput) ResourceOptions() ResourceOptionsPtrOutput {
	return o.ApplyT(func(v KubernetesResource) *ResourceOptions { return v.ResourceOptions }).(ResourceOptionsPtrOutput)
}

type KubernetesResourcePtrOutput struct{ *pulumi.OutputState }

func (KubernetesResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResource)(nil)).Elem()
}

func (o KubernetesResourcePtrOutput) ToKubernetesResourcePtrOutput() KubernetesResourcePtrOutput {
	return o
}

func (o KubernetesResourcePtrOutput) ToKubernetesResourcePtrOutputWithContext(ctx context.Context) KubernetesResourcePtrOutput {
	return o
}

func (o KubernetesResourcePtrOutput) Elem() KubernetesResourceOutput {
	return o.ApplyT(func(v *KubernetesResource) KubernetesResource {
		if v != nil {
			return *v
		}
		var ret KubernetesResource
		return ret
	}).(KubernetesResourceOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourcePtrOutput) MembershipCrManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesResource) *string {
		if v == nil {
			return nil
		}
		return v.MembershipCrManifest
	}).(pulumi.StringPtrOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourcePtrOutput) ResourceOptions() ResourceOptionsPtrOutput {
	return o.ApplyT(func(v *KubernetesResource) *ResourceOptions {
		if v == nil {
			return nil
		}
		return v.ResourceOptions
	}).(ResourceOptionsPtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceResponse struct {
	// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	ConnectResources []ResourceManifestResponse `pulumi:"connectResources"`
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest string `pulumi:"membershipCrManifest"`
	// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	MembershipResources []ResourceManifestResponse `pulumi:"membershipResources"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions ResourceOptionsResponse `pulumi:"resourceOptions"`
}

// KubernetesResourceResponseInput is an input type that accepts KubernetesResourceResponseArgs and KubernetesResourceResponseOutput values.
// You can construct a concrete instance of `KubernetesResourceResponseInput` via:
//
//          KubernetesResourceResponseArgs{...}
type KubernetesResourceResponseInput interface {
	pulumi.Input

	ToKubernetesResourceResponseOutput() KubernetesResourceResponseOutput
	ToKubernetesResourceResponseOutputWithContext(context.Context) KubernetesResourceResponseOutput
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceResponseArgs struct {
	// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	ConnectResources ResourceManifestResponseArrayInput `pulumi:"connectResources"`
	// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
	MembershipCrManifest pulumi.StringInput `pulumi:"membershipCrManifest"`
	// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
	MembershipResources ResourceManifestResponseArrayInput `pulumi:"membershipResources"`
	// Optional. Options for Kubernetes resource generation.
	ResourceOptions ResourceOptionsResponseInput `pulumi:"resourceOptions"`
}

func (KubernetesResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResourceResponse)(nil)).Elem()
}

func (i KubernetesResourceResponseArgs) ToKubernetesResourceResponseOutput() KubernetesResourceResponseOutput {
	return i.ToKubernetesResourceResponseOutputWithContext(context.Background())
}

func (i KubernetesResourceResponseArgs) ToKubernetesResourceResponseOutputWithContext(ctx context.Context) KubernetesResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceResponseOutput)
}

func (i KubernetesResourceResponseArgs) ToKubernetesResourceResponsePtrOutput() KubernetesResourceResponsePtrOutput {
	return i.ToKubernetesResourceResponsePtrOutputWithContext(context.Background())
}

func (i KubernetesResourceResponseArgs) ToKubernetesResourceResponsePtrOutputWithContext(ctx context.Context) KubernetesResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceResponseOutput).ToKubernetesResourceResponsePtrOutputWithContext(ctx)
}

// KubernetesResourceResponsePtrInput is an input type that accepts KubernetesResourceResponseArgs, KubernetesResourceResponsePtr and KubernetesResourceResponsePtrOutput values.
// You can construct a concrete instance of `KubernetesResourceResponsePtrInput` via:
//
//          KubernetesResourceResponseArgs{...}
//
//  or:
//
//          nil
type KubernetesResourceResponsePtrInput interface {
	pulumi.Input

	ToKubernetesResourceResponsePtrOutput() KubernetesResourceResponsePtrOutput
	ToKubernetesResourceResponsePtrOutputWithContext(context.Context) KubernetesResourceResponsePtrOutput
}

type kubernetesResourceResponsePtrType KubernetesResourceResponseArgs

func KubernetesResourceResponsePtr(v *KubernetesResourceResponseArgs) KubernetesResourceResponsePtrInput {
	return (*kubernetesResourceResponsePtrType)(v)
}

func (*kubernetesResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResourceResponse)(nil)).Elem()
}

func (i *kubernetesResourceResponsePtrType) ToKubernetesResourceResponsePtrOutput() KubernetesResourceResponsePtrOutput {
	return i.ToKubernetesResourceResponsePtrOutputWithContext(context.Background())
}

func (i *kubernetesResourceResponsePtrType) ToKubernetesResourceResponsePtrOutputWithContext(ctx context.Context) KubernetesResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesResourceResponsePtrOutput)
}

// KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
type KubernetesResourceResponseOutput struct{ *pulumi.OutputState }

func (KubernetesResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesResourceResponse)(nil)).Elem()
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponseOutput() KubernetesResourceResponseOutput {
	return o
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponseOutputWithContext(ctx context.Context) KubernetesResourceResponseOutput {
	return o
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponsePtrOutput() KubernetesResourceResponsePtrOutput {
	return o.ToKubernetesResourceResponsePtrOutputWithContext(context.Background())
}

func (o KubernetesResourceResponseOutput) ToKubernetesResourceResponsePtrOutputWithContext(ctx context.Context) KubernetesResourceResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesResourceResponse) *KubernetesResourceResponse {
		return &v
	}).(KubernetesResourceResponsePtrOutput)
}

// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponseOutput) ConnectResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) []ResourceManifestResponse { return v.ConnectResources }).(ResourceManifestResponseArrayOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourceResponseOutput) MembershipCrManifest() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) string { return v.MembershipCrManifest }).(pulumi.StringOutput)
}

// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponseOutput) MembershipResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) []ResourceManifestResponse { return v.MembershipResources }).(ResourceManifestResponseArrayOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourceResponseOutput) ResourceOptions() ResourceOptionsResponseOutput {
	return o.ApplyT(func(v KubernetesResourceResponse) ResourceOptionsResponse { return v.ResourceOptions }).(ResourceOptionsResponseOutput)
}

type KubernetesResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (KubernetesResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesResourceResponse)(nil)).Elem()
}

func (o KubernetesResourceResponsePtrOutput) ToKubernetesResourceResponsePtrOutput() KubernetesResourceResponsePtrOutput {
	return o
}

func (o KubernetesResourceResponsePtrOutput) ToKubernetesResourceResponsePtrOutputWithContext(ctx context.Context) KubernetesResourceResponsePtrOutput {
	return o
}

func (o KubernetesResourceResponsePtrOutput) Elem() KubernetesResourceResponseOutput {
	return o.ApplyT(func(v *KubernetesResourceResponse) KubernetesResourceResponse {
		if v != nil {
			return *v
		}
		var ret KubernetesResourceResponse
		return ret
	}).(KubernetesResourceResponseOutput)
}

// The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponsePtrOutput) ConnectResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v *KubernetesResourceResponse) []ResourceManifestResponse {
		if v == nil {
			return nil
		}
		return v.ConnectResources
	}).(ResourceManifestResponseArrayOutput)
}

// Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
func (o KubernetesResourceResponsePtrOutput) MembershipCrManifest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesResourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MembershipCrManifest
	}).(pulumi.StringPtrOutput)
}

// Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
func (o KubernetesResourceResponsePtrOutput) MembershipResources() ResourceManifestResponseArrayOutput {
	return o.ApplyT(func(v *KubernetesResourceResponse) []ResourceManifestResponse {
		if v == nil {
			return nil
		}
		return v.MembershipResources
	}).(ResourceManifestResponseArrayOutput)
}

// Optional. Options for Kubernetes resource generation.
func (o KubernetesResourceResponsePtrOutput) ResourceOptions() ResourceOptionsResponsePtrOutput {
	return o.ApplyT(func(v *KubernetesResourceResponse) *ResourceOptionsResponse {
		if v == nil {
			return nil
		}
		return &v.ResourceOptions
	}).(ResourceOptionsResponsePtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpoint struct {
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster *GkeCluster `pulumi:"gkeCluster"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource *KubernetesResource `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster *MultiCloudCluster `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster *OnPremCluster `pulumi:"onPremCluster"`
}

// MembershipEndpointInput is an input type that accepts MembershipEndpointArgs and MembershipEndpointOutput values.
// You can construct a concrete instance of `MembershipEndpointInput` via:
//
//          MembershipEndpointArgs{...}
type MembershipEndpointInput interface {
	pulumi.Input

	ToMembershipEndpointOutput() MembershipEndpointOutput
	ToMembershipEndpointOutputWithContext(context.Context) MembershipEndpointOutput
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointArgs struct {
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster GkeClusterPtrInput `pulumi:"gkeCluster"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource KubernetesResourcePtrInput `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster MultiCloudClusterPtrInput `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster OnPremClusterPtrInput `pulumi:"onPremCluster"`
}

func (MembershipEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return i.ToMembershipEndpointOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput)
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i MembershipEndpointArgs) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointOutput).ToMembershipEndpointPtrOutputWithContext(ctx)
}

// MembershipEndpointPtrInput is an input type that accepts MembershipEndpointArgs, MembershipEndpointPtr and MembershipEndpointPtrOutput values.
// You can construct a concrete instance of `MembershipEndpointPtrInput` via:
//
//          MembershipEndpointArgs{...}
//
//  or:
//
//          nil
type MembershipEndpointPtrInput interface {
	pulumi.Input

	ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput
	ToMembershipEndpointPtrOutputWithContext(context.Context) MembershipEndpointPtrOutput
}

type membershipEndpointPtrType MembershipEndpointArgs

func MembershipEndpointPtr(v *MembershipEndpointArgs) MembershipEndpointPtrInput {
	return (*membershipEndpointPtrType)(v)
}

func (*membershipEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return i.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (i *membershipEndpointPtrType) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointPtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointOutput struct{ *pulumi.OutputState }

func (MembershipEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutput() MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointOutputWithContext(ctx context.Context) MembershipEndpointOutput {
	return o
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o.ToMembershipEndpointPtrOutputWithContext(context.Background())
}

func (o MembershipEndpointOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipEndpoint) *MembershipEndpoint {
		return &v
	}).(MembershipEndpointPtrOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointOutput) GkeCluster() GkeClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *GkeCluster { return v.GkeCluster }).(GkeClusterPtrOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointOutput) KubernetesResource() KubernetesResourcePtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *KubernetesResource { return v.KubernetesResource }).(KubernetesResourcePtrOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointOutput) MultiCloudCluster() MultiCloudClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *MultiCloudCluster { return v.MultiCloudCluster }).(MultiCloudClusterPtrOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointOutput) OnPremCluster() OnPremClusterPtrOutput {
	return o.ApplyT(func(v MembershipEndpoint) *OnPremCluster { return v.OnPremCluster }).(OnPremClusterPtrOutput)
}

type MembershipEndpointPtrOutput struct{ *pulumi.OutputState }

func (MembershipEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpoint)(nil)).Elem()
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutput() MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) ToMembershipEndpointPtrOutputWithContext(ctx context.Context) MembershipEndpointPtrOutput {
	return o
}

func (o MembershipEndpointPtrOutput) Elem() MembershipEndpointOutput {
	return o.ApplyT(func(v *MembershipEndpoint) MembershipEndpoint {
		if v != nil {
			return *v
		}
		var ret MembershipEndpoint
		return ret
	}).(MembershipEndpointOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointPtrOutput) GkeCluster() GkeClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *GkeCluster {
		if v == nil {
			return nil
		}
		return v.GkeCluster
	}).(GkeClusterPtrOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointPtrOutput) KubernetesResource() KubernetesResourcePtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *KubernetesResource {
		if v == nil {
			return nil
		}
		return v.KubernetesResource
	}).(KubernetesResourcePtrOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointPtrOutput) MultiCloudCluster() MultiCloudClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *MultiCloudCluster {
		if v == nil {
			return nil
		}
		return v.MultiCloudCluster
	}).(MultiCloudClusterPtrOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointPtrOutput) OnPremCluster() OnPremClusterPtrOutput {
	return o.ApplyT(func(v *MembershipEndpoint) *OnPremCluster {
		if v == nil {
			return nil
		}
		return v.OnPremCluster
	}).(OnPremClusterPtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointResponse struct {
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster GkeClusterResponse `pulumi:"gkeCluster"`
	// Useful Kubernetes-specific metadata.
	KubernetesMetadata KubernetesMetadataResponse `pulumi:"kubernetesMetadata"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource KubernetesResourceResponse `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster MultiCloudClusterResponse `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster OnPremClusterResponse `pulumi:"onPremCluster"`
}

// MembershipEndpointResponseInput is an input type that accepts MembershipEndpointResponseArgs and MembershipEndpointResponseOutput values.
// You can construct a concrete instance of `MembershipEndpointResponseInput` via:
//
//          MembershipEndpointResponseArgs{...}
type MembershipEndpointResponseInput interface {
	pulumi.Input

	ToMembershipEndpointResponseOutput() MembershipEndpointResponseOutput
	ToMembershipEndpointResponseOutputWithContext(context.Context) MembershipEndpointResponseOutput
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointResponseArgs struct {
	// Optional. Specific information for a GKE-on-GCP cluster.
	GkeCluster GkeClusterResponseInput `pulumi:"gkeCluster"`
	// Useful Kubernetes-specific metadata.
	KubernetesMetadata KubernetesMetadataResponseInput `pulumi:"kubernetesMetadata"`
	// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
	KubernetesResource KubernetesResourceResponseInput `pulumi:"kubernetesResource"`
	// Optional. Specific information for a GKE Multi-Cloud cluster.
	MultiCloudCluster MultiCloudClusterResponseInput `pulumi:"multiCloudCluster"`
	// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
	OnPremCluster OnPremClusterResponseInput `pulumi:"onPremCluster"`
}

func (MembershipEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpointResponse)(nil)).Elem()
}

func (i MembershipEndpointResponseArgs) ToMembershipEndpointResponseOutput() MembershipEndpointResponseOutput {
	return i.ToMembershipEndpointResponseOutputWithContext(context.Background())
}

func (i MembershipEndpointResponseArgs) ToMembershipEndpointResponseOutputWithContext(ctx context.Context) MembershipEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointResponseOutput)
}

func (i MembershipEndpointResponseArgs) ToMembershipEndpointResponsePtrOutput() MembershipEndpointResponsePtrOutput {
	return i.ToMembershipEndpointResponsePtrOutputWithContext(context.Background())
}

func (i MembershipEndpointResponseArgs) ToMembershipEndpointResponsePtrOutputWithContext(ctx context.Context) MembershipEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointResponseOutput).ToMembershipEndpointResponsePtrOutputWithContext(ctx)
}

// MembershipEndpointResponsePtrInput is an input type that accepts MembershipEndpointResponseArgs, MembershipEndpointResponsePtr and MembershipEndpointResponsePtrOutput values.
// You can construct a concrete instance of `MembershipEndpointResponsePtrInput` via:
//
//          MembershipEndpointResponseArgs{...}
//
//  or:
//
//          nil
type MembershipEndpointResponsePtrInput interface {
	pulumi.Input

	ToMembershipEndpointResponsePtrOutput() MembershipEndpointResponsePtrOutput
	ToMembershipEndpointResponsePtrOutputWithContext(context.Context) MembershipEndpointResponsePtrOutput
}

type membershipEndpointResponsePtrType MembershipEndpointResponseArgs

func MembershipEndpointResponsePtr(v *MembershipEndpointResponseArgs) MembershipEndpointResponsePtrInput {
	return (*membershipEndpointResponsePtrType)(v)
}

func (*membershipEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpointResponse)(nil)).Elem()
}

func (i *membershipEndpointResponsePtrType) ToMembershipEndpointResponsePtrOutput() MembershipEndpointResponsePtrOutput {
	return i.ToMembershipEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *membershipEndpointResponsePtrType) ToMembershipEndpointResponsePtrOutputWithContext(ctx context.Context) MembershipEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipEndpointResponsePtrOutput)
}

// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
type MembershipEndpointResponseOutput struct{ *pulumi.OutputState }

func (MembershipEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipEndpointResponse)(nil)).Elem()
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponseOutput() MembershipEndpointResponseOutput {
	return o
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponseOutputWithContext(ctx context.Context) MembershipEndpointResponseOutput {
	return o
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponsePtrOutput() MembershipEndpointResponsePtrOutput {
	return o.ToMembershipEndpointResponsePtrOutputWithContext(context.Background())
}

func (o MembershipEndpointResponseOutput) ToMembershipEndpointResponsePtrOutputWithContext(ctx context.Context) MembershipEndpointResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipEndpointResponse) *MembershipEndpointResponse {
		return &v
	}).(MembershipEndpointResponsePtrOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointResponseOutput) GkeCluster() GkeClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) GkeClusterResponse { return v.GkeCluster }).(GkeClusterResponseOutput)
}

// Useful Kubernetes-specific metadata.
func (o MembershipEndpointResponseOutput) KubernetesMetadata() KubernetesMetadataResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) KubernetesMetadataResponse { return v.KubernetesMetadata }).(KubernetesMetadataResponseOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointResponseOutput) KubernetesResource() KubernetesResourceResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) KubernetesResourceResponse { return v.KubernetesResource }).(KubernetesResourceResponseOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointResponseOutput) MultiCloudCluster() MultiCloudClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) MultiCloudClusterResponse { return v.MultiCloudCluster }).(MultiCloudClusterResponseOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointResponseOutput) OnPremCluster() OnPremClusterResponseOutput {
	return o.ApplyT(func(v MembershipEndpointResponse) OnPremClusterResponse { return v.OnPremCluster }).(OnPremClusterResponseOutput)
}

type MembershipEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (MembershipEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipEndpointResponse)(nil)).Elem()
}

func (o MembershipEndpointResponsePtrOutput) ToMembershipEndpointResponsePtrOutput() MembershipEndpointResponsePtrOutput {
	return o
}

func (o MembershipEndpointResponsePtrOutput) ToMembershipEndpointResponsePtrOutputWithContext(ctx context.Context) MembershipEndpointResponsePtrOutput {
	return o
}

func (o MembershipEndpointResponsePtrOutput) Elem() MembershipEndpointResponseOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) MembershipEndpointResponse {
		if v != nil {
			return *v
		}
		var ret MembershipEndpointResponse
		return ret
	}).(MembershipEndpointResponseOutput)
}

// Optional. Specific information for a GKE-on-GCP cluster.
func (o MembershipEndpointResponsePtrOutput) GkeCluster() GkeClusterResponsePtrOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) *GkeClusterResponse {
		if v == nil {
			return nil
		}
		return &v.GkeCluster
	}).(GkeClusterResponsePtrOutput)
}

// Useful Kubernetes-specific metadata.
func (o MembershipEndpointResponsePtrOutput) KubernetesMetadata() KubernetesMetadataResponsePtrOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) *KubernetesMetadataResponse {
		if v == nil {
			return nil
		}
		return &v.KubernetesMetadata
	}).(KubernetesMetadataResponsePtrOutput)
}

// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
func (o MembershipEndpointResponsePtrOutput) KubernetesResource() KubernetesResourceResponsePtrOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) *KubernetesResourceResponse {
		if v == nil {
			return nil
		}
		return &v.KubernetesResource
	}).(KubernetesResourceResponsePtrOutput)
}

// Optional. Specific information for a GKE Multi-Cloud cluster.
func (o MembershipEndpointResponsePtrOutput) MultiCloudCluster() MultiCloudClusterResponsePtrOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) *MultiCloudClusterResponse {
		if v == nil {
			return nil
		}
		return &v.MultiCloudCluster
	}).(MultiCloudClusterResponsePtrOutput)
}

// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
func (o MembershipEndpointResponsePtrOutput) OnPremCluster() OnPremClusterResponsePtrOutput {
	return o.ApplyT(func(v *MembershipEndpointResponse) *OnPremClusterResponse {
		if v == nil {
			return nil
		}
		return &v.OnPremCluster
	}).(OnPremClusterResponsePtrOutput)
}

// MembershipState describes the state of a Membership resource.
type MembershipStateResponse struct {
	// The current state of the Membership resource.
	Code string `pulumi:"code"`
}

// MembershipStateResponseInput is an input type that accepts MembershipStateResponseArgs and MembershipStateResponseOutput values.
// You can construct a concrete instance of `MembershipStateResponseInput` via:
//
//          MembershipStateResponseArgs{...}
type MembershipStateResponseInput interface {
	pulumi.Input

	ToMembershipStateResponseOutput() MembershipStateResponseOutput
	ToMembershipStateResponseOutputWithContext(context.Context) MembershipStateResponseOutput
}

// MembershipState describes the state of a Membership resource.
type MembershipStateResponseArgs struct {
	// The current state of the Membership resource.
	Code pulumi.StringInput `pulumi:"code"`
}

func (MembershipStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipStateResponse)(nil)).Elem()
}

func (i MembershipStateResponseArgs) ToMembershipStateResponseOutput() MembershipStateResponseOutput {
	return i.ToMembershipStateResponseOutputWithContext(context.Background())
}

func (i MembershipStateResponseArgs) ToMembershipStateResponseOutputWithContext(ctx context.Context) MembershipStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipStateResponseOutput)
}

func (i MembershipStateResponseArgs) ToMembershipStateResponsePtrOutput() MembershipStateResponsePtrOutput {
	return i.ToMembershipStateResponsePtrOutputWithContext(context.Background())
}

func (i MembershipStateResponseArgs) ToMembershipStateResponsePtrOutputWithContext(ctx context.Context) MembershipStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipStateResponseOutput).ToMembershipStateResponsePtrOutputWithContext(ctx)
}

// MembershipStateResponsePtrInput is an input type that accepts MembershipStateResponseArgs, MembershipStateResponsePtr and MembershipStateResponsePtrOutput values.
// You can construct a concrete instance of `MembershipStateResponsePtrInput` via:
//
//          MembershipStateResponseArgs{...}
//
//  or:
//
//          nil
type MembershipStateResponsePtrInput interface {
	pulumi.Input

	ToMembershipStateResponsePtrOutput() MembershipStateResponsePtrOutput
	ToMembershipStateResponsePtrOutputWithContext(context.Context) MembershipStateResponsePtrOutput
}

type membershipStateResponsePtrType MembershipStateResponseArgs

func MembershipStateResponsePtr(v *MembershipStateResponseArgs) MembershipStateResponsePtrInput {
	return (*membershipStateResponsePtrType)(v)
}

func (*membershipStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipStateResponse)(nil)).Elem()
}

func (i *membershipStateResponsePtrType) ToMembershipStateResponsePtrOutput() MembershipStateResponsePtrOutput {
	return i.ToMembershipStateResponsePtrOutputWithContext(context.Background())
}

func (i *membershipStateResponsePtrType) ToMembershipStateResponsePtrOutputWithContext(ctx context.Context) MembershipStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipStateResponsePtrOutput)
}

// MembershipState describes the state of a Membership resource.
type MembershipStateResponseOutput struct{ *pulumi.OutputState }

func (MembershipStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipStateResponse)(nil)).Elem()
}

func (o MembershipStateResponseOutput) ToMembershipStateResponseOutput() MembershipStateResponseOutput {
	return o
}

func (o MembershipStateResponseOutput) ToMembershipStateResponseOutputWithContext(ctx context.Context) MembershipStateResponseOutput {
	return o
}

func (o MembershipStateResponseOutput) ToMembershipStateResponsePtrOutput() MembershipStateResponsePtrOutput {
	return o.ToMembershipStateResponsePtrOutputWithContext(context.Background())
}

func (o MembershipStateResponseOutput) ToMembershipStateResponsePtrOutputWithContext(ctx context.Context) MembershipStateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipStateResponse) *MembershipStateResponse {
		return &v
	}).(MembershipStateResponsePtrOutput)
}

// The current state of the Membership resource.
func (o MembershipStateResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipStateResponse) string { return v.Code }).(pulumi.StringOutput)
}

type MembershipStateResponsePtrOutput struct{ *pulumi.OutputState }

func (MembershipStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipStateResponse)(nil)).Elem()
}

func (o MembershipStateResponsePtrOutput) ToMembershipStateResponsePtrOutput() MembershipStateResponsePtrOutput {
	return o
}

func (o MembershipStateResponsePtrOutput) ToMembershipStateResponsePtrOutputWithContext(ctx context.Context) MembershipStateResponsePtrOutput {
	return o
}

func (o MembershipStateResponsePtrOutput) Elem() MembershipStateResponseOutput {
	return o.ApplyT(func(v *MembershipStateResponse) MembershipStateResponse {
		if v != nil {
			return *v
		}
		var ret MembershipStateResponse
		return ret
	}).(MembershipStateResponseOutput)
}

// The current state of the Membership resource.
func (o MembershipStateResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MembershipStateResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudCluster struct {
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
	ResourceLink *string `pulumi:"resourceLink"`
}

// MultiCloudClusterInput is an input type that accepts MultiCloudClusterArgs and MultiCloudClusterOutput values.
// You can construct a concrete instance of `MultiCloudClusterInput` via:
//
//          MultiCloudClusterArgs{...}
type MultiCloudClusterInput interface {
	pulumi.Input

	ToMultiCloudClusterOutput() MultiCloudClusterOutput
	ToMultiCloudClusterOutputWithContext(context.Context) MultiCloudClusterOutput
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterArgs struct {
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (MultiCloudClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudCluster)(nil)).Elem()
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterOutput() MultiCloudClusterOutput {
	return i.ToMultiCloudClusterOutputWithContext(context.Background())
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterOutputWithContext(ctx context.Context) MultiCloudClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterOutput)
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return i.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (i MultiCloudClusterArgs) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterOutput).ToMultiCloudClusterPtrOutputWithContext(ctx)
}

// MultiCloudClusterPtrInput is an input type that accepts MultiCloudClusterArgs, MultiCloudClusterPtr and MultiCloudClusterPtrOutput values.
// You can construct a concrete instance of `MultiCloudClusterPtrInput` via:
//
//          MultiCloudClusterArgs{...}
//
//  or:
//
//          nil
type MultiCloudClusterPtrInput interface {
	pulumi.Input

	ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput
	ToMultiCloudClusterPtrOutputWithContext(context.Context) MultiCloudClusterPtrOutput
}

type multiCloudClusterPtrType MultiCloudClusterArgs

func MultiCloudClusterPtr(v *MultiCloudClusterArgs) MultiCloudClusterPtrInput {
	return (*multiCloudClusterPtrType)(v)
}

func (*multiCloudClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudCluster)(nil)).Elem()
}

func (i *multiCloudClusterPtrType) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return i.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (i *multiCloudClusterPtrType) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterPtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudCluster)(nil)).Elem()
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterOutput() MultiCloudClusterOutput {
	return o
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterOutputWithContext(ctx context.Context) MultiCloudClusterOutput {
	return o
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return o.ToMultiCloudClusterPtrOutputWithContext(context.Background())
}

func (o MultiCloudClusterOutput) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiCloudCluster) *MultiCloudCluster {
		return &v
	}).(MultiCloudClusterPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
func (o MultiCloudClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiCloudCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type MultiCloudClusterPtrOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudCluster)(nil)).Elem()
}

func (o MultiCloudClusterPtrOutput) ToMultiCloudClusterPtrOutput() MultiCloudClusterPtrOutput {
	return o
}

func (o MultiCloudClusterPtrOutput) ToMultiCloudClusterPtrOutputWithContext(ctx context.Context) MultiCloudClusterPtrOutput {
	return o
}

func (o MultiCloudClusterPtrOutput) Elem() MultiCloudClusterOutput {
	return o.ApplyT(func(v *MultiCloudCluster) MultiCloudCluster {
		if v != nil {
			return *v
		}
		var ret MultiCloudCluster
		return ret
	}).(MultiCloudClusterOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
func (o MultiCloudClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiCloudCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterResponse struct {
	// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
	ResourceLink string `pulumi:"resourceLink"`
}

// MultiCloudClusterResponseInput is an input type that accepts MultiCloudClusterResponseArgs and MultiCloudClusterResponseOutput values.
// You can construct a concrete instance of `MultiCloudClusterResponseInput` via:
//
//          MultiCloudClusterResponseArgs{...}
type MultiCloudClusterResponseInput interface {
	pulumi.Input

	ToMultiCloudClusterResponseOutput() MultiCloudClusterResponseOutput
	ToMultiCloudClusterResponseOutputWithContext(context.Context) MultiCloudClusterResponseOutput
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterResponseArgs struct {
	// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
	ClusterMissing pulumi.BoolInput `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
	ResourceLink pulumi.StringInput `pulumi:"resourceLink"`
}

func (MultiCloudClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudClusterResponse)(nil)).Elem()
}

func (i MultiCloudClusterResponseArgs) ToMultiCloudClusterResponseOutput() MultiCloudClusterResponseOutput {
	return i.ToMultiCloudClusterResponseOutputWithContext(context.Background())
}

func (i MultiCloudClusterResponseArgs) ToMultiCloudClusterResponseOutputWithContext(ctx context.Context) MultiCloudClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterResponseOutput)
}

func (i MultiCloudClusterResponseArgs) ToMultiCloudClusterResponsePtrOutput() MultiCloudClusterResponsePtrOutput {
	return i.ToMultiCloudClusterResponsePtrOutputWithContext(context.Background())
}

func (i MultiCloudClusterResponseArgs) ToMultiCloudClusterResponsePtrOutputWithContext(ctx context.Context) MultiCloudClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterResponseOutput).ToMultiCloudClusterResponsePtrOutputWithContext(ctx)
}

// MultiCloudClusterResponsePtrInput is an input type that accepts MultiCloudClusterResponseArgs, MultiCloudClusterResponsePtr and MultiCloudClusterResponsePtrOutput values.
// You can construct a concrete instance of `MultiCloudClusterResponsePtrInput` via:
//
//          MultiCloudClusterResponseArgs{...}
//
//  or:
//
//          nil
type MultiCloudClusterResponsePtrInput interface {
	pulumi.Input

	ToMultiCloudClusterResponsePtrOutput() MultiCloudClusterResponsePtrOutput
	ToMultiCloudClusterResponsePtrOutputWithContext(context.Context) MultiCloudClusterResponsePtrOutput
}

type multiCloudClusterResponsePtrType MultiCloudClusterResponseArgs

func MultiCloudClusterResponsePtr(v *MultiCloudClusterResponseArgs) MultiCloudClusterResponsePtrInput {
	return (*multiCloudClusterResponsePtrType)(v)
}

func (*multiCloudClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudClusterResponse)(nil)).Elem()
}

func (i *multiCloudClusterResponsePtrType) ToMultiCloudClusterResponsePtrOutput() MultiCloudClusterResponsePtrOutput {
	return i.ToMultiCloudClusterResponsePtrOutputWithContext(context.Background())
}

func (i *multiCloudClusterResponsePtrType) ToMultiCloudClusterResponsePtrOutputWithContext(ctx context.Context) MultiCloudClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiCloudClusterResponsePtrOutput)
}

// MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
type MultiCloudClusterResponseOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiCloudClusterResponse)(nil)).Elem()
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponseOutput() MultiCloudClusterResponseOutput {
	return o
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponseOutputWithContext(ctx context.Context) MultiCloudClusterResponseOutput {
	return o
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponsePtrOutput() MultiCloudClusterResponsePtrOutput {
	return o.ToMultiCloudClusterResponsePtrOutputWithContext(context.Background())
}

func (o MultiCloudClusterResponseOutput) ToMultiCloudClusterResponsePtrOutputWithContext(ctx context.Context) MultiCloudClusterResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiCloudClusterResponse) *MultiCloudClusterResponse {
		return &v
	}).(MultiCloudClusterResponsePtrOutput)
}

// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
func (o MultiCloudClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v MultiCloudClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
func (o MultiCloudClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v MultiCloudClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

type MultiCloudClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (MultiCloudClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiCloudClusterResponse)(nil)).Elem()
}

func (o MultiCloudClusterResponsePtrOutput) ToMultiCloudClusterResponsePtrOutput() MultiCloudClusterResponsePtrOutput {
	return o
}

func (o MultiCloudClusterResponsePtrOutput) ToMultiCloudClusterResponsePtrOutputWithContext(ctx context.Context) MultiCloudClusterResponsePtrOutput {
	return o
}

func (o MultiCloudClusterResponsePtrOutput) Elem() MultiCloudClusterResponseOutput {
	return o.ApplyT(func(v *MultiCloudClusterResponse) MultiCloudClusterResponse {
		if v != nil {
			return *v
		}
		var ret MultiCloudClusterResponse
		return ret
	}).(MultiCloudClusterResponseOutput)
}

// If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
func (o MultiCloudClusterResponsePtrOutput) ClusterMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MultiCloudClusterResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ClusterMissing
	}).(pulumi.BoolPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
func (o MultiCloudClusterResponsePtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiCloudClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpec struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership *string `pulumi:"configMembership"`
}

// MultiClusterIngressFeatureSpecInput is an input type that accepts MultiClusterIngressFeatureSpecArgs and MultiClusterIngressFeatureSpecOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecInput` via:
//
//          MultiClusterIngressFeatureSpecArgs{...}
type MultiClusterIngressFeatureSpecInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput
	ToMultiClusterIngressFeatureSpecOutputWithContext(context.Context) MultiClusterIngressFeatureSpecOutput
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecArgs struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership pulumi.StringPtrInput `pulumi:"configMembership"`
}

func (MultiClusterIngressFeatureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput {
	return i.ToMultiClusterIngressFeatureSpecOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecOutput)
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return i.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecArgs) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecOutput).ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx)
}

// MultiClusterIngressFeatureSpecPtrInput is an input type that accepts MultiClusterIngressFeatureSpecArgs, MultiClusterIngressFeatureSpecPtr and MultiClusterIngressFeatureSpecPtrOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecPtrInput` via:
//
//          MultiClusterIngressFeatureSpecArgs{...}
//
//  or:
//
//          nil
type MultiClusterIngressFeatureSpecPtrInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput
	ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Context) MultiClusterIngressFeatureSpecPtrOutput
}

type multiClusterIngressFeatureSpecPtrType MultiClusterIngressFeatureSpecArgs

func MultiClusterIngressFeatureSpecPtr(v *MultiClusterIngressFeatureSpecArgs) MultiClusterIngressFeatureSpecPtrInput {
	return (*multiClusterIngressFeatureSpecPtrType)(v)
}

func (*multiClusterIngressFeatureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (i *multiClusterIngressFeatureSpecPtrType) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return i.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (i *multiClusterIngressFeatureSpecPtrType) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecPtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecOutput() MultiClusterIngressFeatureSpecOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return o.ToMultiClusterIngressFeatureSpecPtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecOutput) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiClusterIngressFeatureSpec) *MultiClusterIngressFeatureSpec {
		return &v
	}).(MultiClusterIngressFeatureSpecPtrOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpec) *string { return v.ConfigMembership }).(pulumi.StringPtrOutput)
}

type MultiClusterIngressFeatureSpecPtrOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpec)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecPtrOutput) ToMultiClusterIngressFeatureSpecPtrOutput() MultiClusterIngressFeatureSpecPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecPtrOutput) ToMultiClusterIngressFeatureSpecPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecPtrOutput) Elem() MultiClusterIngressFeatureSpecOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpec) MultiClusterIngressFeatureSpec {
		if v != nil {
			return *v
		}
		var ret MultiClusterIngressFeatureSpec
		return ret
	}).(MultiClusterIngressFeatureSpecOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecPtrOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpec) *string {
		if v == nil {
			return nil
		}
		return v.ConfigMembership
	}).(pulumi.StringPtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecResponse struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership string `pulumi:"configMembership"`
}

// MultiClusterIngressFeatureSpecResponseInput is an input type that accepts MultiClusterIngressFeatureSpecResponseArgs and MultiClusterIngressFeatureSpecResponseOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecResponseInput` via:
//
//          MultiClusterIngressFeatureSpecResponseArgs{...}
type MultiClusterIngressFeatureSpecResponseInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecResponseOutput() MultiClusterIngressFeatureSpecResponseOutput
	ToMultiClusterIngressFeatureSpecResponseOutputWithContext(context.Context) MultiClusterIngressFeatureSpecResponseOutput
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecResponseArgs struct {
	// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
	ConfigMembership pulumi.StringInput `pulumi:"configMembership"`
}

func (MultiClusterIngressFeatureSpecResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpecResponse)(nil)).Elem()
}

func (i MultiClusterIngressFeatureSpecResponseArgs) ToMultiClusterIngressFeatureSpecResponseOutput() MultiClusterIngressFeatureSpecResponseOutput {
	return i.ToMultiClusterIngressFeatureSpecResponseOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecResponseArgs) ToMultiClusterIngressFeatureSpecResponseOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecResponseOutput)
}

func (i MultiClusterIngressFeatureSpecResponseArgs) ToMultiClusterIngressFeatureSpecResponsePtrOutput() MultiClusterIngressFeatureSpecResponsePtrOutput {
	return i.ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i MultiClusterIngressFeatureSpecResponseArgs) ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecResponseOutput).ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(ctx)
}

// MultiClusterIngressFeatureSpecResponsePtrInput is an input type that accepts MultiClusterIngressFeatureSpecResponseArgs, MultiClusterIngressFeatureSpecResponsePtr and MultiClusterIngressFeatureSpecResponsePtrOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecResponsePtrInput` via:
//
//          MultiClusterIngressFeatureSpecResponseArgs{...}
//
//  or:
//
//          nil
type MultiClusterIngressFeatureSpecResponsePtrInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecResponsePtrOutput() MultiClusterIngressFeatureSpecResponsePtrOutput
	ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(context.Context) MultiClusterIngressFeatureSpecResponsePtrOutput
}

type multiClusterIngressFeatureSpecResponsePtrType MultiClusterIngressFeatureSpecResponseArgs

func MultiClusterIngressFeatureSpecResponsePtr(v *MultiClusterIngressFeatureSpecResponseArgs) MultiClusterIngressFeatureSpecResponsePtrInput {
	return (*multiClusterIngressFeatureSpecResponsePtrType)(v)
}

func (*multiClusterIngressFeatureSpecResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpecResponse)(nil)).Elem()
}

func (i *multiClusterIngressFeatureSpecResponsePtrType) ToMultiClusterIngressFeatureSpecResponsePtrOutput() MultiClusterIngressFeatureSpecResponsePtrOutput {
	return i.ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (i *multiClusterIngressFeatureSpecResponsePtrType) ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MultiClusterIngressFeatureSpecResponsePtrOutput)
}

// **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
type MultiClusterIngressFeatureSpecResponseOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpecResponse)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponseOutput() MultiClusterIngressFeatureSpecResponseOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponseOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponseOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponsePtrOutput() MultiClusterIngressFeatureSpecResponsePtrOutput {
	return o.ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecResponseOutput) ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiClusterIngressFeatureSpecResponse) *MultiClusterIngressFeatureSpecResponse {
		return &v
	}).(MultiClusterIngressFeatureSpecResponsePtrOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecResponseOutput) ConfigMembership() pulumi.StringOutput {
	return o.ApplyT(func(v MultiClusterIngressFeatureSpecResponse) string { return v.ConfigMembership }).(pulumi.StringOutput)
}

type MultiClusterIngressFeatureSpecResponsePtrOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpecResponse)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecResponsePtrOutput) ToMultiClusterIngressFeatureSpecResponsePtrOutput() MultiClusterIngressFeatureSpecResponsePtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecResponsePtrOutput) ToMultiClusterIngressFeatureSpecResponsePtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecResponsePtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecResponsePtrOutput) Elem() MultiClusterIngressFeatureSpecResponseOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpecResponse) MultiClusterIngressFeatureSpecResponse {
		if v != nil {
			return *v
		}
		var ret MultiClusterIngressFeatureSpecResponse
		return ret
	}).(MultiClusterIngressFeatureSpecResponseOutput)
}

// Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
func (o MultiClusterIngressFeatureSpecResponsePtrOutput) ConfigMembership() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpecResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigMembership
	}).(pulumi.StringPtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremCluster struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster *bool `pulumi:"adminCluster"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink *string `pulumi:"resourceLink"`
}

// OnPremClusterInput is an input type that accepts OnPremClusterArgs and OnPremClusterOutput values.
// You can construct a concrete instance of `OnPremClusterInput` via:
//
//          OnPremClusterArgs{...}
type OnPremClusterInput interface {
	pulumi.Input

	ToOnPremClusterOutput() OnPremClusterOutput
	ToOnPremClusterOutputWithContext(context.Context) OnPremClusterOutput
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterArgs struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster pulumi.BoolPtrInput `pulumi:"adminCluster"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink pulumi.StringPtrInput `pulumi:"resourceLink"`
}

func (OnPremClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremCluster)(nil)).Elem()
}

func (i OnPremClusterArgs) ToOnPremClusterOutput() OnPremClusterOutput {
	return i.ToOnPremClusterOutputWithContext(context.Background())
}

func (i OnPremClusterArgs) ToOnPremClusterOutputWithContext(ctx context.Context) OnPremClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterOutput)
}

func (i OnPremClusterArgs) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return i.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (i OnPremClusterArgs) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterOutput).ToOnPremClusterPtrOutputWithContext(ctx)
}

// OnPremClusterPtrInput is an input type that accepts OnPremClusterArgs, OnPremClusterPtr and OnPremClusterPtrOutput values.
// You can construct a concrete instance of `OnPremClusterPtrInput` via:
//
//          OnPremClusterArgs{...}
//
//  or:
//
//          nil
type OnPremClusterPtrInput interface {
	pulumi.Input

	ToOnPremClusterPtrOutput() OnPremClusterPtrOutput
	ToOnPremClusterPtrOutputWithContext(context.Context) OnPremClusterPtrOutput
}

type onPremClusterPtrType OnPremClusterArgs

func OnPremClusterPtr(v *OnPremClusterArgs) OnPremClusterPtrInput {
	return (*onPremClusterPtrType)(v)
}

func (*onPremClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremCluster)(nil)).Elem()
}

func (i *onPremClusterPtrType) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return i.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (i *onPremClusterPtrType) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterPtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterOutput struct{ *pulumi.OutputState }

func (OnPremClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremCluster)(nil)).Elem()
}

func (o OnPremClusterOutput) ToOnPremClusterOutput() OnPremClusterOutput {
	return o
}

func (o OnPremClusterOutput) ToOnPremClusterOutputWithContext(ctx context.Context) OnPremClusterOutput {
	return o
}

func (o OnPremClusterOutput) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return o.ToOnPremClusterPtrOutputWithContext(context.Background())
}

func (o OnPremClusterOutput) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnPremCluster) *OnPremCluster {
		return &v
	}).(OnPremClusterPtrOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterOutput) AdminCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OnPremCluster) *bool { return v.AdminCluster }).(pulumi.BoolPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnPremCluster) *string { return v.ResourceLink }).(pulumi.StringPtrOutput)
}

type OnPremClusterPtrOutput struct{ *pulumi.OutputState }

func (OnPremClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremCluster)(nil)).Elem()
}

func (o OnPremClusterPtrOutput) ToOnPremClusterPtrOutput() OnPremClusterPtrOutput {
	return o
}

func (o OnPremClusterPtrOutput) ToOnPremClusterPtrOutputWithContext(ctx context.Context) OnPremClusterPtrOutput {
	return o
}

func (o OnPremClusterPtrOutput) Elem() OnPremClusterOutput {
	return o.ApplyT(func(v *OnPremCluster) OnPremCluster {
		if v != nil {
			return *v
		}
		var ret OnPremCluster
		return ret
	}).(OnPremClusterOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterPtrOutput) AdminCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnPremCluster) *bool {
		if v == nil {
			return nil
		}
		return v.AdminCluster
	}).(pulumi.BoolPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterPtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremCluster) *string {
		if v == nil {
			return nil
		}
		return v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterResponse struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster bool `pulumi:"adminCluster"`
	// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
	ClusterMissing bool `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink string `pulumi:"resourceLink"`
}

// OnPremClusterResponseInput is an input type that accepts OnPremClusterResponseArgs and OnPremClusterResponseOutput values.
// You can construct a concrete instance of `OnPremClusterResponseInput` via:
//
//          OnPremClusterResponseArgs{...}
type OnPremClusterResponseInput interface {
	pulumi.Input

	ToOnPremClusterResponseOutput() OnPremClusterResponseOutput
	ToOnPremClusterResponseOutputWithContext(context.Context) OnPremClusterResponseOutput
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterResponseArgs struct {
	// Immutable. Whether the cluster is an admin cluster.
	AdminCluster pulumi.BoolInput `pulumi:"adminCluster"`
	// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
	ClusterMissing pulumi.BoolInput `pulumi:"clusterMissing"`
	// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
	ResourceLink pulumi.StringInput `pulumi:"resourceLink"`
}

func (OnPremClusterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremClusterResponse)(nil)).Elem()
}

func (i OnPremClusterResponseArgs) ToOnPremClusterResponseOutput() OnPremClusterResponseOutput {
	return i.ToOnPremClusterResponseOutputWithContext(context.Background())
}

func (i OnPremClusterResponseArgs) ToOnPremClusterResponseOutputWithContext(ctx context.Context) OnPremClusterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterResponseOutput)
}

func (i OnPremClusterResponseArgs) ToOnPremClusterResponsePtrOutput() OnPremClusterResponsePtrOutput {
	return i.ToOnPremClusterResponsePtrOutputWithContext(context.Background())
}

func (i OnPremClusterResponseArgs) ToOnPremClusterResponsePtrOutputWithContext(ctx context.Context) OnPremClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterResponseOutput).ToOnPremClusterResponsePtrOutputWithContext(ctx)
}

// OnPremClusterResponsePtrInput is an input type that accepts OnPremClusterResponseArgs, OnPremClusterResponsePtr and OnPremClusterResponsePtrOutput values.
// You can construct a concrete instance of `OnPremClusterResponsePtrInput` via:
//
//          OnPremClusterResponseArgs{...}
//
//  or:
//
//          nil
type OnPremClusterResponsePtrInput interface {
	pulumi.Input

	ToOnPremClusterResponsePtrOutput() OnPremClusterResponsePtrOutput
	ToOnPremClusterResponsePtrOutputWithContext(context.Context) OnPremClusterResponsePtrOutput
}

type onPremClusterResponsePtrType OnPremClusterResponseArgs

func OnPremClusterResponsePtr(v *OnPremClusterResponseArgs) OnPremClusterResponsePtrInput {
	return (*onPremClusterResponsePtrType)(v)
}

func (*onPremClusterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremClusterResponse)(nil)).Elem()
}

func (i *onPremClusterResponsePtrType) ToOnPremClusterResponsePtrOutput() OnPremClusterResponsePtrOutput {
	return i.ToOnPremClusterResponsePtrOutputWithContext(context.Background())
}

func (i *onPremClusterResponsePtrType) ToOnPremClusterResponsePtrOutputWithContext(ctx context.Context) OnPremClusterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnPremClusterResponsePtrOutput)
}

// OnPremCluster contains information specific to GKE On-Prem clusters.
type OnPremClusterResponseOutput struct{ *pulumi.OutputState }

func (OnPremClusterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnPremClusterResponse)(nil)).Elem()
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponseOutput() OnPremClusterResponseOutput {
	return o
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponseOutputWithContext(ctx context.Context) OnPremClusterResponseOutput {
	return o
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponsePtrOutput() OnPremClusterResponsePtrOutput {
	return o.ToOnPremClusterResponsePtrOutputWithContext(context.Background())
}

func (o OnPremClusterResponseOutput) ToOnPremClusterResponsePtrOutputWithContext(ctx context.Context) OnPremClusterResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnPremClusterResponse) *OnPremClusterResponse {
		return &v
	}).(OnPremClusterResponsePtrOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterResponseOutput) AdminCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v OnPremClusterResponse) bool { return v.AdminCluster }).(pulumi.BoolOutput)
}

// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
func (o OnPremClusterResponseOutput) ClusterMissing() pulumi.BoolOutput {
	return o.ApplyT(func(v OnPremClusterResponse) bool { return v.ClusterMissing }).(pulumi.BoolOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterResponseOutput) ResourceLink() pulumi.StringOutput {
	return o.ApplyT(func(v OnPremClusterResponse) string { return v.ResourceLink }).(pulumi.StringOutput)
}

type OnPremClusterResponsePtrOutput struct{ *pulumi.OutputState }

func (OnPremClusterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnPremClusterResponse)(nil)).Elem()
}

func (o OnPremClusterResponsePtrOutput) ToOnPremClusterResponsePtrOutput() OnPremClusterResponsePtrOutput {
	return o
}

func (o OnPremClusterResponsePtrOutput) ToOnPremClusterResponsePtrOutputWithContext(ctx context.Context) OnPremClusterResponsePtrOutput {
	return o
}

func (o OnPremClusterResponsePtrOutput) Elem() OnPremClusterResponseOutput {
	return o.ApplyT(func(v *OnPremClusterResponse) OnPremClusterResponse {
		if v != nil {
			return *v
		}
		var ret OnPremClusterResponse
		return ret
	}).(OnPremClusterResponseOutput)
}

// Immutable. Whether the cluster is an admin cluster.
func (o OnPremClusterResponsePtrOutput) AdminCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnPremClusterResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.AdminCluster
	}).(pulumi.BoolPtrOutput)
}

// If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
func (o OnPremClusterResponsePtrOutput) ClusterMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OnPremClusterResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.ClusterMissing
	}).(pulumi.BoolPtrOutput)
}

// Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
func (o OnPremClusterResponsePtrOutput) ResourceLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnPremClusterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceLink
	}).(pulumi.StringPtrOutput)
}

// ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
type ResourceManifestResponse struct {
	// Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
	ClusterScoped bool `pulumi:"clusterScoped"`
	// YAML manifest of the resource.
	Manifest string `pulumi:"manifest"`
}

// ResourceManifestResponseInput is an input type that accepts ResourceManifestResponseArgs and ResourceManifestResponseOutput values.
// You can construct a concrete instance of `ResourceManifestResponseInput` via:
//
//          ResourceManifestResponseArgs{...}
type ResourceManifestResponseInput interface {
	pulumi.Input

	ToResourceManifestResponseOutput() ResourceManifestResponseOutput
	ToResourceManifestResponseOutputWithContext(context.Context) ResourceManifestResponseOutput
}

// ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
type ResourceManifestResponseArgs struct {
	// Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
	ClusterScoped pulumi.BoolInput `pulumi:"clusterScoped"`
	// YAML manifest of the resource.
	Manifest pulumi.StringInput `pulumi:"manifest"`
}

func (ResourceManifestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceManifestResponse)(nil)).Elem()
}

func (i ResourceManifestResponseArgs) ToResourceManifestResponseOutput() ResourceManifestResponseOutput {
	return i.ToResourceManifestResponseOutputWithContext(context.Background())
}

func (i ResourceManifestResponseArgs) ToResourceManifestResponseOutputWithContext(ctx context.Context) ResourceManifestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManifestResponseOutput)
}

// ResourceManifestResponseArrayInput is an input type that accepts ResourceManifestResponseArray and ResourceManifestResponseArrayOutput values.
// You can construct a concrete instance of `ResourceManifestResponseArrayInput` via:
//
//          ResourceManifestResponseArray{ ResourceManifestResponseArgs{...} }
type ResourceManifestResponseArrayInput interface {
	pulumi.Input

	ToResourceManifestResponseArrayOutput() ResourceManifestResponseArrayOutput
	ToResourceManifestResponseArrayOutputWithContext(context.Context) ResourceManifestResponseArrayOutput
}

type ResourceManifestResponseArray []ResourceManifestResponseInput

func (ResourceManifestResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceManifestResponse)(nil)).Elem()
}

func (i ResourceManifestResponseArray) ToResourceManifestResponseArrayOutput() ResourceManifestResponseArrayOutput {
	return i.ToResourceManifestResponseArrayOutputWithContext(context.Background())
}

func (i ResourceManifestResponseArray) ToResourceManifestResponseArrayOutputWithContext(ctx context.Context) ResourceManifestResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManifestResponseArrayOutput)
}

// ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
type ResourceManifestResponseOutput struct{ *pulumi.OutputState }

func (ResourceManifestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceManifestResponse)(nil)).Elem()
}

func (o ResourceManifestResponseOutput) ToResourceManifestResponseOutput() ResourceManifestResponseOutput {
	return o
}

func (o ResourceManifestResponseOutput) ToResourceManifestResponseOutputWithContext(ctx context.Context) ResourceManifestResponseOutput {
	return o
}

// Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
func (o ResourceManifestResponseOutput) ClusterScoped() pulumi.BoolOutput {
	return o.ApplyT(func(v ResourceManifestResponse) bool { return v.ClusterScoped }).(pulumi.BoolOutput)
}

// YAML manifest of the resource.
func (o ResourceManifestResponseOutput) Manifest() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceManifestResponse) string { return v.Manifest }).(pulumi.StringOutput)
}

type ResourceManifestResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceManifestResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceManifestResponse)(nil)).Elem()
}

func (o ResourceManifestResponseArrayOutput) ToResourceManifestResponseArrayOutput() ResourceManifestResponseArrayOutput {
	return o
}

func (o ResourceManifestResponseArrayOutput) ToResourceManifestResponseArrayOutputWithContext(ctx context.Context) ResourceManifestResponseArrayOutput {
	return o
}

func (o ResourceManifestResponseArrayOutput) Index(i pulumi.IntInput) ResourceManifestResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceManifestResponse {
		return vs[0].([]ResourceManifestResponse)[vs[1].(int)]
	}).(ResourceManifestResponseOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptions struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion *string `pulumi:"connectVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd *bool `pulumi:"v1beta1Crd"`
}

// ResourceOptionsInput is an input type that accepts ResourceOptionsArgs and ResourceOptionsOutput values.
// You can construct a concrete instance of `ResourceOptionsInput` via:
//
//          ResourceOptionsArgs{...}
type ResourceOptionsInput interface {
	pulumi.Input

	ToResourceOptionsOutput() ResourceOptionsOutput
	ToResourceOptionsOutputWithContext(context.Context) ResourceOptionsOutput
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsArgs struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion pulumi.StringPtrInput `pulumi:"connectVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd pulumi.BoolPtrInput `pulumi:"v1beta1Crd"`
}

func (ResourceOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptions)(nil)).Elem()
}

func (i ResourceOptionsArgs) ToResourceOptionsOutput() ResourceOptionsOutput {
	return i.ToResourceOptionsOutputWithContext(context.Background())
}

func (i ResourceOptionsArgs) ToResourceOptionsOutputWithContext(ctx context.Context) ResourceOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsOutput)
}

func (i ResourceOptionsArgs) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return i.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (i ResourceOptionsArgs) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsOutput).ToResourceOptionsPtrOutputWithContext(ctx)
}

// ResourceOptionsPtrInput is an input type that accepts ResourceOptionsArgs, ResourceOptionsPtr and ResourceOptionsPtrOutput values.
// You can construct a concrete instance of `ResourceOptionsPtrInput` via:
//
//          ResourceOptionsArgs{...}
//
//  or:
//
//          nil
type ResourceOptionsPtrInput interface {
	pulumi.Input

	ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput
	ToResourceOptionsPtrOutputWithContext(context.Context) ResourceOptionsPtrOutput
}

type resourceOptionsPtrType ResourceOptionsArgs

func ResourceOptionsPtr(v *ResourceOptionsArgs) ResourceOptionsPtrInput {
	return (*resourceOptionsPtrType)(v)
}

func (*resourceOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptions)(nil)).Elem()
}

func (i *resourceOptionsPtrType) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return i.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (i *resourceOptionsPtrType) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsPtrOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsOutput struct{ *pulumi.OutputState }

func (ResourceOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptions)(nil)).Elem()
}

func (o ResourceOptionsOutput) ToResourceOptionsOutput() ResourceOptionsOutput {
	return o
}

func (o ResourceOptionsOutput) ToResourceOptionsOutputWithContext(ctx context.Context) ResourceOptionsOutput {
	return o
}

func (o ResourceOptionsOutput) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return o.ToResourceOptionsPtrOutputWithContext(context.Background())
}

func (o ResourceOptionsOutput) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceOptions) *ResourceOptions {
		return &v
	}).(ResourceOptionsPtrOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsOutput) ConnectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOptions) *string { return v.ConnectVersion }).(pulumi.StringPtrOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsOutput) V1beta1Crd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceOptions) *bool { return v.V1beta1Crd }).(pulumi.BoolPtrOutput)
}

type ResourceOptionsPtrOutput struct{ *pulumi.OutputState }

func (ResourceOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptions)(nil)).Elem()
}

func (o ResourceOptionsPtrOutput) ToResourceOptionsPtrOutput() ResourceOptionsPtrOutput {
	return o
}

func (o ResourceOptionsPtrOutput) ToResourceOptionsPtrOutputWithContext(ctx context.Context) ResourceOptionsPtrOutput {
	return o
}

func (o ResourceOptionsPtrOutput) Elem() ResourceOptionsOutput {
	return o.ApplyT(func(v *ResourceOptions) ResourceOptions {
		if v != nil {
			return *v
		}
		var ret ResourceOptions
		return ret
	}).(ResourceOptionsOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsPtrOutput) ConnectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceOptions) *string {
		if v == nil {
			return nil
		}
		return v.ConnectVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsPtrOutput) V1beta1Crd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceOptions) *bool {
		if v == nil {
			return nil
		}
		return v.V1beta1Crd
	}).(pulumi.BoolPtrOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsResponse struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion string `pulumi:"connectVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd bool `pulumi:"v1beta1Crd"`
}

// ResourceOptionsResponseInput is an input type that accepts ResourceOptionsResponseArgs and ResourceOptionsResponseOutput values.
// You can construct a concrete instance of `ResourceOptionsResponseInput` via:
//
//          ResourceOptionsResponseArgs{...}
type ResourceOptionsResponseInput interface {
	pulumi.Input

	ToResourceOptionsResponseOutput() ResourceOptionsResponseOutput
	ToResourceOptionsResponseOutputWithContext(context.Context) ResourceOptionsResponseOutput
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsResponseArgs struct {
	// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
	ConnectVersion pulumi.StringInput `pulumi:"connectVersion"`
	// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
	V1beta1Crd pulumi.BoolInput `pulumi:"v1beta1Crd"`
}

func (ResourceOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptionsResponse)(nil)).Elem()
}

func (i ResourceOptionsResponseArgs) ToResourceOptionsResponseOutput() ResourceOptionsResponseOutput {
	return i.ToResourceOptionsResponseOutputWithContext(context.Background())
}

func (i ResourceOptionsResponseArgs) ToResourceOptionsResponseOutputWithContext(ctx context.Context) ResourceOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsResponseOutput)
}

func (i ResourceOptionsResponseArgs) ToResourceOptionsResponsePtrOutput() ResourceOptionsResponsePtrOutput {
	return i.ToResourceOptionsResponsePtrOutputWithContext(context.Background())
}

func (i ResourceOptionsResponseArgs) ToResourceOptionsResponsePtrOutputWithContext(ctx context.Context) ResourceOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsResponseOutput).ToResourceOptionsResponsePtrOutputWithContext(ctx)
}

// ResourceOptionsResponsePtrInput is an input type that accepts ResourceOptionsResponseArgs, ResourceOptionsResponsePtr and ResourceOptionsResponsePtrOutput values.
// You can construct a concrete instance of `ResourceOptionsResponsePtrInput` via:
//
//          ResourceOptionsResponseArgs{...}
//
//  or:
//
//          nil
type ResourceOptionsResponsePtrInput interface {
	pulumi.Input

	ToResourceOptionsResponsePtrOutput() ResourceOptionsResponsePtrOutput
	ToResourceOptionsResponsePtrOutputWithContext(context.Context) ResourceOptionsResponsePtrOutput
}

type resourceOptionsResponsePtrType ResourceOptionsResponseArgs

func ResourceOptionsResponsePtr(v *ResourceOptionsResponseArgs) ResourceOptionsResponsePtrInput {
	return (*resourceOptionsResponsePtrType)(v)
}

func (*resourceOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptionsResponse)(nil)).Elem()
}

func (i *resourceOptionsResponsePtrType) ToResourceOptionsResponsePtrOutput() ResourceOptionsResponsePtrOutput {
	return i.ToResourceOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *resourceOptionsResponsePtrType) ToResourceOptionsResponsePtrOutputWithContext(ctx context.Context) ResourceOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOptionsResponsePtrOutput)
}

// ResourceOptions represent options for Kubernetes resource generation.
type ResourceOptionsResponseOutput struct{ *pulumi.OutputState }

func (ResourceOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOptionsResponse)(nil)).Elem()
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponseOutput() ResourceOptionsResponseOutput {
	return o
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponseOutputWithContext(ctx context.Context) ResourceOptionsResponseOutput {
	return o
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponsePtrOutput() ResourceOptionsResponsePtrOutput {
	return o.ToResourceOptionsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceOptionsResponseOutput) ToResourceOptionsResponsePtrOutputWithContext(ctx context.Context) ResourceOptionsResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceOptionsResponse) *ResourceOptionsResponse {
		return &v
	}).(ResourceOptionsResponsePtrOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsResponseOutput) ConnectVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOptionsResponse) string { return v.ConnectVersion }).(pulumi.StringOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsResponseOutput) V1beta1Crd() pulumi.BoolOutput {
	return o.ApplyT(func(v ResourceOptionsResponse) bool { return v.V1beta1Crd }).(pulumi.BoolOutput)
}

type ResourceOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceOptionsResponse)(nil)).Elem()
}

func (o ResourceOptionsResponsePtrOutput) ToResourceOptionsResponsePtrOutput() ResourceOptionsResponsePtrOutput {
	return o
}

func (o ResourceOptionsResponsePtrOutput) ToResourceOptionsResponsePtrOutputWithContext(ctx context.Context) ResourceOptionsResponsePtrOutput {
	return o
}

func (o ResourceOptionsResponsePtrOutput) Elem() ResourceOptionsResponseOutput {
	return o.ApplyT(func(v *ResourceOptionsResponse) ResourceOptionsResponse {
		if v != nil {
			return *v
		}
		var ret ResourceOptionsResponse
		return ret
	}).(ResourceOptionsResponseOutput)
}

// Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
func (o ResourceOptionsResponsePtrOutput) ConnectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectVersion
	}).(pulumi.StringPtrOutput)
}

// Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
func (o ResourceOptionsResponsePtrOutput) V1beta1Crd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.V1beta1Crd
	}).(pulumi.BoolPtrOutput)
}

// Status specifies state for the subcomponent.
type StatusResponse struct {
	// Code specifies AppDevExperienceFeature's subcomponent ready state.
	Code string `pulumi:"code"`
	// Description is populated if Code is Failed, explaining why it has failed.
	Description string `pulumi:"description"`
}

// StatusResponseInput is an input type that accepts StatusResponseArgs and StatusResponseOutput values.
// You can construct a concrete instance of `StatusResponseInput` via:
//
//          StatusResponseArgs{...}
type StatusResponseInput interface {
	pulumi.Input

	ToStatusResponseOutput() StatusResponseOutput
	ToStatusResponseOutputWithContext(context.Context) StatusResponseOutput
}

// Status specifies state for the subcomponent.
type StatusResponseArgs struct {
	// Code specifies AppDevExperienceFeature's subcomponent ready state.
	Code pulumi.StringInput `pulumi:"code"`
	// Description is populated if Code is Failed, explaining why it has failed.
	Description pulumi.StringInput `pulumi:"description"`
}

func (StatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (i StatusResponseArgs) ToStatusResponseOutput() StatusResponseOutput {
	return i.ToStatusResponseOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput)
}

func (i StatusResponseArgs) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i StatusResponseArgs) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponseOutput).ToStatusResponsePtrOutputWithContext(ctx)
}

// StatusResponsePtrInput is an input type that accepts StatusResponseArgs, StatusResponsePtr and StatusResponsePtrOutput values.
// You can construct a concrete instance of `StatusResponsePtrInput` via:
//
//          StatusResponseArgs{...}
//
//  or:
//
//          nil
type StatusResponsePtrInput interface {
	pulumi.Input

	ToStatusResponsePtrOutput() StatusResponsePtrOutput
	ToStatusResponsePtrOutputWithContext(context.Context) StatusResponsePtrOutput
}

type statusResponsePtrType StatusResponseArgs

func StatusResponsePtr(v *StatusResponseArgs) StatusResponsePtrInput {
	return (*statusResponsePtrType)(v)
}

func (*statusResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return i.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (i *statusResponsePtrType) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusResponsePtrOutput)
}

// Status specifies state for the subcomponent.
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o.ToStatusResponsePtrOutputWithContext(context.Background())
}

func (o StatusResponseOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatusResponse) *StatusResponse {
		return &v
	}).(StatusResponsePtrOutput)
}

// Code specifies AppDevExperienceFeature's subcomponent ready state.
func (o StatusResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Description is populated if Code is Failed, explaining why it has failed.
func (o StatusResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Description }).(pulumi.StringOutput)
}

type StatusResponsePtrOutput struct{ *pulumi.OutputState }

func (StatusResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusResponse)(nil)).Elem()
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutput() StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) ToStatusResponsePtrOutputWithContext(ctx context.Context) StatusResponsePtrOutput {
	return o
}

func (o StatusResponsePtrOutput) Elem() StatusResponseOutput {
	return o.ApplyT(func(v *StatusResponse) StatusResponse {
		if v != nil {
			return *v
		}
		var ret StatusResponse
		return ret
	}).(StatusResponseOutput)
}

// Code specifies AppDevExperienceFeature's subcomponent ready state.
func (o StatusResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// Description is populated if Code is Failed, explaining why it has failed.
func (o StatusResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Description
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecInput)(nil)).Elem(), AppDevExperienceFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecPtrInput)(nil)).Elem(), AppDevExperienceFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecResponseInput)(nil)).Elem(), AppDevExperienceFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureSpecResponsePtrInput)(nil)).Elem(), AppDevExperienceFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureStateResponseInput)(nil)).Elem(), AppDevExperienceFeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDevExperienceFeatureStateResponsePtrInput)(nil)).Elem(), AppDevExperienceFeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigInput)(nil)).Elem(), AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigArrayInput)(nil)).Elem(), AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigResponseInput)(nil)).Elem(), AuditConfigResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigResponseArrayInput)(nil)).Elem(), AuditConfigResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigInput)(nil)).Elem(), AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigArrayInput)(nil)).Elem(), AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigResponseInput)(nil)).Elem(), AuditLogConfigResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigResponseArrayInput)(nil)).Elem(), AuditLogConfigResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityInput)(nil)).Elem(), AuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityPtrInput)(nil)).Elem(), AuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityResponseInput)(nil)).Elem(), AuthorityResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorityResponsePtrInput)(nil)).Elem(), AuthorityResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingResponseInput)(nil)).Elem(), BindingResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingResponseArrayInput)(nil)).Elem(), BindingResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecInput)(nil)).Elem(), CommonFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecPtrInput)(nil)).Elem(), CommonFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecResponseInput)(nil)).Elem(), CommonFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureSpecResponsePtrInput)(nil)).Elem(), CommonFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureStateResponseInput)(nil)).Elem(), CommonFeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommonFeatureStateResponsePtrInput)(nil)).Elem(), CommonFeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprResponseInput)(nil)).Elem(), ExprResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureResourceStateResponseInput)(nil)).Elem(), FeatureResourceStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureResourceStateResponsePtrInput)(nil)).Elem(), FeatureResourceStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateResponseInput)(nil)).Elem(), FeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureStateResponsePtrInput)(nil)).Elem(), FeatureStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterInput)(nil)).Elem(), GkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterPtrInput)(nil)).Elem(), GkeClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterResponseInput)(nil)).Elem(), GkeClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterResponsePtrInput)(nil)).Elem(), GkeClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesMetadataResponseInput)(nil)).Elem(), KubernetesMetadataResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesMetadataResponsePtrInput)(nil)).Elem(), KubernetesMetadataResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourceInput)(nil)).Elem(), KubernetesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourcePtrInput)(nil)).Elem(), KubernetesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourceResponseInput)(nil)).Elem(), KubernetesResourceResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesResourceResponsePtrInput)(nil)).Elem(), KubernetesResourceResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointPtrInput)(nil)).Elem(), MembershipEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointResponseInput)(nil)).Elem(), MembershipEndpointResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipEndpointResponsePtrInput)(nil)).Elem(), MembershipEndpointResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipStateResponseInput)(nil)).Elem(), MembershipStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipStateResponsePtrInput)(nil)).Elem(), MembershipStateResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterInput)(nil)).Elem(), MultiCloudClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterPtrInput)(nil)).Elem(), MultiCloudClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterResponseInput)(nil)).Elem(), MultiCloudClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiCloudClusterResponsePtrInput)(nil)).Elem(), MultiCloudClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecInput)(nil)).Elem(), MultiClusterIngressFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecPtrInput)(nil)).Elem(), MultiClusterIngressFeatureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecResponseInput)(nil)).Elem(), MultiClusterIngressFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecResponsePtrInput)(nil)).Elem(), MultiClusterIngressFeatureSpecResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterInput)(nil)).Elem(), OnPremClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterPtrInput)(nil)).Elem(), OnPremClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterResponseInput)(nil)).Elem(), OnPremClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnPremClusterResponsePtrInput)(nil)).Elem(), OnPremClusterResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceManifestResponseInput)(nil)).Elem(), ResourceManifestResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceManifestResponseArrayInput)(nil)).Elem(), ResourceManifestResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsInput)(nil)).Elem(), ResourceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsPtrInput)(nil)).Elem(), ResourceOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsResponseInput)(nil)).Elem(), ResourceOptionsResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceOptionsResponsePtrInput)(nil)).Elem(), ResourceOptionsResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusResponseInput)(nil)).Elem(), StatusResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusResponsePtrInput)(nil)).Elem(), StatusResponseArgs{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(AppDevExperienceFeatureStateResponsePtrOutput{})
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuthorityOutput{})
	pulumi.RegisterOutputType(AuthorityPtrOutput{})
	pulumi.RegisterOutputType(AuthorityResponseOutput{})
	pulumi.RegisterOutputType(AuthorityResponsePtrOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(CommonFeatureSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(CommonFeatureStateResponseOutput{})
	pulumi.RegisterOutputType(CommonFeatureStateResponsePtrOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(FeatureResourceStateResponseOutput{})
	pulumi.RegisterOutputType(FeatureResourceStateResponsePtrOutput{})
	pulumi.RegisterOutputType(FeatureStateResponseOutput{})
	pulumi.RegisterOutputType(FeatureStateResponsePtrOutput{})
	pulumi.RegisterOutputType(GkeClusterOutput{})
	pulumi.RegisterOutputType(GkeClusterPtrOutput{})
	pulumi.RegisterOutputType(GkeClusterResponseOutput{})
	pulumi.RegisterOutputType(GkeClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesMetadataResponseOutput{})
	pulumi.RegisterOutputType(KubernetesMetadataResponsePtrOutput{})
	pulumi.RegisterOutputType(KubernetesResourceOutput{})
	pulumi.RegisterOutputType(KubernetesResourcePtrOutput{})
	pulumi.RegisterOutputType(KubernetesResourceResponseOutput{})
	pulumi.RegisterOutputType(KubernetesResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(MembershipEndpointOutput{})
	pulumi.RegisterOutputType(MembershipEndpointPtrOutput{})
	pulumi.RegisterOutputType(MembershipEndpointResponseOutput{})
	pulumi.RegisterOutputType(MembershipEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(MembershipStateResponseOutput{})
	pulumi.RegisterOutputType(MembershipStateResponsePtrOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterPtrOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterResponseOutput{})
	pulumi.RegisterOutputType(MultiCloudClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecPtrOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecResponseOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecResponsePtrOutput{})
	pulumi.RegisterOutputType(OnPremClusterOutput{})
	pulumi.RegisterOutputType(OnPremClusterPtrOutput{})
	pulumi.RegisterOutputType(OnPremClusterResponseOutput{})
	pulumi.RegisterOutputType(OnPremClusterResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceManifestResponseOutput{})
	pulumi.RegisterOutputType(ResourceManifestResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceOptionsOutput{})
	pulumi.RegisterOutputType(ResourceOptionsPtrOutput{})
	pulumi.RegisterOutputType(ResourceOptionsResponseOutput{})
	pulumi.RegisterOutputType(ResourceOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
	pulumi.RegisterOutputType(StatusResponsePtrOutput{})
}
