// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// Deprecated: This field will be ignored and should not be set. Customer's billing structure.
type MultiClusterIngressFeatureSpecBilling string

const (
	// Unknown
	MultiClusterIngressFeatureSpecBillingBillingUnspecified = MultiClusterIngressFeatureSpecBilling("BILLING_UNSPECIFIED")
	// User pays a fee per-endpoint.
	MultiClusterIngressFeatureSpecBillingPayAsYouGo = MultiClusterIngressFeatureSpecBilling("PAY_AS_YOU_GO")
	// User is paying for Anthos as a whole.
	MultiClusterIngressFeatureSpecBillingAnthosLicense = MultiClusterIngressFeatureSpecBilling("ANTHOS_LICENSE")
)

func (MultiClusterIngressFeatureSpecBilling) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpecBilling)(nil)).Elem()
}

func (e MultiClusterIngressFeatureSpecBilling) ToMultiClusterIngressFeatureSpecBillingOutput() MultiClusterIngressFeatureSpecBillingOutput {
	return pulumi.ToOutput(e).(MultiClusterIngressFeatureSpecBillingOutput)
}

func (e MultiClusterIngressFeatureSpecBilling) ToMultiClusterIngressFeatureSpecBillingOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MultiClusterIngressFeatureSpecBillingOutput)
}

func (e MultiClusterIngressFeatureSpecBilling) ToMultiClusterIngressFeatureSpecBillingPtrOutput() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return e.ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(context.Background())
}

func (e MultiClusterIngressFeatureSpecBilling) ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingPtrOutput {
	return MultiClusterIngressFeatureSpecBilling(e).ToMultiClusterIngressFeatureSpecBillingOutputWithContext(ctx).ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(ctx)
}

func (e MultiClusterIngressFeatureSpecBilling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiClusterIngressFeatureSpecBilling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MultiClusterIngressFeatureSpecBilling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MultiClusterIngressFeatureSpecBilling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MultiClusterIngressFeatureSpecBillingOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecBillingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiClusterIngressFeatureSpecBilling)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToMultiClusterIngressFeatureSpecBillingOutput() MultiClusterIngressFeatureSpecBillingOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToMultiClusterIngressFeatureSpecBillingOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToMultiClusterIngressFeatureSpecBillingPtrOutput() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o.ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MultiClusterIngressFeatureSpecBilling) *MultiClusterIngressFeatureSpecBilling {
		return &v
	}).(MultiClusterIngressFeatureSpecBillingPtrOutput)
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiClusterIngressFeatureSpecBilling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecBillingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MultiClusterIngressFeatureSpecBilling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MultiClusterIngressFeatureSpecBillingPtrOutput struct{ *pulumi.OutputState }

func (MultiClusterIngressFeatureSpecBillingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MultiClusterIngressFeatureSpecBilling)(nil)).Elem()
}

func (o MultiClusterIngressFeatureSpecBillingPtrOutput) ToMultiClusterIngressFeatureSpecBillingPtrOutput() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecBillingPtrOutput) ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingPtrOutput {
	return o
}

func (o MultiClusterIngressFeatureSpecBillingPtrOutput) Elem() MultiClusterIngressFeatureSpecBillingOutput {
	return o.ApplyT(func(v *MultiClusterIngressFeatureSpecBilling) MultiClusterIngressFeatureSpecBilling {
		if v != nil {
			return *v
		}
		var ret MultiClusterIngressFeatureSpecBilling
		return ret
	}).(MultiClusterIngressFeatureSpecBillingOutput)
}

func (o MultiClusterIngressFeatureSpecBillingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MultiClusterIngressFeatureSpecBillingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MultiClusterIngressFeatureSpecBilling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MultiClusterIngressFeatureSpecBillingInput is an input type that accepts MultiClusterIngressFeatureSpecBillingArgs and MultiClusterIngressFeatureSpecBillingOutput values.
// You can construct a concrete instance of `MultiClusterIngressFeatureSpecBillingInput` via:
//
//          MultiClusterIngressFeatureSpecBillingArgs{...}
type MultiClusterIngressFeatureSpecBillingInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecBillingOutput() MultiClusterIngressFeatureSpecBillingOutput
	ToMultiClusterIngressFeatureSpecBillingOutputWithContext(context.Context) MultiClusterIngressFeatureSpecBillingOutput
}

var multiClusterIngressFeatureSpecBillingPtrType = reflect.TypeOf((**MultiClusterIngressFeatureSpecBilling)(nil)).Elem()

type MultiClusterIngressFeatureSpecBillingPtrInput interface {
	pulumi.Input

	ToMultiClusterIngressFeatureSpecBillingPtrOutput() MultiClusterIngressFeatureSpecBillingPtrOutput
	ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(context.Context) MultiClusterIngressFeatureSpecBillingPtrOutput
}

type multiClusterIngressFeatureSpecBillingPtr string

func MultiClusterIngressFeatureSpecBillingPtr(v string) MultiClusterIngressFeatureSpecBillingPtrInput {
	return (*multiClusterIngressFeatureSpecBillingPtr)(&v)
}

func (*multiClusterIngressFeatureSpecBillingPtr) ElementType() reflect.Type {
	return multiClusterIngressFeatureSpecBillingPtrType
}

func (in *multiClusterIngressFeatureSpecBillingPtr) ToMultiClusterIngressFeatureSpecBillingPtrOutput() MultiClusterIngressFeatureSpecBillingPtrOutput {
	return pulumi.ToOutput(in).(MultiClusterIngressFeatureSpecBillingPtrOutput)
}

func (in *multiClusterIngressFeatureSpecBillingPtr) ToMultiClusterIngressFeatureSpecBillingPtrOutputWithContext(ctx context.Context) MultiClusterIngressFeatureSpecBillingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MultiClusterIngressFeatureSpecBillingPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecBillingInput)(nil)).Elem(), MultiClusterIngressFeatureSpecBilling("BILLING_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MultiClusterIngressFeatureSpecBillingPtrInput)(nil)).Elem(), MultiClusterIngressFeatureSpecBilling("BILLING_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecBillingOutput{})
	pulumi.RegisterOutputType(MultiClusterIngressFeatureSpecBillingPtrOutput{})
}
