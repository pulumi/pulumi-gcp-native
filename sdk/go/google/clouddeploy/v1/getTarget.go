// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Target.
func LookupTarget(ctx *pulumi.Context, args *LookupTargetArgs, opts ...pulumi.InvokeOption) (*LookupTargetResult, error) {
	var rv LookupTargetResult
	err := ctx.Invoke("google-native:clouddeploy/v1:getTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTargetArgs struct {
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	TargetId string  `pulumi:"targetId"`
}

type LookupTargetResult struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations map[string]string `pulumi:"annotations"`
	// Information specifying an Anthos Cluster.
	AnthosCluster AnthosClusterResponse `pulumi:"anthosCluster"`
	// Time at which the `Target` was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description string `pulumi:"description"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag string `pulumi:"etag"`
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs []ExecutionConfigResponse `pulumi:"executionConfigs"`
	// Information specifying a GKE Cluster.
	Gke GkeClusterResponse `pulumi:"gke"`
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels map[string]string `pulumi:"labels"`
	// Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.
	Name string `pulumi:"name"`
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval bool `pulumi:"requireApproval"`
	// Resource id of the `Target`.
	TargetId string `pulumi:"targetId"`
	// Unique identifier of the `Target`.
	Uid string `pulumi:"uid"`
	// Most recent time at which the `Target` was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupTargetOutput(ctx *pulumi.Context, args LookupTargetOutputArgs, opts ...pulumi.InvokeOption) LookupTargetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTargetResult, error) {
			args := v.(LookupTargetArgs)
			r, err := LookupTarget(ctx, &args, opts...)
			var s LookupTargetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTargetResultOutput)
}

type LookupTargetOutputArgs struct {
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
	TargetId pulumi.StringInput    `pulumi:"targetId"`
}

func (LookupTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetArgs)(nil)).Elem()
}

type LookupTargetResultOutput struct{ *pulumi.OutputState }

func (LookupTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetResult)(nil)).Elem()
}

func (o LookupTargetResultOutput) ToLookupTargetResultOutput() LookupTargetResultOutput {
	return o
}

func (o LookupTargetResultOutput) ToLookupTargetResultOutputWithContext(ctx context.Context) LookupTargetResultOutput {
	return o
}

// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
func (o LookupTargetResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTargetResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Information specifying an Anthos Cluster.
func (o LookupTargetResultOutput) AnthosCluster() AnthosClusterResponseOutput {
	return o.ApplyT(func(v LookupTargetResult) AnthosClusterResponse { return v.AnthosCluster }).(AnthosClusterResponseOutput)
}

// Time at which the `Target` was created.
func (o LookupTargetResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the `Target`. Max length is 255 characters.
func (o LookupTargetResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o LookupTargetResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
func (o LookupTargetResultOutput) ExecutionConfigs() ExecutionConfigResponseArrayOutput {
	return o.ApplyT(func(v LookupTargetResult) []ExecutionConfigResponse { return v.ExecutionConfigs }).(ExecutionConfigResponseArrayOutput)
}

// Information specifying a GKE Cluster.
func (o LookupTargetResultOutput) Gke() GkeClusterResponseOutput {
	return o.ApplyT(func(v LookupTargetResult) GkeClusterResponse { return v.Gke }).(GkeClusterResponseOutput)
}

// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
func (o LookupTargetResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTargetResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.
func (o LookupTargetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Whether or not the `Target` requires approval.
func (o LookupTargetResultOutput) RequireApproval() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTargetResult) bool { return v.RequireApproval }).(pulumi.BoolOutput)
}

// Resource id of the `Target`.
func (o LookupTargetResultOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.TargetId }).(pulumi.StringOutput)
}

// Unique identifier of the `Target`.
func (o LookupTargetResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Most recent time at which the `Target` was updated.
func (o LookupTargetResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTargetResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTargetResultOutput{})
}
