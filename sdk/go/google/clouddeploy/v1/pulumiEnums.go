// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

type ExecutionConfigUsagesItem string

const (
	// Default value. This value is unused.
	ExecutionConfigUsagesItemExecutionEnvironmentUsageUnspecified = ExecutionConfigUsagesItem("EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED")
	// Use for rendering.
	ExecutionConfigUsagesItemRender = ExecutionConfigUsagesItem("RENDER")
	// Use for deploying and deployment hooks.
	ExecutionConfigUsagesItemDeploy = ExecutionConfigUsagesItem("DEPLOY")
)

func (ExecutionConfigUsagesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionConfigUsagesItem)(nil)).Elem()
}

func (e ExecutionConfigUsagesItem) ToExecutionConfigUsagesItemOutput() ExecutionConfigUsagesItemOutput {
	return pulumi.ToOutput(e).(ExecutionConfigUsagesItemOutput)
}

func (e ExecutionConfigUsagesItem) ToExecutionConfigUsagesItemOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExecutionConfigUsagesItemOutput)
}

func (e ExecutionConfigUsagesItem) ToExecutionConfigUsagesItemPtrOutput() ExecutionConfigUsagesItemPtrOutput {
	return e.ToExecutionConfigUsagesItemPtrOutputWithContext(context.Background())
}

func (e ExecutionConfigUsagesItem) ToExecutionConfigUsagesItemPtrOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemPtrOutput {
	return ExecutionConfigUsagesItem(e).ToExecutionConfigUsagesItemOutputWithContext(ctx).ToExecutionConfigUsagesItemPtrOutputWithContext(ctx)
}

func (e ExecutionConfigUsagesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExecutionConfigUsagesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExecutionConfigUsagesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExecutionConfigUsagesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExecutionConfigUsagesItemOutput struct{ *pulumi.OutputState }

func (ExecutionConfigUsagesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionConfigUsagesItem)(nil)).Elem()
}

func (o ExecutionConfigUsagesItemOutput) ToExecutionConfigUsagesItemOutput() ExecutionConfigUsagesItemOutput {
	return o
}

func (o ExecutionConfigUsagesItemOutput) ToExecutionConfigUsagesItemOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemOutput {
	return o
}

func (o ExecutionConfigUsagesItemOutput) ToExecutionConfigUsagesItemPtrOutput() ExecutionConfigUsagesItemPtrOutput {
	return o.ToExecutionConfigUsagesItemPtrOutputWithContext(context.Background())
}

func (o ExecutionConfigUsagesItemOutput) ToExecutionConfigUsagesItemPtrOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExecutionConfigUsagesItem) *ExecutionConfigUsagesItem {
		return &v
	}).(ExecutionConfigUsagesItemPtrOutput)
}

func (o ExecutionConfigUsagesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExecutionConfigUsagesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExecutionConfigUsagesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExecutionConfigUsagesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExecutionConfigUsagesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExecutionConfigUsagesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExecutionConfigUsagesItemPtrOutput struct{ *pulumi.OutputState }

func (ExecutionConfigUsagesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExecutionConfigUsagesItem)(nil)).Elem()
}

func (o ExecutionConfigUsagesItemPtrOutput) ToExecutionConfigUsagesItemPtrOutput() ExecutionConfigUsagesItemPtrOutput {
	return o
}

func (o ExecutionConfigUsagesItemPtrOutput) ToExecutionConfigUsagesItemPtrOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemPtrOutput {
	return o
}

func (o ExecutionConfigUsagesItemPtrOutput) Elem() ExecutionConfigUsagesItemOutput {
	return o.ApplyT(func(v *ExecutionConfigUsagesItem) ExecutionConfigUsagesItem {
		if v != nil {
			return *v
		}
		var ret ExecutionConfigUsagesItem
		return ret
	}).(ExecutionConfigUsagesItemOutput)
}

func (o ExecutionConfigUsagesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExecutionConfigUsagesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExecutionConfigUsagesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExecutionConfigUsagesItemInput is an input type that accepts ExecutionConfigUsagesItemArgs and ExecutionConfigUsagesItemOutput values.
// You can construct a concrete instance of `ExecutionConfigUsagesItemInput` via:
//
//          ExecutionConfigUsagesItemArgs{...}
type ExecutionConfigUsagesItemInput interface {
	pulumi.Input

	ToExecutionConfigUsagesItemOutput() ExecutionConfigUsagesItemOutput
	ToExecutionConfigUsagesItemOutputWithContext(context.Context) ExecutionConfigUsagesItemOutput
}

var executionConfigUsagesItemPtrType = reflect.TypeOf((**ExecutionConfigUsagesItem)(nil)).Elem()

type ExecutionConfigUsagesItemPtrInput interface {
	pulumi.Input

	ToExecutionConfigUsagesItemPtrOutput() ExecutionConfigUsagesItemPtrOutput
	ToExecutionConfigUsagesItemPtrOutputWithContext(context.Context) ExecutionConfigUsagesItemPtrOutput
}

type executionConfigUsagesItemPtr string

func ExecutionConfigUsagesItemPtr(v string) ExecutionConfigUsagesItemPtrInput {
	return (*executionConfigUsagesItemPtr)(&v)
}

func (*executionConfigUsagesItemPtr) ElementType() reflect.Type {
	return executionConfigUsagesItemPtrType
}

func (in *executionConfigUsagesItemPtr) ToExecutionConfigUsagesItemPtrOutput() ExecutionConfigUsagesItemPtrOutput {
	return pulumi.ToOutput(in).(ExecutionConfigUsagesItemPtrOutput)
}

func (in *executionConfigUsagesItemPtr) ToExecutionConfigUsagesItemPtrOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExecutionConfigUsagesItemPtrOutput)
}

// ExecutionConfigUsagesItemArrayInput is an input type that accepts ExecutionConfigUsagesItemArray and ExecutionConfigUsagesItemArrayOutput values.
// You can construct a concrete instance of `ExecutionConfigUsagesItemArrayInput` via:
//
//          ExecutionConfigUsagesItemArray{ ExecutionConfigUsagesItemArgs{...} }
type ExecutionConfigUsagesItemArrayInput interface {
	pulumi.Input

	ToExecutionConfigUsagesItemArrayOutput() ExecutionConfigUsagesItemArrayOutput
	ToExecutionConfigUsagesItemArrayOutputWithContext(context.Context) ExecutionConfigUsagesItemArrayOutput
}

type ExecutionConfigUsagesItemArray []ExecutionConfigUsagesItem

func (ExecutionConfigUsagesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExecutionConfigUsagesItem)(nil)).Elem()
}

func (i ExecutionConfigUsagesItemArray) ToExecutionConfigUsagesItemArrayOutput() ExecutionConfigUsagesItemArrayOutput {
	return i.ToExecutionConfigUsagesItemArrayOutputWithContext(context.Background())
}

func (i ExecutionConfigUsagesItemArray) ToExecutionConfigUsagesItemArrayOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionConfigUsagesItemArrayOutput)
}

type ExecutionConfigUsagesItemArrayOutput struct{ *pulumi.OutputState }

func (ExecutionConfigUsagesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExecutionConfigUsagesItem)(nil)).Elem()
}

func (o ExecutionConfigUsagesItemArrayOutput) ToExecutionConfigUsagesItemArrayOutput() ExecutionConfigUsagesItemArrayOutput {
	return o
}

func (o ExecutionConfigUsagesItemArrayOutput) ToExecutionConfigUsagesItemArrayOutputWithContext(ctx context.Context) ExecutionConfigUsagesItemArrayOutput {
	return o
}

func (o ExecutionConfigUsagesItemArrayOutput) Index(i pulumi.IntInput) ExecutionConfigUsagesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExecutionConfigUsagesItem {
		return vs[0].([]ExecutionConfigUsagesItem)[vs[1].(int)]
	}).(ExecutionConfigUsagesItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExecutionConfigUsagesItemInput)(nil)).Elem(), ExecutionConfigUsagesItem("EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExecutionConfigUsagesItemPtrInput)(nil)).Elem(), ExecutionConfigUsagesItem("EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExecutionConfigUsagesItemArrayInput)(nil)).Elem(), ExecutionConfigUsagesItemArray{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(ExecutionConfigUsagesItemOutput{})
	pulumi.RegisterOutputType(ExecutionConfigUsagesItemPtrOutput{})
	pulumi.RegisterOutputType(ExecutionConfigUsagesItemArrayOutput{})
}
