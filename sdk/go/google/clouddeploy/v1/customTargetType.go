// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new CustomTargetType in a given project and location.
type CustomTargetType struct {
	pulumi.CustomResourceState

	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Time at which the `CustomTargetType` was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
	CustomActions CustomTargetSkaffoldActionsResponseOutput `pulumi:"customActions"`
	// Required. ID of the `CustomTargetType`.
	CustomTargetTypeId pulumi.StringOutput `pulumi:"customTargetTypeId"`
	// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Unique identifier of the `CustomTargetType`.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Most recent time at which the `CustomTargetType` was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomTargetType registers a new resource with the given unique name, arguments, and options.
func NewCustomTargetType(ctx *pulumi.Context,
	name string, args *CustomTargetTypeArgs, opts ...pulumi.ResourceOption) (*CustomTargetType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomTargetTypeId == nil {
		return nil, errors.New("invalid value for required argument 'CustomTargetTypeId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"customTargetTypeId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomTargetType
	err := ctx.RegisterResource("google-native:clouddeploy/v1:CustomTargetType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomTargetType gets an existing CustomTargetType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomTargetType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomTargetTypeState, opts ...pulumi.ResourceOption) (*CustomTargetType, error) {
	var resource CustomTargetType
	err := ctx.ReadResource("google-native:clouddeploy/v1:CustomTargetType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomTargetType resources.
type customTargetTypeState struct {
}

type CustomTargetTypeState struct {
}

func (CustomTargetTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*customTargetTypeState)(nil)).Elem()
}

type customTargetTypeArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations map[string]string `pulumi:"annotations"`
	// Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
	CustomActions *CustomTargetSkaffoldActions `pulumi:"customActions"`
	// Required. ID of the `CustomTargetType`.
	CustomTargetTypeId string `pulumi:"customTargetTypeId"`
	// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
	Description *string `pulumi:"description"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a CustomTargetType resource.
type CustomTargetTypeArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations pulumi.StringMapInput
	// Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
	CustomActions CustomTargetSkaffoldActionsPtrInput
	// Required. ID of the `CustomTargetType`.
	CustomTargetTypeId pulumi.StringInput
	// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
	Description pulumi.StringPtrInput
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (CustomTargetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customTargetTypeArgs)(nil)).Elem()
}

type CustomTargetTypeInput interface {
	pulumi.Input

	ToCustomTargetTypeOutput() CustomTargetTypeOutput
	ToCustomTargetTypeOutputWithContext(ctx context.Context) CustomTargetTypeOutput
}

func (*CustomTargetType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTargetType)(nil)).Elem()
}

func (i *CustomTargetType) ToCustomTargetTypeOutput() CustomTargetTypeOutput {
	return i.ToCustomTargetTypeOutputWithContext(context.Background())
}

func (i *CustomTargetType) ToCustomTargetTypeOutputWithContext(ctx context.Context) CustomTargetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomTargetTypeOutput)
}

type CustomTargetTypeOutput struct{ *pulumi.OutputState }

func (CustomTargetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomTargetType)(nil)).Elem()
}

func (o CustomTargetTypeOutput) ToCustomTargetTypeOutput() CustomTargetTypeOutput {
	return o
}

func (o CustomTargetTypeOutput) ToCustomTargetTypeOutputWithContext(ctx context.Context) CustomTargetTypeOutput {
	return o
}

// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
func (o CustomTargetTypeOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Time at which the `CustomTargetType` was created.
func (o CustomTargetTypeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
func (o CustomTargetTypeOutput) CustomActions() CustomTargetSkaffoldActionsResponseOutput {
	return o.ApplyT(func(v *CustomTargetType) CustomTargetSkaffoldActionsResponseOutput { return v.CustomActions }).(CustomTargetSkaffoldActionsResponseOutput)
}

// Required. ID of the `CustomTargetType`.
func (o CustomTargetTypeOutput) CustomTargetTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.CustomTargetTypeId }).(pulumi.StringOutput)
}

// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
func (o CustomTargetTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o CustomTargetTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
func (o CustomTargetTypeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o CustomTargetTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
func (o CustomTargetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CustomTargetTypeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o CustomTargetTypeOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the `CustomTargetType`.
func (o CustomTargetTypeOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Most recent time at which the `CustomTargetType` was updated.
func (o CustomTargetTypeOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomTargetType) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomTargetTypeInput)(nil)).Elem(), &CustomTargetType{})
	pulumi.RegisterOutputType(CustomTargetTypeOutput{})
}
