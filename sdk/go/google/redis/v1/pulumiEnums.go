// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
type InstanceConnectMode pulumi.String

const (
	// Not set.
	InstanceConnectModeConnectModeUnspecified = InstanceConnectMode("CONNECT_MODE_UNSPECIFIED")
	// Connect via direct peering to the Memorystore for Redis hosted service.
	InstanceConnectModeDirectPeering = InstanceConnectMode("DIRECT_PEERING")
	// Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore.
	InstanceConnectModePrivateServiceAccess = InstanceConnectMode("PRIVATE_SERVICE_ACCESS")
)

func (InstanceConnectMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceConnectMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceConnectMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceConnectMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceConnectMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The service tier of the instance.
type InstanceTier pulumi.String

const (
	// Not set.
	InstanceTierTierUnspecified = InstanceTier("TIER_UNSPECIFIED")
	// BASIC tier: standalone instance
	InstanceTierBasic = InstanceTier("BASIC")
	// STANDARD_HA tier: highly available primary/replica instances
	InstanceTierStandardHa = InstanceTier("STANDARD_HA")
)

func (InstanceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
type InstanceTransitEncryptionMode pulumi.String

const (
	// Not set.
	InstanceTransitEncryptionModeTransitEncryptionModeUnspecified = InstanceTransitEncryptionMode("TRANSIT_ENCRYPTION_MODE_UNSPECIFIED")
	// Client to Server traffic encryption enabled with server authentication.
	InstanceTransitEncryptionModeServerAuthentication = InstanceTransitEncryptionMode("SERVER_AUTHENTICATION")
	// TLS is disabled for the instance.
	InstanceTransitEncryptionModeDisabled = InstanceTransitEncryptionMode("DISABLED")
)

func (InstanceTransitEncryptionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceTransitEncryptionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTransitEncryptionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTransitEncryptionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceTransitEncryptionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Required. The day of week that maintenance updates occur.
type WeeklyMaintenanceWindowDay pulumi.String

const (
	// The day of the week is unspecified.
	WeeklyMaintenanceWindowDayDayOfWeekUnspecified = WeeklyMaintenanceWindowDay("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	WeeklyMaintenanceWindowDayMonday = WeeklyMaintenanceWindowDay("MONDAY")
	// Tuesday
	WeeklyMaintenanceWindowDayTuesday = WeeklyMaintenanceWindowDay("TUESDAY")
	// Wednesday
	WeeklyMaintenanceWindowDayWednesday = WeeklyMaintenanceWindowDay("WEDNESDAY")
	// Thursday
	WeeklyMaintenanceWindowDayThursday = WeeklyMaintenanceWindowDay("THURSDAY")
	// Friday
	WeeklyMaintenanceWindowDayFriday = WeeklyMaintenanceWindowDay("FRIDAY")
	// Saturday
	WeeklyMaintenanceWindowDaySaturday = WeeklyMaintenanceWindowDay("SATURDAY")
	// Sunday
	WeeklyMaintenanceWindowDaySunday = WeeklyMaintenanceWindowDay("SUNDAY")
)

func (WeeklyMaintenanceWindowDay) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e WeeklyMaintenanceWindowDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyMaintenanceWindowDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyMaintenanceWindowDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeeklyMaintenanceWindowDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
