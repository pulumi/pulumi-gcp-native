// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
type InstanceConnectMode string

const (
	// Not set.
	InstanceConnectModeConnectModeUnspecified = InstanceConnectMode("CONNECT_MODE_UNSPECIFIED")
	// Connect via direct peering to the Memorystore for Redis hosted service.
	InstanceConnectModeDirectPeering = InstanceConnectMode("DIRECT_PEERING")
	// Connect your Memorystore for Redis instance using Private Service Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore.
	InstanceConnectModePrivateServiceAccess = InstanceConnectMode("PRIVATE_SERVICE_ACCESS")
)

func (InstanceConnectMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectMode)(nil)).Elem()
}

func (e InstanceConnectMode) ToInstanceConnectModeOutput() InstanceConnectModeOutput {
	return pulumi.ToOutput(e).(InstanceConnectModeOutput)
}

func (e InstanceConnectMode) ToInstanceConnectModeOutputWithContext(ctx context.Context) InstanceConnectModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceConnectModeOutput)
}

func (e InstanceConnectMode) ToInstanceConnectModePtrOutput() InstanceConnectModePtrOutput {
	return e.ToInstanceConnectModePtrOutputWithContext(context.Background())
}

func (e InstanceConnectMode) ToInstanceConnectModePtrOutputWithContext(ctx context.Context) InstanceConnectModePtrOutput {
	return InstanceConnectMode(e).ToInstanceConnectModeOutputWithContext(ctx).ToInstanceConnectModePtrOutputWithContext(ctx)
}

func (e InstanceConnectMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceConnectMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceConnectMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceConnectMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceConnectModeOutput struct{ *pulumi.OutputState }

func (InstanceConnectModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectMode)(nil)).Elem()
}

func (o InstanceConnectModeOutput) ToInstanceConnectModeOutput() InstanceConnectModeOutput {
	return o
}

func (o InstanceConnectModeOutput) ToInstanceConnectModeOutputWithContext(ctx context.Context) InstanceConnectModeOutput {
	return o
}

func (o InstanceConnectModeOutput) ToInstanceConnectModePtrOutput() InstanceConnectModePtrOutput {
	return o.ToInstanceConnectModePtrOutputWithContext(context.Background())
}

func (o InstanceConnectModeOutput) ToInstanceConnectModePtrOutputWithContext(ctx context.Context) InstanceConnectModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConnectMode) *InstanceConnectMode {
		return &v
	}).(InstanceConnectModePtrOutput)
}

func (o InstanceConnectModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceConnectModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceConnectMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceConnectModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceConnectModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceConnectMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceConnectModePtrOutput struct{ *pulumi.OutputState }

func (InstanceConnectModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConnectMode)(nil)).Elem()
}

func (o InstanceConnectModePtrOutput) ToInstanceConnectModePtrOutput() InstanceConnectModePtrOutput {
	return o
}

func (o InstanceConnectModePtrOutput) ToInstanceConnectModePtrOutputWithContext(ctx context.Context) InstanceConnectModePtrOutput {
	return o
}

func (o InstanceConnectModePtrOutput) Elem() InstanceConnectModeOutput {
	return o.ApplyT(func(v *InstanceConnectMode) InstanceConnectMode {
		if v != nil {
			return *v
		}
		var ret InstanceConnectMode
		return ret
	}).(InstanceConnectModeOutput)
}

func (o InstanceConnectModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceConnectModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceConnectMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceConnectModeInput is an input type that accepts InstanceConnectModeArgs and InstanceConnectModeOutput values.
// You can construct a concrete instance of `InstanceConnectModeInput` via:
//
//          InstanceConnectModeArgs{...}
type InstanceConnectModeInput interface {
	pulumi.Input

	ToInstanceConnectModeOutput() InstanceConnectModeOutput
	ToInstanceConnectModeOutputWithContext(context.Context) InstanceConnectModeOutput
}

var instanceConnectModePtrType = reflect.TypeOf((**InstanceConnectMode)(nil)).Elem()

type InstanceConnectModePtrInput interface {
	pulumi.Input

	ToInstanceConnectModePtrOutput() InstanceConnectModePtrOutput
	ToInstanceConnectModePtrOutputWithContext(context.Context) InstanceConnectModePtrOutput
}

type instanceConnectModePtr string

func InstanceConnectModePtr(v string) InstanceConnectModePtrInput {
	return (*instanceConnectModePtr)(&v)
}

func (*instanceConnectModePtr) ElementType() reflect.Type {
	return instanceConnectModePtrType
}

func (in *instanceConnectModePtr) ToInstanceConnectModePtrOutput() InstanceConnectModePtrOutput {
	return pulumi.ToOutput(in).(InstanceConnectModePtrOutput)
}

func (in *instanceConnectModePtr) ToInstanceConnectModePtrOutputWithContext(ctx context.Context) InstanceConnectModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceConnectModePtrOutput)
}

// Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
type InstanceReadReplicasMode string

const (
	// If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.
	InstanceReadReplicasModeReadReplicasModeUnspecified = InstanceReadReplicasMode("READ_REPLICAS_MODE_UNSPECIFIED")
	// If disabled, read endpoint will not be provided and the instance cannot scale up or down the number of replicas.
	InstanceReadReplicasModeReadReplicasDisabled = InstanceReadReplicasMode("READ_REPLICAS_DISABLED")
	// If enabled, read endpoint will be provided and the instance can scale up and down the number of replicas. Not valid for basic tier.
	InstanceReadReplicasModeReadReplicasEnabled = InstanceReadReplicasMode("READ_REPLICAS_ENABLED")
)

func (InstanceReadReplicasMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadReplicasMode)(nil)).Elem()
}

func (e InstanceReadReplicasMode) ToInstanceReadReplicasModeOutput() InstanceReadReplicasModeOutput {
	return pulumi.ToOutput(e).(InstanceReadReplicasModeOutput)
}

func (e InstanceReadReplicasMode) ToInstanceReadReplicasModeOutputWithContext(ctx context.Context) InstanceReadReplicasModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceReadReplicasModeOutput)
}

func (e InstanceReadReplicasMode) ToInstanceReadReplicasModePtrOutput() InstanceReadReplicasModePtrOutput {
	return e.ToInstanceReadReplicasModePtrOutputWithContext(context.Background())
}

func (e InstanceReadReplicasMode) ToInstanceReadReplicasModePtrOutputWithContext(ctx context.Context) InstanceReadReplicasModePtrOutput {
	return InstanceReadReplicasMode(e).ToInstanceReadReplicasModeOutputWithContext(ctx).ToInstanceReadReplicasModePtrOutputWithContext(ctx)
}

func (e InstanceReadReplicasMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceReadReplicasMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceReadReplicasMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceReadReplicasMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceReadReplicasModeOutput struct{ *pulumi.OutputState }

func (InstanceReadReplicasModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceReadReplicasMode)(nil)).Elem()
}

func (o InstanceReadReplicasModeOutput) ToInstanceReadReplicasModeOutput() InstanceReadReplicasModeOutput {
	return o
}

func (o InstanceReadReplicasModeOutput) ToInstanceReadReplicasModeOutputWithContext(ctx context.Context) InstanceReadReplicasModeOutput {
	return o
}

func (o InstanceReadReplicasModeOutput) ToInstanceReadReplicasModePtrOutput() InstanceReadReplicasModePtrOutput {
	return o.ToInstanceReadReplicasModePtrOutputWithContext(context.Background())
}

func (o InstanceReadReplicasModeOutput) ToInstanceReadReplicasModePtrOutputWithContext(ctx context.Context) InstanceReadReplicasModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceReadReplicasMode) *InstanceReadReplicasMode {
		return &v
	}).(InstanceReadReplicasModePtrOutput)
}

func (o InstanceReadReplicasModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceReadReplicasModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceReadReplicasMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceReadReplicasModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceReadReplicasModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceReadReplicasMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceReadReplicasModePtrOutput struct{ *pulumi.OutputState }

func (InstanceReadReplicasModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceReadReplicasMode)(nil)).Elem()
}

func (o InstanceReadReplicasModePtrOutput) ToInstanceReadReplicasModePtrOutput() InstanceReadReplicasModePtrOutput {
	return o
}

func (o InstanceReadReplicasModePtrOutput) ToInstanceReadReplicasModePtrOutputWithContext(ctx context.Context) InstanceReadReplicasModePtrOutput {
	return o
}

func (o InstanceReadReplicasModePtrOutput) Elem() InstanceReadReplicasModeOutput {
	return o.ApplyT(func(v *InstanceReadReplicasMode) InstanceReadReplicasMode {
		if v != nil {
			return *v
		}
		var ret InstanceReadReplicasMode
		return ret
	}).(InstanceReadReplicasModeOutput)
}

func (o InstanceReadReplicasModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceReadReplicasModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceReadReplicasMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceReadReplicasModeInput is an input type that accepts InstanceReadReplicasModeArgs and InstanceReadReplicasModeOutput values.
// You can construct a concrete instance of `InstanceReadReplicasModeInput` via:
//
//          InstanceReadReplicasModeArgs{...}
type InstanceReadReplicasModeInput interface {
	pulumi.Input

	ToInstanceReadReplicasModeOutput() InstanceReadReplicasModeOutput
	ToInstanceReadReplicasModeOutputWithContext(context.Context) InstanceReadReplicasModeOutput
}

var instanceReadReplicasModePtrType = reflect.TypeOf((**InstanceReadReplicasMode)(nil)).Elem()

type InstanceReadReplicasModePtrInput interface {
	pulumi.Input

	ToInstanceReadReplicasModePtrOutput() InstanceReadReplicasModePtrOutput
	ToInstanceReadReplicasModePtrOutputWithContext(context.Context) InstanceReadReplicasModePtrOutput
}

type instanceReadReplicasModePtr string

func InstanceReadReplicasModePtr(v string) InstanceReadReplicasModePtrInput {
	return (*instanceReadReplicasModePtr)(&v)
}

func (*instanceReadReplicasModePtr) ElementType() reflect.Type {
	return instanceReadReplicasModePtrType
}

func (in *instanceReadReplicasModePtr) ToInstanceReadReplicasModePtrOutput() InstanceReadReplicasModePtrOutput {
	return pulumi.ToOutput(in).(InstanceReadReplicasModePtrOutput)
}

func (in *instanceReadReplicasModePtr) ToInstanceReadReplicasModePtrOutputWithContext(ctx context.Context) InstanceReadReplicasModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceReadReplicasModePtrOutput)
}

// Required. The service tier of the instance.
type InstanceTier string

const (
	// Not set.
	InstanceTierTierUnspecified = InstanceTier("TIER_UNSPECIFIED")
	// BASIC tier: standalone instance
	InstanceTierBasic = InstanceTier("BASIC")
	// STANDARD_HA tier: highly available primary/replica instances
	InstanceTierStandardHa = InstanceTier("STANDARD_HA")
)

func (InstanceTier) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTier)(nil)).Elem()
}

func (e InstanceTier) ToInstanceTierOutput() InstanceTierOutput {
	return pulumi.ToOutput(e).(InstanceTierOutput)
}

func (e InstanceTier) ToInstanceTierOutputWithContext(ctx context.Context) InstanceTierOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceTierOutput)
}

func (e InstanceTier) ToInstanceTierPtrOutput() InstanceTierPtrOutput {
	return e.ToInstanceTierPtrOutputWithContext(context.Background())
}

func (e InstanceTier) ToInstanceTierPtrOutputWithContext(ctx context.Context) InstanceTierPtrOutput {
	return InstanceTier(e).ToInstanceTierOutputWithContext(ctx).ToInstanceTierPtrOutputWithContext(ctx)
}

func (e InstanceTier) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTier) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTier) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceTier) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceTierOutput struct{ *pulumi.OutputState }

func (InstanceTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTier)(nil)).Elem()
}

func (o InstanceTierOutput) ToInstanceTierOutput() InstanceTierOutput {
	return o
}

func (o InstanceTierOutput) ToInstanceTierOutputWithContext(ctx context.Context) InstanceTierOutput {
	return o
}

func (o InstanceTierOutput) ToInstanceTierPtrOutput() InstanceTierPtrOutput {
	return o.ToInstanceTierPtrOutputWithContext(context.Background())
}

func (o InstanceTierOutput) ToInstanceTierPtrOutputWithContext(ctx context.Context) InstanceTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceTier) *InstanceTier {
		return &v
	}).(InstanceTierPtrOutput)
}

func (o InstanceTierOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceTierOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceTier) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceTierOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceTierOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceTier) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceTierPtrOutput struct{ *pulumi.OutputState }

func (InstanceTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTier)(nil)).Elem()
}

func (o InstanceTierPtrOutput) ToInstanceTierPtrOutput() InstanceTierPtrOutput {
	return o
}

func (o InstanceTierPtrOutput) ToInstanceTierPtrOutputWithContext(ctx context.Context) InstanceTierPtrOutput {
	return o
}

func (o InstanceTierPtrOutput) Elem() InstanceTierOutput {
	return o.ApplyT(func(v *InstanceTier) InstanceTier {
		if v != nil {
			return *v
		}
		var ret InstanceTier
		return ret
	}).(InstanceTierOutput)
}

func (o InstanceTierPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceTierPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceTier) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceTierInput is an input type that accepts InstanceTierArgs and InstanceTierOutput values.
// You can construct a concrete instance of `InstanceTierInput` via:
//
//          InstanceTierArgs{...}
type InstanceTierInput interface {
	pulumi.Input

	ToInstanceTierOutput() InstanceTierOutput
	ToInstanceTierOutputWithContext(context.Context) InstanceTierOutput
}

var instanceTierPtrType = reflect.TypeOf((**InstanceTier)(nil)).Elem()

type InstanceTierPtrInput interface {
	pulumi.Input

	ToInstanceTierPtrOutput() InstanceTierPtrOutput
	ToInstanceTierPtrOutputWithContext(context.Context) InstanceTierPtrOutput
}

type instanceTierPtr string

func InstanceTierPtr(v string) InstanceTierPtrInput {
	return (*instanceTierPtr)(&v)
}

func (*instanceTierPtr) ElementType() reflect.Type {
	return instanceTierPtrType
}

func (in *instanceTierPtr) ToInstanceTierPtrOutput() InstanceTierPtrOutput {
	return pulumi.ToOutput(in).(InstanceTierPtrOutput)
}

func (in *instanceTierPtr) ToInstanceTierPtrOutputWithContext(ctx context.Context) InstanceTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceTierPtrOutput)
}

// Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
type InstanceTransitEncryptionMode string

const (
	// Not set.
	InstanceTransitEncryptionModeTransitEncryptionModeUnspecified = InstanceTransitEncryptionMode("TRANSIT_ENCRYPTION_MODE_UNSPECIFIED")
	// Client to Server traffic encryption enabled with server authentication.
	InstanceTransitEncryptionModeServerAuthentication = InstanceTransitEncryptionMode("SERVER_AUTHENTICATION")
	// TLS is disabled for the instance.
	InstanceTransitEncryptionModeDisabled = InstanceTransitEncryptionMode("DISABLED")
)

func (InstanceTransitEncryptionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTransitEncryptionMode)(nil)).Elem()
}

func (e InstanceTransitEncryptionMode) ToInstanceTransitEncryptionModeOutput() InstanceTransitEncryptionModeOutput {
	return pulumi.ToOutput(e).(InstanceTransitEncryptionModeOutput)
}

func (e InstanceTransitEncryptionMode) ToInstanceTransitEncryptionModeOutputWithContext(ctx context.Context) InstanceTransitEncryptionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceTransitEncryptionModeOutput)
}

func (e InstanceTransitEncryptionMode) ToInstanceTransitEncryptionModePtrOutput() InstanceTransitEncryptionModePtrOutput {
	return e.ToInstanceTransitEncryptionModePtrOutputWithContext(context.Background())
}

func (e InstanceTransitEncryptionMode) ToInstanceTransitEncryptionModePtrOutputWithContext(ctx context.Context) InstanceTransitEncryptionModePtrOutput {
	return InstanceTransitEncryptionMode(e).ToInstanceTransitEncryptionModeOutputWithContext(ctx).ToInstanceTransitEncryptionModePtrOutputWithContext(ctx)
}

func (e InstanceTransitEncryptionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTransitEncryptionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceTransitEncryptionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceTransitEncryptionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceTransitEncryptionModeOutput struct{ *pulumi.OutputState }

func (InstanceTransitEncryptionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTransitEncryptionMode)(nil)).Elem()
}

func (o InstanceTransitEncryptionModeOutput) ToInstanceTransitEncryptionModeOutput() InstanceTransitEncryptionModeOutput {
	return o
}

func (o InstanceTransitEncryptionModeOutput) ToInstanceTransitEncryptionModeOutputWithContext(ctx context.Context) InstanceTransitEncryptionModeOutput {
	return o
}

func (o InstanceTransitEncryptionModeOutput) ToInstanceTransitEncryptionModePtrOutput() InstanceTransitEncryptionModePtrOutput {
	return o.ToInstanceTransitEncryptionModePtrOutputWithContext(context.Background())
}

func (o InstanceTransitEncryptionModeOutput) ToInstanceTransitEncryptionModePtrOutputWithContext(ctx context.Context) InstanceTransitEncryptionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceTransitEncryptionMode) *InstanceTransitEncryptionMode {
		return &v
	}).(InstanceTransitEncryptionModePtrOutput)
}

func (o InstanceTransitEncryptionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceTransitEncryptionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceTransitEncryptionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceTransitEncryptionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceTransitEncryptionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceTransitEncryptionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceTransitEncryptionModePtrOutput struct{ *pulumi.OutputState }

func (InstanceTransitEncryptionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTransitEncryptionMode)(nil)).Elem()
}

func (o InstanceTransitEncryptionModePtrOutput) ToInstanceTransitEncryptionModePtrOutput() InstanceTransitEncryptionModePtrOutput {
	return o
}

func (o InstanceTransitEncryptionModePtrOutput) ToInstanceTransitEncryptionModePtrOutputWithContext(ctx context.Context) InstanceTransitEncryptionModePtrOutput {
	return o
}

func (o InstanceTransitEncryptionModePtrOutput) Elem() InstanceTransitEncryptionModeOutput {
	return o.ApplyT(func(v *InstanceTransitEncryptionMode) InstanceTransitEncryptionMode {
		if v != nil {
			return *v
		}
		var ret InstanceTransitEncryptionMode
		return ret
	}).(InstanceTransitEncryptionModeOutput)
}

func (o InstanceTransitEncryptionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceTransitEncryptionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceTransitEncryptionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceTransitEncryptionModeInput is an input type that accepts InstanceTransitEncryptionModeArgs and InstanceTransitEncryptionModeOutput values.
// You can construct a concrete instance of `InstanceTransitEncryptionModeInput` via:
//
//          InstanceTransitEncryptionModeArgs{...}
type InstanceTransitEncryptionModeInput interface {
	pulumi.Input

	ToInstanceTransitEncryptionModeOutput() InstanceTransitEncryptionModeOutput
	ToInstanceTransitEncryptionModeOutputWithContext(context.Context) InstanceTransitEncryptionModeOutput
}

var instanceTransitEncryptionModePtrType = reflect.TypeOf((**InstanceTransitEncryptionMode)(nil)).Elem()

type InstanceTransitEncryptionModePtrInput interface {
	pulumi.Input

	ToInstanceTransitEncryptionModePtrOutput() InstanceTransitEncryptionModePtrOutput
	ToInstanceTransitEncryptionModePtrOutputWithContext(context.Context) InstanceTransitEncryptionModePtrOutput
}

type instanceTransitEncryptionModePtr string

func InstanceTransitEncryptionModePtr(v string) InstanceTransitEncryptionModePtrInput {
	return (*instanceTransitEncryptionModePtr)(&v)
}

func (*instanceTransitEncryptionModePtr) ElementType() reflect.Type {
	return instanceTransitEncryptionModePtrType
}

func (in *instanceTransitEncryptionModePtr) ToInstanceTransitEncryptionModePtrOutput() InstanceTransitEncryptionModePtrOutput {
	return pulumi.ToOutput(in).(InstanceTransitEncryptionModePtrOutput)
}

func (in *instanceTransitEncryptionModePtr) ToInstanceTransitEncryptionModePtrOutputWithContext(ctx context.Context) InstanceTransitEncryptionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceTransitEncryptionModePtrOutput)
}

// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
type PersistenceConfigPersistenceMode string

const (
	// Not set.
	PersistenceConfigPersistenceModePersistenceModeUnspecified = PersistenceConfigPersistenceMode("PERSISTENCE_MODE_UNSPECIFIED")
	// Persistence is disabled for the instance, and any existing snapshots are deleted.
	PersistenceConfigPersistenceModeDisabled = PersistenceConfigPersistenceMode("DISABLED")
	// RDB based Persistence is enabled.
	PersistenceConfigPersistenceModeRdb = PersistenceConfigPersistenceMode("RDB")
)

func (PersistenceConfigPersistenceMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistenceConfigPersistenceMode)(nil)).Elem()
}

func (e PersistenceConfigPersistenceMode) ToPersistenceConfigPersistenceModeOutput() PersistenceConfigPersistenceModeOutput {
	return pulumi.ToOutput(e).(PersistenceConfigPersistenceModeOutput)
}

func (e PersistenceConfigPersistenceMode) ToPersistenceConfigPersistenceModeOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PersistenceConfigPersistenceModeOutput)
}

func (e PersistenceConfigPersistenceMode) ToPersistenceConfigPersistenceModePtrOutput() PersistenceConfigPersistenceModePtrOutput {
	return e.ToPersistenceConfigPersistenceModePtrOutputWithContext(context.Background())
}

func (e PersistenceConfigPersistenceMode) ToPersistenceConfigPersistenceModePtrOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModePtrOutput {
	return PersistenceConfigPersistenceMode(e).ToPersistenceConfigPersistenceModeOutputWithContext(ctx).ToPersistenceConfigPersistenceModePtrOutputWithContext(ctx)
}

func (e PersistenceConfigPersistenceMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistenceConfigPersistenceMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistenceConfigPersistenceMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PersistenceConfigPersistenceMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PersistenceConfigPersistenceModeOutput struct{ *pulumi.OutputState }

func (PersistenceConfigPersistenceModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistenceConfigPersistenceMode)(nil)).Elem()
}

func (o PersistenceConfigPersistenceModeOutput) ToPersistenceConfigPersistenceModeOutput() PersistenceConfigPersistenceModeOutput {
	return o
}

func (o PersistenceConfigPersistenceModeOutput) ToPersistenceConfigPersistenceModeOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModeOutput {
	return o
}

func (o PersistenceConfigPersistenceModeOutput) ToPersistenceConfigPersistenceModePtrOutput() PersistenceConfigPersistenceModePtrOutput {
	return o.ToPersistenceConfigPersistenceModePtrOutputWithContext(context.Background())
}

func (o PersistenceConfigPersistenceModeOutput) ToPersistenceConfigPersistenceModePtrOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersistenceConfigPersistenceMode) *PersistenceConfigPersistenceMode {
		return &v
	}).(PersistenceConfigPersistenceModePtrOutput)
}

func (o PersistenceConfigPersistenceModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PersistenceConfigPersistenceModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistenceConfigPersistenceMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PersistenceConfigPersistenceModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistenceConfigPersistenceModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistenceConfigPersistenceMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PersistenceConfigPersistenceModePtrOutput struct{ *pulumi.OutputState }

func (PersistenceConfigPersistenceModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistenceConfigPersistenceMode)(nil)).Elem()
}

func (o PersistenceConfigPersistenceModePtrOutput) ToPersistenceConfigPersistenceModePtrOutput() PersistenceConfigPersistenceModePtrOutput {
	return o
}

func (o PersistenceConfigPersistenceModePtrOutput) ToPersistenceConfigPersistenceModePtrOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModePtrOutput {
	return o
}

func (o PersistenceConfigPersistenceModePtrOutput) Elem() PersistenceConfigPersistenceModeOutput {
	return o.ApplyT(func(v *PersistenceConfigPersistenceMode) PersistenceConfigPersistenceMode {
		if v != nil {
			return *v
		}
		var ret PersistenceConfigPersistenceMode
		return ret
	}).(PersistenceConfigPersistenceModeOutput)
}

func (o PersistenceConfigPersistenceModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistenceConfigPersistenceModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PersistenceConfigPersistenceMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PersistenceConfigPersistenceModeInput is an input type that accepts PersistenceConfigPersistenceModeArgs and PersistenceConfigPersistenceModeOutput values.
// You can construct a concrete instance of `PersistenceConfigPersistenceModeInput` via:
//
//          PersistenceConfigPersistenceModeArgs{...}
type PersistenceConfigPersistenceModeInput interface {
	pulumi.Input

	ToPersistenceConfigPersistenceModeOutput() PersistenceConfigPersistenceModeOutput
	ToPersistenceConfigPersistenceModeOutputWithContext(context.Context) PersistenceConfigPersistenceModeOutput
}

var persistenceConfigPersistenceModePtrType = reflect.TypeOf((**PersistenceConfigPersistenceMode)(nil)).Elem()

type PersistenceConfigPersistenceModePtrInput interface {
	pulumi.Input

	ToPersistenceConfigPersistenceModePtrOutput() PersistenceConfigPersistenceModePtrOutput
	ToPersistenceConfigPersistenceModePtrOutputWithContext(context.Context) PersistenceConfigPersistenceModePtrOutput
}

type persistenceConfigPersistenceModePtr string

func PersistenceConfigPersistenceModePtr(v string) PersistenceConfigPersistenceModePtrInput {
	return (*persistenceConfigPersistenceModePtr)(&v)
}

func (*persistenceConfigPersistenceModePtr) ElementType() reflect.Type {
	return persistenceConfigPersistenceModePtrType
}

func (in *persistenceConfigPersistenceModePtr) ToPersistenceConfigPersistenceModePtrOutput() PersistenceConfigPersistenceModePtrOutput {
	return pulumi.ToOutput(in).(PersistenceConfigPersistenceModePtrOutput)
}

func (in *persistenceConfigPersistenceModePtr) ToPersistenceConfigPersistenceModePtrOutputWithContext(ctx context.Context) PersistenceConfigPersistenceModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PersistenceConfigPersistenceModePtrOutput)
}

// Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
type PersistenceConfigRdbSnapshotPeriod string

const (
	// Not set.
	PersistenceConfigRdbSnapshotPeriodSnapshotPeriodUnspecified = PersistenceConfigRdbSnapshotPeriod("SNAPSHOT_PERIOD_UNSPECIFIED")
	// Snapshot every 1 hour.
	PersistenceConfigRdbSnapshotPeriodOneHour = PersistenceConfigRdbSnapshotPeriod("ONE_HOUR")
	// Snapshot every 6 hours.
	PersistenceConfigRdbSnapshotPeriodSixHours = PersistenceConfigRdbSnapshotPeriod("SIX_HOURS")
	// Snapshot every 12 hours.
	PersistenceConfigRdbSnapshotPeriodTwelveHours = PersistenceConfigRdbSnapshotPeriod("TWELVE_HOURS")
	// Snapshot every 24 horus.
	PersistenceConfigRdbSnapshotPeriodTwentyFourHours = PersistenceConfigRdbSnapshotPeriod("TWENTY_FOUR_HOURS")
)

func (PersistenceConfigRdbSnapshotPeriod) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistenceConfigRdbSnapshotPeriod)(nil)).Elem()
}

func (e PersistenceConfigRdbSnapshotPeriod) ToPersistenceConfigRdbSnapshotPeriodOutput() PersistenceConfigRdbSnapshotPeriodOutput {
	return pulumi.ToOutput(e).(PersistenceConfigRdbSnapshotPeriodOutput)
}

func (e PersistenceConfigRdbSnapshotPeriod) ToPersistenceConfigRdbSnapshotPeriodOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PersistenceConfigRdbSnapshotPeriodOutput)
}

func (e PersistenceConfigRdbSnapshotPeriod) ToPersistenceConfigRdbSnapshotPeriodPtrOutput() PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return e.ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(context.Background())
}

func (e PersistenceConfigRdbSnapshotPeriod) ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return PersistenceConfigRdbSnapshotPeriod(e).ToPersistenceConfigRdbSnapshotPeriodOutputWithContext(ctx).ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(ctx)
}

func (e PersistenceConfigRdbSnapshotPeriod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistenceConfigRdbSnapshotPeriod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PersistenceConfigRdbSnapshotPeriod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PersistenceConfigRdbSnapshotPeriod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PersistenceConfigRdbSnapshotPeriodOutput struct{ *pulumi.OutputState }

func (PersistenceConfigRdbSnapshotPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistenceConfigRdbSnapshotPeriod)(nil)).Elem()
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToPersistenceConfigRdbSnapshotPeriodOutput() PersistenceConfigRdbSnapshotPeriodOutput {
	return o
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToPersistenceConfigRdbSnapshotPeriodOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodOutput {
	return o
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToPersistenceConfigRdbSnapshotPeriodPtrOutput() PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return o.ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(context.Background())
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PersistenceConfigRdbSnapshotPeriod) *PersistenceConfigRdbSnapshotPeriod {
		return &v
	}).(PersistenceConfigRdbSnapshotPeriodPtrOutput)
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistenceConfigRdbSnapshotPeriod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistenceConfigRdbSnapshotPeriodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PersistenceConfigRdbSnapshotPeriod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PersistenceConfigRdbSnapshotPeriodPtrOutput struct{ *pulumi.OutputState }

func (PersistenceConfigRdbSnapshotPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistenceConfigRdbSnapshotPeriod)(nil)).Elem()
}

func (o PersistenceConfigRdbSnapshotPeriodPtrOutput) ToPersistenceConfigRdbSnapshotPeriodPtrOutput() PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return o
}

func (o PersistenceConfigRdbSnapshotPeriodPtrOutput) ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return o
}

func (o PersistenceConfigRdbSnapshotPeriodPtrOutput) Elem() PersistenceConfigRdbSnapshotPeriodOutput {
	return o.ApplyT(func(v *PersistenceConfigRdbSnapshotPeriod) PersistenceConfigRdbSnapshotPeriod {
		if v != nil {
			return *v
		}
		var ret PersistenceConfigRdbSnapshotPeriod
		return ret
	}).(PersistenceConfigRdbSnapshotPeriodOutput)
}

func (o PersistenceConfigRdbSnapshotPeriodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PersistenceConfigRdbSnapshotPeriodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PersistenceConfigRdbSnapshotPeriod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PersistenceConfigRdbSnapshotPeriodInput is an input type that accepts PersistenceConfigRdbSnapshotPeriodArgs and PersistenceConfigRdbSnapshotPeriodOutput values.
// You can construct a concrete instance of `PersistenceConfigRdbSnapshotPeriodInput` via:
//
//          PersistenceConfigRdbSnapshotPeriodArgs{...}
type PersistenceConfigRdbSnapshotPeriodInput interface {
	pulumi.Input

	ToPersistenceConfigRdbSnapshotPeriodOutput() PersistenceConfigRdbSnapshotPeriodOutput
	ToPersistenceConfigRdbSnapshotPeriodOutputWithContext(context.Context) PersistenceConfigRdbSnapshotPeriodOutput
}

var persistenceConfigRdbSnapshotPeriodPtrType = reflect.TypeOf((**PersistenceConfigRdbSnapshotPeriod)(nil)).Elem()

type PersistenceConfigRdbSnapshotPeriodPtrInput interface {
	pulumi.Input

	ToPersistenceConfigRdbSnapshotPeriodPtrOutput() PersistenceConfigRdbSnapshotPeriodPtrOutput
	ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(context.Context) PersistenceConfigRdbSnapshotPeriodPtrOutput
}

type persistenceConfigRdbSnapshotPeriodPtr string

func PersistenceConfigRdbSnapshotPeriodPtr(v string) PersistenceConfigRdbSnapshotPeriodPtrInput {
	return (*persistenceConfigRdbSnapshotPeriodPtr)(&v)
}

func (*persistenceConfigRdbSnapshotPeriodPtr) ElementType() reflect.Type {
	return persistenceConfigRdbSnapshotPeriodPtrType
}

func (in *persistenceConfigRdbSnapshotPeriodPtr) ToPersistenceConfigRdbSnapshotPeriodPtrOutput() PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return pulumi.ToOutput(in).(PersistenceConfigRdbSnapshotPeriodPtrOutput)
}

func (in *persistenceConfigRdbSnapshotPeriodPtr) ToPersistenceConfigRdbSnapshotPeriodPtrOutputWithContext(ctx context.Context) PersistenceConfigRdbSnapshotPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PersistenceConfigRdbSnapshotPeriodPtrOutput)
}

// Required. The day of week that maintenance updates occur.
type WeeklyMaintenanceWindowDay string

const (
	// The day of the week is unspecified.
	WeeklyMaintenanceWindowDayDayOfWeekUnspecified = WeeklyMaintenanceWindowDay("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	WeeklyMaintenanceWindowDayMonday = WeeklyMaintenanceWindowDay("MONDAY")
	// Tuesday
	WeeklyMaintenanceWindowDayTuesday = WeeklyMaintenanceWindowDay("TUESDAY")
	// Wednesday
	WeeklyMaintenanceWindowDayWednesday = WeeklyMaintenanceWindowDay("WEDNESDAY")
	// Thursday
	WeeklyMaintenanceWindowDayThursday = WeeklyMaintenanceWindowDay("THURSDAY")
	// Friday
	WeeklyMaintenanceWindowDayFriday = WeeklyMaintenanceWindowDay("FRIDAY")
	// Saturday
	WeeklyMaintenanceWindowDaySaturday = WeeklyMaintenanceWindowDay("SATURDAY")
	// Sunday
	WeeklyMaintenanceWindowDaySunday = WeeklyMaintenanceWindowDay("SUNDAY")
)

func (WeeklyMaintenanceWindowDay) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyMaintenanceWindowDay)(nil)).Elem()
}

func (e WeeklyMaintenanceWindowDay) ToWeeklyMaintenanceWindowDayOutput() WeeklyMaintenanceWindowDayOutput {
	return pulumi.ToOutput(e).(WeeklyMaintenanceWindowDayOutput)
}

func (e WeeklyMaintenanceWindowDay) ToWeeklyMaintenanceWindowDayOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeeklyMaintenanceWindowDayOutput)
}

func (e WeeklyMaintenanceWindowDay) ToWeeklyMaintenanceWindowDayPtrOutput() WeeklyMaintenanceWindowDayPtrOutput {
	return e.ToWeeklyMaintenanceWindowDayPtrOutputWithContext(context.Background())
}

func (e WeeklyMaintenanceWindowDay) ToWeeklyMaintenanceWindowDayPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayPtrOutput {
	return WeeklyMaintenanceWindowDay(e).ToWeeklyMaintenanceWindowDayOutputWithContext(ctx).ToWeeklyMaintenanceWindowDayPtrOutputWithContext(ctx)
}

func (e WeeklyMaintenanceWindowDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyMaintenanceWindowDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyMaintenanceWindowDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeeklyMaintenanceWindowDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeeklyMaintenanceWindowDayOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceWindowDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyMaintenanceWindowDay)(nil)).Elem()
}

func (o WeeklyMaintenanceWindowDayOutput) ToWeeklyMaintenanceWindowDayOutput() WeeklyMaintenanceWindowDayOutput {
	return o
}

func (o WeeklyMaintenanceWindowDayOutput) ToWeeklyMaintenanceWindowDayOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayOutput {
	return o
}

func (o WeeklyMaintenanceWindowDayOutput) ToWeeklyMaintenanceWindowDayPtrOutput() WeeklyMaintenanceWindowDayPtrOutput {
	return o.ToWeeklyMaintenanceWindowDayPtrOutputWithContext(context.Background())
}

func (o WeeklyMaintenanceWindowDayOutput) ToWeeklyMaintenanceWindowDayPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyMaintenanceWindowDay) *WeeklyMaintenanceWindowDay {
		return &v
	}).(WeeklyMaintenanceWindowDayPtrOutput)
}

func (o WeeklyMaintenanceWindowDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeeklyMaintenanceWindowDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeeklyMaintenanceWindowDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeeklyMaintenanceWindowDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeeklyMaintenanceWindowDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeeklyMaintenanceWindowDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeeklyMaintenanceWindowDayPtrOutput struct{ *pulumi.OutputState }

func (WeeklyMaintenanceWindowDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyMaintenanceWindowDay)(nil)).Elem()
}

func (o WeeklyMaintenanceWindowDayPtrOutput) ToWeeklyMaintenanceWindowDayPtrOutput() WeeklyMaintenanceWindowDayPtrOutput {
	return o
}

func (o WeeklyMaintenanceWindowDayPtrOutput) ToWeeklyMaintenanceWindowDayPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayPtrOutput {
	return o
}

func (o WeeklyMaintenanceWindowDayPtrOutput) Elem() WeeklyMaintenanceWindowDayOutput {
	return o.ApplyT(func(v *WeeklyMaintenanceWindowDay) WeeklyMaintenanceWindowDay {
		if v != nil {
			return *v
		}
		var ret WeeklyMaintenanceWindowDay
		return ret
	}).(WeeklyMaintenanceWindowDayOutput)
}

func (o WeeklyMaintenanceWindowDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeeklyMaintenanceWindowDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeeklyMaintenanceWindowDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WeeklyMaintenanceWindowDayInput is an input type that accepts WeeklyMaintenanceWindowDayArgs and WeeklyMaintenanceWindowDayOutput values.
// You can construct a concrete instance of `WeeklyMaintenanceWindowDayInput` via:
//
//          WeeklyMaintenanceWindowDayArgs{...}
type WeeklyMaintenanceWindowDayInput interface {
	pulumi.Input

	ToWeeklyMaintenanceWindowDayOutput() WeeklyMaintenanceWindowDayOutput
	ToWeeklyMaintenanceWindowDayOutputWithContext(context.Context) WeeklyMaintenanceWindowDayOutput
}

var weeklyMaintenanceWindowDayPtrType = reflect.TypeOf((**WeeklyMaintenanceWindowDay)(nil)).Elem()

type WeeklyMaintenanceWindowDayPtrInput interface {
	pulumi.Input

	ToWeeklyMaintenanceWindowDayPtrOutput() WeeklyMaintenanceWindowDayPtrOutput
	ToWeeklyMaintenanceWindowDayPtrOutputWithContext(context.Context) WeeklyMaintenanceWindowDayPtrOutput
}

type weeklyMaintenanceWindowDayPtr string

func WeeklyMaintenanceWindowDayPtr(v string) WeeklyMaintenanceWindowDayPtrInput {
	return (*weeklyMaintenanceWindowDayPtr)(&v)
}

func (*weeklyMaintenanceWindowDayPtr) ElementType() reflect.Type {
	return weeklyMaintenanceWindowDayPtrType
}

func (in *weeklyMaintenanceWindowDayPtr) ToWeeklyMaintenanceWindowDayPtrOutput() WeeklyMaintenanceWindowDayPtrOutput {
	return pulumi.ToOutput(in).(WeeklyMaintenanceWindowDayPtrOutput)
}

func (in *weeklyMaintenanceWindowDayPtr) ToWeeklyMaintenanceWindowDayPtrOutputWithContext(ctx context.Context) WeeklyMaintenanceWindowDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeeklyMaintenanceWindowDayPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectModeInput)(nil)).Elem(), InstanceConnectMode("CONNECT_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectModePtrInput)(nil)).Elem(), InstanceConnectMode("CONNECT_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadReplicasModeInput)(nil)).Elem(), InstanceReadReplicasMode("READ_REPLICAS_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceReadReplicasModePtrInput)(nil)).Elem(), InstanceReadReplicasMode("READ_REPLICAS_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTierInput)(nil)).Elem(), InstanceTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTierPtrInput)(nil)).Elem(), InstanceTier("TIER_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransitEncryptionModeInput)(nil)).Elem(), InstanceTransitEncryptionMode("TRANSIT_ENCRYPTION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransitEncryptionModePtrInput)(nil)).Elem(), InstanceTransitEncryptionMode("TRANSIT_ENCRYPTION_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PersistenceConfigPersistenceModeInput)(nil)).Elem(), PersistenceConfigPersistenceMode("PERSISTENCE_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PersistenceConfigPersistenceModePtrInput)(nil)).Elem(), PersistenceConfigPersistenceMode("PERSISTENCE_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PersistenceConfigRdbSnapshotPeriodInput)(nil)).Elem(), PersistenceConfigRdbSnapshotPeriod("SNAPSHOT_PERIOD_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PersistenceConfigRdbSnapshotPeriodPtrInput)(nil)).Elem(), PersistenceConfigRdbSnapshotPeriod("SNAPSHOT_PERIOD_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WeeklyMaintenanceWindowDayInput)(nil)).Elem(), WeeklyMaintenanceWindowDay("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WeeklyMaintenanceWindowDayPtrInput)(nil)).Elem(), WeeklyMaintenanceWindowDay("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterOutputType(InstanceConnectModeOutput{})
	pulumi.RegisterOutputType(InstanceConnectModePtrOutput{})
	pulumi.RegisterOutputType(InstanceReadReplicasModeOutput{})
	pulumi.RegisterOutputType(InstanceReadReplicasModePtrOutput{})
	pulumi.RegisterOutputType(InstanceTierOutput{})
	pulumi.RegisterOutputType(InstanceTierPtrOutput{})
	pulumi.RegisterOutputType(InstanceTransitEncryptionModeOutput{})
	pulumi.RegisterOutputType(InstanceTransitEncryptionModePtrOutput{})
	pulumi.RegisterOutputType(PersistenceConfigPersistenceModeOutput{})
	pulumi.RegisterOutputType(PersistenceConfigPersistenceModePtrOutput{})
	pulumi.RegisterOutputType(PersistenceConfigRdbSnapshotPeriodOutput{})
	pulumi.RegisterOutputType(PersistenceConfigRdbSnapshotPeriodPtrOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceWindowDayOutput{})
	pulumi.RegisterOutputType(WeeklyMaintenanceWindowDayPtrOutput{})
}
