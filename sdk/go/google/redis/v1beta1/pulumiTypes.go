// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// TlsCertificate Resource
type TlsCertificateResponse struct {
	// PEM representation.
	Cert string `pulumi:"cert"`
	// The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
	CreateTime string `pulumi:"createTime"`
	// The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
	ExpireTime string `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber string `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint string `pulumi:"sha1Fingerprint"`
}

// TlsCertificateResponseInput is an input type that accepts TlsCertificateResponseArgs and TlsCertificateResponseOutput values.
// You can construct a concrete instance of `TlsCertificateResponseInput` via:
//
//          TlsCertificateResponseArgs{...}
type TlsCertificateResponseInput interface {
	pulumi.Input

	ToTlsCertificateResponseOutput() TlsCertificateResponseOutput
	ToTlsCertificateResponseOutputWithContext(context.Context) TlsCertificateResponseOutput
}

// TlsCertificate Resource
type TlsCertificateResponseArgs struct {
	// PEM representation.
	Cert pulumi.StringInput `pulumi:"cert"`
	// The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// Serial number, as extracted from the certificate.
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
	// Sha1 Fingerprint of the certificate.
	Sha1Fingerprint pulumi.StringInput `pulumi:"sha1Fingerprint"`
}

func (TlsCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateResponse)(nil)).Elem()
}

func (i TlsCertificateResponseArgs) ToTlsCertificateResponseOutput() TlsCertificateResponseOutput {
	return i.ToTlsCertificateResponseOutputWithContext(context.Background())
}

func (i TlsCertificateResponseArgs) ToTlsCertificateResponseOutputWithContext(ctx context.Context) TlsCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateResponseOutput)
}

// TlsCertificateResponseArrayInput is an input type that accepts TlsCertificateResponseArray and TlsCertificateResponseArrayOutput values.
// You can construct a concrete instance of `TlsCertificateResponseArrayInput` via:
//
//          TlsCertificateResponseArray{ TlsCertificateResponseArgs{...} }
type TlsCertificateResponseArrayInput interface {
	pulumi.Input

	ToTlsCertificateResponseArrayOutput() TlsCertificateResponseArrayOutput
	ToTlsCertificateResponseArrayOutputWithContext(context.Context) TlsCertificateResponseArrayOutput
}

type TlsCertificateResponseArray []TlsCertificateResponseInput

func (TlsCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TlsCertificateResponse)(nil)).Elem()
}

func (i TlsCertificateResponseArray) ToTlsCertificateResponseArrayOutput() TlsCertificateResponseArrayOutput {
	return i.ToTlsCertificateResponseArrayOutputWithContext(context.Background())
}

func (i TlsCertificateResponseArray) ToTlsCertificateResponseArrayOutputWithContext(ctx context.Context) TlsCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateResponseArrayOutput)
}

// TlsCertificate Resource
type TlsCertificateResponseOutput struct{ *pulumi.OutputState }

func (TlsCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateResponse)(nil)).Elem()
}

func (o TlsCertificateResponseOutput) ToTlsCertificateResponseOutput() TlsCertificateResponseOutput {
	return o
}

func (o TlsCertificateResponseOutput) ToTlsCertificateResponseOutputWithContext(ctx context.Context) TlsCertificateResponseOutput {
	return o
}

// PEM representation.
func (o TlsCertificateResponseOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateResponse) string { return v.Cert }).(pulumi.StringOutput)
}

// The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
func (o TlsCertificateResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2020-05-18T00:00:00.094Z`.
func (o TlsCertificateResponseOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateResponse) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Serial number, as extracted from the certificate.
func (o TlsCertificateResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// Sha1 Fingerprint of the certificate.
func (o TlsCertificateResponseOutput) Sha1Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateResponse) string { return v.Sha1Fingerprint }).(pulumi.StringOutput)
}

type TlsCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (TlsCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TlsCertificateResponse)(nil)).Elem()
}

func (o TlsCertificateResponseArrayOutput) ToTlsCertificateResponseArrayOutput() TlsCertificateResponseArrayOutput {
	return o
}

func (o TlsCertificateResponseArrayOutput) ToTlsCertificateResponseArrayOutputWithContext(ctx context.Context) TlsCertificateResponseArrayOutput {
	return o
}

func (o TlsCertificateResponseArrayOutput) Index(i pulumi.IntInput) TlsCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TlsCertificateResponse {
		return vs[0].([]TlsCertificateResponse)[vs[1].(int)]
	}).(TlsCertificateResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(TlsCertificateResponseOutput{})
	pulumi.RegisterOutputType(TlsCertificateResponseArrayOutput{})
}
