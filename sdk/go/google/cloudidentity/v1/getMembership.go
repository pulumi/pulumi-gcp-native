// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a `Membership`.
func LookupMembership(ctx *pulumi.Context, args *LookupMembershipArgs, opts ...pulumi.InvokeOption) (*LookupMembershipResult, error) {
	var rv LookupMembershipResult
	err := ctx.Invoke("google-native:cloudidentity/v1:getMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMembershipArgs struct {
	GroupId      string `pulumi:"groupId"`
	MembershipId string `pulumi:"membershipId"`
}

type LookupMembershipResult struct {
	// The time when the `Membership` was created.
	CreateTime string `pulumi:"createTime"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.
	Name string `pulumi:"name"`
	// Immutable. The `EntityKey` of the member.
	PreferredMemberKey EntityKeyResponse `pulumi:"preferredMemberKey"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []MembershipRoleResponse `pulumi:"roles"`
	// The type of the membership.
	Type string `pulumi:"type"`
	// The time when the `Membership` was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupMembershipOutput(ctx *pulumi.Context, args LookupMembershipOutputArgs, opts ...pulumi.InvokeOption) LookupMembershipResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMembershipResult, error) {
			args := v.(LookupMembershipArgs)
			r, err := LookupMembership(ctx, &args, opts...)
			var s LookupMembershipResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMembershipResultOutput)
}

type LookupMembershipOutputArgs struct {
	GroupId      pulumi.StringInput `pulumi:"groupId"`
	MembershipId pulumi.StringInput `pulumi:"membershipId"`
}

func (LookupMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipArgs)(nil)).Elem()
}

type LookupMembershipResultOutput struct{ *pulumi.OutputState }

func (LookupMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMembershipResult)(nil)).Elem()
}

func (o LookupMembershipResultOutput) ToLookupMembershipResultOutput() LookupMembershipResultOutput {
	return o
}

func (o LookupMembershipResultOutput) ToLookupMembershipResultOutputWithContext(ctx context.Context) LookupMembershipResultOutput {
	return o
}

// The time when the `Membership` was created.
func (o LookupMembershipResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.
func (o LookupMembershipResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The `EntityKey` of the member.
func (o LookupMembershipResultOutput) PreferredMemberKey() EntityKeyResponseOutput {
	return o.ApplyT(func(v LookupMembershipResult) EntityKeyResponse { return v.PreferredMemberKey }).(EntityKeyResponseOutput)
}

// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
func (o LookupMembershipResultOutput) Roles() MembershipRoleResponseArrayOutput {
	return o.ApplyT(func(v LookupMembershipResult) []MembershipRoleResponse { return v.Roles }).(MembershipRoleResponseArrayOutput)
}

// The type of the membership.
func (o LookupMembershipResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.Type }).(pulumi.StringOutput)
}

// The time when the `Membership` was last updated.
func (o LookupMembershipResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMembershipResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMembershipResultOutput{})
}
