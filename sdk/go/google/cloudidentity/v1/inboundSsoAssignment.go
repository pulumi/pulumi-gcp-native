// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an InboundSsoAssignment for users and devices in a `Customer` under a given `Group` or `OrgUnit`.
// Auto-naming is currently not supported for this resource.
type InboundSsoAssignment struct {
	pulumi.CustomResourceState

	// Immutable. The customer. For example: `customers/C0123abc`.
	Customer pulumi.StringOutput `pulumi:"customer"`
	// [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.
	Name pulumi.StringOutput `pulumi:"name"`
	// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
	Rank pulumi.IntOutput `pulumi:"rank"`
	// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
	SamlSsoInfo SamlSsoInfoResponseOutput `pulumi:"samlSsoInfo"`
	// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
	SignInBehavior SignInBehaviorResponseOutput `pulumi:"signInBehavior"`
	// Inbound SSO behavior.
	SsoMode pulumi.StringOutput `pulumi:"ssoMode"`
	// Immutable. Must be of the form `groups/{group}`.
	TargetGroup pulumi.StringOutput `pulumi:"targetGroup"`
	// Immutable. Must be of the form `orgUnits/{org_unit}`.
	TargetOrgUnit pulumi.StringOutput `pulumi:"targetOrgUnit"`
}

// NewInboundSsoAssignment registers a new resource with the given unique name, arguments, and options.
func NewInboundSsoAssignment(ctx *pulumi.Context,
	name string, args *InboundSsoAssignmentArgs, opts ...pulumi.ResourceOption) (*InboundSsoAssignment, error) {
	if args == nil {
		args = &InboundSsoAssignmentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InboundSsoAssignment
	err := ctx.RegisterResource("google-native:cloudidentity/v1:InboundSsoAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInboundSsoAssignment gets an existing InboundSsoAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInboundSsoAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InboundSsoAssignmentState, opts ...pulumi.ResourceOption) (*InboundSsoAssignment, error) {
	var resource InboundSsoAssignment
	err := ctx.ReadResource("google-native:cloudidentity/v1:InboundSsoAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InboundSsoAssignment resources.
type inboundSsoAssignmentState struct {
}

type InboundSsoAssignmentState struct {
}

func (InboundSsoAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*inboundSsoAssignmentState)(nil)).Elem()
}

type inboundSsoAssignmentArgs struct {
	// Immutable. The customer. For example: `customers/C0123abc`.
	Customer *string `pulumi:"customer"`
	// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
	Rank *int `pulumi:"rank"`
	// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
	SamlSsoInfo *SamlSsoInfo `pulumi:"samlSsoInfo"`
	// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
	SignInBehavior *SignInBehavior `pulumi:"signInBehavior"`
	// Inbound SSO behavior.
	SsoMode *InboundSsoAssignmentSsoMode `pulumi:"ssoMode"`
	// Immutable. Must be of the form `groups/{group}`.
	TargetGroup *string `pulumi:"targetGroup"`
	// Immutable. Must be of the form `orgUnits/{org_unit}`.
	TargetOrgUnit *string `pulumi:"targetOrgUnit"`
}

// The set of arguments for constructing a InboundSsoAssignment resource.
type InboundSsoAssignmentArgs struct {
	// Immutable. The customer. For example: `customers/C0123abc`.
	Customer pulumi.StringPtrInput
	// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
	Rank pulumi.IntPtrInput
	// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
	SamlSsoInfo SamlSsoInfoPtrInput
	// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
	SignInBehavior SignInBehaviorPtrInput
	// Inbound SSO behavior.
	SsoMode InboundSsoAssignmentSsoModePtrInput
	// Immutable. Must be of the form `groups/{group}`.
	TargetGroup pulumi.StringPtrInput
	// Immutable. Must be of the form `orgUnits/{org_unit}`.
	TargetOrgUnit pulumi.StringPtrInput
}

func (InboundSsoAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inboundSsoAssignmentArgs)(nil)).Elem()
}

type InboundSsoAssignmentInput interface {
	pulumi.Input

	ToInboundSsoAssignmentOutput() InboundSsoAssignmentOutput
	ToInboundSsoAssignmentOutputWithContext(ctx context.Context) InboundSsoAssignmentOutput
}

func (*InboundSsoAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSsoAssignment)(nil)).Elem()
}

func (i *InboundSsoAssignment) ToInboundSsoAssignmentOutput() InboundSsoAssignmentOutput {
	return i.ToInboundSsoAssignmentOutputWithContext(context.Background())
}

func (i *InboundSsoAssignment) ToInboundSsoAssignmentOutputWithContext(ctx context.Context) InboundSsoAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundSsoAssignmentOutput)
}

func (i *InboundSsoAssignment) ToOutput(ctx context.Context) pulumix.Output[*InboundSsoAssignment] {
	return pulumix.Output[*InboundSsoAssignment]{
		OutputState: i.ToInboundSsoAssignmentOutputWithContext(ctx).OutputState,
	}
}

type InboundSsoAssignmentOutput struct{ *pulumi.OutputState }

func (InboundSsoAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InboundSsoAssignment)(nil)).Elem()
}

func (o InboundSsoAssignmentOutput) ToInboundSsoAssignmentOutput() InboundSsoAssignmentOutput {
	return o
}

func (o InboundSsoAssignmentOutput) ToInboundSsoAssignmentOutputWithContext(ctx context.Context) InboundSsoAssignmentOutput {
	return o
}

func (o InboundSsoAssignmentOutput) ToOutput(ctx context.Context) pulumix.Output[*InboundSsoAssignment] {
	return pulumix.Output[*InboundSsoAssignment]{
		OutputState: o.OutputState,
	}
}

// Immutable. The customer. For example: `customers/C0123abc`.
func (o InboundSsoAssignmentOutput) Customer() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.StringOutput { return v.Customer }).(pulumi.StringOutput)
}

// [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.
func (o InboundSsoAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
func (o InboundSsoAssignmentOutput) Rank() pulumi.IntOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.IntOutput { return v.Rank }).(pulumi.IntOutput)
}

// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
func (o InboundSsoAssignmentOutput) SamlSsoInfo() SamlSsoInfoResponseOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) SamlSsoInfoResponseOutput { return v.SamlSsoInfo }).(SamlSsoInfoResponseOutput)
}

// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
func (o InboundSsoAssignmentOutput) SignInBehavior() SignInBehaviorResponseOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) SignInBehaviorResponseOutput { return v.SignInBehavior }).(SignInBehaviorResponseOutput)
}

// Inbound SSO behavior.
func (o InboundSsoAssignmentOutput) SsoMode() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.StringOutput { return v.SsoMode }).(pulumi.StringOutput)
}

// Immutable. Must be of the form `groups/{group}`.
func (o InboundSsoAssignmentOutput) TargetGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.StringOutput { return v.TargetGroup }).(pulumi.StringOutput)
}

// Immutable. Must be of the form `orgUnits/{org_unit}`.
func (o InboundSsoAssignmentOutput) TargetOrgUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *InboundSsoAssignment) pulumi.StringOutput { return v.TargetOrgUnit }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InboundSsoAssignmentInput)(nil)).Elem(), &InboundSsoAssignment{})
	pulumi.RegisterOutputType(InboundSsoAssignmentOutput{})
}
