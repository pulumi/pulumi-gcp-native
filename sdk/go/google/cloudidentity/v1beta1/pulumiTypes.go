// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Resource representing the Android specific attributes of a Device.
type AndroidAttributesResponse struct {
	// Whether the device passes Android CTS compliance.
	CtsProfileMatch bool `pulumi:"ctsProfileMatch"`
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources bool `pulumi:"enabledUnknownSources"`
	// Whether any potentially harmful apps were detected on the device.
	HasPotentiallyHarmfulApps bool `pulumi:"hasPotentiallyHarmfulApps"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount bool `pulumi:"ownerProfileAccount"`
	// Ownership privileges on device.
	OwnershipPrivilege string `pulumi:"ownershipPrivilege"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile bool `pulumi:"supportsWorkProfile"`
	// Whether Android verified boot status is GREEN.
	VerifiedBoot bool `pulumi:"verifiedBoot"`
	// Whether Google Play Protect Verify Apps is enabled.
	VerifyAppsEnabled bool `pulumi:"verifyAppsEnabled"`
}

// Resource representing the Android specific attributes of a Device.
type AndroidAttributesResponseOutput struct{ *pulumi.OutputState }

func (AndroidAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AndroidAttributesResponse)(nil)).Elem()
}

func (o AndroidAttributesResponseOutput) ToAndroidAttributesResponseOutput() AndroidAttributesResponseOutput {
	return o
}

func (o AndroidAttributesResponseOutput) ToAndroidAttributesResponseOutputWithContext(ctx context.Context) AndroidAttributesResponseOutput {
	return o
}

// Whether the device passes Android CTS compliance.
func (o AndroidAttributesResponseOutput) CtsProfileMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.CtsProfileMatch }).(pulumi.BoolOutput)
}

// Whether applications from unknown sources can be installed on device.
func (o AndroidAttributesResponseOutput) EnabledUnknownSources() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.EnabledUnknownSources }).(pulumi.BoolOutput)
}

// Whether any potentially harmful apps were detected on the device.
func (o AndroidAttributesResponseOutput) HasPotentiallyHarmfulApps() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.HasPotentiallyHarmfulApps }).(pulumi.BoolOutput)
}

// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
func (o AndroidAttributesResponseOutput) OwnerProfileAccount() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.OwnerProfileAccount }).(pulumi.BoolOutput)
}

// Ownership privileges on device.
func (o AndroidAttributesResponseOutput) OwnershipPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) string { return v.OwnershipPrivilege }).(pulumi.StringOutput)
}

// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
func (o AndroidAttributesResponseOutput) SupportsWorkProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.SupportsWorkProfile }).(pulumi.BoolOutput)
}

// Whether Android verified boot status is GREEN.
func (o AndroidAttributesResponseOutput) VerifiedBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.VerifiedBoot }).(pulumi.BoolOutput)
}

// Whether Google Play Protect Verify Apps is enabled.
func (o AndroidAttributesResponseOutput) VerifyAppsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AndroidAttributesResponse) bool { return v.VerifyAppsEnabled }).(pulumi.BoolOutput)
}

// Stores information about a certificate.
type CertificateAttributesResponse struct {
	// The X.509 extension for CertificateTemplate.
	CertificateTemplate CertificateTemplateResponse `pulumi:"certificateTemplate"`
	// The encoded certificate fingerprint.
	Fingerprint string `pulumi:"fingerprint"`
	// The name of the issuer of this certificate.
	Issuer string `pulumi:"issuer"`
	// Serial number of the certificate, Example: "123456789".
	SerialNumber string `pulumi:"serialNumber"`
	// The subject name of this certificate.
	Subject string `pulumi:"subject"`
	// The certificate thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// Validation state of this certificate.
	ValidationState string `pulumi:"validationState"`
	// Certificate not valid at or after this timestamp.
	ValidityExpirationTime string `pulumi:"validityExpirationTime"`
	// Certificate not valid before this timestamp.
	ValidityStartTime string `pulumi:"validityStartTime"`
}

// Stores information about a certificate.
type CertificateAttributesResponseOutput struct{ *pulumi.OutputState }

func (CertificateAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAttributesResponse)(nil)).Elem()
}

func (o CertificateAttributesResponseOutput) ToCertificateAttributesResponseOutput() CertificateAttributesResponseOutput {
	return o
}

func (o CertificateAttributesResponseOutput) ToCertificateAttributesResponseOutputWithContext(ctx context.Context) CertificateAttributesResponseOutput {
	return o
}

// The X.509 extension for CertificateTemplate.
func (o CertificateAttributesResponseOutput) CertificateTemplate() CertificateTemplateResponseOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) CertificateTemplateResponse { return v.CertificateTemplate }).(CertificateTemplateResponseOutput)
}

// The encoded certificate fingerprint.
func (o CertificateAttributesResponseOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The name of the issuer of this certificate.
func (o CertificateAttributesResponseOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.Issuer }).(pulumi.StringOutput)
}

// Serial number of the certificate, Example: "123456789".
func (o CertificateAttributesResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The subject name of this certificate.
func (o CertificateAttributesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The certificate thumbprint.
func (o CertificateAttributesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// Validation state of this certificate.
func (o CertificateAttributesResponseOutput) ValidationState() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.ValidationState }).(pulumi.StringOutput)
}

// Certificate not valid at or after this timestamp.
func (o CertificateAttributesResponseOutput) ValidityExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.ValidityExpirationTime }).(pulumi.StringOutput)
}

// Certificate not valid before this timestamp.
func (o CertificateAttributesResponseOutput) ValidityStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateAttributesResponse) string { return v.ValidityStartTime }).(pulumi.StringOutput)
}

type CertificateAttributesResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateAttributesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateAttributesResponse)(nil)).Elem()
}

func (o CertificateAttributesResponseArrayOutput) ToCertificateAttributesResponseArrayOutput() CertificateAttributesResponseArrayOutput {
	return o
}

func (o CertificateAttributesResponseArrayOutput) ToCertificateAttributesResponseArrayOutputWithContext(ctx context.Context) CertificateAttributesResponseArrayOutput {
	return o
}

func (o CertificateAttributesResponseArrayOutput) Index(i pulumi.IntInput) CertificateAttributesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateAttributesResponse {
		return vs[0].([]CertificateAttributesResponse)[vs[1].(int)]
	}).(CertificateAttributesResponseOutput)
}

// CertificateTemplate (v3 Extension in X.509).
type CertificateTemplateResponse struct {
	// The Major version of the template. Example: 100.
	MajorVersion int `pulumi:"majorVersion"`
	// The minor version of the template. Example: 12.
	MinorVersion int `pulumi:"minorVersion"`
}

// CertificateTemplate (v3 Extension in X.509).
type CertificateTemplateResponseOutput struct{ *pulumi.OutputState }

func (CertificateTemplateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTemplateResponse)(nil)).Elem()
}

func (o CertificateTemplateResponseOutput) ToCertificateTemplateResponseOutput() CertificateTemplateResponseOutput {
	return o
}

func (o CertificateTemplateResponseOutput) ToCertificateTemplateResponseOutputWithContext(ctx context.Context) CertificateTemplateResponseOutput {
	return o
}

// The Major version of the template. Example: 100.
func (o CertificateTemplateResponseOutput) MajorVersion() pulumi.IntOutput {
	return o.ApplyT(func(v CertificateTemplateResponse) int { return v.MajorVersion }).(pulumi.IntOutput)
}

// The minor version of the template. Example: 12.
func (o CertificateTemplateResponseOutput) MinorVersion() pulumi.IntOutput {
	return o.ApplyT(func(v CertificateTemplateResponse) int { return v.MinorVersion }).(pulumi.IntOutput)
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadata struct {
	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
	Queries []DynamicGroupQuery `pulumi:"queries"`
}

// DynamicGroupMetadataInput is an input type that accepts DynamicGroupMetadataArgs and DynamicGroupMetadataOutput values.
// You can construct a concrete instance of `DynamicGroupMetadataInput` via:
//
//	DynamicGroupMetadataArgs{...}
type DynamicGroupMetadataInput interface {
	pulumi.Input

	ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput
	ToDynamicGroupMetadataOutputWithContext(context.Context) DynamicGroupMetadataOutput
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataArgs struct {
	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
	Queries DynamicGroupQueryArrayInput `pulumi:"queries"`
}

func (DynamicGroupMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupMetadata)(nil)).Elem()
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput {
	return i.ToDynamicGroupMetadataOutputWithContext(context.Background())
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataOutputWithContext(ctx context.Context) DynamicGroupMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataOutput)
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return i.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (i DynamicGroupMetadataArgs) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataOutput).ToDynamicGroupMetadataPtrOutputWithContext(ctx)
}

// DynamicGroupMetadataPtrInput is an input type that accepts DynamicGroupMetadataArgs, DynamicGroupMetadataPtr and DynamicGroupMetadataPtrOutput values.
// You can construct a concrete instance of `DynamicGroupMetadataPtrInput` via:
//
//	        DynamicGroupMetadataArgs{...}
//
//	or:
//
//	        nil
type DynamicGroupMetadataPtrInput interface {
	pulumi.Input

	ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput
	ToDynamicGroupMetadataPtrOutputWithContext(context.Context) DynamicGroupMetadataPtrOutput
}

type dynamicGroupMetadataPtrType DynamicGroupMetadataArgs

func DynamicGroupMetadataPtr(v *DynamicGroupMetadataArgs) DynamicGroupMetadataPtrInput {
	return (*dynamicGroupMetadataPtrType)(v)
}

func (*dynamicGroupMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupMetadata)(nil)).Elem()
}

func (i *dynamicGroupMetadataPtrType) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return i.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (i *dynamicGroupMetadataPtrType) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupMetadataPtrOutput)
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataOutput struct{ *pulumi.OutputState }

func (DynamicGroupMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupMetadata)(nil)).Elem()
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataOutput() DynamicGroupMetadataOutput {
	return o
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataOutputWithContext(ctx context.Context) DynamicGroupMetadataOutput {
	return o
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return o.ToDynamicGroupMetadataPtrOutputWithContext(context.Background())
}

func (o DynamicGroupMetadataOutput) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicGroupMetadata) *DynamicGroupMetadata {
		return &v
	}).(DynamicGroupMetadataPtrOutput)
}

// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
func (o DynamicGroupMetadataOutput) Queries() DynamicGroupQueryArrayOutput {
	return o.ApplyT(func(v DynamicGroupMetadata) []DynamicGroupQuery { return v.Queries }).(DynamicGroupQueryArrayOutput)
}

type DynamicGroupMetadataPtrOutput struct{ *pulumi.OutputState }

func (DynamicGroupMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicGroupMetadata)(nil)).Elem()
}

func (o DynamicGroupMetadataPtrOutput) ToDynamicGroupMetadataPtrOutput() DynamicGroupMetadataPtrOutput {
	return o
}

func (o DynamicGroupMetadataPtrOutput) ToDynamicGroupMetadataPtrOutputWithContext(ctx context.Context) DynamicGroupMetadataPtrOutput {
	return o
}

func (o DynamicGroupMetadataPtrOutput) Elem() DynamicGroupMetadataOutput {
	return o.ApplyT(func(v *DynamicGroupMetadata) DynamicGroupMetadata {
		if v != nil {
			return *v
		}
		var ret DynamicGroupMetadata
		return ret
	}).(DynamicGroupMetadataOutput)
}

// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
func (o DynamicGroupMetadataPtrOutput) Queries() DynamicGroupQueryArrayOutput {
	return o.ApplyT(func(v *DynamicGroupMetadata) []DynamicGroupQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(DynamicGroupQueryArrayOutput)
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataResponse struct {
	// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
	Queries []DynamicGroupQueryResponse `pulumi:"queries"`
	// Status of the dynamic group.
	Status DynamicGroupStatusResponse `pulumi:"status"`
}

// Dynamic group metadata like queries and status.
type DynamicGroupMetadataResponseOutput struct{ *pulumi.OutputState }

func (DynamicGroupMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupMetadataResponse)(nil)).Elem()
}

func (o DynamicGroupMetadataResponseOutput) ToDynamicGroupMetadataResponseOutput() DynamicGroupMetadataResponseOutput {
	return o
}

func (o DynamicGroupMetadataResponseOutput) ToDynamicGroupMetadataResponseOutputWithContext(ctx context.Context) DynamicGroupMetadataResponseOutput {
	return o
}

// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
func (o DynamicGroupMetadataResponseOutput) Queries() DynamicGroupQueryResponseArrayOutput {
	return o.ApplyT(func(v DynamicGroupMetadataResponse) []DynamicGroupQueryResponse { return v.Queries }).(DynamicGroupQueryResponseArrayOutput)
}

// Status of the dynamic group.
func (o DynamicGroupMetadataResponseOutput) Status() DynamicGroupStatusResponseOutput {
	return o.ApplyT(func(v DynamicGroupMetadataResponse) DynamicGroupStatusResponse { return v.Status }).(DynamicGroupStatusResponseOutput)
}

// Defines a query on a resource.
type DynamicGroupQuery struct {
	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
	Query        *string                        `pulumi:"query"`
	ResourceType *DynamicGroupQueryResourceType `pulumi:"resourceType"`
}

// DynamicGroupQueryInput is an input type that accepts DynamicGroupQueryArgs and DynamicGroupQueryOutput values.
// You can construct a concrete instance of `DynamicGroupQueryInput` via:
//
//	DynamicGroupQueryArgs{...}
type DynamicGroupQueryInput interface {
	pulumi.Input

	ToDynamicGroupQueryOutput() DynamicGroupQueryOutput
	ToDynamicGroupQueryOutputWithContext(context.Context) DynamicGroupQueryOutput
}

// Defines a query on a resource.
type DynamicGroupQueryArgs struct {
	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
	Query        pulumi.StringPtrInput                 `pulumi:"query"`
	ResourceType DynamicGroupQueryResourceTypePtrInput `pulumi:"resourceType"`
}

func (DynamicGroupQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupQuery)(nil)).Elem()
}

func (i DynamicGroupQueryArgs) ToDynamicGroupQueryOutput() DynamicGroupQueryOutput {
	return i.ToDynamicGroupQueryOutputWithContext(context.Background())
}

func (i DynamicGroupQueryArgs) ToDynamicGroupQueryOutputWithContext(ctx context.Context) DynamicGroupQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupQueryOutput)
}

// DynamicGroupQueryArrayInput is an input type that accepts DynamicGroupQueryArray and DynamicGroupQueryArrayOutput values.
// You can construct a concrete instance of `DynamicGroupQueryArrayInput` via:
//
//	DynamicGroupQueryArray{ DynamicGroupQueryArgs{...} }
type DynamicGroupQueryArrayInput interface {
	pulumi.Input

	ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput
	ToDynamicGroupQueryArrayOutputWithContext(context.Context) DynamicGroupQueryArrayOutput
}

type DynamicGroupQueryArray []DynamicGroupQueryInput

func (DynamicGroupQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicGroupQuery)(nil)).Elem()
}

func (i DynamicGroupQueryArray) ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput {
	return i.ToDynamicGroupQueryArrayOutputWithContext(context.Background())
}

func (i DynamicGroupQueryArray) ToDynamicGroupQueryArrayOutputWithContext(ctx context.Context) DynamicGroupQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicGroupQueryArrayOutput)
}

// Defines a query on a resource.
type DynamicGroupQueryOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupQuery)(nil)).Elem()
}

func (o DynamicGroupQueryOutput) ToDynamicGroupQueryOutput() DynamicGroupQueryOutput {
	return o
}

func (o DynamicGroupQueryOutput) ToDynamicGroupQueryOutputWithContext(ctx context.Context) DynamicGroupQueryOutput {
	return o
}

// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
func (o DynamicGroupQueryOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicGroupQuery) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o DynamicGroupQueryOutput) ResourceType() DynamicGroupQueryResourceTypePtrOutput {
	return o.ApplyT(func(v DynamicGroupQuery) *DynamicGroupQueryResourceType { return v.ResourceType }).(DynamicGroupQueryResourceTypePtrOutput)
}

type DynamicGroupQueryArrayOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicGroupQuery)(nil)).Elem()
}

func (o DynamicGroupQueryArrayOutput) ToDynamicGroupQueryArrayOutput() DynamicGroupQueryArrayOutput {
	return o
}

func (o DynamicGroupQueryArrayOutput) ToDynamicGroupQueryArrayOutputWithContext(ctx context.Context) DynamicGroupQueryArrayOutput {
	return o
}

func (o DynamicGroupQueryArrayOutput) Index(i pulumi.IntInput) DynamicGroupQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicGroupQuery {
		return vs[0].([]DynamicGroupQuery)[vs[1].(int)]
	}).(DynamicGroupQueryOutput)
}

// Defines a query on a resource.
type DynamicGroupQueryResponse struct {
	// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
	Query        string `pulumi:"query"`
	ResourceType string `pulumi:"resourceType"`
}

// Defines a query on a resource.
type DynamicGroupQueryResponseOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupQueryResponse)(nil)).Elem()
}

func (o DynamicGroupQueryResponseOutput) ToDynamicGroupQueryResponseOutput() DynamicGroupQueryResponseOutput {
	return o
}

func (o DynamicGroupQueryResponseOutput) ToDynamicGroupQueryResponseOutputWithContext(ctx context.Context) DynamicGroupQueryResponseOutput {
	return o
}

// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
func (o DynamicGroupQueryResponseOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicGroupQueryResponse) string { return v.Query }).(pulumi.StringOutput)
}

func (o DynamicGroupQueryResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicGroupQueryResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

type DynamicGroupQueryResponseArrayOutput struct{ *pulumi.OutputState }

func (DynamicGroupQueryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicGroupQueryResponse)(nil)).Elem()
}

func (o DynamicGroupQueryResponseArrayOutput) ToDynamicGroupQueryResponseArrayOutput() DynamicGroupQueryResponseArrayOutput {
	return o
}

func (o DynamicGroupQueryResponseArrayOutput) ToDynamicGroupQueryResponseArrayOutputWithContext(ctx context.Context) DynamicGroupQueryResponseArrayOutput {
	return o
}

func (o DynamicGroupQueryResponseArrayOutput) Index(i pulumi.IntInput) DynamicGroupQueryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicGroupQueryResponse {
		return vs[0].([]DynamicGroupQueryResponse)[vs[1].(int)]
	}).(DynamicGroupQueryResponseOutput)
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatusResponse struct {
	// Status of the dynamic group.
	Status string `pulumi:"status"`
	// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
	StatusTime string `pulumi:"statusTime"`
}

// The current status of a dynamic group along with timestamp.
type DynamicGroupStatusResponseOutput struct{ *pulumi.OutputState }

func (DynamicGroupStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicGroupStatusResponse)(nil)).Elem()
}

func (o DynamicGroupStatusResponseOutput) ToDynamicGroupStatusResponseOutput() DynamicGroupStatusResponseOutput {
	return o
}

func (o DynamicGroupStatusResponseOutput) ToDynamicGroupStatusResponseOutputWithContext(ctx context.Context) DynamicGroupStatusResponseOutput {
	return o
}

// Status of the dynamic group.
func (o DynamicGroupStatusResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicGroupStatusResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
func (o DynamicGroupStatusResponseOutput) StatusTime() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicGroupStatusResponse) string { return v.StatusTime }).(pulumi.StringOutput)
}

// Resource representing the Endpoint Verification-specific attributes of a Device. https://cloud.google.com/endpoint-verification/docs/overview
type EndpointVerificationSpecificAttributesResponse struct {
	// Details of certificates.
	CertificateAttributes []CertificateAttributesResponse `pulumi:"certificateAttributes"`
}

// Resource representing the Endpoint Verification-specific attributes of a Device. https://cloud.google.com/endpoint-verification/docs/overview
type EndpointVerificationSpecificAttributesResponseOutput struct{ *pulumi.OutputState }

func (EndpointVerificationSpecificAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointVerificationSpecificAttributesResponse)(nil)).Elem()
}

func (o EndpointVerificationSpecificAttributesResponseOutput) ToEndpointVerificationSpecificAttributesResponseOutput() EndpointVerificationSpecificAttributesResponseOutput {
	return o
}

func (o EndpointVerificationSpecificAttributesResponseOutput) ToEndpointVerificationSpecificAttributesResponseOutputWithContext(ctx context.Context) EndpointVerificationSpecificAttributesResponseOutput {
	return o
}

// Details of certificates.
func (o EndpointVerificationSpecificAttributesResponseOutput) CertificateAttributes() CertificateAttributesResponseArrayOutput {
	return o.ApplyT(func(v EndpointVerificationSpecificAttributesResponse) []CertificateAttributesResponse {
		return v.CertificateAttributes
	}).(CertificateAttributesResponseArrayOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKey struct {
	// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id *string `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
	Namespace *string `pulumi:"namespace"`
}

// EntityKeyInput is an input type that accepts EntityKeyArgs and EntityKeyOutput values.
// You can construct a concrete instance of `EntityKeyInput` via:
//
//	EntityKeyArgs{...}
type EntityKeyInput interface {
	pulumi.Input

	ToEntityKeyOutput() EntityKeyOutput
	ToEntityKeyOutputWithContext(context.Context) EntityKeyOutput
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyArgs struct {
	// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (EntityKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (i EntityKeyArgs) ToEntityKeyOutput() EntityKeyOutput {
	return i.ToEntityKeyOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput)
}

func (i EntityKeyArgs) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i EntityKeyArgs) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyOutput).ToEntityKeyPtrOutputWithContext(ctx)
}

// EntityKeyPtrInput is an input type that accepts EntityKeyArgs, EntityKeyPtr and EntityKeyPtrOutput values.
// You can construct a concrete instance of `EntityKeyPtrInput` via:
//
//	        EntityKeyArgs{...}
//
//	or:
//
//	        nil
type EntityKeyPtrInput interface {
	pulumi.Input

	ToEntityKeyPtrOutput() EntityKeyPtrOutput
	ToEntityKeyPtrOutputWithContext(context.Context) EntityKeyPtrOutput
}

type entityKeyPtrType EntityKeyArgs

func EntityKeyPtr(v *EntityKeyArgs) EntityKeyPtrInput {
	return (*entityKeyPtrType)(v)
}

func (*entityKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return i.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (i *entityKeyPtrType) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityKeyPtrOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyOutput struct{ *pulumi.OutputState }

func (EntityKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKey)(nil)).Elem()
}

func (o EntityKeyOutput) ToEntityKeyOutput() EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyOutputWithContext(ctx context.Context) EntityKeyOutput {
	return o
}

func (o EntityKeyOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o.ToEntityKeyPtrOutputWithContext(context.Background())
}

func (o EntityKeyOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityKey) *EntityKey {
		return &v
	}).(EntityKeyPtrOutput)
}

// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
func (o EntityKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type EntityKeyPtrOutput struct{ *pulumi.OutputState }

func (EntityKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityKey)(nil)).Elem()
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutput() EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) ToEntityKeyPtrOutputWithContext(ctx context.Context) EntityKeyPtrOutput {
	return o
}

func (o EntityKeyPtrOutput) Elem() EntityKeyOutput {
	return o.ApplyT(func(v *EntityKey) EntityKey {
		if v != nil {
			return *v
		}
		var ret EntityKey
		return ret
	}).(EntityKeyOutput)
}

// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
func (o EntityKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
func (o EntityKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyResponse struct {
	// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
	Namespace string `pulumi:"namespace"`
}

// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
type EntityKeyResponseOutput struct{ *pulumi.OutputState }

func (EntityKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityKeyResponse)(nil)).Elem()
}

func (o EntityKeyResponseOutput) ToEntityKeyResponseOutput() EntityKeyResponseOutput {
	return o
}

func (o EntityKeyResponseOutput) ToEntityKeyResponseOutputWithContext(ctx context.Context) EntityKeyResponseOutput {
	return o
}

// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
func (o EntityKeyResponseOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v EntityKeyResponse) string { return v.Namespace }).(pulumi.StringOutput)
}

type EntityKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityKeyResponse)(nil)).Elem()
}

func (o EntityKeyResponseArrayOutput) ToEntityKeyResponseArrayOutput() EntityKeyResponseArrayOutput {
	return o
}

func (o EntityKeyResponseArrayOutput) ToEntityKeyResponseArrayOutputWithContext(ctx context.Context) EntityKeyResponseArrayOutput {
	return o
}

func (o EntityKeyResponseArrayOutput) Index(i pulumi.IntInput) EntityKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityKeyResponse {
		return vs[0].([]EntityKeyResponse)[vs[1].(int)]
	}).(EntityKeyResponseOutput)
}

// The `MembershipRole` expiry details.
type ExpiryDetail struct {
	// The time at which the `MembershipRole` will expire.
	ExpireTime *string `pulumi:"expireTime"`
}

// ExpiryDetailInput is an input type that accepts ExpiryDetailArgs and ExpiryDetailOutput values.
// You can construct a concrete instance of `ExpiryDetailInput` via:
//
//	ExpiryDetailArgs{...}
type ExpiryDetailInput interface {
	pulumi.Input

	ToExpiryDetailOutput() ExpiryDetailOutput
	ToExpiryDetailOutputWithContext(context.Context) ExpiryDetailOutput
}

// The `MembershipRole` expiry details.
type ExpiryDetailArgs struct {
	// The time at which the `MembershipRole` will expire.
	ExpireTime pulumi.StringPtrInput `pulumi:"expireTime"`
}

func (ExpiryDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpiryDetail)(nil)).Elem()
}

func (i ExpiryDetailArgs) ToExpiryDetailOutput() ExpiryDetailOutput {
	return i.ToExpiryDetailOutputWithContext(context.Background())
}

func (i ExpiryDetailArgs) ToExpiryDetailOutputWithContext(ctx context.Context) ExpiryDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailOutput)
}

func (i ExpiryDetailArgs) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return i.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (i ExpiryDetailArgs) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailOutput).ToExpiryDetailPtrOutputWithContext(ctx)
}

// ExpiryDetailPtrInput is an input type that accepts ExpiryDetailArgs, ExpiryDetailPtr and ExpiryDetailPtrOutput values.
// You can construct a concrete instance of `ExpiryDetailPtrInput` via:
//
//	        ExpiryDetailArgs{...}
//
//	or:
//
//	        nil
type ExpiryDetailPtrInput interface {
	pulumi.Input

	ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput
	ToExpiryDetailPtrOutputWithContext(context.Context) ExpiryDetailPtrOutput
}

type expiryDetailPtrType ExpiryDetailArgs

func ExpiryDetailPtr(v *ExpiryDetailArgs) ExpiryDetailPtrInput {
	return (*expiryDetailPtrType)(v)
}

func (*expiryDetailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpiryDetail)(nil)).Elem()
}

func (i *expiryDetailPtrType) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return i.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (i *expiryDetailPtrType) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpiryDetailPtrOutput)
}

// The `MembershipRole` expiry details.
type ExpiryDetailOutput struct{ *pulumi.OutputState }

func (ExpiryDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpiryDetail)(nil)).Elem()
}

func (o ExpiryDetailOutput) ToExpiryDetailOutput() ExpiryDetailOutput {
	return o
}

func (o ExpiryDetailOutput) ToExpiryDetailOutputWithContext(ctx context.Context) ExpiryDetailOutput {
	return o
}

func (o ExpiryDetailOutput) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return o.ToExpiryDetailPtrOutputWithContext(context.Background())
}

func (o ExpiryDetailOutput) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExpiryDetail) *ExpiryDetail {
		return &v
	}).(ExpiryDetailPtrOutput)
}

// The time at which the `MembershipRole` will expire.
func (o ExpiryDetailOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpiryDetail) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

type ExpiryDetailPtrOutput struct{ *pulumi.OutputState }

func (ExpiryDetailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpiryDetail)(nil)).Elem()
}

func (o ExpiryDetailPtrOutput) ToExpiryDetailPtrOutput() ExpiryDetailPtrOutput {
	return o
}

func (o ExpiryDetailPtrOutput) ToExpiryDetailPtrOutputWithContext(ctx context.Context) ExpiryDetailPtrOutput {
	return o
}

func (o ExpiryDetailPtrOutput) Elem() ExpiryDetailOutput {
	return o.ApplyT(func(v *ExpiryDetail) ExpiryDetail {
		if v != nil {
			return *v
		}
		var ret ExpiryDetail
		return ret
	}).(ExpiryDetailOutput)
}

// The time at which the `MembershipRole` will expire.
func (o ExpiryDetailPtrOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpiryDetail) *string {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.StringPtrOutput)
}

// The `MembershipRole` expiry details.
type ExpiryDetailResponse struct {
	// The time at which the `MembershipRole` will expire.
	ExpireTime string `pulumi:"expireTime"`
}

// The `MembershipRole` expiry details.
type ExpiryDetailResponseOutput struct{ *pulumi.OutputState }

func (ExpiryDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpiryDetailResponse)(nil)).Elem()
}

func (o ExpiryDetailResponseOutput) ToExpiryDetailResponseOutput() ExpiryDetailResponseOutput {
	return o
}

func (o ExpiryDetailResponseOutput) ToExpiryDetailResponseOutputWithContext(ctx context.Context) ExpiryDetailResponseOutput {
	return o
}

// The time at which the `MembershipRole` will expire.
func (o ExpiryDetailResponseOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v ExpiryDetailResponse) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRole struct {
	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail *ExpiryDetail `pulumi:"expiryDetail"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name *string `pulumi:"name"`
	// Evaluations of restrictions applied to parent group on this membership.
	RestrictionEvaluations *RestrictionEvaluations `pulumi:"restrictionEvaluations"`
}

// MembershipRoleInput is an input type that accepts MembershipRoleArgs and MembershipRoleOutput values.
// You can construct a concrete instance of `MembershipRoleInput` via:
//
//	MembershipRoleArgs{...}
type MembershipRoleInput interface {
	pulumi.Input

	ToMembershipRoleOutput() MembershipRoleOutput
	ToMembershipRoleOutputWithContext(context.Context) MembershipRoleOutput
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleArgs struct {
	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail ExpiryDetailPtrInput `pulumi:"expiryDetail"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Evaluations of restrictions applied to parent group on this membership.
	RestrictionEvaluations RestrictionEvaluationsPtrInput `pulumi:"restrictionEvaluations"`
}

func (MembershipRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArgs) ToMembershipRoleOutput() MembershipRoleOutput {
	return i.ToMembershipRoleOutputWithContext(context.Background())
}

func (i MembershipRoleArgs) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleOutput)
}

// MembershipRoleArrayInput is an input type that accepts MembershipRoleArray and MembershipRoleArrayOutput values.
// You can construct a concrete instance of `MembershipRoleArrayInput` via:
//
//	MembershipRoleArray{ MembershipRoleArgs{...} }
type MembershipRoleArrayInput interface {
	pulumi.Input

	ToMembershipRoleArrayOutput() MembershipRoleArrayOutput
	ToMembershipRoleArrayOutputWithContext(context.Context) MembershipRoleArrayOutput
}

type MembershipRoleArray []MembershipRoleInput

func (MembershipRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return i.ToMembershipRoleArrayOutputWithContext(context.Background())
}

func (i MembershipRoleArray) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleArrayOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleOutput struct{ *pulumi.OutputState }

func (MembershipRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRole)(nil)).Elem()
}

func (o MembershipRoleOutput) ToMembershipRoleOutput() MembershipRoleOutput {
	return o
}

func (o MembershipRoleOutput) ToMembershipRoleOutputWithContext(ctx context.Context) MembershipRoleOutput {
	return o
}

// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
func (o MembershipRoleOutput) ExpiryDetail() ExpiryDetailPtrOutput {
	return o.ApplyT(func(v MembershipRole) *ExpiryDetail { return v.ExpiryDetail }).(ExpiryDetailPtrOutput)
}

// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
func (o MembershipRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MembershipRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Evaluations of restrictions applied to parent group on this membership.
func (o MembershipRoleOutput) RestrictionEvaluations() RestrictionEvaluationsPtrOutput {
	return o.ApplyT(func(v MembershipRole) *RestrictionEvaluations { return v.RestrictionEvaluations }).(RestrictionEvaluationsPtrOutput)
}

type MembershipRoleArrayOutput struct{ *pulumi.OutputState }

func (MembershipRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRole)(nil)).Elem()
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutput() MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) ToMembershipRoleArrayOutputWithContext(ctx context.Context) MembershipRoleArrayOutput {
	return o
}

func (o MembershipRoleArrayOutput) Index(i pulumi.IntInput) MembershipRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipRole {
		return vs[0].([]MembershipRole)[vs[1].(int)]
	}).(MembershipRoleOutput)
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleResponse struct {
	// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
	ExpiryDetail ExpiryDetailResponse `pulumi:"expiryDetail"`
	// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
	Name string `pulumi:"name"`
	// Evaluations of restrictions applied to parent group on this membership.
	RestrictionEvaluations RestrictionEvaluationsResponse `pulumi:"restrictionEvaluations"`
}

// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
type MembershipRoleResponseOutput struct{ *pulumi.OutputState }

func (MembershipRoleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRoleResponse)(nil)).Elem()
}

func (o MembershipRoleResponseOutput) ToMembershipRoleResponseOutput() MembershipRoleResponseOutput {
	return o
}

func (o MembershipRoleResponseOutput) ToMembershipRoleResponseOutputWithContext(ctx context.Context) MembershipRoleResponseOutput {
	return o
}

// The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
func (o MembershipRoleResponseOutput) ExpiryDetail() ExpiryDetailResponseOutput {
	return o.ApplyT(func(v MembershipRoleResponse) ExpiryDetailResponse { return v.ExpiryDetail }).(ExpiryDetailResponseOutput)
}

// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
func (o MembershipRoleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipRoleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Evaluations of restrictions applied to parent group on this membership.
func (o MembershipRoleResponseOutput) RestrictionEvaluations() RestrictionEvaluationsResponseOutput {
	return o.ApplyT(func(v MembershipRoleResponse) RestrictionEvaluationsResponse { return v.RestrictionEvaluations }).(RestrictionEvaluationsResponseOutput)
}

type MembershipRoleResponseArrayOutput struct{ *pulumi.OutputState }

func (MembershipRoleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MembershipRoleResponse)(nil)).Elem()
}

func (o MembershipRoleResponseArrayOutput) ToMembershipRoleResponseArrayOutput() MembershipRoleResponseArrayOutput {
	return o
}

func (o MembershipRoleResponseArrayOutput) ToMembershipRoleResponseArrayOutputWithContext(ctx context.Context) MembershipRoleResponseArrayOutput {
	return o
}

func (o MembershipRoleResponseArrayOutput) Index(i pulumi.IntInput) MembershipRoleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MembershipRoleResponse {
		return vs[0].([]MembershipRoleResponse)[vs[1].(int)]
	}).(MembershipRoleResponseOutput)
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluation struct {
}

// MembershipRoleRestrictionEvaluationInput is an input type that accepts MembershipRoleRestrictionEvaluationArgs and MembershipRoleRestrictionEvaluationOutput values.
// You can construct a concrete instance of `MembershipRoleRestrictionEvaluationInput` via:
//
//	MembershipRoleRestrictionEvaluationArgs{...}
type MembershipRoleRestrictionEvaluationInput interface {
	pulumi.Input

	ToMembershipRoleRestrictionEvaluationOutput() MembershipRoleRestrictionEvaluationOutput
	ToMembershipRoleRestrictionEvaluationOutputWithContext(context.Context) MembershipRoleRestrictionEvaluationOutput
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluationArgs struct {
}

func (MembershipRoleRestrictionEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRoleRestrictionEvaluation)(nil)).Elem()
}

func (i MembershipRoleRestrictionEvaluationArgs) ToMembershipRoleRestrictionEvaluationOutput() MembershipRoleRestrictionEvaluationOutput {
	return i.ToMembershipRoleRestrictionEvaluationOutputWithContext(context.Background())
}

func (i MembershipRoleRestrictionEvaluationArgs) ToMembershipRoleRestrictionEvaluationOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleRestrictionEvaluationOutput)
}

func (i MembershipRoleRestrictionEvaluationArgs) ToMembershipRoleRestrictionEvaluationPtrOutput() MembershipRoleRestrictionEvaluationPtrOutput {
	return i.ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(context.Background())
}

func (i MembershipRoleRestrictionEvaluationArgs) ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleRestrictionEvaluationOutput).ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(ctx)
}

// MembershipRoleRestrictionEvaluationPtrInput is an input type that accepts MembershipRoleRestrictionEvaluationArgs, MembershipRoleRestrictionEvaluationPtr and MembershipRoleRestrictionEvaluationPtrOutput values.
// You can construct a concrete instance of `MembershipRoleRestrictionEvaluationPtrInput` via:
//
//	        MembershipRoleRestrictionEvaluationArgs{...}
//
//	or:
//
//	        nil
type MembershipRoleRestrictionEvaluationPtrInput interface {
	pulumi.Input

	ToMembershipRoleRestrictionEvaluationPtrOutput() MembershipRoleRestrictionEvaluationPtrOutput
	ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(context.Context) MembershipRoleRestrictionEvaluationPtrOutput
}

type membershipRoleRestrictionEvaluationPtrType MembershipRoleRestrictionEvaluationArgs

func MembershipRoleRestrictionEvaluationPtr(v *MembershipRoleRestrictionEvaluationArgs) MembershipRoleRestrictionEvaluationPtrInput {
	return (*membershipRoleRestrictionEvaluationPtrType)(v)
}

func (*membershipRoleRestrictionEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipRoleRestrictionEvaluation)(nil)).Elem()
}

func (i *membershipRoleRestrictionEvaluationPtrType) ToMembershipRoleRestrictionEvaluationPtrOutput() MembershipRoleRestrictionEvaluationPtrOutput {
	return i.ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(context.Background())
}

func (i *membershipRoleRestrictionEvaluationPtrType) ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MembershipRoleRestrictionEvaluationPtrOutput)
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluationOutput struct{ *pulumi.OutputState }

func (MembershipRoleRestrictionEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRoleRestrictionEvaluation)(nil)).Elem()
}

func (o MembershipRoleRestrictionEvaluationOutput) ToMembershipRoleRestrictionEvaluationOutput() MembershipRoleRestrictionEvaluationOutput {
	return o
}

func (o MembershipRoleRestrictionEvaluationOutput) ToMembershipRoleRestrictionEvaluationOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationOutput {
	return o
}

func (o MembershipRoleRestrictionEvaluationOutput) ToMembershipRoleRestrictionEvaluationPtrOutput() MembershipRoleRestrictionEvaluationPtrOutput {
	return o.ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(context.Background())
}

func (o MembershipRoleRestrictionEvaluationOutput) ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MembershipRoleRestrictionEvaluation) *MembershipRoleRestrictionEvaluation {
		return &v
	}).(MembershipRoleRestrictionEvaluationPtrOutput)
}

type MembershipRoleRestrictionEvaluationPtrOutput struct{ *pulumi.OutputState }

func (MembershipRoleRestrictionEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MembershipRoleRestrictionEvaluation)(nil)).Elem()
}

func (o MembershipRoleRestrictionEvaluationPtrOutput) ToMembershipRoleRestrictionEvaluationPtrOutput() MembershipRoleRestrictionEvaluationPtrOutput {
	return o
}

func (o MembershipRoleRestrictionEvaluationPtrOutput) ToMembershipRoleRestrictionEvaluationPtrOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationPtrOutput {
	return o
}

func (o MembershipRoleRestrictionEvaluationPtrOutput) Elem() MembershipRoleRestrictionEvaluationOutput {
	return o.ApplyT(func(v *MembershipRoleRestrictionEvaluation) MembershipRoleRestrictionEvaluation {
		if v != nil {
			return *v
		}
		var ret MembershipRoleRestrictionEvaluation
		return ret
	}).(MembershipRoleRestrictionEvaluationOutput)
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluationResponse struct {
	// The current state of the restriction
	State string `pulumi:"state"`
}

// The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluationResponseOutput struct{ *pulumi.OutputState }

func (MembershipRoleRestrictionEvaluationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MembershipRoleRestrictionEvaluationResponse)(nil)).Elem()
}

func (o MembershipRoleRestrictionEvaluationResponseOutput) ToMembershipRoleRestrictionEvaluationResponseOutput() MembershipRoleRestrictionEvaluationResponseOutput {
	return o
}

func (o MembershipRoleRestrictionEvaluationResponseOutput) ToMembershipRoleRestrictionEvaluationResponseOutputWithContext(ctx context.Context) MembershipRoleRestrictionEvaluationResponseOutput {
	return o
}

// The current state of the restriction
func (o MembershipRoleRestrictionEvaluationResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MembershipRoleRestrictionEvaluationResponse) string { return v.State }).(pulumi.StringOutput)
}

// POSIX Group definition to represent a group in a POSIX compliant system.
type PosixGroup struct {
	// GID of the POSIX group.
	Gid *string `pulumi:"gid"`
	// Name of the POSIX group.
	Name *string `pulumi:"name"`
	// System identifier for which group name and gid apply to. If not specified it will default to empty value.
	SystemId *string `pulumi:"systemId"`
}

// PosixGroupInput is an input type that accepts PosixGroupArgs and PosixGroupOutput values.
// You can construct a concrete instance of `PosixGroupInput` via:
//
//	PosixGroupArgs{...}
type PosixGroupInput interface {
	pulumi.Input

	ToPosixGroupOutput() PosixGroupOutput
	ToPosixGroupOutputWithContext(context.Context) PosixGroupOutput
}

// POSIX Group definition to represent a group in a POSIX compliant system.
type PosixGroupArgs struct {
	// GID of the POSIX group.
	Gid pulumi.StringPtrInput `pulumi:"gid"`
	// Name of the POSIX group.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// System identifier for which group name and gid apply to. If not specified it will default to empty value.
	SystemId pulumi.StringPtrInput `pulumi:"systemId"`
}

func (PosixGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixGroup)(nil)).Elem()
}

func (i PosixGroupArgs) ToPosixGroupOutput() PosixGroupOutput {
	return i.ToPosixGroupOutputWithContext(context.Background())
}

func (i PosixGroupArgs) ToPosixGroupOutputWithContext(ctx context.Context) PosixGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PosixGroupOutput)
}

// PosixGroupArrayInput is an input type that accepts PosixGroupArray and PosixGroupArrayOutput values.
// You can construct a concrete instance of `PosixGroupArrayInput` via:
//
//	PosixGroupArray{ PosixGroupArgs{...} }
type PosixGroupArrayInput interface {
	pulumi.Input

	ToPosixGroupArrayOutput() PosixGroupArrayOutput
	ToPosixGroupArrayOutputWithContext(context.Context) PosixGroupArrayOutput
}

type PosixGroupArray []PosixGroupInput

func (PosixGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PosixGroup)(nil)).Elem()
}

func (i PosixGroupArray) ToPosixGroupArrayOutput() PosixGroupArrayOutput {
	return i.ToPosixGroupArrayOutputWithContext(context.Background())
}

func (i PosixGroupArray) ToPosixGroupArrayOutputWithContext(ctx context.Context) PosixGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PosixGroupArrayOutput)
}

// POSIX Group definition to represent a group in a POSIX compliant system.
type PosixGroupOutput struct{ *pulumi.OutputState }

func (PosixGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixGroup)(nil)).Elem()
}

func (o PosixGroupOutput) ToPosixGroupOutput() PosixGroupOutput {
	return o
}

func (o PosixGroupOutput) ToPosixGroupOutputWithContext(ctx context.Context) PosixGroupOutput {
	return o
}

// GID of the POSIX group.
func (o PosixGroupOutput) Gid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PosixGroup) *string { return v.Gid }).(pulumi.StringPtrOutput)
}

// Name of the POSIX group.
func (o PosixGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PosixGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// System identifier for which group name and gid apply to. If not specified it will default to empty value.
func (o PosixGroupOutput) SystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PosixGroup) *string { return v.SystemId }).(pulumi.StringPtrOutput)
}

type PosixGroupArrayOutput struct{ *pulumi.OutputState }

func (PosixGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PosixGroup)(nil)).Elem()
}

func (o PosixGroupArrayOutput) ToPosixGroupArrayOutput() PosixGroupArrayOutput {
	return o
}

func (o PosixGroupArrayOutput) ToPosixGroupArrayOutputWithContext(ctx context.Context) PosixGroupArrayOutput {
	return o
}

func (o PosixGroupArrayOutput) Index(i pulumi.IntInput) PosixGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PosixGroup {
		return vs[0].([]PosixGroup)[vs[1].(int)]
	}).(PosixGroupOutput)
}

// POSIX Group definition to represent a group in a POSIX compliant system.
type PosixGroupResponse struct {
	// GID of the POSIX group.
	Gid string `pulumi:"gid"`
	// Name of the POSIX group.
	Name string `pulumi:"name"`
	// System identifier for which group name and gid apply to. If not specified it will default to empty value.
	SystemId string `pulumi:"systemId"`
}

// POSIX Group definition to represent a group in a POSIX compliant system.
type PosixGroupResponseOutput struct{ *pulumi.OutputState }

func (PosixGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixGroupResponse)(nil)).Elem()
}

func (o PosixGroupResponseOutput) ToPosixGroupResponseOutput() PosixGroupResponseOutput {
	return o
}

func (o PosixGroupResponseOutput) ToPosixGroupResponseOutputWithContext(ctx context.Context) PosixGroupResponseOutput {
	return o
}

// GID of the POSIX group.
func (o PosixGroupResponseOutput) Gid() pulumi.StringOutput {
	return o.ApplyT(func(v PosixGroupResponse) string { return v.Gid }).(pulumi.StringOutput)
}

// Name of the POSIX group.
func (o PosixGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PosixGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// System identifier for which group name and gid apply to. If not specified it will default to empty value.
func (o PosixGroupResponseOutput) SystemId() pulumi.StringOutput {
	return o.ApplyT(func(v PosixGroupResponse) string { return v.SystemId }).(pulumi.StringOutput)
}

type PosixGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (PosixGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PosixGroupResponse)(nil)).Elem()
}

func (o PosixGroupResponseArrayOutput) ToPosixGroupResponseArrayOutput() PosixGroupResponseArrayOutput {
	return o
}

func (o PosixGroupResponseArrayOutput) ToPosixGroupResponseArrayOutputWithContext(ctx context.Context) PosixGroupResponseArrayOutput {
	return o
}

func (o PosixGroupResponseArrayOutput) Index(i pulumi.IntInput) PosixGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PosixGroupResponse {
		return vs[0].([]PosixGroupResponse)[vs[1].(int)]
	}).(PosixGroupResponseOutput)
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluations struct {
	// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
	MemberRestrictionEvaluation *MembershipRoleRestrictionEvaluation `pulumi:"memberRestrictionEvaluation"`
}

// RestrictionEvaluationsInput is an input type that accepts RestrictionEvaluationsArgs and RestrictionEvaluationsOutput values.
// You can construct a concrete instance of `RestrictionEvaluationsInput` via:
//
//	RestrictionEvaluationsArgs{...}
type RestrictionEvaluationsInput interface {
	pulumi.Input

	ToRestrictionEvaluationsOutput() RestrictionEvaluationsOutput
	ToRestrictionEvaluationsOutputWithContext(context.Context) RestrictionEvaluationsOutput
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluationsArgs struct {
	// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
	MemberRestrictionEvaluation MembershipRoleRestrictionEvaluationPtrInput `pulumi:"memberRestrictionEvaluation"`
}

func (RestrictionEvaluationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionEvaluations)(nil)).Elem()
}

func (i RestrictionEvaluationsArgs) ToRestrictionEvaluationsOutput() RestrictionEvaluationsOutput {
	return i.ToRestrictionEvaluationsOutputWithContext(context.Background())
}

func (i RestrictionEvaluationsArgs) ToRestrictionEvaluationsOutputWithContext(ctx context.Context) RestrictionEvaluationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionEvaluationsOutput)
}

func (i RestrictionEvaluationsArgs) ToRestrictionEvaluationsPtrOutput() RestrictionEvaluationsPtrOutput {
	return i.ToRestrictionEvaluationsPtrOutputWithContext(context.Background())
}

func (i RestrictionEvaluationsArgs) ToRestrictionEvaluationsPtrOutputWithContext(ctx context.Context) RestrictionEvaluationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionEvaluationsOutput).ToRestrictionEvaluationsPtrOutputWithContext(ctx)
}

// RestrictionEvaluationsPtrInput is an input type that accepts RestrictionEvaluationsArgs, RestrictionEvaluationsPtr and RestrictionEvaluationsPtrOutput values.
// You can construct a concrete instance of `RestrictionEvaluationsPtrInput` via:
//
//	        RestrictionEvaluationsArgs{...}
//
//	or:
//
//	        nil
type RestrictionEvaluationsPtrInput interface {
	pulumi.Input

	ToRestrictionEvaluationsPtrOutput() RestrictionEvaluationsPtrOutput
	ToRestrictionEvaluationsPtrOutputWithContext(context.Context) RestrictionEvaluationsPtrOutput
}

type restrictionEvaluationsPtrType RestrictionEvaluationsArgs

func RestrictionEvaluationsPtr(v *RestrictionEvaluationsArgs) RestrictionEvaluationsPtrInput {
	return (*restrictionEvaluationsPtrType)(v)
}

func (*restrictionEvaluationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestrictionEvaluations)(nil)).Elem()
}

func (i *restrictionEvaluationsPtrType) ToRestrictionEvaluationsPtrOutput() RestrictionEvaluationsPtrOutput {
	return i.ToRestrictionEvaluationsPtrOutputWithContext(context.Background())
}

func (i *restrictionEvaluationsPtrType) ToRestrictionEvaluationsPtrOutputWithContext(ctx context.Context) RestrictionEvaluationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionEvaluationsPtrOutput)
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluationsOutput struct{ *pulumi.OutputState }

func (RestrictionEvaluationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionEvaluations)(nil)).Elem()
}

func (o RestrictionEvaluationsOutput) ToRestrictionEvaluationsOutput() RestrictionEvaluationsOutput {
	return o
}

func (o RestrictionEvaluationsOutput) ToRestrictionEvaluationsOutputWithContext(ctx context.Context) RestrictionEvaluationsOutput {
	return o
}

func (o RestrictionEvaluationsOutput) ToRestrictionEvaluationsPtrOutput() RestrictionEvaluationsPtrOutput {
	return o.ToRestrictionEvaluationsPtrOutputWithContext(context.Background())
}

func (o RestrictionEvaluationsOutput) ToRestrictionEvaluationsPtrOutputWithContext(ctx context.Context) RestrictionEvaluationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestrictionEvaluations) *RestrictionEvaluations {
		return &v
	}).(RestrictionEvaluationsPtrOutput)
}

// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
func (o RestrictionEvaluationsOutput) MemberRestrictionEvaluation() MembershipRoleRestrictionEvaluationPtrOutput {
	return o.ApplyT(func(v RestrictionEvaluations) *MembershipRoleRestrictionEvaluation {
		return v.MemberRestrictionEvaluation
	}).(MembershipRoleRestrictionEvaluationPtrOutput)
}

type RestrictionEvaluationsPtrOutput struct{ *pulumi.OutputState }

func (RestrictionEvaluationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestrictionEvaluations)(nil)).Elem()
}

func (o RestrictionEvaluationsPtrOutput) ToRestrictionEvaluationsPtrOutput() RestrictionEvaluationsPtrOutput {
	return o
}

func (o RestrictionEvaluationsPtrOutput) ToRestrictionEvaluationsPtrOutputWithContext(ctx context.Context) RestrictionEvaluationsPtrOutput {
	return o
}

func (o RestrictionEvaluationsPtrOutput) Elem() RestrictionEvaluationsOutput {
	return o.ApplyT(func(v *RestrictionEvaluations) RestrictionEvaluations {
		if v != nil {
			return *v
		}
		var ret RestrictionEvaluations
		return ret
	}).(RestrictionEvaluationsOutput)
}

// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
func (o RestrictionEvaluationsPtrOutput) MemberRestrictionEvaluation() MembershipRoleRestrictionEvaluationPtrOutput {
	return o.ApplyT(func(v *RestrictionEvaluations) *MembershipRoleRestrictionEvaluation {
		if v == nil {
			return nil
		}
		return v.MemberRestrictionEvaluation
	}).(MembershipRoleRestrictionEvaluationPtrOutput)
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluationsResponse struct {
	// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
	MemberRestrictionEvaluation MembershipRoleRestrictionEvaluationResponse `pulumi:"memberRestrictionEvaluation"`
}

// Evaluations of restrictions applied to parent group on this membership.
type RestrictionEvaluationsResponseOutput struct{ *pulumi.OutputState }

func (RestrictionEvaluationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionEvaluationsResponse)(nil)).Elem()
}

func (o RestrictionEvaluationsResponseOutput) ToRestrictionEvaluationsResponseOutput() RestrictionEvaluationsResponseOutput {
	return o
}

func (o RestrictionEvaluationsResponseOutput) ToRestrictionEvaluationsResponseOutputWithContext(ctx context.Context) RestrictionEvaluationsResponseOutput {
	return o
}

// Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
func (o RestrictionEvaluationsResponseOutput) MemberRestrictionEvaluation() MembershipRoleRestrictionEvaluationResponseOutput {
	return o.ApplyT(func(v RestrictionEvaluationsResponse) MembershipRoleRestrictionEvaluationResponse {
		return v.MemberRestrictionEvaluation
	}).(MembershipRoleRestrictionEvaluationResponseOutput)
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfig struct {
	// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
	ChangePasswordUri *string `pulumi:"changePasswordUri"`
	// The SAML **Entity ID** of the identity provider.
	EntityId string `pulumi:"entityId"`
	// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
	LogoutRedirectUri *string `pulumi:"logoutRedirectUri"`
	// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
	SingleSignOnServiceUri string `pulumi:"singleSignOnServiceUri"`
}

// SamlIdpConfigInput is an input type that accepts SamlIdpConfigArgs and SamlIdpConfigOutput values.
// You can construct a concrete instance of `SamlIdpConfigInput` via:
//
//	SamlIdpConfigArgs{...}
type SamlIdpConfigInput interface {
	pulumi.Input

	ToSamlIdpConfigOutput() SamlIdpConfigOutput
	ToSamlIdpConfigOutputWithContext(context.Context) SamlIdpConfigOutput
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfigArgs struct {
	// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
	ChangePasswordUri pulumi.StringPtrInput `pulumi:"changePasswordUri"`
	// The SAML **Entity ID** of the identity provider.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
	LogoutRedirectUri pulumi.StringPtrInput `pulumi:"logoutRedirectUri"`
	// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
	SingleSignOnServiceUri pulumi.StringInput `pulumi:"singleSignOnServiceUri"`
}

func (SamlIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlIdpConfig)(nil)).Elem()
}

func (i SamlIdpConfigArgs) ToSamlIdpConfigOutput() SamlIdpConfigOutput {
	return i.ToSamlIdpConfigOutputWithContext(context.Background())
}

func (i SamlIdpConfigArgs) ToSamlIdpConfigOutputWithContext(ctx context.Context) SamlIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlIdpConfigOutput)
}

func (i SamlIdpConfigArgs) ToSamlIdpConfigPtrOutput() SamlIdpConfigPtrOutput {
	return i.ToSamlIdpConfigPtrOutputWithContext(context.Background())
}

func (i SamlIdpConfigArgs) ToSamlIdpConfigPtrOutputWithContext(ctx context.Context) SamlIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlIdpConfigOutput).ToSamlIdpConfigPtrOutputWithContext(ctx)
}

// SamlIdpConfigPtrInput is an input type that accepts SamlIdpConfigArgs, SamlIdpConfigPtr and SamlIdpConfigPtrOutput values.
// You can construct a concrete instance of `SamlIdpConfigPtrInput` via:
//
//	        SamlIdpConfigArgs{...}
//
//	or:
//
//	        nil
type SamlIdpConfigPtrInput interface {
	pulumi.Input

	ToSamlIdpConfigPtrOutput() SamlIdpConfigPtrOutput
	ToSamlIdpConfigPtrOutputWithContext(context.Context) SamlIdpConfigPtrOutput
}

type samlIdpConfigPtrType SamlIdpConfigArgs

func SamlIdpConfigPtr(v *SamlIdpConfigArgs) SamlIdpConfigPtrInput {
	return (*samlIdpConfigPtrType)(v)
}

func (*samlIdpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlIdpConfig)(nil)).Elem()
}

func (i *samlIdpConfigPtrType) ToSamlIdpConfigPtrOutput() SamlIdpConfigPtrOutput {
	return i.ToSamlIdpConfigPtrOutputWithContext(context.Background())
}

func (i *samlIdpConfigPtrType) ToSamlIdpConfigPtrOutputWithContext(ctx context.Context) SamlIdpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlIdpConfigPtrOutput)
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfigOutput struct{ *pulumi.OutputState }

func (SamlIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlIdpConfig)(nil)).Elem()
}

func (o SamlIdpConfigOutput) ToSamlIdpConfigOutput() SamlIdpConfigOutput {
	return o
}

func (o SamlIdpConfigOutput) ToSamlIdpConfigOutputWithContext(ctx context.Context) SamlIdpConfigOutput {
	return o
}

func (o SamlIdpConfigOutput) ToSamlIdpConfigPtrOutput() SamlIdpConfigPtrOutput {
	return o.ToSamlIdpConfigPtrOutputWithContext(context.Background())
}

func (o SamlIdpConfigOutput) ToSamlIdpConfigPtrOutputWithContext(ctx context.Context) SamlIdpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamlIdpConfig) *SamlIdpConfig {
		return &v
	}).(SamlIdpConfigPtrOutput)
}

// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
func (o SamlIdpConfigOutput) ChangePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlIdpConfig) *string { return v.ChangePasswordUri }).(pulumi.StringPtrOutput)
}

// The SAML **Entity ID** of the identity provider.
func (o SamlIdpConfigOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfig) string { return v.EntityId }).(pulumi.StringOutput)
}

// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
func (o SamlIdpConfigOutput) LogoutRedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlIdpConfig) *string { return v.LogoutRedirectUri }).(pulumi.StringPtrOutput)
}

// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
func (o SamlIdpConfigOutput) SingleSignOnServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfig) string { return v.SingleSignOnServiceUri }).(pulumi.StringOutput)
}

type SamlIdpConfigPtrOutput struct{ *pulumi.OutputState }

func (SamlIdpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlIdpConfig)(nil)).Elem()
}

func (o SamlIdpConfigPtrOutput) ToSamlIdpConfigPtrOutput() SamlIdpConfigPtrOutput {
	return o
}

func (o SamlIdpConfigPtrOutput) ToSamlIdpConfigPtrOutputWithContext(ctx context.Context) SamlIdpConfigPtrOutput {
	return o
}

func (o SamlIdpConfigPtrOutput) Elem() SamlIdpConfigOutput {
	return o.ApplyT(func(v *SamlIdpConfig) SamlIdpConfig {
		if v != nil {
			return *v
		}
		var ret SamlIdpConfig
		return ret
	}).(SamlIdpConfigOutput)
}

// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
func (o SamlIdpConfigPtrOutput) ChangePasswordUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlIdpConfig) *string {
		if v == nil {
			return nil
		}
		return v.ChangePasswordUri
	}).(pulumi.StringPtrOutput)
}

// The SAML **Entity ID** of the identity provider.
func (o SamlIdpConfigPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
func (o SamlIdpConfigPtrOutput) LogoutRedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlIdpConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogoutRedirectUri
	}).(pulumi.StringPtrOutput)
}

// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
func (o SamlIdpConfigPtrOutput) SingleSignOnServiceUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlIdpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SingleSignOnServiceUri
	}).(pulumi.StringPtrOutput)
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfigResponse struct {
	// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
	ChangePasswordUri string `pulumi:"changePasswordUri"`
	// The SAML **Entity ID** of the identity provider.
	EntityId string `pulumi:"entityId"`
	// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
	LogoutRedirectUri string `pulumi:"logoutRedirectUri"`
	// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
	SingleSignOnServiceUri string `pulumi:"singleSignOnServiceUri"`
}

// SAML IDP (identity provider) configuration.
type SamlIdpConfigResponseOutput struct{ *pulumi.OutputState }

func (SamlIdpConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlIdpConfigResponse)(nil)).Elem()
}

func (o SamlIdpConfigResponseOutput) ToSamlIdpConfigResponseOutput() SamlIdpConfigResponseOutput {
	return o
}

func (o SamlIdpConfigResponseOutput) ToSamlIdpConfigResponseOutputWithContext(ctx context.Context) SamlIdpConfigResponseOutput {
	return o
}

// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
func (o SamlIdpConfigResponseOutput) ChangePasswordUri() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfigResponse) string { return v.ChangePasswordUri }).(pulumi.StringOutput)
}

// The SAML **Entity ID** of the identity provider.
func (o SamlIdpConfigResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfigResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
func (o SamlIdpConfigResponseOutput) LogoutRedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfigResponse) string { return v.LogoutRedirectUri }).(pulumi.StringOutput)
}

// The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
func (o SamlIdpConfigResponseOutput) SingleSignOnServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v SamlIdpConfigResponse) string { return v.SingleSignOnServiceUri }).(pulumi.StringOutput)
}

// SAML SP (service provider) configuration.
type SamlSpConfig struct {
}

// SamlSpConfigInput is an input type that accepts SamlSpConfigArgs and SamlSpConfigOutput values.
// You can construct a concrete instance of `SamlSpConfigInput` via:
//
//	SamlSpConfigArgs{...}
type SamlSpConfigInput interface {
	pulumi.Input

	ToSamlSpConfigOutput() SamlSpConfigOutput
	ToSamlSpConfigOutputWithContext(context.Context) SamlSpConfigOutput
}

// SAML SP (service provider) configuration.
type SamlSpConfigArgs struct {
}

func (SamlSpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSpConfig)(nil)).Elem()
}

func (i SamlSpConfigArgs) ToSamlSpConfigOutput() SamlSpConfigOutput {
	return i.ToSamlSpConfigOutputWithContext(context.Background())
}

func (i SamlSpConfigArgs) ToSamlSpConfigOutputWithContext(ctx context.Context) SamlSpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSpConfigOutput)
}

func (i SamlSpConfigArgs) ToSamlSpConfigPtrOutput() SamlSpConfigPtrOutput {
	return i.ToSamlSpConfigPtrOutputWithContext(context.Background())
}

func (i SamlSpConfigArgs) ToSamlSpConfigPtrOutputWithContext(ctx context.Context) SamlSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSpConfigOutput).ToSamlSpConfigPtrOutputWithContext(ctx)
}

// SamlSpConfigPtrInput is an input type that accepts SamlSpConfigArgs, SamlSpConfigPtr and SamlSpConfigPtrOutput values.
// You can construct a concrete instance of `SamlSpConfigPtrInput` via:
//
//	        SamlSpConfigArgs{...}
//
//	or:
//
//	        nil
type SamlSpConfigPtrInput interface {
	pulumi.Input

	ToSamlSpConfigPtrOutput() SamlSpConfigPtrOutput
	ToSamlSpConfigPtrOutputWithContext(context.Context) SamlSpConfigPtrOutput
}

type samlSpConfigPtrType SamlSpConfigArgs

func SamlSpConfigPtr(v *SamlSpConfigArgs) SamlSpConfigPtrInput {
	return (*samlSpConfigPtrType)(v)
}

func (*samlSpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlSpConfig)(nil)).Elem()
}

func (i *samlSpConfigPtrType) ToSamlSpConfigPtrOutput() SamlSpConfigPtrOutput {
	return i.ToSamlSpConfigPtrOutputWithContext(context.Background())
}

func (i *samlSpConfigPtrType) ToSamlSpConfigPtrOutputWithContext(ctx context.Context) SamlSpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSpConfigPtrOutput)
}

// SAML SP (service provider) configuration.
type SamlSpConfigOutput struct{ *pulumi.OutputState }

func (SamlSpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSpConfig)(nil)).Elem()
}

func (o SamlSpConfigOutput) ToSamlSpConfigOutput() SamlSpConfigOutput {
	return o
}

func (o SamlSpConfigOutput) ToSamlSpConfigOutputWithContext(ctx context.Context) SamlSpConfigOutput {
	return o
}

func (o SamlSpConfigOutput) ToSamlSpConfigPtrOutput() SamlSpConfigPtrOutput {
	return o.ToSamlSpConfigPtrOutputWithContext(context.Background())
}

func (o SamlSpConfigOutput) ToSamlSpConfigPtrOutputWithContext(ctx context.Context) SamlSpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamlSpConfig) *SamlSpConfig {
		return &v
	}).(SamlSpConfigPtrOutput)
}

type SamlSpConfigPtrOutput struct{ *pulumi.OutputState }

func (SamlSpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlSpConfig)(nil)).Elem()
}

func (o SamlSpConfigPtrOutput) ToSamlSpConfigPtrOutput() SamlSpConfigPtrOutput {
	return o
}

func (o SamlSpConfigPtrOutput) ToSamlSpConfigPtrOutputWithContext(ctx context.Context) SamlSpConfigPtrOutput {
	return o
}

func (o SamlSpConfigPtrOutput) Elem() SamlSpConfigOutput {
	return o.ApplyT(func(v *SamlSpConfig) SamlSpConfig {
		if v != nil {
			return *v
		}
		var ret SamlSpConfig
		return ret
	}).(SamlSpConfigOutput)
}

// SAML SP (service provider) configuration.
type SamlSpConfigResponse struct {
	// The SAML **Assertion Consumer Service (ACS) URL** to be used for the IDP-initiated login. Assumed to accept response messages via the `HTTP-POST` binding.
	AssertionConsumerServiceUri string `pulumi:"assertionConsumerServiceUri"`
	// The SAML **Entity ID** for this service provider.
	EntityId string `pulumi:"entityId"`
}

// SAML SP (service provider) configuration.
type SamlSpConfigResponseOutput struct{ *pulumi.OutputState }

func (SamlSpConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSpConfigResponse)(nil)).Elem()
}

func (o SamlSpConfigResponseOutput) ToSamlSpConfigResponseOutput() SamlSpConfigResponseOutput {
	return o
}

func (o SamlSpConfigResponseOutput) ToSamlSpConfigResponseOutputWithContext(ctx context.Context) SamlSpConfigResponseOutput {
	return o
}

// The SAML **Assertion Consumer Service (ACS) URL** to be used for the IDP-initiated login. Assumed to accept response messages via the `HTTP-POST` binding.
func (o SamlSpConfigResponseOutput) AssertionConsumerServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v SamlSpConfigResponse) string { return v.AssertionConsumerServiceUri }).(pulumi.StringOutput)
}

// The SAML **Entity ID** for this service provider.
func (o SamlSpConfigResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v SamlSpConfigResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfo struct {
	// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
	InboundSamlSsoProfile string `pulumi:"inboundSamlSsoProfile"`
}

// SamlSsoInfoInput is an input type that accepts SamlSsoInfoArgs and SamlSsoInfoOutput values.
// You can construct a concrete instance of `SamlSsoInfoInput` via:
//
//	SamlSsoInfoArgs{...}
type SamlSsoInfoInput interface {
	pulumi.Input

	ToSamlSsoInfoOutput() SamlSsoInfoOutput
	ToSamlSsoInfoOutputWithContext(context.Context) SamlSsoInfoOutput
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfoArgs struct {
	// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
	InboundSamlSsoProfile pulumi.StringInput `pulumi:"inboundSamlSsoProfile"`
}

func (SamlSsoInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSsoInfo)(nil)).Elem()
}

func (i SamlSsoInfoArgs) ToSamlSsoInfoOutput() SamlSsoInfoOutput {
	return i.ToSamlSsoInfoOutputWithContext(context.Background())
}

func (i SamlSsoInfoArgs) ToSamlSsoInfoOutputWithContext(ctx context.Context) SamlSsoInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSsoInfoOutput)
}

func (i SamlSsoInfoArgs) ToSamlSsoInfoPtrOutput() SamlSsoInfoPtrOutput {
	return i.ToSamlSsoInfoPtrOutputWithContext(context.Background())
}

func (i SamlSsoInfoArgs) ToSamlSsoInfoPtrOutputWithContext(ctx context.Context) SamlSsoInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSsoInfoOutput).ToSamlSsoInfoPtrOutputWithContext(ctx)
}

// SamlSsoInfoPtrInput is an input type that accepts SamlSsoInfoArgs, SamlSsoInfoPtr and SamlSsoInfoPtrOutput values.
// You can construct a concrete instance of `SamlSsoInfoPtrInput` via:
//
//	        SamlSsoInfoArgs{...}
//
//	or:
//
//	        nil
type SamlSsoInfoPtrInput interface {
	pulumi.Input

	ToSamlSsoInfoPtrOutput() SamlSsoInfoPtrOutput
	ToSamlSsoInfoPtrOutputWithContext(context.Context) SamlSsoInfoPtrOutput
}

type samlSsoInfoPtrType SamlSsoInfoArgs

func SamlSsoInfoPtr(v *SamlSsoInfoArgs) SamlSsoInfoPtrInput {
	return (*samlSsoInfoPtrType)(v)
}

func (*samlSsoInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlSsoInfo)(nil)).Elem()
}

func (i *samlSsoInfoPtrType) ToSamlSsoInfoPtrOutput() SamlSsoInfoPtrOutput {
	return i.ToSamlSsoInfoPtrOutputWithContext(context.Background())
}

func (i *samlSsoInfoPtrType) ToSamlSsoInfoPtrOutputWithContext(ctx context.Context) SamlSsoInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlSsoInfoPtrOutput)
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfoOutput struct{ *pulumi.OutputState }

func (SamlSsoInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSsoInfo)(nil)).Elem()
}

func (o SamlSsoInfoOutput) ToSamlSsoInfoOutput() SamlSsoInfoOutput {
	return o
}

func (o SamlSsoInfoOutput) ToSamlSsoInfoOutputWithContext(ctx context.Context) SamlSsoInfoOutput {
	return o
}

func (o SamlSsoInfoOutput) ToSamlSsoInfoPtrOutput() SamlSsoInfoPtrOutput {
	return o.ToSamlSsoInfoPtrOutputWithContext(context.Background())
}

func (o SamlSsoInfoOutput) ToSamlSsoInfoPtrOutputWithContext(ctx context.Context) SamlSsoInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamlSsoInfo) *SamlSsoInfo {
		return &v
	}).(SamlSsoInfoPtrOutput)
}

// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
func (o SamlSsoInfoOutput) InboundSamlSsoProfile() pulumi.StringOutput {
	return o.ApplyT(func(v SamlSsoInfo) string { return v.InboundSamlSsoProfile }).(pulumi.StringOutput)
}

type SamlSsoInfoPtrOutput struct{ *pulumi.OutputState }

func (SamlSsoInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlSsoInfo)(nil)).Elem()
}

func (o SamlSsoInfoPtrOutput) ToSamlSsoInfoPtrOutput() SamlSsoInfoPtrOutput {
	return o
}

func (o SamlSsoInfoPtrOutput) ToSamlSsoInfoPtrOutputWithContext(ctx context.Context) SamlSsoInfoPtrOutput {
	return o
}

func (o SamlSsoInfoPtrOutput) Elem() SamlSsoInfoOutput {
	return o.ApplyT(func(v *SamlSsoInfo) SamlSsoInfo {
		if v != nil {
			return *v
		}
		var ret SamlSsoInfo
		return ret
	}).(SamlSsoInfoOutput)
}

// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
func (o SamlSsoInfoPtrOutput) InboundSamlSsoProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlSsoInfo) *string {
		if v == nil {
			return nil
		}
		return &v.InboundSamlSsoProfile
	}).(pulumi.StringPtrOutput)
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfoResponse struct {
	// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
	InboundSamlSsoProfile string `pulumi:"inboundSamlSsoProfile"`
}

// Details that are applicable when `sso_mode` == `SAML_SSO`.
type SamlSsoInfoResponseOutput struct{ *pulumi.OutputState }

func (SamlSsoInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlSsoInfoResponse)(nil)).Elem()
}

func (o SamlSsoInfoResponseOutput) ToSamlSsoInfoResponseOutput() SamlSsoInfoResponseOutput {
	return o
}

func (o SamlSsoInfoResponseOutput) ToSamlSsoInfoResponseOutputWithContext(ctx context.Context) SamlSsoInfoResponseOutput {
	return o
}

// Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`.
func (o SamlSsoInfoResponseOutput) InboundSamlSsoProfile() pulumi.StringOutput {
	return o.ApplyT(func(v SamlSsoInfoResponse) string { return v.InboundSamlSsoProfile }).(pulumi.StringOutput)
}

// Controls sign-in behavior.
type SignInBehavior struct {
	// When to redirect sign-ins to the IdP.
	RedirectCondition *SignInBehaviorRedirectCondition `pulumi:"redirectCondition"`
}

// SignInBehaviorInput is an input type that accepts SignInBehaviorArgs and SignInBehaviorOutput values.
// You can construct a concrete instance of `SignInBehaviorInput` via:
//
//	SignInBehaviorArgs{...}
type SignInBehaviorInput interface {
	pulumi.Input

	ToSignInBehaviorOutput() SignInBehaviorOutput
	ToSignInBehaviorOutputWithContext(context.Context) SignInBehaviorOutput
}

// Controls sign-in behavior.
type SignInBehaviorArgs struct {
	// When to redirect sign-ins to the IdP.
	RedirectCondition SignInBehaviorRedirectConditionPtrInput `pulumi:"redirectCondition"`
}

func (SignInBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SignInBehavior)(nil)).Elem()
}

func (i SignInBehaviorArgs) ToSignInBehaviorOutput() SignInBehaviorOutput {
	return i.ToSignInBehaviorOutputWithContext(context.Background())
}

func (i SignInBehaviorArgs) ToSignInBehaviorOutputWithContext(ctx context.Context) SignInBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignInBehaviorOutput)
}

func (i SignInBehaviorArgs) ToSignInBehaviorPtrOutput() SignInBehaviorPtrOutput {
	return i.ToSignInBehaviorPtrOutputWithContext(context.Background())
}

func (i SignInBehaviorArgs) ToSignInBehaviorPtrOutputWithContext(ctx context.Context) SignInBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignInBehaviorOutput).ToSignInBehaviorPtrOutputWithContext(ctx)
}

// SignInBehaviorPtrInput is an input type that accepts SignInBehaviorArgs, SignInBehaviorPtr and SignInBehaviorPtrOutput values.
// You can construct a concrete instance of `SignInBehaviorPtrInput` via:
//
//	        SignInBehaviorArgs{...}
//
//	or:
//
//	        nil
type SignInBehaviorPtrInput interface {
	pulumi.Input

	ToSignInBehaviorPtrOutput() SignInBehaviorPtrOutput
	ToSignInBehaviorPtrOutputWithContext(context.Context) SignInBehaviorPtrOutput
}

type signInBehaviorPtrType SignInBehaviorArgs

func SignInBehaviorPtr(v *SignInBehaviorArgs) SignInBehaviorPtrInput {
	return (*signInBehaviorPtrType)(v)
}

func (*signInBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SignInBehavior)(nil)).Elem()
}

func (i *signInBehaviorPtrType) ToSignInBehaviorPtrOutput() SignInBehaviorPtrOutput {
	return i.ToSignInBehaviorPtrOutputWithContext(context.Background())
}

func (i *signInBehaviorPtrType) ToSignInBehaviorPtrOutputWithContext(ctx context.Context) SignInBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SignInBehaviorPtrOutput)
}

// Controls sign-in behavior.
type SignInBehaviorOutput struct{ *pulumi.OutputState }

func (SignInBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignInBehavior)(nil)).Elem()
}

func (o SignInBehaviorOutput) ToSignInBehaviorOutput() SignInBehaviorOutput {
	return o
}

func (o SignInBehaviorOutput) ToSignInBehaviorOutputWithContext(ctx context.Context) SignInBehaviorOutput {
	return o
}

func (o SignInBehaviorOutput) ToSignInBehaviorPtrOutput() SignInBehaviorPtrOutput {
	return o.ToSignInBehaviorPtrOutputWithContext(context.Background())
}

func (o SignInBehaviorOutput) ToSignInBehaviorPtrOutputWithContext(ctx context.Context) SignInBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SignInBehavior) *SignInBehavior {
		return &v
	}).(SignInBehaviorPtrOutput)
}

// When to redirect sign-ins to the IdP.
func (o SignInBehaviorOutput) RedirectCondition() SignInBehaviorRedirectConditionPtrOutput {
	return o.ApplyT(func(v SignInBehavior) *SignInBehaviorRedirectCondition { return v.RedirectCondition }).(SignInBehaviorRedirectConditionPtrOutput)
}

type SignInBehaviorPtrOutput struct{ *pulumi.OutputState }

func (SignInBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SignInBehavior)(nil)).Elem()
}

func (o SignInBehaviorPtrOutput) ToSignInBehaviorPtrOutput() SignInBehaviorPtrOutput {
	return o
}

func (o SignInBehaviorPtrOutput) ToSignInBehaviorPtrOutputWithContext(ctx context.Context) SignInBehaviorPtrOutput {
	return o
}

func (o SignInBehaviorPtrOutput) Elem() SignInBehaviorOutput {
	return o.ApplyT(func(v *SignInBehavior) SignInBehavior {
		if v != nil {
			return *v
		}
		var ret SignInBehavior
		return ret
	}).(SignInBehaviorOutput)
}

// When to redirect sign-ins to the IdP.
func (o SignInBehaviorPtrOutput) RedirectCondition() SignInBehaviorRedirectConditionPtrOutput {
	return o.ApplyT(func(v *SignInBehavior) *SignInBehaviorRedirectCondition {
		if v == nil {
			return nil
		}
		return v.RedirectCondition
	}).(SignInBehaviorRedirectConditionPtrOutput)
}

// Controls sign-in behavior.
type SignInBehaviorResponse struct {
	// When to redirect sign-ins to the IdP.
	RedirectCondition string `pulumi:"redirectCondition"`
}

// Controls sign-in behavior.
type SignInBehaviorResponseOutput struct{ *pulumi.OutputState }

func (SignInBehaviorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SignInBehaviorResponse)(nil)).Elem()
}

func (o SignInBehaviorResponseOutput) ToSignInBehaviorResponseOutput() SignInBehaviorResponseOutput {
	return o
}

func (o SignInBehaviorResponseOutput) ToSignInBehaviorResponseOutputWithContext(ctx context.Context) SignInBehaviorResponseOutput {
	return o
}

// When to redirect sign-ins to the IdP.
func (o SignInBehaviorResponseOutput) RedirectCondition() pulumi.StringOutput {
	return o.ApplyT(func(v SignInBehaviorResponse) string { return v.RedirectCondition }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicGroupMetadataInput)(nil)).Elem(), DynamicGroupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicGroupMetadataPtrInput)(nil)).Elem(), DynamicGroupMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicGroupQueryInput)(nil)).Elem(), DynamicGroupQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicGroupQueryArrayInput)(nil)).Elem(), DynamicGroupQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityKeyInput)(nil)).Elem(), EntityKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityKeyPtrInput)(nil)).Elem(), EntityKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpiryDetailInput)(nil)).Elem(), ExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExpiryDetailPtrInput)(nil)).Elem(), ExpiryDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRoleInput)(nil)).Elem(), MembershipRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRoleArrayInput)(nil)).Elem(), MembershipRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRoleRestrictionEvaluationInput)(nil)).Elem(), MembershipRoleRestrictionEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MembershipRoleRestrictionEvaluationPtrInput)(nil)).Elem(), MembershipRoleRestrictionEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PosixGroupInput)(nil)).Elem(), PosixGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PosixGroupArrayInput)(nil)).Elem(), PosixGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionEvaluationsInput)(nil)).Elem(), RestrictionEvaluationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionEvaluationsPtrInput)(nil)).Elem(), RestrictionEvaluationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlIdpConfigInput)(nil)).Elem(), SamlIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlIdpConfigPtrInput)(nil)).Elem(), SamlIdpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlSpConfigInput)(nil)).Elem(), SamlSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlSpConfigPtrInput)(nil)).Elem(), SamlSpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlSsoInfoInput)(nil)).Elem(), SamlSsoInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlSsoInfoPtrInput)(nil)).Elem(), SamlSsoInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignInBehaviorInput)(nil)).Elem(), SignInBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SignInBehaviorPtrInput)(nil)).Elem(), SignInBehaviorArgs{})
	pulumi.RegisterOutputType(AndroidAttributesResponseOutput{})
	pulumi.RegisterOutputType(CertificateAttributesResponseOutput{})
	pulumi.RegisterOutputType(CertificateAttributesResponseArrayOutput{})
	pulumi.RegisterOutputType(CertificateTemplateResponseOutput{})
	pulumi.RegisterOutputType(DynamicGroupMetadataOutput{})
	pulumi.RegisterOutputType(DynamicGroupMetadataPtrOutput{})
	pulumi.RegisterOutputType(DynamicGroupMetadataResponseOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryArrayOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryResponseOutput{})
	pulumi.RegisterOutputType(DynamicGroupQueryResponseArrayOutput{})
	pulumi.RegisterOutputType(DynamicGroupStatusResponseOutput{})
	pulumi.RegisterOutputType(EndpointVerificationSpecificAttributesResponseOutput{})
	pulumi.RegisterOutputType(EntityKeyOutput{})
	pulumi.RegisterOutputType(EntityKeyPtrOutput{})
	pulumi.RegisterOutputType(EntityKeyResponseOutput{})
	pulumi.RegisterOutputType(EntityKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpiryDetailOutput{})
	pulumi.RegisterOutputType(ExpiryDetailPtrOutput{})
	pulumi.RegisterOutputType(ExpiryDetailResponseOutput{})
	pulumi.RegisterOutputType(MembershipRoleOutput{})
	pulumi.RegisterOutputType(MembershipRoleArrayOutput{})
	pulumi.RegisterOutputType(MembershipRoleResponseOutput{})
	pulumi.RegisterOutputType(MembershipRoleResponseArrayOutput{})
	pulumi.RegisterOutputType(MembershipRoleRestrictionEvaluationOutput{})
	pulumi.RegisterOutputType(MembershipRoleRestrictionEvaluationPtrOutput{})
	pulumi.RegisterOutputType(MembershipRoleRestrictionEvaluationResponseOutput{})
	pulumi.RegisterOutputType(PosixGroupOutput{})
	pulumi.RegisterOutputType(PosixGroupArrayOutput{})
	pulumi.RegisterOutputType(PosixGroupResponseOutput{})
	pulumi.RegisterOutputType(PosixGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(RestrictionEvaluationsOutput{})
	pulumi.RegisterOutputType(RestrictionEvaluationsPtrOutput{})
	pulumi.RegisterOutputType(RestrictionEvaluationsResponseOutput{})
	pulumi.RegisterOutputType(SamlIdpConfigOutput{})
	pulumi.RegisterOutputType(SamlIdpConfigPtrOutput{})
	pulumi.RegisterOutputType(SamlIdpConfigResponseOutput{})
	pulumi.RegisterOutputType(SamlSpConfigOutput{})
	pulumi.RegisterOutputType(SamlSpConfigPtrOutput{})
	pulumi.RegisterOutputType(SamlSpConfigResponseOutput{})
	pulumi.RegisterOutputType(SamlSsoInfoOutput{})
	pulumi.RegisterOutputType(SamlSsoInfoPtrOutput{})
	pulumi.RegisterOutputType(SamlSsoInfoResponseOutput{})
	pulumi.RegisterOutputType(SignInBehaviorOutput{})
	pulumi.RegisterOutputType(SignInBehaviorPtrOutput{})
	pulumi.RegisterOutputType(SignInBehaviorResponseOutput{})
}
