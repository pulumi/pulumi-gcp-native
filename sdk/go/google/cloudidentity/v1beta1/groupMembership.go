// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a `Membership`.
type GroupMembership struct {
	pulumi.CustomResourceState

	// The time when the `Membership` was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey EntityKeyResponseOutput `pulumi:"memberKey"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey EntityKeyResponseOutput `pulumi:"preferredMemberKey"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles MembershipRoleResponseArrayOutput `pulumi:"roles"`
	// The type of the membership.
	Type pulumi.StringOutput `pulumi:"type"`
	// The time when the `Membership` was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewGroupMembership(ctx *pulumi.Context,
	name string, args *GroupMembershipArgs, opts ...pulumi.ResourceOption) (*GroupMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupsId == nil {
		return nil, errors.New("invalid value for required argument 'GroupsId'")
	}
	if args.MembershipsId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipsId'")
	}
	var resource GroupMembership
	err := ctx.RegisterResource("google-cloud:cloudidentity/v1beta1:GroupMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupMembership gets an existing GroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupMembershipState, opts ...pulumi.ResourceOption) (*GroupMembership, error) {
	var resource GroupMembership
	err := ctx.ReadResource("google-cloud:cloudidentity/v1beta1:GroupMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupMembership resources.
type groupMembershipState struct {
	// The time when the `Membership` was created.
	CreateTime *string `pulumi:"createTime"`
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey *EntityKeyResponse `pulumi:"memberKey"`
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
	Name *string `pulumi:"name"`
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey *EntityKeyResponse `pulumi:"preferredMemberKey"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []MembershipRoleResponse `pulumi:"roles"`
	// The type of the membership.
	Type *string `pulumi:"type"`
	// The time when the `Membership` was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type GroupMembershipState struct {
	// The time when the `Membership` was created.
	CreateTime pulumi.StringPtrInput
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey EntityKeyResponsePtrInput
	// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
	Name pulumi.StringPtrInput
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey EntityKeyResponsePtrInput
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles MembershipRoleResponseArrayInput
	// The type of the membership.
	Type pulumi.StringPtrInput
	// The time when the `Membership` was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (GroupMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupMembershipState)(nil)).Elem()
}

type groupMembershipArgs struct {
	GroupsId string `pulumi:"groupsId"`
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey     *EntityKey `pulumi:"memberKey"`
	MembershipsId string     `pulumi:"membershipsId"`
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey *EntityKey `pulumi:"preferredMemberKey"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []MembershipRole `pulumi:"roles"`
}

// The set of arguments for constructing a GroupMembership resource.
type GroupMembershipArgs struct {
	GroupsId pulumi.StringInput
	// Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	MemberKey     EntityKeyPtrInput
	MembershipsId pulumi.StringInput
	// Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
	PreferredMemberKey EntityKeyPtrInput
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles MembershipRoleArrayInput
}

func (GroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupMembershipArgs)(nil)).Elem()
}

type GroupMembershipInput interface {
	pulumi.Input

	ToGroupMembershipOutput() GroupMembershipOutput
	ToGroupMembershipOutputWithContext(ctx context.Context) GroupMembershipOutput
}

func (*GroupMembership) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMembership)(nil))
}

func (i *GroupMembership) ToGroupMembershipOutput() GroupMembershipOutput {
	return i.ToGroupMembershipOutputWithContext(context.Background())
}

func (i *GroupMembership) ToGroupMembershipOutputWithContext(ctx context.Context) GroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMembershipOutput)
}

type GroupMembershipOutput struct {
	*pulumi.OutputState
}

func (GroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMembership)(nil))
}

func (o GroupMembershipOutput) ToGroupMembershipOutput() GroupMembershipOutput {
	return o
}

func (o GroupMembershipOutput) ToGroupMembershipOutputWithContext(ctx context.Context) GroupMembershipOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GroupMembershipOutput{})
}
