// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy.
type RepoIamPolicy struct {
	pulumi.CustomResourceState
}

// NewRepoIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewRepoIamPolicy(ctx *pulumi.Context,
	name string, args *RepoIamPolicyArgs, opts ...pulumi.ResourceOption) (*RepoIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	if args.ReposId == nil {
		return nil, errors.New("invalid value for required argument 'ReposId'")
	}
	var resource RepoIamPolicy
	err := ctx.RegisterResource("google-cloud:sourcerepo/v1:RepoIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepoIamPolicy gets an existing RepoIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepoIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepoIamPolicyState, opts ...pulumi.ResourceOption) (*RepoIamPolicy, error) {
	var resource RepoIamPolicy
	err := ctx.ReadResource("google-cloud:sourcerepo/v1:RepoIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RepoIamPolicy resources.
type repoIamPolicyState struct {
}

type RepoIamPolicyState struct {
}

func (RepoIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*repoIamPolicyState)(nil)).Elem()
}

type repoIamPolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     *Policy `pulumi:"policy"`
	ProjectsId string  `pulumi:"projectsId"`
	ReposId    string  `pulumi:"reposId"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a RepoIamPolicy resource.
type RepoIamPolicyArgs struct {
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     PolicyPtrInput
	ProjectsId pulumi.StringInput
	ReposId    pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (RepoIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repoIamPolicyArgs)(nil)).Elem()
}

type RepoIamPolicyInput interface {
	pulumi.Input

	ToRepoIamPolicyOutput() RepoIamPolicyOutput
	ToRepoIamPolicyOutputWithContext(ctx context.Context) RepoIamPolicyOutput
}

func (*RepoIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoIamPolicy)(nil))
}

func (i *RepoIamPolicy) ToRepoIamPolicyOutput() RepoIamPolicyOutput {
	return i.ToRepoIamPolicyOutputWithContext(context.Background())
}

func (i *RepoIamPolicy) ToRepoIamPolicyOutputWithContext(ctx context.Context) RepoIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepoIamPolicyOutput)
}

type RepoIamPolicyOutput struct {
	*pulumi.OutputState
}

func (RepoIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepoIamPolicy)(nil))
}

func (o RepoIamPolicyOutput) ToRepoIamPolicyOutput() RepoIamPolicyOutput {
	return o
}

func (o RepoIamPolicyOutput) ToRepoIamPolicyOutputWithContext(ctx context.Context) RepoIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RepoIamPolicyOutput{})
}
