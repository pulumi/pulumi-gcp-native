// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a EntryGroup resource.
func LookupEntryGroup(ctx *pulumi.Context, args *LookupEntryGroupArgs, opts ...pulumi.InvokeOption) (*LookupEntryGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEntryGroupResult
	err := ctx.Invoke("google-native:dataplex/v1:getEntryGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEntryGroupArgs struct {
	EntryGroupId string  `pulumi:"entryGroupId"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
}

type LookupEntryGroupResult struct {
	// The time when the EntryGroup was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the EntryGroup.
	Description string `pulumi:"description"`
	// Optional. User friendly display name.
	DisplayName string `pulumi:"displayName"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag string `pulumi:"etag"`
	// Optional. User-defined labels for the EntryGroup.
	Labels map[string]string `pulumi:"labels"`
	// The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}.
	Name string `pulumi:"name"`
	// Denotes the transfer status of the Entry Group. It is unspecified for Entry Group created from Dataplex API.
	TransferStatus string `pulumi:"transferStatus"`
	// System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
	Uid string `pulumi:"uid"`
	// The time when the EntryGroup was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupEntryGroupOutput(ctx *pulumi.Context, args LookupEntryGroupOutputArgs, opts ...pulumi.InvokeOption) LookupEntryGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEntryGroupResult, error) {
			args := v.(LookupEntryGroupArgs)
			r, err := LookupEntryGroup(ctx, &args, opts...)
			var s LookupEntryGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEntryGroupResultOutput)
}

type LookupEntryGroupOutputArgs struct {
	EntryGroupId pulumi.StringInput    `pulumi:"entryGroupId"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupEntryGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryGroupArgs)(nil)).Elem()
}

type LookupEntryGroupResultOutput struct{ *pulumi.OutputState }

func (LookupEntryGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEntryGroupResult)(nil)).Elem()
}

func (o LookupEntryGroupResultOutput) ToLookupEntryGroupResultOutput() LookupEntryGroupResultOutput {
	return o
}

func (o LookupEntryGroupResultOutput) ToLookupEntryGroupResultOutputWithContext(ctx context.Context) LookupEntryGroupResultOutput {
	return o
}

// The time when the EntryGroup was created.
func (o LookupEntryGroupResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the EntryGroup.
func (o LookupEntryGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. User friendly display name.
func (o LookupEntryGroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o LookupEntryGroupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Optional. User-defined labels for the EntryGroup.
func (o LookupEntryGroupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}.
func (o LookupEntryGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Denotes the transfer status of the Entry Group. It is unspecified for Entry Group created from Dataplex API.
func (o LookupEntryGroupResultOutput) TransferStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.TransferStatus }).(pulumi.StringOutput)
}

// System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
func (o LookupEntryGroupResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.Uid }).(pulumi.StringOutput)
}

// The time when the EntryGroup was last updated.
func (o LookupEntryGroupResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEntryGroupResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEntryGroupResultOutput{})
}
