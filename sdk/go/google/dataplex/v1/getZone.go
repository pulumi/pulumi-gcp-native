// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves a zone resource.
func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneResult
	err := ctx.Invoke("google-native:dataplex/v1:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupZoneArgs struct {
	LakeId   string  `pulumi:"lakeId"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	Zone     string  `pulumi:"zone"`
}

type LookupZoneResult struct {
	// Aggregated status of the underlying assets of the zone.
	AssetStatus GoogleCloudDataplexV1AssetStatusResponse `pulumi:"assetStatus"`
	// The time when the zone was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the zone.
	Description string `pulumi:"description"`
	// Optional. Specification of the discovery feature applied to data in this zone.
	DiscoverySpec GoogleCloudDataplexV1ZoneDiscoverySpecResponse `pulumi:"discoverySpec"`
	// Optional. User friendly display name.
	DisplayName string `pulumi:"displayName"`
	// Optional. User defined labels for the zone.
	Labels map[string]string `pulumi:"labels"`
	// The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
	Name string `pulumi:"name"`
	// Specification of the resources that are referenced by the assets within this zone.
	ResourceSpec GoogleCloudDataplexV1ZoneResourceSpecResponse `pulumi:"resourceSpec"`
	// Current state of the zone.
	State string `pulumi:"state"`
	// Immutable. The type of the zone.
	Type string `pulumi:"type"`
	// System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
	Uid string `pulumi:"uid"`
	// The time when the zone was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneResult, error) {
			args := v.(LookupZoneArgs)
			r, err := LookupZone(ctx, &args, opts...)
			var s LookupZoneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneResultOutput)
}

type LookupZoneOutputArgs struct {
	LakeId   pulumi.StringInput    `pulumi:"lakeId"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
	Zone     pulumi.StringInput    `pulumi:"zone"`
}

func (LookupZoneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneArgs)(nil)).Elem()
}

type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutput() LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToLookupZoneResultOutputWithContext(ctx context.Context) LookupZoneResultOutput {
	return o
}

func (o LookupZoneResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupZoneResult] {
	return pulumix.Output[LookupZoneResult]{
		OutputState: o.OutputState,
	}
}

// Aggregated status of the underlying assets of the zone.
func (o LookupZoneResultOutput) AssetStatus() GoogleCloudDataplexV1AssetStatusResponseOutput {
	return o.ApplyT(func(v LookupZoneResult) GoogleCloudDataplexV1AssetStatusResponse { return v.AssetStatus }).(GoogleCloudDataplexV1AssetStatusResponseOutput)
}

// The time when the zone was created.
func (o LookupZoneResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the zone.
func (o LookupZoneResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Specification of the discovery feature applied to data in this zone.
func (o LookupZoneResultOutput) DiscoverySpec() GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput {
	return o.ApplyT(func(v LookupZoneResult) GoogleCloudDataplexV1ZoneDiscoverySpecResponse { return v.DiscoverySpec }).(GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput)
}

// Optional. User friendly display name.
func (o LookupZoneResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. User defined labels for the zone.
func (o LookupZoneResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupZoneResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
func (o LookupZoneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Name }).(pulumi.StringOutput)
}

// Specification of the resources that are referenced by the assets within this zone.
func (o LookupZoneResultOutput) ResourceSpec() GoogleCloudDataplexV1ZoneResourceSpecResponseOutput {
	return o.ApplyT(func(v LookupZoneResult) GoogleCloudDataplexV1ZoneResourceSpecResponse { return v.ResourceSpec }).(GoogleCloudDataplexV1ZoneResourceSpecResponseOutput)
}

// Current state of the zone.
func (o LookupZoneResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.State }).(pulumi.StringOutput)
}

// Immutable. The type of the zone.
func (o LookupZoneResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Type }).(pulumi.StringOutput)
}

// System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
func (o LookupZoneResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.Uid }).(pulumi.StringOutput)
}

// The time when the zone was last updated.
func (o LookupZoneResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneResultOutput{})
}
