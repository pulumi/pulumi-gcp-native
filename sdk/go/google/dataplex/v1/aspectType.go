// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an AspectType
// Auto-naming is currently not supported for this resource.
type AspectType struct {
	pulumi.CustomResourceState

	// Required. AspectType identifier.
	AspectTypeId pulumi.StringOutput `pulumi:"aspectTypeId"`
	// Immutable. Authorization defined for this type.
	Authorization GoogleCloudDataplexV1AspectTypeAuthorizationResponseOutput `pulumi:"authorization"`
	// The time when the AspectType was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the AspectType.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. User friendly display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. User-defined labels for the AspectType.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// MetadataTemplate of the aspect.
	MetadataTemplate GoogleCloudDataplexV1AspectTypeMetadataTemplateResponseOutput `pulumi:"metadataTemplate"`
	// The relative resource name of the AspectType, of the form: projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types created from Dataplex API.
	TransferStatus pulumi.StringOutput `pulumi:"transferStatus"`
	// System generated globally unique ID for the AspectType. This ID will be different if the AspectType is deleted and re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the AspectType was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAspectType registers a new resource with the given unique name, arguments, and options.
func NewAspectType(ctx *pulumi.Context,
	name string, args *AspectTypeArgs, opts ...pulumi.ResourceOption) (*AspectType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AspectTypeId == nil {
		return nil, errors.New("invalid value for required argument 'AspectTypeId'")
	}
	if args.MetadataTemplate == nil {
		return nil, errors.New("invalid value for required argument 'MetadataTemplate'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"aspectTypeId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AspectType
	err := ctx.RegisterResource("google-native:dataplex/v1:AspectType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAspectType gets an existing AspectType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAspectType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AspectTypeState, opts ...pulumi.ResourceOption) (*AspectType, error) {
	var resource AspectType
	err := ctx.ReadResource("google-native:dataplex/v1:AspectType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AspectType resources.
type aspectTypeState struct {
}

type AspectTypeState struct {
}

func (AspectTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*aspectTypeState)(nil)).Elem()
}

type aspectTypeArgs struct {
	// Required. AspectType identifier.
	AspectTypeId string `pulumi:"aspectTypeId"`
	// Immutable. Authorization defined for this type.
	Authorization *GoogleCloudDataplexV1AspectTypeAuthorization `pulumi:"authorization"`
	// Optional. Description of the AspectType.
	Description *string `pulumi:"description"`
	// Optional. User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Optional. User-defined labels for the AspectType.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// MetadataTemplate of the aspect.
	MetadataTemplate GoogleCloudDataplexV1AspectTypeMetadataTemplate `pulumi:"metadataTemplate"`
	Project          *string                                         `pulumi:"project"`
}

// The set of arguments for constructing a AspectType resource.
type AspectTypeArgs struct {
	// Required. AspectType identifier.
	AspectTypeId pulumi.StringInput
	// Immutable. Authorization defined for this type.
	Authorization GoogleCloudDataplexV1AspectTypeAuthorizationPtrInput
	// Optional. Description of the AspectType.
	Description pulumi.StringPtrInput
	// Optional. User friendly display name.
	DisplayName pulumi.StringPtrInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Optional. User-defined labels for the AspectType.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// MetadataTemplate of the aspect.
	MetadataTemplate GoogleCloudDataplexV1AspectTypeMetadataTemplateInput
	Project          pulumi.StringPtrInput
}

func (AspectTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aspectTypeArgs)(nil)).Elem()
}

type AspectTypeInput interface {
	pulumi.Input

	ToAspectTypeOutput() AspectTypeOutput
	ToAspectTypeOutputWithContext(ctx context.Context) AspectTypeOutput
}

func (*AspectType) ElementType() reflect.Type {
	return reflect.TypeOf((**AspectType)(nil)).Elem()
}

func (i *AspectType) ToAspectTypeOutput() AspectTypeOutput {
	return i.ToAspectTypeOutputWithContext(context.Background())
}

func (i *AspectType) ToAspectTypeOutputWithContext(ctx context.Context) AspectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AspectTypeOutput)
}

type AspectTypeOutput struct{ *pulumi.OutputState }

func (AspectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AspectType)(nil)).Elem()
}

func (o AspectTypeOutput) ToAspectTypeOutput() AspectTypeOutput {
	return o
}

func (o AspectTypeOutput) ToAspectTypeOutputWithContext(ctx context.Context) AspectTypeOutput {
	return o
}

// Required. AspectType identifier.
func (o AspectTypeOutput) AspectTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.AspectTypeId }).(pulumi.StringOutput)
}

// Immutable. Authorization defined for this type.
func (o AspectTypeOutput) Authorization() GoogleCloudDataplexV1AspectTypeAuthorizationResponseOutput {
	return o.ApplyT(func(v *AspectType) GoogleCloudDataplexV1AspectTypeAuthorizationResponseOutput { return v.Authorization }).(GoogleCloudDataplexV1AspectTypeAuthorizationResponseOutput)
}

// The time when the AspectType was created.
func (o AspectTypeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the AspectType.
func (o AspectTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. User friendly display name.
func (o AspectTypeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o AspectTypeOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. User-defined labels for the AspectType.
func (o AspectTypeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AspectTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// MetadataTemplate of the aspect.
func (o AspectTypeOutput) MetadataTemplate() GoogleCloudDataplexV1AspectTypeMetadataTemplateResponseOutput {
	return o.ApplyT(func(v *AspectType) GoogleCloudDataplexV1AspectTypeMetadataTemplateResponseOutput {
		return v.MetadataTemplate
	}).(GoogleCloudDataplexV1AspectTypeMetadataTemplateResponseOutput)
}

// The relative resource name of the AspectType, of the form: projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
func (o AspectTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AspectTypeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types created from Dataplex API.
func (o AspectTypeOutput) TransferStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.TransferStatus }).(pulumi.StringOutput)
}

// System generated globally unique ID for the AspectType. This ID will be different if the AspectType is deleted and re-created with the same name.
func (o AspectTypeOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the AspectType was last updated.
func (o AspectTypeOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AspectType) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AspectTypeInput)(nil)).Elem(), &AspectType{})
	pulumi.RegisterOutputType(AspectTypeOutput{})
}
