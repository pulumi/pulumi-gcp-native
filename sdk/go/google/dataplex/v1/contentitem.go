// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a content.
// Auto-naming is currently not supported for this resource.
type Contentitem struct {
	pulumi.CustomResourceState

	// Content creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Content data in string format.
	DataText pulumi.StringOutput `pulumi:"dataText"`
	// Optional. Description of the content.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. User defined labels for the content.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	LakeId   pulumi.StringOutput    `pulumi:"lakeId"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
	Name pulumi.StringOutput `pulumi:"name"`
	// Notebook related configurations.
	Notebook GoogleCloudDataplexV1ContentNotebookResponseOutput `pulumi:"notebook"`
	// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
	Path    pulumi.StringOutput `pulumi:"path"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Sql Script related configurations.
	SqlScript GoogleCloudDataplexV1ContentSqlScriptResponseOutput `pulumi:"sqlScript"`
	// System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the content was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. Only validate the request, but do not perform mutations. The default is false.
	ValidateOnly pulumi.BoolPtrOutput `pulumi:"validateOnly"`
}

// NewContentitem registers a new resource with the given unique name, arguments, and options.
func NewContentitem(ctx *pulumi.Context,
	name string, args *ContentitemArgs, opts ...pulumi.ResourceOption) (*Contentitem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataText == nil {
		return nil, errors.New("invalid value for required argument 'DataText'")
	}
	if args.LakeId == nil {
		return nil, errors.New("invalid value for required argument 'LakeId'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"lakeId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource Contentitem
	err := ctx.RegisterResource("google-native:dataplex/v1:Contentitem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContentitem gets an existing Contentitem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContentitem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContentitemState, opts ...pulumi.ResourceOption) (*Contentitem, error) {
	var resource Contentitem
	err := ctx.ReadResource("google-native:dataplex/v1:Contentitem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Contentitem resources.
type contentitemState struct {
}

type ContentitemState struct {
}

func (ContentitemState) ElementType() reflect.Type {
	return reflect.TypeOf((*contentitemState)(nil)).Elem()
}

type contentitemArgs struct {
	// Content data in string format.
	DataText string `pulumi:"dataText"`
	// Optional. Description of the content.
	Description *string `pulumi:"description"`
	// Optional. User defined labels for the content.
	Labels   map[string]string `pulumi:"labels"`
	LakeId   string            `pulumi:"lakeId"`
	Location *string           `pulumi:"location"`
	// Notebook related configurations.
	Notebook *GoogleCloudDataplexV1ContentNotebook `pulumi:"notebook"`
	// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
	Path    string  `pulumi:"path"`
	Project *string `pulumi:"project"`
	// Sql Script related configurations.
	SqlScript *GoogleCloudDataplexV1ContentSqlScript `pulumi:"sqlScript"`
	// Optional. Only validate the request, but do not perform mutations. The default is false.
	ValidateOnly *bool `pulumi:"validateOnly"`
}

// The set of arguments for constructing a Contentitem resource.
type ContentitemArgs struct {
	// Content data in string format.
	DataText pulumi.StringInput
	// Optional. Description of the content.
	Description pulumi.StringPtrInput
	// Optional. User defined labels for the content.
	Labels   pulumi.StringMapInput
	LakeId   pulumi.StringInput
	Location pulumi.StringPtrInput
	// Notebook related configurations.
	Notebook GoogleCloudDataplexV1ContentNotebookPtrInput
	// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
	Path    pulumi.StringInput
	Project pulumi.StringPtrInput
	// Sql Script related configurations.
	SqlScript GoogleCloudDataplexV1ContentSqlScriptPtrInput
	// Optional. Only validate the request, but do not perform mutations. The default is false.
	ValidateOnly pulumi.BoolPtrInput
}

func (ContentitemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contentitemArgs)(nil)).Elem()
}

type ContentitemInput interface {
	pulumi.Input

	ToContentitemOutput() ContentitemOutput
	ToContentitemOutputWithContext(ctx context.Context) ContentitemOutput
}

func (*Contentitem) ElementType() reflect.Type {
	return reflect.TypeOf((**Contentitem)(nil)).Elem()
}

func (i *Contentitem) ToContentitemOutput() ContentitemOutput {
	return i.ToContentitemOutputWithContext(context.Background())
}

func (i *Contentitem) ToContentitemOutputWithContext(ctx context.Context) ContentitemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentitemOutput)
}

type ContentitemOutput struct{ *pulumi.OutputState }

func (ContentitemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Contentitem)(nil)).Elem()
}

func (o ContentitemOutput) ToContentitemOutput() ContentitemOutput {
	return o
}

func (o ContentitemOutput) ToContentitemOutputWithContext(ctx context.Context) ContentitemOutput {
	return o
}

// Content creation time.
func (o ContentitemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Content data in string format.
func (o ContentitemOutput) DataText() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.DataText }).(pulumi.StringOutput)
}

// Optional. Description of the content.
func (o ContentitemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. User defined labels for the content.
func (o ContentitemOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ContentitemOutput) LakeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.LakeId }).(pulumi.StringOutput)
}

func (o ContentitemOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
func (o ContentitemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Notebook related configurations.
func (o ContentitemOutput) Notebook() GoogleCloudDataplexV1ContentNotebookResponseOutput {
	return o.ApplyT(func(v *Contentitem) GoogleCloudDataplexV1ContentNotebookResponseOutput { return v.Notebook }).(GoogleCloudDataplexV1ContentNotebookResponseOutput)
}

// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
func (o ContentitemOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

func (o ContentitemOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Sql Script related configurations.
func (o ContentitemOutput) SqlScript() GoogleCloudDataplexV1ContentSqlScriptResponseOutput {
	return o.ApplyT(func(v *Contentitem) GoogleCloudDataplexV1ContentSqlScriptResponseOutput { return v.SqlScript }).(GoogleCloudDataplexV1ContentSqlScriptResponseOutput)
}

// System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
func (o ContentitemOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the content was last updated.
func (o ContentitemOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. Only validate the request, but do not perform mutations. The default is false.
func (o ContentitemOutput) ValidateOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Contentitem) pulumi.BoolPtrOutput { return v.ValidateOnly }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContentitemInput)(nil)).Elem(), &Contentitem{})
	pulumi.RegisterOutputType(ContentitemOutput{})
}
