// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an EntryGroup
// Auto-naming is currently not supported for this resource.
type EntryGroup struct {
	pulumi.CustomResourceState

	// The time when the EntryGroup was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the EntryGroup.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. User friendly display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Required. EntryGroup identifier.
	EntryGroupId pulumi.StringOutput `pulumi:"entryGroupId"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. User-defined labels for the EntryGroup.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Denotes the transfer status of the Entry Group. It is unspecified for Entry Group created from Dataplex API.
	TransferStatus pulumi.StringOutput `pulumi:"transferStatus"`
	// System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the EntryGroup was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewEntryGroup registers a new resource with the given unique name, arguments, and options.
func NewEntryGroup(ctx *pulumi.Context,
	name string, args *EntryGroupArgs, opts ...pulumi.ResourceOption) (*EntryGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryGroupId == nil {
		return nil, errors.New("invalid value for required argument 'EntryGroupId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"entryGroupId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EntryGroup
	err := ctx.RegisterResource("google-native:dataplex/v1:EntryGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEntryGroup gets an existing EntryGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEntryGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EntryGroupState, opts ...pulumi.ResourceOption) (*EntryGroup, error) {
	var resource EntryGroup
	err := ctx.ReadResource("google-native:dataplex/v1:EntryGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EntryGroup resources.
type entryGroupState struct {
}

type EntryGroupState struct {
}

func (EntryGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*entryGroupState)(nil)).Elem()
}

type entryGroupArgs struct {
	// Optional. Description of the EntryGroup.
	Description *string `pulumi:"description"`
	// Optional. User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// Required. EntryGroup identifier.
	EntryGroupId string `pulumi:"entryGroupId"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Optional. User-defined labels for the EntryGroup.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
}

// The set of arguments for constructing a EntryGroup resource.
type EntryGroupArgs struct {
	// Optional. Description of the EntryGroup.
	Description pulumi.StringPtrInput
	// Optional. User friendly display name.
	DisplayName pulumi.StringPtrInput
	// Required. EntryGroup identifier.
	EntryGroupId pulumi.StringInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Optional. User-defined labels for the EntryGroup.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
}

func (EntryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*entryGroupArgs)(nil)).Elem()
}

type EntryGroupInput interface {
	pulumi.Input

	ToEntryGroupOutput() EntryGroupOutput
	ToEntryGroupOutputWithContext(ctx context.Context) EntryGroupOutput
}

func (*EntryGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroup)(nil)).Elem()
}

func (i *EntryGroup) ToEntryGroupOutput() EntryGroupOutput {
	return i.ToEntryGroupOutputWithContext(context.Background())
}

func (i *EntryGroup) ToEntryGroupOutputWithContext(ctx context.Context) EntryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntryGroupOutput)
}

type EntryGroupOutput struct{ *pulumi.OutputState }

func (EntryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntryGroup)(nil)).Elem()
}

func (o EntryGroupOutput) ToEntryGroupOutput() EntryGroupOutput {
	return o
}

func (o EntryGroupOutput) ToEntryGroupOutputWithContext(ctx context.Context) EntryGroupOutput {
	return o
}

// The time when the EntryGroup was created.
func (o EntryGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the EntryGroup.
func (o EntryGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. User friendly display name.
func (o EntryGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Required. EntryGroup identifier.
func (o EntryGroupOutput) EntryGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.EntryGroupId }).(pulumi.StringOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o EntryGroupOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. User-defined labels for the EntryGroup.
func (o EntryGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o EntryGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}.
func (o EntryGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EntryGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Denotes the transfer status of the Entry Group. It is unspecified for Entry Group created from Dataplex API.
func (o EntryGroupOutput) TransferStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.TransferStatus }).(pulumi.StringOutput)
}

// System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
func (o EntryGroupOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the EntryGroup was last updated.
func (o EntryGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EntryGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntryGroupInput)(nil)).Elem(), &EntryGroup{})
	pulumi.RegisterOutputType(EntryGroupOutput{})
}
