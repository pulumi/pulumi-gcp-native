// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings to manage the metadata discovery and publishing for an asset.
type GoogleCloudDataplexV1AssetDiscoverySpec struct {
	// Optional. Configuration for CSV data.
	CsvOptions *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions `pulumi:"csvOptions"`
	// Optional. Whether discovery is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns []string `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns []string `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule *string `pulumi:"schedule"`
}

// GoogleCloudDataplexV1AssetDiscoverySpecInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecArgs and GoogleCloudDataplexV1AssetDiscoverySpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecInput` via:
//
//	GoogleCloudDataplexV1AssetDiscoverySpecArgs{...}
type GoogleCloudDataplexV1AssetDiscoverySpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecOutput() GoogleCloudDataplexV1AssetDiscoverySpecOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecOutput
}

// Settings to manage the metadata discovery and publishing for an asset.
type GoogleCloudDataplexV1AssetDiscoverySpecArgs struct {
	// Optional. Configuration for CSV data.
	CsvOptions GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput `pulumi:"csvOptions"`
	// Optional. Whether discovery is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns pulumi.StringArrayInput `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns pulumi.StringArrayInput `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
}

func (GoogleCloudDataplexV1AssetDiscoverySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecOutput() GoogleCloudDataplexV1AssetDiscoverySpecOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecOutput)
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecOutput).ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1AssetDiscoverySpecPtrInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecArgs, GoogleCloudDataplexV1AssetDiscoverySpecPtr and GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecPtrInput` via:
//
//	        GoogleCloudDataplexV1AssetDiscoverySpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1AssetDiscoverySpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput
}

type googleCloudDataplexV1AssetDiscoverySpecPtrType GoogleCloudDataplexV1AssetDiscoverySpecArgs

func GoogleCloudDataplexV1AssetDiscoverySpecPtr(v *GoogleCloudDataplexV1AssetDiscoverySpecArgs) GoogleCloudDataplexV1AssetDiscoverySpecPtrInput {
	return (*googleCloudDataplexV1AssetDiscoverySpecPtrType)(v)
}

func (*googleCloudDataplexV1AssetDiscoverySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1AssetDiscoverySpecPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1AssetDiscoverySpecPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput)
}

// Settings to manage the metadata discovery and publishing for an asset.
type GoogleCloudDataplexV1AssetDiscoverySpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecOutput() GoogleCloudDataplexV1AssetDiscoverySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return o.ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1AssetDiscoverySpec) *GoogleCloudDataplexV1AssetDiscoverySpec {
		return &v
	}).(GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput)
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) CsvOptions() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions {
		return v.CsvOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput)
}

// Optional. Whether discovery is enabled.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) []string { return v.ExcludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) []string { return v.IncludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) JsonOptions() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions {
		return v.JsonOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1AssetDiscoverySpecOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpec) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) Elem() GoogleCloudDataplexV1AssetDiscoverySpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) GoogleCloudDataplexV1AssetDiscoverySpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1AssetDiscoverySpec
		return ret
	}).(GoogleCloudDataplexV1AssetDiscoverySpecOutput)
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) CsvOptions() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions {
		if v == nil {
			return nil
		}
		return v.CsvOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput)
}

// Optional. Whether discovery is enabled.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePatterns
	}).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) []string {
		if v == nil {
			return nil
		}
		return v.IncludePatterns
	}).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) JsonOptions() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions {
		if v == nil {
			return nil
		}
		return v.JsonOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter *string `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference *bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding *string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows *int `pulumi:"headerRows"`
}

// GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs and GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsInput` via:
//
//	GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs{...}
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference pulumi.BoolPtrInput `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows pulumi.IntPtrInput `pulumi:"headerRows"`
}

func (GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput)
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput).ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs, GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtr and GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput
}

type googleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrType GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs

func GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtr(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput {
	return (*googleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrType)(v)
}

func (*googleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions {
		return &v
	}).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput)
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *bool { return v.DisableTypeInference }).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *int { return v.HeaderRows }).(pulumi.IntPtrOutput)
}

type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) Elem() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions
		return ret
	}).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput)
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTypeInference
	}).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions) *int {
		if v == nil {
			return nil
		}
		return v.HeaderRows
	}).(pulumi.IntPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter string `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows int `pulumi:"headerRows"`
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput {
	return o
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse) string { return v.Delimiter }).(pulumi.StringOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) DisableTypeInference() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse) bool { return v.DisableTypeInference }).(pulumi.BoolOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput) HeaderRows() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse) int { return v.HeaderRows }).(pulumi.IntOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference *bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding *string `pulumi:"encoding"`
}

// GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs and GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsInput` via:
//
//	GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs{...}
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput
}

// Describe JSON data format.
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference pulumi.BoolPtrInput `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
}

func (GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput)
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput).ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs, GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtr and GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput
	ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput
}

type googleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrType GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs

func GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtr(v *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput {
	return (*googleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrType)(v)
}

func (*googleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrType) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions {
		return &v
	}).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) *bool { return v.DisableTypeInference }).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) Elem() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions
		return ret
	}).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput)
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTypeInference
	}).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding string `pulumi:"encoding"`
}

// Describe JSON data format.
type GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput {
	return o
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput) DisableTypeInference() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse) bool { return v.DisableTypeInference }).(pulumi.BoolOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Settings to manage the metadata discovery and publishing for an asset.
type GoogleCloudDataplexV1AssetDiscoverySpecResponse struct {
	// Optional. Configuration for CSV data.
	CsvOptions GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse `pulumi:"csvOptions"`
	// Optional. Whether discovery is enabled.
	Enabled bool `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns []string `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns []string `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule string `pulumi:"schedule"`
}

// Settings to manage the metadata discovery and publishing for an asset.
type GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecResponseOutput() GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) ToGoogleCloudDataplexV1AssetDiscoverySpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput {
	return o
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) CsvOptions() GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponse {
		return v.CsvOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput)
}

// Optional. Whether discovery is enabled.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) []string { return v.ExcludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) []string { return v.IncludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) JsonOptions() GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponse {
		return v.JsonOptions
	}).(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoverySpecResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// Status of discovery for an asset.
type GoogleCloudDataplexV1AssetDiscoveryStatusResponse struct {
	// The duration of the last discovery run.
	LastRunDuration string `pulumi:"lastRunDuration"`
	// The start time of the last discovery run.
	LastRunTime string `pulumi:"lastRunTime"`
	// Additional information about the current state.
	Message string `pulumi:"message"`
	// The current status of the discovery feature.
	State string `pulumi:"state"`
	// Data Stats of the asset reported by discovery.
	Stats GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse `pulumi:"stats"`
	// Last update time of the status.
	UpdateTime string `pulumi:"updateTime"`
}

// Status of discovery for an asset.
type GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoveryStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) ToGoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput() GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) ToGoogleCloudDataplexV1AssetDiscoveryStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput {
	return o
}

// The duration of the last discovery run.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) LastRunDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) string { return v.LastRunDuration }).(pulumi.StringOutput)
}

// The start time of the last discovery run.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) LastRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) string { return v.LastRunTime }).(pulumi.StringOutput)
}

// Additional information about the current state.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The current status of the discovery feature.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Data Stats of the asset reported by discovery.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) Stats() GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse {
		return v.Stats
	}).(GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput)
}

// Last update time of the status.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The aggregated data statistics for the asset reported by discovery.
type GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse struct {
	// The count of data items within the referenced resource.
	DataItems string `pulumi:"dataItems"`
	// The number of stored data bytes within the referenced resource.
	DataSize string `pulumi:"dataSize"`
	// The count of fileset entities within the referenced resource.
	Filesets string `pulumi:"filesets"`
	// The count of table entities within the referenced resource.
	Tables string `pulumi:"tables"`
}

// The aggregated data statistics for the asset reported by discovery.
type GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput() GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) ToGoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput {
	return o
}

// The count of data items within the referenced resource.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) DataItems() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse) string { return v.DataItems }).(pulumi.StringOutput)
}

// The number of stored data bytes within the referenced resource.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) DataSize() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse) string { return v.DataSize }).(pulumi.StringOutput)
}

// The count of fileset entities within the referenced resource.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) Filesets() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse) string { return v.Filesets }).(pulumi.StringOutput)
}

// The count of table entities within the referenced resource.
func (o GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput) Tables() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponse) string { return v.Tables }).(pulumi.StringOutput)
}

// Identifies the cloud resource that is referenced by this asset.
type GoogleCloudDataplexV1AssetResourceSpec struct {
	// Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}
	Name *string `pulumi:"name"`
	// Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
	ReadAccessMode *GoogleCloudDataplexV1AssetResourceSpecReadAccessMode `pulumi:"readAccessMode"`
	// Immutable. Type of resource.
	Type GoogleCloudDataplexV1AssetResourceSpecType `pulumi:"type"`
}

// GoogleCloudDataplexV1AssetResourceSpecInput is an input type that accepts GoogleCloudDataplexV1AssetResourceSpecArgs and GoogleCloudDataplexV1AssetResourceSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1AssetResourceSpecInput` via:
//
//	GoogleCloudDataplexV1AssetResourceSpecArgs{...}
type GoogleCloudDataplexV1AssetResourceSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1AssetResourceSpecOutput() GoogleCloudDataplexV1AssetResourceSpecOutput
	ToGoogleCloudDataplexV1AssetResourceSpecOutputWithContext(context.Context) GoogleCloudDataplexV1AssetResourceSpecOutput
}

// Identifies the cloud resource that is referenced by this asset.
type GoogleCloudDataplexV1AssetResourceSpecArgs struct {
	// Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
	ReadAccessMode GoogleCloudDataplexV1AssetResourceSpecReadAccessModePtrInput `pulumi:"readAccessMode"`
	// Immutable. Type of resource.
	Type GoogleCloudDataplexV1AssetResourceSpecTypeInput `pulumi:"type"`
}

func (GoogleCloudDataplexV1AssetResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetResourceSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1AssetResourceSpecArgs) ToGoogleCloudDataplexV1AssetResourceSpecOutput() GoogleCloudDataplexV1AssetResourceSpecOutput {
	return i.ToGoogleCloudDataplexV1AssetResourceSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1AssetResourceSpecArgs) ToGoogleCloudDataplexV1AssetResourceSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1AssetResourceSpecOutput)
}

// Identifies the cloud resource that is referenced by this asset.
type GoogleCloudDataplexV1AssetResourceSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetResourceSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetResourceSpecOutput) ToGoogleCloudDataplexV1AssetResourceSpecOutput() GoogleCloudDataplexV1AssetResourceSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetResourceSpecOutput) ToGoogleCloudDataplexV1AssetResourceSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetResourceSpecOutput {
	return o
}

// Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}
func (o GoogleCloudDataplexV1AssetResourceSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
func (o GoogleCloudDataplexV1AssetResourceSpecOutput) ReadAccessMode() GoogleCloudDataplexV1AssetResourceSpecReadAccessModePtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpec) *GoogleCloudDataplexV1AssetResourceSpecReadAccessMode {
		return v.ReadAccessMode
	}).(GoogleCloudDataplexV1AssetResourceSpecReadAccessModePtrOutput)
}

// Immutable. Type of resource.
func (o GoogleCloudDataplexV1AssetResourceSpecOutput) Type() GoogleCloudDataplexV1AssetResourceSpecTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpec) GoogleCloudDataplexV1AssetResourceSpecType {
		return v.Type
	}).(GoogleCloudDataplexV1AssetResourceSpecTypeOutput)
}

// Identifies the cloud resource that is referenced by this asset.
type GoogleCloudDataplexV1AssetResourceSpecResponse struct {
	// Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}
	Name string `pulumi:"name"`
	// Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
	ReadAccessMode string `pulumi:"readAccessMode"`
	// Immutable. Type of resource.
	Type string `pulumi:"type"`
}

// Identifies the cloud resource that is referenced by this asset.
type GoogleCloudDataplexV1AssetResourceSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetResourceSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetResourceSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetResourceSpecResponseOutput) ToGoogleCloudDataplexV1AssetResourceSpecResponseOutput() GoogleCloudDataplexV1AssetResourceSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetResourceSpecResponseOutput) ToGoogleCloudDataplexV1AssetResourceSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetResourceSpecResponseOutput {
	return o
}

// Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}
func (o GoogleCloudDataplexV1AssetResourceSpecResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpecResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.
func (o GoogleCloudDataplexV1AssetResourceSpecResponseOutput) ReadAccessMode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpecResponse) string { return v.ReadAccessMode }).(pulumi.StringOutput)
}

// Immutable. Type of resource.
func (o GoogleCloudDataplexV1AssetResourceSpecResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceSpecResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Status of the resource referenced by an asset.
type GoogleCloudDataplexV1AssetResourceStatusResponse struct {
	// Additional information about the current state.
	Message string `pulumi:"message"`
	// The current state of the managed resource.
	State string `pulumi:"state"`
	// Last update time of the status.
	UpdateTime string `pulumi:"updateTime"`
}

// Status of the resource referenced by an asset.
type GoogleCloudDataplexV1AssetResourceStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetResourceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetResourceStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetResourceStatusResponseOutput) ToGoogleCloudDataplexV1AssetResourceStatusResponseOutput() GoogleCloudDataplexV1AssetResourceStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetResourceStatusResponseOutput) ToGoogleCloudDataplexV1AssetResourceStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetResourceStatusResponseOutput {
	return o
}

// Additional information about the current state.
func (o GoogleCloudDataplexV1AssetResourceStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The current state of the managed resource.
func (o GoogleCloudDataplexV1AssetResourceStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Last update time of the status.
func (o GoogleCloudDataplexV1AssetResourceStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetResourceStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.
type GoogleCloudDataplexV1AssetSecurityStatusResponse struct {
	// Additional information about the current state.
	Message string `pulumi:"message"`
	// The current state of the security policy applied to the attached resource.
	State string `pulumi:"state"`
	// Last update time of the status.
	UpdateTime string `pulumi:"updateTime"`
}

// Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy.
type GoogleCloudDataplexV1AssetSecurityStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetSecurityStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) ToGoogleCloudDataplexV1AssetSecurityStatusResponseOutput() GoogleCloudDataplexV1AssetSecurityStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) ToGoogleCloudDataplexV1AssetSecurityStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetSecurityStatusResponseOutput {
	return o
}

// Additional information about the current state.
func (o GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetSecurityStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The current state of the security policy applied to the attached resource.
func (o GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetSecurityStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Last update time of the status.
func (o GoogleCloudDataplexV1AssetSecurityStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetSecurityStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Aggregated status of the underlying assets of a lake or zone.
type GoogleCloudDataplexV1AssetStatusResponse struct {
	// Number of active assets.
	ActiveAssets int `pulumi:"activeAssets"`
	// Number of assets that are in process of updating the security policy on attached resources.
	SecurityPolicyApplyingAssets int `pulumi:"securityPolicyApplyingAssets"`
	// Last update time of the status.
	UpdateTime string `pulumi:"updateTime"`
}

// Aggregated status of the underlying assets of a lake or zone.
type GoogleCloudDataplexV1AssetStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1AssetStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1AssetStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1AssetStatusResponseOutput) ToGoogleCloudDataplexV1AssetStatusResponseOutput() GoogleCloudDataplexV1AssetStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1AssetStatusResponseOutput) ToGoogleCloudDataplexV1AssetStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1AssetStatusResponseOutput {
	return o
}

// Number of active assets.
func (o GoogleCloudDataplexV1AssetStatusResponseOutput) ActiveAssets() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetStatusResponse) int { return v.ActiveAssets }).(pulumi.IntOutput)
}

// Number of assets that are in process of updating the security policy on attached resources.
func (o GoogleCloudDataplexV1AssetStatusResponseOutput) SecurityPolicyApplyingAssets() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetStatusResponse) int { return v.SecurityPolicyApplyingAssets }).(pulumi.IntOutput)
}

// Last update time of the status.
func (o GoogleCloudDataplexV1AssetStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1AssetStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebook struct {
	// Kernel Type of the notebook.
	KernelType GoogleCloudDataplexV1ContentNotebookKernelType `pulumi:"kernelType"`
}

// GoogleCloudDataplexV1ContentNotebookInput is an input type that accepts GoogleCloudDataplexV1ContentNotebookArgs and GoogleCloudDataplexV1ContentNotebookOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ContentNotebookInput` via:
//
//	GoogleCloudDataplexV1ContentNotebookArgs{...}
type GoogleCloudDataplexV1ContentNotebookInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ContentNotebookOutput() GoogleCloudDataplexV1ContentNotebookOutput
	ToGoogleCloudDataplexV1ContentNotebookOutputWithContext(context.Context) GoogleCloudDataplexV1ContentNotebookOutput
}

// Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebookArgs struct {
	// Kernel Type of the notebook.
	KernelType GoogleCloudDataplexV1ContentNotebookKernelTypeInput `pulumi:"kernelType"`
}

func (GoogleCloudDataplexV1ContentNotebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentNotebook)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ContentNotebookArgs) ToGoogleCloudDataplexV1ContentNotebookOutput() GoogleCloudDataplexV1ContentNotebookOutput {
	return i.ToGoogleCloudDataplexV1ContentNotebookOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ContentNotebookArgs) ToGoogleCloudDataplexV1ContentNotebookOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentNotebookOutput)
}

func (i GoogleCloudDataplexV1ContentNotebookArgs) ToGoogleCloudDataplexV1ContentNotebookPtrOutput() GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return i.ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ContentNotebookArgs) ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentNotebookOutput).ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ContentNotebookPtrInput is an input type that accepts GoogleCloudDataplexV1ContentNotebookArgs, GoogleCloudDataplexV1ContentNotebookPtr and GoogleCloudDataplexV1ContentNotebookPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ContentNotebookPtrInput` via:
//
//	        GoogleCloudDataplexV1ContentNotebookArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ContentNotebookPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ContentNotebookPtrOutput() GoogleCloudDataplexV1ContentNotebookPtrOutput
	ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ContentNotebookPtrOutput
}

type googleCloudDataplexV1ContentNotebookPtrType GoogleCloudDataplexV1ContentNotebookArgs

func GoogleCloudDataplexV1ContentNotebookPtr(v *GoogleCloudDataplexV1ContentNotebookArgs) GoogleCloudDataplexV1ContentNotebookPtrInput {
	return (*googleCloudDataplexV1ContentNotebookPtrType)(v)
}

func (*googleCloudDataplexV1ContentNotebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ContentNotebook)(nil)).Elem()
}

func (i *googleCloudDataplexV1ContentNotebookPtrType) ToGoogleCloudDataplexV1ContentNotebookPtrOutput() GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return i.ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ContentNotebookPtrType) ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentNotebookPtrOutput)
}

// Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebookOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentNotebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentNotebook)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentNotebookOutput) ToGoogleCloudDataplexV1ContentNotebookOutput() GoogleCloudDataplexV1ContentNotebookOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentNotebookOutput) ToGoogleCloudDataplexV1ContentNotebookOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentNotebookOutput) ToGoogleCloudDataplexV1ContentNotebookPtrOutput() GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return o.ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ContentNotebookOutput) ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ContentNotebook) *GoogleCloudDataplexV1ContentNotebook {
		return &v
	}).(GoogleCloudDataplexV1ContentNotebookPtrOutput)
}

// Kernel Type of the notebook.
func (o GoogleCloudDataplexV1ContentNotebookOutput) KernelType() GoogleCloudDataplexV1ContentNotebookKernelTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ContentNotebook) GoogleCloudDataplexV1ContentNotebookKernelType {
		return v.KernelType
	}).(GoogleCloudDataplexV1ContentNotebookKernelTypeOutput)
}

type GoogleCloudDataplexV1ContentNotebookPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentNotebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ContentNotebook)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentNotebookPtrOutput) ToGoogleCloudDataplexV1ContentNotebookPtrOutput() GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentNotebookPtrOutput) ToGoogleCloudDataplexV1ContentNotebookPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentNotebookPtrOutput) Elem() GoogleCloudDataplexV1ContentNotebookOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ContentNotebook) GoogleCloudDataplexV1ContentNotebook {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ContentNotebook
		return ret
	}).(GoogleCloudDataplexV1ContentNotebookOutput)
}

// Kernel Type of the notebook.
func (o GoogleCloudDataplexV1ContentNotebookPtrOutput) KernelType() GoogleCloudDataplexV1ContentNotebookKernelTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ContentNotebook) *GoogleCloudDataplexV1ContentNotebookKernelType {
		if v == nil {
			return nil
		}
		return &v.KernelType
	}).(GoogleCloudDataplexV1ContentNotebookKernelTypePtrOutput)
}

// Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebookResponse struct {
	// Kernel Type of the notebook.
	KernelType string `pulumi:"kernelType"`
}

// Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebookResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentNotebookResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentNotebookResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentNotebookResponseOutput) ToGoogleCloudDataplexV1ContentNotebookResponseOutput() GoogleCloudDataplexV1ContentNotebookResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentNotebookResponseOutput) ToGoogleCloudDataplexV1ContentNotebookResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentNotebookResponseOutput {
	return o
}

// Kernel Type of the notebook.
func (o GoogleCloudDataplexV1ContentNotebookResponseOutput) KernelType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ContentNotebookResponse) string { return v.KernelType }).(pulumi.StringOutput)
}

// Configuration for the Sql Script content.
type GoogleCloudDataplexV1ContentSqlScript struct {
	// Query Engine to be used for the Sql Query.
	Engine GoogleCloudDataplexV1ContentSqlScriptEngine `pulumi:"engine"`
}

// GoogleCloudDataplexV1ContentSqlScriptInput is an input type that accepts GoogleCloudDataplexV1ContentSqlScriptArgs and GoogleCloudDataplexV1ContentSqlScriptOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ContentSqlScriptInput` via:
//
//	GoogleCloudDataplexV1ContentSqlScriptArgs{...}
type GoogleCloudDataplexV1ContentSqlScriptInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ContentSqlScriptOutput() GoogleCloudDataplexV1ContentSqlScriptOutput
	ToGoogleCloudDataplexV1ContentSqlScriptOutputWithContext(context.Context) GoogleCloudDataplexV1ContentSqlScriptOutput
}

// Configuration for the Sql Script content.
type GoogleCloudDataplexV1ContentSqlScriptArgs struct {
	// Query Engine to be used for the Sql Query.
	Engine GoogleCloudDataplexV1ContentSqlScriptEngineInput `pulumi:"engine"`
}

func (GoogleCloudDataplexV1ContentSqlScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentSqlScript)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ContentSqlScriptArgs) ToGoogleCloudDataplexV1ContentSqlScriptOutput() GoogleCloudDataplexV1ContentSqlScriptOutput {
	return i.ToGoogleCloudDataplexV1ContentSqlScriptOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ContentSqlScriptArgs) ToGoogleCloudDataplexV1ContentSqlScriptOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentSqlScriptOutput)
}

func (i GoogleCloudDataplexV1ContentSqlScriptArgs) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutput() GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return i.ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ContentSqlScriptArgs) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentSqlScriptOutput).ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ContentSqlScriptPtrInput is an input type that accepts GoogleCloudDataplexV1ContentSqlScriptArgs, GoogleCloudDataplexV1ContentSqlScriptPtr and GoogleCloudDataplexV1ContentSqlScriptPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ContentSqlScriptPtrInput` via:
//
//	        GoogleCloudDataplexV1ContentSqlScriptArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ContentSqlScriptPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ContentSqlScriptPtrOutput() GoogleCloudDataplexV1ContentSqlScriptPtrOutput
	ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ContentSqlScriptPtrOutput
}

type googleCloudDataplexV1ContentSqlScriptPtrType GoogleCloudDataplexV1ContentSqlScriptArgs

func GoogleCloudDataplexV1ContentSqlScriptPtr(v *GoogleCloudDataplexV1ContentSqlScriptArgs) GoogleCloudDataplexV1ContentSqlScriptPtrInput {
	return (*googleCloudDataplexV1ContentSqlScriptPtrType)(v)
}

func (*googleCloudDataplexV1ContentSqlScriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ContentSqlScript)(nil)).Elem()
}

func (i *googleCloudDataplexV1ContentSqlScriptPtrType) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutput() GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return i.ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ContentSqlScriptPtrType) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ContentSqlScriptPtrOutput)
}

// Configuration for the Sql Script content.
type GoogleCloudDataplexV1ContentSqlScriptOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentSqlScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentSqlScript)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentSqlScriptOutput) ToGoogleCloudDataplexV1ContentSqlScriptOutput() GoogleCloudDataplexV1ContentSqlScriptOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentSqlScriptOutput) ToGoogleCloudDataplexV1ContentSqlScriptOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentSqlScriptOutput) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutput() GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return o.ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ContentSqlScriptOutput) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ContentSqlScript) *GoogleCloudDataplexV1ContentSqlScript {
		return &v
	}).(GoogleCloudDataplexV1ContentSqlScriptPtrOutput)
}

// Query Engine to be used for the Sql Query.
func (o GoogleCloudDataplexV1ContentSqlScriptOutput) Engine() GoogleCloudDataplexV1ContentSqlScriptEngineOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ContentSqlScript) GoogleCloudDataplexV1ContentSqlScriptEngine {
		return v.Engine
	}).(GoogleCloudDataplexV1ContentSqlScriptEngineOutput)
}

type GoogleCloudDataplexV1ContentSqlScriptPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentSqlScriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ContentSqlScript)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentSqlScriptPtrOutput) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutput() GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentSqlScriptPtrOutput) ToGoogleCloudDataplexV1ContentSqlScriptPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentSqlScriptPtrOutput) Elem() GoogleCloudDataplexV1ContentSqlScriptOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ContentSqlScript) GoogleCloudDataplexV1ContentSqlScript {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ContentSqlScript
		return ret
	}).(GoogleCloudDataplexV1ContentSqlScriptOutput)
}

// Query Engine to be used for the Sql Query.
func (o GoogleCloudDataplexV1ContentSqlScriptPtrOutput) Engine() GoogleCloudDataplexV1ContentSqlScriptEnginePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ContentSqlScript) *GoogleCloudDataplexV1ContentSqlScriptEngine {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(GoogleCloudDataplexV1ContentSqlScriptEnginePtrOutput)
}

// Configuration for the Sql Script content.
type GoogleCloudDataplexV1ContentSqlScriptResponse struct {
	// Query Engine to be used for the Sql Query.
	Engine string `pulumi:"engine"`
}

// Configuration for the Sql Script content.
type GoogleCloudDataplexV1ContentSqlScriptResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ContentSqlScriptResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ContentSqlScriptResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ContentSqlScriptResponseOutput) ToGoogleCloudDataplexV1ContentSqlScriptResponseOutput() GoogleCloudDataplexV1ContentSqlScriptResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ContentSqlScriptResponseOutput) ToGoogleCloudDataplexV1ContentSqlScriptResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ContentSqlScriptResponseOutput {
	return o
}

// Query Engine to be used for the Sql Query.
func (o GoogleCloudDataplexV1ContentSqlScriptResponseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ContentSqlScriptResponse) string { return v.Engine }).(pulumi.StringOutput)
}

// DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data,the data is only accessible to principals explicitly granted access through the DataAttribute. Principals with access to the containing resource are not implicitly granted access.
type GoogleCloudDataplexV1DataAccessSpec struct {
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
	Readers []string `pulumi:"readers"`
}

// GoogleCloudDataplexV1DataAccessSpecInput is an input type that accepts GoogleCloudDataplexV1DataAccessSpecArgs and GoogleCloudDataplexV1DataAccessSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataAccessSpecInput` via:
//
//	GoogleCloudDataplexV1DataAccessSpecArgs{...}
type GoogleCloudDataplexV1DataAccessSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataAccessSpecOutput() GoogleCloudDataplexV1DataAccessSpecOutput
	ToGoogleCloudDataplexV1DataAccessSpecOutputWithContext(context.Context) GoogleCloudDataplexV1DataAccessSpecOutput
}

// DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data,the data is only accessible to principals explicitly granted access through the DataAttribute. Principals with access to the containing resource are not implicitly granted access.
type GoogleCloudDataplexV1DataAccessSpecArgs struct {
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
	Readers pulumi.StringArrayInput `pulumi:"readers"`
}

func (GoogleCloudDataplexV1DataAccessSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAccessSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataAccessSpecArgs) ToGoogleCloudDataplexV1DataAccessSpecOutput() GoogleCloudDataplexV1DataAccessSpecOutput {
	return i.ToGoogleCloudDataplexV1DataAccessSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataAccessSpecArgs) ToGoogleCloudDataplexV1DataAccessSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataAccessSpecOutput)
}

func (i GoogleCloudDataplexV1DataAccessSpecArgs) ToGoogleCloudDataplexV1DataAccessSpecPtrOutput() GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataAccessSpecArgs) ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataAccessSpecOutput).ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataAccessSpecPtrInput is an input type that accepts GoogleCloudDataplexV1DataAccessSpecArgs, GoogleCloudDataplexV1DataAccessSpecPtr and GoogleCloudDataplexV1DataAccessSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataAccessSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1DataAccessSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataAccessSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataAccessSpecPtrOutput() GoogleCloudDataplexV1DataAccessSpecPtrOutput
	ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataAccessSpecPtrOutput
}

type googleCloudDataplexV1DataAccessSpecPtrType GoogleCloudDataplexV1DataAccessSpecArgs

func GoogleCloudDataplexV1DataAccessSpecPtr(v *GoogleCloudDataplexV1DataAccessSpecArgs) GoogleCloudDataplexV1DataAccessSpecPtrInput {
	return (*googleCloudDataplexV1DataAccessSpecPtrType)(v)
}

func (*googleCloudDataplexV1DataAccessSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataAccessSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataAccessSpecPtrType) ToGoogleCloudDataplexV1DataAccessSpecPtrOutput() GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataAccessSpecPtrType) ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataAccessSpecPtrOutput)
}

// DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data,the data is only accessible to principals explicitly granted access through the DataAttribute. Principals with access to the containing resource are not implicitly granted access.
type GoogleCloudDataplexV1DataAccessSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAccessSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAccessSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAccessSpecOutput) ToGoogleCloudDataplexV1DataAccessSpecOutput() GoogleCloudDataplexV1DataAccessSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAccessSpecOutput) ToGoogleCloudDataplexV1DataAccessSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAccessSpecOutput) ToGoogleCloudDataplexV1DataAccessSpecPtrOutput() GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataAccessSpecOutput) ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataAccessSpec) *GoogleCloudDataplexV1DataAccessSpec {
		return &v
	}).(GoogleCloudDataplexV1DataAccessSpecPtrOutput)
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
func (o GoogleCloudDataplexV1DataAccessSpecOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAccessSpec) []string { return v.Readers }).(pulumi.StringArrayOutput)
}

type GoogleCloudDataplexV1DataAccessSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAccessSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataAccessSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAccessSpecPtrOutput) ToGoogleCloudDataplexV1DataAccessSpecPtrOutput() GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAccessSpecPtrOutput) ToGoogleCloudDataplexV1DataAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAccessSpecPtrOutput) Elem() GoogleCloudDataplexV1DataAccessSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataAccessSpec) GoogleCloudDataplexV1DataAccessSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataAccessSpec
		return ret
	}).(GoogleCloudDataplexV1DataAccessSpecOutput)
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
func (o GoogleCloudDataplexV1DataAccessSpecPtrOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataAccessSpec) []string {
		if v == nil {
			return nil
		}
		return v.Readers
	}).(pulumi.StringArrayOutput)
}

// DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data,the data is only accessible to principals explicitly granted access through the DataAttribute. Principals with access to the containing resource are not implicitly granted access.
type GoogleCloudDataplexV1DataAccessSpecResponse struct {
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
	Readers []string `pulumi:"readers"`
}

// DataAccessSpec holds the access control configuration to be enforced on data stored within resources (eg: rows, columns in BigQuery Tables). When associated with data,the data is only accessible to principals explicitly granted access through the DataAttribute. Principals with access to the containing resource are not implicitly granted access.
type GoogleCloudDataplexV1DataAccessSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAccessSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAccessSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAccessSpecResponseOutput) ToGoogleCloudDataplexV1DataAccessSpecResponseOutput() GoogleCloudDataplexV1DataAccessSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAccessSpecResponseOutput) ToGoogleCloudDataplexV1DataAccessSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAccessSpecResponseOutput {
	return o
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on data stored within resources.
func (o GoogleCloudDataplexV1DataAccessSpecResponseOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAccessSpecResponse) []string { return v.Readers }).(pulumi.StringArrayOutput)
}

// Represents a subresource of a given resource, and associated bindings with it.
type GoogleCloudDataplexV1DataAttributeBindingPath struct {
	// Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
	Attributes []string `pulumi:"attributes"`
	// The name identifier of the path. Nested columns should be of the form: 'country.state.city'.
	Name string `pulumi:"name"`
}

// GoogleCloudDataplexV1DataAttributeBindingPathInput is an input type that accepts GoogleCloudDataplexV1DataAttributeBindingPathArgs and GoogleCloudDataplexV1DataAttributeBindingPathOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataAttributeBindingPathInput` via:
//
//	GoogleCloudDataplexV1DataAttributeBindingPathArgs{...}
type GoogleCloudDataplexV1DataAttributeBindingPathInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataAttributeBindingPathOutput() GoogleCloudDataplexV1DataAttributeBindingPathOutput
	ToGoogleCloudDataplexV1DataAttributeBindingPathOutputWithContext(context.Context) GoogleCloudDataplexV1DataAttributeBindingPathOutput
}

// Represents a subresource of a given resource, and associated bindings with it.
type GoogleCloudDataplexV1DataAttributeBindingPathArgs struct {
	// Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	// The name identifier of the path. Nested columns should be of the form: 'country.state.city'.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GoogleCloudDataplexV1DataAttributeBindingPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAttributeBindingPath)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataAttributeBindingPathArgs) ToGoogleCloudDataplexV1DataAttributeBindingPathOutput() GoogleCloudDataplexV1DataAttributeBindingPathOutput {
	return i.ToGoogleCloudDataplexV1DataAttributeBindingPathOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataAttributeBindingPathArgs) ToGoogleCloudDataplexV1DataAttributeBindingPathOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataAttributeBindingPathOutput)
}

// GoogleCloudDataplexV1DataAttributeBindingPathArrayInput is an input type that accepts GoogleCloudDataplexV1DataAttributeBindingPathArray and GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataAttributeBindingPathArrayInput` via:
//
//	GoogleCloudDataplexV1DataAttributeBindingPathArray{ GoogleCloudDataplexV1DataAttributeBindingPathArgs{...} }
type GoogleCloudDataplexV1DataAttributeBindingPathArrayInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutput() GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput
	ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutputWithContext(context.Context) GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput
}

type GoogleCloudDataplexV1DataAttributeBindingPathArray []GoogleCloudDataplexV1DataAttributeBindingPathInput

func (GoogleCloudDataplexV1DataAttributeBindingPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataAttributeBindingPath)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataAttributeBindingPathArray) ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutput() GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput {
	return i.ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataAttributeBindingPathArray) ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput)
}

// Represents a subresource of a given resource, and associated bindings with it.
type GoogleCloudDataplexV1DataAttributeBindingPathOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAttributeBindingPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAttributeBindingPath)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathOutput() GoogleCloudDataplexV1DataAttributeBindingPathOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathOutput {
	return o
}

// Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
func (o GoogleCloudDataplexV1DataAttributeBindingPathOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAttributeBindingPath) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// The name identifier of the path. Nested columns should be of the form: 'country.state.city'.
func (o GoogleCloudDataplexV1DataAttributeBindingPathOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAttributeBindingPath) string { return v.Name }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataAttributeBindingPath)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutput() GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataAttributeBindingPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataAttributeBindingPath {
		return vs[0].([]GoogleCloudDataplexV1DataAttributeBindingPath)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataAttributeBindingPathOutput)
}

// Represents a subresource of a given resource, and associated bindings with it.
type GoogleCloudDataplexV1DataAttributeBindingPathResponse struct {
	// Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
	Attributes []string `pulumi:"attributes"`
	// The name identifier of the path. Nested columns should be of the form: 'country.state.city'.
	Name string `pulumi:"name"`
}

// Represents a subresource of a given resource, and associated bindings with it.
type GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataAttributeBindingPathResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathResponseOutput() GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput {
	return o
}

// Optional. List of attributes to be associated with the path of the resource, provided in the form: projects/{project}/locations/{location}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}
func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAttributeBindingPathResponse) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// The name identifier of the path. Nested columns should be of the form: 'country.state.city'.
func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataAttributeBindingPathResponse) string { return v.Name }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataAttributeBindingPathResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput() GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput) ToGoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataAttributeBindingPathResponse {
		return vs[0].([]GoogleCloudDataplexV1DataAttributeBindingPathResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput)
}

// The profile information for a double type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse struct {
	// Average of non-null values in the scanned data. NaN, if the field has a NaN.
	Average float64 `pulumi:"average"`
	// Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
	Max float64 `pulumi:"max"`
	// Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
	Min float64 `pulumi:"min"`
	// A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.
	Quartiles []float64 `pulumi:"quartiles"`
	// Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
	StandardDeviation float64 `pulumi:"standardDeviation"`
}

// The profile information for a double type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput {
	return o
}

// Average of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse) float64 {
		return v.Average
	}).(pulumi.Float64Output)
}

// Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) Max() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse) float64 {
		return v.Max
	}).(pulumi.Float64Output)
}

// Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) Min() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse) float64 {
		return v.Min
	}).(pulumi.Float64Output)
}

// A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) Quartiles() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse) []float64 {
		return v.Quartiles
	}).(pulumi.Float64ArrayOutput)
}

// Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput) StandardDeviation() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse) float64 {
		return v.StandardDeviation
	}).(pulumi.Float64Output)
}

// The profile information for an integer type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse struct {
	// Average of non-null values in the scanned data. NaN, if the field has a NaN.
	Average float64 `pulumi:"average"`
	// Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
	Max string `pulumi:"max"`
	// Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
	Min string `pulumi:"min"`
	// A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.
	Quartiles []string `pulumi:"quartiles"`
	// Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
	StandardDeviation float64 `pulumi:"standardDeviation"`
}

// The profile information for an integer type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput {
	return o
}

// Average of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) Average() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse) float64 {
		return v.Average
	}).(pulumi.Float64Output)
}

// Maximum of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) Max() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse) string {
		return v.Max
	}).(pulumi.StringOutput)
}

// Minimum of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) Min() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse) string {
		return v.Min
	}).(pulumi.StringOutput)
}

// A quartile divides the number of data points into four parts, or quarters, of more-or-less equal size. Three main quartiles used are: The first quartile (Q1) splits off the lowest 25% of data from the highest 75%. It is also known as the lower or 25th empirical quartile, as 25% of the data is below this point. The second quartile (Q2) is the median of a data set. So, 50% of the data lies below this point. The third quartile (Q3) splits off the highest 25% of data from the lowest 75%. It is known as the upper or 75th empirical quartile, as 75% of the data lies below this point. Here, the quartiles is provided as an ordered list of quartile values for the scanned data, occurring in order Q1, median, Q3.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) Quartiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse) []string {
		return v.Quartiles
	}).(pulumi.StringArrayOutput)
}

// Standard deviation of non-null values in the scanned data. NaN, if the field has a NaN.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput) StandardDeviation() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse) float64 {
		return v.StandardDeviation
	}).(pulumi.Float64Output)
}

// The profile information for each field type.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse struct {
	// Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
	DistinctRatio float64 `pulumi:"distinctRatio"`
	// Double type field information.
	DoubleProfile GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse `pulumi:"doubleProfile"`
	// Integer type field information.
	IntegerProfile GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse `pulumi:"integerProfile"`
	// Ratio of rows with null value against total scanned rows.
	NullRatio float64 `pulumi:"nullRatio"`
	// String type field information.
	StringProfile GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse `pulumi:"stringProfile"`
	// The list of top N non-null values and number of times they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
	TopNValues []GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse `pulumi:"topNValues"`
}

// The profile information for each field type.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput {
	return o
}

// Ratio of rows with distinct values against total scanned rows. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) DistinctRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) float64 {
		return v.DistinctRatio
	}).(pulumi.Float64Output)
}

// Double type field information.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) DoubleProfile() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponse {
		return v.DoubleProfile
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput)
}

// Integer type field information.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) IntegerProfile() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponse {
		return v.IntegerProfile
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput)
}

// Ratio of rows with null value against total scanned rows.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) NullRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) float64 {
		return v.NullRatio
	}).(pulumi.Float64Output)
}

// String type field information.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) StringProfile() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse {
		return v.StringProfile
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput)
}

// The list of top N non-null values and number of times they occur in the scanned data. N is 10 or equal to the number of distinct values in the field, whichever is smaller. Not available for complex non-groupable field type RECORD and fields with REPEATABLE mode.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput) TopNValues() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse) []GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse {
		return v.TopNValues
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput)
}

// The profile information for a string type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse struct {
	// Average length of non-null values in the scanned data.
	AverageLength float64 `pulumi:"averageLength"`
	// Maximum length of non-null values in the scanned data.
	MaxLength string `pulumi:"maxLength"`
	// Minimum length of non-null values in the scanned data.
	MinLength string `pulumi:"minLength"`
}

// The profile information for a string type field.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput {
	return o
}

// Average length of non-null values in the scanned data.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) AverageLength() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse) float64 {
		return v.AverageLength
	}).(pulumi.Float64Output)
}

// Maximum length of non-null values in the scanned data.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) MaxLength() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse) string {
		return v.MaxLength
	}).(pulumi.StringOutput)
}

// Minimum length of non-null values in the scanned data.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput) MinLength() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponse) string {
		return v.MinLength
	}).(pulumi.StringOutput)
}

// Top N non-null values in the scanned data.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse struct {
	// Count of the corresponding value in the scanned data.
	Count string `pulumi:"count"`
	// String value of a top N non-null value.
	Value string `pulumi:"value"`
}

// Top N non-null values in the scanned data.
type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput {
	return o
}

// Count of the corresponding value in the scanned data.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse) string {
		return v.Count
	}).(pulumi.StringOutput)
}

// String value of a top N non-null value.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse {
		return vs[0].([]GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput)
}

// A field within a table.
type GoogleCloudDataplexV1DataProfileResultProfileFieldResponse struct {
	// The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.
	Mode string `pulumi:"mode"`
	// The name of the field.
	Name string `pulumi:"name"`
	// Profile information for the corresponding field.
	Profile GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse `pulumi:"profile"`
	// The field data type. Possible values include: STRING BYTE INT64 INT32 INT16 DOUBLE FLOAT DECIMAL BOOLEAN BINARY TIMESTAMP DATE TIME NULL RECORD
	Type string `pulumi:"type"`
}

// A field within a table.
type GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput {
	return o
}

// The mode of the field. Possible values include: REQUIRED, if it is a required field. NULLABLE, if it is an optional field. REPEATED, if it is a repeated field.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the field.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Profile information for the corresponding field.
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) Profile() GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldResponse) GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponse {
		return v.Profile
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput)
}

// The field data type. Possible values include: STRING BYTE INT64 INT32 INT16 DOUBLE FLOAT DECIMAL BOOLEAN BINARY TIMESTAMP DATE TIME NULL RECORD
func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileFieldResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataProfileResultProfileFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput() GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput) ToGoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataProfileResultProfileFieldResponse {
		return vs[0].([]GoogleCloudDataplexV1DataProfileResultProfileFieldResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput)
}

// Contains name, type, mode and field type specific profile information.
type GoogleCloudDataplexV1DataProfileResultProfileResponse struct {
	// List of fields with structural and profile information for each field.
	Fields []GoogleCloudDataplexV1DataProfileResultProfileFieldResponse `pulumi:"fields"`
}

// Contains name, type, mode and field type specific profile information.
type GoogleCloudDataplexV1DataProfileResultProfileResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultProfileResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultProfileResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileResponseOutput() GoogleCloudDataplexV1DataProfileResultProfileResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultProfileResponseOutput) ToGoogleCloudDataplexV1DataProfileResultProfileResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultProfileResponseOutput {
	return o
}

// List of fields with structural and profile information for each field.
func (o GoogleCloudDataplexV1DataProfileResultProfileResponseOutput) Fields() GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultProfileResponse) []GoogleCloudDataplexV1DataProfileResultProfileFieldResponse {
		return v.Fields
	}).(GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput)
}

// DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
type GoogleCloudDataplexV1DataProfileResultResponse struct {
	// The profile information per field.
	Profile GoogleCloudDataplexV1DataProfileResultProfileResponse `pulumi:"profile"`
	// The count of rows scanned.
	RowCount string `pulumi:"rowCount"`
	// The data scanned for this result.
	ScannedData GoogleCloudDataplexV1ScannedDataResponse `pulumi:"scannedData"`
}

// DataProfileResult defines the output of DataProfileScan. Each field of the table will have field type specific profile result.
type GoogleCloudDataplexV1DataProfileResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileResultResponseOutput) ToGoogleCloudDataplexV1DataProfileResultResponseOutput() GoogleCloudDataplexV1DataProfileResultResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileResultResponseOutput) ToGoogleCloudDataplexV1DataProfileResultResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileResultResponseOutput {
	return o
}

// The profile information per field.
func (o GoogleCloudDataplexV1DataProfileResultResponseOutput) Profile() GoogleCloudDataplexV1DataProfileResultProfileResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultResponse) GoogleCloudDataplexV1DataProfileResultProfileResponse {
		return v.Profile
	}).(GoogleCloudDataplexV1DataProfileResultProfileResponseOutput)
}

// The count of rows scanned.
func (o GoogleCloudDataplexV1DataProfileResultResponseOutput) RowCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultResponse) string { return v.RowCount }).(pulumi.StringOutput)
}

// The data scanned for this result.
func (o GoogleCloudDataplexV1DataProfileResultResponseOutput) ScannedData() GoogleCloudDataplexV1ScannedDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataProfileResultResponse) GoogleCloudDataplexV1ScannedDataResponse {
		return v.ScannedData
	}).(GoogleCloudDataplexV1ScannedDataResponseOutput)
}

// DataProfileScan related setting.
type GoogleCloudDataplexV1DataProfileSpec struct {
}

// GoogleCloudDataplexV1DataProfileSpecInput is an input type that accepts GoogleCloudDataplexV1DataProfileSpecArgs and GoogleCloudDataplexV1DataProfileSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataProfileSpecInput` via:
//
//	GoogleCloudDataplexV1DataProfileSpecArgs{...}
type GoogleCloudDataplexV1DataProfileSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataProfileSpecOutput() GoogleCloudDataplexV1DataProfileSpecOutput
	ToGoogleCloudDataplexV1DataProfileSpecOutputWithContext(context.Context) GoogleCloudDataplexV1DataProfileSpecOutput
}

// DataProfileScan related setting.
type GoogleCloudDataplexV1DataProfileSpecArgs struct {
}

func (GoogleCloudDataplexV1DataProfileSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataProfileSpecArgs) ToGoogleCloudDataplexV1DataProfileSpecOutput() GoogleCloudDataplexV1DataProfileSpecOutput {
	return i.ToGoogleCloudDataplexV1DataProfileSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataProfileSpecArgs) ToGoogleCloudDataplexV1DataProfileSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataProfileSpecOutput)
}

func (i GoogleCloudDataplexV1DataProfileSpecArgs) ToGoogleCloudDataplexV1DataProfileSpecPtrOutput() GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataProfileSpecArgs) ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataProfileSpecOutput).ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataProfileSpecPtrInput is an input type that accepts GoogleCloudDataplexV1DataProfileSpecArgs, GoogleCloudDataplexV1DataProfileSpecPtr and GoogleCloudDataplexV1DataProfileSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataProfileSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1DataProfileSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataProfileSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataProfileSpecPtrOutput() GoogleCloudDataplexV1DataProfileSpecPtrOutput
	ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataProfileSpecPtrOutput
}

type googleCloudDataplexV1DataProfileSpecPtrType GoogleCloudDataplexV1DataProfileSpecArgs

func GoogleCloudDataplexV1DataProfileSpecPtr(v *GoogleCloudDataplexV1DataProfileSpecArgs) GoogleCloudDataplexV1DataProfileSpecPtrInput {
	return (*googleCloudDataplexV1DataProfileSpecPtrType)(v)
}

func (*googleCloudDataplexV1DataProfileSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataProfileSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataProfileSpecPtrType) ToGoogleCloudDataplexV1DataProfileSpecPtrOutput() GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataProfileSpecPtrType) ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataProfileSpecPtrOutput)
}

// DataProfileScan related setting.
type GoogleCloudDataplexV1DataProfileSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileSpecOutput) ToGoogleCloudDataplexV1DataProfileSpecOutput() GoogleCloudDataplexV1DataProfileSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileSpecOutput) ToGoogleCloudDataplexV1DataProfileSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileSpecOutput) ToGoogleCloudDataplexV1DataProfileSpecPtrOutput() GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataProfileSpecOutput) ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataProfileSpec) *GoogleCloudDataplexV1DataProfileSpec {
		return &v
	}).(GoogleCloudDataplexV1DataProfileSpecPtrOutput)
}

type GoogleCloudDataplexV1DataProfileSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataProfileSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileSpecPtrOutput) ToGoogleCloudDataplexV1DataProfileSpecPtrOutput() GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileSpecPtrOutput) ToGoogleCloudDataplexV1DataProfileSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileSpecPtrOutput) Elem() GoogleCloudDataplexV1DataProfileSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataProfileSpec) GoogleCloudDataplexV1DataProfileSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataProfileSpec
		return ret
	}).(GoogleCloudDataplexV1DataProfileSpecOutput)
}

// DataProfileScan related setting.
type GoogleCloudDataplexV1DataProfileSpecResponse struct {
}

// DataProfileScan related setting.
type GoogleCloudDataplexV1DataProfileSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataProfileSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataProfileSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataProfileSpecResponseOutput) ToGoogleCloudDataplexV1DataProfileSpecResponseOutput() GoogleCloudDataplexV1DataProfileSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataProfileSpecResponseOutput) ToGoogleCloudDataplexV1DataProfileSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataProfileSpecResponseOutput {
	return o
}

// DataQualityDimensionResult provides a more detailed, per-dimension view of the results.
type GoogleCloudDataplexV1DataQualityDimensionResultResponse struct {
	// Whether the dimension passed or failed.
	Passed bool `pulumi:"passed"`
}

// DataQualityDimensionResult provides a more detailed, per-dimension view of the results.
type GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityDimensionResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput) ToGoogleCloudDataplexV1DataQualityDimensionResultResponseOutput() GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput) ToGoogleCloudDataplexV1DataQualityDimensionResultResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput {
	return o
}

// Whether the dimension passed or failed.
func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput) Passed() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityDimensionResultResponse) bool { return v.Passed }).(pulumi.BoolOutput)
}

type GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataQualityDimensionResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput() GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataQualityDimensionResultResponse {
		return vs[0].([]GoogleCloudDataplexV1DataQualityDimensionResultResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput)
}

// The output of a DataQualityScan.
type GoogleCloudDataplexV1DataQualityResultResponse struct {
	// A list of results at the dimension level.
	Dimensions []GoogleCloudDataplexV1DataQualityDimensionResultResponse `pulumi:"dimensions"`
	// Overall data quality result -- true if all rules passed.
	Passed bool `pulumi:"passed"`
	// The count of rows processed.
	RowCount string `pulumi:"rowCount"`
	// A list of all the rules in a job, and their results.
	Rules []GoogleCloudDataplexV1DataQualityRuleResultResponse `pulumi:"rules"`
	// The data scanned for this result.
	ScannedData GoogleCloudDataplexV1ScannedDataResponse `pulumi:"scannedData"`
}

// The output of a DataQualityScan.
type GoogleCloudDataplexV1DataQualityResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) ToGoogleCloudDataplexV1DataQualityResultResponseOutput() GoogleCloudDataplexV1DataQualityResultResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) ToGoogleCloudDataplexV1DataQualityResultResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityResultResponseOutput {
	return o
}

// A list of results at the dimension level.
func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) Dimensions() GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityResultResponse) []GoogleCloudDataplexV1DataQualityDimensionResultResponse {
		return v.Dimensions
	}).(GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput)
}

// Overall data quality result -- true if all rules passed.
func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) Passed() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityResultResponse) bool { return v.Passed }).(pulumi.BoolOutput)
}

// The count of rows processed.
func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) RowCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityResultResponse) string { return v.RowCount }).(pulumi.StringOutput)
}

// A list of all the rules in a job, and their results.
func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) Rules() GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityResultResponse) []GoogleCloudDataplexV1DataQualityRuleResultResponse {
		return v.Rules
	}).(GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput)
}

// The data scanned for this result.
func (o GoogleCloudDataplexV1DataQualityResultResponseOutput) ScannedData() GoogleCloudDataplexV1ScannedDataResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityResultResponse) GoogleCloudDataplexV1ScannedDataResponse {
		return v.ScannedData
	}).(GoogleCloudDataplexV1ScannedDataResponseOutput)
}

// A rule captures data quality intent about a data source.
type GoogleCloudDataplexV1DataQualityRule struct {
	// Optional. The unnested column which this rule is evaluated against.
	Column *string `pulumi:"column"`
	// The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
	Dimension string `pulumi:"dimension"`
	// Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
	IgnoreNull *bool `pulumi:"ignoreNull"`
	// ColumnMap rule which evaluates whether each column value is null.
	NonNullExpectation *GoogleCloudDataplexV1DataQualityRuleNonNullExpectation `pulumi:"nonNullExpectation"`
	// ColumnMap rule which evaluates whether each column value lies between a specified range.
	RangeExpectation *GoogleCloudDataplexV1DataQualityRuleRangeExpectation `pulumi:"rangeExpectation"`
	// ColumnMap rule which evaluates whether each column value matches a specified regex.
	RegexExpectation *GoogleCloudDataplexV1DataQualityRuleRegexExpectation `pulumi:"regexExpectation"`
	// Table rule which evaluates whether each row passes the specified condition.
	RowConditionExpectation *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation `pulumi:"rowConditionExpectation"`
	// ColumnMap rule which evaluates whether each column value is contained by a specified set.
	SetExpectation *GoogleCloudDataplexV1DataQualityRuleSetExpectation `pulumi:"setExpectation"`
	// ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
	StatisticRangeExpectation *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation `pulumi:"statisticRangeExpectation"`
	// Table rule which evaluates whether the provided expression is true.
	TableConditionExpectation *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation `pulumi:"tableConditionExpectation"`
	// Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
	Threshold *float64 `pulumi:"threshold"`
	// ColumnAggregate rule which evaluates whether the column has duplicates.
	UniquenessExpectation *GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation `pulumi:"uniquenessExpectation"`
}

// GoogleCloudDataplexV1DataQualityRuleInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleArgs and GoogleCloudDataplexV1DataQualityRuleOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleArgs{...}
type GoogleCloudDataplexV1DataQualityRuleInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleOutput() GoogleCloudDataplexV1DataQualityRuleOutput
	ToGoogleCloudDataplexV1DataQualityRuleOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleOutput
}

// A rule captures data quality intent about a data source.
type GoogleCloudDataplexV1DataQualityRuleArgs struct {
	// Optional. The unnested column which this rule is evaluated against.
	Column pulumi.StringPtrInput `pulumi:"column"`
	// The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
	Dimension pulumi.StringInput `pulumi:"dimension"`
	// Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
	IgnoreNull pulumi.BoolPtrInput `pulumi:"ignoreNull"`
	// ColumnMap rule which evaluates whether each column value is null.
	NonNullExpectation GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput `pulumi:"nonNullExpectation"`
	// ColumnMap rule which evaluates whether each column value lies between a specified range.
	RangeExpectation GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput `pulumi:"rangeExpectation"`
	// ColumnMap rule which evaluates whether each column value matches a specified regex.
	RegexExpectation GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput `pulumi:"regexExpectation"`
	// Table rule which evaluates whether each row passes the specified condition.
	RowConditionExpectation GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput `pulumi:"rowConditionExpectation"`
	// ColumnMap rule which evaluates whether each column value is contained by a specified set.
	SetExpectation GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput `pulumi:"setExpectation"`
	// ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
	StatisticRangeExpectation GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput `pulumi:"statisticRangeExpectation"`
	// Table rule which evaluates whether the provided expression is true.
	TableConditionExpectation GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput `pulumi:"tableConditionExpectation"`
	// Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// ColumnAggregate rule which evaluates whether the column has duplicates.
	UniquenessExpectation GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput `pulumi:"uniquenessExpectation"`
}

func (GoogleCloudDataplexV1DataQualityRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRule)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleArgs) ToGoogleCloudDataplexV1DataQualityRuleOutput() GoogleCloudDataplexV1DataQualityRuleOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleArgs) ToGoogleCloudDataplexV1DataQualityRuleOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleOutput)
}

// GoogleCloudDataplexV1DataQualityRuleArrayInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleArray and GoogleCloudDataplexV1DataQualityRuleArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleArrayInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleArray{ GoogleCloudDataplexV1DataQualityRuleArgs{...} }
type GoogleCloudDataplexV1DataQualityRuleArrayInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleArrayOutput() GoogleCloudDataplexV1DataQualityRuleArrayOutput
	ToGoogleCloudDataplexV1DataQualityRuleArrayOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleArrayOutput
}

type GoogleCloudDataplexV1DataQualityRuleArray []GoogleCloudDataplexV1DataQualityRuleInput

func (GoogleCloudDataplexV1DataQualityRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataQualityRule)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleArray) ToGoogleCloudDataplexV1DataQualityRuleArrayOutput() GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleArray) ToGoogleCloudDataplexV1DataQualityRuleArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleArrayOutput)
}

// A rule captures data quality intent about a data source.
type GoogleCloudDataplexV1DataQualityRuleOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRule)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleOutput) ToGoogleCloudDataplexV1DataQualityRuleOutput() GoogleCloudDataplexV1DataQualityRuleOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleOutput) ToGoogleCloudDataplexV1DataQualityRuleOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleOutput {
	return o
}

// Optional. The unnested column which this rule is evaluated against.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *string { return v.Column }).(pulumi.StringPtrOutput)
}

// The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
func (o GoogleCloudDataplexV1DataQualityRuleOutput) Dimension() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) string { return v.Dimension }).(pulumi.StringOutput)
}

// Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) IgnoreNull() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *bool { return v.IgnoreNull }).(pulumi.BoolPtrOutput)
}

// ColumnMap rule which evaluates whether each column value is null.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) NonNullExpectation() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleNonNullExpectation {
		return v.NonNullExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput)
}

// ColumnMap rule which evaluates whether each column value lies between a specified range.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) RangeExpectation() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleRangeExpectation {
		return v.RangeExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput)
}

// ColumnMap rule which evaluates whether each column value matches a specified regex.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) RegexExpectation() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleRegexExpectation {
		return v.RegexExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput)
}

// Table rule which evaluates whether each row passes the specified condition.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) RowConditionExpectation() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation {
		return v.RowConditionExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput)
}

// ColumnMap rule which evaluates whether each column value is contained by a specified set.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) SetExpectation() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleSetExpectation {
		return v.SetExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput)
}

// ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) StatisticRangeExpectation() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation {
		return v.StatisticRangeExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput)
}

// Table rule which evaluates whether the provided expression is true.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) TableConditionExpectation() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation {
		return v.TableConditionExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput)
}

// Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
func (o GoogleCloudDataplexV1DataQualityRuleOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// ColumnAggregate rule which evaluates whether the column has duplicates.
func (o GoogleCloudDataplexV1DataQualityRuleOutput) UniquenessExpectation() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRule) *GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation {
		return v.UniquenessExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataQualityRule)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleArrayOutput() GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataQualityRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataQualityRule {
		return vs[0].([]GoogleCloudDataplexV1DataQualityRule)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataQualityRuleOutput)
}

// Evaluates whether each column value is null.
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectation struct {
}

// GoogleCloudDataplexV1DataQualityRuleNonNullExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs and GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleNonNullExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput
}

// Evaluates whether each column value is null.
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs struct {
}

func (GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleNonNullExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs, GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtr and GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleNonNullExpectationPtrType GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleNonNullExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleNonNullExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleNonNullExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleNonNullExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleNonNullExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput)
}

// Evaluates whether each column value is null.
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleNonNullExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleNonNullExpectation) *GoogleCloudDataplexV1DataQualityRuleNonNullExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleNonNullExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleNonNullExpectation) GoogleCloudDataplexV1DataQualityRuleNonNullExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleNonNullExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput)
}

// Evaluates whether each column value is null.
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponse struct {
}

// Evaluates whether each column value is null.
type GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput {
	return o
}

// Evaluates whether each column value lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleRangeExpectation struct {
	// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MaxValue *string `pulumi:"maxValue"`
	// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MinValue *string `pulumi:"minValue"`
	// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled *bool `pulumi:"strictMaxEnabled"`
	// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled *bool `pulumi:"strictMinEnabled"`
}

// GoogleCloudDataplexV1DataQualityRuleRangeExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs and GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRangeExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput
}

// Evaluates whether each column value lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs struct {
	// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MaxValue pulumi.StringPtrInput `pulumi:"maxValue"`
	// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MinValue pulumi.StringPtrInput `pulumi:"minValue"`
	// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled pulumi.BoolPtrInput `pulumi:"strictMaxEnabled"`
	// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled pulumi.BoolPtrInput `pulumi:"strictMinEnabled"`
}

func (GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRangeExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs, GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtr and GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleRangeExpectationPtrType GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleRangeExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleRangeExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRangeExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleRangeExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleRangeExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput)
}

// Evaluates whether each column value lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRangeExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *GoogleCloudDataplexV1DataQualityRuleRangeExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput)
}

// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) StrictMaxEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *bool { return v.StrictMaxEnabled }).(pulumi.BoolPtrOutput)
}

// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput) StrictMinEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *bool { return v.StrictMinEnabled }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRangeExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectation) GoogleCloudDataplexV1DataQualityRuleRangeExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleRangeExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput)
}

// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *string {
		if v == nil {
			return nil
		}
		return v.MaxValue
	}).(pulumi.StringPtrOutput)
}

// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *string {
		if v == nil {
			return nil
		}
		return v.MinValue
	}).(pulumi.StringPtrOutput)
}

// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) StrictMaxEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *bool {
		if v == nil {
			return nil
		}
		return v.StrictMaxEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput) StrictMinEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRangeExpectation) *bool {
		if v == nil {
			return nil
		}
		return v.StrictMinEnabled
	}).(pulumi.BoolPtrOutput)
}

// Evaluates whether each column value lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse struct {
	// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MaxValue string `pulumi:"maxValue"`
	// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
	MinValue string `pulumi:"minValue"`
	// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled bool `pulumi:"strictMaxEnabled"`
	// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled bool `pulumi:"strictMinEnabled"`
}

// Evaluates whether each column value lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput {
	return o
}

// Optional. The maximum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) MaxValue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse) string { return v.MaxValue }).(pulumi.StringOutput)
}

// Optional. The minimum column value allowed for a row to pass this validation. At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) MinValue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse) string { return v.MinValue }).(pulumi.StringOutput)
}

// Optional. Whether each value needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) StrictMaxEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse) bool { return v.StrictMaxEnabled }).(pulumi.BoolOutput)
}

// Optional. Whether each value needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput) StrictMinEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse) bool { return v.StrictMinEnabled }).(pulumi.BoolOutput)
}

// Evaluates whether each column value matches a specified regex.
type GoogleCloudDataplexV1DataQualityRuleRegexExpectation struct {
	// A regular expression the column value is expected to match.
	Regex *string `pulumi:"regex"`
}

// GoogleCloudDataplexV1DataQualityRuleRegexExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs and GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRegexExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput
}

// Evaluates whether each column value matches a specified regex.
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs struct {
	// A regular expression the column value is expected to match.
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRegexExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs, GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtr and GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleRegexExpectationPtrType GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleRegexExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleRegexExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRegexExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleRegexExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleRegexExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput)
}

// Evaluates whether each column value matches a specified regex.
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRegexExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleRegexExpectation) *GoogleCloudDataplexV1DataQualityRuleRegexExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput)
}

// A regular expression the column value is expected to match.
func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRegexExpectation) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRegexExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRegexExpectation) GoogleCloudDataplexV1DataQualityRuleRegexExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleRegexExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput)
}

// A regular expression the column value is expected to match.
func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRegexExpectation) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

// Evaluates whether each column value matches a specified regex.
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponse struct {
	// A regular expression the column value is expected to match.
	Regex string `pulumi:"regex"`
}

// Evaluates whether each column value matches a specified regex.
type GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput {
	return o
}

// A regular expression the column value is expected to match.
func (o GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponse) string { return v.Regex }).(pulumi.StringOutput)
}

// A rule captures data quality intent about a data source.
type GoogleCloudDataplexV1DataQualityRuleResponse struct {
	// Optional. The unnested column which this rule is evaluated against.
	Column string `pulumi:"column"`
	// The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
	Dimension string `pulumi:"dimension"`
	// Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
	IgnoreNull bool `pulumi:"ignoreNull"`
	// ColumnMap rule which evaluates whether each column value is null.
	NonNullExpectation GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponse `pulumi:"nonNullExpectation"`
	// ColumnMap rule which evaluates whether each column value lies between a specified range.
	RangeExpectation GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse `pulumi:"rangeExpectation"`
	// ColumnMap rule which evaluates whether each column value matches a specified regex.
	RegexExpectation GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponse `pulumi:"regexExpectation"`
	// Table rule which evaluates whether each row passes the specified condition.
	RowConditionExpectation GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponse `pulumi:"rowConditionExpectation"`
	// ColumnMap rule which evaluates whether each column value is contained by a specified set.
	SetExpectation GoogleCloudDataplexV1DataQualityRuleSetExpectationResponse `pulumi:"setExpectation"`
	// ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
	StatisticRangeExpectation GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse `pulumi:"statisticRangeExpectation"`
	// Table rule which evaluates whether the provided expression is true.
	TableConditionExpectation GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponse `pulumi:"tableConditionExpectation"`
	// Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
	Threshold float64 `pulumi:"threshold"`
	// ColumnAggregate rule which evaluates whether the column has duplicates.
	UniquenessExpectation GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponse `pulumi:"uniquenessExpectation"`
}

// A rule captures data quality intent about a data source.
type GoogleCloudDataplexV1DataQualityRuleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleResponseOutput() GoogleCloudDataplexV1DataQualityRuleResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleResponseOutput {
	return o
}

// Optional. The unnested column which this rule is evaluated against.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) string { return v.Column }).(pulumi.StringOutput)
}

// The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) Dimension() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) string { return v.Dimension }).(pulumi.StringOutput)
}

// Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) IgnoreNull() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) bool { return v.IgnoreNull }).(pulumi.BoolOutput)
}

// ColumnMap rule which evaluates whether each column value is null.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) NonNullExpectation() GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponse {
		return v.NonNullExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput)
}

// ColumnMap rule which evaluates whether each column value lies between a specified range.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) RangeExpectation() GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponse {
		return v.RangeExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput)
}

// ColumnMap rule which evaluates whether each column value matches a specified regex.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) RegexExpectation() GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponse {
		return v.RegexExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput)
}

// Table rule which evaluates whether each row passes the specified condition.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) RowConditionExpectation() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponse {
		return v.RowConditionExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput)
}

// ColumnMap rule which evaluates whether each column value is contained by a specified set.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) SetExpectation() GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleSetExpectationResponse {
		return v.SetExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput)
}

// ColumnAggregate rule which evaluates whether the column aggregate statistic lies between a specified range.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) StatisticRangeExpectation() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse {
		return v.StatisticRangeExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput)
}

// Table rule which evaluates whether the provided expression is true.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) TableConditionExpectation() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponse {
		return v.TableConditionExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput)
}

// Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// ColumnAggregate rule which evaluates whether the column has duplicates.
func (o GoogleCloudDataplexV1DataQualityRuleResponseOutput) UniquenessExpectation() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResponse) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponse {
		return v.UniquenessExpectation
	}).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput)
}

type GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataQualityRuleResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleResponseArrayOutput() GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataQualityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataQualityRuleResponse {
		return vs[0].([]GoogleCloudDataplexV1DataQualityRuleResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataQualityRuleResponseOutput)
}

// DataQualityRuleResult provides a more detailed, per-rule view of the results.
type GoogleCloudDataplexV1DataQualityRuleResultResponse struct {
	// The number of rows a rule was evaluated against. This field is only valid for ColumnMap type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.
	EvaluatedCount string `pulumi:"evaluatedCount"`
	// The query to find rows that did not pass this rule. Only applies to ColumnMap and RowCondition rules.
	FailingRowsQuery string `pulumi:"failingRowsQuery"`
	// The number of rows with null values in the specified column.
	NullCount string `pulumi:"nullCount"`
	// The ratio of passed_count / evaluated_count. This field is only valid for ColumnMap type rules.
	PassRatio float64 `pulumi:"passRatio"`
	// Whether the rule passed or failed.
	Passed bool `pulumi:"passed"`
	// The number of rows which passed a rule evaluation. This field is only valid for ColumnMap type rules.
	PassedCount string `pulumi:"passedCount"`
	// The rule specified in the DataQualitySpec, as is.
	Rule GoogleCloudDataplexV1DataQualityRuleResponse `pulumi:"rule"`
}

// DataQualityRuleResult provides a more detailed, per-rule view of the results.
type GoogleCloudDataplexV1DataQualityRuleResultResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleResultResponseOutput() GoogleCloudDataplexV1DataQualityRuleResultResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleResultResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleResultResponseOutput {
	return o
}

// The number of rows a rule was evaluated against. This field is only valid for ColumnMap type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) EvaluatedCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) string { return v.EvaluatedCount }).(pulumi.StringOutput)
}

// The query to find rows that did not pass this rule. Only applies to ColumnMap and RowCondition rules.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) FailingRowsQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) string { return v.FailingRowsQuery }).(pulumi.StringOutput)
}

// The number of rows with null values in the specified column.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) NullCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) string { return v.NullCount }).(pulumi.StringOutput)
}

// The ratio of passed_count / evaluated_count. This field is only valid for ColumnMap type rules.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) PassRatio() pulumi.Float64Output {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) float64 { return v.PassRatio }).(pulumi.Float64Output)
}

// Whether the rule passed or failed.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) Passed() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) bool { return v.Passed }).(pulumi.BoolOutput)
}

// The number of rows which passed a rule evaluation. This field is only valid for ColumnMap type rules.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) PassedCount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) string { return v.PassedCount }).(pulumi.StringOutput)
}

// The rule specified in the DataQualitySpec, as is.
func (o GoogleCloudDataplexV1DataQualityRuleResultResponseOutput) Rule() GoogleCloudDataplexV1DataQualityRuleResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleResultResponse) GoogleCloudDataplexV1DataQualityRuleResponse {
		return v.Rule
	}).(GoogleCloudDataplexV1DataQualityRuleResponseOutput)
}

type GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1DataQualityRuleResultResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput() GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput) ToGoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1DataQualityRuleResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1DataQualityRuleResultResponse {
		return vs[0].([]GoogleCloudDataplexV1DataQualityRuleResultResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1DataQualityRuleResultResponseOutput)
}

// Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation struct {
	// The SQL expression.
	SqlExpression *string `pulumi:"sqlExpression"`
}

// GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs and GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput
}

// Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs struct {
	// The SQL expression.
	SqlExpression pulumi.StringPtrInput `pulumi:"sqlExpression"`
}

func (GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs, GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtr and GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrType GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput)
}

// Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation) *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput)
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput) SqlExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation) *string { return v.SqlExpression }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput)
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput) SqlExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation) *string {
		if v == nil {
			return nil
		}
		return v.SqlExpression
	}).(pulumi.StringPtrOutput)
}

// Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponse struct {
	// The SQL expression.
	SqlExpression string `pulumi:"sqlExpression"`
}

// Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
type GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput {
	return o
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput) SqlExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponse) string {
		return v.SqlExpression
	}).(pulumi.StringOutput)
}

// Evaluates whether each column value is contained by a specified set.
type GoogleCloudDataplexV1DataQualityRuleSetExpectation struct {
	// Expected values for the column value.
	Values []string `pulumi:"values"`
}

// GoogleCloudDataplexV1DataQualityRuleSetExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs and GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleSetExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleSetExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput
}

// Evaluates whether each column value is contained by a specified set.
type GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs struct {
	// Expected values for the column value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleSetExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs, GoogleCloudDataplexV1DataQualityRuleSetExpectationPtr and GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleSetExpectationPtrType GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleSetExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleSetExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleSetExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleSetExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleSetExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleSetExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput)
}

// Evaluates whether each column value is contained by a specified set.
type GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleSetExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleSetExpectation) *GoogleCloudDataplexV1DataQualityRuleSetExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput)
}

// Expected values for the column value.
func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleSetExpectation) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleSetExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleSetExpectation) GoogleCloudDataplexV1DataQualityRuleSetExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleSetExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput)
}

// Expected values for the column value.
func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleSetExpectation) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

// Evaluates whether each column value is contained by a specified set.
type GoogleCloudDataplexV1DataQualityRuleSetExpectationResponse struct {
	// Expected values for the column value.
	Values []string `pulumi:"values"`
}

// Evaluates whether each column value is contained by a specified set.
type GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleSetExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput {
	return o
}

// Expected values for the column value.
func (o GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleSetExpectationResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

// Evaluates whether the column aggregate statistic lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation struct {
	// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MaxValue *string `pulumi:"maxValue"`
	// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MinValue  *string                                                                 `pulumi:"minValue"`
	Statistic *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatistic `pulumi:"statistic"`
	// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled *bool `pulumi:"strictMaxEnabled"`
	// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled *bool `pulumi:"strictMinEnabled"`
}

// GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs and GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput
}

// Evaluates whether the column aggregate statistic lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs struct {
	// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MaxValue pulumi.StringPtrInput `pulumi:"maxValue"`
	// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MinValue  pulumi.StringPtrInput                                                          `pulumi:"minValue"`
	Statistic GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticPtrInput `pulumi:"statistic"`
	// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled pulumi.BoolPtrInput `pulumi:"strictMaxEnabled"`
	// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled pulumi.BoolPtrInput `pulumi:"strictMinEnabled"`
}

func (GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs, GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtr and GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrType GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput)
}

// Evaluates whether the column aggregate statistic lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput)
}

// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) Statistic() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatistic {
		return v.Statistic
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticPtrOutput)
}

// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) StrictMaxEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *bool { return v.StrictMaxEnabled }).(pulumi.BoolPtrOutput)
}

// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput) StrictMinEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *bool { return v.StrictMinEnabled }).(pulumi.BoolPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput)
}

// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *string {
		if v == nil {
			return nil
		}
		return v.MaxValue
	}).(pulumi.StringPtrOutput)
}

// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *string {
		if v == nil {
			return nil
		}
		return v.MinValue
	}).(pulumi.StringPtrOutput)
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) Statistic() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatistic {
		if v == nil {
			return nil
		}
		return v.Statistic
	}).(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticPtrOutput)
}

// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) StrictMaxEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *bool {
		if v == nil {
			return nil
		}
		return v.StrictMaxEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput) StrictMinEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation) *bool {
		if v == nil {
			return nil
		}
		return v.StrictMinEnabled
	}).(pulumi.BoolPtrOutput)
}

// Evaluates whether the column aggregate statistic lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse struct {
	// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MaxValue string `pulumi:"maxValue"`
	// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
	MinValue  string `pulumi:"minValue"`
	Statistic string `pulumi:"statistic"`
	// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
	StrictMaxEnabled bool `pulumi:"strictMaxEnabled"`
	// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
	StrictMinEnabled bool `pulumi:"strictMinEnabled"`
}

// Evaluates whether the column aggregate statistic lies between a specified range.
type GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput {
	return o
}

// The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) MaxValue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse) string {
		return v.MaxValue
	}).(pulumi.StringOutput)
}

// The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) MinValue() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse) string {
		return v.MinValue
	}).(pulumi.StringOutput)
}

func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) Statistic() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse) string {
		return v.Statistic
	}).(pulumi.StringOutput)
}

// Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) StrictMaxEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse) bool {
		return v.StrictMaxEnabled
	}).(pulumi.BoolOutput)
}

// Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false.
func (o GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput) StrictMinEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponse) bool {
		return v.StrictMinEnabled
	}).(pulumi.BoolOutput)
}

// Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation struct {
	// The SQL expression.
	SqlExpression *string `pulumi:"sqlExpression"`
}

// GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs and GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput
}

// Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs struct {
	// The SQL expression.
	SqlExpression pulumi.StringPtrInput `pulumi:"sqlExpression"`
}

func (GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs, GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtr and GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrType GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput)
}

// Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation) *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput)
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput) SqlExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation) *string { return v.SqlExpression }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput)
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput) SqlExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation) *string {
		if v == nil {
			return nil
		}
		return v.SqlExpression
	}).(pulumi.StringPtrOutput)
}

// Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponse struct {
	// The SQL expression.
	SqlExpression string `pulumi:"sqlExpression"`
}

// Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
type GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput {
	return o
}

// The SQL expression.
func (o GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput) SqlExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponse) string {
		return v.SqlExpression
	}).(pulumi.StringOutput)
}

// Evaluates whether the column has duplicates.
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation struct {
}

// GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs and GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationInput` via:
//
//	GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs{...}
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput
	ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput
}

// Evaluates whether the column has duplicates.
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs struct {
}

func (GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput)
}

func (i GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput).ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs, GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtr and GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput
	ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput
}

type googleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrType GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs

func GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtr(v *GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput {
	return (*googleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrType)(v)
}

func (*googleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrType) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput)
}

// Evaluates whether the column has duplicates.
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation) *GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation {
		return &v
	}).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput)
}

type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput) Elem() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualityRuleUniquenessExpectation
		return ret
	}).(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput)
}

// Evaluates whether the column has duplicates.
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponse struct {
}

// Evaluates whether the column has duplicates.
type GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput() GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput) ToGoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput {
	return o
}

// DataQualityScan related setting.
type GoogleCloudDataplexV1DataQualitySpec struct {
	// The list of rules to evaluate against a data source. At least one rule is required.
	Rules []GoogleCloudDataplexV1DataQualityRule `pulumi:"rules"`
}

// GoogleCloudDataplexV1DataQualitySpecInput is an input type that accepts GoogleCloudDataplexV1DataQualitySpecArgs and GoogleCloudDataplexV1DataQualitySpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualitySpecInput` via:
//
//	GoogleCloudDataplexV1DataQualitySpecArgs{...}
type GoogleCloudDataplexV1DataQualitySpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualitySpecOutput() GoogleCloudDataplexV1DataQualitySpecOutput
	ToGoogleCloudDataplexV1DataQualitySpecOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualitySpecOutput
}

// DataQualityScan related setting.
type GoogleCloudDataplexV1DataQualitySpecArgs struct {
	// The list of rules to evaluate against a data source. At least one rule is required.
	Rules GoogleCloudDataplexV1DataQualityRuleArrayInput `pulumi:"rules"`
}

func (GoogleCloudDataplexV1DataQualitySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualitySpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataQualitySpecArgs) ToGoogleCloudDataplexV1DataQualitySpecOutput() GoogleCloudDataplexV1DataQualitySpecOutput {
	return i.ToGoogleCloudDataplexV1DataQualitySpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualitySpecArgs) ToGoogleCloudDataplexV1DataQualitySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualitySpecOutput)
}

func (i GoogleCloudDataplexV1DataQualitySpecArgs) ToGoogleCloudDataplexV1DataQualitySpecPtrOutput() GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataQualitySpecArgs) ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualitySpecOutput).ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataQualitySpecPtrInput is an input type that accepts GoogleCloudDataplexV1DataQualitySpecArgs, GoogleCloudDataplexV1DataQualitySpecPtr and GoogleCloudDataplexV1DataQualitySpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataQualitySpecPtrInput` via:
//
//	        GoogleCloudDataplexV1DataQualitySpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataQualitySpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataQualitySpecPtrOutput() GoogleCloudDataplexV1DataQualitySpecPtrOutput
	ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataQualitySpecPtrOutput
}

type googleCloudDataplexV1DataQualitySpecPtrType GoogleCloudDataplexV1DataQualitySpecArgs

func GoogleCloudDataplexV1DataQualitySpecPtr(v *GoogleCloudDataplexV1DataQualitySpecArgs) GoogleCloudDataplexV1DataQualitySpecPtrInput {
	return (*googleCloudDataplexV1DataQualitySpecPtrType)(v)
}

func (*googleCloudDataplexV1DataQualitySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualitySpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataQualitySpecPtrType) ToGoogleCloudDataplexV1DataQualitySpecPtrOutput() GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataQualitySpecPtrType) ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataQualitySpecPtrOutput)
}

// DataQualityScan related setting.
type GoogleCloudDataplexV1DataQualitySpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualitySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualitySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualitySpecOutput) ToGoogleCloudDataplexV1DataQualitySpecOutput() GoogleCloudDataplexV1DataQualitySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualitySpecOutput) ToGoogleCloudDataplexV1DataQualitySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualitySpecOutput) ToGoogleCloudDataplexV1DataQualitySpecPtrOutput() GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return o.ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataQualitySpecOutput) ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataQualitySpec) *GoogleCloudDataplexV1DataQualitySpec {
		return &v
	}).(GoogleCloudDataplexV1DataQualitySpecPtrOutput)
}

// The list of rules to evaluate against a data source. At least one rule is required.
func (o GoogleCloudDataplexV1DataQualitySpecOutput) Rules() GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualitySpec) []GoogleCloudDataplexV1DataQualityRule { return v.Rules }).(GoogleCloudDataplexV1DataQualityRuleArrayOutput)
}

type GoogleCloudDataplexV1DataQualitySpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualitySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataQualitySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualitySpecPtrOutput) ToGoogleCloudDataplexV1DataQualitySpecPtrOutput() GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualitySpecPtrOutput) ToGoogleCloudDataplexV1DataQualitySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualitySpecPtrOutput) Elem() GoogleCloudDataplexV1DataQualitySpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualitySpec) GoogleCloudDataplexV1DataQualitySpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataQualitySpec
		return ret
	}).(GoogleCloudDataplexV1DataQualitySpecOutput)
}

// The list of rules to evaluate against a data source. At least one rule is required.
func (o GoogleCloudDataplexV1DataQualitySpecPtrOutput) Rules() GoogleCloudDataplexV1DataQualityRuleArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataQualitySpec) []GoogleCloudDataplexV1DataQualityRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(GoogleCloudDataplexV1DataQualityRuleArrayOutput)
}

// DataQualityScan related setting.
type GoogleCloudDataplexV1DataQualitySpecResponse struct {
	// The list of rules to evaluate against a data source. At least one rule is required.
	Rules []GoogleCloudDataplexV1DataQualityRuleResponse `pulumi:"rules"`
}

// DataQualityScan related setting.
type GoogleCloudDataplexV1DataQualitySpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataQualitySpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataQualitySpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataQualitySpecResponseOutput) ToGoogleCloudDataplexV1DataQualitySpecResponseOutput() GoogleCloudDataplexV1DataQualitySpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataQualitySpecResponseOutput) ToGoogleCloudDataplexV1DataQualitySpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataQualitySpecResponseOutput {
	return o
}

// The list of rules to evaluate against a data source. At least one rule is required.
func (o GoogleCloudDataplexV1DataQualitySpecResponseOutput) Rules() GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataQualitySpecResponse) []GoogleCloudDataplexV1DataQualityRuleResponse {
		return v.Rules
	}).(GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput)
}

// DataScan execution settings.
type GoogleCloudDataplexV1DataScanExecutionSpec struct {
	// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
	Field *string `pulumi:"field"`
	// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
	Trigger *GoogleCloudDataplexV1Trigger `pulumi:"trigger"`
}

// GoogleCloudDataplexV1DataScanExecutionSpecInput is an input type that accepts GoogleCloudDataplexV1DataScanExecutionSpecArgs and GoogleCloudDataplexV1DataScanExecutionSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataScanExecutionSpecInput` via:
//
//	GoogleCloudDataplexV1DataScanExecutionSpecArgs{...}
type GoogleCloudDataplexV1DataScanExecutionSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataScanExecutionSpecOutput() GoogleCloudDataplexV1DataScanExecutionSpecOutput
	ToGoogleCloudDataplexV1DataScanExecutionSpecOutputWithContext(context.Context) GoogleCloudDataplexV1DataScanExecutionSpecOutput
}

// DataScan execution settings.
type GoogleCloudDataplexV1DataScanExecutionSpecArgs struct {
	// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
	Trigger GoogleCloudDataplexV1TriggerPtrInput `pulumi:"trigger"`
}

func (GoogleCloudDataplexV1DataScanExecutionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataScanExecutionSpecArgs) ToGoogleCloudDataplexV1DataScanExecutionSpecOutput() GoogleCloudDataplexV1DataScanExecutionSpecOutput {
	return i.ToGoogleCloudDataplexV1DataScanExecutionSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataScanExecutionSpecArgs) ToGoogleCloudDataplexV1DataScanExecutionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataScanExecutionSpecOutput)
}

func (i GoogleCloudDataplexV1DataScanExecutionSpecArgs) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutput() GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataScanExecutionSpecArgs) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataScanExecutionSpecOutput).ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1DataScanExecutionSpecPtrInput is an input type that accepts GoogleCloudDataplexV1DataScanExecutionSpecArgs, GoogleCloudDataplexV1DataScanExecutionSpecPtr and GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataScanExecutionSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1DataScanExecutionSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1DataScanExecutionSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutput() GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput
	ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput
}

type googleCloudDataplexV1DataScanExecutionSpecPtrType GoogleCloudDataplexV1DataScanExecutionSpecArgs

func GoogleCloudDataplexV1DataScanExecutionSpecPtr(v *GoogleCloudDataplexV1DataScanExecutionSpecArgs) GoogleCloudDataplexV1DataScanExecutionSpecPtrInput {
	return (*googleCloudDataplexV1DataScanExecutionSpecPtrType)(v)
}

func (*googleCloudDataplexV1DataScanExecutionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataScanExecutionSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1DataScanExecutionSpecPtrType) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutput() GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1DataScanExecutionSpecPtrType) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput)
}

// DataScan execution settings.
type GoogleCloudDataplexV1DataScanExecutionSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataScanExecutionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecOutput() GoogleCloudDataplexV1DataScanExecutionSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutput() GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1DataScanExecutionSpec) *GoogleCloudDataplexV1DataScanExecutionSpec {
		return &v
	}).(GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput)
}

// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionSpec) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
func (o GoogleCloudDataplexV1DataScanExecutionSpecOutput) Trigger() GoogleCloudDataplexV1TriggerPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionSpec) *GoogleCloudDataplexV1Trigger { return v.Trigger }).(GoogleCloudDataplexV1TriggerPtrOutput)
}

type GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1DataScanExecutionSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutput() GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) Elem() GoogleCloudDataplexV1DataScanExecutionSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataScanExecutionSpec) GoogleCloudDataplexV1DataScanExecutionSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1DataScanExecutionSpec
		return ret
	}).(GoogleCloudDataplexV1DataScanExecutionSpecOutput)
}

// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
func (o GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataScanExecutionSpec) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
func (o GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput) Trigger() GoogleCloudDataplexV1TriggerPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1DataScanExecutionSpec) *GoogleCloudDataplexV1Trigger {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(GoogleCloudDataplexV1TriggerPtrOutput)
}

// DataScan execution settings.
type GoogleCloudDataplexV1DataScanExecutionSpecResponse struct {
	// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
	Field string `pulumi:"field"`
	// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
	Trigger GoogleCloudDataplexV1TriggerResponse `pulumi:"trigger"`
}

// DataScan execution settings.
type GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecResponseOutput() GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput) ToGoogleCloudDataplexV1DataScanExecutionSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput {
	return o
}

// Immutable. The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time.If not specified, a data scan will run for all data in the table.
func (o GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionSpecResponse) string { return v.Field }).(pulumi.StringOutput)
}

// Optional. Spec related to how often and when a scan should be triggered.If not specified, the default is OnDemand, which means the scan will not run until the user calls RunDataScan API.
func (o GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput) Trigger() GoogleCloudDataplexV1TriggerResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionSpecResponse) GoogleCloudDataplexV1TriggerResponse {
		return v.Trigger
	}).(GoogleCloudDataplexV1TriggerResponseOutput)
}

// Status of the data scan execution.
type GoogleCloudDataplexV1DataScanExecutionStatusResponse struct {
	// The time when the latest DataScanJob ended.
	LatestJobEndTime string `pulumi:"latestJobEndTime"`
	// The time when the latest DataScanJob started.
	LatestJobStartTime string `pulumi:"latestJobStartTime"`
}

// Status of the data scan execution.
type GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput) ToGoogleCloudDataplexV1DataScanExecutionStatusResponseOutput() GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput) ToGoogleCloudDataplexV1DataScanExecutionStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput {
	return o
}

// The time when the latest DataScanJob ended.
func (o GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput) LatestJobEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionStatusResponse) string { return v.LatestJobEndTime }).(pulumi.StringOutput)
}

// The time when the latest DataScanJob started.
func (o GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput) LatestJobStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataScanExecutionStatusResponse) string { return v.LatestJobStartTime }).(pulumi.StringOutput)
}

// The data source for DataScan.
type GoogleCloudDataplexV1DataSource struct {
	// Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
	Entity *string `pulumi:"entity"`
}

// GoogleCloudDataplexV1DataSourceInput is an input type that accepts GoogleCloudDataplexV1DataSourceArgs and GoogleCloudDataplexV1DataSourceOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1DataSourceInput` via:
//
//	GoogleCloudDataplexV1DataSourceArgs{...}
type GoogleCloudDataplexV1DataSourceInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1DataSourceOutput() GoogleCloudDataplexV1DataSourceOutput
	ToGoogleCloudDataplexV1DataSourceOutputWithContext(context.Context) GoogleCloudDataplexV1DataSourceOutput
}

// The data source for DataScan.
type GoogleCloudDataplexV1DataSourceArgs struct {
	// Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
	Entity pulumi.StringPtrInput `pulumi:"entity"`
}

func (GoogleCloudDataplexV1DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataSource)(nil)).Elem()
}

func (i GoogleCloudDataplexV1DataSourceArgs) ToGoogleCloudDataplexV1DataSourceOutput() GoogleCloudDataplexV1DataSourceOutput {
	return i.ToGoogleCloudDataplexV1DataSourceOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1DataSourceArgs) ToGoogleCloudDataplexV1DataSourceOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1DataSourceOutput)
}

// The data source for DataScan.
type GoogleCloudDataplexV1DataSourceOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataSource)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataSourceOutput) ToGoogleCloudDataplexV1DataSourceOutput() GoogleCloudDataplexV1DataSourceOutput {
	return o
}

func (o GoogleCloudDataplexV1DataSourceOutput) ToGoogleCloudDataplexV1DataSourceOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataSourceOutput {
	return o
}

// Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
func (o GoogleCloudDataplexV1DataSourceOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataSource) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// The data source for DataScan.
type GoogleCloudDataplexV1DataSourceResponse struct {
	// Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
	Entity string `pulumi:"entity"`
}

// The data source for DataScan.
type GoogleCloudDataplexV1DataSourceResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1DataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1DataSourceResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1DataSourceResponseOutput) ToGoogleCloudDataplexV1DataSourceResponseOutput() GoogleCloudDataplexV1DataSourceResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1DataSourceResponseOutput) ToGoogleCloudDataplexV1DataSourceResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1DataSourceResponseOutput {
	return o
}

// Immutable. The Dataplex entity that represents the data source (e.g. BigQuery table) for DataScan, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}.
func (o GoogleCloudDataplexV1DataSourceResponseOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1DataSourceResponse) string { return v.Entity }).(pulumi.StringOutput)
}

// Provides compatibility information for a specific metadata store.
type GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse struct {
	// Whether the entity is compatible and can be represented in the metadata store.
	Compatible bool `pulumi:"compatible"`
	// Provides additional detail if the entity is incompatible with the metadata store.
	Reason string `pulumi:"reason"`
}

// Provides compatibility information for a specific metadata store.
type GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput) ToGoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput() GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput) ToGoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput {
	return o
}

// Whether the entity is compatible and can be represented in the metadata store.
func (o GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput) Compatible() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse) bool { return v.Compatible }).(pulumi.BoolOutput)
}

// Provides additional detail if the entity is incompatible with the metadata store.
func (o GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse) string { return v.Reason }).(pulumi.StringOutput)
}

// Provides compatibility information for various metadata stores.
type GoogleCloudDataplexV1EntityCompatibilityStatusResponse struct {
	// Whether this entity is compatible with BigQuery.
	Bigquery GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse `pulumi:"bigquery"`
	// Whether this entity is compatible with Hive Metastore.
	HiveMetastore GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse `pulumi:"hiveMetastore"`
}

// Provides compatibility information for various metadata stores.
type GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EntityCompatibilityStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput) ToGoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput() GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput) ToGoogleCloudDataplexV1EntityCompatibilityStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput {
	return o
}

// Whether this entity is compatible with BigQuery.
func (o GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput) Bigquery() GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EntityCompatibilityStatusResponse) GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse {
		return v.Bigquery
	}).(GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput)
}

// Whether this entity is compatible with Hive Metastore.
func (o GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput) HiveMetastore() GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EntityCompatibilityStatusResponse) GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponse {
		return v.HiveMetastore
	}).(GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput)
}

type GoogleCloudDataplexV1EnvironmentEndpointsResponse struct {
	// URI to serve notebook APIs
	Notebooks string `pulumi:"notebooks"`
	// URI to serve SQL APIs
	Sql string `pulumi:"sql"`
}

type GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentEndpointsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput) ToGoogleCloudDataplexV1EnvironmentEndpointsResponseOutput() GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput) ToGoogleCloudDataplexV1EnvironmentEndpointsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput {
	return o
}

// URI to serve notebook APIs
func (o GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput) Notebooks() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentEndpointsResponse) string { return v.Notebooks }).(pulumi.StringOutput)
}

// URI to serve SQL APIs
func (o GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentEndpointsResponse) string { return v.Sql }).(pulumi.StringOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpec struct {
	// Optional. Compute resources needed for analyze interactive workloads.
	Compute *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources `pulumi:"compute"`
	// Software Runtime Configuration for analyze interactive workloads.
	OsImage GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime `pulumi:"osImage"`
}

// GoogleCloudDataplexV1EnvironmentInfrastructureSpecInput is an input type that accepts GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs and GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentInfrastructureSpecInput` via:
//
//	GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs{...}
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput
	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs struct {
	// Optional. Compute resources needed for analyze interactive workloads.
	Compute GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput `pulumi:"compute"`
	// Software Runtime Configuration for analyze interactive workloads.
	OsImage GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeInput `pulumi:"osImage"`
}

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput {
	return o
}

// Optional. Compute resources needed for analyze interactive workloads.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput) Compute() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpec) *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources {
		return v.Compute
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput)
}

// Software Runtime Configuration for analyze interactive workloads.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput) OsImage() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpec) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime {
		return v.OsImage
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput)
}

// Compute resources associated with the analyze interactive workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources struct {
	// Optional. Size in GB of the disk. Default is 100 GB.
	DiskSizeGb *int `pulumi:"diskSizeGb"`
	// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
	MaxNodeCount *int `pulumi:"maxNodeCount"`
	// Optional. Total number of nodes in the sessions created for this environment.
	NodeCount *int `pulumi:"nodeCount"`
}

// GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesInput is an input type that accepts GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs and GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesInput` via:
//
//	GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs{...}
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput
	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput
}

// Compute resources associated with the analyze interactive workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs struct {
	// Optional. Size in GB of the disk. Default is 100 GB.
	DiskSizeGb pulumi.IntPtrInput `pulumi:"diskSizeGb"`
	// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
	MaxNodeCount pulumi.IntPtrInput `pulumi:"maxNodeCount"`
	// Optional. Total number of nodes in the sessions created for this environment.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
}

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources)(nil)).Elem()
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput)
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput).ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput is an input type that accepts GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs, GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtr and GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput` via:
//
//	        GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput
	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput
}

type googleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrType GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs

func GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtr(v *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput {
	return (*googleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrType)(v)
}

func (*googleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources)(nil)).Elem()
}

func (i *googleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrType) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrType) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput)
}

// Compute resources associated with the analyze interactive workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return o.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources {
		return &v
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput)
}

// Optional. Size in GB of the disk. Default is 100 GB.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int { return v.DiskSizeGb }).(pulumi.IntPtrOutput)
}

// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int { return v.MaxNodeCount }).(pulumi.IntPtrOutput)
}

// Optional. Total number of nodes in the sessions created for this environment.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) Elem() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
		return ret
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput)
}

// Optional. Size in GB of the disk. Default is 100 GB.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) DiskSizeGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.DiskSizeGb
	}).(pulumi.IntPtrOutput)
}

// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Optional. Total number of nodes in the sessions created for this environment.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Compute resources associated with the analyze interactive workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse struct {
	// Optional. Size in GB of the disk. Default is 100 GB.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Optional. Total number of nodes in the sessions created for this environment.
	NodeCount int `pulumi:"nodeCount"`
}

// Compute resources associated with the analyze interactive workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput {
	return o
}

// Optional. Size in GB of the disk. Default is 100 GB.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse) int {
		return v.DiskSizeGb
	}).(pulumi.IntOutput)
}

// Optional. Max configurable nodes. If max_node_count > node_count, then auto-scaling is enabled.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse) int {
		return v.MaxNodeCount
	}).(pulumi.IntOutput)
}

// Optional. Total number of nodes in the sessions created for this environment.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse) int {
		return v.NodeCount
	}).(pulumi.IntOutput)
}

// Software Runtime Configuration to run Analyze.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime struct {
	// Dataplex Image version.
	ImageVersion string `pulumi:"imageVersion"`
	// Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaLibraries []string `pulumi:"javaLibraries"`
	// Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
	Properties map[string]string `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages []string `pulumi:"pythonPackages"`
}

// GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeInput is an input type that accepts GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs and GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeInput` via:
//
//	GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs{...}
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput
	ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput
}

// Software Runtime Configuration to run Analyze.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs struct {
	// Dataplex Image version.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaLibraries pulumi.StringArrayInput `pulumi:"javaLibraries"`
	// Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages pulumi.StringArrayInput `pulumi:"pythonPackages"`
}

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime)(nil)).Elem()
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput)
}

// Software Runtime Configuration to run Analyze.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput {
	return o
}

// Dataplex Image version.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) JavaLibraries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime) []string {
		return v.JavaLibraries
	}).(pulumi.StringArrayOutput)
}

// Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime) map[string]string {
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput) PythonPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime) []string {
		return v.PythonPackages
	}).(pulumi.StringArrayOutput)
}

// Software Runtime Configuration to run Analyze.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse struct {
	// Dataplex Image version.
	ImageVersion string `pulumi:"imageVersion"`
	// Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaLibraries []string `pulumi:"javaLibraries"`
	// Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
	Properties map[string]string `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages []string `pulumi:"pythonPackages"`
}

// Software Runtime Configuration to run Analyze.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput {
	return o
}

// Dataplex Image version.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse) string {
		return v.ImageVersion
	}).(pulumi.StringOutput)
}

// Optional. List of Java jars to be included in the runtime environment. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) JavaLibraries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse) []string {
		return v.JavaLibraries
	}).(pulumi.StringArrayOutput)
}

// Optional. Spark properties to provide configuration for use in sessions created for this environment. The properties to set on daemon config files. Property keys are specified in prefix:property format. The prefix must be "spark".
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse) map[string]string {
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput) PythonPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse) []string {
		return v.PythonPackages
	}).(pulumi.StringArrayOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse struct {
	// Optional. Compute resources needed for analyze interactive workloads.
	Compute GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse `pulumi:"compute"`
	// Software Runtime Configuration for analyze interactive workloads.
	OsImage GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse `pulumi:"osImage"`
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput() GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput) ToGoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput {
	return o
}

// Optional. Compute resources needed for analyze interactive workloads.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput) Compute() GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse) GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponse {
		return v.Compute
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput)
}

// Software Runtime Configuration for analyze interactive workloads.
func (o GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput) OsImage() GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponse) GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponse {
		return v.OsImage
	}).(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput)
}

type GoogleCloudDataplexV1EnvironmentSessionSpec struct {
	// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
	EnableFastStartup *bool `pulumi:"enableFastStartup"`
	// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
	MaxIdleDuration *string `pulumi:"maxIdleDuration"`
}

// GoogleCloudDataplexV1EnvironmentSessionSpecInput is an input type that accepts GoogleCloudDataplexV1EnvironmentSessionSpecArgs and GoogleCloudDataplexV1EnvironmentSessionSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentSessionSpecInput` via:
//
//	GoogleCloudDataplexV1EnvironmentSessionSpecArgs{...}
type GoogleCloudDataplexV1EnvironmentSessionSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentSessionSpecOutput() GoogleCloudDataplexV1EnvironmentSessionSpecOutput
	ToGoogleCloudDataplexV1EnvironmentSessionSpecOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecOutput
}

type GoogleCloudDataplexV1EnvironmentSessionSpecArgs struct {
	// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
	EnableFastStartup pulumi.BoolPtrInput `pulumi:"enableFastStartup"`
	// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
	MaxIdleDuration pulumi.StringPtrInput `pulumi:"maxIdleDuration"`
}

func (GoogleCloudDataplexV1EnvironmentSessionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1EnvironmentSessionSpecArgs) ToGoogleCloudDataplexV1EnvironmentSessionSpecOutput() GoogleCloudDataplexV1EnvironmentSessionSpecOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentSessionSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentSessionSpecArgs) ToGoogleCloudDataplexV1EnvironmentSessionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentSessionSpecOutput)
}

func (i GoogleCloudDataplexV1EnvironmentSessionSpecArgs) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput() GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1EnvironmentSessionSpecArgs) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentSessionSpecOutput).ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1EnvironmentSessionSpecPtrInput is an input type that accepts GoogleCloudDataplexV1EnvironmentSessionSpecArgs, GoogleCloudDataplexV1EnvironmentSessionSpecPtr and GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1EnvironmentSessionSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1EnvironmentSessionSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1EnvironmentSessionSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput() GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput
	ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput
}

type googleCloudDataplexV1EnvironmentSessionSpecPtrType GoogleCloudDataplexV1EnvironmentSessionSpecArgs

func GoogleCloudDataplexV1EnvironmentSessionSpecPtr(v *GoogleCloudDataplexV1EnvironmentSessionSpecArgs) GoogleCloudDataplexV1EnvironmentSessionSpecPtrInput {
	return (*googleCloudDataplexV1EnvironmentSessionSpecPtrType)(v)
}

func (*googleCloudDataplexV1EnvironmentSessionSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1EnvironmentSessionSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1EnvironmentSessionSpecPtrType) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput() GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1EnvironmentSessionSpecPtrType) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput)
}

type GoogleCloudDataplexV1EnvironmentSessionSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentSessionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecOutput() GoogleCloudDataplexV1EnvironmentSessionSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput() GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1EnvironmentSessionSpec) *GoogleCloudDataplexV1EnvironmentSessionSpec {
		return &v
	}).(GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput)
}

// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) EnableFastStartup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentSessionSpec) *bool { return v.EnableFastStartup }).(pulumi.BoolPtrOutput)
}

// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecOutput) MaxIdleDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentSessionSpec) *string { return v.MaxIdleDuration }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1EnvironmentSessionSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput() GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) Elem() GoogleCloudDataplexV1EnvironmentSessionSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentSessionSpec) GoogleCloudDataplexV1EnvironmentSessionSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1EnvironmentSessionSpec
		return ret
	}).(GoogleCloudDataplexV1EnvironmentSessionSpecOutput)
}

// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) EnableFastStartup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentSessionSpec) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFastStartup
	}).(pulumi.BoolPtrOutput)
}

// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput) MaxIdleDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1EnvironmentSessionSpec) *string {
		if v == nil {
			return nil
		}
		return v.MaxIdleDuration
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1EnvironmentSessionSpecResponse struct {
	// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
	EnableFastStartup bool `pulumi:"enableFastStartup"`
	// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
	MaxIdleDuration string `pulumi:"maxIdleDuration"`
}

type GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput() GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput) ToGoogleCloudDataplexV1EnvironmentSessionSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput {
	return o
}

// Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to "default", and with default configuration.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput) EnableFastStartup() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentSessionSpecResponse) bool { return v.EnableFastStartup }).(pulumi.BoolOutput)
}

// Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.
func (o GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput) MaxIdleDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentSessionSpecResponse) string { return v.MaxIdleDuration }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1EnvironmentSessionStatusResponse struct {
	// Queries over sessions to mark whether the environment is currently active or not
	Active bool `pulumi:"active"`
}

type GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput) ToGoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput() GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput) ToGoogleCloudDataplexV1EnvironmentSessionStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput {
	return o
}

// Queries over sessions to mark whether the environment is currently active or not
func (o GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1EnvironmentSessionStatusResponse) bool { return v.Active }).(pulumi.BoolOutput)
}

// A job represents an instance of a task.
type GoogleCloudDataplexV1JobResponse struct {
	// The time when the job ended.
	EndTime string `pulumi:"endTime"`
	// Additional information about the current state.
	Message string `pulumi:"message"`
	// The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.
	Name string `pulumi:"name"`
	// The number of times the job has been retried (excluding the initial attempt).
	RetryCount int `pulumi:"retryCount"`
	// The underlying service running a job.
	Service string `pulumi:"service"`
	// The full resource name for the job run under a particular service.
	ServiceJob string `pulumi:"serviceJob"`
	// The time when the job was started.
	StartTime string `pulumi:"startTime"`
	// Execution state for the job.
	State string `pulumi:"state"`
	// System generated globally unique ID for the job.
	Uid string `pulumi:"uid"`
}

// A job represents an instance of a task.
type GoogleCloudDataplexV1JobResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1JobResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1JobResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1JobResponseOutput) ToGoogleCloudDataplexV1JobResponseOutput() GoogleCloudDataplexV1JobResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1JobResponseOutput) ToGoogleCloudDataplexV1JobResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1JobResponseOutput {
	return o
}

// The time when the job ended.
func (o GoogleCloudDataplexV1JobResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Additional information about the current state.
func (o GoogleCloudDataplexV1JobResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The relative resource name of the job, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/tasks/{task_id}/jobs/{job_id}.
func (o GoogleCloudDataplexV1JobResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The number of times the job has been retried (excluding the initial attempt).
func (o GoogleCloudDataplexV1JobResponseOutput) RetryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) int { return v.RetryCount }).(pulumi.IntOutput)
}

// The underlying service running a job.
func (o GoogleCloudDataplexV1JobResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.Service }).(pulumi.StringOutput)
}

// The full resource name for the job run under a particular service.
func (o GoogleCloudDataplexV1JobResponseOutput) ServiceJob() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.ServiceJob }).(pulumi.StringOutput)
}

// The time when the job was started.
func (o GoogleCloudDataplexV1JobResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Execution state for the job.
func (o GoogleCloudDataplexV1JobResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.State }).(pulumi.StringOutput)
}

// System generated globally unique ID for the job.
func (o GoogleCloudDataplexV1JobResponseOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1JobResponse) string { return v.Uid }).(pulumi.StringOutput)
}

// Settings to manage association of Dataproc Metastore with a lake.
type GoogleCloudDataplexV1LakeMetastore struct {
	// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
	Service *string `pulumi:"service"`
}

// GoogleCloudDataplexV1LakeMetastoreInput is an input type that accepts GoogleCloudDataplexV1LakeMetastoreArgs and GoogleCloudDataplexV1LakeMetastoreOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1LakeMetastoreInput` via:
//
//	GoogleCloudDataplexV1LakeMetastoreArgs{...}
type GoogleCloudDataplexV1LakeMetastoreInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1LakeMetastoreOutput() GoogleCloudDataplexV1LakeMetastoreOutput
	ToGoogleCloudDataplexV1LakeMetastoreOutputWithContext(context.Context) GoogleCloudDataplexV1LakeMetastoreOutput
}

// Settings to manage association of Dataproc Metastore with a lake.
type GoogleCloudDataplexV1LakeMetastoreArgs struct {
	// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GoogleCloudDataplexV1LakeMetastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastore)(nil)).Elem()
}

func (i GoogleCloudDataplexV1LakeMetastoreArgs) ToGoogleCloudDataplexV1LakeMetastoreOutput() GoogleCloudDataplexV1LakeMetastoreOutput {
	return i.ToGoogleCloudDataplexV1LakeMetastoreOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1LakeMetastoreArgs) ToGoogleCloudDataplexV1LakeMetastoreOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1LakeMetastoreOutput)
}

func (i GoogleCloudDataplexV1LakeMetastoreArgs) ToGoogleCloudDataplexV1LakeMetastorePtrOutput() GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return i.ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1LakeMetastoreArgs) ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1LakeMetastoreOutput).ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1LakeMetastorePtrInput is an input type that accepts GoogleCloudDataplexV1LakeMetastoreArgs, GoogleCloudDataplexV1LakeMetastorePtr and GoogleCloudDataplexV1LakeMetastorePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1LakeMetastorePtrInput` via:
//
//	        GoogleCloudDataplexV1LakeMetastoreArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1LakeMetastorePtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1LakeMetastorePtrOutput() GoogleCloudDataplexV1LakeMetastorePtrOutput
	ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(context.Context) GoogleCloudDataplexV1LakeMetastorePtrOutput
}

type googleCloudDataplexV1LakeMetastorePtrType GoogleCloudDataplexV1LakeMetastoreArgs

func GoogleCloudDataplexV1LakeMetastorePtr(v *GoogleCloudDataplexV1LakeMetastoreArgs) GoogleCloudDataplexV1LakeMetastorePtrInput {
	return (*googleCloudDataplexV1LakeMetastorePtrType)(v)
}

func (*googleCloudDataplexV1LakeMetastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1LakeMetastore)(nil)).Elem()
}

func (i *googleCloudDataplexV1LakeMetastorePtrType) ToGoogleCloudDataplexV1LakeMetastorePtrOutput() GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return i.ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1LakeMetastorePtrType) ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1LakeMetastorePtrOutput)
}

// Settings to manage association of Dataproc Metastore with a lake.
type GoogleCloudDataplexV1LakeMetastoreOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1LakeMetastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastore)(nil)).Elem()
}

func (o GoogleCloudDataplexV1LakeMetastoreOutput) ToGoogleCloudDataplexV1LakeMetastoreOutput() GoogleCloudDataplexV1LakeMetastoreOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastoreOutput) ToGoogleCloudDataplexV1LakeMetastoreOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastoreOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastoreOutput) ToGoogleCloudDataplexV1LakeMetastorePtrOutput() GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return o.ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1LakeMetastoreOutput) ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1LakeMetastore) *GoogleCloudDataplexV1LakeMetastore {
		return &v
	}).(GoogleCloudDataplexV1LakeMetastorePtrOutput)
}

// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
func (o GoogleCloudDataplexV1LakeMetastoreOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastore) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1LakeMetastorePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1LakeMetastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1LakeMetastore)(nil)).Elem()
}

func (o GoogleCloudDataplexV1LakeMetastorePtrOutput) ToGoogleCloudDataplexV1LakeMetastorePtrOutput() GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastorePtrOutput) ToGoogleCloudDataplexV1LakeMetastorePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastorePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastorePtrOutput) Elem() GoogleCloudDataplexV1LakeMetastoreOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1LakeMetastore) GoogleCloudDataplexV1LakeMetastore {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1LakeMetastore
		return ret
	}).(GoogleCloudDataplexV1LakeMetastoreOutput)
}

// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
func (o GoogleCloudDataplexV1LakeMetastorePtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1LakeMetastore) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// Settings to manage association of Dataproc Metastore with a lake.
type GoogleCloudDataplexV1LakeMetastoreResponse struct {
	// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
	Service string `pulumi:"service"`
}

// Settings to manage association of Dataproc Metastore with a lake.
type GoogleCloudDataplexV1LakeMetastoreResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1LakeMetastoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastoreResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1LakeMetastoreResponseOutput) ToGoogleCloudDataplexV1LakeMetastoreResponseOutput() GoogleCloudDataplexV1LakeMetastoreResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastoreResponseOutput) ToGoogleCloudDataplexV1LakeMetastoreResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastoreResponseOutput {
	return o
}

// Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
func (o GoogleCloudDataplexV1LakeMetastoreResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastoreResponse) string { return v.Service }).(pulumi.StringOutput)
}

// Status of Lake and Dataproc Metastore service instance association.
type GoogleCloudDataplexV1LakeMetastoreStatusResponse struct {
	// The URI of the endpoint used to access the Metastore service.
	Endpoint string `pulumi:"endpoint"`
	// Additional information about the current status.
	Message string `pulumi:"message"`
	// Current state of association.
	State string `pulumi:"state"`
	// Last update time of the metastore status of the lake.
	UpdateTime string `pulumi:"updateTime"`
}

// Status of Lake and Dataproc Metastore service instance association.
type GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastoreStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) ToGoogleCloudDataplexV1LakeMetastoreStatusResponseOutput() GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) ToGoogleCloudDataplexV1LakeMetastoreStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput {
	return o
}

// The URI of the endpoint used to access the Metastore service.
func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastoreStatusResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Additional information about the current status.
func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastoreStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Current state of association.
func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastoreStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

// Last update time of the metastore status of the lake.
func (o GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1LakeMetastoreStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
type GoogleCloudDataplexV1ResourceAccessSpec struct {
	// Optional. The set of principals to be granted owner role on the resource.
	Owners []string `pulumi:"owners"`
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
	Readers []string `pulumi:"readers"`
	// Optional. The set of principals to be granted writer role on the resource.
	Writers []string `pulumi:"writers"`
}

// GoogleCloudDataplexV1ResourceAccessSpecInput is an input type that accepts GoogleCloudDataplexV1ResourceAccessSpecArgs and GoogleCloudDataplexV1ResourceAccessSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ResourceAccessSpecInput` via:
//
//	GoogleCloudDataplexV1ResourceAccessSpecArgs{...}
type GoogleCloudDataplexV1ResourceAccessSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ResourceAccessSpecOutput() GoogleCloudDataplexV1ResourceAccessSpecOutput
	ToGoogleCloudDataplexV1ResourceAccessSpecOutputWithContext(context.Context) GoogleCloudDataplexV1ResourceAccessSpecOutput
}

// ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
type GoogleCloudDataplexV1ResourceAccessSpecArgs struct {
	// Optional. The set of principals to be granted owner role on the resource.
	Owners pulumi.StringArrayInput `pulumi:"owners"`
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
	Readers pulumi.StringArrayInput `pulumi:"readers"`
	// Optional. The set of principals to be granted writer role on the resource.
	Writers pulumi.StringArrayInput `pulumi:"writers"`
}

func (GoogleCloudDataplexV1ResourceAccessSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ResourceAccessSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ResourceAccessSpecArgs) ToGoogleCloudDataplexV1ResourceAccessSpecOutput() GoogleCloudDataplexV1ResourceAccessSpecOutput {
	return i.ToGoogleCloudDataplexV1ResourceAccessSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ResourceAccessSpecArgs) ToGoogleCloudDataplexV1ResourceAccessSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ResourceAccessSpecOutput)
}

func (i GoogleCloudDataplexV1ResourceAccessSpecArgs) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutput() GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ResourceAccessSpecArgs) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ResourceAccessSpecOutput).ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ResourceAccessSpecPtrInput is an input type that accepts GoogleCloudDataplexV1ResourceAccessSpecArgs, GoogleCloudDataplexV1ResourceAccessSpecPtr and GoogleCloudDataplexV1ResourceAccessSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ResourceAccessSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1ResourceAccessSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ResourceAccessSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutput() GoogleCloudDataplexV1ResourceAccessSpecPtrOutput
	ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ResourceAccessSpecPtrOutput
}

type googleCloudDataplexV1ResourceAccessSpecPtrType GoogleCloudDataplexV1ResourceAccessSpecArgs

func GoogleCloudDataplexV1ResourceAccessSpecPtr(v *GoogleCloudDataplexV1ResourceAccessSpecArgs) GoogleCloudDataplexV1ResourceAccessSpecPtrInput {
	return (*googleCloudDataplexV1ResourceAccessSpecPtrType)(v)
}

func (*googleCloudDataplexV1ResourceAccessSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ResourceAccessSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1ResourceAccessSpecPtrType) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutput() GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ResourceAccessSpecPtrType) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ResourceAccessSpecPtrOutput)
}

// ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
type GoogleCloudDataplexV1ResourceAccessSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ResourceAccessSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ResourceAccessSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) ToGoogleCloudDataplexV1ResourceAccessSpecOutput() GoogleCloudDataplexV1ResourceAccessSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) ToGoogleCloudDataplexV1ResourceAccessSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutput() GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ResourceAccessSpec) *GoogleCloudDataplexV1ResourceAccessSpec {
		return &v
	}).(GoogleCloudDataplexV1ResourceAccessSpecPtrOutput)
}

// Optional. The set of principals to be granted owner role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpec) []string { return v.Owners }).(pulumi.StringArrayOutput)
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpec) []string { return v.Readers }).(pulumi.StringArrayOutput)
}

// Optional. The set of principals to be granted writer role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecOutput) Writers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpec) []string { return v.Writers }).(pulumi.StringArrayOutput)
}

type GoogleCloudDataplexV1ResourceAccessSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ResourceAccessSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutput() GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) ToGoogleCloudDataplexV1ResourceAccessSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) Elem() GoogleCloudDataplexV1ResourceAccessSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ResourceAccessSpec) GoogleCloudDataplexV1ResourceAccessSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ResourceAccessSpec
		return ret
	}).(GoogleCloudDataplexV1ResourceAccessSpecOutput)
}

// Optional. The set of principals to be granted owner role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ResourceAccessSpec) []string {
		if v == nil {
			return nil
		}
		return v.Owners
	}).(pulumi.StringArrayOutput)
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ResourceAccessSpec) []string {
		if v == nil {
			return nil
		}
		return v.Readers
	}).(pulumi.StringArrayOutput)
}

// Optional. The set of principals to be granted writer role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecPtrOutput) Writers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ResourceAccessSpec) []string {
		if v == nil {
			return nil
		}
		return v.Writers
	}).(pulumi.StringArrayOutput)
}

// ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
type GoogleCloudDataplexV1ResourceAccessSpecResponse struct {
	// Optional. The set of principals to be granted owner role on the resource.
	Owners []string `pulumi:"owners"`
	// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
	Readers []string `pulumi:"readers"`
	// Optional. The set of principals to be granted writer role on the resource.
	Writers []string `pulumi:"writers"`
}

// ResourceAccessSpec holds the access control configuration to be enforced on the resources, for example, Cloud Storage bucket, BigQuery dataset, BigQuery table.
type GoogleCloudDataplexV1ResourceAccessSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ResourceAccessSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) ToGoogleCloudDataplexV1ResourceAccessSpecResponseOutput() GoogleCloudDataplexV1ResourceAccessSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) ToGoogleCloudDataplexV1ResourceAccessSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ResourceAccessSpecResponseOutput {
	return o
}

// Optional. The set of principals to be granted owner role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) Owners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpecResponse) []string { return v.Owners }).(pulumi.StringArrayOutput)
}

// Optional. The format of strings follows the pattern followed by IAM in the bindings. user:{email}, serviceAccount:{email} group:{email}. The set of principals to be granted reader role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) Readers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpecResponse) []string { return v.Readers }).(pulumi.StringArrayOutput)
}

// Optional. The set of principals to be granted writer role on the resource.
func (o GoogleCloudDataplexV1ResourceAccessSpecResponseOutput) Writers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ResourceAccessSpecResponse) []string { return v.Writers }).(pulumi.StringArrayOutput)
}

// A data range denoted by a pair of start/end values of a field.
type GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse struct {
	// Value that marks the end of the range.
	End string `pulumi:"end"`
	// The field that contains values which monotonically increases over time (e.g. a timestamp column).
	Field string `pulumi:"field"`
	// Value that marks the start of the range.
	Start string `pulumi:"start"`
}

// A data range denoted by a pair of start/end values of a field.
type GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) ToGoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput() GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) ToGoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput {
	return o
}

// Value that marks the end of the range.
func (o GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse) string { return v.End }).(pulumi.StringOutput)
}

// The field that contains values which monotonically increases over time (e.g. a timestamp column).
func (o GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse) string { return v.Field }).(pulumi.StringOutput)
}

// Value that marks the start of the range.
func (o GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse) string { return v.Start }).(pulumi.StringOutput)
}

// The data scanned during processing (e.g. in incremental DataScan)
type GoogleCloudDataplexV1ScannedDataResponse struct {
	// The range denoted by values of an incremental field
	IncrementalField GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse `pulumi:"incrementalField"`
}

// The data scanned during processing (e.g. in incremental DataScan)
type GoogleCloudDataplexV1ScannedDataResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ScannedDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ScannedDataResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ScannedDataResponseOutput) ToGoogleCloudDataplexV1ScannedDataResponseOutput() GoogleCloudDataplexV1ScannedDataResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ScannedDataResponseOutput) ToGoogleCloudDataplexV1ScannedDataResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ScannedDataResponseOutput {
	return o
}

// The range denoted by values of an incremental field
func (o GoogleCloudDataplexV1ScannedDataResponseOutput) IncrementalField() GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ScannedDataResponse) GoogleCloudDataplexV1ScannedDataIncrementalFieldResponse {
		return v.IncrementalField
	}).(GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput)
}

// Schema information describing the structure and layout of the data.
type GoogleCloudDataplexV1Schema struct {
	// Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
	Fields []GoogleCloudDataplexV1SchemaSchemaField `pulumi:"fields"`
	// Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
	PartitionFields []GoogleCloudDataplexV1SchemaPartitionField `pulumi:"partitionFields"`
	// Optional. The structure of paths containing partition data within the entity.
	PartitionStyle *GoogleCloudDataplexV1SchemaPartitionStyle `pulumi:"partitionStyle"`
	// Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
	UserManaged bool `pulumi:"userManaged"`
}

// GoogleCloudDataplexV1SchemaInput is an input type that accepts GoogleCloudDataplexV1SchemaArgs and GoogleCloudDataplexV1SchemaOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1SchemaInput` via:
//
//	GoogleCloudDataplexV1SchemaArgs{...}
type GoogleCloudDataplexV1SchemaInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1SchemaOutput() GoogleCloudDataplexV1SchemaOutput
	ToGoogleCloudDataplexV1SchemaOutputWithContext(context.Context) GoogleCloudDataplexV1SchemaOutput
}

// Schema information describing the structure and layout of the data.
type GoogleCloudDataplexV1SchemaArgs struct {
	// Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
	Fields GoogleCloudDataplexV1SchemaSchemaFieldArrayInput `pulumi:"fields"`
	// Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
	PartitionFields GoogleCloudDataplexV1SchemaPartitionFieldArrayInput `pulumi:"partitionFields"`
	// Optional. The structure of paths containing partition data within the entity.
	PartitionStyle GoogleCloudDataplexV1SchemaPartitionStylePtrInput `pulumi:"partitionStyle"`
	// Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
	UserManaged pulumi.BoolInput `pulumi:"userManaged"`
}

func (GoogleCloudDataplexV1SchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1Schema)(nil)).Elem()
}

func (i GoogleCloudDataplexV1SchemaArgs) ToGoogleCloudDataplexV1SchemaOutput() GoogleCloudDataplexV1SchemaOutput {
	return i.ToGoogleCloudDataplexV1SchemaOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1SchemaArgs) ToGoogleCloudDataplexV1SchemaOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1SchemaOutput)
}

// Schema information describing the structure and layout of the data.
type GoogleCloudDataplexV1SchemaOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1Schema)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaOutput) ToGoogleCloudDataplexV1SchemaOutput() GoogleCloudDataplexV1SchemaOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaOutput) ToGoogleCloudDataplexV1SchemaOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaOutput {
	return o
}

// Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
func (o GoogleCloudDataplexV1SchemaOutput) Fields() GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Schema) []GoogleCloudDataplexV1SchemaSchemaField { return v.Fields }).(GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput)
}

// Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
func (o GoogleCloudDataplexV1SchemaOutput) PartitionFields() GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Schema) []GoogleCloudDataplexV1SchemaPartitionField {
		return v.PartitionFields
	}).(GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput)
}

// Optional. The structure of paths containing partition data within the entity.
func (o GoogleCloudDataplexV1SchemaOutput) PartitionStyle() GoogleCloudDataplexV1SchemaPartitionStylePtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Schema) *GoogleCloudDataplexV1SchemaPartitionStyle {
		return v.PartitionStyle
	}).(GoogleCloudDataplexV1SchemaPartitionStylePtrOutput)
}

// Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
func (o GoogleCloudDataplexV1SchemaOutput) UserManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Schema) bool { return v.UserManaged }).(pulumi.BoolOutput)
}

// Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.
type GoogleCloudDataplexV1SchemaPartitionField struct {
	// Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
	Name string `pulumi:"name"`
	// Immutable. The type of field.
	Type GoogleCloudDataplexV1SchemaPartitionFieldType `pulumi:"type"`
}

// GoogleCloudDataplexV1SchemaPartitionFieldInput is an input type that accepts GoogleCloudDataplexV1SchemaPartitionFieldArgs and GoogleCloudDataplexV1SchemaPartitionFieldOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1SchemaPartitionFieldInput` via:
//
//	GoogleCloudDataplexV1SchemaPartitionFieldArgs{...}
type GoogleCloudDataplexV1SchemaPartitionFieldInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1SchemaPartitionFieldOutput() GoogleCloudDataplexV1SchemaPartitionFieldOutput
	ToGoogleCloudDataplexV1SchemaPartitionFieldOutputWithContext(context.Context) GoogleCloudDataplexV1SchemaPartitionFieldOutput
}

// Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.
type GoogleCloudDataplexV1SchemaPartitionFieldArgs struct {
	// Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
	Name pulumi.StringInput `pulumi:"name"`
	// Immutable. The type of field.
	Type GoogleCloudDataplexV1SchemaPartitionFieldTypeInput `pulumi:"type"`
}

func (GoogleCloudDataplexV1SchemaPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaPartitionField)(nil)).Elem()
}

func (i GoogleCloudDataplexV1SchemaPartitionFieldArgs) ToGoogleCloudDataplexV1SchemaPartitionFieldOutput() GoogleCloudDataplexV1SchemaPartitionFieldOutput {
	return i.ToGoogleCloudDataplexV1SchemaPartitionFieldOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1SchemaPartitionFieldArgs) ToGoogleCloudDataplexV1SchemaPartitionFieldOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1SchemaPartitionFieldOutput)
}

// GoogleCloudDataplexV1SchemaPartitionFieldArrayInput is an input type that accepts GoogleCloudDataplexV1SchemaPartitionFieldArray and GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1SchemaPartitionFieldArrayInput` via:
//
//	GoogleCloudDataplexV1SchemaPartitionFieldArray{ GoogleCloudDataplexV1SchemaPartitionFieldArgs{...} }
type GoogleCloudDataplexV1SchemaPartitionFieldArrayInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutput() GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput
	ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutputWithContext(context.Context) GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput
}

type GoogleCloudDataplexV1SchemaPartitionFieldArray []GoogleCloudDataplexV1SchemaPartitionFieldInput

func (GoogleCloudDataplexV1SchemaPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaPartitionField)(nil)).Elem()
}

func (i GoogleCloudDataplexV1SchemaPartitionFieldArray) ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutput() GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput {
	return i.ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1SchemaPartitionFieldArray) ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput)
}

// Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.
type GoogleCloudDataplexV1SchemaPartitionFieldOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaPartitionField)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldOutput() GoogleCloudDataplexV1SchemaPartitionFieldOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldOutput {
	return o
}

// Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
func (o GoogleCloudDataplexV1SchemaPartitionFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaPartitionField) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The type of field.
func (o GoogleCloudDataplexV1SchemaPartitionFieldOutput) Type() GoogleCloudDataplexV1SchemaPartitionFieldTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaPartitionField) GoogleCloudDataplexV1SchemaPartitionFieldType {
		return v.Type
	}).(GoogleCloudDataplexV1SchemaPartitionFieldTypeOutput)
}

type GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaPartitionField)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutput() GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1SchemaPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1SchemaPartitionField {
		return vs[0].([]GoogleCloudDataplexV1SchemaPartitionField)[vs[1].(int)]
	}).(GoogleCloudDataplexV1SchemaPartitionFieldOutput)
}

// Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.
type GoogleCloudDataplexV1SchemaPartitionFieldResponse struct {
	// Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
	Name string `pulumi:"name"`
	// Immutable. The type of field.
	Type string `pulumi:"type"`
}

// Represents a key field within the entity's partition structure. You could have up to 20 partition fields, but only the first 10 partitions have the filtering ability due to performance consideration. Note: Partition fields are immutable.
type GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaPartitionFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldResponseOutput() GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput {
	return o
}

// Partition field name must consist of letters, numbers, and underscores only, with a maximum of length of 256 characters, and must begin with a letter or underscore..
func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaPartitionFieldResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The type of field.
func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaPartitionFieldResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaPartitionFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput() GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput) ToGoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1SchemaPartitionFieldResponse {
		return vs[0].([]GoogleCloudDataplexV1SchemaPartitionFieldResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput)
}

// Schema information describing the structure and layout of the data.
type GoogleCloudDataplexV1SchemaResponse struct {
	// Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
	Fields []GoogleCloudDataplexV1SchemaSchemaFieldResponse `pulumi:"fields"`
	// Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
	PartitionFields []GoogleCloudDataplexV1SchemaPartitionFieldResponse `pulumi:"partitionFields"`
	// Optional. The structure of paths containing partition data within the entity.
	PartitionStyle string `pulumi:"partitionStyle"`
	// Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
	UserManaged bool `pulumi:"userManaged"`
}

// Schema information describing the structure and layout of the data.
type GoogleCloudDataplexV1SchemaResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaResponseOutput) ToGoogleCloudDataplexV1SchemaResponseOutput() GoogleCloudDataplexV1SchemaResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaResponseOutput) ToGoogleCloudDataplexV1SchemaResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaResponseOutput {
	return o
}

// Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
func (o GoogleCloudDataplexV1SchemaResponseOutput) Fields() GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaResponse) []GoogleCloudDataplexV1SchemaSchemaFieldResponse {
		return v.Fields
	}).(GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput)
}

// Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
func (o GoogleCloudDataplexV1SchemaResponseOutput) PartitionFields() GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaResponse) []GoogleCloudDataplexV1SchemaPartitionFieldResponse {
		return v.PartitionFields
	}).(GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput)
}

// Optional. The structure of paths containing partition data within the entity.
func (o GoogleCloudDataplexV1SchemaResponseOutput) PartitionStyle() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaResponse) string { return v.PartitionStyle }).(pulumi.StringOutput)
}

// Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
func (o GoogleCloudDataplexV1SchemaResponseOutput) UserManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaResponse) bool { return v.UserManaged }).(pulumi.BoolOutput)
}

// Represents a column field within a table schema.
type GoogleCloudDataplexV1SchemaSchemaField struct {
	// Optional. User friendly field description. Must be less than or equal to 1024 characters.
	Description *string `pulumi:"description"`
	// Optional. Any nested field for complex types.
	Fields []GoogleCloudDataplexV1SchemaSchemaField `pulumi:"fields"`
	// Additional field semantics.
	Mode GoogleCloudDataplexV1SchemaSchemaFieldMode `pulumi:"mode"`
	// The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
	Name string `pulumi:"name"`
	// The type of field.
	Type GoogleCloudDataplexV1SchemaSchemaFieldType `pulumi:"type"`
}

// GoogleCloudDataplexV1SchemaSchemaFieldInput is an input type that accepts GoogleCloudDataplexV1SchemaSchemaFieldArgs and GoogleCloudDataplexV1SchemaSchemaFieldOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1SchemaSchemaFieldInput` via:
//
//	GoogleCloudDataplexV1SchemaSchemaFieldArgs{...}
type GoogleCloudDataplexV1SchemaSchemaFieldInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1SchemaSchemaFieldOutput() GoogleCloudDataplexV1SchemaSchemaFieldOutput
	ToGoogleCloudDataplexV1SchemaSchemaFieldOutputWithContext(context.Context) GoogleCloudDataplexV1SchemaSchemaFieldOutput
}

// Represents a column field within a table schema.
type GoogleCloudDataplexV1SchemaSchemaFieldArgs struct {
	// Optional. User friendly field description. Must be less than or equal to 1024 characters.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Optional. Any nested field for complex types.
	Fields GoogleCloudDataplexV1SchemaSchemaFieldArrayInput `pulumi:"fields"`
	// Additional field semantics.
	Mode GoogleCloudDataplexV1SchemaSchemaFieldModeInput `pulumi:"mode"`
	// The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of field.
	Type GoogleCloudDataplexV1SchemaSchemaFieldTypeInput `pulumi:"type"`
}

func (GoogleCloudDataplexV1SchemaSchemaFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaSchemaField)(nil)).Elem()
}

func (i GoogleCloudDataplexV1SchemaSchemaFieldArgs) ToGoogleCloudDataplexV1SchemaSchemaFieldOutput() GoogleCloudDataplexV1SchemaSchemaFieldOutput {
	return i.ToGoogleCloudDataplexV1SchemaSchemaFieldOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1SchemaSchemaFieldArgs) ToGoogleCloudDataplexV1SchemaSchemaFieldOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1SchemaSchemaFieldOutput)
}

// GoogleCloudDataplexV1SchemaSchemaFieldArrayInput is an input type that accepts GoogleCloudDataplexV1SchemaSchemaFieldArray and GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1SchemaSchemaFieldArrayInput` via:
//
//	GoogleCloudDataplexV1SchemaSchemaFieldArray{ GoogleCloudDataplexV1SchemaSchemaFieldArgs{...} }
type GoogleCloudDataplexV1SchemaSchemaFieldArrayInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutput() GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput
	ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutputWithContext(context.Context) GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput
}

type GoogleCloudDataplexV1SchemaSchemaFieldArray []GoogleCloudDataplexV1SchemaSchemaFieldInput

func (GoogleCloudDataplexV1SchemaSchemaFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaSchemaField)(nil)).Elem()
}

func (i GoogleCloudDataplexV1SchemaSchemaFieldArray) ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutput() GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return i.ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1SchemaSchemaFieldArray) ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput)
}

// Represents a column field within a table schema.
type GoogleCloudDataplexV1SchemaSchemaFieldOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaSchemaFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaSchemaField)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldOutput() GoogleCloudDataplexV1SchemaSchemaFieldOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldOutput {
	return o
}

// Optional. User friendly field description. Must be less than or equal to 1024 characters.
func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaField) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Optional. Any nested field for complex types.
func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) Fields() GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaField) []GoogleCloudDataplexV1SchemaSchemaField {
		return v.Fields
	}).(GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput)
}

// Additional field semantics.
func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) Mode() GoogleCloudDataplexV1SchemaSchemaFieldModeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaField) GoogleCloudDataplexV1SchemaSchemaFieldMode {
		return v.Mode
	}).(GoogleCloudDataplexV1SchemaSchemaFieldModeOutput)
}

// The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaField) string { return v.Name }).(pulumi.StringOutput)
}

// The type of field.
func (o GoogleCloudDataplexV1SchemaSchemaFieldOutput) Type() GoogleCloudDataplexV1SchemaSchemaFieldTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaField) GoogleCloudDataplexV1SchemaSchemaFieldType {
		return v.Type
	}).(GoogleCloudDataplexV1SchemaSchemaFieldTypeOutput)
}

type GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaSchemaField)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutput() GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1SchemaSchemaFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1SchemaSchemaField {
		return vs[0].([]GoogleCloudDataplexV1SchemaSchemaField)[vs[1].(int)]
	}).(GoogleCloudDataplexV1SchemaSchemaFieldOutput)
}

// Represents a column field within a table schema.
type GoogleCloudDataplexV1SchemaSchemaFieldResponse struct {
	// Optional. User friendly field description. Must be less than or equal to 1024 characters.
	Description string `pulumi:"description"`
	// Optional. Any nested field for complex types.
	Fields []GoogleCloudDataplexV1SchemaSchemaFieldResponse `pulumi:"fields"`
	// Additional field semantics.
	Mode string `pulumi:"mode"`
	// The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
	Name string `pulumi:"name"`
	// The type of field.
	Type string `pulumi:"type"`
}

// Represents a column field within a table schema.
type GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1SchemaSchemaFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldResponseOutput() GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput {
	return o
}

// Optional. User friendly field description. Must be less than or equal to 1024 characters.
func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaFieldResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Any nested field for complex types.
func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) Fields() GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaFieldResponse) []GoogleCloudDataplexV1SchemaSchemaFieldResponse {
		return v.Fields
	}).(GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput)
}

// Additional field semantics.
func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaFieldResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the field. Must contain only letters, numbers and underscores, with a maximum length of 767 characters, and must begin with a letter or underscore.
func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaFieldResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of field.
func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1SchemaSchemaFieldResponse) string { return v.Type }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudDataplexV1SchemaSchemaFieldResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput() GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput) ToGoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutputWithContext(ctx context.Context) GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput {
	return o
}

func (o GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudDataplexV1SchemaSchemaFieldResponse {
		return vs[0].([]GoogleCloudDataplexV1SchemaSchemaFieldResponse)[vs[1].(int)]
	}).(GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput)
}

// Describes the access mechanism of the data within its storage location.
type GoogleCloudDataplexV1StorageAccessResponse struct {
	// Describes the read access mechanism of the data. Not user settable.
	Read string `pulumi:"read"`
}

// Describes the access mechanism of the data within its storage location.
type GoogleCloudDataplexV1StorageAccessResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageAccessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageAccessResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageAccessResponseOutput) ToGoogleCloudDataplexV1StorageAccessResponseOutput() GoogleCloudDataplexV1StorageAccessResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageAccessResponseOutput) ToGoogleCloudDataplexV1StorageAccessResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageAccessResponseOutput {
	return o
}

// Describes the read access mechanism of the data. Not user settable.
func (o GoogleCloudDataplexV1StorageAccessResponseOutput) Read() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageAccessResponse) string { return v.Read }).(pulumi.StringOutput)
}

// Describes the format of the data within its storage location.
type GoogleCloudDataplexV1StorageFormat struct {
	// Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
	CompressionFormat *GoogleCloudDataplexV1StorageFormatCompressionFormat `pulumi:"compressionFormat"`
	// Optional. Additional information about CSV formatted data.
	Csv *GoogleCloudDataplexV1StorageFormatCsvOptions `pulumi:"csv"`
	// Optional. Additional information about iceberg tables.
	Iceberg *GoogleCloudDataplexV1StorageFormatIcebergOptions `pulumi:"iceberg"`
	// Optional. Additional information about CSV formatted data.
	Json *GoogleCloudDataplexV1StorageFormatJsonOptions `pulumi:"json"`
	// The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
	MimeType string `pulumi:"mimeType"`
}

// GoogleCloudDataplexV1StorageFormatInput is an input type that accepts GoogleCloudDataplexV1StorageFormatArgs and GoogleCloudDataplexV1StorageFormatOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatInput` via:
//
//	GoogleCloudDataplexV1StorageFormatArgs{...}
type GoogleCloudDataplexV1StorageFormatInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatOutput() GoogleCloudDataplexV1StorageFormatOutput
	ToGoogleCloudDataplexV1StorageFormatOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatOutput
}

// Describes the format of the data within its storage location.
type GoogleCloudDataplexV1StorageFormatArgs struct {
	// Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
	CompressionFormat GoogleCloudDataplexV1StorageFormatCompressionFormatPtrInput `pulumi:"compressionFormat"`
	// Optional. Additional information about CSV formatted data.
	Csv GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput `pulumi:"csv"`
	// Optional. Additional information about iceberg tables.
	Iceberg GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput `pulumi:"iceberg"`
	// Optional. Additional information about CSV formatted data.
	Json GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput `pulumi:"json"`
	// The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
	MimeType pulumi.StringInput `pulumi:"mimeType"`
}

func (GoogleCloudDataplexV1StorageFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormat)(nil)).Elem()
}

func (i GoogleCloudDataplexV1StorageFormatArgs) ToGoogleCloudDataplexV1StorageFormatOutput() GoogleCloudDataplexV1StorageFormatOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatArgs) ToGoogleCloudDataplexV1StorageFormatOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatOutput)
}

// Describes the format of the data within its storage location.
type GoogleCloudDataplexV1StorageFormatOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormat)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatOutput) ToGoogleCloudDataplexV1StorageFormatOutput() GoogleCloudDataplexV1StorageFormatOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatOutput) ToGoogleCloudDataplexV1StorageFormatOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatOutput {
	return o
}

// Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
func (o GoogleCloudDataplexV1StorageFormatOutput) CompressionFormat() GoogleCloudDataplexV1StorageFormatCompressionFormatPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormat) *GoogleCloudDataplexV1StorageFormatCompressionFormat {
		return v.CompressionFormat
	}).(GoogleCloudDataplexV1StorageFormatCompressionFormatPtrOutput)
}

// Optional. Additional information about CSV formatted data.
func (o GoogleCloudDataplexV1StorageFormatOutput) Csv() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormat) *GoogleCloudDataplexV1StorageFormatCsvOptions { return v.Csv }).(GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput)
}

// Optional. Additional information about iceberg tables.
func (o GoogleCloudDataplexV1StorageFormatOutput) Iceberg() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormat) *GoogleCloudDataplexV1StorageFormatIcebergOptions {
		return v.Iceberg
	}).(GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput)
}

// Optional. Additional information about CSV formatted data.
func (o GoogleCloudDataplexV1StorageFormatOutput) Json() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormat) *GoogleCloudDataplexV1StorageFormatJsonOptions {
		return v.Json
	}).(GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput)
}

// The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
func (o GoogleCloudDataplexV1StorageFormatOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormat) string { return v.MimeType }).(pulumi.StringOutput)
}

// Describes CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1StorageFormatCsvOptions struct {
	// Optional. The delimiter used to separate values. Defaults to ','.
	Delimiter *string `pulumi:"delimiter"`
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
	Encoding *string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
	HeaderRows *int `pulumi:"headerRows"`
	// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
	Quote *string `pulumi:"quote"`
}

// GoogleCloudDataplexV1StorageFormatCsvOptionsInput is an input type that accepts GoogleCloudDataplexV1StorageFormatCsvOptionsArgs and GoogleCloudDataplexV1StorageFormatCsvOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatCsvOptionsInput` via:
//
//	GoogleCloudDataplexV1StorageFormatCsvOptionsArgs{...}
type GoogleCloudDataplexV1StorageFormatCsvOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsOutput
	ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsOutput
}

// Describes CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1StorageFormatCsvOptionsArgs struct {
	// Optional. The delimiter used to separate values. Defaults to ','.
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
	HeaderRows pulumi.IntPtrInput `pulumi:"headerRows"`
	// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
	Quote pulumi.StringPtrInput `pulumi:"quote"`
}

func (GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatCsvOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatCsvOptionsOutput)
}

func (i GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatCsvOptionsOutput).ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1StorageFormatCsvOptionsArgs, GoogleCloudDataplexV1StorageFormatCsvOptionsPtr and GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1StorageFormatCsvOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput
	ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput
}

type googleCloudDataplexV1StorageFormatCsvOptionsPtrType GoogleCloudDataplexV1StorageFormatCsvOptionsArgs

func GoogleCloudDataplexV1StorageFormatCsvOptionsPtr(v *GoogleCloudDataplexV1StorageFormatCsvOptionsArgs) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput {
	return (*googleCloudDataplexV1StorageFormatCsvOptionsPtrType)(v)
}

func (*googleCloudDataplexV1StorageFormatCsvOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatCsvOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1StorageFormatCsvOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1StorageFormatCsvOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput)
}

// Describes CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1StorageFormatCsvOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1StorageFormatCsvOptions) *GoogleCloudDataplexV1StorageFormatCsvOptions {
		return &v
	}).(GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput)
}

// Optional. The delimiter used to separate values. Defaults to ','.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptions) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptions) *int { return v.HeaderRows }).(pulumi.IntPtrOutput)
}

// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ”' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsOutput) Quote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptions) *string { return v.Quote }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) Elem() GoogleCloudDataplexV1StorageFormatCsvOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatCsvOptions) GoogleCloudDataplexV1StorageFormatCsvOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1StorageFormatCsvOptions
		return ret
	}).(GoogleCloudDataplexV1StorageFormatCsvOptionsOutput)
}

// Optional. The delimiter used to separate values. Defaults to ','.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatCsvOptions) *int {
		if v == nil {
			return nil
		}
		return v.HeaderRows
	}).(pulumi.IntPtrOutput)
}

// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ”' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput) Quote() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Quote
	}).(pulumi.StringPtrOutput)
}

// Describes CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1StorageFormatCsvOptionsResponse struct {
	// Optional. The delimiter used to separate values. Defaults to ','.
	Delimiter string `pulumi:"delimiter"`
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
	Encoding string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
	HeaderRows int `pulumi:"headerRows"`
	// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ''' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
	Quote string `pulumi:"quote"`
}

// Describes CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatCsvOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput() GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput {
	return o
}

// Optional. The delimiter used to separate values. Defaults to ','.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptionsResponse) string { return v.Delimiter }).(pulumi.StringOutput)
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8", and "ISO-8859-1". Defaults to UTF-8 if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) HeaderRows() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptionsResponse) int { return v.HeaderRows }).(pulumi.IntOutput)
}

// Optional. The character used to quote column values. Accepts '"' (double quotation mark) or ”' (single quotation mark). Defaults to '"' (double quotation mark) if unspecified.
func (o GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput) Quote() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatCsvOptionsResponse) string { return v.Quote }).(pulumi.StringOutput)
}

// Describes Iceberg data format.
type GoogleCloudDataplexV1StorageFormatIcebergOptions struct {
	// Optional. The location of where the iceberg metadata is present, must be within the table path
	MetadataLocation *string `pulumi:"metadataLocation"`
}

// GoogleCloudDataplexV1StorageFormatIcebergOptionsInput is an input type that accepts GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs and GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatIcebergOptionsInput` via:
//
//	GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs{...}
type GoogleCloudDataplexV1StorageFormatIcebergOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput
	ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput
}

// Describes Iceberg data format.
type GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs struct {
	// Optional. The location of where the iceberg metadata is present, must be within the table path
	MetadataLocation pulumi.StringPtrInput `pulumi:"metadataLocation"`
}

func (GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatIcebergOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput)
}

func (i GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput).ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs, GoogleCloudDataplexV1StorageFormatIcebergOptionsPtr and GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput
	ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput
}

type googleCloudDataplexV1StorageFormatIcebergOptionsPtrType GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs

func GoogleCloudDataplexV1StorageFormatIcebergOptionsPtr(v *GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput {
	return (*googleCloudDataplexV1StorageFormatIcebergOptionsPtrType)(v)
}

func (*googleCloudDataplexV1StorageFormatIcebergOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatIcebergOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1StorageFormatIcebergOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1StorageFormatIcebergOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput)
}

// Describes Iceberg data format.
type GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatIcebergOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1StorageFormatIcebergOptions) *GoogleCloudDataplexV1StorageFormatIcebergOptions {
		return &v
	}).(GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput)
}

// Optional. The location of where the iceberg metadata is present, must be within the table path
func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput) MetadataLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatIcebergOptions) *string { return v.MetadataLocation }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatIcebergOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput) Elem() GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatIcebergOptions) GoogleCloudDataplexV1StorageFormatIcebergOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1StorageFormatIcebergOptions
		return ret
	}).(GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput)
}

// Optional. The location of where the iceberg metadata is present, must be within the table path
func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput) MetadataLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatIcebergOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataLocation
	}).(pulumi.StringPtrOutput)
}

// Describes Iceberg data format.
type GoogleCloudDataplexV1StorageFormatIcebergOptionsResponse struct {
	// Optional. The location of where the iceberg metadata is present, must be within the table path
	MetadataLocation string `pulumi:"metadataLocation"`
}

// Describes Iceberg data format.
type GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatIcebergOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput() GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput {
	return o
}

// Optional. The location of where the iceberg metadata is present, must be within the table path
func (o GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput) MetadataLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatIcebergOptionsResponse) string { return v.MetadataLocation }).(pulumi.StringOutput)
}

// Describes JSON data format.
type GoogleCloudDataplexV1StorageFormatJsonOptions struct {
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
	Encoding *string `pulumi:"encoding"`
}

// GoogleCloudDataplexV1StorageFormatJsonOptionsInput is an input type that accepts GoogleCloudDataplexV1StorageFormatJsonOptionsArgs and GoogleCloudDataplexV1StorageFormatJsonOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatJsonOptionsInput` via:
//
//	GoogleCloudDataplexV1StorageFormatJsonOptionsArgs{...}
type GoogleCloudDataplexV1StorageFormatJsonOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsOutput
	ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsOutput
}

// Describes JSON data format.
type GoogleCloudDataplexV1StorageFormatJsonOptionsArgs struct {
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
}

func (GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatJsonOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatJsonOptionsOutput)
}

func (i GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatJsonOptionsOutput).ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1StorageFormatJsonOptionsArgs, GoogleCloudDataplexV1StorageFormatJsonOptionsPtr and GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1StorageFormatJsonOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput
	ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput
}

type googleCloudDataplexV1StorageFormatJsonOptionsPtrType GoogleCloudDataplexV1StorageFormatJsonOptionsArgs

func GoogleCloudDataplexV1StorageFormatJsonOptionsPtr(v *GoogleCloudDataplexV1StorageFormatJsonOptionsArgs) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput {
	return (*googleCloudDataplexV1StorageFormatJsonOptionsPtrType)(v)
}

func (*googleCloudDataplexV1StorageFormatJsonOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatJsonOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1StorageFormatJsonOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1StorageFormatJsonOptionsPtrType) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput)
}

// Describes JSON data format.
type GoogleCloudDataplexV1StorageFormatJsonOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1StorageFormatJsonOptions) *GoogleCloudDataplexV1StorageFormatJsonOptions {
		return &v
	}).(GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput)
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
func (o GoogleCloudDataplexV1StorageFormatJsonOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatJsonOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1StorageFormatJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput) Elem() GoogleCloudDataplexV1StorageFormatJsonOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatJsonOptions) GoogleCloudDataplexV1StorageFormatJsonOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1StorageFormatJsonOptions
		return ret
	}).(GoogleCloudDataplexV1StorageFormatJsonOptionsOutput)
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
func (o GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1StorageFormatJsonOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Describes JSON data format.
type GoogleCloudDataplexV1StorageFormatJsonOptionsResponse struct {
	// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
	Encoding string `pulumi:"encoding"`
}

// Describes JSON data format.
type GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatJsonOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput() GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput) ToGoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput {
	return o
}

// Optional. The character encoding of the data. Accepts "US-ASCII", "UTF-8" and "ISO-8859-1". Defaults to UTF-8 if not specified.
func (o GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatJsonOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Describes the format of the data within its storage location.
type GoogleCloudDataplexV1StorageFormatResponse struct {
	// Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
	CompressionFormat string `pulumi:"compressionFormat"`
	// Optional. Additional information about CSV formatted data.
	Csv GoogleCloudDataplexV1StorageFormatCsvOptionsResponse `pulumi:"csv"`
	// The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
	Format string `pulumi:"format"`
	// Optional. Additional information about iceberg tables.
	Iceberg GoogleCloudDataplexV1StorageFormatIcebergOptionsResponse `pulumi:"iceberg"`
	// Optional. Additional information about CSV formatted data.
	Json GoogleCloudDataplexV1StorageFormatJsonOptionsResponse `pulumi:"json"`
	// The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
	MimeType string `pulumi:"mimeType"`
}

// Describes the format of the data within its storage location.
type GoogleCloudDataplexV1StorageFormatResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1StorageFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1StorageFormatResponseOutput) ToGoogleCloudDataplexV1StorageFormatResponseOutput() GoogleCloudDataplexV1StorageFormatResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1StorageFormatResponseOutput) ToGoogleCloudDataplexV1StorageFormatResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1StorageFormatResponseOutput {
	return o
}

// Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) CompressionFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) string { return v.CompressionFormat }).(pulumi.StringOutput)
}

// Optional. Additional information about CSV formatted data.
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) Csv() GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) GoogleCloudDataplexV1StorageFormatCsvOptionsResponse {
		return v.Csv
	}).(GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput)
}

// The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) string { return v.Format }).(pulumi.StringOutput)
}

// Optional. Additional information about iceberg tables.
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) Iceberg() GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) GoogleCloudDataplexV1StorageFormatIcebergOptionsResponse {
		return v.Iceberg
	}).(GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput)
}

// Optional. Additional information about CSV formatted data.
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) Json() GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) GoogleCloudDataplexV1StorageFormatJsonOptionsResponse {
		return v.Json
	}).(GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput)
}

// The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
func (o GoogleCloudDataplexV1StorageFormatResponseOutput) MimeType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1StorageFormatResponse) string { return v.MimeType }).(pulumi.StringOutput)
}

// Execution related settings, like retry and service_account.
type GoogleCloudDataplexV1TaskExecutionSpec struct {
	// Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
	Args map[string]string `pulumi:"args"`
	// Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
	KmsKey *string `pulumi:"kmsKey"`
	// Optional. The maximum duration after which the job execution is expired.
	MaxJobExecutionLifetime *string `pulumi:"maxJobExecutionLifetime"`
	// Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
	Project *string `pulumi:"project"`
	// Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
	ServiceAccount string `pulumi:"serviceAccount"`
}

// GoogleCloudDataplexV1TaskExecutionSpecInput is an input type that accepts GoogleCloudDataplexV1TaskExecutionSpecArgs and GoogleCloudDataplexV1TaskExecutionSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskExecutionSpecInput` via:
//
//	GoogleCloudDataplexV1TaskExecutionSpecArgs{...}
type GoogleCloudDataplexV1TaskExecutionSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskExecutionSpecOutput() GoogleCloudDataplexV1TaskExecutionSpecOutput
	ToGoogleCloudDataplexV1TaskExecutionSpecOutputWithContext(context.Context) GoogleCloudDataplexV1TaskExecutionSpecOutput
}

// Execution related settings, like retry and service_account.
type GoogleCloudDataplexV1TaskExecutionSpecArgs struct {
	// Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
	Args pulumi.StringMapInput `pulumi:"args"`
	// Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
	KmsKey pulumi.StringPtrInput `pulumi:"kmsKey"`
	// Optional. The maximum duration after which the job execution is expired.
	MaxJobExecutionLifetime pulumi.StringPtrInput `pulumi:"maxJobExecutionLifetime"`
	// Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
	ServiceAccount pulumi.StringInput `pulumi:"serviceAccount"`
}

func (GoogleCloudDataplexV1TaskExecutionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskExecutionSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskExecutionSpecArgs) ToGoogleCloudDataplexV1TaskExecutionSpecOutput() GoogleCloudDataplexV1TaskExecutionSpecOutput {
	return i.ToGoogleCloudDataplexV1TaskExecutionSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskExecutionSpecArgs) ToGoogleCloudDataplexV1TaskExecutionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskExecutionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskExecutionSpecOutput)
}

// Execution related settings, like retry and service_account.
type GoogleCloudDataplexV1TaskExecutionSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskExecutionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskExecutionSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) ToGoogleCloudDataplexV1TaskExecutionSpecOutput() GoogleCloudDataplexV1TaskExecutionSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) ToGoogleCloudDataplexV1TaskExecutionSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskExecutionSpecOutput {
	return o
}

// Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) Args() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpec) map[string]string { return v.Args }).(pulumi.StringMapOutput)
}

// Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpec) *string { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// Optional. The maximum duration after which the job execution is expired.
func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) MaxJobExecutionLifetime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpec) *string { return v.MaxJobExecutionLifetime }).(pulumi.StringPtrOutput)
}

// Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpec) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
func (o GoogleCloudDataplexV1TaskExecutionSpecOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpec) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Execution related settings, like retry and service_account.
type GoogleCloudDataplexV1TaskExecutionSpecResponse struct {
	// Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
	Args map[string]string `pulumi:"args"`
	// Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
	KmsKey string `pulumi:"kmsKey"`
	// Optional. The maximum duration after which the job execution is expired.
	MaxJobExecutionLifetime string `pulumi:"maxJobExecutionLifetime"`
	// Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
	Project string `pulumi:"project"`
	// Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
	ServiceAccount string `pulumi:"serviceAccount"`
}

// Execution related settings, like retry and service_account.
type GoogleCloudDataplexV1TaskExecutionSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskExecutionSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) ToGoogleCloudDataplexV1TaskExecutionSpecResponseOutput() GoogleCloudDataplexV1TaskExecutionSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) ToGoogleCloudDataplexV1TaskExecutionSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskExecutionSpecResponseOutput {
	return o
}

// Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) Args() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpecResponse) map[string]string { return v.Args }).(pulumi.StringMapOutput)
}

// Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpecResponse) string { return v.KmsKey }).(pulumi.StringOutput)
}

// Optional. The maximum duration after which the job execution is expired.
func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) MaxJobExecutionLifetime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpecResponse) string { return v.MaxJobExecutionLifetime }).(pulumi.StringOutput)
}

// Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpecResponse) string { return v.Project }).(pulumi.StringOutput)
}

// Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
func (o GoogleCloudDataplexV1TaskExecutionSpecResponseOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionSpecResponse) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Status of the task execution (e.g. Jobs).
type GoogleCloudDataplexV1TaskExecutionStatusResponse struct {
	// latest job execution
	LatestJob GoogleCloudDataplexV1JobResponse `pulumi:"latestJob"`
	// Last update time of the status.
	UpdateTime string `pulumi:"updateTime"`
}

// Status of the task execution (e.g. Jobs).
type GoogleCloudDataplexV1TaskExecutionStatusResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskExecutionStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskExecutionStatusResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskExecutionStatusResponseOutput) ToGoogleCloudDataplexV1TaskExecutionStatusResponseOutput() GoogleCloudDataplexV1TaskExecutionStatusResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskExecutionStatusResponseOutput) ToGoogleCloudDataplexV1TaskExecutionStatusResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskExecutionStatusResponseOutput {
	return o
}

// latest job execution
func (o GoogleCloudDataplexV1TaskExecutionStatusResponseOutput) LatestJob() GoogleCloudDataplexV1JobResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionStatusResponse) GoogleCloudDataplexV1JobResponse {
		return v.LatestJob
	}).(GoogleCloudDataplexV1JobResponseOutput)
}

// Last update time of the status.
func (o GoogleCloudDataplexV1TaskExecutionStatusResponseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskExecutionStatusResponse) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1TaskInfrastructureSpec struct {
	// Compute resources needed for a Task when using Dataproc Serverless.
	Batch *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources `pulumi:"batch"`
	// Container Image Runtime Configuration.
	ContainerImage *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime `pulumi:"containerImage"`
	// Vpc network.
	VpcNetwork *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork `pulumi:"vpcNetwork"`
}

// GoogleCloudDataplexV1TaskInfrastructureSpecInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecArgs and GoogleCloudDataplexV1TaskInfrastructureSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecInput` via:
//
//	GoogleCloudDataplexV1TaskInfrastructureSpecArgs{...}
type GoogleCloudDataplexV1TaskInfrastructureSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecOutput() GoogleCloudDataplexV1TaskInfrastructureSpecOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecOutput
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1TaskInfrastructureSpecArgs struct {
	// Compute resources needed for a Task when using Dataproc Serverless.
	Batch GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput `pulumi:"batch"`
	// Container Image Runtime Configuration.
	ContainerImage GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput `pulumi:"containerImage"`
	// Vpc network.
	VpcNetwork GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput `pulumi:"vpcNetwork"`
}

func (GoogleCloudDataplexV1TaskInfrastructureSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecOutput() GoogleCloudDataplexV1TaskInfrastructureSpecOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecOutput)
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecOutput).ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecArgs, GoogleCloudDataplexV1TaskInfrastructureSpecPtr and GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput` via:
//
//	        GoogleCloudDataplexV1TaskInfrastructureSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput
}

type googleCloudDataplexV1TaskInfrastructureSpecPtrType GoogleCloudDataplexV1TaskInfrastructureSpecArgs

func GoogleCloudDataplexV1TaskInfrastructureSpecPtr(v *GoogleCloudDataplexV1TaskInfrastructureSpecArgs) GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput {
	return (*googleCloudDataplexV1TaskInfrastructureSpecPtrType)(v)
}

func (*googleCloudDataplexV1TaskInfrastructureSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1TaskInfrastructureSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecOutput() GoogleCloudDataplexV1TaskInfrastructureSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpec {
		return &v
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// Compute resources needed for a Task when using Dataproc Serverless.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) Batch() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources {
		return v.Batch
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput)
}

// Container Image Runtime Configuration.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) ContainerImage() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime {
		return v.ContainerImage
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput)
}

// Vpc network.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecOutput) VpcNetwork() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork {
		return v.VpcNetwork
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput)
}

type GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) Elem() GoogleCloudDataplexV1TaskInfrastructureSpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpec) GoogleCloudDataplexV1TaskInfrastructureSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskInfrastructureSpec
		return ret
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecOutput)
}

// Compute resources needed for a Task when using Dataproc Serverless.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) Batch() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources {
		if v == nil {
			return nil
		}
		return v.Batch
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput)
}

// Container Image Runtime Configuration.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) ContainerImage() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime {
		if v == nil {
			return nil
		}
		return v.ContainerImage
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput)
}

// Vpc network.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput) VpcNetwork() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpec) *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork {
		if v == nil {
			return nil
		}
		return v.VpcNetwork
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput)
}

// Batch compute resources associated with the task.
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources struct {
	// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
	ExecutorsCount *int `pulumi:"executorsCount"`
	// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
	MaxExecutorsCount *int `pulumi:"maxExecutorsCount"`
}

// GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs and GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesInput` via:
//
//	GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs{...}
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput
}

// Batch compute resources associated with the task.
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs struct {
	// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
	ExecutorsCount pulumi.IntPtrInput `pulumi:"executorsCount"`
	// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
	MaxExecutorsCount pulumi.IntPtrInput `pulumi:"maxExecutorsCount"`
}

func (GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput)
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput).ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs, GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtr and GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput` via:
//
//	        GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput
}

type googleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrType GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs

func GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtr(v *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput {
	return (*googleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrType)(v)
}

func (*googleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput)
}

// Batch compute resources associated with the task.
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o.ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources {
		return &v
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput)
}

// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) ExecutorsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) *int { return v.ExecutorsCount }).(pulumi.IntPtrOutput)
}

// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput) MaxExecutorsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) *int {
		return v.MaxExecutorsCount
	}).(pulumi.IntPtrOutput)
}

type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) Elem() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
		return ret
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput)
}

// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) ExecutorsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.ExecutorsCount
	}).(pulumi.IntPtrOutput)
}

// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput) MaxExecutorsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources) *int {
		if v == nil {
			return nil
		}
		return v.MaxExecutorsCount
	}).(pulumi.IntPtrOutput)
}

// Batch compute resources associated with the task.
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse struct {
	// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
	ExecutorsCount int `pulumi:"executorsCount"`
	// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
	MaxExecutorsCount int `pulumi:"maxExecutorsCount"`
}

// Batch compute resources associated with the task.
type GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput {
	return o
}

// Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput) ExecutorsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse) int {
		return v.ExecutorsCount
	}).(pulumi.IntOutput)
}

// Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
func (o GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput) MaxExecutorsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse) int {
		return v.MaxExecutorsCount
	}).(pulumi.IntOutput)
}

// Container Image Runtime Configuration used with Batch execution.
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime struct {
	// Optional. Container image to use.
	Image *string `pulumi:"image"`
	// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaJars []string `pulumi:"javaJars"`
	// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties map[string]string `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages []string `pulumi:"pythonPackages"`
}

// GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs and GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeInput` via:
//
//	GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs{...}
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput
}

// Container Image Runtime Configuration used with Batch execution.
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs struct {
	// Optional. Container image to use.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaJars pulumi.StringArrayInput `pulumi:"javaJars"`
	// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages pulumi.StringArrayInput `pulumi:"pythonPackages"`
}

func (GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput)
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput).ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs, GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtr and GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput` via:
//
//	        GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput
}

type googleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrType GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs

func GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtr(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput {
	return (*googleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrType)(v)
}

func (*googleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput)
}

// Container Image Runtime Configuration used with Batch execution.
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o.ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime {
		return &v
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput)
}

// Optional. Container image to use.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) JavaJars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) []string { return v.JavaJars }).(pulumi.StringArrayOutput)
}

// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) map[string]string {
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput) PythonPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) []string {
		return v.PythonPackages
	}).(pulumi.StringArrayOutput)
}

type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) Elem() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
		return ret
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput)
}

// Optional. Container image to use.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) JavaJars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) []string {
		if v == nil {
			return nil
		}
		return v.JavaJars
	}).(pulumi.StringArrayOutput)
}

// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput) PythonPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime) []string {
		if v == nil {
			return nil
		}
		return v.PythonPackages
	}).(pulumi.StringArrayOutput)
}

// Container Image Runtime Configuration used with Batch execution.
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse struct {
	// Optional. Container image to use.
	Image string `pulumi:"image"`
	// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
	JavaJars []string `pulumi:"javaJars"`
	// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
	Properties map[string]string `pulumi:"properties"`
	// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
	PythonPackages []string `pulumi:"pythonPackages"`
}

// Container Image Runtime Configuration used with Batch execution.
type GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput {
	return o
}

// Optional. Container image to use.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse) string {
		return v.Image
	}).(pulumi.StringOutput)
}

// Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) JavaJars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse) []string {
		return v.JavaJars
	}).(pulumi.StringArrayOutput)
}

// Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse) map[string]string {
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
func (o GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput) PythonPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse) []string {
		return v.PythonPackages
	}).(pulumi.StringArrayOutput)
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1TaskInfrastructureSpecResponse struct {
	// Compute resources needed for a Task when using Dataproc Serverless.
	Batch GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse `pulumi:"batch"`
	// Container Image Runtime Configuration.
	ContainerImage GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse `pulumi:"containerImage"`
	// Vpc network.
	VpcNetwork GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse `pulumi:"vpcNetwork"`
}

// Configuration for the underlying infrastructure used to run workloads.
type GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput() GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput {
	return o
}

// Compute resources needed for a Task when using Dataproc Serverless.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) Batch() GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecResponse) GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponse {
		return v.Batch
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput)
}

// Container Image Runtime Configuration.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) ContainerImage() GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecResponse) GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponse {
		return v.ContainerImage
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput)
}

// Vpc network.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput) VpcNetwork() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecResponse) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse {
		return v.VpcNetwork
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput)
}

// Cloud VPC Network used to run the infrastructure.
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork struct {
	// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
	Network *string `pulumi:"network"`
	// Optional. List of network tags to apply to the job.
	NetworkTags []string `pulumi:"networkTags"`
	// Optional. The Cloud VPC sub-network in which the job is run.
	SubNetwork *string `pulumi:"subNetwork"`
}

// GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs and GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkInput` via:
//
//	GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs{...}
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput
}

// Cloud VPC Network used to run the infrastructure.
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs struct {
	// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// Optional. List of network tags to apply to the job.
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// Optional. The Cloud VPC sub-network in which the job is run.
	SubNetwork pulumi.StringPtrInput `pulumi:"subNetwork"`
}

func (GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput)
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput).ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput is an input type that accepts GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs, GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtr and GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput` via:
//
//	        GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput
	ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput
}

type googleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrType GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs

func GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtr(v *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput {
	return (*googleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrType)(v)
}

func (*googleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrType) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput)
}

// Cloud VPC Network used to run the infrastructure.
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o.ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork {
		return &v
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput)
}

// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// Optional. List of network tags to apply to the job.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// Optional. The Cloud VPC sub-network in which the job is run.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput) SubNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) *string { return v.SubNetwork }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) Elem() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork
		return ret
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput)
}

// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Network
	}).(pulumi.StringPtrOutput)
}

// Optional. List of network tags to apply to the job.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) []string {
		if v == nil {
			return nil
		}
		return v.NetworkTags
	}).(pulumi.StringArrayOutput)
}

// Optional. The Cloud VPC sub-network in which the job is run.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput) SubNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork) *string {
		if v == nil {
			return nil
		}
		return v.SubNetwork
	}).(pulumi.StringPtrOutput)
}

// Cloud VPC Network used to run the infrastructure.
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse struct {
	// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
	Network string `pulumi:"network"`
	// Optional. List of network tags to apply to the job.
	NetworkTags []string `pulumi:"networkTags"`
	// Optional. The Cloud VPC sub-network in which the job is run.
	SubNetwork string `pulumi:"subNetwork"`
}

// Cloud VPC Network used to run the infrastructure.
type GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput() GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) ToGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput {
	return o
}

// Optional. The Cloud VPC network in which the job is run. By default, the Cloud VPC network named Default within the project is used.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse) string { return v.Network }).(pulumi.StringOutput)
}

// Optional. List of network tags to apply to the job.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// Optional. The Cloud VPC sub-network in which the job is run.
func (o GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput) SubNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponse) string { return v.SubNetwork }).(pulumi.StringOutput)
}

// Config for running scheduled notebooks.
type GoogleCloudDataplexV1TaskNotebookTaskConfig struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec *GoogleCloudDataplexV1TaskInfrastructureSpec `pulumi:"infrastructureSpec"`
	// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
	Notebook string `pulumi:"notebook"`
}

// GoogleCloudDataplexV1TaskNotebookTaskConfigInput is an input type that accepts GoogleCloudDataplexV1TaskNotebookTaskConfigArgs and GoogleCloudDataplexV1TaskNotebookTaskConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskNotebookTaskConfigInput` via:
//
//	GoogleCloudDataplexV1TaskNotebookTaskConfigArgs{...}
type GoogleCloudDataplexV1TaskNotebookTaskConfigInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigOutput
	ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutputWithContext(context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigOutput
}

// Config for running scheduled notebooks.
type GoogleCloudDataplexV1TaskNotebookTaskConfigArgs struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput `pulumi:"infrastructureSpec"`
	// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
	Notebook pulumi.StringInput `pulumi:"notebook"`
}

func (GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskNotebookTaskConfig)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigOutput {
	return i.ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskNotebookTaskConfigOutput)
}

func (i GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskNotebookTaskConfigOutput).ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskNotebookTaskConfigPtrInput is an input type that accepts GoogleCloudDataplexV1TaskNotebookTaskConfigArgs, GoogleCloudDataplexV1TaskNotebookTaskConfigPtr and GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskNotebookTaskConfigPtrInput` via:
//
//	        GoogleCloudDataplexV1TaskNotebookTaskConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskNotebookTaskConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput
	ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput
}

type googleCloudDataplexV1TaskNotebookTaskConfigPtrType GoogleCloudDataplexV1TaskNotebookTaskConfigArgs

func GoogleCloudDataplexV1TaskNotebookTaskConfigPtr(v *GoogleCloudDataplexV1TaskNotebookTaskConfigArgs) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrInput {
	return (*googleCloudDataplexV1TaskNotebookTaskConfigPtrType)(v)
}

func (*googleCloudDataplexV1TaskNotebookTaskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskNotebookTaskConfig)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskNotebookTaskConfigPtrType) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskNotebookTaskConfigPtrType) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput)
}

// Config for running scheduled notebooks.
type GoogleCloudDataplexV1TaskNotebookTaskConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskNotebookTaskConfig)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return o.ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskNotebookTaskConfig) *GoogleCloudDataplexV1TaskNotebookTaskConfig {
		return &v
	}).(GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput)
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfig) *GoogleCloudDataplexV1TaskInfrastructureSpec {
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigOutput) Notebook() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfig) string { return v.Notebook }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskNotebookTaskConfig)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) Elem() GoogleCloudDataplexV1TaskNotebookTaskConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskNotebookTaskConfig) GoogleCloudDataplexV1TaskNotebookTaskConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskNotebookTaskConfig
		return ret
	}).(GoogleCloudDataplexV1TaskNotebookTaskConfigOutput)
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskNotebookTaskConfig) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskNotebookTaskConfig) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskNotebookTaskConfig) *GoogleCloudDataplexV1TaskInfrastructureSpec {
		if v == nil {
			return nil
		}
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput) Notebook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskNotebookTaskConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Notebook
	}).(pulumi.StringPtrOutput)
}

// Config for running scheduled notebooks.
type GoogleCloudDataplexV1TaskNotebookTaskConfigResponse struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec GoogleCloudDataplexV1TaskInfrastructureSpecResponse `pulumi:"infrastructureSpec"`
	// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
	Notebook string `pulumi:"notebook"`
}

// Config for running scheduled notebooks.
type GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskNotebookTaskConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput() GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) ToGoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput {
	return o
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfigResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfigResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfigResponse) GoogleCloudDataplexV1TaskInfrastructureSpecResponse {
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput)
}

// Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
func (o GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput) Notebook() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskNotebookTaskConfigResponse) string { return v.Notebook }).(pulumi.StringOutput)
}

// User-specified config for running a Spark task.
type GoogleCloudDataplexV1TaskSparkTaskConfig struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec *GoogleCloudDataplexV1TaskInfrastructureSpec `pulumi:"infrastructureSpec"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainClass *string `pulumi:"mainClass"`
	// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainJarFileUri *string `pulumi:"mainJarFileUri"`
	// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
	PythonScriptFile *string `pulumi:"pythonScriptFile"`
	// The query text. The execution args are used to declare a set of script variables (set key="value";).
	SqlScript *string `pulumi:"sqlScript"`
	// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
	SqlScriptFile *string `pulumi:"sqlScriptFile"`
}

// GoogleCloudDataplexV1TaskSparkTaskConfigInput is an input type that accepts GoogleCloudDataplexV1TaskSparkTaskConfigArgs and GoogleCloudDataplexV1TaskSparkTaskConfigOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskSparkTaskConfigInput` via:
//
//	GoogleCloudDataplexV1TaskSparkTaskConfigArgs{...}
type GoogleCloudDataplexV1TaskSparkTaskConfigInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskSparkTaskConfigOutput() GoogleCloudDataplexV1TaskSparkTaskConfigOutput
	ToGoogleCloudDataplexV1TaskSparkTaskConfigOutputWithContext(context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigOutput
}

// User-specified config for running a Spark task.
type GoogleCloudDataplexV1TaskSparkTaskConfigArgs struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris pulumi.StringArrayInput `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris pulumi.StringArrayInput `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput `pulumi:"infrastructureSpec"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainClass pulumi.StringPtrInput `pulumi:"mainClass"`
	// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainJarFileUri pulumi.StringPtrInput `pulumi:"mainJarFileUri"`
	// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
	PythonScriptFile pulumi.StringPtrInput `pulumi:"pythonScriptFile"`
	// The query text. The execution args are used to declare a set of script variables (set key="value";).
	SqlScript pulumi.StringPtrInput `pulumi:"sqlScript"`
	// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
	SqlScriptFile pulumi.StringPtrInput `pulumi:"sqlScriptFile"`
}

func (GoogleCloudDataplexV1TaskSparkTaskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskSparkTaskConfig)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskSparkTaskConfigArgs) ToGoogleCloudDataplexV1TaskSparkTaskConfigOutput() GoogleCloudDataplexV1TaskSparkTaskConfigOutput {
	return i.ToGoogleCloudDataplexV1TaskSparkTaskConfigOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskSparkTaskConfigArgs) ToGoogleCloudDataplexV1TaskSparkTaskConfigOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskSparkTaskConfigOutput)
}

func (i GoogleCloudDataplexV1TaskSparkTaskConfigArgs) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput() GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskSparkTaskConfigArgs) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskSparkTaskConfigOutput).ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TaskSparkTaskConfigPtrInput is an input type that accepts GoogleCloudDataplexV1TaskSparkTaskConfigArgs, GoogleCloudDataplexV1TaskSparkTaskConfigPtr and GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskSparkTaskConfigPtrInput` via:
//
//	        GoogleCloudDataplexV1TaskSparkTaskConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TaskSparkTaskConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput() GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput
	ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput
}

type googleCloudDataplexV1TaskSparkTaskConfigPtrType GoogleCloudDataplexV1TaskSparkTaskConfigArgs

func GoogleCloudDataplexV1TaskSparkTaskConfigPtr(v *GoogleCloudDataplexV1TaskSparkTaskConfigArgs) GoogleCloudDataplexV1TaskSparkTaskConfigPtrInput {
	return (*googleCloudDataplexV1TaskSparkTaskConfigPtrType)(v)
}

func (*googleCloudDataplexV1TaskSparkTaskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskSparkTaskConfig)(nil)).Elem()
}

func (i *googleCloudDataplexV1TaskSparkTaskConfigPtrType) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput() GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return i.ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TaskSparkTaskConfigPtrType) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput)
}

// User-specified config for running a Spark task.
type GoogleCloudDataplexV1TaskSparkTaskConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskSparkTaskConfig)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigOutput() GoogleCloudDataplexV1TaskSparkTaskConfigOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput() GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return o.ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TaskSparkTaskConfig) *GoogleCloudDataplexV1TaskSparkTaskConfig {
		return &v
	}).(GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput)
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *GoogleCloudDataplexV1TaskInfrastructureSpec {
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *string { return v.MainClass }).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *string { return v.MainJarFileUri }).(pulumi.StringPtrOutput)
}

// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) PythonScriptFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *string { return v.PythonScriptFile }).(pulumi.StringPtrOutput)
}

// The query text. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) SqlScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *string { return v.SqlScript }).(pulumi.StringPtrOutput)
}

// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigOutput) SqlScriptFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfig) *string { return v.SqlScriptFile }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TaskSparkTaskConfig)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput() GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) Elem() GoogleCloudDataplexV1TaskSparkTaskConfigOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) GoogleCloudDataplexV1TaskSparkTaskConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TaskSparkTaskConfig
		return ret
	}).(GoogleCloudDataplexV1TaskSparkTaskConfigOutput)
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) []string {
		if v == nil {
			return nil
		}
		return v.ArchiveUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) []string {
		if v == nil {
			return nil
		}
		return v.FileUris
	}).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *GoogleCloudDataplexV1TaskInfrastructureSpec {
		if v == nil {
			return nil
		}
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.MainClass
	}).(pulumi.StringPtrOutput)
}

// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) MainJarFileUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.MainJarFileUri
	}).(pulumi.StringPtrOutput)
}

// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) PythonScriptFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonScriptFile
	}).(pulumi.StringPtrOutput)
}

// The query text. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) SqlScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.SqlScript
	}).(pulumi.StringPtrOutput)
}

// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput) SqlScriptFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TaskSparkTaskConfig) *string {
		if v == nil {
			return nil
		}
		return v.SqlScriptFile
	}).(pulumi.StringPtrOutput)
}

// User-specified config for running a Spark task.
type GoogleCloudDataplexV1TaskSparkTaskConfigResponse struct {
	// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
	ArchiveUris []string `pulumi:"archiveUris"`
	// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
	FileUris []string `pulumi:"fileUris"`
	// Optional. Infrastructure specification for the execution.
	InfrastructureSpec GoogleCloudDataplexV1TaskInfrastructureSpecResponse `pulumi:"infrastructureSpec"`
	// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainClass string `pulumi:"mainClass"`
	// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
	MainJarFileUri string `pulumi:"mainJarFileUri"`
	// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
	PythonScriptFile string `pulumi:"pythonScriptFile"`
	// The query text. The execution args are used to declare a set of script variables (set key="value";).
	SqlScript string `pulumi:"sqlScript"`
	// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
	SqlScriptFile string `pulumi:"sqlScriptFile"`
}

// User-specified config for running a Spark task.
type GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskSparkTaskConfigResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput() GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) ToGoogleCloudDataplexV1TaskSparkTaskConfigResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput {
	return o
}

// Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) ArchiveUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) []string { return v.ArchiveUris }).(pulumi.StringArrayOutput)
}

// Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) FileUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) []string { return v.FileUris }).(pulumi.StringArrayOutput)
}

// Optional. Infrastructure specification for the execution.
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) InfrastructureSpec() GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) GoogleCloudDataplexV1TaskInfrastructureSpecResponse {
		return v.InfrastructureSpec
	}).(GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput)
}

// The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) MainClass() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) string { return v.MainClass }).(pulumi.StringOutput)
}

// The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) MainJarFileUri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) string { return v.MainJarFileUri }).(pulumi.StringOutput)
}

// The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) PythonScriptFile() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) string { return v.PythonScriptFile }).(pulumi.StringOutput)
}

// The query text. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) SqlScript() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) string { return v.SqlScript }).(pulumi.StringOutput)
}

// A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key="value";).
func (o GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput) SqlScriptFile() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskSparkTaskConfigResponse) string { return v.SqlScriptFile }).(pulumi.StringOutput)
}

// Task scheduling and trigger settings.
type GoogleCloudDataplexV1TaskTriggerSpec struct {
	// Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
	Disabled *bool `pulumi:"disabled"`
	// Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
	MaxRetries *int `pulumi:"maxRetries"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.
	Schedule *string `pulumi:"schedule"`
	// Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
	StartTime *string `pulumi:"startTime"`
	// Immutable. Trigger type of the user-specified Task.
	Type GoogleCloudDataplexV1TaskTriggerSpecType `pulumi:"type"`
}

// GoogleCloudDataplexV1TaskTriggerSpecInput is an input type that accepts GoogleCloudDataplexV1TaskTriggerSpecArgs and GoogleCloudDataplexV1TaskTriggerSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TaskTriggerSpecInput` via:
//
//	GoogleCloudDataplexV1TaskTriggerSpecArgs{...}
type GoogleCloudDataplexV1TaskTriggerSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TaskTriggerSpecOutput() GoogleCloudDataplexV1TaskTriggerSpecOutput
	ToGoogleCloudDataplexV1TaskTriggerSpecOutputWithContext(context.Context) GoogleCloudDataplexV1TaskTriggerSpecOutput
}

// Task scheduling and trigger settings.
type GoogleCloudDataplexV1TaskTriggerSpecArgs struct {
	// Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
	MaxRetries pulumi.IntPtrInput `pulumi:"maxRetries"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
	// Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Immutable. Trigger type of the user-specified Task.
	Type GoogleCloudDataplexV1TaskTriggerSpecTypeInput `pulumi:"type"`
}

func (GoogleCloudDataplexV1TaskTriggerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskTriggerSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TaskTriggerSpecArgs) ToGoogleCloudDataplexV1TaskTriggerSpecOutput() GoogleCloudDataplexV1TaskTriggerSpecOutput {
	return i.ToGoogleCloudDataplexV1TaskTriggerSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TaskTriggerSpecArgs) ToGoogleCloudDataplexV1TaskTriggerSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskTriggerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TaskTriggerSpecOutput)
}

// Task scheduling and trigger settings.
type GoogleCloudDataplexV1TaskTriggerSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskTriggerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskTriggerSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) ToGoogleCloudDataplexV1TaskTriggerSpecOutput() GoogleCloudDataplexV1TaskTriggerSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) ToGoogleCloudDataplexV1TaskTriggerSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskTriggerSpecOutput {
	return o
}

// Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpec) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpec) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.
func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpec) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpec) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Immutable. Trigger type of the user-specified Task.
func (o GoogleCloudDataplexV1TaskTriggerSpecOutput) Type() GoogleCloudDataplexV1TaskTriggerSpecTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpec) GoogleCloudDataplexV1TaskTriggerSpecType { return v.Type }).(GoogleCloudDataplexV1TaskTriggerSpecTypeOutput)
}

// Task scheduling and trigger settings.
type GoogleCloudDataplexV1TaskTriggerSpecResponse struct {
	// Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
	Disabled bool `pulumi:"disabled"`
	// Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
	MaxRetries int `pulumi:"maxRetries"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.
	Schedule string `pulumi:"schedule"`
	// Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
	StartTime string `pulumi:"startTime"`
	// Immutable. Trigger type of the user-specified Task.
	Type string `pulumi:"type"`
}

// Task scheduling and trigger settings.
type GoogleCloudDataplexV1TaskTriggerSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TaskTriggerSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) ToGoogleCloudDataplexV1TaskTriggerSpecResponseOutput() GoogleCloudDataplexV1TaskTriggerSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) ToGoogleCloudDataplexV1TaskTriggerSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TaskTriggerSpecResponseOutput {
	return o
}

// Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.
func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpecResponse) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.
func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpecResponse) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.
func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpecResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.
func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpecResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Immutable. Trigger type of the user-specified Task.
func (o GoogleCloudDataplexV1TaskTriggerSpecResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TaskTriggerSpecResponse) string { return v.Type }).(pulumi.StringOutput)
}

// DataScan scheduling and trigger settings.
type GoogleCloudDataplexV1Trigger struct {
	// The scan runs once via RunDataScan API.
	OnDemand *GoogleCloudDataplexV1TriggerOnDemand `pulumi:"onDemand"`
	// The scan is scheduled to run periodically.
	Schedule *GoogleCloudDataplexV1TriggerSchedule `pulumi:"schedule"`
}

// GoogleCloudDataplexV1TriggerInput is an input type that accepts GoogleCloudDataplexV1TriggerArgs and GoogleCloudDataplexV1TriggerOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerInput` via:
//
//	GoogleCloudDataplexV1TriggerArgs{...}
type GoogleCloudDataplexV1TriggerInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerOutput() GoogleCloudDataplexV1TriggerOutput
	ToGoogleCloudDataplexV1TriggerOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerOutput
}

// DataScan scheduling and trigger settings.
type GoogleCloudDataplexV1TriggerArgs struct {
	// The scan runs once via RunDataScan API.
	OnDemand GoogleCloudDataplexV1TriggerOnDemandPtrInput `pulumi:"onDemand"`
	// The scan is scheduled to run periodically.
	Schedule GoogleCloudDataplexV1TriggerSchedulePtrInput `pulumi:"schedule"`
}

func (GoogleCloudDataplexV1TriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1Trigger)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TriggerArgs) ToGoogleCloudDataplexV1TriggerOutput() GoogleCloudDataplexV1TriggerOutput {
	return i.ToGoogleCloudDataplexV1TriggerOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerArgs) ToGoogleCloudDataplexV1TriggerOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerOutput)
}

func (i GoogleCloudDataplexV1TriggerArgs) ToGoogleCloudDataplexV1TriggerPtrOutput() GoogleCloudDataplexV1TriggerPtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerArgs) ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerOutput).ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TriggerPtrInput is an input type that accepts GoogleCloudDataplexV1TriggerArgs, GoogleCloudDataplexV1TriggerPtr and GoogleCloudDataplexV1TriggerPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerPtrInput` via:
//
//	        GoogleCloudDataplexV1TriggerArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TriggerPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerPtrOutput() GoogleCloudDataplexV1TriggerPtrOutput
	ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerPtrOutput
}

type googleCloudDataplexV1TriggerPtrType GoogleCloudDataplexV1TriggerArgs

func GoogleCloudDataplexV1TriggerPtr(v *GoogleCloudDataplexV1TriggerArgs) GoogleCloudDataplexV1TriggerPtrInput {
	return (*googleCloudDataplexV1TriggerPtrType)(v)
}

func (*googleCloudDataplexV1TriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1Trigger)(nil)).Elem()
}

func (i *googleCloudDataplexV1TriggerPtrType) ToGoogleCloudDataplexV1TriggerPtrOutput() GoogleCloudDataplexV1TriggerPtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TriggerPtrType) ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerPtrOutput)
}

// DataScan scheduling and trigger settings.
type GoogleCloudDataplexV1TriggerOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1Trigger)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerOutput) ToGoogleCloudDataplexV1TriggerOutput() GoogleCloudDataplexV1TriggerOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOutput) ToGoogleCloudDataplexV1TriggerOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOutput) ToGoogleCloudDataplexV1TriggerPtrOutput() GoogleCloudDataplexV1TriggerPtrOutput {
	return o.ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TriggerOutput) ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1Trigger) *GoogleCloudDataplexV1Trigger {
		return &v
	}).(GoogleCloudDataplexV1TriggerPtrOutput)
}

// The scan runs once via RunDataScan API.
func (o GoogleCloudDataplexV1TriggerOutput) OnDemand() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Trigger) *GoogleCloudDataplexV1TriggerOnDemand { return v.OnDemand }).(GoogleCloudDataplexV1TriggerOnDemandPtrOutput)
}

// The scan is scheduled to run periodically.
func (o GoogleCloudDataplexV1TriggerOutput) Schedule() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1Trigger) *GoogleCloudDataplexV1TriggerSchedule { return v.Schedule }).(GoogleCloudDataplexV1TriggerSchedulePtrOutput)
}

type GoogleCloudDataplexV1TriggerPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1Trigger)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerPtrOutput) ToGoogleCloudDataplexV1TriggerPtrOutput() GoogleCloudDataplexV1TriggerPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerPtrOutput) ToGoogleCloudDataplexV1TriggerPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerPtrOutput) Elem() GoogleCloudDataplexV1TriggerOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1Trigger) GoogleCloudDataplexV1Trigger {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1Trigger
		return ret
	}).(GoogleCloudDataplexV1TriggerOutput)
}

// The scan runs once via RunDataScan API.
func (o GoogleCloudDataplexV1TriggerPtrOutput) OnDemand() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1Trigger) *GoogleCloudDataplexV1TriggerOnDemand {
		if v == nil {
			return nil
		}
		return v.OnDemand
	}).(GoogleCloudDataplexV1TriggerOnDemandPtrOutput)
}

// The scan is scheduled to run periodically.
func (o GoogleCloudDataplexV1TriggerPtrOutput) Schedule() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1Trigger) *GoogleCloudDataplexV1TriggerSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(GoogleCloudDataplexV1TriggerSchedulePtrOutput)
}

// The scan runs once via RunDataScan API.
type GoogleCloudDataplexV1TriggerOnDemand struct {
}

// GoogleCloudDataplexV1TriggerOnDemandInput is an input type that accepts GoogleCloudDataplexV1TriggerOnDemandArgs and GoogleCloudDataplexV1TriggerOnDemandOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerOnDemandInput` via:
//
//	GoogleCloudDataplexV1TriggerOnDemandArgs{...}
type GoogleCloudDataplexV1TriggerOnDemandInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerOnDemandOutput() GoogleCloudDataplexV1TriggerOnDemandOutput
	ToGoogleCloudDataplexV1TriggerOnDemandOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerOnDemandOutput
}

// The scan runs once via RunDataScan API.
type GoogleCloudDataplexV1TriggerOnDemandArgs struct {
}

func (GoogleCloudDataplexV1TriggerOnDemandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerOnDemand)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TriggerOnDemandArgs) ToGoogleCloudDataplexV1TriggerOnDemandOutput() GoogleCloudDataplexV1TriggerOnDemandOutput {
	return i.ToGoogleCloudDataplexV1TriggerOnDemandOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerOnDemandArgs) ToGoogleCloudDataplexV1TriggerOnDemandOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerOnDemandOutput)
}

func (i GoogleCloudDataplexV1TriggerOnDemandArgs) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutput() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerOnDemandArgs) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerOnDemandOutput).ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TriggerOnDemandPtrInput is an input type that accepts GoogleCloudDataplexV1TriggerOnDemandArgs, GoogleCloudDataplexV1TriggerOnDemandPtr and GoogleCloudDataplexV1TriggerOnDemandPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerOnDemandPtrInput` via:
//
//	        GoogleCloudDataplexV1TriggerOnDemandArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TriggerOnDemandPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerOnDemandPtrOutput() GoogleCloudDataplexV1TriggerOnDemandPtrOutput
	ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerOnDemandPtrOutput
}

type googleCloudDataplexV1TriggerOnDemandPtrType GoogleCloudDataplexV1TriggerOnDemandArgs

func GoogleCloudDataplexV1TriggerOnDemandPtr(v *GoogleCloudDataplexV1TriggerOnDemandArgs) GoogleCloudDataplexV1TriggerOnDemandPtrInput {
	return (*googleCloudDataplexV1TriggerOnDemandPtrType)(v)
}

func (*googleCloudDataplexV1TriggerOnDemandPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TriggerOnDemand)(nil)).Elem()
}

func (i *googleCloudDataplexV1TriggerOnDemandPtrType) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutput() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TriggerOnDemandPtrType) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerOnDemandPtrOutput)
}

// The scan runs once via RunDataScan API.
type GoogleCloudDataplexV1TriggerOnDemandOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerOnDemandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerOnDemand)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerOnDemandOutput) ToGoogleCloudDataplexV1TriggerOnDemandOutput() GoogleCloudDataplexV1TriggerOnDemandOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOnDemandOutput) ToGoogleCloudDataplexV1TriggerOnDemandOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOnDemandOutput) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutput() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o.ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TriggerOnDemandOutput) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TriggerOnDemand) *GoogleCloudDataplexV1TriggerOnDemand {
		return &v
	}).(GoogleCloudDataplexV1TriggerOnDemandPtrOutput)
}

type GoogleCloudDataplexV1TriggerOnDemandPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerOnDemandPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TriggerOnDemand)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerOnDemandPtrOutput) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutput() GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOnDemandPtrOutput) ToGoogleCloudDataplexV1TriggerOnDemandPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOnDemandPtrOutput) Elem() GoogleCloudDataplexV1TriggerOnDemandOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TriggerOnDemand) GoogleCloudDataplexV1TriggerOnDemand {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TriggerOnDemand
		return ret
	}).(GoogleCloudDataplexV1TriggerOnDemandOutput)
}

// The scan runs once via RunDataScan API.
type GoogleCloudDataplexV1TriggerOnDemandResponse struct {
}

// The scan runs once via RunDataScan API.
type GoogleCloudDataplexV1TriggerOnDemandResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerOnDemandResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerOnDemandResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerOnDemandResponseOutput) ToGoogleCloudDataplexV1TriggerOnDemandResponseOutput() GoogleCloudDataplexV1TriggerOnDemandResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerOnDemandResponseOutput) ToGoogleCloudDataplexV1TriggerOnDemandResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerOnDemandResponseOutput {
	return o
}

// DataScan scheduling and trigger settings.
type GoogleCloudDataplexV1TriggerResponse struct {
	// The scan runs once via RunDataScan API.
	OnDemand GoogleCloudDataplexV1TriggerOnDemandResponse `pulumi:"onDemand"`
	// The scan is scheduled to run periodically.
	Schedule GoogleCloudDataplexV1TriggerScheduleResponse `pulumi:"schedule"`
}

// DataScan scheduling and trigger settings.
type GoogleCloudDataplexV1TriggerResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerResponseOutput) ToGoogleCloudDataplexV1TriggerResponseOutput() GoogleCloudDataplexV1TriggerResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerResponseOutput) ToGoogleCloudDataplexV1TriggerResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerResponseOutput {
	return o
}

// The scan runs once via RunDataScan API.
func (o GoogleCloudDataplexV1TriggerResponseOutput) OnDemand() GoogleCloudDataplexV1TriggerOnDemandResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TriggerResponse) GoogleCloudDataplexV1TriggerOnDemandResponse {
		return v.OnDemand
	}).(GoogleCloudDataplexV1TriggerOnDemandResponseOutput)
}

// The scan is scheduled to run periodically.
func (o GoogleCloudDataplexV1TriggerResponseOutput) Schedule() GoogleCloudDataplexV1TriggerScheduleResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TriggerResponse) GoogleCloudDataplexV1TriggerScheduleResponse {
		return v.Schedule
	}).(GoogleCloudDataplexV1TriggerScheduleResponseOutput)
}

// The scan is scheduled to run periodically.
type GoogleCloudDataplexV1TriggerSchedule struct {
	// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
	Cron string `pulumi:"cron"`
}

// GoogleCloudDataplexV1TriggerScheduleInput is an input type that accepts GoogleCloudDataplexV1TriggerScheduleArgs and GoogleCloudDataplexV1TriggerScheduleOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerScheduleInput` via:
//
//	GoogleCloudDataplexV1TriggerScheduleArgs{...}
type GoogleCloudDataplexV1TriggerScheduleInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerScheduleOutput() GoogleCloudDataplexV1TriggerScheduleOutput
	ToGoogleCloudDataplexV1TriggerScheduleOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerScheduleOutput
}

// The scan is scheduled to run periodically.
type GoogleCloudDataplexV1TriggerScheduleArgs struct {
	// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
	Cron pulumi.StringInput `pulumi:"cron"`
}

func (GoogleCloudDataplexV1TriggerScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerSchedule)(nil)).Elem()
}

func (i GoogleCloudDataplexV1TriggerScheduleArgs) ToGoogleCloudDataplexV1TriggerScheduleOutput() GoogleCloudDataplexV1TriggerScheduleOutput {
	return i.ToGoogleCloudDataplexV1TriggerScheduleOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerScheduleArgs) ToGoogleCloudDataplexV1TriggerScheduleOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerScheduleOutput)
}

func (i GoogleCloudDataplexV1TriggerScheduleArgs) ToGoogleCloudDataplexV1TriggerSchedulePtrOutput() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1TriggerScheduleArgs) ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerScheduleOutput).ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1TriggerSchedulePtrInput is an input type that accepts GoogleCloudDataplexV1TriggerScheduleArgs, GoogleCloudDataplexV1TriggerSchedulePtr and GoogleCloudDataplexV1TriggerSchedulePtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1TriggerSchedulePtrInput` via:
//
//	        GoogleCloudDataplexV1TriggerScheduleArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1TriggerSchedulePtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1TriggerSchedulePtrOutput() GoogleCloudDataplexV1TriggerSchedulePtrOutput
	ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(context.Context) GoogleCloudDataplexV1TriggerSchedulePtrOutput
}

type googleCloudDataplexV1TriggerSchedulePtrType GoogleCloudDataplexV1TriggerScheduleArgs

func GoogleCloudDataplexV1TriggerSchedulePtr(v *GoogleCloudDataplexV1TriggerScheduleArgs) GoogleCloudDataplexV1TriggerSchedulePtrInput {
	return (*googleCloudDataplexV1TriggerSchedulePtrType)(v)
}

func (*googleCloudDataplexV1TriggerSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TriggerSchedule)(nil)).Elem()
}

func (i *googleCloudDataplexV1TriggerSchedulePtrType) ToGoogleCloudDataplexV1TriggerSchedulePtrOutput() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return i.ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1TriggerSchedulePtrType) ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1TriggerSchedulePtrOutput)
}

// The scan is scheduled to run periodically.
type GoogleCloudDataplexV1TriggerScheduleOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerSchedule)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerScheduleOutput) ToGoogleCloudDataplexV1TriggerScheduleOutput() GoogleCloudDataplexV1TriggerScheduleOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerScheduleOutput) ToGoogleCloudDataplexV1TriggerScheduleOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerScheduleOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerScheduleOutput) ToGoogleCloudDataplexV1TriggerSchedulePtrOutput() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o.ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1TriggerScheduleOutput) ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1TriggerSchedule) *GoogleCloudDataplexV1TriggerSchedule {
		return &v
	}).(GoogleCloudDataplexV1TriggerSchedulePtrOutput)
}

// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
func (o GoogleCloudDataplexV1TriggerScheduleOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TriggerSchedule) string { return v.Cron }).(pulumi.StringOutput)
}

type GoogleCloudDataplexV1TriggerSchedulePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1TriggerSchedule)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerSchedulePtrOutput) ToGoogleCloudDataplexV1TriggerSchedulePtrOutput() GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerSchedulePtrOutput) ToGoogleCloudDataplexV1TriggerSchedulePtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerSchedulePtrOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerSchedulePtrOutput) Elem() GoogleCloudDataplexV1TriggerScheduleOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TriggerSchedule) GoogleCloudDataplexV1TriggerSchedule {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1TriggerSchedule
		return ret
	}).(GoogleCloudDataplexV1TriggerScheduleOutput)
}

// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
func (o GoogleCloudDataplexV1TriggerSchedulePtrOutput) Cron() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1TriggerSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Cron
	}).(pulumi.StringPtrOutput)
}

// The scan is scheduled to run periodically.
type GoogleCloudDataplexV1TriggerScheduleResponse struct {
	// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
	Cron string `pulumi:"cron"`
}

// The scan is scheduled to run periodically.
type GoogleCloudDataplexV1TriggerScheduleResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1TriggerScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1TriggerScheduleResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1TriggerScheduleResponseOutput) ToGoogleCloudDataplexV1TriggerScheduleResponseOutput() GoogleCloudDataplexV1TriggerScheduleResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1TriggerScheduleResponseOutput) ToGoogleCloudDataplexV1TriggerScheduleResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1TriggerScheduleResponseOutput {
	return o
}

// Cron (https://en.wikipedia.org/wiki/Cron) schedule for running scans periodically.To explicitly set a timezone in the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database (wikipedia (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)). For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.This field is required for Schedule scans.
func (o GoogleCloudDataplexV1TriggerScheduleResponseOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1TriggerScheduleResponse) string { return v.Cron }).(pulumi.StringOutput)
}

// Settings to manage the metadata discovery and publishing in a zone.
type GoogleCloudDataplexV1ZoneDiscoverySpec struct {
	// Optional. Configuration for CSV data.
	CsvOptions *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions `pulumi:"csvOptions"`
	// Whether discovery is enabled.
	Enabled bool `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns []string `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns []string `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule *string `pulumi:"schedule"`
}

// GoogleCloudDataplexV1ZoneDiscoverySpecInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecArgs and GoogleCloudDataplexV1ZoneDiscoverySpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecInput` via:
//
//	GoogleCloudDataplexV1ZoneDiscoverySpecArgs{...}
type GoogleCloudDataplexV1ZoneDiscoverySpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecOutput() GoogleCloudDataplexV1ZoneDiscoverySpecOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecOutput
}

// Settings to manage the metadata discovery and publishing in a zone.
type GoogleCloudDataplexV1ZoneDiscoverySpecArgs struct {
	// Optional. Configuration for CSV data.
	CsvOptions GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput `pulumi:"csvOptions"`
	// Whether discovery is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns pulumi.StringArrayInput `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns pulumi.StringArrayInput `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule pulumi.StringPtrInput `pulumi:"schedule"`
}

func (GoogleCloudDataplexV1ZoneDiscoverySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecOutput() GoogleCloudDataplexV1ZoneDiscoverySpecOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecOutput)
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecOutput).ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecArgs, GoogleCloudDataplexV1ZoneDiscoverySpecPtr and GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput` via:
//
//	        GoogleCloudDataplexV1ZoneDiscoverySpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput
}

type googleCloudDataplexV1ZoneDiscoverySpecPtrType GoogleCloudDataplexV1ZoneDiscoverySpecArgs

func GoogleCloudDataplexV1ZoneDiscoverySpecPtr(v *GoogleCloudDataplexV1ZoneDiscoverySpecArgs) GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput {
	return (*googleCloudDataplexV1ZoneDiscoverySpecPtrType)(v)
}

func (*googleCloudDataplexV1ZoneDiscoverySpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpec)(nil)).Elem()
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput)
}

// Settings to manage the metadata discovery and publishing in a zone.
type GoogleCloudDataplexV1ZoneDiscoverySpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecOutput() GoogleCloudDataplexV1ZoneDiscoverySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return o.ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ZoneDiscoverySpec) *GoogleCloudDataplexV1ZoneDiscoverySpec {
		return &v
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput)
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) CsvOptions() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions {
		return v.CsvOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput)
}

// Whether discovery is enabled.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) []string { return v.ExcludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) []string { return v.IncludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) JsonOptions() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions {
		return v.JsonOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpec) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) Elem() GoogleCloudDataplexV1ZoneDiscoverySpecOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) GoogleCloudDataplexV1ZoneDiscoverySpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ZoneDiscoverySpec
		return ret
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecOutput)
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) CsvOptions() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions {
		if v == nil {
			return nil
		}
		return v.CsvOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput)
}

// Whether discovery is enabled.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePatterns
	}).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) []string {
		if v == nil {
			return nil
		}
		return v.IncludePatterns
	}).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) JsonOptions() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions {
		if v == nil {
			return nil
		}
		return v.JsonOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpec) *string {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter *string `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference *bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding *string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows *int `pulumi:"headerRows"`
}

// GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs and GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsInput` via:
//
//	GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs{...}
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter pulumi.StringPtrInput `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference pulumi.BoolPtrInput `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows pulumi.IntPtrInput `pulumi:"headerRows"`
}

func (GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput)
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput).ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs, GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtr and GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput
}

type googleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrType GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs

func GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtr(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput {
	return (*googleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrType)(v)
}

func (*googleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions {
		return &v
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput)
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *bool { return v.DisableTypeInference }).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *int { return v.HeaderRows }).(pulumi.IntPtrOutput)
}

type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) Elem() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
		return ret
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput)
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTypeInference
	}).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput) HeaderRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions) *int {
		if v == nil {
			return nil
		}
		return v.HeaderRows
	}).(pulumi.IntPtrOutput)
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse struct {
	// Optional. The delimiter being used to separate values. This defaults to ','.
	Delimiter string `pulumi:"delimiter"`
	// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
	DisableTypeInference bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding string `pulumi:"encoding"`
	// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
	HeaderRows int `pulumi:"headerRows"`
}

// Describe CSV and similar semi-structured data formats.
type GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput {
	return o
}

// Optional. The delimiter being used to separate values. This defaults to ','.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse) string { return v.Delimiter }).(pulumi.StringOutput)
}

// Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) DisableTypeInference() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse) bool { return v.DisableTypeInference }).(pulumi.BoolOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput) HeaderRows() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse) int { return v.HeaderRows }).(pulumi.IntOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference *bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding *string `pulumi:"encoding"`
}

// GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs and GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsInput` via:
//
//	GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs{...}
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput
}

// Describe JSON data format.
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference pulumi.BoolPtrInput `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
}

func (GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput)
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput).ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(ctx)
}

// GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput is an input type that accepts GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs, GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtr and GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput` via:
//
//	        GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput
	ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput
}

type googleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrType GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs

func GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtr(v *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput {
	return (*googleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrType)(v)
}

func (*googleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions)(nil)).Elem()
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return i.ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (i *googleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrType) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o.ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(context.Background())
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions {
		return &v
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput)
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) *bool { return v.DisableTypeInference }).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) Elem() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions {
		if v != nil {
			return *v
		}
		var ret GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
		return ret
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput)
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) DisableTypeInference() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTypeInference
	}).(pulumi.BoolPtrOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions) *string {
		if v == nil {
			return nil
		}
		return v.Encoding
	}).(pulumi.StringPtrOutput)
}

// Describe JSON data format.
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse struct {
	// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
	DisableTypeInference bool `pulumi:"disableTypeInference"`
	// Optional. The character encoding of the data. The default is UTF-8.
	Encoding string `pulumi:"encoding"`
}

// Describe JSON data format.
type GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput {
	return o
}

// Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput) DisableTypeInference() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse) bool { return v.DisableTypeInference }).(pulumi.BoolOutput)
}

// Optional. The character encoding of the data. The default is UTF-8.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse) string { return v.Encoding }).(pulumi.StringOutput)
}

// Settings to manage the metadata discovery and publishing in a zone.
type GoogleCloudDataplexV1ZoneDiscoverySpecResponse struct {
	// Optional. Configuration for CSV data.
	CsvOptions GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse `pulumi:"csvOptions"`
	// Whether discovery is enabled.
	Enabled bool `pulumi:"enabled"`
	// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	ExcludePatterns []string `pulumi:"excludePatterns"`
	// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
	IncludePatterns []string `pulumi:"includePatterns"`
	// Optional. Configuration for Json data.
	JsonOptions GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse `pulumi:"jsonOptions"`
	// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
	Schedule string `pulumi:"schedule"`
}

// Settings to manage the metadata discovery and publishing in a zone.
type GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput() GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) ToGoogleCloudDataplexV1ZoneDiscoverySpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput {
	return o
}

// Optional. Configuration for CSV data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) CsvOptions() GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponse {
		return v.CsvOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput)
}

// Whether discovery is enabled.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) ExcludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) []string { return v.ExcludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) IncludePatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) []string { return v.IncludePatterns }).(pulumi.StringArrayOutput)
}

// Optional. Configuration for Json data.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) JsonOptions() GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponse {
		return v.JsonOptions
	}).(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput)
}

// Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
func (o GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneDiscoverySpecResponse) string { return v.Schedule }).(pulumi.StringOutput)
}

// Settings for resources attached as assets within a zone.
type GoogleCloudDataplexV1ZoneResourceSpec struct {
	// Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
	LocationType GoogleCloudDataplexV1ZoneResourceSpecLocationType `pulumi:"locationType"`
}

// GoogleCloudDataplexV1ZoneResourceSpecInput is an input type that accepts GoogleCloudDataplexV1ZoneResourceSpecArgs and GoogleCloudDataplexV1ZoneResourceSpecOutput values.
// You can construct a concrete instance of `GoogleCloudDataplexV1ZoneResourceSpecInput` via:
//
//	GoogleCloudDataplexV1ZoneResourceSpecArgs{...}
type GoogleCloudDataplexV1ZoneResourceSpecInput interface {
	pulumi.Input

	ToGoogleCloudDataplexV1ZoneResourceSpecOutput() GoogleCloudDataplexV1ZoneResourceSpecOutput
	ToGoogleCloudDataplexV1ZoneResourceSpecOutputWithContext(context.Context) GoogleCloudDataplexV1ZoneResourceSpecOutput
}

// Settings for resources attached as assets within a zone.
type GoogleCloudDataplexV1ZoneResourceSpecArgs struct {
	// Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
	LocationType GoogleCloudDataplexV1ZoneResourceSpecLocationTypeInput `pulumi:"locationType"`
}

func (GoogleCloudDataplexV1ZoneResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneResourceSpec)(nil)).Elem()
}

func (i GoogleCloudDataplexV1ZoneResourceSpecArgs) ToGoogleCloudDataplexV1ZoneResourceSpecOutput() GoogleCloudDataplexV1ZoneResourceSpecOutput {
	return i.ToGoogleCloudDataplexV1ZoneResourceSpecOutputWithContext(context.Background())
}

func (i GoogleCloudDataplexV1ZoneResourceSpecArgs) ToGoogleCloudDataplexV1ZoneResourceSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudDataplexV1ZoneResourceSpecOutput)
}

// Settings for resources attached as assets within a zone.
type GoogleCloudDataplexV1ZoneResourceSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneResourceSpec)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneResourceSpecOutput) ToGoogleCloudDataplexV1ZoneResourceSpecOutput() GoogleCloudDataplexV1ZoneResourceSpecOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneResourceSpecOutput) ToGoogleCloudDataplexV1ZoneResourceSpecOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneResourceSpecOutput {
	return o
}

// Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
func (o GoogleCloudDataplexV1ZoneResourceSpecOutput) LocationType() GoogleCloudDataplexV1ZoneResourceSpecLocationTypeOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneResourceSpec) GoogleCloudDataplexV1ZoneResourceSpecLocationType {
		return v.LocationType
	}).(GoogleCloudDataplexV1ZoneResourceSpecLocationTypeOutput)
}

// Settings for resources attached as assets within a zone.
type GoogleCloudDataplexV1ZoneResourceSpecResponse struct {
	// Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
	LocationType string `pulumi:"locationType"`
}

// Settings for resources attached as assets within a zone.
type GoogleCloudDataplexV1ZoneResourceSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudDataplexV1ZoneResourceSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudDataplexV1ZoneResourceSpecResponse)(nil)).Elem()
}

func (o GoogleCloudDataplexV1ZoneResourceSpecResponseOutput) ToGoogleCloudDataplexV1ZoneResourceSpecResponseOutput() GoogleCloudDataplexV1ZoneResourceSpecResponseOutput {
	return o
}

func (o GoogleCloudDataplexV1ZoneResourceSpecResponseOutput) ToGoogleCloudDataplexV1ZoneResourceSpecResponseOutputWithContext(ctx context.Context) GoogleCloudDataplexV1ZoneResourceSpecResponseOutput {
	return o
}

// Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.
func (o GoogleCloudDataplexV1ZoneResourceSpecResponseOutput) LocationType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudDataplexV1ZoneResourceSpecResponse) string { return v.LocationType }).(pulumi.StringOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type GoogleIamV1AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// GoogleIamV1AuditConfigInput is an input type that accepts GoogleIamV1AuditConfigArgs and GoogleIamV1AuditConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigInput` via:
//
//	GoogleIamV1AuditConfigArgs{...}
type GoogleIamV1AuditConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput
	ToGoogleIamV1AuditConfigOutputWithContext(context.Context) GoogleIamV1AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type GoogleIamV1AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs GoogleIamV1AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GoogleIamV1AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return i.ToGoogleIamV1AuditConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigOutput)
}

// GoogleIamV1AuditConfigArrayInput is an input type that accepts GoogleIamV1AuditConfigArray and GoogleIamV1AuditConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigArrayInput` via:
//
//	GoogleIamV1AuditConfigArray{ GoogleIamV1AuditConfigArgs{...} }
type GoogleIamV1AuditConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput
	ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditConfigArrayOutput
}

type GoogleIamV1AuditConfigArray []GoogleIamV1AuditConfigInput

func (GoogleIamV1AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return i.ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type GoogleIamV1AuditConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return o
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) []GoogleIamV1AuditLogConfig { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
func (o GoogleIamV1AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GoogleIamV1AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfig {
		return vs[0].([]GoogleIamV1AuditConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutput() GoogleIamV1AuditConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigResponseOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) []GoogleIamV1AuditLogConfigResponse { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
func (o GoogleIamV1AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type GoogleIamV1AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutput() GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfigResponse {
		return vs[0].([]GoogleIamV1AuditConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *GoogleIamV1AuditLogConfigLogType `pulumi:"logType"`
}

// GoogleIamV1AuditLogConfigInput is an input type that accepts GoogleIamV1AuditLogConfigArgs and GoogleIamV1AuditLogConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigInput` via:
//
//	GoogleIamV1AuditLogConfigArgs{...}
type GoogleIamV1AuditLogConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput
	ToGoogleIamV1AuditLogConfigOutputWithContext(context.Context) GoogleIamV1AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType GoogleIamV1AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (GoogleIamV1AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return i.ToGoogleIamV1AuditLogConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigOutput)
}

// GoogleIamV1AuditLogConfigArrayInput is an input type that accepts GoogleIamV1AuditLogConfigArray and GoogleIamV1AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigArrayInput` via:
//
//	GoogleIamV1AuditLogConfigArray{ GoogleIamV1AuditLogConfigArgs{...} }
type GoogleIamV1AuditLogConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput
	ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditLogConfigArrayOutput
}

type GoogleIamV1AuditLogConfigArray []GoogleIamV1AuditLogConfigInput

func (GoogleIamV1AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return i.ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigOutput) LogType() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) *GoogleIamV1AuditLogConfigLogType { return v.LogType }).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

type GoogleIamV1AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfig {
		return vs[0].([]GoogleIamV1AuditLogConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutput() GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type GoogleIamV1AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutput() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfigResponse {
		return vs[0].([]GoogleIamV1AuditLogConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigResponseOutput)
}

// Associates members, or principals, with a role.
type GoogleIamV1Binding struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *GoogleTypeExpr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
	Role *string `pulumi:"role"`
}

// GoogleIamV1BindingInput is an input type that accepts GoogleIamV1BindingArgs and GoogleIamV1BindingOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingInput` via:
//
//	GoogleIamV1BindingArgs{...}
type GoogleIamV1BindingInput interface {
	pulumi.Input

	ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput
	ToGoogleIamV1BindingOutputWithContext(context.Context) GoogleIamV1BindingOutput
}

// Associates members, or principals, with a role.
type GoogleIamV1BindingArgs struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (GoogleIamV1BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return i.ToGoogleIamV1BindingOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingOutput)
}

// GoogleIamV1BindingArrayInput is an input type that accepts GoogleIamV1BindingArray and GoogleIamV1BindingArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingArrayInput` via:
//
//	GoogleIamV1BindingArray{ GoogleIamV1BindingArgs{...} }
type GoogleIamV1BindingArrayInput interface {
	pulumi.Input

	ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput
	ToGoogleIamV1BindingArrayOutputWithContext(context.Context) GoogleIamV1BindingArrayOutput
}

type GoogleIamV1BindingArray []GoogleIamV1BindingInput

func (GoogleIamV1BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return i.ToGoogleIamV1BindingArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingArrayOutput)
}

// Associates members, or principals, with a role.
type GoogleIamV1BindingOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return o
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingOutput) Condition() GoogleTypeExprPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *GoogleTypeExpr { return v.Condition }).(GoogleTypeExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o GoogleIamV1BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
func (o GoogleIamV1BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type GoogleIamV1BindingArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1Binding {
		return vs[0].([]GoogleIamV1Binding)[vs[1].(int)]
	}).(GoogleIamV1BindingOutput)
}

// Associates members, or principals, with a role.
type GoogleIamV1BindingResponse struct {
	// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
	Role string `pulumi:"role"`
}

// Associates members, or principals, with a role.
type GoogleIamV1BindingResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutput() GoogleIamV1BindingResponseOutput {
	return o
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseOutput {
	return o
}

// The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingResponseOutput) Condition() GoogleTypeExprResponseOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) GoogleTypeExprResponse { return v.Condition }).(GoogleTypeExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
func (o GoogleIamV1BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
func (o GoogleIamV1BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type GoogleIamV1BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutput() GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1BindingResponse {
		return vs[0].([]GoogleIamV1BindingResponse)[vs[1].(int)]
	}).(GoogleIamV1BindingResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExpr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// GoogleTypeExprInput is an input type that accepts GoogleTypeExprArgs and GoogleTypeExprOutput values.
// You can construct a concrete instance of `GoogleTypeExprInput` via:
//
//	GoogleTypeExprArgs{...}
type GoogleTypeExprInput interface {
	pulumi.Input

	ToGoogleTypeExprOutput() GoogleTypeExprOutput
	ToGoogleTypeExprOutputWithContext(context.Context) GoogleTypeExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GoogleTypeExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return i.ToGoogleTypeExprOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput)
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput).ToGoogleTypeExprPtrOutputWithContext(ctx)
}

// GoogleTypeExprPtrInput is an input type that accepts GoogleTypeExprArgs, GoogleTypeExprPtr and GoogleTypeExprPtrOutput values.
// You can construct a concrete instance of `GoogleTypeExprPtrInput` via:
//
//	        GoogleTypeExprArgs{...}
//
//	or:
//
//	        nil
type GoogleTypeExprPtrInput interface {
	pulumi.Input

	ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput
	ToGoogleTypeExprPtrOutputWithContext(context.Context) GoogleTypeExprPtrOutput
}

type googleTypeExprPtrType GoogleTypeExprArgs

func GoogleTypeExprPtr(v *GoogleTypeExprArgs) GoogleTypeExprPtrInput {
	return (*googleTypeExprPtrType)(v)
}

func (*googleTypeExprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeExpr) *GoogleTypeExpr {
		return &v
	}).(GoogleTypeExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GoogleTypeExprPtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) Elem() GoogleTypeExprOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) GoogleTypeExpr {
		if v != nil {
			return *v
		}
		var ret GoogleTypeExpr
		return ret
	}).(GoogleTypeExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExprResponse)(nil)).Elem()
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutput() GoogleTypeExprResponseOutput {
	return o
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutputWithContext(ctx context.Context) GoogleTypeExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1AssetResourceSpecInput)(nil)).Elem(), GoogleCloudDataplexV1AssetResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ContentNotebookInput)(nil)).Elem(), GoogleCloudDataplexV1ContentNotebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ContentNotebookPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ContentNotebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ContentSqlScriptInput)(nil)).Elem(), GoogleCloudDataplexV1ContentSqlScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ContentSqlScriptPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ContentSqlScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataAccessSpecInput)(nil)).Elem(), GoogleCloudDataplexV1DataAccessSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataAccessSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataAccessSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataAttributeBindingPathInput)(nil)).Elem(), GoogleCloudDataplexV1DataAttributeBindingPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataAttributeBindingPathArrayInput)(nil)).Elem(), GoogleCloudDataplexV1DataAttributeBindingPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataProfileSpecInput)(nil)).Elem(), GoogleCloudDataplexV1DataProfileSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataProfileSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataProfileSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleArrayInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleNonNullExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleNonNullExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRangeExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRangeExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRegexExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRegexExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleSetExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleSetExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualitySpecInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualitySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataQualitySpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataQualitySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionSpecInput)(nil)).Elem(), GoogleCloudDataplexV1DataScanExecutionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataScanExecutionSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1DataScanExecutionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1DataSourceInput)(nil)).Elem(), GoogleCloudDataplexV1DataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentInfrastructureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionSpecInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentSessionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1EnvironmentSessionSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1EnvironmentSessionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastoreInput)(nil)).Elem(), GoogleCloudDataplexV1LakeMetastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1LakeMetastorePtrInput)(nil)).Elem(), GoogleCloudDataplexV1LakeMetastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ResourceAccessSpecInput)(nil)).Elem(), GoogleCloudDataplexV1ResourceAccessSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ResourceAccessSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ResourceAccessSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1SchemaInput)(nil)).Elem(), GoogleCloudDataplexV1SchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1SchemaPartitionFieldInput)(nil)).Elem(), GoogleCloudDataplexV1SchemaPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1SchemaPartitionFieldArrayInput)(nil)).Elem(), GoogleCloudDataplexV1SchemaPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1SchemaSchemaFieldInput)(nil)).Elem(), GoogleCloudDataplexV1SchemaSchemaFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1SchemaSchemaFieldArrayInput)(nil)).Elem(), GoogleCloudDataplexV1SchemaSchemaFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatCsvOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatCsvOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatIcebergOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatIcebergOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatJsonOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1StorageFormatJsonOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1StorageFormatJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskExecutionSpecInput)(nil)).Elem(), GoogleCloudDataplexV1TaskExecutionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskNotebookTaskConfigInput)(nil)).Elem(), GoogleCloudDataplexV1TaskNotebookTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskNotebookTaskConfigPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskNotebookTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskSparkTaskConfigInput)(nil)).Elem(), GoogleCloudDataplexV1TaskSparkTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskSparkTaskConfigPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TaskSparkTaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TaskTriggerSpecInput)(nil)).Elem(), GoogleCloudDataplexV1TaskTriggerSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerOnDemandInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerOnDemandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerOnDemandPtrInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerOnDemandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerScheduleInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1TriggerSchedulePtrInput)(nil)).Elem(), GoogleCloudDataplexV1TriggerScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudDataplexV1ZoneResourceSpecInput)(nil)).Elem(), GoogleCloudDataplexV1ZoneResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigInput)(nil)).Elem(), GoogleIamV1AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingInput)(nil)).Elem(), GoogleIamV1BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingArrayInput)(nil)).Elem(), GoogleIamV1BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprPtrInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecCsvOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecJsonOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoverySpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoveryStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetDiscoveryStatusStatsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetResourceSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetResourceSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetResourceStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetSecurityStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1AssetStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentNotebookOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentNotebookPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentNotebookResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentSqlScriptOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentSqlScriptPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ContentSqlScriptResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAccessSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAccessSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAccessSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAttributeBindingPathOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAttributeBindingPathArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAttributeBindingPathResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataAttributeBindingPathResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoIntegerFieldInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoStringFieldInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoTopNValueResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultProfileResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataProfileSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityDimensionResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityDimensionResultResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleNonNullExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRangeExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRangeExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRangeExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRegexExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRegexExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRegexExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleResultResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleResultResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleSetExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleSetExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleSetExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualityRuleUniquenessExpectationResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualitySpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualitySpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataQualitySpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataScanExecutionSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataScanExecutionSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataScanExecutionSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataScanExecutionStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataSourceOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1DataSourceResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EntityCompatibilityStatusCompatibilityResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EntityCompatibilityStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentEndpointsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResourcesResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntimeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentInfrastructureSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentSessionSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentSessionSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentSessionSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1EnvironmentSessionStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1JobResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1LakeMetastoreOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1LakeMetastorePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1LakeMetastoreResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1LakeMetastoreStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ResourceAccessSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ResourceAccessSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ResourceAccessSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ScannedDataIncrementalFieldResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ScannedDataResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaPartitionFieldOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaPartitionFieldResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaPartitionFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaSchemaFieldOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaSchemaFieldArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaSchemaFieldResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1SchemaSchemaFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageAccessResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatCsvOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatCsvOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatCsvOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatIcebergOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatIcebergOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatIcebergOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatJsonOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatJsonOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatJsonOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1StorageFormatResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskExecutionSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskExecutionSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskExecutionStatusResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResourcesResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntimeResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskInfrastructureSpecVpcNetworkResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskNotebookTaskConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskNotebookTaskConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskNotebookTaskConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskSparkTaskConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskSparkTaskConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskSparkTaskConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskTriggerSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TaskTriggerSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerOnDemandOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerOnDemandPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerOnDemandResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerScheduleOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerSchedulePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1TriggerScheduleResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptionsResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneResourceSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudDataplexV1ZoneResourceSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprPtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprResponseOutput{})
}
