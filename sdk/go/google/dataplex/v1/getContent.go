// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a content resource.
func LookupContent(ctx *pulumi.Context, args *LookupContentArgs, opts ...pulumi.InvokeOption) (*LookupContentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContentResult
	err := ctx.Invoke("google-native:dataplex/v1:getContent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupContentArgs struct {
	ContentId string  `pulumi:"contentId"`
	LakeId    string  `pulumi:"lakeId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
	View      *string `pulumi:"view"`
}

type LookupContentResult struct {
	// Content creation time.
	CreateTime string `pulumi:"createTime"`
	// Content data in string format.
	DataText string `pulumi:"dataText"`
	// Optional. Description of the content.
	Description string `pulumi:"description"`
	// Optional. User defined labels for the content.
	Labels map[string]string `pulumi:"labels"`
	// The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
	Name string `pulumi:"name"`
	// Notebook related configurations.
	Notebook GoogleCloudDataplexV1ContentNotebookResponse `pulumi:"notebook"`
	// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
	Path string `pulumi:"path"`
	// Sql Script related configurations.
	SqlScript GoogleCloudDataplexV1ContentSqlScriptResponse `pulumi:"sqlScript"`
	// System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
	Uid string `pulumi:"uid"`
	// The time when the content was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupContentOutput(ctx *pulumi.Context, args LookupContentOutputArgs, opts ...pulumi.InvokeOption) LookupContentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContentResult, error) {
			args := v.(LookupContentArgs)
			r, err := LookupContent(ctx, &args, opts...)
			var s LookupContentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContentResultOutput)
}

type LookupContentOutputArgs struct {
	ContentId pulumi.StringInput    `pulumi:"contentId"`
	LakeId    pulumi.StringInput    `pulumi:"lakeId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
	View      pulumi.StringPtrInput `pulumi:"view"`
}

func (LookupContentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContentArgs)(nil)).Elem()
}

type LookupContentResultOutput struct{ *pulumi.OutputState }

func (LookupContentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContentResult)(nil)).Elem()
}

func (o LookupContentResultOutput) ToLookupContentResultOutput() LookupContentResultOutput {
	return o
}

func (o LookupContentResultOutput) ToLookupContentResultOutputWithContext(ctx context.Context) LookupContentResultOutput {
	return o
}

// Content creation time.
func (o LookupContentResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Content data in string format.
func (o LookupContentResultOutput) DataText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.DataText }).(pulumi.StringOutput)
}

// Optional. Description of the content.
func (o LookupContentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. User defined labels for the content.
func (o LookupContentResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContentResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/content/{content_id}
func (o LookupContentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Notebook related configurations.
func (o LookupContentResultOutput) Notebook() GoogleCloudDataplexV1ContentNotebookResponseOutput {
	return o.ApplyT(func(v LookupContentResult) GoogleCloudDataplexV1ContentNotebookResponse { return v.Notebook }).(GoogleCloudDataplexV1ContentNotebookResponseOutput)
}

// The path for the Content file, represented as directory structure. Unique within a lake. Limited to alphanumerics, hyphens, underscores, dots and slashes.
func (o LookupContentResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.Path }).(pulumi.StringOutput)
}

// Sql Script related configurations.
func (o LookupContentResultOutput) SqlScript() GoogleCloudDataplexV1ContentSqlScriptResponseOutput {
	return o.ApplyT(func(v LookupContentResult) GoogleCloudDataplexV1ContentSqlScriptResponse { return v.SqlScript }).(GoogleCloudDataplexV1ContentSqlScriptResponseOutput)
}

// System generated globally unique ID for the content. This ID will be different if the content is deleted and re-created with the same name.
func (o LookupContentResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.Uid }).(pulumi.StringOutput)
}

// The time when the content was last updated.
func (o LookupContentResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContentResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContentResultOutput{})
}
