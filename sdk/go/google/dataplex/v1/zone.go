// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a zone resource within a lake.
// Auto-naming is currently not supported for this resource.
type Zone struct {
	pulumi.CustomResourceState

	// Aggregated status of the underlying assets of the zone.
	AssetStatus GoogleCloudDataplexV1AssetStatusResponseOutput `pulumi:"assetStatus"`
	// The time when the zone was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the zone.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Specification of the discovery feature applied to data in this zone.
	DiscoverySpec GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput `pulumi:"discoverySpec"`
	// Optional. User friendly display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. User defined labels for the zone.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	LakeId   pulumi.StringOutput    `pulumi:"lakeId"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Specification of the resources that are referenced by the assets within this zone.
	ResourceSpec GoogleCloudDataplexV1ZoneResourceSpecResponseOutput `pulumi:"resourceSpec"`
	// Current state of the zone.
	State pulumi.StringOutput `pulumi:"state"`
	// Immutable. The type of the zone.
	Type pulumi.StringOutput `pulumi:"type"`
	// System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the zone was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. "default", "global-temp")
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewZone registers a new resource with the given unique name, arguments, and options.
func NewZone(ctx *pulumi.Context,
	name string, args *ZoneArgs, opts ...pulumi.ResourceOption) (*Zone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LakeId == nil {
		return nil, errors.New("invalid value for required argument 'LakeId'")
	}
	if args.ResourceSpec == nil {
		return nil, errors.New("invalid value for required argument 'ResourceSpec'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"lakeId",
		"location",
		"project",
		"zoneId",
	})
	opts = append(opts, replaceOnChanges)
	var resource Zone
	err := ctx.RegisterResource("google-native:dataplex/v1:Zone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZone gets an existing Zone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneState, opts ...pulumi.ResourceOption) (*Zone, error) {
	var resource Zone
	err := ctx.ReadResource("google-native:dataplex/v1:Zone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Zone resources.
type zoneState struct {
}

type ZoneState struct {
}

func (ZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneState)(nil)).Elem()
}

type zoneArgs struct {
	// Optional. Description of the zone.
	Description *string `pulumi:"description"`
	// Optional. Specification of the discovery feature applied to data in this zone.
	DiscoverySpec *GoogleCloudDataplexV1ZoneDiscoverySpec `pulumi:"discoverySpec"`
	// Optional. User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// Optional. User defined labels for the zone.
	Labels   map[string]string `pulumi:"labels"`
	LakeId   string            `pulumi:"lakeId"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
	// Specification of the resources that are referenced by the assets within this zone.
	ResourceSpec GoogleCloudDataplexV1ZoneResourceSpec `pulumi:"resourceSpec"`
	// Immutable. The type of the zone.
	Type ZoneType `pulumi:"type"`
	// Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. "default", "global-temp")
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Zone resource.
type ZoneArgs struct {
	// Optional. Description of the zone.
	Description pulumi.StringPtrInput
	// Optional. Specification of the discovery feature applied to data in this zone.
	DiscoverySpec GoogleCloudDataplexV1ZoneDiscoverySpecPtrInput
	// Optional. User friendly display name.
	DisplayName pulumi.StringPtrInput
	// Optional. User defined labels for the zone.
	Labels   pulumi.StringMapInput
	LakeId   pulumi.StringInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// Specification of the resources that are referenced by the assets within this zone.
	ResourceSpec GoogleCloudDataplexV1ZoneResourceSpecInput
	// Immutable. The type of the zone.
	Type ZoneTypeInput
	// Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. "default", "global-temp")
	ZoneId pulumi.StringInput
}

func (ZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneArgs)(nil)).Elem()
}

type ZoneInput interface {
	pulumi.Input

	ToZoneOutput() ZoneOutput
	ToZoneOutputWithContext(ctx context.Context) ZoneOutput
}

func (*Zone) ElementType() reflect.Type {
	return reflect.TypeOf((**Zone)(nil)).Elem()
}

func (i *Zone) ToZoneOutput() ZoneOutput {
	return i.ToZoneOutputWithContext(context.Background())
}

func (i *Zone) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneOutput)
}

type ZoneOutput struct{ *pulumi.OutputState }

func (ZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Zone)(nil)).Elem()
}

func (o ZoneOutput) ToZoneOutput() ZoneOutput {
	return o
}

func (o ZoneOutput) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return o
}

// Aggregated status of the underlying assets of the zone.
func (o ZoneOutput) AssetStatus() GoogleCloudDataplexV1AssetStatusResponseOutput {
	return o.ApplyT(func(v *Zone) GoogleCloudDataplexV1AssetStatusResponseOutput { return v.AssetStatus }).(GoogleCloudDataplexV1AssetStatusResponseOutput)
}

// The time when the zone was created.
func (o ZoneOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the zone.
func (o ZoneOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Specification of the discovery feature applied to data in this zone.
func (o ZoneOutput) DiscoverySpec() GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput {
	return o.ApplyT(func(v *Zone) GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput { return v.DiscoverySpec }).(GoogleCloudDataplexV1ZoneDiscoverySpecResponseOutput)
}

// Optional. User friendly display name.
func (o ZoneOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. User defined labels for the zone.
func (o ZoneOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ZoneOutput) LakeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.LakeId }).(pulumi.StringOutput)
}

func (o ZoneOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
func (o ZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ZoneOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specification of the resources that are referenced by the assets within this zone.
func (o ZoneOutput) ResourceSpec() GoogleCloudDataplexV1ZoneResourceSpecResponseOutput {
	return o.ApplyT(func(v *Zone) GoogleCloudDataplexV1ZoneResourceSpecResponseOutput { return v.ResourceSpec }).(GoogleCloudDataplexV1ZoneResourceSpecResponseOutput)
}

// Current state of the zone.
func (o ZoneOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Immutable. The type of the zone.
func (o ZoneOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
func (o ZoneOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the zone was last updated.
func (o ZoneOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Required. Zone identifier. This ID will be used to generate names such as database and dataset names when publishing metadata to Hive Metastore and BigQuery. * Must contain only lowercase letters, numbers and hyphens. * Must start with a letter. * Must end with a number or a letter. * Must be between 1-63 characters. * Must be unique across all lakes from all locations in a project. * Must not be one of the reserved IDs (i.e. "default", "global-temp")
func (o ZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Zone) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneInput)(nil)).Elem(), &Zone{})
	pulumi.RegisterOutputType(ZoneOutput{})
}
