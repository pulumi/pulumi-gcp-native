// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
type InternalRangeIamPolicy struct {
	pulumi.CustomResourceState
}

// NewInternalRangeIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewInternalRangeIamPolicy(ctx *pulumi.Context,
	name string, args *InternalRangeIamPolicyArgs, opts ...pulumi.ResourceOption) (*InternalRangeIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternalRangesId == nil {
		return nil, errors.New("invalid value for required argument 'InternalRangesId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource InternalRangeIamPolicy
	err := ctx.RegisterResource("google-cloud:networkconnectivity/v1alpha1:InternalRangeIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternalRangeIamPolicy gets an existing InternalRangeIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternalRangeIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternalRangeIamPolicyState, opts ...pulumi.ResourceOption) (*InternalRangeIamPolicy, error) {
	var resource InternalRangeIamPolicy
	err := ctx.ReadResource("google-cloud:networkconnectivity/v1alpha1:InternalRangeIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternalRangeIamPolicy resources.
type internalRangeIamPolicyState struct {
}

type InternalRangeIamPolicyState struct {
}

func (InternalRangeIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*internalRangeIamPolicyState)(nil)).Elem()
}

type internalRangeIamPolicyArgs struct {
	InternalRangesId string `pulumi:"internalRangesId"`
	LocationsId      string `pulumi:"locationsId"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     *Policy `pulumi:"policy"`
	ProjectsId string  `pulumi:"projectsId"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a InternalRangeIamPolicy resource.
type InternalRangeIamPolicyArgs struct {
	InternalRangesId pulumi.StringInput
	LocationsId      pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy     PolicyPtrInput
	ProjectsId pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (InternalRangeIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internalRangeIamPolicyArgs)(nil)).Elem()
}

type InternalRangeIamPolicyInput interface {
	pulumi.Input

	ToInternalRangeIamPolicyOutput() InternalRangeIamPolicyOutput
	ToInternalRangeIamPolicyOutputWithContext(ctx context.Context) InternalRangeIamPolicyOutput
}

func (*InternalRangeIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalRangeIamPolicy)(nil))
}

func (i *InternalRangeIamPolicy) ToInternalRangeIamPolicyOutput() InternalRangeIamPolicyOutput {
	return i.ToInternalRangeIamPolicyOutputWithContext(context.Background())
}

func (i *InternalRangeIamPolicy) ToInternalRangeIamPolicyOutputWithContext(ctx context.Context) InternalRangeIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternalRangeIamPolicyOutput)
}

type InternalRangeIamPolicyOutput struct {
	*pulumi.OutputState
}

func (InternalRangeIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalRangeIamPolicy)(nil))
}

func (o InternalRangeIamPolicyOutput) ToInternalRangeIamPolicyOutput() InternalRangeIamPolicyOutput {
	return o
}

func (o InternalRangeIamPolicyOutput) ToInternalRangeIamPolicyOutputWithContext(ctx context.Context) InternalRangeIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InternalRangeIamPolicyOutput{})
}
