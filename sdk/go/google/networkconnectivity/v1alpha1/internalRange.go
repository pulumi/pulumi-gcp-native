// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new InternalRange in a given project and location.
type InternalRange struct {
	pulumi.CustomResourceState

	// Time when the InternalRange was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	InternalRangeId pulumi.StringPtrOutput `pulumi:"internalRangeId"`
	// IP range that this InternalRange defines.
	IpCidrRange pulumi.StringOutput `pulumi:"ipCidrRange"`
	// User-defined labels.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
	Network pulumi.StringOutput `pulumi:"network"`
	// Optional. Types of resources that are allowed to overlap with the current InternalRange.
	Overlaps pulumi.StringArrayOutput `pulumi:"overlaps"`
	// The type of peering set for this InternalRange.
	Peering pulumi.StringOutput `pulumi:"peering"`
	// An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
	PrefixLength pulumi.IntOutput    `pulumi:"prefixLength"`
	Project      pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRange pulumi.StringArrayOutput `pulumi:"targetCidrRange"`
	// Time when the InternalRange was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The type of usage set for this InternalRange.
	Usage pulumi.StringOutput `pulumi:"usage"`
	// The list of resources that refer to this internal range. Resources that use the InternalRange for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this InternalRange. Having a user, based on this reference, prevents deletion of the InternalRange referred to. Can be empty.
	Users pulumi.StringArrayOutput `pulumi:"users"`
}

// NewInternalRange registers a new resource with the given unique name, arguments, and options.
func NewInternalRange(ctx *pulumi.Context,
	name string, args *InternalRangeArgs, opts ...pulumi.ResourceOption) (*InternalRange, error) {
	if args == nil {
		args = &InternalRangeArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource InternalRange
	err := ctx.RegisterResource("google-native:networkconnectivity/v1alpha1:InternalRange", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternalRange gets an existing InternalRange resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternalRange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternalRangeState, opts ...pulumi.ResourceOption) (*InternalRange, error) {
	var resource InternalRange
	err := ctx.ReadResource("google-native:networkconnectivity/v1alpha1:InternalRange", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternalRange resources.
type internalRangeState struct {
}

type InternalRangeState struct {
}

func (InternalRangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*internalRangeState)(nil)).Elem()
}

type internalRangeArgs struct {
	// Time when the InternalRange was created.
	CreateTime *string `pulumi:"createTime"`
	// A description of this resource.
	Description *string `pulumi:"description"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	InternalRangeId *string `pulumi:"internalRangeId"`
	// IP range that this InternalRange defines.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// User-defined labels.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
	Network *string `pulumi:"network"`
	// Optional. Types of resources that are allowed to overlap with the current InternalRange.
	Overlaps []InternalRangeOverlapsItem `pulumi:"overlaps"`
	// The type of peering set for this InternalRange.
	Peering *InternalRangePeering `pulumi:"peering"`
	// An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
	PrefixLength *int    `pulumi:"prefixLength"`
	Project      *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRange []string `pulumi:"targetCidrRange"`
	// Time when the InternalRange was updated.
	UpdateTime *string `pulumi:"updateTime"`
	// The type of usage set for this InternalRange.
	Usage *InternalRangeUsage `pulumi:"usage"`
}

// The set of arguments for constructing a InternalRange resource.
type InternalRangeArgs struct {
	// Time when the InternalRange was created.
	CreateTime pulumi.StringPtrInput
	// A description of this resource.
	Description pulumi.StringPtrInput
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	InternalRangeId pulumi.StringPtrInput
	// IP range that this InternalRange defines.
	IpCidrRange pulumi.StringPtrInput
	// User-defined labels.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
	Network pulumi.StringPtrInput
	// Optional. Types of resources that are allowed to overlap with the current InternalRange.
	Overlaps InternalRangeOverlapsItemArrayInput
	// The type of peering set for this InternalRange.
	Peering InternalRangePeeringPtrInput
	// An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
	PrefixLength pulumi.IntPtrInput
	Project      pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRange pulumi.StringArrayInput
	// Time when the InternalRange was updated.
	UpdateTime pulumi.StringPtrInput
	// The type of usage set for this InternalRange.
	Usage InternalRangeUsagePtrInput
}

func (InternalRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internalRangeArgs)(nil)).Elem()
}

type InternalRangeInput interface {
	pulumi.Input

	ToInternalRangeOutput() InternalRangeOutput
	ToInternalRangeOutputWithContext(ctx context.Context) InternalRangeOutput
}

func (*InternalRange) ElementType() reflect.Type {
	return reflect.TypeOf((**InternalRange)(nil)).Elem()
}

func (i *InternalRange) ToInternalRangeOutput() InternalRangeOutput {
	return i.ToInternalRangeOutputWithContext(context.Background())
}

func (i *InternalRange) ToInternalRangeOutputWithContext(ctx context.Context) InternalRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternalRangeOutput)
}

type InternalRangeOutput struct{ *pulumi.OutputState }

func (InternalRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternalRange)(nil)).Elem()
}

func (o InternalRangeOutput) ToInternalRangeOutput() InternalRangeOutput {
	return o
}

func (o InternalRangeOutput) ToInternalRangeOutputWithContext(ctx context.Context) InternalRangeOutput {
	return o
}

// Time when the InternalRange was created.
func (o InternalRangeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o InternalRangeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
func (o InternalRangeOutput) InternalRangeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringPtrOutput { return v.InternalRangeId }).(pulumi.StringPtrOutput)
}

// IP range that this InternalRange defines.
func (o InternalRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.IpCidrRange }).(pulumi.StringOutput)
}

// User-defined labels.
func (o InternalRangeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o InternalRangeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
func (o InternalRangeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
func (o InternalRangeOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Optional. Types of resources that are allowed to overlap with the current InternalRange.
func (o InternalRangeOutput) Overlaps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringArrayOutput { return v.Overlaps }).(pulumi.StringArrayOutput)
}

// The type of peering set for this InternalRange.
func (o InternalRangeOutput) Peering() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Peering }).(pulumi.StringOutput)
}

// An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
func (o InternalRangeOutput) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.IntOutput { return v.PrefixLength }).(pulumi.IntOutput)
}

func (o InternalRangeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o InternalRangeOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
func (o InternalRangeOutput) TargetCidrRange() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringArrayOutput { return v.TargetCidrRange }).(pulumi.StringArrayOutput)
}

// Time when the InternalRange was updated.
func (o InternalRangeOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The type of usage set for this InternalRange.
func (o InternalRangeOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringOutput { return v.Usage }).(pulumi.StringOutput)
}

// The list of resources that refer to this internal range. Resources that use the InternalRange for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this InternalRange. Having a user, based on this reference, prevents deletion of the InternalRange referred to. Can be empty.
func (o InternalRangeOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InternalRange) pulumi.StringArrayOutput { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InternalRangeInput)(nil)).Elem(), &InternalRange{})
	pulumi.RegisterOutputType(InternalRangeOutput{})
}
