// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new ServiceConnectionPolicy in a given project and location.
type ServiceConnectionPolicy struct {
	pulumi.CustomResourceState

	// Time when the ServiceConnectionMap was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The type of underlying resources used to create the connection.
	Infrastructure pulumi.StringOutput `pulumi:"infrastructure"`
	// User-defined labels.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringOutput `pulumi:"network"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	PscConfig PscConfigResponseOutput `pulumi:"pscConfig"`
	// [Output only] Information about each Private Service Connect connection.
	PscConnections PscConnectionResponseArrayOutput `pulumi:"pscConnections"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass pulumi.StringOutput `pulumi:"serviceClass"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	ServiceConnectionPolicyId pulumi.StringPtrOutput `pulumi:"serviceConnectionPolicyId"`
	// Time when the ServiceConnectionMap was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewServiceConnectionPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceConnectionPolicy(ctx *pulumi.Context,
	name string, args *ServiceConnectionPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceConnectionPolicy, error) {
	if args == nil {
		args = &ServiceConnectionPolicyArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnectionPolicy
	err := ctx.RegisterResource("google-native:networkconnectivity/v1:ServiceConnectionPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnectionPolicy gets an existing ServiceConnectionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnectionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionPolicyState, opts ...pulumi.ResourceOption) (*ServiceConnectionPolicy, error) {
	var resource ServiceConnectionPolicy
	err := ctx.ReadResource("google-native:networkconnectivity/v1:ServiceConnectionPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnectionPolicy resources.
type serviceConnectionPolicyState struct {
}

type ServiceConnectionPolicyState struct {
}

func (ServiceConnectionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionPolicyState)(nil)).Elem()
}

type serviceConnectionPolicyArgs struct {
	// A description of this resource.
	Description *string `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// User-defined labels.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network *string `pulumi:"network"`
	Project *string `pulumi:"project"`
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	PscConfig *PscConfig `pulumi:"pscConfig"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass *string `pulumi:"serviceClass"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	ServiceConnectionPolicyId *string `pulumi:"serviceConnectionPolicyId"`
}

// The set of arguments for constructing a ServiceConnectionPolicy resource.
type ServiceConnectionPolicyArgs struct {
	// A description of this resource.
	Description pulumi.StringPtrInput
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// User-defined labels.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
	PscConfig PscConfigPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
	ServiceClass pulumi.StringPtrInput
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
	ServiceConnectionPolicyId pulumi.StringPtrInput
}

func (ServiceConnectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionPolicyArgs)(nil)).Elem()
}

type ServiceConnectionPolicyInput interface {
	pulumi.Input

	ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput
	ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput
}

func (*ServiceConnectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicy)(nil)).Elem()
}

func (i *ServiceConnectionPolicy) ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput {
	return i.ToServiceConnectionPolicyOutputWithContext(context.Background())
}

func (i *ServiceConnectionPolicy) ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionPolicyOutput)
}

func (i *ServiceConnectionPolicy) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionPolicy] {
	return pulumix.Output[*ServiceConnectionPolicy]{
		OutputState: i.ToServiceConnectionPolicyOutputWithContext(ctx).OutputState,
	}
}

type ServiceConnectionPolicyOutput struct{ *pulumi.OutputState }

func (ServiceConnectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionPolicy)(nil)).Elem()
}

func (o ServiceConnectionPolicyOutput) ToServiceConnectionPolicyOutput() ServiceConnectionPolicyOutput {
	return o
}

func (o ServiceConnectionPolicyOutput) ToServiceConnectionPolicyOutputWithContext(ctx context.Context) ServiceConnectionPolicyOutput {
	return o
}

func (o ServiceConnectionPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionPolicy] {
	return pulumix.Output[*ServiceConnectionPolicy]{
		OutputState: o.OutputState,
	}
}

// Time when the ServiceConnectionMap was created.
func (o ServiceConnectionPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o ServiceConnectionPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o ServiceConnectionPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The type of underlying resources used to create the connection.
func (o ServiceConnectionPolicyOutput) Infrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Infrastructure }).(pulumi.StringOutput)
}

// User-defined labels.
func (o ServiceConnectionPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ServiceConnectionPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
func (o ServiceConnectionPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
func (o ServiceConnectionPolicyOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o ServiceConnectionPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
func (o ServiceConnectionPolicyOutput) PscConfig() PscConfigResponseOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) PscConfigResponseOutput { return v.PscConfig }).(PscConfigResponseOutput)
}

// [Output only] Information about each Private Service Connect connection.
func (o ServiceConnectionPolicyOutput) PscConnections() PscConnectionResponseArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) PscConnectionResponseArrayOutput { return v.PscConnections }).(PscConnectionResponseArrayOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ServiceConnectionPolicyOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
func (o ServiceConnectionPolicyOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.ServiceClass }).(pulumi.StringOutput)
}

// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
func (o ServiceConnectionPolicyOutput) ServiceConnectionPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringPtrOutput { return v.ServiceConnectionPolicyId }).(pulumi.StringPtrOutput)
}

// Time when the ServiceConnectionMap was updated.
func (o ServiceConnectionPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionPolicyInput)(nil)).Elem(), &ServiceConnectionPolicy{})
	pulumi.RegisterOutputType(ServiceConnectionPolicyOutput{})
}
