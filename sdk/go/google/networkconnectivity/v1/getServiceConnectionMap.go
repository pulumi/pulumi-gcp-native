// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a single ServiceConnectionMap.
func LookupServiceConnectionMap(ctx *pulumi.Context, args *LookupServiceConnectionMapArgs, opts ...pulumi.InvokeOption) (*LookupServiceConnectionMapResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceConnectionMapResult
	err := ctx.Invoke("google-native:networkconnectivity/v1:getServiceConnectionMap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceConnectionMapArgs struct {
	Location               string  `pulumi:"location"`
	Project                *string `pulumi:"project"`
	ServiceConnectionMapId string  `pulumi:"serviceConnectionMapId"`
}

type LookupServiceConnectionMapResult struct {
	// The PSC configurations on consumer side.
	ConsumerPscConfigs []ConsumerPscConfigResponse `pulumi:"consumerPscConfigs"`
	// PSC connection details on consumer side.
	ConsumerPscConnections []ConsumerPscConnectionResponse `pulumi:"consumerPscConnections"`
	// Time when the ServiceConnectionMap was created.
	CreateTime string `pulumi:"createTime"`
	// A description of this resource.
	Description string `pulumi:"description"`
	// The infrastructure used for connections between consumers/producers.
	Infrastructure string `pulumi:"infrastructure"`
	// User-defined labels.
	Labels map[string]string `pulumi:"labels"`
	// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
	Name string `pulumi:"name"`
	// The PSC configurations on producer side.
	ProducerPscConfigs []ProducerPscConfigResponse `pulumi:"producerPscConfigs"`
	// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
	ServiceClass string `pulumi:"serviceClass"`
	// The service class uri this ServiceConnectionMap is for.
	ServiceClassUri string `pulumi:"serviceClassUri"`
	// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
	Token string `pulumi:"token"`
	// Time when the ServiceConnectionMap was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupServiceConnectionMapOutput(ctx *pulumi.Context, args LookupServiceConnectionMapOutputArgs, opts ...pulumi.InvokeOption) LookupServiceConnectionMapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceConnectionMapResult, error) {
			args := v.(LookupServiceConnectionMapArgs)
			r, err := LookupServiceConnectionMap(ctx, &args, opts...)
			var s LookupServiceConnectionMapResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceConnectionMapResultOutput)
}

type LookupServiceConnectionMapOutputArgs struct {
	Location               pulumi.StringInput    `pulumi:"location"`
	Project                pulumi.StringPtrInput `pulumi:"project"`
	ServiceConnectionMapId pulumi.StringInput    `pulumi:"serviceConnectionMapId"`
}

func (LookupServiceConnectionMapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceConnectionMapArgs)(nil)).Elem()
}

type LookupServiceConnectionMapResultOutput struct{ *pulumi.OutputState }

func (LookupServiceConnectionMapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceConnectionMapResult)(nil)).Elem()
}

func (o LookupServiceConnectionMapResultOutput) ToLookupServiceConnectionMapResultOutput() LookupServiceConnectionMapResultOutput {
	return o
}

func (o LookupServiceConnectionMapResultOutput) ToLookupServiceConnectionMapResultOutputWithContext(ctx context.Context) LookupServiceConnectionMapResultOutput {
	return o
}

func (o LookupServiceConnectionMapResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupServiceConnectionMapResult] {
	return pulumix.Output[LookupServiceConnectionMapResult]{
		OutputState: o.OutputState,
	}
}

// The PSC configurations on consumer side.
func (o LookupServiceConnectionMapResultOutput) ConsumerPscConfigs() ConsumerPscConfigResponseArrayOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) []ConsumerPscConfigResponse { return v.ConsumerPscConfigs }).(ConsumerPscConfigResponseArrayOutput)
}

// PSC connection details on consumer side.
func (o LookupServiceConnectionMapResultOutput) ConsumerPscConnections() ConsumerPscConnectionResponseArrayOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) []ConsumerPscConnectionResponse {
		return v.ConsumerPscConnections
	}).(ConsumerPscConnectionResponseArrayOutput)
}

// Time when the ServiceConnectionMap was created.
func (o LookupServiceConnectionMapResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o LookupServiceConnectionMapResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.Description }).(pulumi.StringOutput)
}

// The infrastructure used for connections between consumers/producers.
func (o LookupServiceConnectionMapResultOutput) Infrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.Infrastructure }).(pulumi.StringOutput)
}

// User-defined labels.
func (o LookupServiceConnectionMapResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
func (o LookupServiceConnectionMapResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.Name }).(pulumi.StringOutput)
}

// The PSC configurations on producer side.
func (o LookupServiceConnectionMapResultOutput) ProducerPscConfigs() ProducerPscConfigResponseArrayOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) []ProducerPscConfigResponse { return v.ProducerPscConfigs }).(ProducerPscConfigResponseArrayOutput)
}

// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
func (o LookupServiceConnectionMapResultOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.ServiceClass }).(pulumi.StringOutput)
}

// The service class uri this ServiceConnectionMap is for.
func (o LookupServiceConnectionMapResultOutput) ServiceClassUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.ServiceClassUri }).(pulumi.StringOutput)
}

// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
func (o LookupServiceConnectionMapResultOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.Token }).(pulumi.StringOutput)
}

// Time when the ServiceConnectionMap was updated.
func (o LookupServiceConnectionMapResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceConnectionMapResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceConnectionMapResultOutput{})
}
