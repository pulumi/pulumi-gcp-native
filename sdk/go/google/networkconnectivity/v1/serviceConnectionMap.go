// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new ServiceConnectionMap in a given project and location.
type ServiceConnectionMap struct {
	pulumi.CustomResourceState

	// The PSC configurations on consumer side.
	ConsumerPscConfigs ConsumerPscConfigResponseArrayOutput `pulumi:"consumerPscConfigs"`
	// PSC connection details on consumer side.
	ConsumerPscConnections ConsumerPscConnectionResponseArrayOutput `pulumi:"consumerPscConnections"`
	// Time when the ServiceConnectionMap was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The infrastructure used for connections between consumers/producers.
	Infrastructure pulumi.StringOutput `pulumi:"infrastructure"`
	// User-defined labels.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringOutput `pulumi:"name"`
	// The PSC configurations on producer side.
	ProducerPscConfigs ProducerPscConfigResponseArrayOutput `pulumi:"producerPscConfigs"`
	Project            pulumi.StringOutput                  `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
	ServiceClass pulumi.StringOutput `pulumi:"serviceClass"`
	// The service class uri this ServiceConnectionMap is for.
	ServiceClassUri pulumi.StringOutput `pulumi:"serviceClassUri"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionMapId pulumi.StringPtrOutput `pulumi:"serviceConnectionMapId"`
	// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
	Token pulumi.StringOutput `pulumi:"token"`
	// Time when the ServiceConnectionMap was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewServiceConnectionMap registers a new resource with the given unique name, arguments, and options.
func NewServiceConnectionMap(ctx *pulumi.Context,
	name string, args *ServiceConnectionMapArgs, opts ...pulumi.ResourceOption) (*ServiceConnectionMap, error) {
	if args == nil {
		args = &ServiceConnectionMapArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnectionMap
	err := ctx.RegisterResource("google-native:networkconnectivity/v1:ServiceConnectionMap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnectionMap gets an existing ServiceConnectionMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnectionMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionMapState, opts ...pulumi.ResourceOption) (*ServiceConnectionMap, error) {
	var resource ServiceConnectionMap
	err := ctx.ReadResource("google-native:networkconnectivity/v1:ServiceConnectionMap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnectionMap resources.
type serviceConnectionMapState struct {
}

type ServiceConnectionMapState struct {
}

func (ServiceConnectionMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionMapState)(nil)).Elem()
}

type serviceConnectionMapArgs struct {
	// The PSC configurations on consumer side.
	ConsumerPscConfigs []ConsumerPscConfig `pulumi:"consumerPscConfigs"`
	// A description of this resource.
	Description *string `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// User-defined labels.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The PSC configurations on producer side.
	ProducerPscConfigs []ProducerPscConfig `pulumi:"producerPscConfigs"`
	Project            *string             `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
	ServiceClass *string `pulumi:"serviceClass"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionMapId *string `pulumi:"serviceConnectionMapId"`
	// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a ServiceConnectionMap resource.
type ServiceConnectionMapArgs struct {
	// The PSC configurations on consumer side.
	ConsumerPscConfigs ConsumerPscConfigArrayInput
	// A description of this resource.
	Description pulumi.StringPtrInput
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// User-defined labels.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The PSC configurations on producer side.
	ProducerPscConfigs ProducerPscConfigArrayInput
	Project            pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
	ServiceClass pulumi.StringPtrInput
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionMapId pulumi.StringPtrInput
	// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
	Token pulumi.StringPtrInput
}

func (ServiceConnectionMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionMapArgs)(nil)).Elem()
}

type ServiceConnectionMapInput interface {
	pulumi.Input

	ToServiceConnectionMapOutput() ServiceConnectionMapOutput
	ToServiceConnectionMapOutputWithContext(ctx context.Context) ServiceConnectionMapOutput
}

func (*ServiceConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionMap)(nil)).Elem()
}

func (i *ServiceConnectionMap) ToServiceConnectionMapOutput() ServiceConnectionMapOutput {
	return i.ToServiceConnectionMapOutputWithContext(context.Background())
}

func (i *ServiceConnectionMap) ToServiceConnectionMapOutputWithContext(ctx context.Context) ServiceConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionMapOutput)
}

type ServiceConnectionMapOutput struct{ *pulumi.OutputState }

func (ServiceConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionMap)(nil)).Elem()
}

func (o ServiceConnectionMapOutput) ToServiceConnectionMapOutput() ServiceConnectionMapOutput {
	return o
}

func (o ServiceConnectionMapOutput) ToServiceConnectionMapOutputWithContext(ctx context.Context) ServiceConnectionMapOutput {
	return o
}

// The PSC configurations on consumer side.
func (o ServiceConnectionMapOutput) ConsumerPscConfigs() ConsumerPscConfigResponseArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) ConsumerPscConfigResponseArrayOutput { return v.ConsumerPscConfigs }).(ConsumerPscConfigResponseArrayOutput)
}

// PSC connection details on consumer side.
func (o ServiceConnectionMapOutput) ConsumerPscConnections() ConsumerPscConnectionResponseArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) ConsumerPscConnectionResponseArrayOutput {
		return v.ConsumerPscConnections
	}).(ConsumerPscConnectionResponseArrayOutput)
}

// Time when the ServiceConnectionMap was created.
func (o ServiceConnectionMapOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o ServiceConnectionMapOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o ServiceConnectionMapOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The infrastructure used for connections between consumers/producers.
func (o ServiceConnectionMapOutput) Infrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Infrastructure }).(pulumi.StringOutput)
}

// User-defined labels.
func (o ServiceConnectionMapOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ServiceConnectionMapOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
func (o ServiceConnectionMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The PSC configurations on producer side.
func (o ServiceConnectionMapOutput) ProducerPscConfigs() ProducerPscConfigResponseArrayOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) ProducerPscConfigResponseArrayOutput { return v.ProducerPscConfigs }).(ProducerPscConfigResponseArrayOutput)
}

func (o ServiceConnectionMapOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ServiceConnectionMapOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
func (o ServiceConnectionMapOutput) ServiceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.ServiceClass }).(pulumi.StringOutput)
}

// The service class uri this ServiceConnectionMap is for.
func (o ServiceConnectionMapOutput) ServiceClassUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.ServiceClassUri }).(pulumi.StringOutput)
}

// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
func (o ServiceConnectionMapOutput) ServiceConnectionMapId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringPtrOutput { return v.ServiceConnectionMapId }).(pulumi.StringPtrOutput)
}

// The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
func (o ServiceConnectionMapOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

// Time when the ServiceConnectionMap was updated.
func (o ServiceConnectionMapOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionMap) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionMapInput)(nil)).Elem(), &ServiceConnectionMap{})
	pulumi.RegisterOutputType(ServiceConnectionMapOutput{})
}
