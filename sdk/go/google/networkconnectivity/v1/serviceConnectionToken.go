// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new ServiceConnectionToken in a given project and location.
type ServiceConnectionToken struct {
	pulumi.CustomResourceState

	// Time when the ServiceConnectionToken was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The time to which this token is valid.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// User-defined labels.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringOutput `pulumi:"network"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionTokenId pulumi.StringPtrOutput `pulumi:"serviceConnectionTokenId"`
	// The token generated by Automation.
	Token pulumi.StringOutput `pulumi:"token"`
	// Time when the ServiceConnectionToken was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewServiceConnectionToken registers a new resource with the given unique name, arguments, and options.
func NewServiceConnectionToken(ctx *pulumi.Context,
	name string, args *ServiceConnectionTokenArgs, opts ...pulumi.ResourceOption) (*ServiceConnectionToken, error) {
	if args == nil {
		args = &ServiceConnectionTokenArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceConnectionToken
	err := ctx.RegisterResource("google-native:networkconnectivity/v1:ServiceConnectionToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceConnectionToken gets an existing ServiceConnectionToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceConnectionToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceConnectionTokenState, opts ...pulumi.ResourceOption) (*ServiceConnectionToken, error) {
	var resource ServiceConnectionToken
	err := ctx.ReadResource("google-native:networkconnectivity/v1:ServiceConnectionToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceConnectionToken resources.
type serviceConnectionTokenState struct {
}

type ServiceConnectionTokenState struct {
}

func (ServiceConnectionTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionTokenState)(nil)).Elem()
}

type serviceConnectionTokenArgs struct {
	// A description of this resource.
	Description *string `pulumi:"description"`
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// User-defined labels.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names
	Name *string `pulumi:"name"`
	// The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.
	Network *string `pulumi:"network"`
	Project *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionTokenId *string `pulumi:"serviceConnectionTokenId"`
}

// The set of arguments for constructing a ServiceConnectionToken resource.
type ServiceConnectionTokenArgs struct {
	// A description of this resource.
	Description pulumi.StringPtrInput
	// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// User-defined labels.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names
	Name pulumi.StringPtrInput
	// The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.
	Network pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
	ServiceConnectionTokenId pulumi.StringPtrInput
}

func (ServiceConnectionTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceConnectionTokenArgs)(nil)).Elem()
}

type ServiceConnectionTokenInput interface {
	pulumi.Input

	ToServiceConnectionTokenOutput() ServiceConnectionTokenOutput
	ToServiceConnectionTokenOutputWithContext(ctx context.Context) ServiceConnectionTokenOutput
}

func (*ServiceConnectionToken) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionToken)(nil)).Elem()
}

func (i *ServiceConnectionToken) ToServiceConnectionTokenOutput() ServiceConnectionTokenOutput {
	return i.ToServiceConnectionTokenOutputWithContext(context.Background())
}

func (i *ServiceConnectionToken) ToServiceConnectionTokenOutputWithContext(ctx context.Context) ServiceConnectionTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceConnectionTokenOutput)
}

func (i *ServiceConnectionToken) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionToken] {
	return pulumix.Output[*ServiceConnectionToken]{
		OutputState: i.ToServiceConnectionTokenOutputWithContext(ctx).OutputState,
	}
}

type ServiceConnectionTokenOutput struct{ *pulumi.OutputState }

func (ServiceConnectionTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceConnectionToken)(nil)).Elem()
}

func (o ServiceConnectionTokenOutput) ToServiceConnectionTokenOutput() ServiceConnectionTokenOutput {
	return o
}

func (o ServiceConnectionTokenOutput) ToServiceConnectionTokenOutputWithContext(ctx context.Context) ServiceConnectionTokenOutput {
	return o
}

func (o ServiceConnectionTokenOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceConnectionToken] {
	return pulumix.Output[*ServiceConnectionToken]{
		OutputState: o.OutputState,
	}
}

// Time when the ServiceConnectionToken was created.
func (o ServiceConnectionTokenOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o ServiceConnectionTokenOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
func (o ServiceConnectionTokenOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The time to which this token is valid.
func (o ServiceConnectionTokenOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// User-defined labels.
func (o ServiceConnectionTokenOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ServiceConnectionTokenOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names
func (o ServiceConnectionTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.
func (o ServiceConnectionTokenOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o ServiceConnectionTokenOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ServiceConnectionTokenOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
func (o ServiceConnectionTokenOutput) ServiceConnectionTokenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringPtrOutput { return v.ServiceConnectionTokenId }).(pulumi.StringPtrOutput)
}

// The token generated by Automation.
func (o ServiceConnectionTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

// Time when the ServiceConnectionToken was updated.
func (o ServiceConnectionTokenOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceConnectionToken) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceConnectionTokenInput)(nil)).Elem(), &ServiceConnectionToken{})
	pulumi.RegisterOutputType(ServiceConnectionTokenOutput{})
}
