// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Edition of the capacity commitment.
type CapacityCommitmentEdition string

const (
	// Default value, only for legacy reservations and capacity commitments.
	CapacityCommitmentEditionEditionUnspecified = CapacityCommitmentEdition("EDITION_UNSPECIFIED")
	// Enterprise edition.
	CapacityCommitmentEditionEnterprise = CapacityCommitmentEdition("ENTERPRISE")
)

func (CapacityCommitmentEdition) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentEdition)(nil)).Elem()
}

func (e CapacityCommitmentEdition) ToCapacityCommitmentEditionOutput() CapacityCommitmentEditionOutput {
	return pulumi.ToOutput(e).(CapacityCommitmentEditionOutput)
}

func (e CapacityCommitmentEdition) ToCapacityCommitmentEditionOutputWithContext(ctx context.Context) CapacityCommitmentEditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapacityCommitmentEditionOutput)
}

func (e CapacityCommitmentEdition) ToCapacityCommitmentEditionPtrOutput() CapacityCommitmentEditionPtrOutput {
	return e.ToCapacityCommitmentEditionPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentEdition) ToCapacityCommitmentEditionPtrOutputWithContext(ctx context.Context) CapacityCommitmentEditionPtrOutput {
	return CapacityCommitmentEdition(e).ToCapacityCommitmentEditionOutputWithContext(ctx).ToCapacityCommitmentEditionPtrOutputWithContext(ctx)
}

func (e CapacityCommitmentEdition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentEdition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentEdition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentEdition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapacityCommitmentEditionOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentEdition)(nil)).Elem()
}

func (o CapacityCommitmentEditionOutput) ToCapacityCommitmentEditionOutput() CapacityCommitmentEditionOutput {
	return o
}

func (o CapacityCommitmentEditionOutput) ToCapacityCommitmentEditionOutputWithContext(ctx context.Context) CapacityCommitmentEditionOutput {
	return o
}

func (o CapacityCommitmentEditionOutput) ToCapacityCommitmentEditionPtrOutput() CapacityCommitmentEditionPtrOutput {
	return o.ToCapacityCommitmentEditionPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentEditionOutput) ToCapacityCommitmentEditionPtrOutputWithContext(ctx context.Context) CapacityCommitmentEditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityCommitmentEdition) *CapacityCommitmentEdition {
		return &v
	}).(CapacityCommitmentEditionPtrOutput)
}

func (o CapacityCommitmentEditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapacityCommitmentEditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentEdition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapacityCommitmentEditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentEditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentEdition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapacityCommitmentEditionPtrOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentEditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityCommitmentEdition)(nil)).Elem()
}

func (o CapacityCommitmentEditionPtrOutput) ToCapacityCommitmentEditionPtrOutput() CapacityCommitmentEditionPtrOutput {
	return o
}

func (o CapacityCommitmentEditionPtrOutput) ToCapacityCommitmentEditionPtrOutputWithContext(ctx context.Context) CapacityCommitmentEditionPtrOutput {
	return o
}

func (o CapacityCommitmentEditionPtrOutput) Elem() CapacityCommitmentEditionOutput {
	return o.ApplyT(func(v *CapacityCommitmentEdition) CapacityCommitmentEdition {
		if v != nil {
			return *v
		}
		var ret CapacityCommitmentEdition
		return ret
	}).(CapacityCommitmentEditionOutput)
}

func (o CapacityCommitmentEditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentEditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapacityCommitmentEdition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapacityCommitmentEditionInput is an input type that accepts CapacityCommitmentEditionArgs and CapacityCommitmentEditionOutput values.
// You can construct a concrete instance of `CapacityCommitmentEditionInput` via:
//
//	CapacityCommitmentEditionArgs{...}
type CapacityCommitmentEditionInput interface {
	pulumi.Input

	ToCapacityCommitmentEditionOutput() CapacityCommitmentEditionOutput
	ToCapacityCommitmentEditionOutputWithContext(context.Context) CapacityCommitmentEditionOutput
}

var capacityCommitmentEditionPtrType = reflect.TypeOf((**CapacityCommitmentEdition)(nil)).Elem()

type CapacityCommitmentEditionPtrInput interface {
	pulumi.Input

	ToCapacityCommitmentEditionPtrOutput() CapacityCommitmentEditionPtrOutput
	ToCapacityCommitmentEditionPtrOutputWithContext(context.Context) CapacityCommitmentEditionPtrOutput
}

type capacityCommitmentEditionPtr string

func CapacityCommitmentEditionPtr(v string) CapacityCommitmentEditionPtrInput {
	return (*capacityCommitmentEditionPtr)(&v)
}

func (*capacityCommitmentEditionPtr) ElementType() reflect.Type {
	return capacityCommitmentEditionPtrType
}

func (in *capacityCommitmentEditionPtr) ToCapacityCommitmentEditionPtrOutput() CapacityCommitmentEditionPtrOutput {
	return pulumi.ToOutput(in).(CapacityCommitmentEditionPtrOutput)
}

func (in *capacityCommitmentEditionPtr) ToCapacityCommitmentEditionPtrOutputWithContext(ctx context.Context) CapacityCommitmentEditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapacityCommitmentEditionPtrOutput)
}

// Capacity commitment commitment plan.
type CapacityCommitmentPlan string

const (
	// Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
	CapacityCommitmentPlanCommitmentPlanUnspecified = CapacityCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED")
	// Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
	CapacityCommitmentPlanFlex = CapacityCommitmentPlan("FLEX")
	// Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.
	CapacityCommitmentPlanTrial = CapacityCommitmentPlan("TRIAL")
	// Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
	CapacityCommitmentPlanMonthly = CapacityCommitmentPlan("MONTHLY")
	// Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan.
	CapacityCommitmentPlanAnnual = CapacityCommitmentPlan("ANNUAL")
	// Should only be used for `renewal_plan` and is only meaningful if edition is specified to values other than EDITION_UNSPECIFIED. Otherwise CreateCapacityCommitmentRequest or UpdateCapacityCommitmentRequest will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE, capacity commitment will be removed at the end of its commitment period.
	CapacityCommitmentPlanNone = CapacityCommitmentPlan("NONE")
)

func (CapacityCommitmentPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentPlan)(nil)).Elem()
}

func (e CapacityCommitmentPlan) ToCapacityCommitmentPlanOutput() CapacityCommitmentPlanOutput {
	return pulumi.ToOutput(e).(CapacityCommitmentPlanOutput)
}

func (e CapacityCommitmentPlan) ToCapacityCommitmentPlanOutputWithContext(ctx context.Context) CapacityCommitmentPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapacityCommitmentPlanOutput)
}

func (e CapacityCommitmentPlan) ToCapacityCommitmentPlanPtrOutput() CapacityCommitmentPlanPtrOutput {
	return e.ToCapacityCommitmentPlanPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentPlan) ToCapacityCommitmentPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentPlanPtrOutput {
	return CapacityCommitmentPlan(e).ToCapacityCommitmentPlanOutputWithContext(ctx).ToCapacityCommitmentPlanPtrOutputWithContext(ctx)
}

func (e CapacityCommitmentPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapacityCommitmentPlanOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentPlan)(nil)).Elem()
}

func (o CapacityCommitmentPlanOutput) ToCapacityCommitmentPlanOutput() CapacityCommitmentPlanOutput {
	return o
}

func (o CapacityCommitmentPlanOutput) ToCapacityCommitmentPlanOutputWithContext(ctx context.Context) CapacityCommitmentPlanOutput {
	return o
}

func (o CapacityCommitmentPlanOutput) ToCapacityCommitmentPlanPtrOutput() CapacityCommitmentPlanPtrOutput {
	return o.ToCapacityCommitmentPlanPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentPlanOutput) ToCapacityCommitmentPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityCommitmentPlan) *CapacityCommitmentPlan {
		return &v
	}).(CapacityCommitmentPlanPtrOutput)
}

func (o CapacityCommitmentPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapacityCommitmentPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapacityCommitmentPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapacityCommitmentPlanPtrOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityCommitmentPlan)(nil)).Elem()
}

func (o CapacityCommitmentPlanPtrOutput) ToCapacityCommitmentPlanPtrOutput() CapacityCommitmentPlanPtrOutput {
	return o
}

func (o CapacityCommitmentPlanPtrOutput) ToCapacityCommitmentPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentPlanPtrOutput {
	return o
}

func (o CapacityCommitmentPlanPtrOutput) Elem() CapacityCommitmentPlanOutput {
	return o.ApplyT(func(v *CapacityCommitmentPlan) CapacityCommitmentPlan {
		if v != nil {
			return *v
		}
		var ret CapacityCommitmentPlan
		return ret
	}).(CapacityCommitmentPlanOutput)
}

func (o CapacityCommitmentPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapacityCommitmentPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapacityCommitmentPlanInput is an input type that accepts CapacityCommitmentPlanArgs and CapacityCommitmentPlanOutput values.
// You can construct a concrete instance of `CapacityCommitmentPlanInput` via:
//
//	CapacityCommitmentPlanArgs{...}
type CapacityCommitmentPlanInput interface {
	pulumi.Input

	ToCapacityCommitmentPlanOutput() CapacityCommitmentPlanOutput
	ToCapacityCommitmentPlanOutputWithContext(context.Context) CapacityCommitmentPlanOutput
}

var capacityCommitmentPlanPtrType = reflect.TypeOf((**CapacityCommitmentPlan)(nil)).Elem()

type CapacityCommitmentPlanPtrInput interface {
	pulumi.Input

	ToCapacityCommitmentPlanPtrOutput() CapacityCommitmentPlanPtrOutput
	ToCapacityCommitmentPlanPtrOutputWithContext(context.Context) CapacityCommitmentPlanPtrOutput
}

type capacityCommitmentPlanPtr string

func CapacityCommitmentPlanPtr(v string) CapacityCommitmentPlanPtrInput {
	return (*capacityCommitmentPlanPtr)(&v)
}

func (*capacityCommitmentPlanPtr) ElementType() reflect.Type {
	return capacityCommitmentPlanPtrType
}

func (in *capacityCommitmentPlanPtr) ToCapacityCommitmentPlanPtrOutput() CapacityCommitmentPlanPtrOutput {
	return pulumi.ToOutput(in).(CapacityCommitmentPlanPtrOutput)
}

func (in *capacityCommitmentPlanPtr) ToCapacityCommitmentPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapacityCommitmentPlanPtrOutput)
}

// The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
type CapacityCommitmentRenewalPlan string

const (
	// Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`.
	CapacityCommitmentRenewalPlanCommitmentPlanUnspecified = CapacityCommitmentRenewalPlan("COMMITMENT_PLAN_UNSPECIFIED")
	// Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
	CapacityCommitmentRenewalPlanFlex = CapacityCommitmentRenewalPlan("FLEX")
	// Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends.
	CapacityCommitmentRenewalPlanTrial = CapacityCommitmentRenewalPlan("TRIAL")
	// Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time.
	CapacityCommitmentRenewalPlanMonthly = CapacityCommitmentRenewalPlan("MONTHLY")
	// Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan.
	CapacityCommitmentRenewalPlanAnnual = CapacityCommitmentRenewalPlan("ANNUAL")
	// Should only be used for `renewal_plan` and is only meaningful if edition is specified to values other than EDITION_UNSPECIFIED. Otherwise CreateCapacityCommitmentRequest or UpdateCapacityCommitmentRequest will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE, capacity commitment will be removed at the end of its commitment period.
	CapacityCommitmentRenewalPlanNone = CapacityCommitmentRenewalPlan("NONE")
)

func (CapacityCommitmentRenewalPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentRenewalPlan)(nil)).Elem()
}

func (e CapacityCommitmentRenewalPlan) ToCapacityCommitmentRenewalPlanOutput() CapacityCommitmentRenewalPlanOutput {
	return pulumi.ToOutput(e).(CapacityCommitmentRenewalPlanOutput)
}

func (e CapacityCommitmentRenewalPlan) ToCapacityCommitmentRenewalPlanOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CapacityCommitmentRenewalPlanOutput)
}

func (e CapacityCommitmentRenewalPlan) ToCapacityCommitmentRenewalPlanPtrOutput() CapacityCommitmentRenewalPlanPtrOutput {
	return e.ToCapacityCommitmentRenewalPlanPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentRenewalPlan) ToCapacityCommitmentRenewalPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanPtrOutput {
	return CapacityCommitmentRenewalPlan(e).ToCapacityCommitmentRenewalPlanOutputWithContext(ctx).ToCapacityCommitmentRenewalPlanPtrOutputWithContext(ctx)
}

func (e CapacityCommitmentRenewalPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentRenewalPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CapacityCommitmentRenewalPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CapacityCommitmentRenewalPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CapacityCommitmentRenewalPlanOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentRenewalPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityCommitmentRenewalPlan)(nil)).Elem()
}

func (o CapacityCommitmentRenewalPlanOutput) ToCapacityCommitmentRenewalPlanOutput() CapacityCommitmentRenewalPlanOutput {
	return o
}

func (o CapacityCommitmentRenewalPlanOutput) ToCapacityCommitmentRenewalPlanOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanOutput {
	return o
}

func (o CapacityCommitmentRenewalPlanOutput) ToCapacityCommitmentRenewalPlanPtrOutput() CapacityCommitmentRenewalPlanPtrOutput {
	return o.ToCapacityCommitmentRenewalPlanPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentRenewalPlanOutput) ToCapacityCommitmentRenewalPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CapacityCommitmentRenewalPlan) *CapacityCommitmentRenewalPlan {
		return &v
	}).(CapacityCommitmentRenewalPlanPtrOutput)
}

func (o CapacityCommitmentRenewalPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CapacityCommitmentRenewalPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentRenewalPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CapacityCommitmentRenewalPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentRenewalPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CapacityCommitmentRenewalPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CapacityCommitmentRenewalPlanPtrOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentRenewalPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityCommitmentRenewalPlan)(nil)).Elem()
}

func (o CapacityCommitmentRenewalPlanPtrOutput) ToCapacityCommitmentRenewalPlanPtrOutput() CapacityCommitmentRenewalPlanPtrOutput {
	return o
}

func (o CapacityCommitmentRenewalPlanPtrOutput) ToCapacityCommitmentRenewalPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanPtrOutput {
	return o
}

func (o CapacityCommitmentRenewalPlanPtrOutput) Elem() CapacityCommitmentRenewalPlanOutput {
	return o.ApplyT(func(v *CapacityCommitmentRenewalPlan) CapacityCommitmentRenewalPlan {
		if v != nil {
			return *v
		}
		var ret CapacityCommitmentRenewalPlan
		return ret
	}).(CapacityCommitmentRenewalPlanOutput)
}

func (o CapacityCommitmentRenewalPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CapacityCommitmentRenewalPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CapacityCommitmentRenewalPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CapacityCommitmentRenewalPlanInput is an input type that accepts CapacityCommitmentRenewalPlanArgs and CapacityCommitmentRenewalPlanOutput values.
// You can construct a concrete instance of `CapacityCommitmentRenewalPlanInput` via:
//
//	CapacityCommitmentRenewalPlanArgs{...}
type CapacityCommitmentRenewalPlanInput interface {
	pulumi.Input

	ToCapacityCommitmentRenewalPlanOutput() CapacityCommitmentRenewalPlanOutput
	ToCapacityCommitmentRenewalPlanOutputWithContext(context.Context) CapacityCommitmentRenewalPlanOutput
}

var capacityCommitmentRenewalPlanPtrType = reflect.TypeOf((**CapacityCommitmentRenewalPlan)(nil)).Elem()

type CapacityCommitmentRenewalPlanPtrInput interface {
	pulumi.Input

	ToCapacityCommitmentRenewalPlanPtrOutput() CapacityCommitmentRenewalPlanPtrOutput
	ToCapacityCommitmentRenewalPlanPtrOutputWithContext(context.Context) CapacityCommitmentRenewalPlanPtrOutput
}

type capacityCommitmentRenewalPlanPtr string

func CapacityCommitmentRenewalPlanPtr(v string) CapacityCommitmentRenewalPlanPtrInput {
	return (*capacityCommitmentRenewalPlanPtr)(&v)
}

func (*capacityCommitmentRenewalPlanPtr) ElementType() reflect.Type {
	return capacityCommitmentRenewalPlanPtrType
}

func (in *capacityCommitmentRenewalPlanPtr) ToCapacityCommitmentRenewalPlanPtrOutput() CapacityCommitmentRenewalPlanPtrOutput {
	return pulumi.ToOutput(in).(CapacityCommitmentRenewalPlanPtrOutput)
}

func (in *capacityCommitmentRenewalPlanPtr) ToCapacityCommitmentRenewalPlanPtrOutputWithContext(ctx context.Context) CapacityCommitmentRenewalPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CapacityCommitmentRenewalPlanPtrOutput)
}

// Edition of the reservation.
type ReservationEdition string

const (
	// Default value, only for legacy reservations and capacity commitments.
	ReservationEditionEditionUnspecified = ReservationEdition("EDITION_UNSPECIFIED")
	// Enterprise edition.
	ReservationEditionEnterprise = ReservationEdition("ENTERPRISE")
)

func (ReservationEdition) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationEdition)(nil)).Elem()
}

func (e ReservationEdition) ToReservationEditionOutput() ReservationEditionOutput {
	return pulumi.ToOutput(e).(ReservationEditionOutput)
}

func (e ReservationEdition) ToReservationEditionOutputWithContext(ctx context.Context) ReservationEditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReservationEditionOutput)
}

func (e ReservationEdition) ToReservationEditionPtrOutput() ReservationEditionPtrOutput {
	return e.ToReservationEditionPtrOutputWithContext(context.Background())
}

func (e ReservationEdition) ToReservationEditionPtrOutputWithContext(ctx context.Context) ReservationEditionPtrOutput {
	return ReservationEdition(e).ToReservationEditionOutputWithContext(ctx).ToReservationEditionPtrOutputWithContext(ctx)
}

func (e ReservationEdition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationEdition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReservationEdition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReservationEdition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReservationEditionOutput struct{ *pulumi.OutputState }

func (ReservationEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationEdition)(nil)).Elem()
}

func (o ReservationEditionOutput) ToReservationEditionOutput() ReservationEditionOutput {
	return o
}

func (o ReservationEditionOutput) ToReservationEditionOutputWithContext(ctx context.Context) ReservationEditionOutput {
	return o
}

func (o ReservationEditionOutput) ToReservationEditionPtrOutput() ReservationEditionPtrOutput {
	return o.ToReservationEditionPtrOutputWithContext(context.Background())
}

func (o ReservationEditionOutput) ToReservationEditionPtrOutputWithContext(ctx context.Context) ReservationEditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReservationEdition) *ReservationEdition {
		return &v
	}).(ReservationEditionPtrOutput)
}

func (o ReservationEditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReservationEditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationEdition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReservationEditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationEditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReservationEdition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReservationEditionPtrOutput struct{ *pulumi.OutputState }

func (ReservationEditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationEdition)(nil)).Elem()
}

func (o ReservationEditionPtrOutput) ToReservationEditionPtrOutput() ReservationEditionPtrOutput {
	return o
}

func (o ReservationEditionPtrOutput) ToReservationEditionPtrOutputWithContext(ctx context.Context) ReservationEditionPtrOutput {
	return o
}

func (o ReservationEditionPtrOutput) Elem() ReservationEditionOutput {
	return o.ApplyT(func(v *ReservationEdition) ReservationEdition {
		if v != nil {
			return *v
		}
		var ret ReservationEdition
		return ret
	}).(ReservationEditionOutput)
}

func (o ReservationEditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReservationEditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReservationEdition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReservationEditionInput is an input type that accepts ReservationEditionArgs and ReservationEditionOutput values.
// You can construct a concrete instance of `ReservationEditionInput` via:
//
//	ReservationEditionArgs{...}
type ReservationEditionInput interface {
	pulumi.Input

	ToReservationEditionOutput() ReservationEditionOutput
	ToReservationEditionOutputWithContext(context.Context) ReservationEditionOutput
}

var reservationEditionPtrType = reflect.TypeOf((**ReservationEdition)(nil)).Elem()

type ReservationEditionPtrInput interface {
	pulumi.Input

	ToReservationEditionPtrOutput() ReservationEditionPtrOutput
	ToReservationEditionPtrOutputWithContext(context.Context) ReservationEditionPtrOutput
}

type reservationEditionPtr string

func ReservationEditionPtr(v string) ReservationEditionPtrInput {
	return (*reservationEditionPtr)(&v)
}

func (*reservationEditionPtr) ElementType() reflect.Type {
	return reservationEditionPtrType
}

func (in *reservationEditionPtr) ToReservationEditionPtrOutput() ReservationEditionPtrOutput {
	return pulumi.ToOutput(in).(ReservationEditionPtrOutput)
}

func (in *reservationEditionPtr) ToReservationEditionPtrOutputWithContext(ctx context.Context) ReservationEditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReservationEditionPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentEditionInput)(nil)).Elem(), CapacityCommitmentEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentEditionPtrInput)(nil)).Elem(), CapacityCommitmentEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentPlanInput)(nil)).Elem(), CapacityCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentPlanPtrInput)(nil)).Elem(), CapacityCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentRenewalPlanInput)(nil)).Elem(), CapacityCommitmentRenewalPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentRenewalPlanPtrInput)(nil)).Elem(), CapacityCommitmentRenewalPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationEditionInput)(nil)).Elem(), ReservationEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationEditionPtrInput)(nil)).Elem(), ReservationEdition("EDITION_UNSPECIFIED"))
	pulumi.RegisterOutputType(CapacityCommitmentEditionOutput{})
	pulumi.RegisterOutputType(CapacityCommitmentEditionPtrOutput{})
	pulumi.RegisterOutputType(CapacityCommitmentPlanOutput{})
	pulumi.RegisterOutputType(CapacityCommitmentPlanPtrOutput{})
	pulumi.RegisterOutputType(CapacityCommitmentRenewalPlanOutput{})
	pulumi.RegisterOutputType(CapacityCommitmentRenewalPlanPtrOutput{})
	pulumi.RegisterOutputType(ReservationEditionOutput{})
	pulumi.RegisterOutputType(ReservationEditionPtrOutput{})
}
