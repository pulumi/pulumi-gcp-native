// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new capacity commitment resource.
// Auto-naming is currently not supported for this resource.
type CapacityCommitment struct {
	pulumi.CustomResourceState

	// The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentEndTime pulumi.StringOutput `pulumi:"commitmentEndTime"`
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentStartTime pulumi.StringOutput `pulumi:"commitmentStartTime"`
	// For FAILED commitment plan, provides the reason of failure.
	FailureStatus StatusResponseOutput `pulumi:"failureStatus"`
	// Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.
	MultiRegionAuxiliary pulumi.BoolOutput `pulumi:"multiRegionAuxiliary"`
	// The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` For the commitment id, it must only contain lower case alphanumeric characters or dashes.It must start with a letter and must not end with a dash. Its maximum length is 64 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// Capacity commitment commitment plan.
	Plan pulumi.StringOutput `pulumi:"plan"`
	// The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
	RenewalPlan pulumi.StringOutput `pulumi:"renewalPlan"`
	// Number of slots in this commitment.
	SlotCount pulumi.StringOutput `pulumi:"slotCount"`
	// State of the commitment.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewCapacityCommitment registers a new resource with the given unique name, arguments, and options.
func NewCapacityCommitment(ctx *pulumi.Context,
	name string, args *CapacityCommitmentArgs, opts ...pulumi.ResourceOption) (*CapacityCommitment, error) {
	if args == nil {
		args = &CapacityCommitmentArgs{}
	}

	var resource CapacityCommitment
	err := ctx.RegisterResource("google-native:bigqueryreservation/v1:CapacityCommitment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityCommitment gets an existing CapacityCommitment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityCommitment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityCommitmentState, opts ...pulumi.ResourceOption) (*CapacityCommitment, error) {
	var resource CapacityCommitment
	err := ctx.ReadResource("google-native:bigqueryreservation/v1:CapacityCommitment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityCommitment resources.
type capacityCommitmentState struct {
}

type CapacityCommitmentState struct {
}

func (CapacityCommitmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityCommitmentState)(nil)).Elem()
}

type capacityCommitmentArgs struct {
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId *string `pulumi:"capacityCommitmentId"`
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg *string `pulumi:"enforceSingleAdminProjectPerOrg"`
	Location                        *string `pulumi:"location"`
	// Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.
	MultiRegionAuxiliary *bool `pulumi:"multiRegionAuxiliary"`
	// Capacity commitment commitment plan.
	Plan    *CapacityCommitmentPlan `pulumi:"plan"`
	Project *string                 `pulumi:"project"`
	// The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
	RenewalPlan *CapacityCommitmentRenewalPlan `pulumi:"renewalPlan"`
	// Number of slots in this commitment.
	SlotCount *string `pulumi:"slotCount"`
}

// The set of arguments for constructing a CapacityCommitment resource.
type CapacityCommitmentArgs struct {
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId pulumi.StringPtrInput
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg pulumi.StringPtrInput
	Location                        pulumi.StringPtrInput
	// Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.
	MultiRegionAuxiliary pulumi.BoolPtrInput
	// Capacity commitment commitment plan.
	Plan    CapacityCommitmentPlanPtrInput
	Project pulumi.StringPtrInput
	// The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
	RenewalPlan CapacityCommitmentRenewalPlanPtrInput
	// Number of slots in this commitment.
	SlotCount pulumi.StringPtrInput
}

func (CapacityCommitmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityCommitmentArgs)(nil)).Elem()
}

type CapacityCommitmentInput interface {
	pulumi.Input

	ToCapacityCommitmentOutput() CapacityCommitmentOutput
	ToCapacityCommitmentOutputWithContext(ctx context.Context) CapacityCommitmentOutput
}

func (*CapacityCommitment) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityCommitment)(nil)).Elem()
}

func (i *CapacityCommitment) ToCapacityCommitmentOutput() CapacityCommitmentOutput {
	return i.ToCapacityCommitmentOutputWithContext(context.Background())
}

func (i *CapacityCommitment) ToCapacityCommitmentOutputWithContext(ctx context.Context) CapacityCommitmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityCommitmentOutput)
}

type CapacityCommitmentOutput struct{ *pulumi.OutputState }

func (CapacityCommitmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityCommitment)(nil)).Elem()
}

func (o CapacityCommitmentOutput) ToCapacityCommitmentOutput() CapacityCommitmentOutput {
	return o
}

func (o CapacityCommitmentOutput) ToCapacityCommitmentOutputWithContext(ctx context.Context) CapacityCommitmentOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityCommitmentInput)(nil)).Elem(), &CapacityCommitment{})
	pulumi.RegisterOutputType(CapacityCommitmentOutput{})
}
