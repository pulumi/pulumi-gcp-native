// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AwsAccessKey struct {
	// AWS access key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS secret access key. This field is not returned in RPC responses.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// AwsAccessKeyInput is an input type that accepts AwsAccessKeyArgs and AwsAccessKeyOutput values.
// You can construct a concrete instance of `AwsAccessKeyInput` via:
//
//	AwsAccessKeyArgs{...}
type AwsAccessKeyInput interface {
	pulumi.Input

	ToAwsAccessKeyOutput() AwsAccessKeyOutput
	ToAwsAccessKeyOutputWithContext(context.Context) AwsAccessKeyOutput
}

// AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AwsAccessKeyArgs struct {
	// AWS access key ID.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// AWS secret access key. This field is not returned in RPC responses.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (AwsAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsAccessKey)(nil)).Elem()
}

func (i AwsAccessKeyArgs) ToAwsAccessKeyOutput() AwsAccessKeyOutput {
	return i.ToAwsAccessKeyOutputWithContext(context.Background())
}

func (i AwsAccessKeyArgs) ToAwsAccessKeyOutputWithContext(ctx context.Context) AwsAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccessKeyOutput)
}

func (i AwsAccessKeyArgs) ToAwsAccessKeyPtrOutput() AwsAccessKeyPtrOutput {
	return i.ToAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (i AwsAccessKeyArgs) ToAwsAccessKeyPtrOutputWithContext(ctx context.Context) AwsAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccessKeyOutput).ToAwsAccessKeyPtrOutputWithContext(ctx)
}

// AwsAccessKeyPtrInput is an input type that accepts AwsAccessKeyArgs, AwsAccessKeyPtr and AwsAccessKeyPtrOutput values.
// You can construct a concrete instance of `AwsAccessKeyPtrInput` via:
//
//	        AwsAccessKeyArgs{...}
//
//	or:
//
//	        nil
type AwsAccessKeyPtrInput interface {
	pulumi.Input

	ToAwsAccessKeyPtrOutput() AwsAccessKeyPtrOutput
	ToAwsAccessKeyPtrOutputWithContext(context.Context) AwsAccessKeyPtrOutput
}

type awsAccessKeyPtrType AwsAccessKeyArgs

func AwsAccessKeyPtr(v *AwsAccessKeyArgs) AwsAccessKeyPtrInput {
	return (*awsAccessKeyPtrType)(v)
}

func (*awsAccessKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccessKey)(nil)).Elem()
}

func (i *awsAccessKeyPtrType) ToAwsAccessKeyPtrOutput() AwsAccessKeyPtrOutput {
	return i.ToAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (i *awsAccessKeyPtrType) ToAwsAccessKeyPtrOutputWithContext(ctx context.Context) AwsAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsAccessKeyPtrOutput)
}

// AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AwsAccessKeyOutput struct{ *pulumi.OutputState }

func (AwsAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsAccessKey)(nil)).Elem()
}

func (o AwsAccessKeyOutput) ToAwsAccessKeyOutput() AwsAccessKeyOutput {
	return o
}

func (o AwsAccessKeyOutput) ToAwsAccessKeyOutputWithContext(ctx context.Context) AwsAccessKeyOutput {
	return o
}

func (o AwsAccessKeyOutput) ToAwsAccessKeyPtrOutput() AwsAccessKeyPtrOutput {
	return o.ToAwsAccessKeyPtrOutputWithContext(context.Background())
}

func (o AwsAccessKeyOutput) ToAwsAccessKeyPtrOutputWithContext(ctx context.Context) AwsAccessKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsAccessKey) *AwsAccessKey {
		return &v
	}).(AwsAccessKeyPtrOutput)
}

// AWS access key ID.
func (o AwsAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsAccessKey) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS secret access key. This field is not returned in RPC responses.
func (o AwsAccessKeyOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AwsAccessKey) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type AwsAccessKeyPtrOutput struct{ *pulumi.OutputState }

func (AwsAccessKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsAccessKey)(nil)).Elem()
}

func (o AwsAccessKeyPtrOutput) ToAwsAccessKeyPtrOutput() AwsAccessKeyPtrOutput {
	return o
}

func (o AwsAccessKeyPtrOutput) ToAwsAccessKeyPtrOutputWithContext(ctx context.Context) AwsAccessKeyPtrOutput {
	return o
}

func (o AwsAccessKeyPtrOutput) Elem() AwsAccessKeyOutput {
	return o.ApplyT(func(v *AwsAccessKey) AwsAccessKey {
		if v != nil {
			return *v
		}
		var ret AwsAccessKey
		return ret
	}).(AwsAccessKeyOutput)
}

// AWS access key ID.
func (o AwsAccessKeyPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAccessKey) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// AWS secret access key. This field is not returned in RPC responses.
func (o AwsAccessKeyPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsAccessKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AwsAccessKeyResponse struct {
	// AWS access key ID.
	AccessKeyId string `pulumi:"accessKeyId"`
	// AWS secret access key. This field is not returned in RPC responses.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AwsAccessKeyResponseOutput struct{ *pulumi.OutputState }

func (AwsAccessKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsAccessKeyResponse)(nil)).Elem()
}

func (o AwsAccessKeyResponseOutput) ToAwsAccessKeyResponseOutput() AwsAccessKeyResponseOutput {
	return o
}

func (o AwsAccessKeyResponseOutput) ToAwsAccessKeyResponseOutputWithContext(ctx context.Context) AwsAccessKeyResponseOutput {
	return o
}

// AWS access key ID.
func (o AwsAccessKeyResponseOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsAccessKeyResponse) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// AWS secret access key. This field is not returned in RPC responses.
func (o AwsAccessKeyResponseOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AwsAccessKeyResponse) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

// An AwsS3CompatibleData resource.
type AwsS3CompatibleData struct {
	// Specifies the name of the bucket.
	BucketName string `pulumi:"bucketName"`
	// Specifies the endpoint of the storage service.
	Endpoint string `pulumi:"endpoint"`
	// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path *string `pulumi:"path"`
	// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
	Region *string `pulumi:"region"`
	// A S3 compatible metadata.
	S3Metadata *S3CompatibleMetadata `pulumi:"s3Metadata"`
}

// AwsS3CompatibleDataInput is an input type that accepts AwsS3CompatibleDataArgs and AwsS3CompatibleDataOutput values.
// You can construct a concrete instance of `AwsS3CompatibleDataInput` via:
//
//	AwsS3CompatibleDataArgs{...}
type AwsS3CompatibleDataInput interface {
	pulumi.Input

	ToAwsS3CompatibleDataOutput() AwsS3CompatibleDataOutput
	ToAwsS3CompatibleDataOutputWithContext(context.Context) AwsS3CompatibleDataOutput
}

// An AwsS3CompatibleData resource.
type AwsS3CompatibleDataArgs struct {
	// Specifies the name of the bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Specifies the endpoint of the storage service.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// A S3 compatible metadata.
	S3Metadata S3CompatibleMetadataPtrInput `pulumi:"s3Metadata"`
}

func (AwsS3CompatibleDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3CompatibleData)(nil)).Elem()
}

func (i AwsS3CompatibleDataArgs) ToAwsS3CompatibleDataOutput() AwsS3CompatibleDataOutput {
	return i.ToAwsS3CompatibleDataOutputWithContext(context.Background())
}

func (i AwsS3CompatibleDataArgs) ToAwsS3CompatibleDataOutputWithContext(ctx context.Context) AwsS3CompatibleDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3CompatibleDataOutput)
}

func (i AwsS3CompatibleDataArgs) ToAwsS3CompatibleDataPtrOutput() AwsS3CompatibleDataPtrOutput {
	return i.ToAwsS3CompatibleDataPtrOutputWithContext(context.Background())
}

func (i AwsS3CompatibleDataArgs) ToAwsS3CompatibleDataPtrOutputWithContext(ctx context.Context) AwsS3CompatibleDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3CompatibleDataOutput).ToAwsS3CompatibleDataPtrOutputWithContext(ctx)
}

// AwsS3CompatibleDataPtrInput is an input type that accepts AwsS3CompatibleDataArgs, AwsS3CompatibleDataPtr and AwsS3CompatibleDataPtrOutput values.
// You can construct a concrete instance of `AwsS3CompatibleDataPtrInput` via:
//
//	        AwsS3CompatibleDataArgs{...}
//
//	or:
//
//	        nil
type AwsS3CompatibleDataPtrInput interface {
	pulumi.Input

	ToAwsS3CompatibleDataPtrOutput() AwsS3CompatibleDataPtrOutput
	ToAwsS3CompatibleDataPtrOutputWithContext(context.Context) AwsS3CompatibleDataPtrOutput
}

type awsS3CompatibleDataPtrType AwsS3CompatibleDataArgs

func AwsS3CompatibleDataPtr(v *AwsS3CompatibleDataArgs) AwsS3CompatibleDataPtrInput {
	return (*awsS3CompatibleDataPtrType)(v)
}

func (*awsS3CompatibleDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsS3CompatibleData)(nil)).Elem()
}

func (i *awsS3CompatibleDataPtrType) ToAwsS3CompatibleDataPtrOutput() AwsS3CompatibleDataPtrOutput {
	return i.ToAwsS3CompatibleDataPtrOutputWithContext(context.Background())
}

func (i *awsS3CompatibleDataPtrType) ToAwsS3CompatibleDataPtrOutputWithContext(ctx context.Context) AwsS3CompatibleDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3CompatibleDataPtrOutput)
}

// An AwsS3CompatibleData resource.
type AwsS3CompatibleDataOutput struct{ *pulumi.OutputState }

func (AwsS3CompatibleDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3CompatibleData)(nil)).Elem()
}

func (o AwsS3CompatibleDataOutput) ToAwsS3CompatibleDataOutput() AwsS3CompatibleDataOutput {
	return o
}

func (o AwsS3CompatibleDataOutput) ToAwsS3CompatibleDataOutputWithContext(ctx context.Context) AwsS3CompatibleDataOutput {
	return o
}

func (o AwsS3CompatibleDataOutput) ToAwsS3CompatibleDataPtrOutput() AwsS3CompatibleDataPtrOutput {
	return o.ToAwsS3CompatibleDataPtrOutputWithContext(context.Background())
}

func (o AwsS3CompatibleDataOutput) ToAwsS3CompatibleDataPtrOutputWithContext(ctx context.Context) AwsS3CompatibleDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsS3CompatibleData) *AwsS3CompatibleData {
		return &v
	}).(AwsS3CompatibleDataPtrOutput)
}

// Specifies the name of the bucket.
func (o AwsS3CompatibleDataOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleData) string { return v.BucketName }).(pulumi.StringOutput)
}

// Specifies the endpoint of the storage service.
func (o AwsS3CompatibleDataOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleData) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3CompatibleDataOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsS3CompatibleData) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
func (o AwsS3CompatibleDataOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsS3CompatibleData) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// A S3 compatible metadata.
func (o AwsS3CompatibleDataOutput) S3Metadata() S3CompatibleMetadataPtrOutput {
	return o.ApplyT(func(v AwsS3CompatibleData) *S3CompatibleMetadata { return v.S3Metadata }).(S3CompatibleMetadataPtrOutput)
}

type AwsS3CompatibleDataPtrOutput struct{ *pulumi.OutputState }

func (AwsS3CompatibleDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsS3CompatibleData)(nil)).Elem()
}

func (o AwsS3CompatibleDataPtrOutput) ToAwsS3CompatibleDataPtrOutput() AwsS3CompatibleDataPtrOutput {
	return o
}

func (o AwsS3CompatibleDataPtrOutput) ToAwsS3CompatibleDataPtrOutputWithContext(ctx context.Context) AwsS3CompatibleDataPtrOutput {
	return o
}

func (o AwsS3CompatibleDataPtrOutput) Elem() AwsS3CompatibleDataOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) AwsS3CompatibleData {
		if v != nil {
			return *v
		}
		var ret AwsS3CompatibleData
		return ret
	}).(AwsS3CompatibleDataOutput)
}

// Specifies the name of the bucket.
func (o AwsS3CompatibleDataPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Specifies the endpoint of the storage service.
func (o AwsS3CompatibleDataPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3CompatibleDataPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
func (o AwsS3CompatibleDataPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// A S3 compatible metadata.
func (o AwsS3CompatibleDataPtrOutput) S3Metadata() S3CompatibleMetadataPtrOutput {
	return o.ApplyT(func(v *AwsS3CompatibleData) *S3CompatibleMetadata {
		if v == nil {
			return nil
		}
		return v.S3Metadata
	}).(S3CompatibleMetadataPtrOutput)
}

// An AwsS3CompatibleData resource.
type AwsS3CompatibleDataResponse struct {
	// Specifies the name of the bucket.
	BucketName string `pulumi:"bucketName"`
	// Specifies the endpoint of the storage service.
	Endpoint string `pulumi:"endpoint"`
	// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path string `pulumi:"path"`
	// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
	Region string `pulumi:"region"`
	// A S3 compatible metadata.
	S3Metadata S3CompatibleMetadataResponse `pulumi:"s3Metadata"`
}

// An AwsS3CompatibleData resource.
type AwsS3CompatibleDataResponseOutput struct{ *pulumi.OutputState }

func (AwsS3CompatibleDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3CompatibleDataResponse)(nil)).Elem()
}

func (o AwsS3CompatibleDataResponseOutput) ToAwsS3CompatibleDataResponseOutput() AwsS3CompatibleDataResponseOutput {
	return o
}

func (o AwsS3CompatibleDataResponseOutput) ToAwsS3CompatibleDataResponseOutputWithContext(ctx context.Context) AwsS3CompatibleDataResponseOutput {
	return o
}

// Specifies the name of the bucket.
func (o AwsS3CompatibleDataResponseOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleDataResponse) string { return v.BucketName }).(pulumi.StringOutput)
}

// Specifies the endpoint of the storage service.
func (o AwsS3CompatibleDataResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleDataResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies the root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3CompatibleDataResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleDataResponse) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
func (o AwsS3CompatibleDataResponseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3CompatibleDataResponse) string { return v.Region }).(pulumi.StringOutput)
}

// A S3 compatible metadata.
func (o AwsS3CompatibleDataResponseOutput) S3Metadata() S3CompatibleMetadataResponseOutput {
	return o.ApplyT(func(v AwsS3CompatibleDataResponse) S3CompatibleMetadataResponse { return v.S3Metadata }).(S3CompatibleMetadataResponseOutput)
}

// An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.
type AwsS3Data struct {
	// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AwsAccessKey *AwsAccessKey `pulumi:"awsAccessKey"`
	// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
	BucketName string `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path *string `pulumi:"path"`
	// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
	RoleArn *string `pulumi:"roleArn"`
}

// AwsS3DataInput is an input type that accepts AwsS3DataArgs and AwsS3DataOutput values.
// You can construct a concrete instance of `AwsS3DataInput` via:
//
//	AwsS3DataArgs{...}
type AwsS3DataInput interface {
	pulumi.Input

	ToAwsS3DataOutput() AwsS3DataOutput
	ToAwsS3DataOutputWithContext(context.Context) AwsS3DataOutput
}

// An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.
type AwsS3DataArgs struct {
	// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AwsAccessKey AwsAccessKeyPtrInput `pulumi:"awsAccessKey"`
	// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (AwsS3DataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3Data)(nil)).Elem()
}

func (i AwsS3DataArgs) ToAwsS3DataOutput() AwsS3DataOutput {
	return i.ToAwsS3DataOutputWithContext(context.Background())
}

func (i AwsS3DataArgs) ToAwsS3DataOutputWithContext(ctx context.Context) AwsS3DataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3DataOutput)
}

func (i AwsS3DataArgs) ToAwsS3DataPtrOutput() AwsS3DataPtrOutput {
	return i.ToAwsS3DataPtrOutputWithContext(context.Background())
}

func (i AwsS3DataArgs) ToAwsS3DataPtrOutputWithContext(ctx context.Context) AwsS3DataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3DataOutput).ToAwsS3DataPtrOutputWithContext(ctx)
}

// AwsS3DataPtrInput is an input type that accepts AwsS3DataArgs, AwsS3DataPtr and AwsS3DataPtrOutput values.
// You can construct a concrete instance of `AwsS3DataPtrInput` via:
//
//	        AwsS3DataArgs{...}
//
//	or:
//
//	        nil
type AwsS3DataPtrInput interface {
	pulumi.Input

	ToAwsS3DataPtrOutput() AwsS3DataPtrOutput
	ToAwsS3DataPtrOutputWithContext(context.Context) AwsS3DataPtrOutput
}

type awsS3DataPtrType AwsS3DataArgs

func AwsS3DataPtr(v *AwsS3DataArgs) AwsS3DataPtrInput {
	return (*awsS3DataPtrType)(v)
}

func (*awsS3DataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsS3Data)(nil)).Elem()
}

func (i *awsS3DataPtrType) ToAwsS3DataPtrOutput() AwsS3DataPtrOutput {
	return i.ToAwsS3DataPtrOutputWithContext(context.Background())
}

func (i *awsS3DataPtrType) ToAwsS3DataPtrOutputWithContext(ctx context.Context) AwsS3DataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsS3DataPtrOutput)
}

// An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.
type AwsS3DataOutput struct{ *pulumi.OutputState }

func (AwsS3DataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3Data)(nil)).Elem()
}

func (o AwsS3DataOutput) ToAwsS3DataOutput() AwsS3DataOutput {
	return o
}

func (o AwsS3DataOutput) ToAwsS3DataOutputWithContext(ctx context.Context) AwsS3DataOutput {
	return o
}

func (o AwsS3DataOutput) ToAwsS3DataPtrOutput() AwsS3DataPtrOutput {
	return o.ToAwsS3DataPtrOutputWithContext(context.Background())
}

func (o AwsS3DataOutput) ToAwsS3DataPtrOutputWithContext(ctx context.Context) AwsS3DataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsS3Data) *AwsS3Data {
		return &v
	}).(AwsS3DataPtrOutput)
}

// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AwsS3DataOutput) AwsAccessKey() AwsAccessKeyPtrOutput {
	return o.ApplyT(func(v AwsS3Data) *AwsAccessKey { return v.AwsAccessKey }).(AwsAccessKeyPtrOutput)
}

// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
func (o AwsS3DataOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3Data) string { return v.BucketName }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3DataOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsS3Data) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
func (o AwsS3DataOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsS3Data) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type AwsS3DataPtrOutput struct{ *pulumi.OutputState }

func (AwsS3DataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsS3Data)(nil)).Elem()
}

func (o AwsS3DataPtrOutput) ToAwsS3DataPtrOutput() AwsS3DataPtrOutput {
	return o
}

func (o AwsS3DataPtrOutput) ToAwsS3DataPtrOutputWithContext(ctx context.Context) AwsS3DataPtrOutput {
	return o
}

func (o AwsS3DataPtrOutput) Elem() AwsS3DataOutput {
	return o.ApplyT(func(v *AwsS3Data) AwsS3Data {
		if v != nil {
			return *v
		}
		var ret AwsS3Data
		return ret
	}).(AwsS3DataOutput)
}

// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AwsS3DataPtrOutput) AwsAccessKey() AwsAccessKeyPtrOutput {
	return o.ApplyT(func(v *AwsS3Data) *AwsAccessKey {
		if v == nil {
			return nil
		}
		return v.AwsAccessKey
	}).(AwsAccessKeyPtrOutput)
}

// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
func (o AwsS3DataPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3Data) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3DataPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3Data) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
func (o AwsS3DataPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsS3Data) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.
type AwsS3DataResponse struct {
	// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AwsAccessKey AwsAccessKeyResponse `pulumi:"awsAccessKey"`
	// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
	BucketName string `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path string `pulumi:"path"`
	// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
	RoleArn string `pulumi:"roleArn"`
}

// An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.
type AwsS3DataResponseOutput struct{ *pulumi.OutputState }

func (AwsS3DataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsS3DataResponse)(nil)).Elem()
}

func (o AwsS3DataResponseOutput) ToAwsS3DataResponseOutput() AwsS3DataResponseOutput {
	return o
}

func (o AwsS3DataResponseOutput) ToAwsS3DataResponseOutputWithContext(ctx context.Context) AwsS3DataResponseOutput {
	return o
}

// Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AwsS3DataResponseOutput) AwsAccessKey() AwsAccessKeyResponseOutput {
	return o.ApplyT(func(v AwsS3DataResponse) AwsAccessKeyResponse { return v.AwsAccessKey }).(AwsAccessKeyResponseOutput)
}

// S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)).
func (o AwsS3DataResponseOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3DataResponse) string { return v.BucketName }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AwsS3DataResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3DataResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.
func (o AwsS3DataResponseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsS3DataResponse) string { return v.RoleArn }).(pulumi.StringOutput)
}

// An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
type AzureBlobStorageData struct {
	// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AzureCredentials AzureCredentials `pulumi:"azureCredentials"`
	// The container to transfer from the Azure Storage account.
	Container string `pulumi:"container"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path *string `pulumi:"path"`
	// The name of the Azure Storage account.
	StorageAccount string `pulumi:"storageAccount"`
}

// AzureBlobStorageDataInput is an input type that accepts AzureBlobStorageDataArgs and AzureBlobStorageDataOutput values.
// You can construct a concrete instance of `AzureBlobStorageDataInput` via:
//
//	AzureBlobStorageDataArgs{...}
type AzureBlobStorageDataInput interface {
	pulumi.Input

	ToAzureBlobStorageDataOutput() AzureBlobStorageDataOutput
	ToAzureBlobStorageDataOutputWithContext(context.Context) AzureBlobStorageDataOutput
}

// An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
type AzureBlobStorageDataArgs struct {
	// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AzureCredentials AzureCredentialsInput `pulumi:"azureCredentials"`
	// The container to transfer from the Azure Storage account.
	Container pulumi.StringInput `pulumi:"container"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The name of the Azure Storage account.
	StorageAccount pulumi.StringInput `pulumi:"storageAccount"`
}

func (AzureBlobStorageDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageData)(nil)).Elem()
}

func (i AzureBlobStorageDataArgs) ToAzureBlobStorageDataOutput() AzureBlobStorageDataOutput {
	return i.ToAzureBlobStorageDataOutputWithContext(context.Background())
}

func (i AzureBlobStorageDataArgs) ToAzureBlobStorageDataOutputWithContext(ctx context.Context) AzureBlobStorageDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageDataOutput)
}

func (i AzureBlobStorageDataArgs) ToAzureBlobStorageDataPtrOutput() AzureBlobStorageDataPtrOutput {
	return i.ToAzureBlobStorageDataPtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageDataArgs) ToAzureBlobStorageDataPtrOutputWithContext(ctx context.Context) AzureBlobStorageDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageDataOutput).ToAzureBlobStorageDataPtrOutputWithContext(ctx)
}

// AzureBlobStorageDataPtrInput is an input type that accepts AzureBlobStorageDataArgs, AzureBlobStorageDataPtr and AzureBlobStorageDataPtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageDataPtrInput` via:
//
//	        AzureBlobStorageDataArgs{...}
//
//	or:
//
//	        nil
type AzureBlobStorageDataPtrInput interface {
	pulumi.Input

	ToAzureBlobStorageDataPtrOutput() AzureBlobStorageDataPtrOutput
	ToAzureBlobStorageDataPtrOutputWithContext(context.Context) AzureBlobStorageDataPtrOutput
}

type azureBlobStorageDataPtrType AzureBlobStorageDataArgs

func AzureBlobStorageDataPtr(v *AzureBlobStorageDataArgs) AzureBlobStorageDataPtrInput {
	return (*azureBlobStorageDataPtrType)(v)
}

func (*azureBlobStorageDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageData)(nil)).Elem()
}

func (i *azureBlobStorageDataPtrType) ToAzureBlobStorageDataPtrOutput() AzureBlobStorageDataPtrOutput {
	return i.ToAzureBlobStorageDataPtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageDataPtrType) ToAzureBlobStorageDataPtrOutputWithContext(ctx context.Context) AzureBlobStorageDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageDataPtrOutput)
}

// An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
type AzureBlobStorageDataOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageData)(nil)).Elem()
}

func (o AzureBlobStorageDataOutput) ToAzureBlobStorageDataOutput() AzureBlobStorageDataOutput {
	return o
}

func (o AzureBlobStorageDataOutput) ToAzureBlobStorageDataOutputWithContext(ctx context.Context) AzureBlobStorageDataOutput {
	return o
}

func (o AzureBlobStorageDataOutput) ToAzureBlobStorageDataPtrOutput() AzureBlobStorageDataPtrOutput {
	return o.ToAzureBlobStorageDataPtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageDataOutput) ToAzureBlobStorageDataPtrOutputWithContext(ctx context.Context) AzureBlobStorageDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBlobStorageData) *AzureBlobStorageData {
		return &v
	}).(AzureBlobStorageDataPtrOutput)
}

// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AzureBlobStorageDataOutput) AzureCredentials() AzureCredentialsOutput {
	return o.ApplyT(func(v AzureBlobStorageData) AzureCredentials { return v.AzureCredentials }).(AzureCredentialsOutput)
}

// The container to transfer from the Azure Storage account.
func (o AzureBlobStorageDataOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobStorageData) string { return v.Container }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AzureBlobStorageDataOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageData) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account.
func (o AzureBlobStorageDataOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobStorageData) string { return v.StorageAccount }).(pulumi.StringOutput)
}

type AzureBlobStorageDataPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageData)(nil)).Elem()
}

func (o AzureBlobStorageDataPtrOutput) ToAzureBlobStorageDataPtrOutput() AzureBlobStorageDataPtrOutput {
	return o
}

func (o AzureBlobStorageDataPtrOutput) ToAzureBlobStorageDataPtrOutputWithContext(ctx context.Context) AzureBlobStorageDataPtrOutput {
	return o
}

func (o AzureBlobStorageDataPtrOutput) Elem() AzureBlobStorageDataOutput {
	return o.ApplyT(func(v *AzureBlobStorageData) AzureBlobStorageData {
		if v != nil {
			return *v
		}
		var ret AzureBlobStorageData
		return ret
	}).(AzureBlobStorageDataOutput)
}

// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AzureBlobStorageDataPtrOutput) AzureCredentials() AzureCredentialsPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageData) *AzureCredentials {
		if v == nil {
			return nil
		}
		return &v.AzureCredentials
	}).(AzureCredentialsPtrOutput)
}

// The container to transfer from the Azure Storage account.
func (o AzureBlobStorageDataPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageData) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AzureBlobStorageDataPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageData) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account.
func (o AzureBlobStorageDataPtrOutput) StorageAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageData) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccount
	}).(pulumi.StringPtrOutput)
}

// An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
type AzureBlobStorageDataResponse struct {
	// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
	AzureCredentials AzureCredentialsResponse `pulumi:"azureCredentials"`
	// The container to transfer from the Azure Storage account.
	Container string `pulumi:"container"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
	Path string `pulumi:"path"`
	// The name of the Azure Storage account.
	StorageAccount string `pulumi:"storageAccount"`
}

// An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).
type AzureBlobStorageDataResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageDataResponse)(nil)).Elem()
}

func (o AzureBlobStorageDataResponseOutput) ToAzureBlobStorageDataResponseOutput() AzureBlobStorageDataResponseOutput {
	return o
}

func (o AzureBlobStorageDataResponseOutput) ToAzureBlobStorageDataResponseOutputWithContext(ctx context.Context) AzureBlobStorageDataResponseOutput {
	return o
}

// Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
func (o AzureBlobStorageDataResponseOutput) AzureCredentials() AzureCredentialsResponseOutput {
	return o.ApplyT(func(v AzureBlobStorageDataResponse) AzureCredentialsResponse { return v.AzureCredentials }).(AzureCredentialsResponseOutput)
}

// The container to transfer from the Azure Storage account.
func (o AzureBlobStorageDataResponseOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobStorageDataResponse) string { return v.Container }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
func (o AzureBlobStorageDataResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobStorageDataResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The name of the Azure Storage account.
func (o AzureBlobStorageDataResponseOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v AzureBlobStorageDataResponse) string { return v.StorageAccount }).(pulumi.StringOutput)
}

// Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AzureCredentials struct {
	// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
	SasToken string `pulumi:"sasToken"`
}

// AzureCredentialsInput is an input type that accepts AzureCredentialsArgs and AzureCredentialsOutput values.
// You can construct a concrete instance of `AzureCredentialsInput` via:
//
//	AzureCredentialsArgs{...}
type AzureCredentialsInput interface {
	pulumi.Input

	ToAzureCredentialsOutput() AzureCredentialsOutput
	ToAzureCredentialsOutputWithContext(context.Context) AzureCredentialsOutput
}

// Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AzureCredentialsArgs struct {
	// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
	SasToken pulumi.StringInput `pulumi:"sasToken"`
}

func (AzureCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureCredentials)(nil)).Elem()
}

func (i AzureCredentialsArgs) ToAzureCredentialsOutput() AzureCredentialsOutput {
	return i.ToAzureCredentialsOutputWithContext(context.Background())
}

func (i AzureCredentialsArgs) ToAzureCredentialsOutputWithContext(ctx context.Context) AzureCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsOutput)
}

func (i AzureCredentialsArgs) ToAzureCredentialsPtrOutput() AzureCredentialsPtrOutput {
	return i.ToAzureCredentialsPtrOutputWithContext(context.Background())
}

func (i AzureCredentialsArgs) ToAzureCredentialsPtrOutputWithContext(ctx context.Context) AzureCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsOutput).ToAzureCredentialsPtrOutputWithContext(ctx)
}

// AzureCredentialsPtrInput is an input type that accepts AzureCredentialsArgs, AzureCredentialsPtr and AzureCredentialsPtrOutput values.
// You can construct a concrete instance of `AzureCredentialsPtrInput` via:
//
//	        AzureCredentialsArgs{...}
//
//	or:
//
//	        nil
type AzureCredentialsPtrInput interface {
	pulumi.Input

	ToAzureCredentialsPtrOutput() AzureCredentialsPtrOutput
	ToAzureCredentialsPtrOutputWithContext(context.Context) AzureCredentialsPtrOutput
}

type azureCredentialsPtrType AzureCredentialsArgs

func AzureCredentialsPtr(v *AzureCredentialsArgs) AzureCredentialsPtrInput {
	return (*azureCredentialsPtrType)(v)
}

func (*azureCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureCredentials)(nil)).Elem()
}

func (i *azureCredentialsPtrType) ToAzureCredentialsPtrOutput() AzureCredentialsPtrOutput {
	return i.ToAzureCredentialsPtrOutputWithContext(context.Background())
}

func (i *azureCredentialsPtrType) ToAzureCredentialsPtrOutputWithContext(ctx context.Context) AzureCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsPtrOutput)
}

// Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AzureCredentialsOutput struct{ *pulumi.OutputState }

func (AzureCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureCredentials)(nil)).Elem()
}

func (o AzureCredentialsOutput) ToAzureCredentialsOutput() AzureCredentialsOutput {
	return o
}

func (o AzureCredentialsOutput) ToAzureCredentialsOutputWithContext(ctx context.Context) AzureCredentialsOutput {
	return o
}

func (o AzureCredentialsOutput) ToAzureCredentialsPtrOutput() AzureCredentialsPtrOutput {
	return o.ToAzureCredentialsPtrOutputWithContext(context.Background())
}

func (o AzureCredentialsOutput) ToAzureCredentialsPtrOutputWithContext(ctx context.Context) AzureCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureCredentials) *AzureCredentials {
		return &v
	}).(AzureCredentialsPtrOutput)
}

// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
func (o AzureCredentialsOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v AzureCredentials) string { return v.SasToken }).(pulumi.StringOutput)
}

type AzureCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AzureCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureCredentials)(nil)).Elem()
}

func (o AzureCredentialsPtrOutput) ToAzureCredentialsPtrOutput() AzureCredentialsPtrOutput {
	return o
}

func (o AzureCredentialsPtrOutput) ToAzureCredentialsPtrOutputWithContext(ctx context.Context) AzureCredentialsPtrOutput {
	return o
}

func (o AzureCredentialsPtrOutput) Elem() AzureCredentialsOutput {
	return o.ApplyT(func(v *AzureCredentials) AzureCredentials {
		if v != nil {
			return *v
		}
		var ret AzureCredentials
		return ret
	}).(AzureCredentialsOutput)
}

// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
func (o AzureCredentialsPtrOutput) SasToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.SasToken
	}).(pulumi.StringPtrOutput)
}

// Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AzureCredentialsResponse struct {
	// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
	SasToken string `pulumi:"sasToken"`
}

// Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).
type AzureCredentialsResponseOutput struct{ *pulumi.OutputState }

func (AzureCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureCredentialsResponse)(nil)).Elem()
}

func (o AzureCredentialsResponseOutput) ToAzureCredentialsResponseOutput() AzureCredentialsResponseOutput {
	return o
}

func (o AzureCredentialsResponseOutput) ToAzureCredentialsResponseOutputWithContext(ctx context.Context) AzureCredentialsResponseOutput {
	return o
}

// Azure shared access signature (SAS). For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview).
func (o AzureCredentialsResponseOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v AzureCredentialsResponse) string { return v.SasToken }).(pulumi.StringOutput)
}

// Specifies a bandwidth limit for an agent pool.
type BandwidthLimit struct {
	// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
	LimitMbps *string `pulumi:"limitMbps"`
}

// BandwidthLimitInput is an input type that accepts BandwidthLimitArgs and BandwidthLimitOutput values.
// You can construct a concrete instance of `BandwidthLimitInput` via:
//
//	BandwidthLimitArgs{...}
type BandwidthLimitInput interface {
	pulumi.Input

	ToBandwidthLimitOutput() BandwidthLimitOutput
	ToBandwidthLimitOutputWithContext(context.Context) BandwidthLimitOutput
}

// Specifies a bandwidth limit for an agent pool.
type BandwidthLimitArgs struct {
	// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
	LimitMbps pulumi.StringPtrInput `pulumi:"limitMbps"`
}

func (BandwidthLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthLimit)(nil)).Elem()
}

func (i BandwidthLimitArgs) ToBandwidthLimitOutput() BandwidthLimitOutput {
	return i.ToBandwidthLimitOutputWithContext(context.Background())
}

func (i BandwidthLimitArgs) ToBandwidthLimitOutputWithContext(ctx context.Context) BandwidthLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthLimitOutput)
}

func (i BandwidthLimitArgs) ToBandwidthLimitPtrOutput() BandwidthLimitPtrOutput {
	return i.ToBandwidthLimitPtrOutputWithContext(context.Background())
}

func (i BandwidthLimitArgs) ToBandwidthLimitPtrOutputWithContext(ctx context.Context) BandwidthLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthLimitOutput).ToBandwidthLimitPtrOutputWithContext(ctx)
}

// BandwidthLimitPtrInput is an input type that accepts BandwidthLimitArgs, BandwidthLimitPtr and BandwidthLimitPtrOutput values.
// You can construct a concrete instance of `BandwidthLimitPtrInput` via:
//
//	        BandwidthLimitArgs{...}
//
//	or:
//
//	        nil
type BandwidthLimitPtrInput interface {
	pulumi.Input

	ToBandwidthLimitPtrOutput() BandwidthLimitPtrOutput
	ToBandwidthLimitPtrOutputWithContext(context.Context) BandwidthLimitPtrOutput
}

type bandwidthLimitPtrType BandwidthLimitArgs

func BandwidthLimitPtr(v *BandwidthLimitArgs) BandwidthLimitPtrInput {
	return (*bandwidthLimitPtrType)(v)
}

func (*bandwidthLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthLimit)(nil)).Elem()
}

func (i *bandwidthLimitPtrType) ToBandwidthLimitPtrOutput() BandwidthLimitPtrOutput {
	return i.ToBandwidthLimitPtrOutputWithContext(context.Background())
}

func (i *bandwidthLimitPtrType) ToBandwidthLimitPtrOutputWithContext(ctx context.Context) BandwidthLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthLimitPtrOutput)
}

// Specifies a bandwidth limit for an agent pool.
type BandwidthLimitOutput struct{ *pulumi.OutputState }

func (BandwidthLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthLimit)(nil)).Elem()
}

func (o BandwidthLimitOutput) ToBandwidthLimitOutput() BandwidthLimitOutput {
	return o
}

func (o BandwidthLimitOutput) ToBandwidthLimitOutputWithContext(ctx context.Context) BandwidthLimitOutput {
	return o
}

func (o BandwidthLimitOutput) ToBandwidthLimitPtrOutput() BandwidthLimitPtrOutput {
	return o.ToBandwidthLimitPtrOutputWithContext(context.Background())
}

func (o BandwidthLimitOutput) ToBandwidthLimitPtrOutputWithContext(ctx context.Context) BandwidthLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BandwidthLimit) *BandwidthLimit {
		return &v
	}).(BandwidthLimitPtrOutput)
}

// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
func (o BandwidthLimitOutput) LimitMbps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthLimit) *string { return v.LimitMbps }).(pulumi.StringPtrOutput)
}

type BandwidthLimitPtrOutput struct{ *pulumi.OutputState }

func (BandwidthLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthLimit)(nil)).Elem()
}

func (o BandwidthLimitPtrOutput) ToBandwidthLimitPtrOutput() BandwidthLimitPtrOutput {
	return o
}

func (o BandwidthLimitPtrOutput) ToBandwidthLimitPtrOutputWithContext(ctx context.Context) BandwidthLimitPtrOutput {
	return o
}

func (o BandwidthLimitPtrOutput) Elem() BandwidthLimitOutput {
	return o.ApplyT(func(v *BandwidthLimit) BandwidthLimit {
		if v != nil {
			return *v
		}
		var ret BandwidthLimit
		return ret
	}).(BandwidthLimitOutput)
}

// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
func (o BandwidthLimitPtrOutput) LimitMbps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthLimit) *string {
		if v == nil {
			return nil
		}
		return v.LimitMbps
	}).(pulumi.StringPtrOutput)
}

// Specifies a bandwidth limit for an agent pool.
type BandwidthLimitResponse struct {
	// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
	LimitMbps string `pulumi:"limitMbps"`
}

// Specifies a bandwidth limit for an agent pool.
type BandwidthLimitResponseOutput struct{ *pulumi.OutputState }

func (BandwidthLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthLimitResponse)(nil)).Elem()
}

func (o BandwidthLimitResponseOutput) ToBandwidthLimitResponseOutput() BandwidthLimitResponseOutput {
	return o
}

func (o BandwidthLimitResponseOutput) ToBandwidthLimitResponseOutputWithContext(ctx context.Context) BandwidthLimitResponseOutput {
	return o
}

// Bandwidth rate in megabytes per second, distributed across all the agents in the pool.
func (o BandwidthLimitResponseOutput) LimitMbps() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthLimitResponse) string { return v.LimitMbps }).(pulumi.StringOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type Date struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day *int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month *int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year *int `pulumi:"year"`
}

// DateInput is an input type that accepts DateArgs and DateOutput values.
// You can construct a concrete instance of `DateInput` via:
//
//	DateArgs{...}
type DateInput interface {
	pulumi.Input

	ToDateOutput() DateOutput
	ToDateOutputWithContext(context.Context) DateOutput
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type DateArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntPtrInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month pulumi.IntPtrInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year pulumi.IntPtrInput `pulumi:"year"`
}

func (DateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Date)(nil)).Elem()
}

func (i DateArgs) ToDateOutput() DateOutput {
	return i.ToDateOutputWithContext(context.Background())
}

func (i DateArgs) ToDateOutputWithContext(ctx context.Context) DateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateOutput)
}

func (i DateArgs) ToDatePtrOutput() DatePtrOutput {
	return i.ToDatePtrOutputWithContext(context.Background())
}

func (i DateArgs) ToDatePtrOutputWithContext(ctx context.Context) DatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DateOutput).ToDatePtrOutputWithContext(ctx)
}

// DatePtrInput is an input type that accepts DateArgs, DatePtr and DatePtrOutput values.
// You can construct a concrete instance of `DatePtrInput` via:
//
//	        DateArgs{...}
//
//	or:
//
//	        nil
type DatePtrInput interface {
	pulumi.Input

	ToDatePtrOutput() DatePtrOutput
	ToDatePtrOutputWithContext(context.Context) DatePtrOutput
}

type datePtrType DateArgs

func DatePtr(v *DateArgs) DatePtrInput {
	return (*datePtrType)(v)
}

func (*datePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Date)(nil)).Elem()
}

func (i *datePtrType) ToDatePtrOutput() DatePtrOutput {
	return i.ToDatePtrOutputWithContext(context.Background())
}

func (i *datePtrType) ToDatePtrOutputWithContext(ctx context.Context) DatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatePtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type DateOutput struct{ *pulumi.OutputState }

func (DateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Date)(nil)).Elem()
}

func (o DateOutput) ToDateOutput() DateOutput {
	return o
}

func (o DateOutput) ToDateOutputWithContext(ctx context.Context) DateOutput {
	return o
}

func (o DateOutput) ToDatePtrOutput() DatePtrOutput {
	return o.ToDatePtrOutputWithContext(context.Background())
}

func (o DateOutput) ToDatePtrOutputWithContext(ctx context.Context) DatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Date) *Date {
		return &v
	}).(DatePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o DateOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Date) *int { return v.Day }).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o DateOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Date) *int { return v.Month }).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o DateOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Date) *int { return v.Year }).(pulumi.IntPtrOutput)
}

type DatePtrOutput struct{ *pulumi.OutputState }

func (DatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Date)(nil)).Elem()
}

func (o DatePtrOutput) ToDatePtrOutput() DatePtrOutput {
	return o
}

func (o DatePtrOutput) ToDatePtrOutputWithContext(ctx context.Context) DatePtrOutput {
	return o
}

func (o DatePtrOutput) Elem() DateOutput {
	return o.ApplyT(func(v *Date) Date {
		if v != nil {
			return *v
		}
		var ret Date
		return ret
	}).(DateOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o DatePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Date) *int {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o DatePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Date) *int {
		if v == nil {
			return nil
		}
		return v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o DatePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Date) *int {
		if v == nil {
			return nil
		}
		return v.Year
	}).(pulumi.IntPtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type DateResponse struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year int `pulumi:"year"`
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
type DateResponseOutput struct{ *pulumi.OutputState }

func (DateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DateResponse)(nil)).Elem()
}

func (o DateResponseOutput) ToDateResponseOutput() DateResponseOutput {
	return o
}

func (o DateResponseOutput) ToDateResponseOutputWithContext(ctx context.Context) DateResponseOutput {
	return o
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o DateResponseOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v DateResponse) int { return v.Day }).(pulumi.IntOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o DateResponseOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v DateResponse) int { return v.Month }).(pulumi.IntOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o DateResponseOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v DateResponse) int { return v.Year }).(pulumi.IntOutput)
}

// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
type GcsData struct {
	// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
	BucketName string `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
	Path *string `pulumi:"path"`
}

// GcsDataInput is an input type that accepts GcsDataArgs and GcsDataOutput values.
// You can construct a concrete instance of `GcsDataInput` via:
//
//	GcsDataArgs{...}
type GcsDataInput interface {
	pulumi.Input

	ToGcsDataOutput() GcsDataOutput
	ToGcsDataOutputWithContext(context.Context) GcsDataOutput
}

// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
type GcsDataArgs struct {
	// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (GcsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcsData)(nil)).Elem()
}

func (i GcsDataArgs) ToGcsDataOutput() GcsDataOutput {
	return i.ToGcsDataOutputWithContext(context.Background())
}

func (i GcsDataArgs) ToGcsDataOutputWithContext(ctx context.Context) GcsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcsDataOutput)
}

func (i GcsDataArgs) ToGcsDataPtrOutput() GcsDataPtrOutput {
	return i.ToGcsDataPtrOutputWithContext(context.Background())
}

func (i GcsDataArgs) ToGcsDataPtrOutputWithContext(ctx context.Context) GcsDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcsDataOutput).ToGcsDataPtrOutputWithContext(ctx)
}

// GcsDataPtrInput is an input type that accepts GcsDataArgs, GcsDataPtr and GcsDataPtrOutput values.
// You can construct a concrete instance of `GcsDataPtrInput` via:
//
//	        GcsDataArgs{...}
//
//	or:
//
//	        nil
type GcsDataPtrInput interface {
	pulumi.Input

	ToGcsDataPtrOutput() GcsDataPtrOutput
	ToGcsDataPtrOutputWithContext(context.Context) GcsDataPtrOutput
}

type gcsDataPtrType GcsDataArgs

func GcsDataPtr(v *GcsDataArgs) GcsDataPtrInput {
	return (*gcsDataPtrType)(v)
}

func (*gcsDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcsData)(nil)).Elem()
}

func (i *gcsDataPtrType) ToGcsDataPtrOutput() GcsDataPtrOutput {
	return i.ToGcsDataPtrOutputWithContext(context.Background())
}

func (i *gcsDataPtrType) ToGcsDataPtrOutputWithContext(ctx context.Context) GcsDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcsDataPtrOutput)
}

// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
type GcsDataOutput struct{ *pulumi.OutputState }

func (GcsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcsData)(nil)).Elem()
}

func (o GcsDataOutput) ToGcsDataOutput() GcsDataOutput {
	return o
}

func (o GcsDataOutput) ToGcsDataOutputWithContext(ctx context.Context) GcsDataOutput {
	return o
}

func (o GcsDataOutput) ToGcsDataPtrOutput() GcsDataPtrOutput {
	return o.ToGcsDataPtrOutputWithContext(context.Background())
}

func (o GcsDataOutput) ToGcsDataPtrOutputWithContext(ctx context.Context) GcsDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcsData) *GcsData {
		return &v
	}).(GcsDataPtrOutput)
}

// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
func (o GcsDataOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GcsData) string { return v.BucketName }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
func (o GcsDataOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcsData) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type GcsDataPtrOutput struct{ *pulumi.OutputState }

func (GcsDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcsData)(nil)).Elem()
}

func (o GcsDataPtrOutput) ToGcsDataPtrOutput() GcsDataPtrOutput {
	return o
}

func (o GcsDataPtrOutput) ToGcsDataPtrOutputWithContext(ctx context.Context) GcsDataPtrOutput {
	return o
}

func (o GcsDataPtrOutput) Elem() GcsDataOutput {
	return o.ApplyT(func(v *GcsData) GcsData {
		if v != nil {
			return *v
		}
		var ret GcsData
		return ret
	}).(GcsDataOutput)
}

// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
func (o GcsDataPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcsData) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
func (o GcsDataPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcsData) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
type GcsDataResponse struct {
	// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
	BucketName string `pulumi:"bucketName"`
	// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
	Path string `pulumi:"path"`
}

// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
type GcsDataResponseOutput struct{ *pulumi.OutputState }

func (GcsDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcsDataResponse)(nil)).Elem()
}

func (o GcsDataResponseOutput) ToGcsDataResponseOutput() GcsDataResponseOutput {
	return o
}

func (o GcsDataResponseOutput) ToGcsDataResponseOutputWithContext(ctx context.Context) GcsDataResponseOutput {
	return o
}

// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
func (o GcsDataResponseOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GcsDataResponse) string { return v.BucketName }).(pulumi.StringOutput)
}

// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
func (o GcsDataResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GcsDataResponse) string { return v.Path }).(pulumi.StringOutput)
}

// An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `"TsvHttpData-1.0"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** — The location of the object. * **Length** — The size of the object in bytes. * **MD5** — The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer.
type HttpData struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

// HttpDataInput is an input type that accepts HttpDataArgs and HttpDataOutput values.
// You can construct a concrete instance of `HttpDataInput` via:
//
//	HttpDataArgs{...}
type HttpDataInput interface {
	pulumi.Input

	ToHttpDataOutput() HttpDataOutput
	ToHttpDataOutputWithContext(context.Context) HttpDataOutput
}

// An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `"TsvHttpData-1.0"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** — The location of the object. * **Length** — The size of the object in bytes. * **MD5** — The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer.
type HttpDataArgs struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl pulumi.StringInput `pulumi:"listUrl"`
}

func (HttpDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpData)(nil)).Elem()
}

func (i HttpDataArgs) ToHttpDataOutput() HttpDataOutput {
	return i.ToHttpDataOutputWithContext(context.Background())
}

func (i HttpDataArgs) ToHttpDataOutputWithContext(ctx context.Context) HttpDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDataOutput)
}

func (i HttpDataArgs) ToHttpDataPtrOutput() HttpDataPtrOutput {
	return i.ToHttpDataPtrOutputWithContext(context.Background())
}

func (i HttpDataArgs) ToHttpDataPtrOutputWithContext(ctx context.Context) HttpDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDataOutput).ToHttpDataPtrOutputWithContext(ctx)
}

// HttpDataPtrInput is an input type that accepts HttpDataArgs, HttpDataPtr and HttpDataPtrOutput values.
// You can construct a concrete instance of `HttpDataPtrInput` via:
//
//	        HttpDataArgs{...}
//
//	or:
//
//	        nil
type HttpDataPtrInput interface {
	pulumi.Input

	ToHttpDataPtrOutput() HttpDataPtrOutput
	ToHttpDataPtrOutputWithContext(context.Context) HttpDataPtrOutput
}

type httpDataPtrType HttpDataArgs

func HttpDataPtr(v *HttpDataArgs) HttpDataPtrInput {
	return (*httpDataPtrType)(v)
}

func (*httpDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpData)(nil)).Elem()
}

func (i *httpDataPtrType) ToHttpDataPtrOutput() HttpDataPtrOutput {
	return i.ToHttpDataPtrOutputWithContext(context.Background())
}

func (i *httpDataPtrType) ToHttpDataPtrOutputWithContext(ctx context.Context) HttpDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpDataPtrOutput)
}

// An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `"TsvHttpData-1.0"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** — The location of the object. * **Length** — The size of the object in bytes. * **MD5** — The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer.
type HttpDataOutput struct{ *pulumi.OutputState }

func (HttpDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpData)(nil)).Elem()
}

func (o HttpDataOutput) ToHttpDataOutput() HttpDataOutput {
	return o
}

func (o HttpDataOutput) ToHttpDataOutputWithContext(ctx context.Context) HttpDataOutput {
	return o
}

func (o HttpDataOutput) ToHttpDataPtrOutput() HttpDataPtrOutput {
	return o.ToHttpDataPtrOutputWithContext(context.Background())
}

func (o HttpDataOutput) ToHttpDataPtrOutputWithContext(ctx context.Context) HttpDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpData) *HttpData {
		return &v
	}).(HttpDataPtrOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o HttpDataOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v HttpData) string { return v.ListUrl }).(pulumi.StringOutput)
}

type HttpDataPtrOutput struct{ *pulumi.OutputState }

func (HttpDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpData)(nil)).Elem()
}

func (o HttpDataPtrOutput) ToHttpDataPtrOutput() HttpDataPtrOutput {
	return o
}

func (o HttpDataPtrOutput) ToHttpDataPtrOutputWithContext(ctx context.Context) HttpDataPtrOutput {
	return o
}

func (o HttpDataPtrOutput) Elem() HttpDataOutput {
	return o.ApplyT(func(v *HttpData) HttpData {
		if v != nil {
			return *v
		}
		var ret HttpData
		return ret
	}).(HttpDataOutput)
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o HttpDataPtrOutput) ListUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpData) *string {
		if v == nil {
			return nil
		}
		return &v.ListUrl
	}).(pulumi.StringPtrOutput)
}

// An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `"TsvHttpData-1.0"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** — The location of the object. * **Length** — The size of the object in bytes. * **MD5** — The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer.
type HttpDataResponse struct {
	// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
	ListUrl string `pulumi:"listUrl"`
}

// An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `"TsvHttpData-1.0"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** — The location of the object. * **Length** — The size of the object in bytes. * **MD5** — The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer.
type HttpDataResponseOutput struct{ *pulumi.OutputState }

func (HttpDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpDataResponse)(nil)).Elem()
}

func (o HttpDataResponseOutput) ToHttpDataResponseOutput() HttpDataResponseOutput {
	return o
}

func (o HttpDataResponseOutput) ToHttpDataResponseOutputWithContext(ctx context.Context) HttpDataResponseOutput {
	return o
}

// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
func (o HttpDataResponseOutput) ListUrl() pulumi.StringOutput {
	return o.ApplyT(func(v HttpDataResponse) string { return v.ListUrl }).(pulumi.StringOutput)
}

// Specifies the logging behavior for transfer operations. For cloud-to-cloud transfers, logs are sent to Cloud Logging. See [Read transfer logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for details. For transfers to or from a POSIX file system, logs are stored in the Cloud Storage bucket that is the source or sink of the transfer. See [Managing Transfer for on-premises jobs] (https://cloud.google.com/storage-transfer/docs/managing-on-prem-jobs#viewing-logs) for details.
type LoggingConfig struct {
	// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
	EnableOnpremGcsTransferLogs *bool `pulumi:"enableOnpremGcsTransferLogs"`
	// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActionStates []LoggingConfigLogActionStatesItem `pulumi:"logActionStates"`
	// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActions []LoggingConfigLogActionsItem `pulumi:"logActions"`
}

// LoggingConfigInput is an input type that accepts LoggingConfigArgs and LoggingConfigOutput values.
// You can construct a concrete instance of `LoggingConfigInput` via:
//
//	LoggingConfigArgs{...}
type LoggingConfigInput interface {
	pulumi.Input

	ToLoggingConfigOutput() LoggingConfigOutput
	ToLoggingConfigOutputWithContext(context.Context) LoggingConfigOutput
}

// Specifies the logging behavior for transfer operations. For cloud-to-cloud transfers, logs are sent to Cloud Logging. See [Read transfer logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for details. For transfers to or from a POSIX file system, logs are stored in the Cloud Storage bucket that is the source or sink of the transfer. See [Managing Transfer for on-premises jobs] (https://cloud.google.com/storage-transfer/docs/managing-on-prem-jobs#viewing-logs) for details.
type LoggingConfigArgs struct {
	// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
	EnableOnpremGcsTransferLogs pulumi.BoolPtrInput `pulumi:"enableOnpremGcsTransferLogs"`
	// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActionStates LoggingConfigLogActionStatesItemArrayInput `pulumi:"logActionStates"`
	// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActions LoggingConfigLogActionsItemArrayInput `pulumi:"logActions"`
}

func (LoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfig)(nil)).Elem()
}

func (i LoggingConfigArgs) ToLoggingConfigOutput() LoggingConfigOutput {
	return i.ToLoggingConfigOutputWithContext(context.Background())
}

func (i LoggingConfigArgs) ToLoggingConfigOutputWithContext(ctx context.Context) LoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigOutput)
}

func (i LoggingConfigArgs) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return i.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (i LoggingConfigArgs) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigOutput).ToLoggingConfigPtrOutputWithContext(ctx)
}

// LoggingConfigPtrInput is an input type that accepts LoggingConfigArgs, LoggingConfigPtr and LoggingConfigPtrOutput values.
// You can construct a concrete instance of `LoggingConfigPtrInput` via:
//
//	        LoggingConfigArgs{...}
//
//	or:
//
//	        nil
type LoggingConfigPtrInput interface {
	pulumi.Input

	ToLoggingConfigPtrOutput() LoggingConfigPtrOutput
	ToLoggingConfigPtrOutputWithContext(context.Context) LoggingConfigPtrOutput
}

type loggingConfigPtrType LoggingConfigArgs

func LoggingConfigPtr(v *LoggingConfigArgs) LoggingConfigPtrInput {
	return (*loggingConfigPtrType)(v)
}

func (*loggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfig)(nil)).Elem()
}

func (i *loggingConfigPtrType) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return i.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *loggingConfigPtrType) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigPtrOutput)
}

// Specifies the logging behavior for transfer operations. For cloud-to-cloud transfers, logs are sent to Cloud Logging. See [Read transfer logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for details. For transfers to or from a POSIX file system, logs are stored in the Cloud Storage bucket that is the source or sink of the transfer. See [Managing Transfer for on-premises jobs] (https://cloud.google.com/storage-transfer/docs/managing-on-prem-jobs#viewing-logs) for details.
type LoggingConfigOutput struct{ *pulumi.OutputState }

func (LoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfig)(nil)).Elem()
}

func (o LoggingConfigOutput) ToLoggingConfigOutput() LoggingConfigOutput {
	return o
}

func (o LoggingConfigOutput) ToLoggingConfigOutputWithContext(ctx context.Context) LoggingConfigOutput {
	return o
}

func (o LoggingConfigOutput) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return o.ToLoggingConfigPtrOutputWithContext(context.Background())
}

func (o LoggingConfigOutput) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfig) *LoggingConfig {
		return &v
	}).(LoggingConfigPtrOutput)
}

// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
func (o LoggingConfigOutput) EnableOnpremGcsTransferLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoggingConfig) *bool { return v.EnableOnpremGcsTransferLogs }).(pulumi.BoolPtrOutput)
}

// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigOutput) LogActionStates() LoggingConfigLogActionStatesItemArrayOutput {
	return o.ApplyT(func(v LoggingConfig) []LoggingConfigLogActionStatesItem { return v.LogActionStates }).(LoggingConfigLogActionStatesItemArrayOutput)
}

// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigOutput) LogActions() LoggingConfigLogActionsItemArrayOutput {
	return o.ApplyT(func(v LoggingConfig) []LoggingConfigLogActionsItem { return v.LogActions }).(LoggingConfigLogActionsItemArrayOutput)
}

type LoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfig)(nil)).Elem()
}

func (o LoggingConfigPtrOutput) ToLoggingConfigPtrOutput() LoggingConfigPtrOutput {
	return o
}

func (o LoggingConfigPtrOutput) ToLoggingConfigPtrOutputWithContext(ctx context.Context) LoggingConfigPtrOutput {
	return o
}

func (o LoggingConfigPtrOutput) Elem() LoggingConfigOutput {
	return o.ApplyT(func(v *LoggingConfig) LoggingConfig {
		if v != nil {
			return *v
		}
		var ret LoggingConfig
		return ret
	}).(LoggingConfigOutput)
}

// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
func (o LoggingConfigPtrOutput) EnableOnpremGcsTransferLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableOnpremGcsTransferLogs
	}).(pulumi.BoolPtrOutput)
}

// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigPtrOutput) LogActionStates() LoggingConfigLogActionStatesItemArrayOutput {
	return o.ApplyT(func(v *LoggingConfig) []LoggingConfigLogActionStatesItem {
		if v == nil {
			return nil
		}
		return v.LogActionStates
	}).(LoggingConfigLogActionStatesItemArrayOutput)
}

// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigPtrOutput) LogActions() LoggingConfigLogActionsItemArrayOutput {
	return o.ApplyT(func(v *LoggingConfig) []LoggingConfigLogActionsItem {
		if v == nil {
			return nil
		}
		return v.LogActions
	}).(LoggingConfigLogActionsItemArrayOutput)
}

// Specifies the logging behavior for transfer operations. For cloud-to-cloud transfers, logs are sent to Cloud Logging. See [Read transfer logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for details. For transfers to or from a POSIX file system, logs are stored in the Cloud Storage bucket that is the source or sink of the transfer. See [Managing Transfer for on-premises jobs] (https://cloud.google.com/storage-transfer/docs/managing-on-prem-jobs#viewing-logs) for details.
type LoggingConfigResponse struct {
	// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
	EnableOnpremGcsTransferLogs bool `pulumi:"enableOnpremGcsTransferLogs"`
	// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActionStates []string `pulumi:"logActionStates"`
	// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
	LogActions []string `pulumi:"logActions"`
}

// Specifies the logging behavior for transfer operations. For cloud-to-cloud transfers, logs are sent to Cloud Logging. See [Read transfer logs](https://cloud.google.com/storage-transfer/docs/read-transfer-logs) for details. For transfers to or from a POSIX file system, logs are stored in the Cloud Storage bucket that is the source or sink of the transfer. See [Managing Transfer for on-premises jobs] (https://cloud.google.com/storage-transfer/docs/managing-on-prem-jobs#viewing-logs) for details.
type LoggingConfigResponseOutput struct{ *pulumi.OutputState }

func (LoggingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigResponse)(nil)).Elem()
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponseOutput() LoggingConfigResponseOutput {
	return o
}

func (o LoggingConfigResponseOutput) ToLoggingConfigResponseOutputWithContext(ctx context.Context) LoggingConfigResponseOutput {
	return o
}

// For transfers with a PosixFilesystem source, this option enables the Cloud Storage transfer logs for this transfer.
func (o LoggingConfigResponseOutput) EnableOnpremGcsTransferLogs() pulumi.BoolOutput {
	return o.ApplyT(func(v LoggingConfigResponse) bool { return v.EnableOnpremGcsTransferLogs }).(pulumi.BoolOutput)
}

// States in which `log_actions` are logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigResponseOutput) LogActionStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoggingConfigResponse) []string { return v.LogActionStates }).(pulumi.StringArrayOutput)
}

// Specifies the actions to be logged. If empty, no logs are generated. Not supported for transfers with PosixFilesystem data sources; use enable_onprem_gcs_transfer_logs instead.
func (o LoggingConfigResponseOutput) LogActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoggingConfigResponse) []string { return v.LogActions }).(pulumi.StringArrayOutput)
}

// Specifies the metadata options for running a transfer.
type MetadataOptions struct {
	// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
	Acl *MetadataOptionsAcl `pulumi:"acl"`
	// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Gid *MetadataOptionsGid `pulumi:"gid"`
	// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
	KmsKey *MetadataOptionsKmsKey `pulumi:"kmsKey"`
	// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Mode *MetadataOptionsMode `pulumi:"mode"`
	// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
	StorageClass *MetadataOptionsStorageClass `pulumi:"storageClass"`
	// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Symlink *MetadataOptionsSymlink `pulumi:"symlink"`
	// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
	TemporaryHold *MetadataOptionsTemporaryHold `pulumi:"temporaryHold"`
	// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
	TimeCreated *MetadataOptionsTimeCreated `pulumi:"timeCreated"`
	// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Uid *MetadataOptionsUid `pulumi:"uid"`
}

// MetadataOptionsInput is an input type that accepts MetadataOptionsArgs and MetadataOptionsOutput values.
// You can construct a concrete instance of `MetadataOptionsInput` via:
//
//	MetadataOptionsArgs{...}
type MetadataOptionsInput interface {
	pulumi.Input

	ToMetadataOptionsOutput() MetadataOptionsOutput
	ToMetadataOptionsOutputWithContext(context.Context) MetadataOptionsOutput
}

// Specifies the metadata options for running a transfer.
type MetadataOptionsArgs struct {
	// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
	Acl MetadataOptionsAclPtrInput `pulumi:"acl"`
	// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Gid MetadataOptionsGidPtrInput `pulumi:"gid"`
	// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
	KmsKey MetadataOptionsKmsKeyPtrInput `pulumi:"kmsKey"`
	// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Mode MetadataOptionsModePtrInput `pulumi:"mode"`
	// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
	StorageClass MetadataOptionsStorageClassPtrInput `pulumi:"storageClass"`
	// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Symlink MetadataOptionsSymlinkPtrInput `pulumi:"symlink"`
	// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
	TemporaryHold MetadataOptionsTemporaryHoldPtrInput `pulumi:"temporaryHold"`
	// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
	TimeCreated MetadataOptionsTimeCreatedPtrInput `pulumi:"timeCreated"`
	// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Uid MetadataOptionsUidPtrInput `pulumi:"uid"`
}

func (MetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataOptions)(nil)).Elem()
}

func (i MetadataOptionsArgs) ToMetadataOptionsOutput() MetadataOptionsOutput {
	return i.ToMetadataOptionsOutputWithContext(context.Background())
}

func (i MetadataOptionsArgs) ToMetadataOptionsOutputWithContext(ctx context.Context) MetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataOptionsOutput)
}

func (i MetadataOptionsArgs) ToMetadataOptionsPtrOutput() MetadataOptionsPtrOutput {
	return i.ToMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i MetadataOptionsArgs) ToMetadataOptionsPtrOutputWithContext(ctx context.Context) MetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataOptionsOutput).ToMetadataOptionsPtrOutputWithContext(ctx)
}

// MetadataOptionsPtrInput is an input type that accepts MetadataOptionsArgs, MetadataOptionsPtr and MetadataOptionsPtrOutput values.
// You can construct a concrete instance of `MetadataOptionsPtrInput` via:
//
//	        MetadataOptionsArgs{...}
//
//	or:
//
//	        nil
type MetadataOptionsPtrInput interface {
	pulumi.Input

	ToMetadataOptionsPtrOutput() MetadataOptionsPtrOutput
	ToMetadataOptionsPtrOutputWithContext(context.Context) MetadataOptionsPtrOutput
}

type metadataOptionsPtrType MetadataOptionsArgs

func MetadataOptionsPtr(v *MetadataOptionsArgs) MetadataOptionsPtrInput {
	return (*metadataOptionsPtrType)(v)
}

func (*metadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataOptions)(nil)).Elem()
}

func (i *metadataOptionsPtrType) ToMetadataOptionsPtrOutput() MetadataOptionsPtrOutput {
	return i.ToMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *metadataOptionsPtrType) ToMetadataOptionsPtrOutputWithContext(ctx context.Context) MetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataOptionsPtrOutput)
}

// Specifies the metadata options for running a transfer.
type MetadataOptionsOutput struct{ *pulumi.OutputState }

func (MetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataOptions)(nil)).Elem()
}

func (o MetadataOptionsOutput) ToMetadataOptionsOutput() MetadataOptionsOutput {
	return o
}

func (o MetadataOptionsOutput) ToMetadataOptionsOutputWithContext(ctx context.Context) MetadataOptionsOutput {
	return o
}

func (o MetadataOptionsOutput) ToMetadataOptionsPtrOutput() MetadataOptionsPtrOutput {
	return o.ToMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o MetadataOptionsOutput) ToMetadataOptionsPtrOutputWithContext(ctx context.Context) MetadataOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataOptions) *MetadataOptions {
		return &v
	}).(MetadataOptionsPtrOutput)
}

// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsOutput) Acl() MetadataOptionsAclPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsAcl { return v.Acl }).(MetadataOptionsAclPtrOutput)
}

// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsOutput) Gid() MetadataOptionsGidPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsGid { return v.Gid }).(MetadataOptionsGidPtrOutput)
}

// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsOutput) KmsKey() MetadataOptionsKmsKeyPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsKmsKey { return v.KmsKey }).(MetadataOptionsKmsKeyPtrOutput)
}

// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsOutput) Mode() MetadataOptionsModePtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsMode { return v.Mode }).(MetadataOptionsModePtrOutput)
}

// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsOutput) StorageClass() MetadataOptionsStorageClassPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsStorageClass { return v.StorageClass }).(MetadataOptionsStorageClassPtrOutput)
}

// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsOutput) Symlink() MetadataOptionsSymlinkPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsSymlink { return v.Symlink }).(MetadataOptionsSymlinkPtrOutput)
}

// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
func (o MetadataOptionsOutput) TemporaryHold() MetadataOptionsTemporaryHoldPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsTemporaryHold { return v.TemporaryHold }).(MetadataOptionsTemporaryHoldPtrOutput)
}

// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
func (o MetadataOptionsOutput) TimeCreated() MetadataOptionsTimeCreatedPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsTimeCreated { return v.TimeCreated }).(MetadataOptionsTimeCreatedPtrOutput)
}

// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsOutput) Uid() MetadataOptionsUidPtrOutput {
	return o.ApplyT(func(v MetadataOptions) *MetadataOptionsUid { return v.Uid }).(MetadataOptionsUidPtrOutput)
}

type MetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (MetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataOptions)(nil)).Elem()
}

func (o MetadataOptionsPtrOutput) ToMetadataOptionsPtrOutput() MetadataOptionsPtrOutput {
	return o
}

func (o MetadataOptionsPtrOutput) ToMetadataOptionsPtrOutputWithContext(ctx context.Context) MetadataOptionsPtrOutput {
	return o
}

func (o MetadataOptionsPtrOutput) Elem() MetadataOptionsOutput {
	return o.ApplyT(func(v *MetadataOptions) MetadataOptions {
		if v != nil {
			return *v
		}
		var ret MetadataOptions
		return ret
	}).(MetadataOptionsOutput)
}

// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsPtrOutput) Acl() MetadataOptionsAclPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsAcl {
		if v == nil {
			return nil
		}
		return v.Acl
	}).(MetadataOptionsAclPtrOutput)
}

// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsPtrOutput) Gid() MetadataOptionsGidPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsGid {
		if v == nil {
			return nil
		}
		return v.Gid
	}).(MetadataOptionsGidPtrOutput)
}

// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsPtrOutput) KmsKey() MetadataOptionsKmsKeyPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsKmsKey {
		if v == nil {
			return nil
		}
		return v.KmsKey
	}).(MetadataOptionsKmsKeyPtrOutput)
}

// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsPtrOutput) Mode() MetadataOptionsModePtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsMode {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(MetadataOptionsModePtrOutput)
}

// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsPtrOutput) StorageClass() MetadataOptionsStorageClassPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsStorageClass {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(MetadataOptionsStorageClassPtrOutput)
}

// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsPtrOutput) Symlink() MetadataOptionsSymlinkPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsSymlink {
		if v == nil {
			return nil
		}
		return v.Symlink
	}).(MetadataOptionsSymlinkPtrOutput)
}

// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
func (o MetadataOptionsPtrOutput) TemporaryHold() MetadataOptionsTemporaryHoldPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsTemporaryHold {
		if v == nil {
			return nil
		}
		return v.TemporaryHold
	}).(MetadataOptionsTemporaryHoldPtrOutput)
}

// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
func (o MetadataOptionsPtrOutput) TimeCreated() MetadataOptionsTimeCreatedPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsTimeCreated {
		if v == nil {
			return nil
		}
		return v.TimeCreated
	}).(MetadataOptionsTimeCreatedPtrOutput)
}

// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsPtrOutput) Uid() MetadataOptionsUidPtrOutput {
	return o.ApplyT(func(v *MetadataOptions) *MetadataOptionsUid {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(MetadataOptionsUidPtrOutput)
}

// Specifies the metadata options for running a transfer.
type MetadataOptionsResponse struct {
	// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
	Acl string `pulumi:"acl"`
	// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Gid string `pulumi:"gid"`
	// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
	KmsKey string `pulumi:"kmsKey"`
	// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Mode string `pulumi:"mode"`
	// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
	StorageClass string `pulumi:"storageClass"`
	// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Symlink string `pulumi:"symlink"`
	// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
	TemporaryHold string `pulumi:"temporaryHold"`
	// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
	TimeCreated string `pulumi:"timeCreated"`
	// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
	Uid string `pulumi:"uid"`
}

// Specifies the metadata options for running a transfer.
type MetadataOptionsResponseOutput struct{ *pulumi.OutputState }

func (MetadataOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataOptionsResponse)(nil)).Elem()
}

func (o MetadataOptionsResponseOutput) ToMetadataOptionsResponseOutput() MetadataOptionsResponseOutput {
	return o
}

func (o MetadataOptionsResponseOutput) ToMetadataOptionsResponseOutputWithContext(ctx context.Context) MetadataOptionsResponseOutput {
	return o
}

// Specifies how each object's ACLs should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as ACL_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsResponseOutput) Acl() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.Acl }).(pulumi.StringOutput)
}

// Specifies how each file's POSIX group ID (GID) attribute should be handled by the transfer. By default, GID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsResponseOutput) Gid() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.Gid }).(pulumi.StringOutput)
}

// Specifies how each object's Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as KMS_KEY_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsResponseOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.KmsKey }).(pulumi.StringOutput)
}

// Specifies how each file's mode attribute should be handled by the transfer. By default, mode is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsResponseOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets. If unspecified, the default behavior is the same as STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT.
func (o MetadataOptionsResponseOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.StorageClass }).(pulumi.StringOutput)
}

// Specifies how symlinks should be handled by the transfer. By default, symlinks are not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsResponseOutput) Symlink() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.Symlink }).(pulumi.StringOutput)
}

// Specifies how each object's temporary hold status should be preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TEMPORARY_HOLD_PRESERVE.
func (o MetadataOptionsResponseOutput) TemporaryHold() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.TemporaryHold }).(pulumi.StringOutput)
}

// Specifies how each object's `timeCreated` metadata is preserved for transfers between Google Cloud Storage buckets. If unspecified, the default behavior is the same as TIME_CREATED_SKIP.
func (o MetadataOptionsResponseOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// Specifies how each file's POSIX user ID (UID) attribute should be handled by the transfer. By default, UID is not preserved. Only applicable to transfers involving POSIX file systems, and ignored for other transfers.
func (o MetadataOptionsResponseOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataOptionsResponse) string { return v.Uid }).(pulumi.StringOutput)
}

// Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `"eventType"`: one of the EventType values * `"payloadFormat"`: one of the PayloadFormat values * `"projectId"`: the project_id of the `TransferOperation` * `"transferJobName"`: the transfer_job_name of the `TransferOperation` * `"transferOperationName"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.
type NotificationConfig struct {
	// Event types for which a notification is desired. If empty, send notifications for all event types.
	EventTypes []NotificationConfigEventTypesItem `pulumi:"eventTypes"`
	// The desired format of the notification message payloads.
	PayloadFormat NotificationConfigPayloadFormat `pulumi:"payloadFormat"`
	// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
	PubsubTopic string `pulumi:"pubsubTopic"`
}

// NotificationConfigInput is an input type that accepts NotificationConfigArgs and NotificationConfigOutput values.
// You can construct a concrete instance of `NotificationConfigInput` via:
//
//	NotificationConfigArgs{...}
type NotificationConfigInput interface {
	pulumi.Input

	ToNotificationConfigOutput() NotificationConfigOutput
	ToNotificationConfigOutputWithContext(context.Context) NotificationConfigOutput
}

// Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `"eventType"`: one of the EventType values * `"payloadFormat"`: one of the PayloadFormat values * `"projectId"`: the project_id of the `TransferOperation` * `"transferJobName"`: the transfer_job_name of the `TransferOperation` * `"transferOperationName"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.
type NotificationConfigArgs struct {
	// Event types for which a notification is desired. If empty, send notifications for all event types.
	EventTypes NotificationConfigEventTypesItemArrayInput `pulumi:"eventTypes"`
	// The desired format of the notification message payloads.
	PayloadFormat NotificationConfigPayloadFormatInput `pulumi:"payloadFormat"`
	// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
	PubsubTopic pulumi.StringInput `pulumi:"pubsubTopic"`
}

func (NotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfig)(nil)).Elem()
}

func (i NotificationConfigArgs) ToNotificationConfigOutput() NotificationConfigOutput {
	return i.ToNotificationConfigOutputWithContext(context.Background())
}

func (i NotificationConfigArgs) ToNotificationConfigOutputWithContext(ctx context.Context) NotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigOutput)
}

func (i NotificationConfigArgs) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return i.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (i NotificationConfigArgs) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigOutput).ToNotificationConfigPtrOutputWithContext(ctx)
}

// NotificationConfigPtrInput is an input type that accepts NotificationConfigArgs, NotificationConfigPtr and NotificationConfigPtrOutput values.
// You can construct a concrete instance of `NotificationConfigPtrInput` via:
//
//	        NotificationConfigArgs{...}
//
//	or:
//
//	        nil
type NotificationConfigPtrInput interface {
	pulumi.Input

	ToNotificationConfigPtrOutput() NotificationConfigPtrOutput
	ToNotificationConfigPtrOutputWithContext(context.Context) NotificationConfigPtrOutput
}

type notificationConfigPtrType NotificationConfigArgs

func NotificationConfigPtr(v *NotificationConfigArgs) NotificationConfigPtrInput {
	return (*notificationConfigPtrType)(v)
}

func (*notificationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfig)(nil)).Elem()
}

func (i *notificationConfigPtrType) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return i.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (i *notificationConfigPtrType) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigPtrOutput)
}

// Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `"eventType"`: one of the EventType values * `"payloadFormat"`: one of the PayloadFormat values * `"projectId"`: the project_id of the `TransferOperation` * `"transferJobName"`: the transfer_job_name of the `TransferOperation` * `"transferOperationName"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.
type NotificationConfigOutput struct{ *pulumi.OutputState }

func (NotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfig)(nil)).Elem()
}

func (o NotificationConfigOutput) ToNotificationConfigOutput() NotificationConfigOutput {
	return o
}

func (o NotificationConfigOutput) ToNotificationConfigOutputWithContext(ctx context.Context) NotificationConfigOutput {
	return o
}

func (o NotificationConfigOutput) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return o.ToNotificationConfigPtrOutputWithContext(context.Background())
}

func (o NotificationConfigOutput) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationConfig) *NotificationConfig {
		return &v
	}).(NotificationConfigPtrOutput)
}

// Event types for which a notification is desired. If empty, send notifications for all event types.
func (o NotificationConfigOutput) EventTypes() NotificationConfigEventTypesItemArrayOutput {
	return o.ApplyT(func(v NotificationConfig) []NotificationConfigEventTypesItem { return v.EventTypes }).(NotificationConfigEventTypesItemArrayOutput)
}

// The desired format of the notification message payloads.
func (o NotificationConfigOutput) PayloadFormat() NotificationConfigPayloadFormatOutput {
	return o.ApplyT(func(v NotificationConfig) NotificationConfigPayloadFormat { return v.PayloadFormat }).(NotificationConfigPayloadFormatOutput)
}

// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
func (o NotificationConfigOutput) PubsubTopic() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfig) string { return v.PubsubTopic }).(pulumi.StringOutput)
}

type NotificationConfigPtrOutput struct{ *pulumi.OutputState }

func (NotificationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationConfig)(nil)).Elem()
}

func (o NotificationConfigPtrOutput) ToNotificationConfigPtrOutput() NotificationConfigPtrOutput {
	return o
}

func (o NotificationConfigPtrOutput) ToNotificationConfigPtrOutputWithContext(ctx context.Context) NotificationConfigPtrOutput {
	return o
}

func (o NotificationConfigPtrOutput) Elem() NotificationConfigOutput {
	return o.ApplyT(func(v *NotificationConfig) NotificationConfig {
		if v != nil {
			return *v
		}
		var ret NotificationConfig
		return ret
	}).(NotificationConfigOutput)
}

// Event types for which a notification is desired. If empty, send notifications for all event types.
func (o NotificationConfigPtrOutput) EventTypes() NotificationConfigEventTypesItemArrayOutput {
	return o.ApplyT(func(v *NotificationConfig) []NotificationConfigEventTypesItem {
		if v == nil {
			return nil
		}
		return v.EventTypes
	}).(NotificationConfigEventTypesItemArrayOutput)
}

// The desired format of the notification message payloads.
func (o NotificationConfigPtrOutput) PayloadFormat() NotificationConfigPayloadFormatPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *NotificationConfigPayloadFormat {
		if v == nil {
			return nil
		}
		return &v.PayloadFormat
	}).(NotificationConfigPayloadFormatPtrOutput)
}

// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
func (o NotificationConfigPtrOutput) PubsubTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PubsubTopic
	}).(pulumi.StringPtrOutput)
}

// Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `"eventType"`: one of the EventType values * `"payloadFormat"`: one of the PayloadFormat values * `"projectId"`: the project_id of the `TransferOperation` * `"transferJobName"`: the transfer_job_name of the `TransferOperation` * `"transferOperationName"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.
type NotificationConfigResponse struct {
	// Event types for which a notification is desired. If empty, send notifications for all event types.
	EventTypes []string `pulumi:"eventTypes"`
	// The desired format of the notification message payloads.
	PayloadFormat string `pulumi:"payloadFormat"`
	// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
	PubsubTopic string `pulumi:"pubsubTopic"`
}

// Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `"eventType"`: one of the EventType values * `"payloadFormat"`: one of the PayloadFormat values * `"projectId"`: the project_id of the `TransferOperation` * `"transferJobName"`: the transfer_job_name of the `TransferOperation` * `"transferOperationName"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.
type NotificationConfigResponseOutput struct{ *pulumi.OutputState }

func (NotificationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationConfigResponse)(nil)).Elem()
}

func (o NotificationConfigResponseOutput) ToNotificationConfigResponseOutput() NotificationConfigResponseOutput {
	return o
}

func (o NotificationConfigResponseOutput) ToNotificationConfigResponseOutputWithContext(ctx context.Context) NotificationConfigResponseOutput {
	return o
}

// Event types for which a notification is desired. If empty, send notifications for all event types.
func (o NotificationConfigResponseOutput) EventTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationConfigResponse) []string { return v.EventTypes }).(pulumi.StringArrayOutput)
}

// The desired format of the notification message payloads.
func (o NotificationConfigResponseOutput) PayloadFormat() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfigResponse) string { return v.PayloadFormat }).(pulumi.StringOutput)
}

// The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.
func (o NotificationConfigResponseOutput) PubsubTopic() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationConfigResponse) string { return v.PubsubTopic }).(pulumi.StringOutput)
}

// Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The "last modification time" refers to the time of the last change to the object's content or metadata — specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.
type ObjectConditions struct {
	// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
	LastModifiedBefore *string `pulumi:"lastModifiedBefore"`
	// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
	LastModifiedSince *string `pulumi:"lastModifiedSince"`
	// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MaxTimeElapsedSinceLastModification *string `pulumi:"maxTimeElapsedSinceLastModification"`
	// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MinTimeElapsedSinceLastModification *string `pulumi:"minTimeElapsedSinceLastModification"`
}

// ObjectConditionsInput is an input type that accepts ObjectConditionsArgs and ObjectConditionsOutput values.
// You can construct a concrete instance of `ObjectConditionsInput` via:
//
//	ObjectConditionsArgs{...}
type ObjectConditionsInput interface {
	pulumi.Input

	ToObjectConditionsOutput() ObjectConditionsOutput
	ToObjectConditionsOutputWithContext(context.Context) ObjectConditionsOutput
}

// Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The "last modification time" refers to the time of the last change to the object's content or metadata — specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.
type ObjectConditionsArgs struct {
	// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	ExcludePrefixes pulumi.StringArrayInput `pulumi:"excludePrefixes"`
	// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	IncludePrefixes pulumi.StringArrayInput `pulumi:"includePrefixes"`
	// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
	LastModifiedBefore pulumi.StringPtrInput `pulumi:"lastModifiedBefore"`
	// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
	LastModifiedSince pulumi.StringPtrInput `pulumi:"lastModifiedSince"`
	// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MaxTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"maxTimeElapsedSinceLastModification"`
	// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MinTimeElapsedSinceLastModification pulumi.StringPtrInput `pulumi:"minTimeElapsedSinceLastModification"`
}

func (ObjectConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectConditions)(nil)).Elem()
}

func (i ObjectConditionsArgs) ToObjectConditionsOutput() ObjectConditionsOutput {
	return i.ToObjectConditionsOutputWithContext(context.Background())
}

func (i ObjectConditionsArgs) ToObjectConditionsOutputWithContext(ctx context.Context) ObjectConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectConditionsOutput)
}

func (i ObjectConditionsArgs) ToObjectConditionsPtrOutput() ObjectConditionsPtrOutput {
	return i.ToObjectConditionsPtrOutputWithContext(context.Background())
}

func (i ObjectConditionsArgs) ToObjectConditionsPtrOutputWithContext(ctx context.Context) ObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectConditionsOutput).ToObjectConditionsPtrOutputWithContext(ctx)
}

// ObjectConditionsPtrInput is an input type that accepts ObjectConditionsArgs, ObjectConditionsPtr and ObjectConditionsPtrOutput values.
// You can construct a concrete instance of `ObjectConditionsPtrInput` via:
//
//	        ObjectConditionsArgs{...}
//
//	or:
//
//	        nil
type ObjectConditionsPtrInput interface {
	pulumi.Input

	ToObjectConditionsPtrOutput() ObjectConditionsPtrOutput
	ToObjectConditionsPtrOutputWithContext(context.Context) ObjectConditionsPtrOutput
}

type objectConditionsPtrType ObjectConditionsArgs

func ObjectConditionsPtr(v *ObjectConditionsArgs) ObjectConditionsPtrInput {
	return (*objectConditionsPtrType)(v)
}

func (*objectConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectConditions)(nil)).Elem()
}

func (i *objectConditionsPtrType) ToObjectConditionsPtrOutput() ObjectConditionsPtrOutput {
	return i.ToObjectConditionsPtrOutputWithContext(context.Background())
}

func (i *objectConditionsPtrType) ToObjectConditionsPtrOutputWithContext(ctx context.Context) ObjectConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectConditionsPtrOutput)
}

// Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The "last modification time" refers to the time of the last change to the object's content or metadata — specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.
type ObjectConditionsOutput struct{ *pulumi.OutputState }

func (ObjectConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectConditions)(nil)).Elem()
}

func (o ObjectConditionsOutput) ToObjectConditionsOutput() ObjectConditionsOutput {
	return o
}

func (o ObjectConditionsOutput) ToObjectConditionsOutputWithContext(ctx context.Context) ObjectConditionsOutput {
	return o
}

func (o ObjectConditionsOutput) ToObjectConditionsPtrOutput() ObjectConditionsPtrOutput {
	return o.ToObjectConditionsPtrOutputWithContext(context.Background())
}

func (o ObjectConditionsOutput) ToObjectConditionsPtrOutputWithContext(ctx context.Context) ObjectConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectConditions) *ObjectConditions {
		return &v
	}).(ObjectConditionsPtrOutput)
}

// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectConditions) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectConditions) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
func (o ObjectConditionsOutput) LastModifiedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectConditions) *string { return v.LastModifiedBefore }).(pulumi.StringPtrOutput)
}

// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
func (o ObjectConditionsOutput) LastModifiedSince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectConditions) *string { return v.LastModifiedSince }).(pulumi.StringPtrOutput)
}

// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectConditions) *string { return v.MaxTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectConditions) *string { return v.MinTimeElapsedSinceLastModification }).(pulumi.StringPtrOutput)
}

type ObjectConditionsPtrOutput struct{ *pulumi.OutputState }

func (ObjectConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectConditions)(nil)).Elem()
}

func (o ObjectConditionsPtrOutput) ToObjectConditionsPtrOutput() ObjectConditionsPtrOutput {
	return o
}

func (o ObjectConditionsPtrOutput) ToObjectConditionsPtrOutputWithContext(ctx context.Context) ObjectConditionsPtrOutput {
	return o
}

func (o ObjectConditionsPtrOutput) Elem() ObjectConditionsOutput {
	return o.ApplyT(func(v *ObjectConditions) ObjectConditions {
		if v != nil {
			return *v
		}
		var ret ObjectConditions
		return ret
	}).(ObjectConditionsOutput)
}

// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsPtrOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectConditions) []string {
		if v == nil {
			return nil
		}
		return v.ExcludePrefixes
	}).(pulumi.StringArrayOutput)
}

// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsPtrOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ObjectConditions) []string {
		if v == nil {
			return nil
		}
		return v.IncludePrefixes
	}).(pulumi.StringArrayOutput)
}

// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
func (o ObjectConditionsPtrOutput) LastModifiedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBefore
	}).(pulumi.StringPtrOutput)
}

// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
func (o ObjectConditionsPtrOutput) LastModifiedSince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedSince
	}).(pulumi.StringPtrOutput)
}

// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsPtrOutput) MaxTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.MaxTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsPtrOutput) MinTimeElapsedSinceLastModification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectConditions) *string {
		if v == nil {
			return nil
		}
		return v.MinTimeElapsedSinceLastModification
	}).(pulumi.StringPtrOutput)
}

// Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The "last modification time" refers to the time of the last change to the object's content or metadata — specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.
type ObjectConditionsResponse struct {
	// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	ExcludePrefixes []string `pulumi:"excludePrefixes"`
	// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
	IncludePrefixes []string `pulumi:"includePrefixes"`
	// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
	LastModifiedBefore string `pulumi:"lastModifiedBefore"`
	// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
	LastModifiedSince string `pulumi:"lastModifiedSince"`
	// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MaxTimeElapsedSinceLastModification string `pulumi:"maxTimeElapsedSinceLastModification"`
	// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
	MinTimeElapsedSinceLastModification string `pulumi:"minTimeElapsedSinceLastModification"`
}

// Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The "last modification time" refers to the time of the last change to the object's content or metadata — specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.
type ObjectConditionsResponseOutput struct{ *pulumi.OutputState }

func (ObjectConditionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectConditionsResponse)(nil)).Elem()
}

func (o ObjectConditionsResponseOutput) ToObjectConditionsResponseOutput() ObjectConditionsResponseOutput {
	return o
}

func (o ObjectConditionsResponseOutput) ToObjectConditionsResponseOutputWithContext(ctx context.Context) ObjectConditionsResponseOutput {
	return o
}

// If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsResponseOutput) ExcludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) []string { return v.ExcludePrefixes }).(pulumi.StringArrayOutput)
}

// If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).
func (o ObjectConditionsResponseOutput) IncludePrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) []string { return v.IncludePrefixes }).(pulumi.StringArrayOutput)
}

// If specified, only objects with a "last modification time" before this timestamp and objects that don't have a "last modification time" are transferred.
func (o ObjectConditionsResponseOutput) LastModifiedBefore() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) string { return v.LastModifiedBefore }).(pulumi.StringOutput)
}

// If specified, only objects with a "last modification time" on or after this timestamp and objects that don't have a "last modification time" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day
func (o ObjectConditionsResponseOutput) LastModifiedSince() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) string { return v.LastModifiedSince }).(pulumi.StringOutput)
}

// Ensures that objects are not transferred if a specific maximum time has elapsed since the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation`and the "last modification time" of the object is less than the value of max_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsResponseOutput) MaxTimeElapsedSinceLastModification() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) string { return v.MaxTimeElapsedSinceLastModification }).(pulumi.StringOutput)
}

// Ensures that objects are not transferred until a specific minimum time has elapsed after the "last modification time". When a TransferOperation begins, objects with a "last modification time" are transferred only if the elapsed time between the start_time of the `TransferOperation` and the "last modification time" of the object is equal to or greater than the value of min_time_elapsed_since_last_modification`. Objects that do not have a "last modification time" are also transferred.
func (o ObjectConditionsResponseOutput) MinTimeElapsedSinceLastModification() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectConditionsResponse) string { return v.MinTimeElapsedSinceLastModification }).(pulumi.StringOutput)
}

// A POSIX filesystem resource.
type PosixFilesystem struct {
	// Root directory path to the filesystem.
	RootDirectory *string `pulumi:"rootDirectory"`
}

// PosixFilesystemInput is an input type that accepts PosixFilesystemArgs and PosixFilesystemOutput values.
// You can construct a concrete instance of `PosixFilesystemInput` via:
//
//	PosixFilesystemArgs{...}
type PosixFilesystemInput interface {
	pulumi.Input

	ToPosixFilesystemOutput() PosixFilesystemOutput
	ToPosixFilesystemOutputWithContext(context.Context) PosixFilesystemOutput
}

// A POSIX filesystem resource.
type PosixFilesystemArgs struct {
	// Root directory path to the filesystem.
	RootDirectory pulumi.StringPtrInput `pulumi:"rootDirectory"`
}

func (PosixFilesystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixFilesystem)(nil)).Elem()
}

func (i PosixFilesystemArgs) ToPosixFilesystemOutput() PosixFilesystemOutput {
	return i.ToPosixFilesystemOutputWithContext(context.Background())
}

func (i PosixFilesystemArgs) ToPosixFilesystemOutputWithContext(ctx context.Context) PosixFilesystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PosixFilesystemOutput)
}

func (i PosixFilesystemArgs) ToPosixFilesystemPtrOutput() PosixFilesystemPtrOutput {
	return i.ToPosixFilesystemPtrOutputWithContext(context.Background())
}

func (i PosixFilesystemArgs) ToPosixFilesystemPtrOutputWithContext(ctx context.Context) PosixFilesystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PosixFilesystemOutput).ToPosixFilesystemPtrOutputWithContext(ctx)
}

// PosixFilesystemPtrInput is an input type that accepts PosixFilesystemArgs, PosixFilesystemPtr and PosixFilesystemPtrOutput values.
// You can construct a concrete instance of `PosixFilesystemPtrInput` via:
//
//	        PosixFilesystemArgs{...}
//
//	or:
//
//	        nil
type PosixFilesystemPtrInput interface {
	pulumi.Input

	ToPosixFilesystemPtrOutput() PosixFilesystemPtrOutput
	ToPosixFilesystemPtrOutputWithContext(context.Context) PosixFilesystemPtrOutput
}

type posixFilesystemPtrType PosixFilesystemArgs

func PosixFilesystemPtr(v *PosixFilesystemArgs) PosixFilesystemPtrInput {
	return (*posixFilesystemPtrType)(v)
}

func (*posixFilesystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PosixFilesystem)(nil)).Elem()
}

func (i *posixFilesystemPtrType) ToPosixFilesystemPtrOutput() PosixFilesystemPtrOutput {
	return i.ToPosixFilesystemPtrOutputWithContext(context.Background())
}

func (i *posixFilesystemPtrType) ToPosixFilesystemPtrOutputWithContext(ctx context.Context) PosixFilesystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PosixFilesystemPtrOutput)
}

// A POSIX filesystem resource.
type PosixFilesystemOutput struct{ *pulumi.OutputState }

func (PosixFilesystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixFilesystem)(nil)).Elem()
}

func (o PosixFilesystemOutput) ToPosixFilesystemOutput() PosixFilesystemOutput {
	return o
}

func (o PosixFilesystemOutput) ToPosixFilesystemOutputWithContext(ctx context.Context) PosixFilesystemOutput {
	return o
}

func (o PosixFilesystemOutput) ToPosixFilesystemPtrOutput() PosixFilesystemPtrOutput {
	return o.ToPosixFilesystemPtrOutputWithContext(context.Background())
}

func (o PosixFilesystemOutput) ToPosixFilesystemPtrOutputWithContext(ctx context.Context) PosixFilesystemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PosixFilesystem) *PosixFilesystem {
		return &v
	}).(PosixFilesystemPtrOutput)
}

// Root directory path to the filesystem.
func (o PosixFilesystemOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PosixFilesystem) *string { return v.RootDirectory }).(pulumi.StringPtrOutput)
}

type PosixFilesystemPtrOutput struct{ *pulumi.OutputState }

func (PosixFilesystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PosixFilesystem)(nil)).Elem()
}

func (o PosixFilesystemPtrOutput) ToPosixFilesystemPtrOutput() PosixFilesystemPtrOutput {
	return o
}

func (o PosixFilesystemPtrOutput) ToPosixFilesystemPtrOutputWithContext(ctx context.Context) PosixFilesystemPtrOutput {
	return o
}

func (o PosixFilesystemPtrOutput) Elem() PosixFilesystemOutput {
	return o.ApplyT(func(v *PosixFilesystem) PosixFilesystem {
		if v != nil {
			return *v
		}
		var ret PosixFilesystem
		return ret
	}).(PosixFilesystemOutput)
}

// Root directory path to the filesystem.
func (o PosixFilesystemPtrOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PosixFilesystem) *string {
		if v == nil {
			return nil
		}
		return v.RootDirectory
	}).(pulumi.StringPtrOutput)
}

// A POSIX filesystem resource.
type PosixFilesystemResponse struct {
	// Root directory path to the filesystem.
	RootDirectory string `pulumi:"rootDirectory"`
}

// A POSIX filesystem resource.
type PosixFilesystemResponseOutput struct{ *pulumi.OutputState }

func (PosixFilesystemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PosixFilesystemResponse)(nil)).Elem()
}

func (o PosixFilesystemResponseOutput) ToPosixFilesystemResponseOutput() PosixFilesystemResponseOutput {
	return o
}

func (o PosixFilesystemResponseOutput) ToPosixFilesystemResponseOutputWithContext(ctx context.Context) PosixFilesystemResponseOutput {
	return o
}

// Root directory path to the filesystem.
func (o PosixFilesystemResponseOutput) RootDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v PosixFilesystemResponse) string { return v.RootDirectory }).(pulumi.StringOutput)
}

// S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
type S3CompatibleMetadata struct {
	// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
	AuthMethod *S3CompatibleMetadataAuthMethod `pulumi:"authMethod"`
	// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
	ListApi *S3CompatibleMetadataListApi `pulumi:"listApi"`
	// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
	Protocol *S3CompatibleMetadataProtocol `pulumi:"protocol"`
	// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
	RequestModel *S3CompatibleMetadataRequestModel `pulumi:"requestModel"`
}

// S3CompatibleMetadataInput is an input type that accepts S3CompatibleMetadataArgs and S3CompatibleMetadataOutput values.
// You can construct a concrete instance of `S3CompatibleMetadataInput` via:
//
//	S3CompatibleMetadataArgs{...}
type S3CompatibleMetadataInput interface {
	pulumi.Input

	ToS3CompatibleMetadataOutput() S3CompatibleMetadataOutput
	ToS3CompatibleMetadataOutputWithContext(context.Context) S3CompatibleMetadataOutput
}

// S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
type S3CompatibleMetadataArgs struct {
	// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
	AuthMethod S3CompatibleMetadataAuthMethodPtrInput `pulumi:"authMethod"`
	// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
	ListApi S3CompatibleMetadataListApiPtrInput `pulumi:"listApi"`
	// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
	Protocol S3CompatibleMetadataProtocolPtrInput `pulumi:"protocol"`
	// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
	RequestModel S3CompatibleMetadataRequestModelPtrInput `pulumi:"requestModel"`
}

func (S3CompatibleMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3CompatibleMetadata)(nil)).Elem()
}

func (i S3CompatibleMetadataArgs) ToS3CompatibleMetadataOutput() S3CompatibleMetadataOutput {
	return i.ToS3CompatibleMetadataOutputWithContext(context.Background())
}

func (i S3CompatibleMetadataArgs) ToS3CompatibleMetadataOutputWithContext(ctx context.Context) S3CompatibleMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3CompatibleMetadataOutput)
}

func (i S3CompatibleMetadataArgs) ToS3CompatibleMetadataPtrOutput() S3CompatibleMetadataPtrOutput {
	return i.ToS3CompatibleMetadataPtrOutputWithContext(context.Background())
}

func (i S3CompatibleMetadataArgs) ToS3CompatibleMetadataPtrOutputWithContext(ctx context.Context) S3CompatibleMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3CompatibleMetadataOutput).ToS3CompatibleMetadataPtrOutputWithContext(ctx)
}

// S3CompatibleMetadataPtrInput is an input type that accepts S3CompatibleMetadataArgs, S3CompatibleMetadataPtr and S3CompatibleMetadataPtrOutput values.
// You can construct a concrete instance of `S3CompatibleMetadataPtrInput` via:
//
//	        S3CompatibleMetadataArgs{...}
//
//	or:
//
//	        nil
type S3CompatibleMetadataPtrInput interface {
	pulumi.Input

	ToS3CompatibleMetadataPtrOutput() S3CompatibleMetadataPtrOutput
	ToS3CompatibleMetadataPtrOutputWithContext(context.Context) S3CompatibleMetadataPtrOutput
}

type s3compatibleMetadataPtrType S3CompatibleMetadataArgs

func S3CompatibleMetadataPtr(v *S3CompatibleMetadataArgs) S3CompatibleMetadataPtrInput {
	return (*s3compatibleMetadataPtrType)(v)
}

func (*s3compatibleMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3CompatibleMetadata)(nil)).Elem()
}

func (i *s3compatibleMetadataPtrType) ToS3CompatibleMetadataPtrOutput() S3CompatibleMetadataPtrOutput {
	return i.ToS3CompatibleMetadataPtrOutputWithContext(context.Background())
}

func (i *s3compatibleMetadataPtrType) ToS3CompatibleMetadataPtrOutputWithContext(ctx context.Context) S3CompatibleMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3CompatibleMetadataPtrOutput)
}

// S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
type S3CompatibleMetadataOutput struct{ *pulumi.OutputState }

func (S3CompatibleMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3CompatibleMetadata)(nil)).Elem()
}

func (o S3CompatibleMetadataOutput) ToS3CompatibleMetadataOutput() S3CompatibleMetadataOutput {
	return o
}

func (o S3CompatibleMetadataOutput) ToS3CompatibleMetadataOutputWithContext(ctx context.Context) S3CompatibleMetadataOutput {
	return o
}

func (o S3CompatibleMetadataOutput) ToS3CompatibleMetadataPtrOutput() S3CompatibleMetadataPtrOutput {
	return o.ToS3CompatibleMetadataPtrOutputWithContext(context.Background())
}

func (o S3CompatibleMetadataOutput) ToS3CompatibleMetadataPtrOutputWithContext(ctx context.Context) S3CompatibleMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3CompatibleMetadata) *S3CompatibleMetadata {
		return &v
	}).(S3CompatibleMetadataPtrOutput)
}

// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
func (o S3CompatibleMetadataOutput) AuthMethod() S3CompatibleMetadataAuthMethodPtrOutput {
	return o.ApplyT(func(v S3CompatibleMetadata) *S3CompatibleMetadataAuthMethod { return v.AuthMethod }).(S3CompatibleMetadataAuthMethodPtrOutput)
}

// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
func (o S3CompatibleMetadataOutput) ListApi() S3CompatibleMetadataListApiPtrOutput {
	return o.ApplyT(func(v S3CompatibleMetadata) *S3CompatibleMetadataListApi { return v.ListApi }).(S3CompatibleMetadataListApiPtrOutput)
}

// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
func (o S3CompatibleMetadataOutput) Protocol() S3CompatibleMetadataProtocolPtrOutput {
	return o.ApplyT(func(v S3CompatibleMetadata) *S3CompatibleMetadataProtocol { return v.Protocol }).(S3CompatibleMetadataProtocolPtrOutput)
}

// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
func (o S3CompatibleMetadataOutput) RequestModel() S3CompatibleMetadataRequestModelPtrOutput {
	return o.ApplyT(func(v S3CompatibleMetadata) *S3CompatibleMetadataRequestModel { return v.RequestModel }).(S3CompatibleMetadataRequestModelPtrOutput)
}

type S3CompatibleMetadataPtrOutput struct{ *pulumi.OutputState }

func (S3CompatibleMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3CompatibleMetadata)(nil)).Elem()
}

func (o S3CompatibleMetadataPtrOutput) ToS3CompatibleMetadataPtrOutput() S3CompatibleMetadataPtrOutput {
	return o
}

func (o S3CompatibleMetadataPtrOutput) ToS3CompatibleMetadataPtrOutputWithContext(ctx context.Context) S3CompatibleMetadataPtrOutput {
	return o
}

func (o S3CompatibleMetadataPtrOutput) Elem() S3CompatibleMetadataOutput {
	return o.ApplyT(func(v *S3CompatibleMetadata) S3CompatibleMetadata {
		if v != nil {
			return *v
		}
		var ret S3CompatibleMetadata
		return ret
	}).(S3CompatibleMetadataOutput)
}

// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
func (o S3CompatibleMetadataPtrOutput) AuthMethod() S3CompatibleMetadataAuthMethodPtrOutput {
	return o.ApplyT(func(v *S3CompatibleMetadata) *S3CompatibleMetadataAuthMethod {
		if v == nil {
			return nil
		}
		return v.AuthMethod
	}).(S3CompatibleMetadataAuthMethodPtrOutput)
}

// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
func (o S3CompatibleMetadataPtrOutput) ListApi() S3CompatibleMetadataListApiPtrOutput {
	return o.ApplyT(func(v *S3CompatibleMetadata) *S3CompatibleMetadataListApi {
		if v == nil {
			return nil
		}
		return v.ListApi
	}).(S3CompatibleMetadataListApiPtrOutput)
}

// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
func (o S3CompatibleMetadataPtrOutput) Protocol() S3CompatibleMetadataProtocolPtrOutput {
	return o.ApplyT(func(v *S3CompatibleMetadata) *S3CompatibleMetadataProtocol {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(S3CompatibleMetadataProtocolPtrOutput)
}

// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
func (o S3CompatibleMetadataPtrOutput) RequestModel() S3CompatibleMetadataRequestModelPtrOutput {
	return o.ApplyT(func(v *S3CompatibleMetadata) *S3CompatibleMetadataRequestModel {
		if v == nil {
			return nil
		}
		return v.RequestModel
	}).(S3CompatibleMetadataRequestModelPtrOutput)
}

// S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
type S3CompatibleMetadataResponse struct {
	// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
	AuthMethod string `pulumi:"authMethod"`
	// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
	ListApi string `pulumi:"listApi"`
	// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
	Protocol string `pulumi:"protocol"`
	// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
	RequestModel string `pulumi:"requestModel"`
}

// S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
type S3CompatibleMetadataResponseOutput struct{ *pulumi.OutputState }

func (S3CompatibleMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3CompatibleMetadataResponse)(nil)).Elem()
}

func (o S3CompatibleMetadataResponseOutput) ToS3CompatibleMetadataResponseOutput() S3CompatibleMetadataResponseOutput {
	return o
}

func (o S3CompatibleMetadataResponseOutput) ToS3CompatibleMetadataResponseOutputWithContext(ctx context.Context) S3CompatibleMetadataResponseOutput {
	return o
}

// Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
func (o S3CompatibleMetadataResponseOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v S3CompatibleMetadataResponse) string { return v.AuthMethod }).(pulumi.StringOutput)
}

// The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
func (o S3CompatibleMetadataResponseOutput) ListApi() pulumi.StringOutput {
	return o.ApplyT(func(v S3CompatibleMetadataResponse) string { return v.ListApi }).(pulumi.StringOutput)
}

// Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
func (o S3CompatibleMetadataResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v S3CompatibleMetadataResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
func (o S3CompatibleMetadataResponseOutput) RequestModel() pulumi.StringOutput {
	return o.ApplyT(func(v S3CompatibleMetadataResponse) string { return v.RequestModel }).(pulumi.StringOutput)
}

// Transfers can be scheduled to recur or to run just once.
type Schedule struct {
	// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
	EndTimeOfDay *TimeOfDay `pulumi:"endTimeOfDay"`
	// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
	RepeatInterval *string `pulumi:"repeatInterval"`
	// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
	ScheduleEndDate *Date `pulumi:"scheduleEndDate"`
	// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
	ScheduleStartDate Date `pulumi:"scheduleStartDate"`
	// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
	StartTimeOfDay *TimeOfDay `pulumi:"startTimeOfDay"`
}

// ScheduleInput is an input type that accepts ScheduleArgs and ScheduleOutput values.
// You can construct a concrete instance of `ScheduleInput` via:
//
//	ScheduleArgs{...}
type ScheduleInput interface {
	pulumi.Input

	ToScheduleOutput() ScheduleOutput
	ToScheduleOutputWithContext(context.Context) ScheduleOutput
}

// Transfers can be scheduled to recur or to run just once.
type ScheduleArgs struct {
	// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
	EndTimeOfDay TimeOfDayPtrInput `pulumi:"endTimeOfDay"`
	// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
	RepeatInterval pulumi.StringPtrInput `pulumi:"repeatInterval"`
	// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
	ScheduleEndDate DatePtrInput `pulumi:"scheduleEndDate"`
	// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
	ScheduleStartDate DateInput `pulumi:"scheduleStartDate"`
	// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
	StartTimeOfDay TimeOfDayPtrInput `pulumi:"startTimeOfDay"`
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (i ScheduleArgs) ToScheduleOutput() ScheduleOutput {
	return i.ToScheduleOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput)
}

func (i ScheduleArgs) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput).ToSchedulePtrOutputWithContext(ctx)
}

// SchedulePtrInput is an input type that accepts ScheduleArgs, SchedulePtr and SchedulePtrOutput values.
// You can construct a concrete instance of `SchedulePtrInput` via:
//
//	        ScheduleArgs{...}
//
//	or:
//
//	        nil
type SchedulePtrInput interface {
	pulumi.Input

	ToSchedulePtrOutput() SchedulePtrOutput
	ToSchedulePtrOutputWithContext(context.Context) SchedulePtrOutput
}

type schedulePtrType ScheduleArgs

func SchedulePtr(v *ScheduleArgs) SchedulePtrInput {
	return (*schedulePtrType)(v)
}

func (*schedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (i *schedulePtrType) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i *schedulePtrType) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulePtrOutput)
}

// Transfers can be scheduled to recur or to run just once.
type ScheduleOutput struct{ *pulumi.OutputState }

func (ScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (o ScheduleOutput) ToScheduleOutput() ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o.ToSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduleOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Schedule) *Schedule {
		return &v
	}).(SchedulePtrOutput)
}

// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
func (o ScheduleOutput) EndTimeOfDay() TimeOfDayPtrOutput {
	return o.ApplyT(func(v Schedule) *TimeOfDay { return v.EndTimeOfDay }).(TimeOfDayPtrOutput)
}

// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
func (o ScheduleOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Schedule) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
func (o ScheduleOutput) ScheduleEndDate() DatePtrOutput {
	return o.ApplyT(func(v Schedule) *Date { return v.ScheduleEndDate }).(DatePtrOutput)
}

// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
func (o ScheduleOutput) ScheduleStartDate() DateOutput {
	return o.ApplyT(func(v Schedule) Date { return v.ScheduleStartDate }).(DateOutput)
}

// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
func (o ScheduleOutput) StartTimeOfDay() TimeOfDayPtrOutput {
	return o.ApplyT(func(v Schedule) *TimeOfDay { return v.StartTimeOfDay }).(TimeOfDayPtrOutput)
}

type SchedulePtrOutput struct{ *pulumi.OutputState }

func (SchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (o SchedulePtrOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) Elem() ScheduleOutput {
	return o.ApplyT(func(v *Schedule) Schedule {
		if v != nil {
			return *v
		}
		var ret Schedule
		return ret
	}).(ScheduleOutput)
}

// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
func (o SchedulePtrOutput) EndTimeOfDay() TimeOfDayPtrOutput {
	return o.ApplyT(func(v *Schedule) *TimeOfDay {
		if v == nil {
			return nil
		}
		return v.EndTimeOfDay
	}).(TimeOfDayPtrOutput)
}

// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
func (o SchedulePtrOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Schedule) *string {
		if v == nil {
			return nil
		}
		return v.RepeatInterval
	}).(pulumi.StringPtrOutput)
}

// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
func (o SchedulePtrOutput) ScheduleEndDate() DatePtrOutput {
	return o.ApplyT(func(v *Schedule) *Date {
		if v == nil {
			return nil
		}
		return v.ScheduleEndDate
	}).(DatePtrOutput)
}

// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
func (o SchedulePtrOutput) ScheduleStartDate() DatePtrOutput {
	return o.ApplyT(func(v *Schedule) *Date {
		if v == nil {
			return nil
		}
		return &v.ScheduleStartDate
	}).(DatePtrOutput)
}

// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
func (o SchedulePtrOutput) StartTimeOfDay() TimeOfDayPtrOutput {
	return o.ApplyT(func(v *Schedule) *TimeOfDay {
		if v == nil {
			return nil
		}
		return v.StartTimeOfDay
	}).(TimeOfDayPtrOutput)
}

// Transfers can be scheduled to recur or to run just once.
type ScheduleResponse struct {
	// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
	EndTimeOfDay TimeOfDayResponse `pulumi:"endTimeOfDay"`
	// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
	RepeatInterval string `pulumi:"repeatInterval"`
	// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
	ScheduleEndDate DateResponse `pulumi:"scheduleEndDate"`
	// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
	ScheduleStartDate DateResponse `pulumi:"scheduleStartDate"`
	// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
	StartTimeOfDay TimeOfDayResponse `pulumi:"startTimeOfDay"`
}

// Transfers can be scheduled to recur or to run just once.
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

// The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned.
func (o ScheduleResponseOutput) EndTimeOfDay() TimeOfDayResponseOutput {
	return o.ApplyT(func(v ScheduleResponse) TimeOfDayResponse { return v.EndTimeOfDay }).(TimeOfDayResponseOutput)
}

// Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
func (o ScheduleResponseOutput) RepeatInterval() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.RepeatInterval }).(pulumi.StringOutput)
}

// The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`.
func (o ScheduleResponseOutput) ScheduleEndDate() DateResponseOutput {
	return o.ApplyT(func(v ScheduleResponse) DateResponse { return v.ScheduleEndDate }).(DateResponseOutput)
}

// The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.
func (o ScheduleResponseOutput) ScheduleStartDate() DateResponseOutput {
	return o.ApplyT(func(v ScheduleResponse) DateResponse { return v.ScheduleStartDate }).(DateResponseOutput)
}

// The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.
func (o ScheduleResponseOutput) StartTimeOfDay() TimeOfDayResponseOutput {
	return o.ApplyT(func(v ScheduleResponse) TimeOfDayResponse { return v.StartTimeOfDay }).(TimeOfDayResponseOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type TimeOfDay struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours *int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes *int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos *int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds *int `pulumi:"seconds"`
}

// TimeOfDayInput is an input type that accepts TimeOfDayArgs and TimeOfDayOutput values.
// You can construct a concrete instance of `TimeOfDayInput` via:
//
//	TimeOfDayArgs{...}
type TimeOfDayInput interface {
	pulumi.Input

	ToTimeOfDayOutput() TimeOfDayOutput
	ToTimeOfDayOutputWithContext(context.Context) TimeOfDayOutput
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type TimeOfDayArgs struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos pulumi.IntPtrInput `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds pulumi.IntPtrInput `pulumi:"seconds"`
}

func (TimeOfDayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeOfDay)(nil)).Elem()
}

func (i TimeOfDayArgs) ToTimeOfDayOutput() TimeOfDayOutput {
	return i.ToTimeOfDayOutputWithContext(context.Background())
}

func (i TimeOfDayArgs) ToTimeOfDayOutputWithContext(ctx context.Context) TimeOfDayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOfDayOutput)
}

func (i TimeOfDayArgs) ToTimeOfDayPtrOutput() TimeOfDayPtrOutput {
	return i.ToTimeOfDayPtrOutputWithContext(context.Background())
}

func (i TimeOfDayArgs) ToTimeOfDayPtrOutputWithContext(ctx context.Context) TimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOfDayOutput).ToTimeOfDayPtrOutputWithContext(ctx)
}

// TimeOfDayPtrInput is an input type that accepts TimeOfDayArgs, TimeOfDayPtr and TimeOfDayPtrOutput values.
// You can construct a concrete instance of `TimeOfDayPtrInput` via:
//
//	        TimeOfDayArgs{...}
//
//	or:
//
//	        nil
type TimeOfDayPtrInput interface {
	pulumi.Input

	ToTimeOfDayPtrOutput() TimeOfDayPtrOutput
	ToTimeOfDayPtrOutputWithContext(context.Context) TimeOfDayPtrOutput
}

type timeOfDayPtrType TimeOfDayArgs

func TimeOfDayPtr(v *TimeOfDayArgs) TimeOfDayPtrInput {
	return (*timeOfDayPtrType)(v)
}

func (*timeOfDayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeOfDay)(nil)).Elem()
}

func (i *timeOfDayPtrType) ToTimeOfDayPtrOutput() TimeOfDayPtrOutput {
	return i.ToTimeOfDayPtrOutputWithContext(context.Background())
}

func (i *timeOfDayPtrType) ToTimeOfDayPtrOutputWithContext(ctx context.Context) TimeOfDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeOfDayPtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type TimeOfDayOutput struct{ *pulumi.OutputState }

func (TimeOfDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeOfDay)(nil)).Elem()
}

func (o TimeOfDayOutput) ToTimeOfDayOutput() TimeOfDayOutput {
	return o
}

func (o TimeOfDayOutput) ToTimeOfDayOutputWithContext(ctx context.Context) TimeOfDayOutput {
	return o
}

func (o TimeOfDayOutput) ToTimeOfDayPtrOutput() TimeOfDayPtrOutput {
	return o.ToTimeOfDayPtrOutputWithContext(context.Background())
}

func (o TimeOfDayOutput) ToTimeOfDayPtrOutputWithContext(ctx context.Context) TimeOfDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeOfDay) *TimeOfDay {
		return &v
	}).(TimeOfDayPtrOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o TimeOfDayOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeOfDay) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TimeOfDayOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeOfDay) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TimeOfDayOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeOfDay) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o TimeOfDayOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TimeOfDay) *int { return v.Seconds }).(pulumi.IntPtrOutput)
}

type TimeOfDayPtrOutput struct{ *pulumi.OutputState }

func (TimeOfDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeOfDay)(nil)).Elem()
}

func (o TimeOfDayPtrOutput) ToTimeOfDayPtrOutput() TimeOfDayPtrOutput {
	return o
}

func (o TimeOfDayPtrOutput) ToTimeOfDayPtrOutputWithContext(ctx context.Context) TimeOfDayPtrOutput {
	return o
}

func (o TimeOfDayPtrOutput) Elem() TimeOfDayOutput {
	return o.ApplyT(func(v *TimeOfDay) TimeOfDay {
		if v != nil {
			return *v
		}
		var ret TimeOfDay
		return ret
	}).(TimeOfDayOutput)
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o TimeOfDayPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TimeOfDayPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TimeOfDayPtrOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Nanos
	}).(pulumi.IntPtrOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o TimeOfDayPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TimeOfDay) *int {
		if v == nil {
			return nil
		}
		return v.Seconds
	}).(pulumi.IntPtrOutput)
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type TimeOfDayResponse struct {
	// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
	Hours int `pulumi:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int `pulumi:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	Nanos int `pulumi:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
	Seconds int `pulumi:"seconds"`
}

// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
type TimeOfDayResponseOutput struct{ *pulumi.OutputState }

func (TimeOfDayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeOfDayResponse)(nil)).Elem()
}

func (o TimeOfDayResponseOutput) ToTimeOfDayResponseOutput() TimeOfDayResponseOutput {
	return o
}

func (o TimeOfDayResponseOutput) ToTimeOfDayResponseOutputWithContext(ctx context.Context) TimeOfDayResponseOutput {
	return o
}

// Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
func (o TimeOfDayResponseOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v TimeOfDayResponse) int { return v.Hours }).(pulumi.IntOutput)
}

// Minutes of hour of day. Must be from 0 to 59.
func (o TimeOfDayResponseOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v TimeOfDayResponse) int { return v.Minutes }).(pulumi.IntOutput)
}

// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
func (o TimeOfDayResponseOutput) Nanos() pulumi.IntOutput {
	return o.ApplyT(func(v TimeOfDayResponse) int { return v.Nanos }).(pulumi.IntOutput)
}

// Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
func (o TimeOfDayResponseOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v TimeOfDayResponse) int { return v.Seconds }).(pulumi.IntOutput)
}

// Specifies where the manifest is located.
type TransferManifest struct {
	// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
	Location *string `pulumi:"location"`
}

// TransferManifestInput is an input type that accepts TransferManifestArgs and TransferManifestOutput values.
// You can construct a concrete instance of `TransferManifestInput` via:
//
//	TransferManifestArgs{...}
type TransferManifestInput interface {
	pulumi.Input

	ToTransferManifestOutput() TransferManifestOutput
	ToTransferManifestOutputWithContext(context.Context) TransferManifestOutput
}

// Specifies where the manifest is located.
type TransferManifestArgs struct {
	// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
	Location pulumi.StringPtrInput `pulumi:"location"`
}

func (TransferManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferManifest)(nil)).Elem()
}

func (i TransferManifestArgs) ToTransferManifestOutput() TransferManifestOutput {
	return i.ToTransferManifestOutputWithContext(context.Background())
}

func (i TransferManifestArgs) ToTransferManifestOutputWithContext(ctx context.Context) TransferManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferManifestOutput)
}

func (i TransferManifestArgs) ToTransferManifestPtrOutput() TransferManifestPtrOutput {
	return i.ToTransferManifestPtrOutputWithContext(context.Background())
}

func (i TransferManifestArgs) ToTransferManifestPtrOutputWithContext(ctx context.Context) TransferManifestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferManifestOutput).ToTransferManifestPtrOutputWithContext(ctx)
}

// TransferManifestPtrInput is an input type that accepts TransferManifestArgs, TransferManifestPtr and TransferManifestPtrOutput values.
// You can construct a concrete instance of `TransferManifestPtrInput` via:
//
//	        TransferManifestArgs{...}
//
//	or:
//
//	        nil
type TransferManifestPtrInput interface {
	pulumi.Input

	ToTransferManifestPtrOutput() TransferManifestPtrOutput
	ToTransferManifestPtrOutputWithContext(context.Context) TransferManifestPtrOutput
}

type transferManifestPtrType TransferManifestArgs

func TransferManifestPtr(v *TransferManifestArgs) TransferManifestPtrInput {
	return (*transferManifestPtrType)(v)
}

func (*transferManifestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferManifest)(nil)).Elem()
}

func (i *transferManifestPtrType) ToTransferManifestPtrOutput() TransferManifestPtrOutput {
	return i.ToTransferManifestPtrOutputWithContext(context.Background())
}

func (i *transferManifestPtrType) ToTransferManifestPtrOutputWithContext(ctx context.Context) TransferManifestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferManifestPtrOutput)
}

// Specifies where the manifest is located.
type TransferManifestOutput struct{ *pulumi.OutputState }

func (TransferManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferManifest)(nil)).Elem()
}

func (o TransferManifestOutput) ToTransferManifestOutput() TransferManifestOutput {
	return o
}

func (o TransferManifestOutput) ToTransferManifestOutputWithContext(ctx context.Context) TransferManifestOutput {
	return o
}

func (o TransferManifestOutput) ToTransferManifestPtrOutput() TransferManifestPtrOutput {
	return o.ToTransferManifestPtrOutputWithContext(context.Background())
}

func (o TransferManifestOutput) ToTransferManifestPtrOutputWithContext(ctx context.Context) TransferManifestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferManifest) *TransferManifest {
		return &v
	}).(TransferManifestPtrOutput)
}

// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
func (o TransferManifestOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferManifest) *string { return v.Location }).(pulumi.StringPtrOutput)
}

type TransferManifestPtrOutput struct{ *pulumi.OutputState }

func (TransferManifestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferManifest)(nil)).Elem()
}

func (o TransferManifestPtrOutput) ToTransferManifestPtrOutput() TransferManifestPtrOutput {
	return o
}

func (o TransferManifestPtrOutput) ToTransferManifestPtrOutputWithContext(ctx context.Context) TransferManifestPtrOutput {
	return o
}

func (o TransferManifestPtrOutput) Elem() TransferManifestOutput {
	return o.ApplyT(func(v *TransferManifest) TransferManifest {
		if v != nil {
			return *v
		}
		var ret TransferManifest
		return ret
	}).(TransferManifestOutput)
}

// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
func (o TransferManifestPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferManifest) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Specifies where the manifest is located.
type TransferManifestResponse struct {
	// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
	Location string `pulumi:"location"`
}

// Specifies where the manifest is located.
type TransferManifestResponseOutput struct{ *pulumi.OutputState }

func (TransferManifestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferManifestResponse)(nil)).Elem()
}

func (o TransferManifestResponseOutput) ToTransferManifestResponseOutput() TransferManifestResponseOutput {
	return o
}

func (o TransferManifestResponseOutput) ToTransferManifestResponseOutputWithContext(ctx context.Context) TransferManifestResponseOutput {
	return o
}

// Specifies the path to the manifest in Cloud Storage. The Google-managed service account for the transfer must have `storage.objects.get` permission for this object. An example path is `gs://bucket_name/path/manifest.csv`.
func (o TransferManifestResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v TransferManifestResponse) string { return v.Location }).(pulumi.StringOutput)
}

// TransferOptions define the actions to be performed on objects in a transfer.
type TransferOptions struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer *bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
	DeleteObjectsUniqueInSink *bool `pulumi:"deleteObjectsUniqueInSink"`
	// Represents the selected metadata options for a transfer job.
	MetadataOptions *MetadataOptions `pulumi:"metadataOptions"`
	// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
	OverwriteObjectsAlreadyExistingInSink *bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
	// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
	OverwriteWhen *TransferOptionsOverwriteWhen `pulumi:"overwriteWhen"`
}

// TransferOptionsInput is an input type that accepts TransferOptionsArgs and TransferOptionsOutput values.
// You can construct a concrete instance of `TransferOptionsInput` via:
//
//	TransferOptionsArgs{...}
type TransferOptionsInput interface {
	pulumi.Input

	ToTransferOptionsOutput() TransferOptionsOutput
	ToTransferOptionsOutputWithContext(context.Context) TransferOptionsOutput
}

// TransferOptions define the actions to be performed on objects in a transfer.
type TransferOptionsArgs struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer pulumi.BoolPtrInput `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
	DeleteObjectsUniqueInSink pulumi.BoolPtrInput `pulumi:"deleteObjectsUniqueInSink"`
	// Represents the selected metadata options for a transfer job.
	MetadataOptions MetadataOptionsPtrInput `pulumi:"metadataOptions"`
	// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
	OverwriteObjectsAlreadyExistingInSink pulumi.BoolPtrInput `pulumi:"overwriteObjectsAlreadyExistingInSink"`
	// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
	OverwriteWhen TransferOptionsOverwriteWhenPtrInput `pulumi:"overwriteWhen"`
}

func (TransferOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferOptions)(nil)).Elem()
}

func (i TransferOptionsArgs) ToTransferOptionsOutput() TransferOptionsOutput {
	return i.ToTransferOptionsOutputWithContext(context.Background())
}

func (i TransferOptionsArgs) ToTransferOptionsOutputWithContext(ctx context.Context) TransferOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferOptionsOutput)
}

func (i TransferOptionsArgs) ToTransferOptionsPtrOutput() TransferOptionsPtrOutput {
	return i.ToTransferOptionsPtrOutputWithContext(context.Background())
}

func (i TransferOptionsArgs) ToTransferOptionsPtrOutputWithContext(ctx context.Context) TransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferOptionsOutput).ToTransferOptionsPtrOutputWithContext(ctx)
}

// TransferOptionsPtrInput is an input type that accepts TransferOptionsArgs, TransferOptionsPtr and TransferOptionsPtrOutput values.
// You can construct a concrete instance of `TransferOptionsPtrInput` via:
//
//	        TransferOptionsArgs{...}
//
//	or:
//
//	        nil
type TransferOptionsPtrInput interface {
	pulumi.Input

	ToTransferOptionsPtrOutput() TransferOptionsPtrOutput
	ToTransferOptionsPtrOutputWithContext(context.Context) TransferOptionsPtrOutput
}

type transferOptionsPtrType TransferOptionsArgs

func TransferOptionsPtr(v *TransferOptionsArgs) TransferOptionsPtrInput {
	return (*transferOptionsPtrType)(v)
}

func (*transferOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferOptions)(nil)).Elem()
}

func (i *transferOptionsPtrType) ToTransferOptionsPtrOutput() TransferOptionsPtrOutput {
	return i.ToTransferOptionsPtrOutputWithContext(context.Background())
}

func (i *transferOptionsPtrType) ToTransferOptionsPtrOutputWithContext(ctx context.Context) TransferOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferOptionsPtrOutput)
}

// TransferOptions define the actions to be performed on objects in a transfer.
type TransferOptionsOutput struct{ *pulumi.OutputState }

func (TransferOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferOptions)(nil)).Elem()
}

func (o TransferOptionsOutput) ToTransferOptionsOutput() TransferOptionsOutput {
	return o
}

func (o TransferOptionsOutput) ToTransferOptionsOutputWithContext(ctx context.Context) TransferOptionsOutput {
	return o
}

func (o TransferOptionsOutput) ToTransferOptionsPtrOutput() TransferOptionsPtrOutput {
	return o.ToTransferOptionsPtrOutputWithContext(context.Background())
}

func (o TransferOptionsOutput) ToTransferOptionsPtrOutputWithContext(ctx context.Context) TransferOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferOptions) *TransferOptions {
		return &v
	}).(TransferOptionsPtrOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
func (o TransferOptionsOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferOptions) *bool { return v.DeleteObjectsFromSourceAfterTransfer }).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
func (o TransferOptionsOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferOptions) *bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolPtrOutput)
}

// Represents the selected metadata options for a transfer job.
func (o TransferOptionsOutput) MetadataOptions() MetadataOptionsPtrOutput {
	return o.ApplyT(func(v TransferOptions) *MetadataOptions { return v.MetadataOptions }).(MetadataOptionsPtrOutput)
}

// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
func (o TransferOptionsOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransferOptions) *bool { return v.OverwriteObjectsAlreadyExistingInSink }).(pulumi.BoolPtrOutput)
}

// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
func (o TransferOptionsOutput) OverwriteWhen() TransferOptionsOverwriteWhenPtrOutput {
	return o.ApplyT(func(v TransferOptions) *TransferOptionsOverwriteWhen { return v.OverwriteWhen }).(TransferOptionsOverwriteWhenPtrOutput)
}

type TransferOptionsPtrOutput struct{ *pulumi.OutputState }

func (TransferOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferOptions)(nil)).Elem()
}

func (o TransferOptionsPtrOutput) ToTransferOptionsPtrOutput() TransferOptionsPtrOutput {
	return o
}

func (o TransferOptionsPtrOutput) ToTransferOptionsPtrOutputWithContext(ctx context.Context) TransferOptionsPtrOutput {
	return o
}

func (o TransferOptionsPtrOutput) Elem() TransferOptionsOutput {
	return o.ApplyT(func(v *TransferOptions) TransferOptions {
		if v != nil {
			return *v
		}
		var ret TransferOptions
		return ret
	}).(TransferOptionsOutput)
}

// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
func (o TransferOptionsPtrOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteObjectsFromSourceAfterTransfer
	}).(pulumi.BoolPtrOutput)
}

// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
func (o TransferOptionsPtrOutput) DeleteObjectsUniqueInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteObjectsUniqueInSink
	}).(pulumi.BoolPtrOutput)
}

// Represents the selected metadata options for a transfer job.
func (o TransferOptionsPtrOutput) MetadataOptions() MetadataOptionsPtrOutput {
	return o.ApplyT(func(v *TransferOptions) *MetadataOptions {
		if v == nil {
			return nil
		}
		return v.MetadataOptions
	}).(MetadataOptionsPtrOutput)
}

// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
func (o TransferOptionsPtrOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransferOptions) *bool {
		if v == nil {
			return nil
		}
		return v.OverwriteObjectsAlreadyExistingInSink
	}).(pulumi.BoolPtrOutput)
}

// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
func (o TransferOptionsPtrOutput) OverwriteWhen() TransferOptionsOverwriteWhenPtrOutput {
	return o.ApplyT(func(v *TransferOptions) *TransferOptionsOverwriteWhen {
		if v == nil {
			return nil
		}
		return v.OverwriteWhen
	}).(TransferOptionsOverwriteWhenPtrOutput)
}

// TransferOptions define the actions to be performed on objects in a transfer.
type TransferOptionsResponse struct {
	// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
	DeleteObjectsFromSourceAfterTransfer bool `pulumi:"deleteObjectsFromSourceAfterTransfer"`
	// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
	DeleteObjectsUniqueInSink bool `pulumi:"deleteObjectsUniqueInSink"`
	// Represents the selected metadata options for a transfer job.
	MetadataOptions MetadataOptionsResponse `pulumi:"metadataOptions"`
	// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
	OverwriteObjectsAlreadyExistingInSink bool `pulumi:"overwriteObjectsAlreadyExistingInSink"`
	// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
	OverwriteWhen string `pulumi:"overwriteWhen"`
}

// TransferOptions define the actions to be performed on objects in a transfer.
type TransferOptionsResponseOutput struct{ *pulumi.OutputState }

func (TransferOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferOptionsResponse)(nil)).Elem()
}

func (o TransferOptionsResponseOutput) ToTransferOptionsResponseOutput() TransferOptionsResponseOutput {
	return o
}

func (o TransferOptionsResponseOutput) ToTransferOptionsResponseOutputWithContext(ctx context.Context) TransferOptionsResponseOutput {
	return o
}

// Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.
func (o TransferOptionsResponseOutput) DeleteObjectsFromSourceAfterTransfer() pulumi.BoolOutput {
	return o.ApplyT(func(v TransferOptionsResponse) bool { return v.DeleteObjectsFromSourceAfterTransfer }).(pulumi.BoolOutput)
}

// Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive.
func (o TransferOptionsResponseOutput) DeleteObjectsUniqueInSink() pulumi.BoolOutput {
	return o.ApplyT(func(v TransferOptionsResponse) bool { return v.DeleteObjectsUniqueInSink }).(pulumi.BoolOutput)
}

// Represents the selected metadata options for a transfer job.
func (o TransferOptionsResponseOutput) MetadataOptions() MetadataOptionsResponseOutput {
	return o.ApplyT(func(v TransferOptionsResponse) MetadataOptionsResponse { return v.MetadataOptions }).(MetadataOptionsResponseOutput)
}

// When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object.
func (o TransferOptionsResponseOutput) OverwriteObjectsAlreadyExistingInSink() pulumi.BoolOutput {
	return o.ApplyT(func(v TransferOptionsResponse) bool { return v.OverwriteObjectsAlreadyExistingInSink }).(pulumi.BoolOutput)
}

// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by overwrite_objects_already_existing_in_sink.
func (o TransferOptionsResponseOutput) OverwriteWhen() pulumi.StringOutput {
	return o.ApplyT(func(v TransferOptionsResponse) string { return v.OverwriteWhen }).(pulumi.StringOutput)
}

// Configuration for running a transfer.
type TransferSpec struct {
	// An AWS S3 compatible data source.
	AwsS3CompatibleDataSource *AwsS3CompatibleData `pulumi:"awsS3CompatibleDataSource"`
	// An AWS S3 data source.
	AwsS3DataSource *AwsS3Data `pulumi:"awsS3DataSource"`
	// An Azure Blob Storage data source.
	AzureBlobStorageDataSource *AzureBlobStorageData `pulumi:"azureBlobStorageDataSource"`
	// A Cloud Storage data sink.
	GcsDataSink *GcsData `pulumi:"gcsDataSink"`
	// A Cloud Storage data source.
	GcsDataSource *GcsData `pulumi:"gcsDataSource"`
	// Cloud Storage intermediate data location.
	GcsIntermediateDataLocation *GcsData `pulumi:"gcsIntermediateDataLocation"`
	// An HTTP URL data source.
	HttpDataSource *HttpData `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
	ObjectConditions *ObjectConditions `pulumi:"objectConditions"`
	// A POSIX Filesystem data sink.
	PosixDataSink *PosixFilesystem `pulumi:"posixDataSink"`
	// A POSIX Filesystem data source.
	PosixDataSource *PosixFilesystem `pulumi:"posixDataSource"`
	// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
	SinkAgentPoolName *string `pulumi:"sinkAgentPoolName"`
	// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
	SourceAgentPoolName *string `pulumi:"sourceAgentPoolName"`
	// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
	TransferManifest *TransferManifest `pulumi:"transferManifest"`
	// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
	TransferOptions *TransferOptions `pulumi:"transferOptions"`
}

// TransferSpecInput is an input type that accepts TransferSpecArgs and TransferSpecOutput values.
// You can construct a concrete instance of `TransferSpecInput` via:
//
//	TransferSpecArgs{...}
type TransferSpecInput interface {
	pulumi.Input

	ToTransferSpecOutput() TransferSpecOutput
	ToTransferSpecOutputWithContext(context.Context) TransferSpecOutput
}

// Configuration for running a transfer.
type TransferSpecArgs struct {
	// An AWS S3 compatible data source.
	AwsS3CompatibleDataSource AwsS3CompatibleDataPtrInput `pulumi:"awsS3CompatibleDataSource"`
	// An AWS S3 data source.
	AwsS3DataSource AwsS3DataPtrInput `pulumi:"awsS3DataSource"`
	// An Azure Blob Storage data source.
	AzureBlobStorageDataSource AzureBlobStorageDataPtrInput `pulumi:"azureBlobStorageDataSource"`
	// A Cloud Storage data sink.
	GcsDataSink GcsDataPtrInput `pulumi:"gcsDataSink"`
	// A Cloud Storage data source.
	GcsDataSource GcsDataPtrInput `pulumi:"gcsDataSource"`
	// Cloud Storage intermediate data location.
	GcsIntermediateDataLocation GcsDataPtrInput `pulumi:"gcsIntermediateDataLocation"`
	// An HTTP URL data source.
	HttpDataSource HttpDataPtrInput `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
	ObjectConditions ObjectConditionsPtrInput `pulumi:"objectConditions"`
	// A POSIX Filesystem data sink.
	PosixDataSink PosixFilesystemPtrInput `pulumi:"posixDataSink"`
	// A POSIX Filesystem data source.
	PosixDataSource PosixFilesystemPtrInput `pulumi:"posixDataSource"`
	// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
	SinkAgentPoolName pulumi.StringPtrInput `pulumi:"sinkAgentPoolName"`
	// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
	SourceAgentPoolName pulumi.StringPtrInput `pulumi:"sourceAgentPoolName"`
	// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
	TransferManifest TransferManifestPtrInput `pulumi:"transferManifest"`
	// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
	TransferOptions TransferOptionsPtrInput `pulumi:"transferOptions"`
}

func (TransferSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferSpec)(nil)).Elem()
}

func (i TransferSpecArgs) ToTransferSpecOutput() TransferSpecOutput {
	return i.ToTransferSpecOutputWithContext(context.Background())
}

func (i TransferSpecArgs) ToTransferSpecOutputWithContext(ctx context.Context) TransferSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferSpecOutput)
}

func (i TransferSpecArgs) ToTransferSpecPtrOutput() TransferSpecPtrOutput {
	return i.ToTransferSpecPtrOutputWithContext(context.Background())
}

func (i TransferSpecArgs) ToTransferSpecPtrOutputWithContext(ctx context.Context) TransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferSpecOutput).ToTransferSpecPtrOutputWithContext(ctx)
}

// TransferSpecPtrInput is an input type that accepts TransferSpecArgs, TransferSpecPtr and TransferSpecPtrOutput values.
// You can construct a concrete instance of `TransferSpecPtrInput` via:
//
//	        TransferSpecArgs{...}
//
//	or:
//
//	        nil
type TransferSpecPtrInput interface {
	pulumi.Input

	ToTransferSpecPtrOutput() TransferSpecPtrOutput
	ToTransferSpecPtrOutputWithContext(context.Context) TransferSpecPtrOutput
}

type transferSpecPtrType TransferSpecArgs

func TransferSpecPtr(v *TransferSpecArgs) TransferSpecPtrInput {
	return (*transferSpecPtrType)(v)
}

func (*transferSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferSpec)(nil)).Elem()
}

func (i *transferSpecPtrType) ToTransferSpecPtrOutput() TransferSpecPtrOutput {
	return i.ToTransferSpecPtrOutputWithContext(context.Background())
}

func (i *transferSpecPtrType) ToTransferSpecPtrOutputWithContext(ctx context.Context) TransferSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransferSpecPtrOutput)
}

// Configuration for running a transfer.
type TransferSpecOutput struct{ *pulumi.OutputState }

func (TransferSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferSpec)(nil)).Elem()
}

func (o TransferSpecOutput) ToTransferSpecOutput() TransferSpecOutput {
	return o
}

func (o TransferSpecOutput) ToTransferSpecOutputWithContext(ctx context.Context) TransferSpecOutput {
	return o
}

func (o TransferSpecOutput) ToTransferSpecPtrOutput() TransferSpecPtrOutput {
	return o.ToTransferSpecPtrOutputWithContext(context.Background())
}

func (o TransferSpecOutput) ToTransferSpecPtrOutputWithContext(ctx context.Context) TransferSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferSpec) *TransferSpec {
		return &v
	}).(TransferSpecPtrOutput)
}

// An AWS S3 compatible data source.
func (o TransferSpecOutput) AwsS3CompatibleDataSource() AwsS3CompatibleDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *AwsS3CompatibleData { return v.AwsS3CompatibleDataSource }).(AwsS3CompatibleDataPtrOutput)
}

// An AWS S3 data source.
func (o TransferSpecOutput) AwsS3DataSource() AwsS3DataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *AwsS3Data { return v.AwsS3DataSource }).(AwsS3DataPtrOutput)
}

// An Azure Blob Storage data source.
func (o TransferSpecOutput) AzureBlobStorageDataSource() AzureBlobStorageDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *AzureBlobStorageData { return v.AzureBlobStorageDataSource }).(AzureBlobStorageDataPtrOutput)
}

// A Cloud Storage data sink.
func (o TransferSpecOutput) GcsDataSink() GcsDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *GcsData { return v.GcsDataSink }).(GcsDataPtrOutput)
}

// A Cloud Storage data source.
func (o TransferSpecOutput) GcsDataSource() GcsDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *GcsData { return v.GcsDataSource }).(GcsDataPtrOutput)
}

// Cloud Storage intermediate data location.
func (o TransferSpecOutput) GcsIntermediateDataLocation() GcsDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *GcsData { return v.GcsIntermediateDataLocation }).(GcsDataPtrOutput)
}

// An HTTP URL data source.
func (o TransferSpecOutput) HttpDataSource() HttpDataPtrOutput {
	return o.ApplyT(func(v TransferSpec) *HttpData { return v.HttpDataSource }).(HttpDataPtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
func (o TransferSpecOutput) ObjectConditions() ObjectConditionsPtrOutput {
	return o.ApplyT(func(v TransferSpec) *ObjectConditions { return v.ObjectConditions }).(ObjectConditionsPtrOutput)
}

// A POSIX Filesystem data sink.
func (o TransferSpecOutput) PosixDataSink() PosixFilesystemPtrOutput {
	return o.ApplyT(func(v TransferSpec) *PosixFilesystem { return v.PosixDataSink }).(PosixFilesystemPtrOutput)
}

// A POSIX Filesystem data source.
func (o TransferSpecOutput) PosixDataSource() PosixFilesystemPtrOutput {
	return o.ApplyT(func(v TransferSpec) *PosixFilesystem { return v.PosixDataSource }).(PosixFilesystemPtrOutput)
}

// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
func (o TransferSpecOutput) SinkAgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferSpec) *string { return v.SinkAgentPoolName }).(pulumi.StringPtrOutput)
}

// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
func (o TransferSpecOutput) SourceAgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransferSpec) *string { return v.SourceAgentPoolName }).(pulumi.StringPtrOutput)
}

// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
func (o TransferSpecOutput) TransferManifest() TransferManifestPtrOutput {
	return o.ApplyT(func(v TransferSpec) *TransferManifest { return v.TransferManifest }).(TransferManifestPtrOutput)
}

// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
func (o TransferSpecOutput) TransferOptions() TransferOptionsPtrOutput {
	return o.ApplyT(func(v TransferSpec) *TransferOptions { return v.TransferOptions }).(TransferOptionsPtrOutput)
}

type TransferSpecPtrOutput struct{ *pulumi.OutputState }

func (TransferSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferSpec)(nil)).Elem()
}

func (o TransferSpecPtrOutput) ToTransferSpecPtrOutput() TransferSpecPtrOutput {
	return o
}

func (o TransferSpecPtrOutput) ToTransferSpecPtrOutputWithContext(ctx context.Context) TransferSpecPtrOutput {
	return o
}

func (o TransferSpecPtrOutput) Elem() TransferSpecOutput {
	return o.ApplyT(func(v *TransferSpec) TransferSpec {
		if v != nil {
			return *v
		}
		var ret TransferSpec
		return ret
	}).(TransferSpecOutput)
}

// An AWS S3 compatible data source.
func (o TransferSpecPtrOutput) AwsS3CompatibleDataSource() AwsS3CompatibleDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *AwsS3CompatibleData {
		if v == nil {
			return nil
		}
		return v.AwsS3CompatibleDataSource
	}).(AwsS3CompatibleDataPtrOutput)
}

// An AWS S3 data source.
func (o TransferSpecPtrOutput) AwsS3DataSource() AwsS3DataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *AwsS3Data {
		if v == nil {
			return nil
		}
		return v.AwsS3DataSource
	}).(AwsS3DataPtrOutput)
}

// An Azure Blob Storage data source.
func (o TransferSpecPtrOutput) AzureBlobStorageDataSource() AzureBlobStorageDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *AzureBlobStorageData {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorageDataSource
	}).(AzureBlobStorageDataPtrOutput)
}

// A Cloud Storage data sink.
func (o TransferSpecPtrOutput) GcsDataSink() GcsDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *GcsData {
		if v == nil {
			return nil
		}
		return v.GcsDataSink
	}).(GcsDataPtrOutput)
}

// A Cloud Storage data source.
func (o TransferSpecPtrOutput) GcsDataSource() GcsDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *GcsData {
		if v == nil {
			return nil
		}
		return v.GcsDataSource
	}).(GcsDataPtrOutput)
}

// Cloud Storage intermediate data location.
func (o TransferSpecPtrOutput) GcsIntermediateDataLocation() GcsDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *GcsData {
		if v == nil {
			return nil
		}
		return v.GcsIntermediateDataLocation
	}).(GcsDataPtrOutput)
}

// An HTTP URL data source.
func (o TransferSpecPtrOutput) HttpDataSource() HttpDataPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *HttpData {
		if v == nil {
			return nil
		}
		return v.HttpDataSource
	}).(HttpDataPtrOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
func (o TransferSpecPtrOutput) ObjectConditions() ObjectConditionsPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *ObjectConditions {
		if v == nil {
			return nil
		}
		return v.ObjectConditions
	}).(ObjectConditionsPtrOutput)
}

// A POSIX Filesystem data sink.
func (o TransferSpecPtrOutput) PosixDataSink() PosixFilesystemPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *PosixFilesystem {
		if v == nil {
			return nil
		}
		return v.PosixDataSink
	}).(PosixFilesystemPtrOutput)
}

// A POSIX Filesystem data source.
func (o TransferSpecPtrOutput) PosixDataSource() PosixFilesystemPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *PosixFilesystem {
		if v == nil {
			return nil
		}
		return v.PosixDataSource
	}).(PosixFilesystemPtrOutput)
}

// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
func (o TransferSpecPtrOutput) SinkAgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *string {
		if v == nil {
			return nil
		}
		return v.SinkAgentPoolName
	}).(pulumi.StringPtrOutput)
}

// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
func (o TransferSpecPtrOutput) SourceAgentPoolName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *string {
		if v == nil {
			return nil
		}
		return v.SourceAgentPoolName
	}).(pulumi.StringPtrOutput)
}

// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
func (o TransferSpecPtrOutput) TransferManifest() TransferManifestPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *TransferManifest {
		if v == nil {
			return nil
		}
		return v.TransferManifest
	}).(TransferManifestPtrOutput)
}

// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
func (o TransferSpecPtrOutput) TransferOptions() TransferOptionsPtrOutput {
	return o.ApplyT(func(v *TransferSpec) *TransferOptions {
		if v == nil {
			return nil
		}
		return v.TransferOptions
	}).(TransferOptionsPtrOutput)
}

// Configuration for running a transfer.
type TransferSpecResponse struct {
	// An AWS S3 compatible data source.
	AwsS3CompatibleDataSource AwsS3CompatibleDataResponse `pulumi:"awsS3CompatibleDataSource"`
	// An AWS S3 data source.
	AwsS3DataSource AwsS3DataResponse `pulumi:"awsS3DataSource"`
	// An Azure Blob Storage data source.
	AzureBlobStorageDataSource AzureBlobStorageDataResponse `pulumi:"azureBlobStorageDataSource"`
	// A Cloud Storage data sink.
	GcsDataSink GcsDataResponse `pulumi:"gcsDataSink"`
	// A Cloud Storage data source.
	GcsDataSource GcsDataResponse `pulumi:"gcsDataSource"`
	// Cloud Storage intermediate data location.
	GcsIntermediateDataLocation GcsDataResponse `pulumi:"gcsIntermediateDataLocation"`
	// An HTTP URL data source.
	HttpDataSource HttpDataResponse `pulumi:"httpDataSource"`
	// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
	ObjectConditions ObjectConditionsResponse `pulumi:"objectConditions"`
	// A POSIX Filesystem data sink.
	PosixDataSink PosixFilesystemResponse `pulumi:"posixDataSink"`
	// A POSIX Filesystem data source.
	PosixDataSource PosixFilesystemResponse `pulumi:"posixDataSource"`
	// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
	SinkAgentPoolName string `pulumi:"sinkAgentPoolName"`
	// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
	SourceAgentPoolName string `pulumi:"sourceAgentPoolName"`
	// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
	TransferManifest TransferManifestResponse `pulumi:"transferManifest"`
	// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
	TransferOptions TransferOptionsResponse `pulumi:"transferOptions"`
}

// Configuration for running a transfer.
type TransferSpecResponseOutput struct{ *pulumi.OutputState }

func (TransferSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferSpecResponse)(nil)).Elem()
}

func (o TransferSpecResponseOutput) ToTransferSpecResponseOutput() TransferSpecResponseOutput {
	return o
}

func (o TransferSpecResponseOutput) ToTransferSpecResponseOutputWithContext(ctx context.Context) TransferSpecResponseOutput {
	return o
}

// An AWS S3 compatible data source.
func (o TransferSpecResponseOutput) AwsS3CompatibleDataSource() AwsS3CompatibleDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) AwsS3CompatibleDataResponse { return v.AwsS3CompatibleDataSource }).(AwsS3CompatibleDataResponseOutput)
}

// An AWS S3 data source.
func (o TransferSpecResponseOutput) AwsS3DataSource() AwsS3DataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) AwsS3DataResponse { return v.AwsS3DataSource }).(AwsS3DataResponseOutput)
}

// An Azure Blob Storage data source.
func (o TransferSpecResponseOutput) AzureBlobStorageDataSource() AzureBlobStorageDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) AzureBlobStorageDataResponse { return v.AzureBlobStorageDataSource }).(AzureBlobStorageDataResponseOutput)
}

// A Cloud Storage data sink.
func (o TransferSpecResponseOutput) GcsDataSink() GcsDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) GcsDataResponse { return v.GcsDataSink }).(GcsDataResponseOutput)
}

// A Cloud Storage data source.
func (o TransferSpecResponseOutput) GcsDataSource() GcsDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) GcsDataResponse { return v.GcsDataSource }).(GcsDataResponseOutput)
}

// Cloud Storage intermediate data location.
func (o TransferSpecResponseOutput) GcsIntermediateDataLocation() GcsDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) GcsDataResponse { return v.GcsIntermediateDataLocation }).(GcsDataResponseOutput)
}

// An HTTP URL data source.
func (o TransferSpecResponseOutput) HttpDataSource() HttpDataResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) HttpDataResponse { return v.HttpDataSource }).(HttpDataResponseOutput)
}

// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' "last modification time" do not exclude objects in a data sink.
func (o TransferSpecResponseOutput) ObjectConditions() ObjectConditionsResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) ObjectConditionsResponse { return v.ObjectConditions }).(ObjectConditionsResponseOutput)
}

// A POSIX Filesystem data sink.
func (o TransferSpecResponseOutput) PosixDataSink() PosixFilesystemResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) PosixFilesystemResponse { return v.PosixDataSink }).(PosixFilesystemResponseOutput)
}

// A POSIX Filesystem data source.
func (o TransferSpecResponseOutput) PosixDataSource() PosixFilesystemResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) PosixFilesystemResponse { return v.PosixDataSource }).(PosixFilesystemResponseOutput)
}

// Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.
func (o TransferSpecResponseOutput) SinkAgentPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferSpecResponse) string { return v.SinkAgentPoolName }).(pulumi.StringOutput)
}

// Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.
func (o TransferSpecResponseOutput) SourceAgentPoolName() pulumi.StringOutput {
	return o.ApplyT(func(v TransferSpecResponse) string { return v.SourceAgentPoolName }).(pulumi.StringOutput)
}

// A manifest file provides a list of objects to be transferred from the data source. This field points to the location of the manifest file. Otherwise, the entire source bucket is used. ObjectConditions still apply.
func (o TransferSpecResponseOutput) TransferManifest() TransferManifestResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) TransferManifestResponse { return v.TransferManifest }).(TransferManifestResponseOutput)
}

// If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.
func (o TransferSpecResponseOutput) TransferOptions() TransferOptionsResponseOutput {
	return o.ApplyT(func(v TransferSpecResponse) TransferOptionsResponse { return v.TransferOptions }).(TransferOptionsResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAccessKeyInput)(nil)).Elem(), AwsAccessKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsAccessKeyPtrInput)(nil)).Elem(), AwsAccessKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsS3CompatibleDataInput)(nil)).Elem(), AwsS3CompatibleDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsS3CompatibleDataPtrInput)(nil)).Elem(), AwsS3CompatibleDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsS3DataInput)(nil)).Elem(), AwsS3DataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsS3DataPtrInput)(nil)).Elem(), AwsS3DataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureBlobStorageDataInput)(nil)).Elem(), AzureBlobStorageDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureBlobStorageDataPtrInput)(nil)).Elem(), AzureBlobStorageDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureCredentialsInput)(nil)).Elem(), AzureCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureCredentialsPtrInput)(nil)).Elem(), AzureCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthLimitInput)(nil)).Elem(), BandwidthLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthLimitPtrInput)(nil)).Elem(), BandwidthLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DateInput)(nil)).Elem(), DateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatePtrInput)(nil)).Elem(), DateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcsDataInput)(nil)).Elem(), GcsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcsDataPtrInput)(nil)).Elem(), GcsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpDataInput)(nil)).Elem(), HttpDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpDataPtrInput)(nil)).Elem(), HttpDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigInput)(nil)).Elem(), LoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigPtrInput)(nil)).Elem(), LoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataOptionsInput)(nil)).Elem(), MetadataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataOptionsPtrInput)(nil)).Elem(), MetadataOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigInput)(nil)).Elem(), NotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationConfigPtrInput)(nil)).Elem(), NotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectConditionsInput)(nil)).Elem(), ObjectConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectConditionsPtrInput)(nil)).Elem(), ObjectConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PosixFilesystemInput)(nil)).Elem(), PosixFilesystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PosixFilesystemPtrInput)(nil)).Elem(), PosixFilesystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3CompatibleMetadataInput)(nil)).Elem(), S3CompatibleMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3CompatibleMetadataPtrInput)(nil)).Elem(), S3CompatibleMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulePtrInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeOfDayInput)(nil)).Elem(), TimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeOfDayPtrInput)(nil)).Elem(), TimeOfDayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferManifestInput)(nil)).Elem(), TransferManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferManifestPtrInput)(nil)).Elem(), TransferManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferOptionsInput)(nil)).Elem(), TransferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferOptionsPtrInput)(nil)).Elem(), TransferOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferSpecInput)(nil)).Elem(), TransferSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransferSpecPtrInput)(nil)).Elem(), TransferSpecArgs{})
	pulumi.RegisterOutputType(AwsAccessKeyOutput{})
	pulumi.RegisterOutputType(AwsAccessKeyPtrOutput{})
	pulumi.RegisterOutputType(AwsAccessKeyResponseOutput{})
	pulumi.RegisterOutputType(AwsS3CompatibleDataOutput{})
	pulumi.RegisterOutputType(AwsS3CompatibleDataPtrOutput{})
	pulumi.RegisterOutputType(AwsS3CompatibleDataResponseOutput{})
	pulumi.RegisterOutputType(AwsS3DataOutput{})
	pulumi.RegisterOutputType(AwsS3DataPtrOutput{})
	pulumi.RegisterOutputType(AwsS3DataResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageDataOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageDataPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageDataResponseOutput{})
	pulumi.RegisterOutputType(AzureCredentialsOutput{})
	pulumi.RegisterOutputType(AzureCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AzureCredentialsResponseOutput{})
	pulumi.RegisterOutputType(BandwidthLimitOutput{})
	pulumi.RegisterOutputType(BandwidthLimitPtrOutput{})
	pulumi.RegisterOutputType(BandwidthLimitResponseOutput{})
	pulumi.RegisterOutputType(DateOutput{})
	pulumi.RegisterOutputType(DatePtrOutput{})
	pulumi.RegisterOutputType(DateResponseOutput{})
	pulumi.RegisterOutputType(GcsDataOutput{})
	pulumi.RegisterOutputType(GcsDataPtrOutput{})
	pulumi.RegisterOutputType(GcsDataResponseOutput{})
	pulumi.RegisterOutputType(HttpDataOutput{})
	pulumi.RegisterOutputType(HttpDataPtrOutput{})
	pulumi.RegisterOutputType(HttpDataResponseOutput{})
	pulumi.RegisterOutputType(LoggingConfigOutput{})
	pulumi.RegisterOutputType(LoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigResponseOutput{})
	pulumi.RegisterOutputType(MetadataOptionsOutput{})
	pulumi.RegisterOutputType(MetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(MetadataOptionsResponseOutput{})
	pulumi.RegisterOutputType(NotificationConfigOutput{})
	pulumi.RegisterOutputType(NotificationConfigPtrOutput{})
	pulumi.RegisterOutputType(NotificationConfigResponseOutput{})
	pulumi.RegisterOutputType(ObjectConditionsOutput{})
	pulumi.RegisterOutputType(ObjectConditionsPtrOutput{})
	pulumi.RegisterOutputType(ObjectConditionsResponseOutput{})
	pulumi.RegisterOutputType(PosixFilesystemOutput{})
	pulumi.RegisterOutputType(PosixFilesystemPtrOutput{})
	pulumi.RegisterOutputType(PosixFilesystemResponseOutput{})
	pulumi.RegisterOutputType(S3CompatibleMetadataOutput{})
	pulumi.RegisterOutputType(S3CompatibleMetadataPtrOutput{})
	pulumi.RegisterOutputType(S3CompatibleMetadataResponseOutput{})
	pulumi.RegisterOutputType(ScheduleOutput{})
	pulumi.RegisterOutputType(SchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(TimeOfDayOutput{})
	pulumi.RegisterOutputType(TimeOfDayPtrOutput{})
	pulumi.RegisterOutputType(TimeOfDayResponseOutput{})
	pulumi.RegisterOutputType(TransferManifestOutput{})
	pulumi.RegisterOutputType(TransferManifestPtrOutput{})
	pulumi.RegisterOutputType(TransferManifestResponseOutput{})
	pulumi.RegisterOutputType(TransferOptionsOutput{})
	pulumi.RegisterOutputType(TransferOptionsPtrOutput{})
	pulumi.RegisterOutputType(TransferOptionsResponseOutput{})
	pulumi.RegisterOutputType(TransferSpecOutput{})
	pulumi.RegisterOutputType(TransferSpecPtrOutput{})
	pulumi.RegisterOutputType(TransferSpecResponseOutput{})
}
