// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotificationConfigEventTypesItem pulumi.String

const (
	// Illegal value, to avoid allowing a default.
	NotificationConfigEventTypesItemEventTypeUnspecified = NotificationConfigEventTypesItem("EVENT_TYPE_UNSPECIFIED")
	// `TransferOperation` completed with status SUCCESS.
	NotificationConfigEventTypesItemTransferOperationSuccess = NotificationConfigEventTypesItem("TRANSFER_OPERATION_SUCCESS")
	// `TransferOperation` completed with status FAILED.
	NotificationConfigEventTypesItemTransferOperationFailed = NotificationConfigEventTypesItem("TRANSFER_OPERATION_FAILED")
	// `TransferOperation` completed with status ABORTED.
	NotificationConfigEventTypesItemTransferOperationAborted = NotificationConfigEventTypesItem("TRANSFER_OPERATION_ABORTED")
)

func (NotificationConfigEventTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e NotificationConfigEventTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationConfigEventTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationConfigEventTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationConfigEventTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// NotificationConfigEventTypesItemArrayInput is an input type that accepts NotificationConfigEventTypesItemArray and NotificationConfigEventTypesItemArrayOutput values.
// You can construct a concrete instance of `NotificationConfigEventTypesItemArrayInput` via:
//
//          NotificationConfigEventTypesItemArray{ NotificationConfigEventTypesItemArgs{...} }
type NotificationConfigEventTypesItemArrayInput interface {
	pulumi.Input

	ToNotificationConfigEventTypesItemArrayOutput() NotificationConfigEventTypesItemArrayOutput
	ToNotificationConfigEventTypesItemArrayOutputWithContext(context.Context) NotificationConfigEventTypesItemArrayOutput
}

type NotificationConfigEventTypesItemArray []NotificationConfigEventTypesItem

func (NotificationConfigEventTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationConfigEventTypesItem)(nil)).Elem()
}

func (i NotificationConfigEventTypesItemArray) ToNotificationConfigEventTypesItemArrayOutput() NotificationConfigEventTypesItemArrayOutput {
	return i.ToNotificationConfigEventTypesItemArrayOutputWithContext(context.Background())
}

func (i NotificationConfigEventTypesItemArray) ToNotificationConfigEventTypesItemArrayOutputWithContext(ctx context.Context) NotificationConfigEventTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationConfigEventTypesItemArrayOutput)
}

type NotificationConfigEventTypesItemArrayOutput struct{ *pulumi.OutputState }

func (NotificationConfigEventTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationConfigEventTypesItem)(nil)).Elem()
}

func (o NotificationConfigEventTypesItemArrayOutput) ToNotificationConfigEventTypesItemArrayOutput() NotificationConfigEventTypesItemArrayOutput {
	return o
}

func (o NotificationConfigEventTypesItemArrayOutput) ToNotificationConfigEventTypesItemArrayOutputWithContext(ctx context.Context) NotificationConfigEventTypesItemArrayOutput {
	return o
}

func (o NotificationConfigEventTypesItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]NotificationConfigEventTypesItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// Required. The desired format of the notification message payloads.
type NotificationConfigPayloadFormat pulumi.String

const (
	// Illegal value, to avoid allowing a default.
	NotificationConfigPayloadFormatPayloadFormatUnspecified = NotificationConfigPayloadFormat("PAYLOAD_FORMAT_UNSPECIFIED")
	// No payload is included with the notification.
	NotificationConfigPayloadFormatNone = NotificationConfigPayloadFormat("NONE")
	// `TransferOperation` is [formatted as a JSON response](https://developers.google.com/protocol-buffers/docs/proto3#json), in application/json.
	NotificationConfigPayloadFormatJson = NotificationConfigPayloadFormat("JSON")
)

func (NotificationConfigPayloadFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e NotificationConfigPayloadFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationConfigPayloadFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationConfigPayloadFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationConfigPayloadFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.
type TransferJobStatus pulumi.String

const (
	// Zero is an illegal value.
	TransferJobStatusStatusUnspecified = TransferJobStatus("STATUS_UNSPECIFIED")
	// New transfers will be performed based on the schedule.
	TransferJobStatusEnabled = TransferJobStatus("ENABLED")
	// New transfers will not be scheduled.
	TransferJobStatusDisabled = TransferJobStatus("DISABLED")
	// This is a soft delete state. After a transfer job is set to this state, the job and all the transfer executions are subject to garbage collection. Transfer jobs become eligible for garbage collection 30 days after their status is set to `DELETED`.
	TransferJobStatusDeleted = TransferJobStatus("DELETED")
)

func (TransferJobStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TransferJobStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferJobStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferJobStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransferJobStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
