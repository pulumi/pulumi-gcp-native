// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Create a new case and associate it with a parent. It must have the following fields set: `display_name`, `description`, `classification`, and `priority`. If you're just testing the API and don't want to route your case to an agent, set `testCase=true`. EXAMPLES: cURL: ``` shell parent="projects/some-project" curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ --header 'Content-Type: application/json' \ --data '{ "display_name": "Test case created by me.", "description": "a random test case, feel free to close", "classification": { "id": "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8" }, "time_zone": "-07:00", "subscriber_email_addresses": [ "foo@domain.com", "bar@domain.com" ], "testCase": true, "priority": "P3" }' \ "https://cloudsupport.googleapis.com/v2/$parent/cases"  ``` Python: ``` python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().create( parent="projects/some-project", body={ "displayName": "A Test Case", "description": "This is a test case.", "testCase": True, "priority": "P2", "classification": { "id": "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8" }, }, ) print(request.execute())  ```
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type Case struct {
	pulumi.CustomResourceState

	// The issue classification applicable to this case.
	Classification CaseClassificationResponseOutput `pulumi:"classification"`
	// A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.
	ContactEmail pulumi.StringOutput `pulumi:"contactEmail"`
	// The time this case was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
	Creator ActorResponseOutput `pulumi:"creator"`
	// A broad description of the issue.
	Description pulumi.StringOutput `pulumi:"description"`
	// The short summary of the issue reported in this case.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Whether the case is currently escalated.
	Escalated pulumi.BoolOutput `pulumi:"escalated"`
	// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	// The resource name for the case.
	Name pulumi.StringOutput `pulumi:"name"`
	// The priority of this case.
	Priority pulumi.StringOutput `pulumi:"priority"`
	// The current status of the support case.
	State pulumi.StringOutput `pulumi:"state"`
	// The email addresses to receive updates on this case.
	SubscriberEmailAddresses pulumi.StringArrayOutput `pulumi:"subscriberEmailAddresses"`
	// Whether this case was created for internal API testing and should not be acted on by the support team.
	TestCase pulumi.BoolOutput `pulumi:"testCase"`
	// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The time this case was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	V2Id       pulumi.StringOutput `pulumi:"v2Id"`
	V2Id1      pulumi.StringOutput `pulumi:"v2Id1"`
}

// NewCase registers a new resource with the given unique name, arguments, and options.
func NewCase(ctx *pulumi.Context,
	name string, args *CaseArgs, opts ...pulumi.ResourceOption) (*Case, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.V2Id == nil {
		return nil, errors.New("invalid value for required argument 'V2Id'")
	}
	if args.V2Id1 == nil {
		return nil, errors.New("invalid value for required argument 'V2Id1'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"v2Id",
		"v2Id1",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Case
	err := ctx.RegisterResource("google-native:cloudsupport/v2:Case", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCase gets an existing Case resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CaseState, opts ...pulumi.ResourceOption) (*Case, error) {
	var resource Case
	err := ctx.ReadResource("google-native:cloudsupport/v2:Case", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Case resources.
type caseState struct {
}

type CaseState struct {
}

func (CaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*caseState)(nil)).Elem()
}

type caseArgs struct {
	// The issue classification applicable to this case.
	Classification *CaseClassification `pulumi:"classification"`
	// A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.
	ContactEmail *string `pulumi:"contactEmail"`
	// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
	Creator *Actor `pulumi:"creator"`
	// A broad description of the issue.
	Description *string `pulumi:"description"`
	// The short summary of the issue reported in this case.
	DisplayName *string `pulumi:"displayName"`
	// Whether the case is currently escalated.
	Escalated *bool `pulumi:"escalated"`
	// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
	LanguageCode *string `pulumi:"languageCode"`
	// The resource name for the case.
	Name *string `pulumi:"name"`
	// The priority of this case.
	Priority *CasePriority `pulumi:"priority"`
	// The email addresses to receive updates on this case.
	SubscriberEmailAddresses []string `pulumi:"subscriberEmailAddresses"`
	// Whether this case was created for internal API testing and should not be acted on by the support team.
	TestCase *bool `pulumi:"testCase"`
	// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
	TimeZone *string `pulumi:"timeZone"`
	V2Id     string  `pulumi:"v2Id"`
	V2Id1    string  `pulumi:"v2Id1"`
}

// The set of arguments for constructing a Case resource.
type CaseArgs struct {
	// The issue classification applicable to this case.
	Classification CaseClassificationPtrInput
	// A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.
	ContactEmail pulumi.StringPtrInput
	// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
	Creator ActorPtrInput
	// A broad description of the issue.
	Description pulumi.StringPtrInput
	// The short summary of the issue reported in this case.
	DisplayName pulumi.StringPtrInput
	// Whether the case is currently escalated.
	Escalated pulumi.BoolPtrInput
	// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
	LanguageCode pulumi.StringPtrInput
	// The resource name for the case.
	Name pulumi.StringPtrInput
	// The priority of this case.
	Priority CasePriorityPtrInput
	// The email addresses to receive updates on this case.
	SubscriberEmailAddresses pulumi.StringArrayInput
	// Whether this case was created for internal API testing and should not be acted on by the support team.
	TestCase pulumi.BoolPtrInput
	// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
	TimeZone pulumi.StringPtrInput
	V2Id     pulumi.StringInput
	V2Id1    pulumi.StringInput
}

func (CaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*caseArgs)(nil)).Elem()
}

type CaseInput interface {
	pulumi.Input

	ToCaseOutput() CaseOutput
	ToCaseOutputWithContext(ctx context.Context) CaseOutput
}

func (*Case) ElementType() reflect.Type {
	return reflect.TypeOf((**Case)(nil)).Elem()
}

func (i *Case) ToCaseOutput() CaseOutput {
	return i.ToCaseOutputWithContext(context.Background())
}

func (i *Case) ToCaseOutputWithContext(ctx context.Context) CaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaseOutput)
}

func (i *Case) ToOutput(ctx context.Context) pulumix.Output[*Case] {
	return pulumix.Output[*Case]{
		OutputState: i.ToCaseOutputWithContext(ctx).OutputState,
	}
}

type CaseOutput struct{ *pulumi.OutputState }

func (CaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Case)(nil)).Elem()
}

func (o CaseOutput) ToCaseOutput() CaseOutput {
	return o
}

func (o CaseOutput) ToCaseOutputWithContext(ctx context.Context) CaseOutput {
	return o
}

func (o CaseOutput) ToOutput(ctx context.Context) pulumix.Output[*Case] {
	return pulumix.Output[*Case]{
		OutputState: o.OutputState,
	}
}

// The issue classification applicable to this case.
func (o CaseOutput) Classification() CaseClassificationResponseOutput {
	return o.ApplyT(func(v *Case) CaseClassificationResponseOutput { return v.Classification }).(CaseClassificationResponseOutput)
}

// A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.
func (o CaseOutput) ContactEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.ContactEmail }).(pulumi.StringOutput)
}

// The time this case was created.
func (o CaseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
func (o CaseOutput) Creator() ActorResponseOutput {
	return o.ApplyT(func(v *Case) ActorResponseOutput { return v.Creator }).(ActorResponseOutput)
}

// A broad description of the issue.
func (o CaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The short summary of the issue reported in this case.
func (o CaseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Whether the case is currently escalated.
func (o CaseOutput) Escalated() pulumi.BoolOutput {
	return o.ApplyT(func(v *Case) pulumi.BoolOutput { return v.Escalated }).(pulumi.BoolOutput)
}

// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
func (o CaseOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

// The resource name for the case.
func (o CaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The priority of this case.
func (o CaseOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.Priority }).(pulumi.StringOutput)
}

// The current status of the support case.
func (o CaseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The email addresses to receive updates on this case.
func (o CaseOutput) SubscriberEmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Case) pulumi.StringArrayOutput { return v.SubscriberEmailAddresses }).(pulumi.StringArrayOutput)
}

// Whether this case was created for internal API testing and should not be acted on by the support team.
func (o CaseOutput) TestCase() pulumi.BoolOutput {
	return o.ApplyT(func(v *Case) pulumi.BoolOutput { return v.TestCase }).(pulumi.BoolOutput)
}

// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
func (o CaseOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// The time this case was last updated.
func (o CaseOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o CaseOutput) V2Id() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.V2Id }).(pulumi.StringOutput)
}

func (o CaseOutput) V2Id1() pulumi.StringOutput {
	return o.ApplyT(func(v *Case) pulumi.StringOutput { return v.V2Id1 }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CaseInput)(nil)).Elem(), &Case{})
	pulumi.RegisterOutputType(CaseOutput{})
}
