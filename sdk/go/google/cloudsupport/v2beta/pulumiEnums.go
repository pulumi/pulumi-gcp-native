// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The severity of this case.
type CaseSeverity string

const (
	// Severity is undefined or has not been set yet.
	CaseSeveritySeverityUnspecified = CaseSeverity("SEVERITY_UNSPECIFIED")
	// Extreme impact on a production service. Service is hard down.
	CaseSeverityS0 = CaseSeverity("S0")
	// Critical impact on a production service. Service is currently unusable.
	CaseSeverityS1 = CaseSeverity("S1")
	// Severe impact on a production service. Service is usable but greatly impaired.
	CaseSeverityS2 = CaseSeverity("S2")
	// Medium impact on a production service. Service is available, but moderately impaired.
	CaseSeverityS3 = CaseSeverity("S3")
	// General questions or minor issues. Production service is fully available.
	CaseSeverityS4 = CaseSeverity("S4")
)

func (CaseSeverity) ElementType() reflect.Type {
	return reflect.TypeOf((*CaseSeverity)(nil)).Elem()
}

func (e CaseSeverity) ToCaseSeverityOutput() CaseSeverityOutput {
	return pulumi.ToOutput(e).(CaseSeverityOutput)
}

func (e CaseSeverity) ToCaseSeverityOutputWithContext(ctx context.Context) CaseSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CaseSeverityOutput)
}

func (e CaseSeverity) ToCaseSeverityPtrOutput() CaseSeverityPtrOutput {
	return e.ToCaseSeverityPtrOutputWithContext(context.Background())
}

func (e CaseSeverity) ToCaseSeverityPtrOutputWithContext(ctx context.Context) CaseSeverityPtrOutput {
	return CaseSeverity(e).ToCaseSeverityOutputWithContext(ctx).ToCaseSeverityPtrOutputWithContext(ctx)
}

func (e CaseSeverity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CaseSeverity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CaseSeverity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CaseSeverity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CaseSeverityOutput struct{ *pulumi.OutputState }

func (CaseSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaseSeverity)(nil)).Elem()
}

func (o CaseSeverityOutput) ToCaseSeverityOutput() CaseSeverityOutput {
	return o
}

func (o CaseSeverityOutput) ToCaseSeverityOutputWithContext(ctx context.Context) CaseSeverityOutput {
	return o
}

func (o CaseSeverityOutput) ToCaseSeverityPtrOutput() CaseSeverityPtrOutput {
	return o.ToCaseSeverityPtrOutputWithContext(context.Background())
}

func (o CaseSeverityOutput) ToCaseSeverityPtrOutputWithContext(ctx context.Context) CaseSeverityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CaseSeverity) *CaseSeverity {
		return &v
	}).(CaseSeverityPtrOutput)
}

func (o CaseSeverityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CaseSeverityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CaseSeverity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CaseSeverityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CaseSeverityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CaseSeverity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CaseSeverityPtrOutput struct{ *pulumi.OutputState }

func (CaseSeverityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CaseSeverity)(nil)).Elem()
}

func (o CaseSeverityPtrOutput) ToCaseSeverityPtrOutput() CaseSeverityPtrOutput {
	return o
}

func (o CaseSeverityPtrOutput) ToCaseSeverityPtrOutputWithContext(ctx context.Context) CaseSeverityPtrOutput {
	return o
}

func (o CaseSeverityPtrOutput) Elem() CaseSeverityOutput {
	return o.ApplyT(func(v *CaseSeverity) CaseSeverity {
		if v != nil {
			return *v
		}
		var ret CaseSeverity
		return ret
	}).(CaseSeverityOutput)
}

func (o CaseSeverityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CaseSeverityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CaseSeverity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CaseSeverityInput is an input type that accepts CaseSeverityArgs and CaseSeverityOutput values.
// You can construct a concrete instance of `CaseSeverityInput` via:
//
//          CaseSeverityArgs{...}
type CaseSeverityInput interface {
	pulumi.Input

	ToCaseSeverityOutput() CaseSeverityOutput
	ToCaseSeverityOutputWithContext(context.Context) CaseSeverityOutput
}

var caseSeverityPtrType = reflect.TypeOf((**CaseSeverity)(nil)).Elem()

type CaseSeverityPtrInput interface {
	pulumi.Input

	ToCaseSeverityPtrOutput() CaseSeverityPtrOutput
	ToCaseSeverityPtrOutputWithContext(context.Context) CaseSeverityPtrOutput
}

type caseSeverityPtr string

func CaseSeverityPtr(v string) CaseSeverityPtrInput {
	return (*caseSeverityPtr)(&v)
}

func (*caseSeverityPtr) ElementType() reflect.Type {
	return caseSeverityPtrType
}

func (in *caseSeverityPtr) ToCaseSeverityPtrOutput() CaseSeverityPtrOutput {
	return pulumi.ToOutput(in).(CaseSeverityPtrOutput)
}

func (in *caseSeverityPtr) ToCaseSeverityPtrOutputWithContext(ctx context.Context) CaseSeverityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CaseSeverityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CaseSeverityInput)(nil)).Elem(), CaseSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CaseSeverityPtrInput)(nil)).Elem(), CaseSeverity("SEVERITY_UNSPECIFIED"))
	pulumi.RegisterOutputType(CaseSeverityOutput{})
	pulumi.RegisterOutputType(CaseSeverityPtrOutput{})
}
