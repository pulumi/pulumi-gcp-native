// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new WorkforcePoolProviderKey in a WorkforcePoolProvider.
// Auto-naming is currently not supported for this resource.
type WorkforcePoolKey struct {
	pulumi.CustomResourceState

	// The time after which the key will be permanently deleted and cannot be recovered. Note that the key may get purged before this time if the total limit of keys per provider is exceeded.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Immutable. Public half of the asymmetric key.
	KeyData  KeyDataResponseOutput `pulumi:"keyData"`
	Location pulumi.StringOutput   `pulumi:"location"`
	// The resource name of the key.
	Name       pulumi.StringOutput `pulumi:"name"`
	ProviderId pulumi.StringOutput `pulumi:"providerId"`
	// The state of the key.
	State pulumi.StringOutput `pulumi:"state"`
	// The purpose of the key.
	Use             pulumi.StringOutput `pulumi:"use"`
	WorkforcePoolId pulumi.StringOutput `pulumi:"workforcePoolId"`
	// Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	WorkforcePoolProviderKeyId pulumi.StringOutput `pulumi:"workforcePoolProviderKeyId"`
}

// NewWorkforcePoolKey registers a new resource with the given unique name, arguments, and options.
func NewWorkforcePoolKey(ctx *pulumi.Context,
	name string, args *WorkforcePoolKeyArgs, opts ...pulumi.ResourceOption) (*WorkforcePoolKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProviderId == nil {
		return nil, errors.New("invalid value for required argument 'ProviderId'")
	}
	if args.Use == nil {
		return nil, errors.New("invalid value for required argument 'Use'")
	}
	if args.WorkforcePoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkforcePoolId'")
	}
	if args.WorkforcePoolProviderKeyId == nil {
		return nil, errors.New("invalid value for required argument 'WorkforcePoolProviderKeyId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"providerId",
		"workforcePoolId",
		"workforcePoolProviderKeyId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkforcePoolKey
	err := ctx.RegisterResource("google-native:iam/v1:WorkforcePoolKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkforcePoolKey gets an existing WorkforcePoolKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkforcePoolKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkforcePoolKeyState, opts ...pulumi.ResourceOption) (*WorkforcePoolKey, error) {
	var resource WorkforcePoolKey
	err := ctx.ReadResource("google-native:iam/v1:WorkforcePoolKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkforcePoolKey resources.
type workforcePoolKeyState struct {
}

type WorkforcePoolKeyState struct {
}

func (WorkforcePoolKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolKeyState)(nil)).Elem()
}

type workforcePoolKeyArgs struct {
	// Immutable. Public half of the asymmetric key.
	KeyData    *KeyData `pulumi:"keyData"`
	Location   *string  `pulumi:"location"`
	ProviderId string   `pulumi:"providerId"`
	// The purpose of the key.
	Use             WorkforcePoolKeyUse `pulumi:"use"`
	WorkforcePoolId string              `pulumi:"workforcePoolId"`
	// Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	WorkforcePoolProviderKeyId string `pulumi:"workforcePoolProviderKeyId"`
}

// The set of arguments for constructing a WorkforcePoolKey resource.
type WorkforcePoolKeyArgs struct {
	// Immutable. Public half of the asymmetric key.
	KeyData    KeyDataPtrInput
	Location   pulumi.StringPtrInput
	ProviderId pulumi.StringInput
	// The purpose of the key.
	Use             WorkforcePoolKeyUseInput
	WorkforcePoolId pulumi.StringInput
	// Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
	WorkforcePoolProviderKeyId pulumi.StringInput
}

func (WorkforcePoolKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workforcePoolKeyArgs)(nil)).Elem()
}

type WorkforcePoolKeyInput interface {
	pulumi.Input

	ToWorkforcePoolKeyOutput() WorkforcePoolKeyOutput
	ToWorkforcePoolKeyOutputWithContext(ctx context.Context) WorkforcePoolKeyOutput
}

func (*WorkforcePoolKey) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolKey)(nil)).Elem()
}

func (i *WorkforcePoolKey) ToWorkforcePoolKeyOutput() WorkforcePoolKeyOutput {
	return i.ToWorkforcePoolKeyOutputWithContext(context.Background())
}

func (i *WorkforcePoolKey) ToWorkforcePoolKeyOutputWithContext(ctx context.Context) WorkforcePoolKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkforcePoolKeyOutput)
}

func (i *WorkforcePoolKey) ToOutput(ctx context.Context) pulumix.Output[*WorkforcePoolKey] {
	return pulumix.Output[*WorkforcePoolKey]{
		OutputState: i.ToWorkforcePoolKeyOutputWithContext(ctx).OutputState,
	}
}

type WorkforcePoolKeyOutput struct{ *pulumi.OutputState }

func (WorkforcePoolKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkforcePoolKey)(nil)).Elem()
}

func (o WorkforcePoolKeyOutput) ToWorkforcePoolKeyOutput() WorkforcePoolKeyOutput {
	return o
}

func (o WorkforcePoolKeyOutput) ToWorkforcePoolKeyOutputWithContext(ctx context.Context) WorkforcePoolKeyOutput {
	return o
}

func (o WorkforcePoolKeyOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkforcePoolKey] {
	return pulumix.Output[*WorkforcePoolKey]{
		OutputState: o.OutputState,
	}
}

// The time after which the key will be permanently deleted and cannot be recovered. Note that the key may get purged before this time if the total limit of keys per provider is exceeded.
func (o WorkforcePoolKeyOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Immutable. Public half of the asymmetric key.
func (o WorkforcePoolKeyOutput) KeyData() KeyDataResponseOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) KeyDataResponseOutput { return v.KeyData }).(KeyDataResponseOutput)
}

func (o WorkforcePoolKeyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the key.
func (o WorkforcePoolKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkforcePoolKeyOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.ProviderId }).(pulumi.StringOutput)
}

// The state of the key.
func (o WorkforcePoolKeyOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The purpose of the key.
func (o WorkforcePoolKeyOutput) Use() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.Use }).(pulumi.StringOutput)
}

func (o WorkforcePoolKeyOutput) WorkforcePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.WorkforcePoolId }).(pulumi.StringOutput)
}

// Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
func (o WorkforcePoolKeyOutput) WorkforcePoolProviderKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkforcePoolKey) pulumi.StringOutput { return v.WorkforcePoolProviderKeyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkforcePoolKeyInput)(nil)).Elem(), &WorkforcePoolKey{})
	pulumi.RegisterOutputType(WorkforcePoolKeyOutput{})
}
