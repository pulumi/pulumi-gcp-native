// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted pool until 30 days after deletion.
// Auto-naming is currently not supported for this resource.
type WorkloadIdentityPool struct {
	pulumi.CustomResourceState

	// A description of the pool. Cannot exceed 256 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
	Disabled pulumi.BoolOutput `pulumi:"disabled"`
	// A display name for the pool. Cannot exceed 32 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	Location    pulumi.StringOutput `pulumi:"location"`
	// The resource name of the pool.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The state of the pool.
	State pulumi.StringOutput `pulumi:"state"`
	// Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
}

// NewWorkloadIdentityPool registers a new resource with the given unique name, arguments, and options.
func NewWorkloadIdentityPool(ctx *pulumi.Context,
	name string, args *WorkloadIdentityPoolArgs, opts ...pulumi.ResourceOption) (*WorkloadIdentityPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
		"workloadIdentityPoolId",
	})
	opts = append(opts, replaceOnChanges)
	var resource WorkloadIdentityPool
	err := ctx.RegisterResource("google-native:iam/v1:WorkloadIdentityPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkloadIdentityPool gets an existing WorkloadIdentityPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkloadIdentityPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkloadIdentityPoolState, opts ...pulumi.ResourceOption) (*WorkloadIdentityPool, error) {
	var resource WorkloadIdentityPool
	err := ctx.ReadResource("google-native:iam/v1:WorkloadIdentityPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkloadIdentityPool resources.
type workloadIdentityPoolState struct {
}

type WorkloadIdentityPoolState struct {
}

func (WorkloadIdentityPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolState)(nil)).Elem()
}

type workloadIdentityPoolArgs struct {
	// A description of the pool. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
	Disabled *bool `pulumi:"disabled"`
	// A display name for the pool. Cannot exceed 32 characters.
	DisplayName *string `pulumi:"displayName"`
	Location    *string `pulumi:"location"`
	Project     *string `pulumi:"project"`
	// Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
}

// The set of arguments for constructing a WorkloadIdentityPool resource.
type WorkloadIdentityPoolArgs struct {
	// A description of the pool. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
	Disabled pulumi.BoolPtrInput
	// A display name for the pool. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrInput
	Location    pulumi.StringPtrInput
	Project     pulumi.StringPtrInput
	// Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringInput
}

func (WorkloadIdentityPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workloadIdentityPoolArgs)(nil)).Elem()
}

type WorkloadIdentityPoolInput interface {
	pulumi.Input

	ToWorkloadIdentityPoolOutput() WorkloadIdentityPoolOutput
	ToWorkloadIdentityPoolOutputWithContext(ctx context.Context) WorkloadIdentityPoolOutput
}

func (*WorkloadIdentityPool) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPool)(nil)).Elem()
}

func (i *WorkloadIdentityPool) ToWorkloadIdentityPoolOutput() WorkloadIdentityPoolOutput {
	return i.ToWorkloadIdentityPoolOutputWithContext(context.Background())
}

func (i *WorkloadIdentityPool) ToWorkloadIdentityPoolOutputWithContext(ctx context.Context) WorkloadIdentityPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadIdentityPoolOutput)
}

type WorkloadIdentityPoolOutput struct{ *pulumi.OutputState }

func (WorkloadIdentityPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadIdentityPool)(nil)).Elem()
}

func (o WorkloadIdentityPoolOutput) ToWorkloadIdentityPoolOutput() WorkloadIdentityPoolOutput {
	return o
}

func (o WorkloadIdentityPoolOutput) ToWorkloadIdentityPoolOutputWithContext(ctx context.Context) WorkloadIdentityPoolOutput {
	return o
}

// A description of the pool. Cannot exceed 256 characters.
func (o WorkloadIdentityPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
func (o WorkloadIdentityPoolOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.BoolOutput { return v.Disabled }).(pulumi.BoolOutput)
}

// A display name for the pool. Cannot exceed 32 characters.
func (o WorkloadIdentityPoolOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o WorkloadIdentityPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the pool.
func (o WorkloadIdentityPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkloadIdentityPoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The state of the pool.
func (o WorkloadIdentityPoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.
func (o WorkloadIdentityPoolOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkloadIdentityPool) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadIdentityPoolInput)(nil)).Elem(), &WorkloadIdentityPool{})
	pulumi.RegisterOutputType(WorkloadIdentityPoolOutput{})
}
