// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets an individual WorkforcePool.
func LookupWorkforcePool(ctx *pulumi.Context, args *LookupWorkforcePoolArgs, opts ...pulumi.InvokeOption) (*LookupWorkforcePoolResult, error) {
	var rv LookupWorkforcePoolResult
	err := ctx.Invoke("google-native:iam/v1:getWorkforcePool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkforcePoolArgs struct {
	Location        string `pulumi:"location"`
	WorkforcePoolId string `pulumi:"workforcePoolId"`
}

type LookupWorkforcePoolResult struct {
	// A user-specified description of the pool. Cannot exceed 256 characters.
	Description string `pulumi:"description"`
	// Disables the workforce pool. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
	Disabled bool `pulumi:"disabled"`
	// A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.
	DisplayName string `pulumi:"displayName"`
	// The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`
	Name string `pulumi:"name"`
	// Immutable. The resource name of the parent. Format: `organizations/{org-id}`.
	Parent string `pulumi:"parent"`
	// Duration that the Google Cloud access tokens, console sign-in sessions, and `gcloud` sign-in sessions from this pool are valid. Must be greater than 15 minutes (900s) and less than 12 hours (43200s). If `session_duration` is not configured, minted credentials have a default duration of one hour (3600s). For SAML providers, the lifetime of the token is the minimum of the `session_duration` and the `SessionNotOnOrAfter` claim in the SAML assertion.
	SessionDuration string `pulumi:"sessionDuration"`
	// The state of the pool.
	State string `pulumi:"state"`
}

func LookupWorkforcePoolOutput(ctx *pulumi.Context, args LookupWorkforcePoolOutputArgs, opts ...pulumi.InvokeOption) LookupWorkforcePoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkforcePoolResult, error) {
			args := v.(LookupWorkforcePoolArgs)
			r, err := LookupWorkforcePool(ctx, &args, opts...)
			var s LookupWorkforcePoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkforcePoolResultOutput)
}

type LookupWorkforcePoolOutputArgs struct {
	Location        pulumi.StringInput `pulumi:"location"`
	WorkforcePoolId pulumi.StringInput `pulumi:"workforcePoolId"`
}

func (LookupWorkforcePoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkforcePoolArgs)(nil)).Elem()
}

type LookupWorkforcePoolResultOutput struct{ *pulumi.OutputState }

func (LookupWorkforcePoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkforcePoolResult)(nil)).Elem()
}

func (o LookupWorkforcePoolResultOutput) ToLookupWorkforcePoolResultOutput() LookupWorkforcePoolResultOutput {
	return o
}

func (o LookupWorkforcePoolResultOutput) ToLookupWorkforcePoolResultOutputWithContext(ctx context.Context) LookupWorkforcePoolResultOutput {
	return o
}

// A user-specified description of the pool. Cannot exceed 256 characters.
func (o LookupWorkforcePoolResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.Description }).(pulumi.StringOutput)
}

// Disables the workforce pool. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
func (o LookupWorkforcePoolResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.
func (o LookupWorkforcePoolResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`
func (o LookupWorkforcePoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// Immutable. The resource name of the parent. Format: `organizations/{org-id}`.
func (o LookupWorkforcePoolResultOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.Parent }).(pulumi.StringOutput)
}

// Duration that the Google Cloud access tokens, console sign-in sessions, and `gcloud` sign-in sessions from this pool are valid. Must be greater than 15 minutes (900s) and less than 12 hours (43200s). If `session_duration` is not configured, minted credentials have a default duration of one hour (3600s). For SAML providers, the lifetime of the token is the minimum of the `session_duration` and the `SessionNotOnOrAfter` claim in the SAML assertion.
func (o LookupWorkforcePoolResultOutput) SessionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.SessionDuration }).(pulumi.StringOutput)
}

// The state of the pool.
func (o LookupWorkforcePoolResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkforcePoolResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkforcePoolResultOutput{})
}
