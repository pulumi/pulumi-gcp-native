// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a new custom Role.
type OrganizationRole struct {
	pulumi.CustomResourceState
}

// NewOrganizationRole registers a new resource with the given unique name, arguments, and options.
func NewOrganizationRole(ctx *pulumi.Context,
	name string, args *OrganizationRoleArgs, opts ...pulumi.ResourceOption) (*OrganizationRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.RolesId == nil {
		return nil, errors.New("invalid value for required argument 'RolesId'")
	}
	var resource OrganizationRole
	err := ctx.RegisterResource("google-cloud:iam/v1:OrganizationRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationRole gets an existing OrganizationRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationRoleState, opts ...pulumi.ResourceOption) (*OrganizationRole, error) {
	var resource OrganizationRole
	err := ctx.ReadResource("google-cloud:iam/v1:OrganizationRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationRole resources.
type organizationRoleState struct {
}

type OrganizationRoleState struct {
}

func (OrganizationRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationRoleState)(nil)).Elem()
}

type organizationRoleArgs struct {
	OrganizationsId string `pulumi:"organizationsId"`
	// The Role resource to create.
	Role *RoleType `pulumi:"role"`
	// The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.
	RoleId  *string `pulumi:"roleId"`
	RolesId string  `pulumi:"rolesId"`
}

// The set of arguments for constructing a OrganizationRole resource.
type OrganizationRoleArgs struct {
	OrganizationsId pulumi.StringInput
	// The Role resource to create.
	Role RoleTypePtrInput
	// The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.
	RoleId  pulumi.StringPtrInput
	RolesId pulumi.StringInput
}

func (OrganizationRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationRoleArgs)(nil)).Elem()
}

type OrganizationRoleInput interface {
	pulumi.Input

	ToOrganizationRoleOutput() OrganizationRoleOutput
	ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput
}

func (*OrganizationRole) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRole)(nil))
}

func (i *OrganizationRole) ToOrganizationRoleOutput() OrganizationRoleOutput {
	return i.ToOrganizationRoleOutputWithContext(context.Background())
}

func (i *OrganizationRole) ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRoleOutput)
}

type OrganizationRoleOutput struct {
	*pulumi.OutputState
}

func (OrganizationRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRole)(nil))
}

func (o OrganizationRoleOutput) ToOrganizationRoleOutput() OrganizationRoleOutput {
	return o
}

func (o OrganizationRoleOutput) ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationRoleOutput{})
}
