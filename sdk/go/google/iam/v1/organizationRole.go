// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new custom Role.
type OrganizationRole struct {
	pulumi.CustomResourceState

	// The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
	Deleted pulumi.BoolOutput `pulumi:"deleted"`
	// Optional. A human-readable description for the role.
	Description pulumi.StringOutput `pulumi:"description"`
	// Used to perform a consistent read-modify-write.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The names of the permissions this role grants when bound in an IAM policy.
	IncludedPermissions pulumi.StringArrayOutput `pulumi:"includedPermissions"`
	// The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/my-role` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/my-role` for project-level custom roles.
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
	Stage pulumi.StringOutput `pulumi:"stage"`
	// Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewOrganizationRole registers a new resource with the given unique name, arguments, and options.
func NewOrganizationRole(ctx *pulumi.Context,
	name string, args *OrganizationRoleArgs, opts ...pulumi.ResourceOption) (*OrganizationRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationRole
	err := ctx.RegisterResource("google-native:iam/v1:OrganizationRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationRole gets an existing OrganizationRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationRoleState, opts ...pulumi.ResourceOption) (*OrganizationRole, error) {
	var resource OrganizationRole
	err := ctx.ReadResource("google-native:iam/v1:OrganizationRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationRole resources.
type organizationRoleState struct {
}

type OrganizationRoleState struct {
}

func (OrganizationRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationRoleState)(nil)).Elem()
}

type organizationRoleArgs struct {
	// The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
	Deleted *bool `pulumi:"deleted"`
	// Optional. A human-readable description for the role.
	Description *string `pulumi:"description"`
	// Used to perform a consistent read-modify-write.
	Etag *string `pulumi:"etag"`
	// The names of the permissions this role grants when bound in an IAM policy.
	IncludedPermissions []string `pulumi:"includedPermissions"`
	// The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/my-role` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/my-role` for project-level custom roles.
	Name           *string `pulumi:"name"`
	OrganizationId string  `pulumi:"organizationId"`
	// The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.
	RoleId *string `pulumi:"roleId"`
	// The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
	Stage *OrganizationRoleStage `pulumi:"stage"`
	// Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
	Title *string `pulumi:"title"`
}

// The set of arguments for constructing a OrganizationRole resource.
type OrganizationRoleArgs struct {
	// The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
	Deleted pulumi.BoolPtrInput
	// Optional. A human-readable description for the role.
	Description pulumi.StringPtrInput
	// Used to perform a consistent read-modify-write.
	Etag pulumi.StringPtrInput
	// The names of the permissions this role grants when bound in an IAM policy.
	IncludedPermissions pulumi.StringArrayInput
	// The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/my-role` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/my-role` for project-level custom roles.
	Name           pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.
	RoleId pulumi.StringPtrInput
	// The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
	Stage OrganizationRoleStagePtrInput
	// Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
	Title pulumi.StringPtrInput
}

func (OrganizationRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationRoleArgs)(nil)).Elem()
}

type OrganizationRoleInput interface {
	pulumi.Input

	ToOrganizationRoleOutput() OrganizationRoleOutput
	ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput
}

func (*OrganizationRole) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationRole)(nil)).Elem()
}

func (i *OrganizationRole) ToOrganizationRoleOutput() OrganizationRoleOutput {
	return i.ToOrganizationRoleOutputWithContext(context.Background())
}

func (i *OrganizationRole) ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRoleOutput)
}

func (i *OrganizationRole) ToOutput(ctx context.Context) pulumix.Output[*OrganizationRole] {
	return pulumix.Output[*OrganizationRole]{
		OutputState: i.ToOrganizationRoleOutputWithContext(ctx).OutputState,
	}
}

type OrganizationRoleOutput struct{ *pulumi.OutputState }

func (OrganizationRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationRole)(nil)).Elem()
}

func (o OrganizationRoleOutput) ToOrganizationRoleOutput() OrganizationRoleOutput {
	return o
}

func (o OrganizationRoleOutput) ToOrganizationRoleOutputWithContext(ctx context.Context) OrganizationRoleOutput {
	return o
}

func (o OrganizationRoleOutput) ToOutput(ctx context.Context) pulumix.Output[*OrganizationRole] {
	return pulumix.Output[*OrganizationRole]{
		OutputState: o.OutputState,
	}
}

// The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.
func (o OrganizationRoleOutput) Deleted() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.BoolOutput { return v.Deleted }).(pulumi.BoolOutput)
}

// Optional. A human-readable description for the role.
func (o OrganizationRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Used to perform a consistent read-modify-write.
func (o OrganizationRoleOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The names of the permissions this role grants when bound in an IAM policy.
func (o OrganizationRoleOutput) IncludedPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringArrayOutput { return v.IncludedPermissions }).(pulumi.StringArrayOutput)
}

// The name of the role. When `Role` is used in `CreateRole`, the role name must not be set. When `Role` is used in output and other input such as `UpdateRole`, the role name is the complete path. For example, `roles/logging.viewer` for predefined roles, `organizations/{ORGANIZATION_ID}/roles/my-role` for organization-level custom roles, and `projects/{PROJECT_ID}/roles/my-role` for project-level custom roles.
func (o OrganizationRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OrganizationRoleOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.
func (o OrganizationRoleOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.Stage }).(pulumi.StringOutput)
}

// Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.
func (o OrganizationRoleOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationRole) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationRoleInput)(nil)).Elem(), &OrganizationRole{})
	pulumi.RegisterOutputType(OrganizationRoleOutput{})
}
