// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of a specific share.
func LookupShare(ctx *pulumi.Context, args *LookupShareArgs, opts ...pulumi.InvokeOption) (*LookupShareResult, error) {
	var rv LookupShareResult
	err := ctx.Invoke("google-native:file/v1beta1:getShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupShareArgs struct {
	InstanceId string  `pulumi:"instanceId"`
	Location   string  `pulumi:"location"`
	Project    *string `pulumi:"project"`
	ShareId    string  `pulumi:"shareId"`
}

type LookupShareResult struct {
	// File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
	CapacityGb string `pulumi:"capacityGb"`
	// The time when the share was created.
	CreateTime string `pulumi:"createTime"`
	// A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description string `pulumi:"description"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
	MountName string `pulumi:"mountName"`
	// The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
	Name string `pulumi:"name"`
	// Nfs Export Options. There is a limit of 10 export options per file share.
	NfsExportOptions []NfsExportOptionsResponse `pulumi:"nfsExportOptions"`
	// The share state.
	State string `pulumi:"state"`
}

func LookupShareOutput(ctx *pulumi.Context, args LookupShareOutputArgs, opts ...pulumi.InvokeOption) LookupShareResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupShareResult, error) {
			args := v.(LookupShareArgs)
			r, err := LookupShare(ctx, &args, opts...)
			var s LookupShareResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupShareResultOutput)
}

type LookupShareOutputArgs struct {
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Location   pulumi.StringInput    `pulumi:"location"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	ShareId    pulumi.StringInput    `pulumi:"shareId"`
}

func (LookupShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareArgs)(nil)).Elem()
}

type LookupShareResultOutput struct{ *pulumi.OutputState }

func (LookupShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupShareResult)(nil)).Elem()
}

func (o LookupShareResultOutput) ToLookupShareResultOutput() LookupShareResultOutput {
	return o
}

func (o LookupShareResultOutput) ToLookupShareResultOutputWithContext(ctx context.Context) LookupShareResultOutput {
	return o
}

// File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
func (o LookupShareResultOutput) CapacityGb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.CapacityGb }).(pulumi.StringOutput)
}

// The time when the share was created.
func (o LookupShareResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
func (o LookupShareResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Description }).(pulumi.StringOutput)
}

// Resource labels to represent user provided metadata.
func (o LookupShareResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupShareResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
func (o LookupShareResultOutput) MountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.MountName }).(pulumi.StringOutput)
}

// The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
func (o LookupShareResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.Name }).(pulumi.StringOutput)
}

// Nfs Export Options. There is a limit of 10 export options per file share.
func (o LookupShareResultOutput) NfsExportOptions() NfsExportOptionsResponseArrayOutput {
	return o.ApplyT(func(v LookupShareResult) []NfsExportOptionsResponse { return v.NfsExportOptions }).(NfsExportOptionsResponseArrayOutput)
}

// The share state.
func (o LookupShareResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupShareResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupShareResultOutput{})
}
