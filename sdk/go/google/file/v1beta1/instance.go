// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an instance. When creating from a backup, the capacity of the new instance needs to be equal to or larger than the capacity of the backup (and also equal to or larger than the minimum capacity of the tier).
// Auto-naming is currently not supported for this resource.
type Instance struct {
	pulumi.CustomResourceState

	// The storage capacity of the instance in gigabytes (GB = 1024^3 bytes). This capacity can be increased up to `max_capacity_gb` GB in multipliers of `capacity_step_size_gb` GB.
	CapacityGb pulumi.StringOutput `pulumi:"capacityGb"`
	// The increase/decrease capacity step size.
	CapacityStepSizeGb pulumi.StringOutput `pulumi:"capacityStepSizeGb"`
	// The time when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the instance (2048 characters or less).
	Description pulumi.StringOutput `pulumi:"description"`
	// Directory Services configuration for Kerberos-based authentication. Should only be set if protocol is "NFS_V4_1".
	DirectoryServices DirectoryServicesConfigResponseOutput `pulumi:"directoryServices"`
	// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// File system shares on the instance. For this version, only a single file share is supported.
	FileShares FileShareConfigResponseArrayOutput `pulumi:"fileShares"`
	// Required. The ID of the instance to create. The ID must be unique within the specified project and location. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringOutput `pulumi:"kmsKeyName"`
	// Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The max capacity of the instance.
	MaxCapacityGb pulumi.StringOutput `pulumi:"maxCapacityGb"`
	// The max number of shares allowed.
	MaxShareCount pulumi.StringOutput `pulumi:"maxShareCount"`
	// Indicates whether this instance uses a multi-share configuration with which it can have more than one file-share or none at all. File-shares are added, updated and removed through the separate file-share APIs.
	MultiShareEnabled pulumi.BoolOutput `pulumi:"multiShareEnabled"`
	// The resource name of the instance, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}`.
	Name pulumi.StringOutput `pulumi:"name"`
	// VPC networks to which the instance is connected. For this version, only a single network is supported.
	Networks NetworkConfigResponseArrayOutput `pulumi:"networks"`
	Project  pulumi.StringOutput              `pulumi:"project"`
	// Immutable. The protocol indicates the access protocol for all shares in the instance. This field is immutable and it cannot be changed after the instance has been created. Default value: `NFS_V3`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Reserved for future use.
	SatisfiesPzi pulumi.BoolOutput `pulumi:"satisfiesPzi"`
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// The instance state.
	State pulumi.StringOutput `pulumi:"state"`
	// Additional information about the instance state, if available.
	StatusMessage pulumi.StringOutput `pulumi:"statusMessage"`
	// Field indicates all the reasons the instance is in "SUSPENDED" state.
	SuspensionReasons pulumi.StringArrayOutput `pulumi:"suspensionReasons"`
	// The service tier of the instance.
	Tier pulumi.StringOutput `pulumi:"tier"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"instanceId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("google-native:file/v1beta1:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("google-native:file/v1beta1:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
}

type InstanceState struct {
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// The storage capacity of the instance in gigabytes (GB = 1024^3 bytes). This capacity can be increased up to `max_capacity_gb` GB in multipliers of `capacity_step_size_gb` GB.
	CapacityGb *string `pulumi:"capacityGb"`
	// The description of the instance (2048 characters or less).
	Description *string `pulumi:"description"`
	// Directory Services configuration for Kerberos-based authentication. Should only be set if protocol is "NFS_V4_1".
	DirectoryServices *DirectoryServicesConfig `pulumi:"directoryServices"`
	// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
	Etag *string `pulumi:"etag"`
	// File system shares on the instance. For this version, only a single file share is supported.
	FileShares []FileShareConfig `pulumi:"fileShares"`
	// Required. The ID of the instance to create. The ID must be unique within the specified project and location. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
	InstanceId string `pulumi:"instanceId"`
	// KMS key name used for data encryption.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Resource labels to represent user provided metadata.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// The max number of shares allowed.
	MaxShareCount *string `pulumi:"maxShareCount"`
	// Indicates whether this instance uses a multi-share configuration with which it can have more than one file-share or none at all. File-shares are added, updated and removed through the separate file-share APIs.
	MultiShareEnabled *bool `pulumi:"multiShareEnabled"`
	// VPC networks to which the instance is connected. For this version, only a single network is supported.
	Networks []NetworkConfig `pulumi:"networks"`
	Project  *string         `pulumi:"project"`
	// Immutable. The protocol indicates the access protocol for all shares in the instance. This field is immutable and it cannot be changed after the instance has been created. Default value: `NFS_V3`.
	Protocol *InstanceProtocol `pulumi:"protocol"`
	// The service tier of the instance.
	Tier *InstanceTier `pulumi:"tier"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The storage capacity of the instance in gigabytes (GB = 1024^3 bytes). This capacity can be increased up to `max_capacity_gb` GB in multipliers of `capacity_step_size_gb` GB.
	CapacityGb pulumi.StringPtrInput
	// The description of the instance (2048 characters or less).
	Description pulumi.StringPtrInput
	// Directory Services configuration for Kerberos-based authentication. Should only be set if protocol is "NFS_V4_1".
	DirectoryServices DirectoryServicesConfigPtrInput
	// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
	Etag pulumi.StringPtrInput
	// File system shares on the instance. For this version, only a single file share is supported.
	FileShares FileShareConfigArrayInput
	// Required. The ID of the instance to create. The ID must be unique within the specified project and location. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
	InstanceId pulumi.StringInput
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringPtrInput
	// Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// The max number of shares allowed.
	MaxShareCount pulumi.StringPtrInput
	// Indicates whether this instance uses a multi-share configuration with which it can have more than one file-share or none at all. File-shares are added, updated and removed through the separate file-share APIs.
	MultiShareEnabled pulumi.BoolPtrInput
	// VPC networks to which the instance is connected. For this version, only a single network is supported.
	Networks NetworkConfigArrayInput
	Project  pulumi.StringPtrInput
	// Immutable. The protocol indicates the access protocol for all shares in the instance. This field is immutable and it cannot be changed after the instance has been created. Default value: `NFS_V3`.
	Protocol InstanceProtocolPtrInput
	// The service tier of the instance.
	Tier InstanceTierPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// The storage capacity of the instance in gigabytes (GB = 1024^3 bytes). This capacity can be increased up to `max_capacity_gb` GB in multipliers of `capacity_step_size_gb` GB.
func (o InstanceOutput) CapacityGb() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CapacityGb }).(pulumi.StringOutput)
}

// The increase/decrease capacity step size.
func (o InstanceOutput) CapacityStepSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CapacityStepSizeGb }).(pulumi.StringOutput)
}

// The time when the instance was created.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the instance (2048 characters or less).
func (o InstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Directory Services configuration for Kerberos-based authentication. Should only be set if protocol is "NFS_V4_1".
func (o InstanceOutput) DirectoryServices() DirectoryServicesConfigResponseOutput {
	return o.ApplyT(func(v *Instance) DirectoryServicesConfigResponseOutput { return v.DirectoryServices }).(DirectoryServicesConfigResponseOutput)
}

// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
func (o InstanceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// File system shares on the instance. For this version, only a single file share is supported.
func (o InstanceOutput) FileShares() FileShareConfigResponseArrayOutput {
	return o.ApplyT(func(v *Instance) FileShareConfigResponseArrayOutput { return v.FileShares }).(FileShareConfigResponseArrayOutput)
}

// Required. The ID of the instance to create. The ID must be unique within the specified project and location. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// KMS key name used for data encryption.
func (o InstanceOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.KmsKeyName }).(pulumi.StringOutput)
}

// Resource labels to represent user provided metadata.
func (o InstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o InstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The max capacity of the instance.
func (o InstanceOutput) MaxCapacityGb() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaxCapacityGb }).(pulumi.StringOutput)
}

// The max number of shares allowed.
func (o InstanceOutput) MaxShareCount() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaxShareCount }).(pulumi.StringOutput)
}

// Indicates whether this instance uses a multi-share configuration with which it can have more than one file-share or none at all. File-shares are added, updated and removed through the separate file-share APIs.
func (o InstanceOutput) MultiShareEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.MultiShareEnabled }).(pulumi.BoolOutput)
}

// The resource name of the instance, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}`.
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// VPC networks to which the instance is connected. For this version, only a single network is supported.
func (o InstanceOutput) Networks() NetworkConfigResponseArrayOutput {
	return o.ApplyT(func(v *Instance) NetworkConfigResponseArrayOutput { return v.Networks }).(NetworkConfigResponseArrayOutput)
}

func (o InstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Immutable. The protocol indicates the access protocol for all shares in the instance. This field is immutable and it cannot be changed after the instance has been created. Default value: `NFS_V3`.
func (o InstanceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Reserved for future use.
func (o InstanceOutput) SatisfiesPzi() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.SatisfiesPzi }).(pulumi.BoolOutput)
}

// Reserved for future use.
func (o InstanceOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// The instance state.
func (o InstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Additional information about the instance state, if available.
func (o InstanceOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StatusMessage }).(pulumi.StringOutput)
}

// Field indicates all the reasons the instance is in "SUSPENDED" state.
func (o InstanceOutput) SuspensionReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SuspensionReasons }).(pulumi.StringArrayOutput)
}

// The service tier of the instance.
func (o InstanceOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterOutputType(InstanceOutput{})
}
