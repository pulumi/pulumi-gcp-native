// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns information about a data transfer config.
func LookupTransferConfig(ctx *pulumi.Context, args *LookupTransferConfigArgs, opts ...pulumi.InvokeOption) (*LookupTransferConfigResult, error) {
	var rv LookupTransferConfigResult
	err := ctx.Invoke("google-native:bigquerydatatransfer/v1:getTransferConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransferConfigArgs struct {
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
	TransferConfigId string  `pulumi:"transferConfigId"`
}

type LookupTransferConfigResult struct {
	// The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.
	DataRefreshWindowDays int `pulumi:"dataRefreshWindowDays"`
	// Data source id. Cannot be changed once data transfer is created.
	DataSourceId string `pulumi:"dataSourceId"`
	// Region in which BigQuery dataset is located.
	DatasetRegion string `pulumi:"datasetRegion"`
	// The BigQuery target dataset id.
	DestinationDatasetId string `pulumi:"destinationDatasetId"`
	// Is this config disabled. When set to true, no runs are scheduled for a given transfer.
	Disabled bool `pulumi:"disabled"`
	// User specified display name for the data transfer.
	DisplayName string `pulumi:"displayName"`
	// Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config.
	EmailPreferences EmailPreferencesResponse `pulumi:"emailPreferences"`
	// The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.
	Name string `pulumi:"name"`
	// Next time when data transfer will run.
	NextRunTime string `pulumi:"nextRunTime"`
	// Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.
	NotificationPubsubTopic string `pulumi:"notificationPubsubTopic"`
	// Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq
	Params map[string]string `pulumi:"params"`
	// Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent.
	Schedule string `pulumi:"schedule"`
	// Options customizing the data transfer schedule.
	ScheduleOptions ScheduleOptionsResponse `pulumi:"scheduleOptions"`
	// State of the most recently updated transfer run.
	State string `pulumi:"state"`
	// Data transfer modification time. Ignored by server on input.
	UpdateTime string `pulumi:"updateTime"`
}
