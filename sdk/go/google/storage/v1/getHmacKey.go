// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves an HMAC key's metadata
func LookupHmacKey(ctx *pulumi.Context, args *LookupHmacKeyArgs, opts ...pulumi.InvokeOption) (*LookupHmacKeyResult, error) {
	var rv LookupHmacKeyResult
	err := ctx.Invoke("google-native:storage/v1:getHmacKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupHmacKeyArgs struct {
	AccessId    string  `pulumi:"accessId"`
	Project     *string `pulumi:"project"`
	UserProject *string `pulumi:"userProject"`
}

type LookupHmacKeyResult struct {
	// The ID of the HMAC Key.
	AccessId string `pulumi:"accessId"`
	// HTTP 1.1 Entity tag for the HMAC key.
	Etag string `pulumi:"etag"`
	// The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.
	Kind string `pulumi:"kind"`
	// Project ID owning the service account to which the key authenticates.
	Project string `pulumi:"project"`
	// The link to this resource.
	SelfLink string `pulumi:"selfLink"`
	// The email address of the key's associated service account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.
	State string `pulumi:"state"`
	// The creation time of the HMAC key in RFC 3339 format.
	TimeCreated string `pulumi:"timeCreated"`
	// The last modification time of the HMAC key metadata in RFC 3339 format.
	Updated string `pulumi:"updated"`
}

func LookupHmacKeyOutput(ctx *pulumi.Context, args LookupHmacKeyOutputArgs, opts ...pulumi.InvokeOption) LookupHmacKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHmacKeyResult, error) {
			args := v.(LookupHmacKeyArgs)
			r, err := LookupHmacKey(ctx, &args, opts...)
			var s LookupHmacKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHmacKeyResultOutput)
}

type LookupHmacKeyOutputArgs struct {
	AccessId    pulumi.StringInput    `pulumi:"accessId"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
	UserProject pulumi.StringPtrInput `pulumi:"userProject"`
}

func (LookupHmacKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHmacKeyArgs)(nil)).Elem()
}

type LookupHmacKeyResultOutput struct{ *pulumi.OutputState }

func (LookupHmacKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHmacKeyResult)(nil)).Elem()
}

func (o LookupHmacKeyResultOutput) ToLookupHmacKeyResultOutput() LookupHmacKeyResultOutput {
	return o
}

func (o LookupHmacKeyResultOutput) ToLookupHmacKeyResultOutputWithContext(ctx context.Context) LookupHmacKeyResultOutput {
	return o
}

// The ID of the HMAC Key.
func (o LookupHmacKeyResultOutput) AccessId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.AccessId }).(pulumi.StringOutput)
}

// HTTP 1.1 Entity tag for the HMAC key.
func (o LookupHmacKeyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.
func (o LookupHmacKeyResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Project ID owning the service account to which the key authenticates.
func (o LookupHmacKeyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.Project }).(pulumi.StringOutput)
}

// The link to this resource.
func (o LookupHmacKeyResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The email address of the key's associated service account.
func (o LookupHmacKeyResultOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.
func (o LookupHmacKeyResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.State }).(pulumi.StringOutput)
}

// The creation time of the HMAC key in RFC 3339 format.
func (o LookupHmacKeyResultOutput) TimeCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.TimeCreated }).(pulumi.StringOutput)
}

// The last modification time of the HMAC key metadata in RFC 3339 format.
func (o LookupHmacKeyResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHmacKeyResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHmacKeyResultOutput{})
}
