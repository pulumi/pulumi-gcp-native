// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns metadata of the specified managed folder.
func LookupManagedFolder(ctx *pulumi.Context, args *LookupManagedFolderArgs, opts ...pulumi.InvokeOption) (*LookupManagedFolderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedFolderResult
	err := ctx.Invoke("google-native:storage/v1:getManagedFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedFolderArgs struct {
	Bucket                   string  `pulumi:"bucket"`
	IfMetagenerationMatch    *string `pulumi:"ifMetagenerationMatch"`
	IfMetagenerationNotMatch *string `pulumi:"ifMetagenerationNotMatch"`
	ManagedFolder            string  `pulumi:"managedFolder"`
}

type LookupManagedFolderResult struct {
	// The name of the bucket containing this managed folder.
	Bucket string `pulumi:"bucket"`
	// The creation time of the managed folder in RFC 3339 format.
	CreateTime string `pulumi:"createTime"`
	// The kind of item this is. For managed folders, this is always storage#managedFolder.
	Kind string `pulumi:"kind"`
	// The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.
	Metageneration string `pulumi:"metageneration"`
	// The name of the managed folder. Required if not specified by URL parameter.
	Name string `pulumi:"name"`
	// The link to this managed folder.
	SelfLink string `pulumi:"selfLink"`
	// The last update time of the managed folder metadata in RFC 3339 format.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupManagedFolderOutput(ctx *pulumi.Context, args LookupManagedFolderOutputArgs, opts ...pulumi.InvokeOption) LookupManagedFolderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedFolderResult, error) {
			args := v.(LookupManagedFolderArgs)
			r, err := LookupManagedFolder(ctx, &args, opts...)
			var s LookupManagedFolderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedFolderResultOutput)
}

type LookupManagedFolderOutputArgs struct {
	Bucket                   pulumi.StringInput    `pulumi:"bucket"`
	IfMetagenerationMatch    pulumi.StringPtrInput `pulumi:"ifMetagenerationMatch"`
	IfMetagenerationNotMatch pulumi.StringPtrInput `pulumi:"ifMetagenerationNotMatch"`
	ManagedFolder            pulumi.StringInput    `pulumi:"managedFolder"`
}

func (LookupManagedFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedFolderArgs)(nil)).Elem()
}

type LookupManagedFolderResultOutput struct{ *pulumi.OutputState }

func (LookupManagedFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedFolderResult)(nil)).Elem()
}

func (o LookupManagedFolderResultOutput) ToLookupManagedFolderResultOutput() LookupManagedFolderResultOutput {
	return o
}

func (o LookupManagedFolderResultOutput) ToLookupManagedFolderResultOutputWithContext(ctx context.Context) LookupManagedFolderResultOutput {
	return o
}

func (o LookupManagedFolderResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupManagedFolderResult] {
	return pulumix.Output[LookupManagedFolderResult]{
		OutputState: o.OutputState,
	}
}

// The name of the bucket containing this managed folder.
func (o LookupManagedFolderResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The creation time of the managed folder in RFC 3339 format.
func (o LookupManagedFolderResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The kind of item this is. For managed folders, this is always storage#managedFolder.
func (o LookupManagedFolderResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.
func (o LookupManagedFolderResultOutput) Metageneration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.Metageneration }).(pulumi.StringOutput)
}

// The name of the managed folder. Required if not specified by URL parameter.
func (o LookupManagedFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// The link to this managed folder.
func (o LookupManagedFolderResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The last update time of the managed folder metadata in RFC 3339 format.
func (o LookupManagedFolderResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedFolderResultOutput{})
}
