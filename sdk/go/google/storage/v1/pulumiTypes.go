// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An access-control entry.
type BucketAccessControlType struct {
	// The name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain *string `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email *string `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity *string `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId *string `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag *string `pulumi:"etag"`
	// The ID of the access-control entry.
	Id *string `pulumi:"id"`
	// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
	Kind *string `pulumi:"kind"`
	// The project team associated with the entity, if any.
	ProjectTeam *BucketAccessControlProjectTeam `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role *string `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink *string `pulumi:"selfLink"`
}

// BucketAccessControlTypeInput is an input type that accepts BucketAccessControlTypeArgs and BucketAccessControlTypeOutput values.
// You can construct a concrete instance of `BucketAccessControlTypeInput` via:
//
//          BucketAccessControlTypeArgs{...}
type BucketAccessControlTypeInput interface {
	pulumi.Input

	ToBucketAccessControlTypeOutput() BucketAccessControlTypeOutput
	ToBucketAccessControlTypeOutputWithContext(context.Context) BucketAccessControlTypeOutput
}

// An access-control entry.
type BucketAccessControlTypeArgs struct {
	// The name of the bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity pulumi.StringPtrInput `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The ID of the access-control entry.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The project team associated with the entity, if any.
	ProjectTeam BucketAccessControlProjectTeamPtrInput `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
}

func (BucketAccessControlTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlType)(nil)).Elem()
}

func (i BucketAccessControlTypeArgs) ToBucketAccessControlTypeOutput() BucketAccessControlTypeOutput {
	return i.ToBucketAccessControlTypeOutputWithContext(context.Background())
}

func (i BucketAccessControlTypeArgs) ToBucketAccessControlTypeOutputWithContext(ctx context.Context) BucketAccessControlTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlTypeOutput)
}

// BucketAccessControlTypeArrayInput is an input type that accepts BucketAccessControlTypeArray and BucketAccessControlTypeArrayOutput values.
// You can construct a concrete instance of `BucketAccessControlTypeArrayInput` via:
//
//          BucketAccessControlTypeArray{ BucketAccessControlTypeArgs{...} }
type BucketAccessControlTypeArrayInput interface {
	pulumi.Input

	ToBucketAccessControlTypeArrayOutput() BucketAccessControlTypeArrayOutput
	ToBucketAccessControlTypeArrayOutputWithContext(context.Context) BucketAccessControlTypeArrayOutput
}

type BucketAccessControlTypeArray []BucketAccessControlTypeInput

func (BucketAccessControlTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccessControlType)(nil)).Elem()
}

func (i BucketAccessControlTypeArray) ToBucketAccessControlTypeArrayOutput() BucketAccessControlTypeArrayOutput {
	return i.ToBucketAccessControlTypeArrayOutputWithContext(context.Background())
}

func (i BucketAccessControlTypeArray) ToBucketAccessControlTypeArrayOutputWithContext(ctx context.Context) BucketAccessControlTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlTypeArrayOutput)
}

// An access-control entry.
type BucketAccessControlTypeOutput struct{ *pulumi.OutputState }

func (BucketAccessControlTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlType)(nil)).Elem()
}

func (o BucketAccessControlTypeOutput) ToBucketAccessControlTypeOutput() BucketAccessControlTypeOutput {
	return o
}

func (o BucketAccessControlTypeOutput) ToBucketAccessControlTypeOutputWithContext(ctx context.Context) BucketAccessControlTypeOutput {
	return o
}

// The name of the bucket.
func (o BucketAccessControlTypeOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The domain associated with the entity, if any.
func (o BucketAccessControlTypeOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The email address associated with the entity, if any.
func (o BucketAccessControlTypeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The entity holding the permission, in one of the following forms:
// - user-userId
// - user-email
// - group-groupId
// - group-email
// - domain-domain
// - project-team-projectId
// - allUsers
// - allAuthenticatedUsers Examples:
// - The user liz@example.com would be user-liz@example.com.
// - The group example@googlegroups.com would be group-example@googlegroups.com.
// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
func (o BucketAccessControlTypeOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// The ID for the entity, if any.
func (o BucketAccessControlTypeOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// HTTP 1.1 Entity tag for the access-control entry.
func (o BucketAccessControlTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The ID of the access-control entry.
func (o BucketAccessControlTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
func (o BucketAccessControlTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
func (o BucketAccessControlTypeOutput) ProjectTeam() BucketAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *BucketAccessControlProjectTeam { return v.ProjectTeam }).(BucketAccessControlProjectTeamPtrOutput)
}

// The access permission for the entity.
func (o BucketAccessControlTypeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The link to this access-control entry.
func (o BucketAccessControlTypeOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlType) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

type BucketAccessControlTypeArrayOutput struct{ *pulumi.OutputState }

func (BucketAccessControlTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccessControlType)(nil)).Elem()
}

func (o BucketAccessControlTypeArrayOutput) ToBucketAccessControlTypeArrayOutput() BucketAccessControlTypeArrayOutput {
	return o
}

func (o BucketAccessControlTypeArrayOutput) ToBucketAccessControlTypeArrayOutputWithContext(ctx context.Context) BucketAccessControlTypeArrayOutput {
	return o
}

func (o BucketAccessControlTypeArrayOutput) Index(i pulumi.IntInput) BucketAccessControlTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketAccessControlType {
		return vs[0].([]BucketAccessControlType)[vs[1].(int)]
	}).(BucketAccessControlTypeOutput)
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeam struct {
	// The project number.
	ProjectNumber *string `pulumi:"projectNumber"`
	// The team.
	Team *string `pulumi:"team"`
}

// BucketAccessControlProjectTeamInput is an input type that accepts BucketAccessControlProjectTeamArgs and BucketAccessControlProjectTeamOutput values.
// You can construct a concrete instance of `BucketAccessControlProjectTeamInput` via:
//
//          BucketAccessControlProjectTeamArgs{...}
type BucketAccessControlProjectTeamInput interface {
	pulumi.Input

	ToBucketAccessControlProjectTeamOutput() BucketAccessControlProjectTeamOutput
	ToBucketAccessControlProjectTeamOutputWithContext(context.Context) BucketAccessControlProjectTeamOutput
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeamArgs struct {
	// The project number.
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringPtrInput `pulumi:"team"`
}

func (BucketAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlProjectTeam)(nil)).Elem()
}

func (i BucketAccessControlProjectTeamArgs) ToBucketAccessControlProjectTeamOutput() BucketAccessControlProjectTeamOutput {
	return i.ToBucketAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i BucketAccessControlProjectTeamArgs) ToBucketAccessControlProjectTeamOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamOutput)
}

func (i BucketAccessControlProjectTeamArgs) ToBucketAccessControlProjectTeamPtrOutput() BucketAccessControlProjectTeamPtrOutput {
	return i.ToBucketAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i BucketAccessControlProjectTeamArgs) ToBucketAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamOutput).ToBucketAccessControlProjectTeamPtrOutputWithContext(ctx)
}

// BucketAccessControlProjectTeamPtrInput is an input type that accepts BucketAccessControlProjectTeamArgs, BucketAccessControlProjectTeamPtr and BucketAccessControlProjectTeamPtrOutput values.
// You can construct a concrete instance of `BucketAccessControlProjectTeamPtrInput` via:
//
//          BucketAccessControlProjectTeamArgs{...}
//
//  or:
//
//          nil
type BucketAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToBucketAccessControlProjectTeamPtrOutput() BucketAccessControlProjectTeamPtrOutput
	ToBucketAccessControlProjectTeamPtrOutputWithContext(context.Context) BucketAccessControlProjectTeamPtrOutput
}

type bucketAccessControlProjectTeamPtrType BucketAccessControlProjectTeamArgs

func BucketAccessControlProjectTeamPtr(v *BucketAccessControlProjectTeamArgs) BucketAccessControlProjectTeamPtrInput {
	return (*bucketAccessControlProjectTeamPtrType)(v)
}

func (*bucketAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlProjectTeam)(nil)).Elem()
}

func (i *bucketAccessControlProjectTeamPtrType) ToBucketAccessControlProjectTeamPtrOutput() BucketAccessControlProjectTeamPtrOutput {
	return i.ToBucketAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *bucketAccessControlProjectTeamPtrType) ToBucketAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamPtrOutput)
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (BucketAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlProjectTeam)(nil)).Elem()
}

func (o BucketAccessControlProjectTeamOutput) ToBucketAccessControlProjectTeamOutput() BucketAccessControlProjectTeamOutput {
	return o
}

func (o BucketAccessControlProjectTeamOutput) ToBucketAccessControlProjectTeamOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamOutput {
	return o
}

func (o BucketAccessControlProjectTeamOutput) ToBucketAccessControlProjectTeamPtrOutput() BucketAccessControlProjectTeamPtrOutput {
	return o.ToBucketAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o BucketAccessControlProjectTeamOutput) ToBucketAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeam) *BucketAccessControlProjectTeam {
		return &v
	}).(BucketAccessControlProjectTeamPtrOutput)
}

// The project number.
func (o BucketAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

// The team.
func (o BucketAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type BucketAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (BucketAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlProjectTeam)(nil)).Elem()
}

func (o BucketAccessControlProjectTeamPtrOutput) ToBucketAccessControlProjectTeamPtrOutput() BucketAccessControlProjectTeamPtrOutput {
	return o
}

func (o BucketAccessControlProjectTeamPtrOutput) ToBucketAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamPtrOutput {
	return o
}

func (o BucketAccessControlProjectTeamPtrOutput) Elem() BucketAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeam) BucketAccessControlProjectTeam { return *v }).(BucketAccessControlProjectTeamOutput)
}

// The project number.
func (o BucketAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o BucketAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeamResponse struct {
	// The project number.
	ProjectNumber string `pulumi:"projectNumber"`
	// The team.
	Team string `pulumi:"team"`
}

// BucketAccessControlProjectTeamResponseInput is an input type that accepts BucketAccessControlProjectTeamResponseArgs and BucketAccessControlProjectTeamResponseOutput values.
// You can construct a concrete instance of `BucketAccessControlProjectTeamResponseInput` via:
//
//          BucketAccessControlProjectTeamResponseArgs{...}
type BucketAccessControlProjectTeamResponseInput interface {
	pulumi.Input

	ToBucketAccessControlProjectTeamResponseOutput() BucketAccessControlProjectTeamResponseOutput
	ToBucketAccessControlProjectTeamResponseOutputWithContext(context.Context) BucketAccessControlProjectTeamResponseOutput
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeamResponseArgs struct {
	// The project number.
	ProjectNumber pulumi.StringInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringInput `pulumi:"team"`
}

func (BucketAccessControlProjectTeamResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i BucketAccessControlProjectTeamResponseArgs) ToBucketAccessControlProjectTeamResponseOutput() BucketAccessControlProjectTeamResponseOutput {
	return i.ToBucketAccessControlProjectTeamResponseOutputWithContext(context.Background())
}

func (i BucketAccessControlProjectTeamResponseArgs) ToBucketAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamResponseOutput)
}

func (i BucketAccessControlProjectTeamResponseArgs) ToBucketAccessControlProjectTeamResponsePtrOutput() BucketAccessControlProjectTeamResponsePtrOutput {
	return i.ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i BucketAccessControlProjectTeamResponseArgs) ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamResponseOutput).ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(ctx)
}

// BucketAccessControlProjectTeamResponsePtrInput is an input type that accepts BucketAccessControlProjectTeamResponseArgs, BucketAccessControlProjectTeamResponsePtr and BucketAccessControlProjectTeamResponsePtrOutput values.
// You can construct a concrete instance of `BucketAccessControlProjectTeamResponsePtrInput` via:
//
//          BucketAccessControlProjectTeamResponseArgs{...}
//
//  or:
//
//          nil
type BucketAccessControlProjectTeamResponsePtrInput interface {
	pulumi.Input

	ToBucketAccessControlProjectTeamResponsePtrOutput() BucketAccessControlProjectTeamResponsePtrOutput
	ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(context.Context) BucketAccessControlProjectTeamResponsePtrOutput
}

type bucketAccessControlProjectTeamResponsePtrType BucketAccessControlProjectTeamResponseArgs

func BucketAccessControlProjectTeamResponsePtr(v *BucketAccessControlProjectTeamResponseArgs) BucketAccessControlProjectTeamResponsePtrInput {
	return (*bucketAccessControlProjectTeamResponsePtrType)(v)
}

func (*bucketAccessControlProjectTeamResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i *bucketAccessControlProjectTeamResponsePtrType) ToBucketAccessControlProjectTeamResponsePtrOutput() BucketAccessControlProjectTeamResponsePtrOutput {
	return i.ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i *bucketAccessControlProjectTeamResponsePtrType) ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlProjectTeamResponsePtrOutput)
}

// The project team associated with the entity, if any.
type BucketAccessControlProjectTeamResponseOutput struct{ *pulumi.OutputState }

func (BucketAccessControlProjectTeamResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o BucketAccessControlProjectTeamResponseOutput) ToBucketAccessControlProjectTeamResponseOutput() BucketAccessControlProjectTeamResponseOutput {
	return o
}

func (o BucketAccessControlProjectTeamResponseOutput) ToBucketAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponseOutput {
	return o
}

func (o BucketAccessControlProjectTeamResponseOutput) ToBucketAccessControlProjectTeamResponsePtrOutput() BucketAccessControlProjectTeamResponsePtrOutput {
	return o.ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (o BucketAccessControlProjectTeamResponseOutput) ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponsePtrOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeamResponse) *BucketAccessControlProjectTeamResponse {
		return &v
	}).(BucketAccessControlProjectTeamResponsePtrOutput)
}

// The project number.
func (o BucketAccessControlProjectTeamResponseOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeamResponse) string { return v.ProjectNumber }).(pulumi.StringOutput)
}

// The team.
func (o BucketAccessControlProjectTeamResponseOutput) Team() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlProjectTeamResponse) string { return v.Team }).(pulumi.StringOutput)
}

type BucketAccessControlProjectTeamResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketAccessControlProjectTeamResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o BucketAccessControlProjectTeamResponsePtrOutput) ToBucketAccessControlProjectTeamResponsePtrOutput() BucketAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o BucketAccessControlProjectTeamResponsePtrOutput) ToBucketAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) BucketAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o BucketAccessControlProjectTeamResponsePtrOutput) Elem() BucketAccessControlProjectTeamResponseOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeamResponse) BucketAccessControlProjectTeamResponse { return *v }).(BucketAccessControlProjectTeamResponseOutput)
}

// The project number.
func (o BucketAccessControlProjectTeamResponsePtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o BucketAccessControlProjectTeamResponsePtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Team
	}).(pulumi.StringPtrOutput)
}

// An access-control entry.
type BucketAccessControlResponse struct {
	// The name of the bucket.
	Bucket string `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain string `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email string `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity string `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId string `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag string `pulumi:"etag"`
	// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
	Kind string `pulumi:"kind"`
	// The project team associated with the entity, if any.
	ProjectTeam BucketAccessControlProjectTeamResponse `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role string `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink string `pulumi:"selfLink"`
}

// BucketAccessControlResponseInput is an input type that accepts BucketAccessControlResponseArgs and BucketAccessControlResponseOutput values.
// You can construct a concrete instance of `BucketAccessControlResponseInput` via:
//
//          BucketAccessControlResponseArgs{...}
type BucketAccessControlResponseInput interface {
	pulumi.Input

	ToBucketAccessControlResponseOutput() BucketAccessControlResponseOutput
	ToBucketAccessControlResponseOutputWithContext(context.Context) BucketAccessControlResponseOutput
}

// An access-control entry.
type BucketAccessControlResponseArgs struct {
	// The name of the bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email pulumi.StringInput `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity pulumi.StringInput `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The project team associated with the entity, if any.
	ProjectTeam BucketAccessControlProjectTeamResponseInput `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role pulumi.StringInput `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink pulumi.StringInput `pulumi:"selfLink"`
}

func (BucketAccessControlResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlResponse)(nil)).Elem()
}

func (i BucketAccessControlResponseArgs) ToBucketAccessControlResponseOutput() BucketAccessControlResponseOutput {
	return i.ToBucketAccessControlResponseOutputWithContext(context.Background())
}

func (i BucketAccessControlResponseArgs) ToBucketAccessControlResponseOutputWithContext(ctx context.Context) BucketAccessControlResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlResponseOutput)
}

// BucketAccessControlResponseArrayInput is an input type that accepts BucketAccessControlResponseArray and BucketAccessControlResponseArrayOutput values.
// You can construct a concrete instance of `BucketAccessControlResponseArrayInput` via:
//
//          BucketAccessControlResponseArray{ BucketAccessControlResponseArgs{...} }
type BucketAccessControlResponseArrayInput interface {
	pulumi.Input

	ToBucketAccessControlResponseArrayOutput() BucketAccessControlResponseArrayOutput
	ToBucketAccessControlResponseArrayOutputWithContext(context.Context) BucketAccessControlResponseArrayOutput
}

type BucketAccessControlResponseArray []BucketAccessControlResponseInput

func (BucketAccessControlResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccessControlResponse)(nil)).Elem()
}

func (i BucketAccessControlResponseArray) ToBucketAccessControlResponseArrayOutput() BucketAccessControlResponseArrayOutput {
	return i.ToBucketAccessControlResponseArrayOutputWithContext(context.Background())
}

func (i BucketAccessControlResponseArray) ToBucketAccessControlResponseArrayOutputWithContext(ctx context.Context) BucketAccessControlResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessControlResponseArrayOutput)
}

// An access-control entry.
type BucketAccessControlResponseOutput struct{ *pulumi.OutputState }

func (BucketAccessControlResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessControlResponse)(nil)).Elem()
}

func (o BucketAccessControlResponseOutput) ToBucketAccessControlResponseOutput() BucketAccessControlResponseOutput {
	return o
}

func (o BucketAccessControlResponseOutput) ToBucketAccessControlResponseOutputWithContext(ctx context.Context) BucketAccessControlResponseOutput {
	return o
}

// The name of the bucket.
func (o BucketAccessControlResponseOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Bucket }).(pulumi.StringOutput)
}

// The domain associated with the entity, if any.
func (o BucketAccessControlResponseOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Domain }).(pulumi.StringOutput)
}

// The email address associated with the entity, if any.
func (o BucketAccessControlResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The entity holding the permission, in one of the following forms:
// - user-userId
// - user-email
// - group-groupId
// - group-email
// - domain-domain
// - project-team-projectId
// - allUsers
// - allAuthenticatedUsers Examples:
// - The user liz@example.com would be user-liz@example.com.
// - The group example@googlegroups.com would be group-example@googlegroups.com.
// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
func (o BucketAccessControlResponseOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Entity }).(pulumi.StringOutput)
}

// The ID for the entity, if any.
func (o BucketAccessControlResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

// HTTP 1.1 Entity tag for the access-control entry.
func (o BucketAccessControlResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
func (o BucketAccessControlResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The project team associated with the entity, if any.
func (o BucketAccessControlResponseOutput) ProjectTeam() BucketAccessControlProjectTeamResponseOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) BucketAccessControlProjectTeamResponse { return v.ProjectTeam }).(BucketAccessControlProjectTeamResponseOutput)
}

// The access permission for the entity.
func (o BucketAccessControlResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The link to this access-control entry.
func (o BucketAccessControlResponseOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccessControlResponse) string { return v.SelfLink }).(pulumi.StringOutput)
}

type BucketAccessControlResponseArrayOutput struct{ *pulumi.OutputState }

func (BucketAccessControlResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccessControlResponse)(nil)).Elem()
}

func (o BucketAccessControlResponseArrayOutput) ToBucketAccessControlResponseArrayOutput() BucketAccessControlResponseArrayOutput {
	return o
}

func (o BucketAccessControlResponseArrayOutput) ToBucketAccessControlResponseArrayOutputWithContext(ctx context.Context) BucketAccessControlResponseArrayOutput {
	return o
}

func (o BucketAccessControlResponseArrayOutput) Index(i pulumi.IntInput) BucketAccessControlResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketAccessControlResponse {
		return vs[0].([]BucketAccessControlResponse)[vs[1].(int)]
	}).(BucketAccessControlResponseOutput)
}

// The bucket's billing configuration.
type BucketBilling struct {
	// When set to true, Requester Pays is enabled for this bucket.
	RequesterPays *bool `pulumi:"requesterPays"`
}

// BucketBillingInput is an input type that accepts BucketBillingArgs and BucketBillingOutput values.
// You can construct a concrete instance of `BucketBillingInput` via:
//
//          BucketBillingArgs{...}
type BucketBillingInput interface {
	pulumi.Input

	ToBucketBillingOutput() BucketBillingOutput
	ToBucketBillingOutputWithContext(context.Context) BucketBillingOutput
}

// The bucket's billing configuration.
type BucketBillingArgs struct {
	// When set to true, Requester Pays is enabled for this bucket.
	RequesterPays pulumi.BoolPtrInput `pulumi:"requesterPays"`
}

func (BucketBillingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketBilling)(nil)).Elem()
}

func (i BucketBillingArgs) ToBucketBillingOutput() BucketBillingOutput {
	return i.ToBucketBillingOutputWithContext(context.Background())
}

func (i BucketBillingArgs) ToBucketBillingOutputWithContext(ctx context.Context) BucketBillingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingOutput)
}

func (i BucketBillingArgs) ToBucketBillingPtrOutput() BucketBillingPtrOutput {
	return i.ToBucketBillingPtrOutputWithContext(context.Background())
}

func (i BucketBillingArgs) ToBucketBillingPtrOutputWithContext(ctx context.Context) BucketBillingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingOutput).ToBucketBillingPtrOutputWithContext(ctx)
}

// BucketBillingPtrInput is an input type that accepts BucketBillingArgs, BucketBillingPtr and BucketBillingPtrOutput values.
// You can construct a concrete instance of `BucketBillingPtrInput` via:
//
//          BucketBillingArgs{...}
//
//  or:
//
//          nil
type BucketBillingPtrInput interface {
	pulumi.Input

	ToBucketBillingPtrOutput() BucketBillingPtrOutput
	ToBucketBillingPtrOutputWithContext(context.Context) BucketBillingPtrOutput
}

type bucketBillingPtrType BucketBillingArgs

func BucketBillingPtr(v *BucketBillingArgs) BucketBillingPtrInput {
	return (*bucketBillingPtrType)(v)
}

func (*bucketBillingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketBilling)(nil)).Elem()
}

func (i *bucketBillingPtrType) ToBucketBillingPtrOutput() BucketBillingPtrOutput {
	return i.ToBucketBillingPtrOutputWithContext(context.Background())
}

func (i *bucketBillingPtrType) ToBucketBillingPtrOutputWithContext(ctx context.Context) BucketBillingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingPtrOutput)
}

// The bucket's billing configuration.
type BucketBillingOutput struct{ *pulumi.OutputState }

func (BucketBillingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketBilling)(nil)).Elem()
}

func (o BucketBillingOutput) ToBucketBillingOutput() BucketBillingOutput {
	return o
}

func (o BucketBillingOutput) ToBucketBillingOutputWithContext(ctx context.Context) BucketBillingOutput {
	return o
}

func (o BucketBillingOutput) ToBucketBillingPtrOutput() BucketBillingPtrOutput {
	return o.ToBucketBillingPtrOutputWithContext(context.Background())
}

func (o BucketBillingOutput) ToBucketBillingPtrOutputWithContext(ctx context.Context) BucketBillingPtrOutput {
	return o.ApplyT(func(v BucketBilling) *BucketBilling {
		return &v
	}).(BucketBillingPtrOutput)
}

// When set to true, Requester Pays is enabled for this bucket.
func (o BucketBillingOutput) RequesterPays() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketBilling) *bool { return v.RequesterPays }).(pulumi.BoolPtrOutput)
}

type BucketBillingPtrOutput struct{ *pulumi.OutputState }

func (BucketBillingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketBilling)(nil)).Elem()
}

func (o BucketBillingPtrOutput) ToBucketBillingPtrOutput() BucketBillingPtrOutput {
	return o
}

func (o BucketBillingPtrOutput) ToBucketBillingPtrOutputWithContext(ctx context.Context) BucketBillingPtrOutput {
	return o
}

func (o BucketBillingPtrOutput) Elem() BucketBillingOutput {
	return o.ApplyT(func(v *BucketBilling) BucketBilling { return *v }).(BucketBillingOutput)
}

// When set to true, Requester Pays is enabled for this bucket.
func (o BucketBillingPtrOutput) RequesterPays() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketBilling) *bool {
		if v == nil {
			return nil
		}
		return v.RequesterPays
	}).(pulumi.BoolPtrOutput)
}

// The bucket's billing configuration.
type BucketBillingResponse struct {
	// When set to true, Requester Pays is enabled for this bucket.
	RequesterPays bool `pulumi:"requesterPays"`
}

// BucketBillingResponseInput is an input type that accepts BucketBillingResponseArgs and BucketBillingResponseOutput values.
// You can construct a concrete instance of `BucketBillingResponseInput` via:
//
//          BucketBillingResponseArgs{...}
type BucketBillingResponseInput interface {
	pulumi.Input

	ToBucketBillingResponseOutput() BucketBillingResponseOutput
	ToBucketBillingResponseOutputWithContext(context.Context) BucketBillingResponseOutput
}

// The bucket's billing configuration.
type BucketBillingResponseArgs struct {
	// When set to true, Requester Pays is enabled for this bucket.
	RequesterPays pulumi.BoolInput `pulumi:"requesterPays"`
}

func (BucketBillingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketBillingResponse)(nil)).Elem()
}

func (i BucketBillingResponseArgs) ToBucketBillingResponseOutput() BucketBillingResponseOutput {
	return i.ToBucketBillingResponseOutputWithContext(context.Background())
}

func (i BucketBillingResponseArgs) ToBucketBillingResponseOutputWithContext(ctx context.Context) BucketBillingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingResponseOutput)
}

func (i BucketBillingResponseArgs) ToBucketBillingResponsePtrOutput() BucketBillingResponsePtrOutput {
	return i.ToBucketBillingResponsePtrOutputWithContext(context.Background())
}

func (i BucketBillingResponseArgs) ToBucketBillingResponsePtrOutputWithContext(ctx context.Context) BucketBillingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingResponseOutput).ToBucketBillingResponsePtrOutputWithContext(ctx)
}

// BucketBillingResponsePtrInput is an input type that accepts BucketBillingResponseArgs, BucketBillingResponsePtr and BucketBillingResponsePtrOutput values.
// You can construct a concrete instance of `BucketBillingResponsePtrInput` via:
//
//          BucketBillingResponseArgs{...}
//
//  or:
//
//          nil
type BucketBillingResponsePtrInput interface {
	pulumi.Input

	ToBucketBillingResponsePtrOutput() BucketBillingResponsePtrOutput
	ToBucketBillingResponsePtrOutputWithContext(context.Context) BucketBillingResponsePtrOutput
}

type bucketBillingResponsePtrType BucketBillingResponseArgs

func BucketBillingResponsePtr(v *BucketBillingResponseArgs) BucketBillingResponsePtrInput {
	return (*bucketBillingResponsePtrType)(v)
}

func (*bucketBillingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketBillingResponse)(nil)).Elem()
}

func (i *bucketBillingResponsePtrType) ToBucketBillingResponsePtrOutput() BucketBillingResponsePtrOutput {
	return i.ToBucketBillingResponsePtrOutputWithContext(context.Background())
}

func (i *bucketBillingResponsePtrType) ToBucketBillingResponsePtrOutputWithContext(ctx context.Context) BucketBillingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketBillingResponsePtrOutput)
}

// The bucket's billing configuration.
type BucketBillingResponseOutput struct{ *pulumi.OutputState }

func (BucketBillingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketBillingResponse)(nil)).Elem()
}

func (o BucketBillingResponseOutput) ToBucketBillingResponseOutput() BucketBillingResponseOutput {
	return o
}

func (o BucketBillingResponseOutput) ToBucketBillingResponseOutputWithContext(ctx context.Context) BucketBillingResponseOutput {
	return o
}

func (o BucketBillingResponseOutput) ToBucketBillingResponsePtrOutput() BucketBillingResponsePtrOutput {
	return o.ToBucketBillingResponsePtrOutputWithContext(context.Background())
}

func (o BucketBillingResponseOutput) ToBucketBillingResponsePtrOutputWithContext(ctx context.Context) BucketBillingResponsePtrOutput {
	return o.ApplyT(func(v BucketBillingResponse) *BucketBillingResponse {
		return &v
	}).(BucketBillingResponsePtrOutput)
}

// When set to true, Requester Pays is enabled for this bucket.
func (o BucketBillingResponseOutput) RequesterPays() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketBillingResponse) bool { return v.RequesterPays }).(pulumi.BoolOutput)
}

type BucketBillingResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketBillingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketBillingResponse)(nil)).Elem()
}

func (o BucketBillingResponsePtrOutput) ToBucketBillingResponsePtrOutput() BucketBillingResponsePtrOutput {
	return o
}

func (o BucketBillingResponsePtrOutput) ToBucketBillingResponsePtrOutputWithContext(ctx context.Context) BucketBillingResponsePtrOutput {
	return o
}

func (o BucketBillingResponsePtrOutput) Elem() BucketBillingResponseOutput {
	return o.ApplyT(func(v *BucketBillingResponse) BucketBillingResponse { return *v }).(BucketBillingResponseOutput)
}

// When set to true, Requester Pays is enabled for this bucket.
func (o BucketBillingResponsePtrOutput) RequesterPays() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketBillingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.RequesterPays
	}).(pulumi.BoolPtrOutput)
}

type BucketCorsItem struct {
	// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Method []string `pulumi:"method"`
	// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origin []string `pulumi:"origin"`
	// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
	ResponseHeader []string `pulumi:"responseHeader"`
}

// BucketCorsItemInput is an input type that accepts BucketCorsItemArgs and BucketCorsItemOutput values.
// You can construct a concrete instance of `BucketCorsItemInput` via:
//
//          BucketCorsItemArgs{...}
type BucketCorsItemInput interface {
	pulumi.Input

	ToBucketCorsItemOutput() BucketCorsItemOutput
	ToBucketCorsItemOutputWithContext(context.Context) BucketCorsItemOutput
}

type BucketCorsItemArgs struct {
	// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Method pulumi.StringArrayInput `pulumi:"method"`
	// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origin pulumi.StringArrayInput `pulumi:"origin"`
	// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
	ResponseHeader pulumi.StringArrayInput `pulumi:"responseHeader"`
}

func (BucketCorsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsItem)(nil)).Elem()
}

func (i BucketCorsItemArgs) ToBucketCorsItemOutput() BucketCorsItemOutput {
	return i.ToBucketCorsItemOutputWithContext(context.Background())
}

func (i BucketCorsItemArgs) ToBucketCorsItemOutputWithContext(ctx context.Context) BucketCorsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsItemOutput)
}

// BucketCorsItemArrayInput is an input type that accepts BucketCorsItemArray and BucketCorsItemArrayOutput values.
// You can construct a concrete instance of `BucketCorsItemArrayInput` via:
//
//          BucketCorsItemArray{ BucketCorsItemArgs{...} }
type BucketCorsItemArrayInput interface {
	pulumi.Input

	ToBucketCorsItemArrayOutput() BucketCorsItemArrayOutput
	ToBucketCorsItemArrayOutputWithContext(context.Context) BucketCorsItemArrayOutput
}

type BucketCorsItemArray []BucketCorsItemInput

func (BucketCorsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsItem)(nil)).Elem()
}

func (i BucketCorsItemArray) ToBucketCorsItemArrayOutput() BucketCorsItemArrayOutput {
	return i.ToBucketCorsItemArrayOutputWithContext(context.Background())
}

func (i BucketCorsItemArray) ToBucketCorsItemArrayOutputWithContext(ctx context.Context) BucketCorsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsItemArrayOutput)
}

type BucketCorsItemOutput struct{ *pulumi.OutputState }

func (BucketCorsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsItem)(nil)).Elem()
}

func (o BucketCorsItemOutput) ToBucketCorsItemOutput() BucketCorsItemOutput {
	return o
}

func (o BucketCorsItemOutput) ToBucketCorsItemOutputWithContext(ctx context.Context) BucketCorsItemOutput {
	return o
}

// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
func (o BucketCorsItemOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketCorsItem) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorsItemOutput) Method() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItem) []string { return v.Method }).(pulumi.StringArrayOutput)
}

// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorsItemOutput) Origin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItem) []string { return v.Origin }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
func (o BucketCorsItemOutput) ResponseHeader() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItem) []string { return v.ResponseHeader }).(pulumi.StringArrayOutput)
}

type BucketCorsItemArrayOutput struct{ *pulumi.OutputState }

func (BucketCorsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsItem)(nil)).Elem()
}

func (o BucketCorsItemArrayOutput) ToBucketCorsItemArrayOutput() BucketCorsItemArrayOutput {
	return o
}

func (o BucketCorsItemArrayOutput) ToBucketCorsItemArrayOutputWithContext(ctx context.Context) BucketCorsItemArrayOutput {
	return o
}

func (o BucketCorsItemArrayOutput) Index(i pulumi.IntInput) BucketCorsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorsItem {
		return vs[0].([]BucketCorsItem)[vs[1].(int)]
	}).(BucketCorsItemOutput)
}

type BucketCorsItemResponse struct {
	// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
	MaxAgeSeconds int `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Method []string `pulumi:"method"`
	// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origin []string `pulumi:"origin"`
	// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
	ResponseHeader []string `pulumi:"responseHeader"`
}

// BucketCorsItemResponseInput is an input type that accepts BucketCorsItemResponseArgs and BucketCorsItemResponseOutput values.
// You can construct a concrete instance of `BucketCorsItemResponseInput` via:
//
//          BucketCorsItemResponseArgs{...}
type BucketCorsItemResponseInput interface {
	pulumi.Input

	ToBucketCorsItemResponseOutput() BucketCorsItemResponseOutput
	ToBucketCorsItemResponseOutputWithContext(context.Context) BucketCorsItemResponseOutput
}

type BucketCorsItemResponseArgs struct {
	// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
	MaxAgeSeconds pulumi.IntInput `pulumi:"maxAgeSeconds"`
	// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
	Method pulumi.StringArrayInput `pulumi:"method"`
	// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
	Origin pulumi.StringArrayInput `pulumi:"origin"`
	// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
	ResponseHeader pulumi.StringArrayInput `pulumi:"responseHeader"`
}

func (BucketCorsItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsItemResponse)(nil)).Elem()
}

func (i BucketCorsItemResponseArgs) ToBucketCorsItemResponseOutput() BucketCorsItemResponseOutput {
	return i.ToBucketCorsItemResponseOutputWithContext(context.Background())
}

func (i BucketCorsItemResponseArgs) ToBucketCorsItemResponseOutputWithContext(ctx context.Context) BucketCorsItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsItemResponseOutput)
}

// BucketCorsItemResponseArrayInput is an input type that accepts BucketCorsItemResponseArray and BucketCorsItemResponseArrayOutput values.
// You can construct a concrete instance of `BucketCorsItemResponseArrayInput` via:
//
//          BucketCorsItemResponseArray{ BucketCorsItemResponseArgs{...} }
type BucketCorsItemResponseArrayInput interface {
	pulumi.Input

	ToBucketCorsItemResponseArrayOutput() BucketCorsItemResponseArrayOutput
	ToBucketCorsItemResponseArrayOutputWithContext(context.Context) BucketCorsItemResponseArrayOutput
}

type BucketCorsItemResponseArray []BucketCorsItemResponseInput

func (BucketCorsItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsItemResponse)(nil)).Elem()
}

func (i BucketCorsItemResponseArray) ToBucketCorsItemResponseArrayOutput() BucketCorsItemResponseArrayOutput {
	return i.ToBucketCorsItemResponseArrayOutputWithContext(context.Background())
}

func (i BucketCorsItemResponseArray) ToBucketCorsItemResponseArrayOutputWithContext(ctx context.Context) BucketCorsItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsItemResponseArrayOutput)
}

type BucketCorsItemResponseOutput struct{ *pulumi.OutputState }

func (BucketCorsItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsItemResponse)(nil)).Elem()
}

func (o BucketCorsItemResponseOutput) ToBucketCorsItemResponseOutput() BucketCorsItemResponseOutput {
	return o
}

func (o BucketCorsItemResponseOutput) ToBucketCorsItemResponseOutputWithContext(ctx context.Context) BucketCorsItemResponseOutput {
	return o
}

// The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
func (o BucketCorsItemResponseOutput) MaxAgeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v BucketCorsItemResponse) int { return v.MaxAgeSeconds }).(pulumi.IntOutput)
}

// The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
func (o BucketCorsItemResponseOutput) Method() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItemResponse) []string { return v.Method }).(pulumi.StringArrayOutput)
}

// The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
func (o BucketCorsItemResponseOutput) Origin() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItemResponse) []string { return v.Origin }).(pulumi.StringArrayOutput)
}

// The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
func (o BucketCorsItemResponseOutput) ResponseHeader() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketCorsItemResponse) []string { return v.ResponseHeader }).(pulumi.StringArrayOutput)
}

type BucketCorsItemResponseArrayOutput struct{ *pulumi.OutputState }

func (BucketCorsItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsItemResponse)(nil)).Elem()
}

func (o BucketCorsItemResponseArrayOutput) ToBucketCorsItemResponseArrayOutput() BucketCorsItemResponseArrayOutput {
	return o
}

func (o BucketCorsItemResponseArrayOutput) ToBucketCorsItemResponseArrayOutputWithContext(ctx context.Context) BucketCorsItemResponseArrayOutput {
	return o
}

func (o BucketCorsItemResponseArrayOutput) Index(i pulumi.IntInput) BucketCorsItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketCorsItemResponse {
		return vs[0].([]BucketCorsItemResponse)[vs[1].(int)]
	}).(BucketCorsItemResponseOutput)
}

// Encryption configuration for a bucket.
type BucketEncryption struct {
	// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
	DefaultKmsKeyName *string `pulumi:"defaultKmsKeyName"`
}

// BucketEncryptionInput is an input type that accepts BucketEncryptionArgs and BucketEncryptionOutput values.
// You can construct a concrete instance of `BucketEncryptionInput` via:
//
//          BucketEncryptionArgs{...}
type BucketEncryptionInput interface {
	pulumi.Input

	ToBucketEncryptionOutput() BucketEncryptionOutput
	ToBucketEncryptionOutputWithContext(context.Context) BucketEncryptionOutput
}

// Encryption configuration for a bucket.
type BucketEncryptionArgs struct {
	// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
	DefaultKmsKeyName pulumi.StringPtrInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return i.ToBucketEncryptionOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput)
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i BucketEncryptionArgs) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionOutput).ToBucketEncryptionPtrOutputWithContext(ctx)
}

// BucketEncryptionPtrInput is an input type that accepts BucketEncryptionArgs, BucketEncryptionPtr and BucketEncryptionPtrOutput values.
// You can construct a concrete instance of `BucketEncryptionPtrInput` via:
//
//          BucketEncryptionArgs{...}
//
//  or:
//
//          nil
type BucketEncryptionPtrInput interface {
	pulumi.Input

	ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput
	ToBucketEncryptionPtrOutputWithContext(context.Context) BucketEncryptionPtrOutput
}

type bucketEncryptionPtrType BucketEncryptionArgs

func BucketEncryptionPtr(v *BucketEncryptionArgs) BucketEncryptionPtrInput {
	return (*bucketEncryptionPtrType)(v)
}

func (*bucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return i.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionPtrType) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionPtrOutput)
}

// Encryption configuration for a bucket.
type BucketEncryptionOutput struct{ *pulumi.OutputState }

func (BucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutput() BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionOutputWithContext(ctx context.Context) BucketEncryptionOutput {
	return o
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o.ToBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o BucketEncryptionOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o.ApplyT(func(v BucketEncryption) *BucketEncryption {
		return &v
	}).(BucketEncryptionPtrOutput)
}

// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
func (o BucketEncryptionOutput) DefaultKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketEncryption) *string { return v.DefaultKmsKeyName }).(pulumi.StringPtrOutput)
}

type BucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryption)(nil)).Elem()
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutput() BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) ToBucketEncryptionPtrOutputWithContext(ctx context.Context) BucketEncryptionPtrOutput {
	return o
}

func (o BucketEncryptionPtrOutput) Elem() BucketEncryptionOutput {
	return o.ApplyT(func(v *BucketEncryption) BucketEncryption { return *v }).(BucketEncryptionOutput)
}

// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
func (o BucketEncryptionPtrOutput) DefaultKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketEncryption) *string {
		if v == nil {
			return nil
		}
		return v.DefaultKmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption configuration for a bucket.
type BucketEncryptionResponse struct {
	// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
	DefaultKmsKeyName string `pulumi:"defaultKmsKeyName"`
}

// BucketEncryptionResponseInput is an input type that accepts BucketEncryptionResponseArgs and BucketEncryptionResponseOutput values.
// You can construct a concrete instance of `BucketEncryptionResponseInput` via:
//
//          BucketEncryptionResponseArgs{...}
type BucketEncryptionResponseInput interface {
	pulumi.Input

	ToBucketEncryptionResponseOutput() BucketEncryptionResponseOutput
	ToBucketEncryptionResponseOutputWithContext(context.Context) BucketEncryptionResponseOutput
}

// Encryption configuration for a bucket.
type BucketEncryptionResponseArgs struct {
	// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
	DefaultKmsKeyName pulumi.StringInput `pulumi:"defaultKmsKeyName"`
}

func (BucketEncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionResponse)(nil)).Elem()
}

func (i BucketEncryptionResponseArgs) ToBucketEncryptionResponseOutput() BucketEncryptionResponseOutput {
	return i.ToBucketEncryptionResponseOutputWithContext(context.Background())
}

func (i BucketEncryptionResponseArgs) ToBucketEncryptionResponseOutputWithContext(ctx context.Context) BucketEncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionResponseOutput)
}

func (i BucketEncryptionResponseArgs) ToBucketEncryptionResponsePtrOutput() BucketEncryptionResponsePtrOutput {
	return i.ToBucketEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i BucketEncryptionResponseArgs) ToBucketEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionResponseOutput).ToBucketEncryptionResponsePtrOutputWithContext(ctx)
}

// BucketEncryptionResponsePtrInput is an input type that accepts BucketEncryptionResponseArgs, BucketEncryptionResponsePtr and BucketEncryptionResponsePtrOutput values.
// You can construct a concrete instance of `BucketEncryptionResponsePtrInput` via:
//
//          BucketEncryptionResponseArgs{...}
//
//  or:
//
//          nil
type BucketEncryptionResponsePtrInput interface {
	pulumi.Input

	ToBucketEncryptionResponsePtrOutput() BucketEncryptionResponsePtrOutput
	ToBucketEncryptionResponsePtrOutputWithContext(context.Context) BucketEncryptionResponsePtrOutput
}

type bucketEncryptionResponsePtrType BucketEncryptionResponseArgs

func BucketEncryptionResponsePtr(v *BucketEncryptionResponseArgs) BucketEncryptionResponsePtrInput {
	return (*bucketEncryptionResponsePtrType)(v)
}

func (*bucketEncryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionResponse)(nil)).Elem()
}

func (i *bucketEncryptionResponsePtrType) ToBucketEncryptionResponsePtrOutput() BucketEncryptionResponsePtrOutput {
	return i.ToBucketEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *bucketEncryptionResponsePtrType) ToBucketEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketEncryptionResponsePtrOutput)
}

// Encryption configuration for a bucket.
type BucketEncryptionResponseOutput struct{ *pulumi.OutputState }

func (BucketEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketEncryptionResponse)(nil)).Elem()
}

func (o BucketEncryptionResponseOutput) ToBucketEncryptionResponseOutput() BucketEncryptionResponseOutput {
	return o
}

func (o BucketEncryptionResponseOutput) ToBucketEncryptionResponseOutputWithContext(ctx context.Context) BucketEncryptionResponseOutput {
	return o
}

func (o BucketEncryptionResponseOutput) ToBucketEncryptionResponsePtrOutput() BucketEncryptionResponsePtrOutput {
	return o.ToBucketEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o BucketEncryptionResponseOutput) ToBucketEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketEncryptionResponsePtrOutput {
	return o.ApplyT(func(v BucketEncryptionResponse) *BucketEncryptionResponse {
		return &v
	}).(BucketEncryptionResponsePtrOutput)
}

// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
func (o BucketEncryptionResponseOutput) DefaultKmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v BucketEncryptionResponse) string { return v.DefaultKmsKeyName }).(pulumi.StringOutput)
}

type BucketEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketEncryptionResponse)(nil)).Elem()
}

func (o BucketEncryptionResponsePtrOutput) ToBucketEncryptionResponsePtrOutput() BucketEncryptionResponsePtrOutput {
	return o
}

func (o BucketEncryptionResponsePtrOutput) ToBucketEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketEncryptionResponsePtrOutput {
	return o
}

func (o BucketEncryptionResponsePtrOutput) Elem() BucketEncryptionResponseOutput {
	return o.ApplyT(func(v *BucketEncryptionResponse) BucketEncryptionResponse { return *v }).(BucketEncryptionResponseOutput)
}

// A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
func (o BucketEncryptionResponsePtrOutput) DefaultKmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultKmsKeyName
	}).(pulumi.StringPtrOutput)
}

// The bucket's IAM configuration.
type BucketIamConfiguration struct {
	// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
	BucketPolicyOnly *BucketIamConfigurationBucketPolicyOnly `pulumi:"bucketPolicyOnly"`
	// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
	PublicAccessPrevention *string `pulumi:"publicAccessPrevention"`
	// The bucket's uniform bucket-level access configuration.
	UniformBucketLevelAccess *BucketIamConfigurationUniformBucketLevelAccess `pulumi:"uniformBucketLevelAccess"`
}

// BucketIamConfigurationInput is an input type that accepts BucketIamConfigurationArgs and BucketIamConfigurationOutput values.
// You can construct a concrete instance of `BucketIamConfigurationInput` via:
//
//          BucketIamConfigurationArgs{...}
type BucketIamConfigurationInput interface {
	pulumi.Input

	ToBucketIamConfigurationOutput() BucketIamConfigurationOutput
	ToBucketIamConfigurationOutputWithContext(context.Context) BucketIamConfigurationOutput
}

// The bucket's IAM configuration.
type BucketIamConfigurationArgs struct {
	// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
	BucketPolicyOnly BucketIamConfigurationBucketPolicyOnlyPtrInput `pulumi:"bucketPolicyOnly"`
	// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
	PublicAccessPrevention pulumi.StringPtrInput `pulumi:"publicAccessPrevention"`
	// The bucket's uniform bucket-level access configuration.
	UniformBucketLevelAccess BucketIamConfigurationUniformBucketLevelAccessPtrInput `pulumi:"uniformBucketLevelAccess"`
}

func (BucketIamConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfiguration)(nil)).Elem()
}

func (i BucketIamConfigurationArgs) ToBucketIamConfigurationOutput() BucketIamConfigurationOutput {
	return i.ToBucketIamConfigurationOutputWithContext(context.Background())
}

func (i BucketIamConfigurationArgs) ToBucketIamConfigurationOutputWithContext(ctx context.Context) BucketIamConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationOutput)
}

func (i BucketIamConfigurationArgs) ToBucketIamConfigurationPtrOutput() BucketIamConfigurationPtrOutput {
	return i.ToBucketIamConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationArgs) ToBucketIamConfigurationPtrOutputWithContext(ctx context.Context) BucketIamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationOutput).ToBucketIamConfigurationPtrOutputWithContext(ctx)
}

// BucketIamConfigurationPtrInput is an input type that accepts BucketIamConfigurationArgs, BucketIamConfigurationPtr and BucketIamConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationPtrInput` via:
//
//          BucketIamConfigurationArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationPtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationPtrOutput() BucketIamConfigurationPtrOutput
	ToBucketIamConfigurationPtrOutputWithContext(context.Context) BucketIamConfigurationPtrOutput
}

type bucketIamConfigurationPtrType BucketIamConfigurationArgs

func BucketIamConfigurationPtr(v *BucketIamConfigurationArgs) BucketIamConfigurationPtrInput {
	return (*bucketIamConfigurationPtrType)(v)
}

func (*bucketIamConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfiguration)(nil)).Elem()
}

func (i *bucketIamConfigurationPtrType) ToBucketIamConfigurationPtrOutput() BucketIamConfigurationPtrOutput {
	return i.ToBucketIamConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationPtrType) ToBucketIamConfigurationPtrOutputWithContext(ctx context.Context) BucketIamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationPtrOutput)
}

// The bucket's IAM configuration.
type BucketIamConfigurationOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfiguration)(nil)).Elem()
}

func (o BucketIamConfigurationOutput) ToBucketIamConfigurationOutput() BucketIamConfigurationOutput {
	return o
}

func (o BucketIamConfigurationOutput) ToBucketIamConfigurationOutputWithContext(ctx context.Context) BucketIamConfigurationOutput {
	return o
}

func (o BucketIamConfigurationOutput) ToBucketIamConfigurationPtrOutput() BucketIamConfigurationPtrOutput {
	return o.ToBucketIamConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationOutput) ToBucketIamConfigurationPtrOutputWithContext(ctx context.Context) BucketIamConfigurationPtrOutput {
	return o.ApplyT(func(v BucketIamConfiguration) *BucketIamConfiguration {
		return &v
	}).(BucketIamConfigurationPtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
func (o BucketIamConfigurationOutput) BucketPolicyOnly() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o.ApplyT(func(v BucketIamConfiguration) *BucketIamConfigurationBucketPolicyOnly { return v.BucketPolicyOnly }).(BucketIamConfigurationBucketPolicyOnlyPtrOutput)
}

// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
func (o BucketIamConfigurationOutput) PublicAccessPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIamConfiguration) *string { return v.PublicAccessPrevention }).(pulumi.StringPtrOutput)
}

// The bucket's uniform bucket-level access configuration.
func (o BucketIamConfigurationOutput) UniformBucketLevelAccess() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o.ApplyT(func(v BucketIamConfiguration) *BucketIamConfigurationUniformBucketLevelAccess {
		return v.UniformBucketLevelAccess
	}).(BucketIamConfigurationUniformBucketLevelAccessPtrOutput)
}

type BucketIamConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfiguration)(nil)).Elem()
}

func (o BucketIamConfigurationPtrOutput) ToBucketIamConfigurationPtrOutput() BucketIamConfigurationPtrOutput {
	return o
}

func (o BucketIamConfigurationPtrOutput) ToBucketIamConfigurationPtrOutputWithContext(ctx context.Context) BucketIamConfigurationPtrOutput {
	return o
}

func (o BucketIamConfigurationPtrOutput) Elem() BucketIamConfigurationOutput {
	return o.ApplyT(func(v *BucketIamConfiguration) BucketIamConfiguration { return *v }).(BucketIamConfigurationOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
func (o BucketIamConfigurationPtrOutput) BucketPolicyOnly() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o.ApplyT(func(v *BucketIamConfiguration) *BucketIamConfigurationBucketPolicyOnly {
		if v == nil {
			return nil
		}
		return v.BucketPolicyOnly
	}).(BucketIamConfigurationBucketPolicyOnlyPtrOutput)
}

// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
func (o BucketIamConfigurationPtrOutput) PublicAccessPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PublicAccessPrevention
	}).(pulumi.StringPtrOutput)
}

// The bucket's uniform bucket-level access configuration.
func (o BucketIamConfigurationPtrOutput) UniformBucketLevelAccess() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o.ApplyT(func(v *BucketIamConfiguration) *BucketIamConfigurationUniformBucketLevelAccess {
		if v == nil {
			return nil
		}
		return v.UniformBucketLevelAccess
	}).(BucketIamConfigurationUniformBucketLevelAccessPtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnly struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled *bool `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime *string `pulumi:"lockedTime"`
}

// BucketIamConfigurationBucketPolicyOnlyInput is an input type that accepts BucketIamConfigurationBucketPolicyOnlyArgs and BucketIamConfigurationBucketPolicyOnlyOutput values.
// You can construct a concrete instance of `BucketIamConfigurationBucketPolicyOnlyInput` via:
//
//          BucketIamConfigurationBucketPolicyOnlyArgs{...}
type BucketIamConfigurationBucketPolicyOnlyInput interface {
	pulumi.Input

	ToBucketIamConfigurationBucketPolicyOnlyOutput() BucketIamConfigurationBucketPolicyOnlyOutput
	ToBucketIamConfigurationBucketPolicyOnlyOutputWithContext(context.Context) BucketIamConfigurationBucketPolicyOnlyOutput
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnlyArgs struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime pulumi.StringPtrInput `pulumi:"lockedTime"`
}

func (BucketIamConfigurationBucketPolicyOnlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationBucketPolicyOnly)(nil)).Elem()
}

func (i BucketIamConfigurationBucketPolicyOnlyArgs) ToBucketIamConfigurationBucketPolicyOnlyOutput() BucketIamConfigurationBucketPolicyOnlyOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyOutputWithContext(context.Background())
}

func (i BucketIamConfigurationBucketPolicyOnlyArgs) ToBucketIamConfigurationBucketPolicyOnlyOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyOutput)
}

func (i BucketIamConfigurationBucketPolicyOnlyArgs) ToBucketIamConfigurationBucketPolicyOnlyPtrOutput() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationBucketPolicyOnlyArgs) ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyOutput).ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(ctx)
}

// BucketIamConfigurationBucketPolicyOnlyPtrInput is an input type that accepts BucketIamConfigurationBucketPolicyOnlyArgs, BucketIamConfigurationBucketPolicyOnlyPtr and BucketIamConfigurationBucketPolicyOnlyPtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationBucketPolicyOnlyPtrInput` via:
//
//          BucketIamConfigurationBucketPolicyOnlyArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationBucketPolicyOnlyPtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationBucketPolicyOnlyPtrOutput() BucketIamConfigurationBucketPolicyOnlyPtrOutput
	ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(context.Context) BucketIamConfigurationBucketPolicyOnlyPtrOutput
}

type bucketIamConfigurationBucketPolicyOnlyPtrType BucketIamConfigurationBucketPolicyOnlyArgs

func BucketIamConfigurationBucketPolicyOnlyPtr(v *BucketIamConfigurationBucketPolicyOnlyArgs) BucketIamConfigurationBucketPolicyOnlyPtrInput {
	return (*bucketIamConfigurationBucketPolicyOnlyPtrType)(v)
}

func (*bucketIamConfigurationBucketPolicyOnlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationBucketPolicyOnly)(nil)).Elem()
}

func (i *bucketIamConfigurationBucketPolicyOnlyPtrType) ToBucketIamConfigurationBucketPolicyOnlyPtrOutput() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationBucketPolicyOnlyPtrType) ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyPtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnlyOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationBucketPolicyOnlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationBucketPolicyOnly)(nil)).Elem()
}

func (o BucketIamConfigurationBucketPolicyOnlyOutput) ToBucketIamConfigurationBucketPolicyOnlyOutput() BucketIamConfigurationBucketPolicyOnlyOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyOutput) ToBucketIamConfigurationBucketPolicyOnlyOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyOutput) ToBucketIamConfigurationBucketPolicyOnlyPtrOutput() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o.ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationBucketPolicyOnlyOutput) ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnly) *BucketIamConfigurationBucketPolicyOnly {
		return &v
	}).(BucketIamConfigurationBucketPolicyOnlyPtrOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationBucketPolicyOnlyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnly) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationBucketPolicyOnlyOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnly) *string { return v.LockedTime }).(pulumi.StringPtrOutput)
}

type BucketIamConfigurationBucketPolicyOnlyPtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationBucketPolicyOnlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationBucketPolicyOnly)(nil)).Elem()
}

func (o BucketIamConfigurationBucketPolicyOnlyPtrOutput) ToBucketIamConfigurationBucketPolicyOnlyPtrOutput() BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyPtrOutput) ToBucketIamConfigurationBucketPolicyOnlyPtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyPtrOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyPtrOutput) Elem() BucketIamConfigurationBucketPolicyOnlyOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnly) BucketIamConfigurationBucketPolicyOnly { return *v }).(BucketIamConfigurationBucketPolicyOnlyOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationBucketPolicyOnlyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnly) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationBucketPolicyOnlyPtrOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnly) *string {
		if v == nil {
			return nil
		}
		return v.LockedTime
	}).(pulumi.StringPtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnlyResponse struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled bool `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime string `pulumi:"lockedTime"`
}

// BucketIamConfigurationBucketPolicyOnlyResponseInput is an input type that accepts BucketIamConfigurationBucketPolicyOnlyResponseArgs and BucketIamConfigurationBucketPolicyOnlyResponseOutput values.
// You can construct a concrete instance of `BucketIamConfigurationBucketPolicyOnlyResponseInput` via:
//
//          BucketIamConfigurationBucketPolicyOnlyResponseArgs{...}
type BucketIamConfigurationBucketPolicyOnlyResponseInput interface {
	pulumi.Input

	ToBucketIamConfigurationBucketPolicyOnlyResponseOutput() BucketIamConfigurationBucketPolicyOnlyResponseOutput
	ToBucketIamConfigurationBucketPolicyOnlyResponseOutputWithContext(context.Context) BucketIamConfigurationBucketPolicyOnlyResponseOutput
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnlyResponseArgs struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime pulumi.StringInput `pulumi:"lockedTime"`
}

func (BucketIamConfigurationBucketPolicyOnlyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationBucketPolicyOnlyResponse)(nil)).Elem()
}

func (i BucketIamConfigurationBucketPolicyOnlyResponseArgs) ToBucketIamConfigurationBucketPolicyOnlyResponseOutput() BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyResponseOutputWithContext(context.Background())
}

func (i BucketIamConfigurationBucketPolicyOnlyResponseArgs) ToBucketIamConfigurationBucketPolicyOnlyResponseOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyResponseOutput)
}

func (i BucketIamConfigurationBucketPolicyOnlyResponseArgs) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutput() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationBucketPolicyOnlyResponseArgs) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyResponseOutput).ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(ctx)
}

// BucketIamConfigurationBucketPolicyOnlyResponsePtrInput is an input type that accepts BucketIamConfigurationBucketPolicyOnlyResponseArgs, BucketIamConfigurationBucketPolicyOnlyResponsePtr and BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationBucketPolicyOnlyResponsePtrInput` via:
//
//          BucketIamConfigurationBucketPolicyOnlyResponseArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationBucketPolicyOnlyResponsePtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutput() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput
	ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(context.Context) BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput
}

type bucketIamConfigurationBucketPolicyOnlyResponsePtrType BucketIamConfigurationBucketPolicyOnlyResponseArgs

func BucketIamConfigurationBucketPolicyOnlyResponsePtr(v *BucketIamConfigurationBucketPolicyOnlyResponseArgs) BucketIamConfigurationBucketPolicyOnlyResponsePtrInput {
	return (*bucketIamConfigurationBucketPolicyOnlyResponsePtrType)(v)
}

func (*bucketIamConfigurationBucketPolicyOnlyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationBucketPolicyOnlyResponse)(nil)).Elem()
}

func (i *bucketIamConfigurationBucketPolicyOnlyResponsePtrType) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutput() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return i.ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationBucketPolicyOnlyResponsePtrType) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
type BucketIamConfigurationBucketPolicyOnlyResponseOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationBucketPolicyOnlyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationBucketPolicyOnlyResponse)(nil)).Elem()
}

func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) ToBucketIamConfigurationBucketPolicyOnlyResponseOutput() BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) ToBucketIamConfigurationBucketPolicyOnlyResponseOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutput() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return o.ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnlyResponse) *BucketIamConfigurationBucketPolicyOnlyResponse {
		return &v
	}).(BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnlyResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationBucketPolicyOnlyResponseOutput) LockedTime() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIamConfigurationBucketPolicyOnlyResponse) string { return v.LockedTime }).(pulumi.StringOutput)
}

type BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationBucketPolicyOnlyResponse)(nil)).Elem()
}

func (o BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutput() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) ToBucketIamConfigurationBucketPolicyOnlyResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) Elem() BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnlyResponse) BucketIamConfigurationBucketPolicyOnlyResponse {
		return *v
	}).(BucketIamConfigurationBucketPolicyOnlyResponseOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnlyResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationBucketPolicyOnlyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LockedTime
	}).(pulumi.StringPtrOutput)
}

// The bucket's IAM configuration.
type BucketIamConfigurationResponse struct {
	// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
	BucketPolicyOnly BucketIamConfigurationBucketPolicyOnlyResponse `pulumi:"bucketPolicyOnly"`
	// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
	PublicAccessPrevention string `pulumi:"publicAccessPrevention"`
	// The bucket's uniform bucket-level access configuration.
	UniformBucketLevelAccess BucketIamConfigurationUniformBucketLevelAccessResponse `pulumi:"uniformBucketLevelAccess"`
}

// BucketIamConfigurationResponseInput is an input type that accepts BucketIamConfigurationResponseArgs and BucketIamConfigurationResponseOutput values.
// You can construct a concrete instance of `BucketIamConfigurationResponseInput` via:
//
//          BucketIamConfigurationResponseArgs{...}
type BucketIamConfigurationResponseInput interface {
	pulumi.Input

	ToBucketIamConfigurationResponseOutput() BucketIamConfigurationResponseOutput
	ToBucketIamConfigurationResponseOutputWithContext(context.Context) BucketIamConfigurationResponseOutput
}

// The bucket's IAM configuration.
type BucketIamConfigurationResponseArgs struct {
	// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
	BucketPolicyOnly BucketIamConfigurationBucketPolicyOnlyResponseInput `pulumi:"bucketPolicyOnly"`
	// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
	PublicAccessPrevention pulumi.StringInput `pulumi:"publicAccessPrevention"`
	// The bucket's uniform bucket-level access configuration.
	UniformBucketLevelAccess BucketIamConfigurationUniformBucketLevelAccessResponseInput `pulumi:"uniformBucketLevelAccess"`
}

func (BucketIamConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationResponse)(nil)).Elem()
}

func (i BucketIamConfigurationResponseArgs) ToBucketIamConfigurationResponseOutput() BucketIamConfigurationResponseOutput {
	return i.ToBucketIamConfigurationResponseOutputWithContext(context.Background())
}

func (i BucketIamConfigurationResponseArgs) ToBucketIamConfigurationResponseOutputWithContext(ctx context.Context) BucketIamConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationResponseOutput)
}

func (i BucketIamConfigurationResponseArgs) ToBucketIamConfigurationResponsePtrOutput() BucketIamConfigurationResponsePtrOutput {
	return i.ToBucketIamConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationResponseArgs) ToBucketIamConfigurationResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationResponseOutput).ToBucketIamConfigurationResponsePtrOutputWithContext(ctx)
}

// BucketIamConfigurationResponsePtrInput is an input type that accepts BucketIamConfigurationResponseArgs, BucketIamConfigurationResponsePtr and BucketIamConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationResponsePtrInput` via:
//
//          BucketIamConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationResponsePtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationResponsePtrOutput() BucketIamConfigurationResponsePtrOutput
	ToBucketIamConfigurationResponsePtrOutputWithContext(context.Context) BucketIamConfigurationResponsePtrOutput
}

type bucketIamConfigurationResponsePtrType BucketIamConfigurationResponseArgs

func BucketIamConfigurationResponsePtr(v *BucketIamConfigurationResponseArgs) BucketIamConfigurationResponsePtrInput {
	return (*bucketIamConfigurationResponsePtrType)(v)
}

func (*bucketIamConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationResponse)(nil)).Elem()
}

func (i *bucketIamConfigurationResponsePtrType) ToBucketIamConfigurationResponsePtrOutput() BucketIamConfigurationResponsePtrOutput {
	return i.ToBucketIamConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationResponsePtrType) ToBucketIamConfigurationResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationResponsePtrOutput)
}

// The bucket's IAM configuration.
type BucketIamConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationResponse)(nil)).Elem()
}

func (o BucketIamConfigurationResponseOutput) ToBucketIamConfigurationResponseOutput() BucketIamConfigurationResponseOutput {
	return o
}

func (o BucketIamConfigurationResponseOutput) ToBucketIamConfigurationResponseOutputWithContext(ctx context.Context) BucketIamConfigurationResponseOutput {
	return o
}

func (o BucketIamConfigurationResponseOutput) ToBucketIamConfigurationResponsePtrOutput() BucketIamConfigurationResponsePtrOutput {
	return o.ToBucketIamConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationResponseOutput) ToBucketIamConfigurationResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationResponsePtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationResponse) *BucketIamConfigurationResponse {
		return &v
	}).(BucketIamConfigurationResponsePtrOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
func (o BucketIamConfigurationResponseOutput) BucketPolicyOnly() BucketIamConfigurationBucketPolicyOnlyResponseOutput {
	return o.ApplyT(func(v BucketIamConfigurationResponse) BucketIamConfigurationBucketPolicyOnlyResponse {
		return v.BucketPolicyOnly
	}).(BucketIamConfigurationBucketPolicyOnlyResponseOutput)
}

// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
func (o BucketIamConfigurationResponseOutput) PublicAccessPrevention() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIamConfigurationResponse) string { return v.PublicAccessPrevention }).(pulumi.StringOutput)
}

// The bucket's uniform bucket-level access configuration.
func (o BucketIamConfigurationResponseOutput) UniformBucketLevelAccess() BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return o.ApplyT(func(v BucketIamConfigurationResponse) BucketIamConfigurationUniformBucketLevelAccessResponse {
		return v.UniformBucketLevelAccess
	}).(BucketIamConfigurationUniformBucketLevelAccessResponseOutput)
}

type BucketIamConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationResponse)(nil)).Elem()
}

func (o BucketIamConfigurationResponsePtrOutput) ToBucketIamConfigurationResponsePtrOutput() BucketIamConfigurationResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationResponsePtrOutput) ToBucketIamConfigurationResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationResponsePtrOutput) Elem() BucketIamConfigurationResponseOutput {
	return o.ApplyT(func(v *BucketIamConfigurationResponse) BucketIamConfigurationResponse { return *v }).(BucketIamConfigurationResponseOutput)
}

// The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
func (o BucketIamConfigurationResponsePtrOutput) BucketPolicyOnly() BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationResponse) *BucketIamConfigurationBucketPolicyOnlyResponse {
		if v == nil {
			return nil
		}
		return &v.BucketPolicyOnly
	}).(BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput)
}

// The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported.
func (o BucketIamConfigurationResponsePtrOutput) PublicAccessPrevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PublicAccessPrevention
	}).(pulumi.StringPtrOutput)
}

// The bucket's uniform bucket-level access configuration.
func (o BucketIamConfigurationResponsePtrOutput) UniformBucketLevelAccess() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationResponse) *BucketIamConfigurationUniformBucketLevelAccessResponse {
		if v == nil {
			return nil
		}
		return &v.UniformBucketLevelAccess
	}).(BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput)
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccess struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled *bool `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime *string `pulumi:"lockedTime"`
}

// BucketIamConfigurationUniformBucketLevelAccessInput is an input type that accepts BucketIamConfigurationUniformBucketLevelAccessArgs and BucketIamConfigurationUniformBucketLevelAccessOutput values.
// You can construct a concrete instance of `BucketIamConfigurationUniformBucketLevelAccessInput` via:
//
//          BucketIamConfigurationUniformBucketLevelAccessArgs{...}
type BucketIamConfigurationUniformBucketLevelAccessInput interface {
	pulumi.Input

	ToBucketIamConfigurationUniformBucketLevelAccessOutput() BucketIamConfigurationUniformBucketLevelAccessOutput
	ToBucketIamConfigurationUniformBucketLevelAccessOutputWithContext(context.Context) BucketIamConfigurationUniformBucketLevelAccessOutput
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccessArgs struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime pulumi.StringPtrInput `pulumi:"lockedTime"`
}

func (BucketIamConfigurationUniformBucketLevelAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationUniformBucketLevelAccess)(nil)).Elem()
}

func (i BucketIamConfigurationUniformBucketLevelAccessArgs) ToBucketIamConfigurationUniformBucketLevelAccessOutput() BucketIamConfigurationUniformBucketLevelAccessOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessOutputWithContext(context.Background())
}

func (i BucketIamConfigurationUniformBucketLevelAccessArgs) ToBucketIamConfigurationUniformBucketLevelAccessOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessOutput)
}

func (i BucketIamConfigurationUniformBucketLevelAccessArgs) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutput() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationUniformBucketLevelAccessArgs) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessOutput).ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(ctx)
}

// BucketIamConfigurationUniformBucketLevelAccessPtrInput is an input type that accepts BucketIamConfigurationUniformBucketLevelAccessArgs, BucketIamConfigurationUniformBucketLevelAccessPtr and BucketIamConfigurationUniformBucketLevelAccessPtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationUniformBucketLevelAccessPtrInput` via:
//
//          BucketIamConfigurationUniformBucketLevelAccessArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationUniformBucketLevelAccessPtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationUniformBucketLevelAccessPtrOutput() BucketIamConfigurationUniformBucketLevelAccessPtrOutput
	ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(context.Context) BucketIamConfigurationUniformBucketLevelAccessPtrOutput
}

type bucketIamConfigurationUniformBucketLevelAccessPtrType BucketIamConfigurationUniformBucketLevelAccessArgs

func BucketIamConfigurationUniformBucketLevelAccessPtr(v *BucketIamConfigurationUniformBucketLevelAccessArgs) BucketIamConfigurationUniformBucketLevelAccessPtrInput {
	return (*bucketIamConfigurationUniformBucketLevelAccessPtrType)(v)
}

func (*bucketIamConfigurationUniformBucketLevelAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationUniformBucketLevelAccess)(nil)).Elem()
}

func (i *bucketIamConfigurationUniformBucketLevelAccessPtrType) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutput() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationUniformBucketLevelAccessPtrType) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessPtrOutput)
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccessOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationUniformBucketLevelAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationUniformBucketLevelAccess)(nil)).Elem()
}

func (o BucketIamConfigurationUniformBucketLevelAccessOutput) ToBucketIamConfigurationUniformBucketLevelAccessOutput() BucketIamConfigurationUniformBucketLevelAccessOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessOutput) ToBucketIamConfigurationUniformBucketLevelAccessOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessOutput) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutput() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o.ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationUniformBucketLevelAccessOutput) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccess) *BucketIamConfigurationUniformBucketLevelAccess {
		return &v
	}).(BucketIamConfigurationUniformBucketLevelAccessPtrOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationUniformBucketLevelAccessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccess) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationUniformBucketLevelAccessOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccess) *string { return v.LockedTime }).(pulumi.StringPtrOutput)
}

type BucketIamConfigurationUniformBucketLevelAccessPtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationUniformBucketLevelAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationUniformBucketLevelAccess)(nil)).Elem()
}

func (o BucketIamConfigurationUniformBucketLevelAccessPtrOutput) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutput() BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessPtrOutput) ToBucketIamConfigurationUniformBucketLevelAccessPtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessPtrOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessPtrOutput) Elem() BucketIamConfigurationUniformBucketLevelAccessOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccess) BucketIamConfigurationUniformBucketLevelAccess {
		return *v
	}).(BucketIamConfigurationUniformBucketLevelAccessOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationUniformBucketLevelAccessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccess) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationUniformBucketLevelAccessPtrOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccess) *string {
		if v == nil {
			return nil
		}
		return v.LockedTime
	}).(pulumi.StringPtrOutput)
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccessResponse struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled bool `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime string `pulumi:"lockedTime"`
}

// BucketIamConfigurationUniformBucketLevelAccessResponseInput is an input type that accepts BucketIamConfigurationUniformBucketLevelAccessResponseArgs and BucketIamConfigurationUniformBucketLevelAccessResponseOutput values.
// You can construct a concrete instance of `BucketIamConfigurationUniformBucketLevelAccessResponseInput` via:
//
//          BucketIamConfigurationUniformBucketLevelAccessResponseArgs{...}
type BucketIamConfigurationUniformBucketLevelAccessResponseInput interface {
	pulumi.Input

	ToBucketIamConfigurationUniformBucketLevelAccessResponseOutput() BucketIamConfigurationUniformBucketLevelAccessResponseOutput
	ToBucketIamConfigurationUniformBucketLevelAccessResponseOutputWithContext(context.Context) BucketIamConfigurationUniformBucketLevelAccessResponseOutput
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccessResponseArgs struct {
	// If set, access is controlled only by bucket-level or above IAM policies.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
	LockedTime pulumi.StringInput `pulumi:"lockedTime"`
}

func (BucketIamConfigurationUniformBucketLevelAccessResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationUniformBucketLevelAccessResponse)(nil)).Elem()
}

func (i BucketIamConfigurationUniformBucketLevelAccessResponseArgs) ToBucketIamConfigurationUniformBucketLevelAccessResponseOutput() BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessResponseOutputWithContext(context.Background())
}

func (i BucketIamConfigurationUniformBucketLevelAccessResponseArgs) ToBucketIamConfigurationUniformBucketLevelAccessResponseOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessResponseOutput)
}

func (i BucketIamConfigurationUniformBucketLevelAccessResponseArgs) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(context.Background())
}

func (i BucketIamConfigurationUniformBucketLevelAccessResponseArgs) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessResponseOutput).ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(ctx)
}

// BucketIamConfigurationUniformBucketLevelAccessResponsePtrInput is an input type that accepts BucketIamConfigurationUniformBucketLevelAccessResponseArgs, BucketIamConfigurationUniformBucketLevelAccessResponsePtr and BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput values.
// You can construct a concrete instance of `BucketIamConfigurationUniformBucketLevelAccessResponsePtrInput` via:
//
//          BucketIamConfigurationUniformBucketLevelAccessResponseArgs{...}
//
//  or:
//
//          nil
type BucketIamConfigurationUniformBucketLevelAccessResponsePtrInput interface {
	pulumi.Input

	ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput
	ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(context.Context) BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput
}

type bucketIamConfigurationUniformBucketLevelAccessResponsePtrType BucketIamConfigurationUniformBucketLevelAccessResponseArgs

func BucketIamConfigurationUniformBucketLevelAccessResponsePtr(v *BucketIamConfigurationUniformBucketLevelAccessResponseArgs) BucketIamConfigurationUniformBucketLevelAccessResponsePtrInput {
	return (*bucketIamConfigurationUniformBucketLevelAccessResponsePtrType)(v)
}

func (*bucketIamConfigurationUniformBucketLevelAccessResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationUniformBucketLevelAccessResponse)(nil)).Elem()
}

func (i *bucketIamConfigurationUniformBucketLevelAccessResponsePtrType) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return i.ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(context.Background())
}

func (i *bucketIamConfigurationUniformBucketLevelAccessResponsePtrType) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput)
}

// The bucket's uniform bucket-level access configuration.
type BucketIamConfigurationUniformBucketLevelAccessResponseOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationUniformBucketLevelAccessResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamConfigurationUniformBucketLevelAccessResponse)(nil)).Elem()
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponseOutput() BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponseOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return o.ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(context.Background())
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccessResponse) *BucketIamConfigurationUniformBucketLevelAccessResponse {
		return &v
	}).(BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccessResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationUniformBucketLevelAccessResponseOutput) LockedTime() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIamConfigurationUniformBucketLevelAccessResponse) string { return v.LockedTime }).(pulumi.StringOutput)
}

type BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketIamConfigurationUniformBucketLevelAccessResponse)(nil)).Elem()
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput() BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) ToBucketIamConfigurationUniformBucketLevelAccessResponsePtrOutputWithContext(ctx context.Context) BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput {
	return o
}

func (o BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) Elem() BucketIamConfigurationUniformBucketLevelAccessResponseOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccessResponse) BucketIamConfigurationUniformBucketLevelAccessResponse {
		return *v
	}).(BucketIamConfigurationUniformBucketLevelAccessResponseOutput)
}

// If set, access is controlled only by bucket-level or above IAM policies.
func (o BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccessResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
func (o BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput) LockedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketIamConfigurationUniformBucketLevelAccessResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LockedTime
	}).(pulumi.StringPtrOutput)
}

type BucketIamPolicyBindingsItem struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition *Expr `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members []string `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role *string `pulumi:"role"`
}

// BucketIamPolicyBindingsItemInput is an input type that accepts BucketIamPolicyBindingsItemArgs and BucketIamPolicyBindingsItemOutput values.
// You can construct a concrete instance of `BucketIamPolicyBindingsItemInput` via:
//
//          BucketIamPolicyBindingsItemArgs{...}
type BucketIamPolicyBindingsItemInput interface {
	pulumi.Input

	ToBucketIamPolicyBindingsItemOutput() BucketIamPolicyBindingsItemOutput
	ToBucketIamPolicyBindingsItemOutputWithContext(context.Context) BucketIamPolicyBindingsItemOutput
}

type BucketIamPolicyBindingsItemArgs struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprPtrInput `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BucketIamPolicyBindingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamPolicyBindingsItem)(nil)).Elem()
}

func (i BucketIamPolicyBindingsItemArgs) ToBucketIamPolicyBindingsItemOutput() BucketIamPolicyBindingsItemOutput {
	return i.ToBucketIamPolicyBindingsItemOutputWithContext(context.Background())
}

func (i BucketIamPolicyBindingsItemArgs) ToBucketIamPolicyBindingsItemOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamPolicyBindingsItemOutput)
}

// BucketIamPolicyBindingsItemArrayInput is an input type that accepts BucketIamPolicyBindingsItemArray and BucketIamPolicyBindingsItemArrayOutput values.
// You can construct a concrete instance of `BucketIamPolicyBindingsItemArrayInput` via:
//
//          BucketIamPolicyBindingsItemArray{ BucketIamPolicyBindingsItemArgs{...} }
type BucketIamPolicyBindingsItemArrayInput interface {
	pulumi.Input

	ToBucketIamPolicyBindingsItemArrayOutput() BucketIamPolicyBindingsItemArrayOutput
	ToBucketIamPolicyBindingsItemArrayOutputWithContext(context.Context) BucketIamPolicyBindingsItemArrayOutput
}

type BucketIamPolicyBindingsItemArray []BucketIamPolicyBindingsItemInput

func (BucketIamPolicyBindingsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIamPolicyBindingsItem)(nil)).Elem()
}

func (i BucketIamPolicyBindingsItemArray) ToBucketIamPolicyBindingsItemArrayOutput() BucketIamPolicyBindingsItemArrayOutput {
	return i.ToBucketIamPolicyBindingsItemArrayOutputWithContext(context.Background())
}

func (i BucketIamPolicyBindingsItemArray) ToBucketIamPolicyBindingsItemArrayOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamPolicyBindingsItemArrayOutput)
}

type BucketIamPolicyBindingsItemOutput struct{ *pulumi.OutputState }

func (BucketIamPolicyBindingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamPolicyBindingsItem)(nil)).Elem()
}

func (o BucketIamPolicyBindingsItemOutput) ToBucketIamPolicyBindingsItemOutput() BucketIamPolicyBindingsItemOutput {
	return o
}

func (o BucketIamPolicyBindingsItemOutput) ToBucketIamPolicyBindingsItemOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemOutput {
	return o
}

// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
func (o BucketIamPolicyBindingsItemOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItem) *Expr { return v.Condition }).(ExprPtrOutput)
}

// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
func (o BucketIamPolicyBindingsItemOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItem) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
// The new IAM roles are:
// - roles/storage.admin — Full control of Google Cloud Storage resources.
// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
func (o BucketIamPolicyBindingsItemOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItem) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BucketIamPolicyBindingsItemArrayOutput struct{ *pulumi.OutputState }

func (BucketIamPolicyBindingsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIamPolicyBindingsItem)(nil)).Elem()
}

func (o BucketIamPolicyBindingsItemArrayOutput) ToBucketIamPolicyBindingsItemArrayOutput() BucketIamPolicyBindingsItemArrayOutput {
	return o
}

func (o BucketIamPolicyBindingsItemArrayOutput) ToBucketIamPolicyBindingsItemArrayOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemArrayOutput {
	return o
}

func (o BucketIamPolicyBindingsItemArrayOutput) Index(i pulumi.IntInput) BucketIamPolicyBindingsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketIamPolicyBindingsItem {
		return vs[0].([]BucketIamPolicyBindingsItem)[vs[1].(int)]
	}).(BucketIamPolicyBindingsItemOutput)
}

type BucketIamPolicyBindingsItemResponse struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprResponse `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members []string `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role string `pulumi:"role"`
}

// BucketIamPolicyBindingsItemResponseInput is an input type that accepts BucketIamPolicyBindingsItemResponseArgs and BucketIamPolicyBindingsItemResponseOutput values.
// You can construct a concrete instance of `BucketIamPolicyBindingsItemResponseInput` via:
//
//          BucketIamPolicyBindingsItemResponseArgs{...}
type BucketIamPolicyBindingsItemResponseInput interface {
	pulumi.Input

	ToBucketIamPolicyBindingsItemResponseOutput() BucketIamPolicyBindingsItemResponseOutput
	ToBucketIamPolicyBindingsItemResponseOutputWithContext(context.Context) BucketIamPolicyBindingsItemResponseOutput
}

type BucketIamPolicyBindingsItemResponseArgs struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprResponseInput `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role pulumi.StringInput `pulumi:"role"`
}

func (BucketIamPolicyBindingsItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (i BucketIamPolicyBindingsItemResponseArgs) ToBucketIamPolicyBindingsItemResponseOutput() BucketIamPolicyBindingsItemResponseOutput {
	return i.ToBucketIamPolicyBindingsItemResponseOutputWithContext(context.Background())
}

func (i BucketIamPolicyBindingsItemResponseArgs) ToBucketIamPolicyBindingsItemResponseOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamPolicyBindingsItemResponseOutput)
}

// BucketIamPolicyBindingsItemResponseArrayInput is an input type that accepts BucketIamPolicyBindingsItemResponseArray and BucketIamPolicyBindingsItemResponseArrayOutput values.
// You can construct a concrete instance of `BucketIamPolicyBindingsItemResponseArrayInput` via:
//
//          BucketIamPolicyBindingsItemResponseArray{ BucketIamPolicyBindingsItemResponseArgs{...} }
type BucketIamPolicyBindingsItemResponseArrayInput interface {
	pulumi.Input

	ToBucketIamPolicyBindingsItemResponseArrayOutput() BucketIamPolicyBindingsItemResponseArrayOutput
	ToBucketIamPolicyBindingsItemResponseArrayOutputWithContext(context.Context) BucketIamPolicyBindingsItemResponseArrayOutput
}

type BucketIamPolicyBindingsItemResponseArray []BucketIamPolicyBindingsItemResponseInput

func (BucketIamPolicyBindingsItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (i BucketIamPolicyBindingsItemResponseArray) ToBucketIamPolicyBindingsItemResponseArrayOutput() BucketIamPolicyBindingsItemResponseArrayOutput {
	return i.ToBucketIamPolicyBindingsItemResponseArrayOutputWithContext(context.Background())
}

func (i BucketIamPolicyBindingsItemResponseArray) ToBucketIamPolicyBindingsItemResponseArrayOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketIamPolicyBindingsItemResponseArrayOutput)
}

type BucketIamPolicyBindingsItemResponseOutput struct{ *pulumi.OutputState }

func (BucketIamPolicyBindingsItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (o BucketIamPolicyBindingsItemResponseOutput) ToBucketIamPolicyBindingsItemResponseOutput() BucketIamPolicyBindingsItemResponseOutput {
	return o
}

func (o BucketIamPolicyBindingsItemResponseOutput) ToBucketIamPolicyBindingsItemResponseOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemResponseOutput {
	return o
}

// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
func (o BucketIamPolicyBindingsItemResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItemResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
func (o BucketIamPolicyBindingsItemResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItemResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
// The new IAM roles are:
// - roles/storage.admin — Full control of Google Cloud Storage resources.
// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
func (o BucketIamPolicyBindingsItemResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BucketIamPolicyBindingsItemResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BucketIamPolicyBindingsItemResponseArrayOutput struct{ *pulumi.OutputState }

func (BucketIamPolicyBindingsItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (o BucketIamPolicyBindingsItemResponseArrayOutput) ToBucketIamPolicyBindingsItemResponseArrayOutput() BucketIamPolicyBindingsItemResponseArrayOutput {
	return o
}

func (o BucketIamPolicyBindingsItemResponseArrayOutput) ToBucketIamPolicyBindingsItemResponseArrayOutputWithContext(ctx context.Context) BucketIamPolicyBindingsItemResponseArrayOutput {
	return o
}

func (o BucketIamPolicyBindingsItemResponseArrayOutput) Index(i pulumi.IntInput) BucketIamPolicyBindingsItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketIamPolicyBindingsItemResponse {
		return vs[0].([]BucketIamPolicyBindingsItemResponse)[vs[1].(int)]
	}).(BucketIamPolicyBindingsItemResponseOutput)
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycle struct {
	// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
	Rule []BucketLifecycleRuleItem `pulumi:"rule"`
}

// BucketLifecycleInput is an input type that accepts BucketLifecycleArgs and BucketLifecycleOutput values.
// You can construct a concrete instance of `BucketLifecycleInput` via:
//
//          BucketLifecycleArgs{...}
type BucketLifecycleInput interface {
	pulumi.Input

	ToBucketLifecycleOutput() BucketLifecycleOutput
	ToBucketLifecycleOutputWithContext(context.Context) BucketLifecycleOutput
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycleArgs struct {
	// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
	Rule BucketLifecycleRuleItemArrayInput `pulumi:"rule"`
}

func (BucketLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycle)(nil)).Elem()
}

func (i BucketLifecycleArgs) ToBucketLifecycleOutput() BucketLifecycleOutput {
	return i.ToBucketLifecycleOutputWithContext(context.Background())
}

func (i BucketLifecycleArgs) ToBucketLifecycleOutputWithContext(ctx context.Context) BucketLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleOutput)
}

func (i BucketLifecycleArgs) ToBucketLifecyclePtrOutput() BucketLifecyclePtrOutput {
	return i.ToBucketLifecyclePtrOutputWithContext(context.Background())
}

func (i BucketLifecycleArgs) ToBucketLifecyclePtrOutputWithContext(ctx context.Context) BucketLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleOutput).ToBucketLifecyclePtrOutputWithContext(ctx)
}

// BucketLifecyclePtrInput is an input type that accepts BucketLifecycleArgs, BucketLifecyclePtr and BucketLifecyclePtrOutput values.
// You can construct a concrete instance of `BucketLifecyclePtrInput` via:
//
//          BucketLifecycleArgs{...}
//
//  or:
//
//          nil
type BucketLifecyclePtrInput interface {
	pulumi.Input

	ToBucketLifecyclePtrOutput() BucketLifecyclePtrOutput
	ToBucketLifecyclePtrOutputWithContext(context.Context) BucketLifecyclePtrOutput
}

type bucketLifecyclePtrType BucketLifecycleArgs

func BucketLifecyclePtr(v *BucketLifecycleArgs) BucketLifecyclePtrInput {
	return (*bucketLifecyclePtrType)(v)
}

func (*bucketLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycle)(nil)).Elem()
}

func (i *bucketLifecyclePtrType) ToBucketLifecyclePtrOutput() BucketLifecyclePtrOutput {
	return i.ToBucketLifecyclePtrOutputWithContext(context.Background())
}

func (i *bucketLifecyclePtrType) ToBucketLifecyclePtrOutputWithContext(ctx context.Context) BucketLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecyclePtrOutput)
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycleOutput struct{ *pulumi.OutputState }

func (BucketLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycle)(nil)).Elem()
}

func (o BucketLifecycleOutput) ToBucketLifecycleOutput() BucketLifecycleOutput {
	return o
}

func (o BucketLifecycleOutput) ToBucketLifecycleOutputWithContext(ctx context.Context) BucketLifecycleOutput {
	return o
}

func (o BucketLifecycleOutput) ToBucketLifecyclePtrOutput() BucketLifecyclePtrOutput {
	return o.ToBucketLifecyclePtrOutputWithContext(context.Background())
}

func (o BucketLifecycleOutput) ToBucketLifecyclePtrOutputWithContext(ctx context.Context) BucketLifecyclePtrOutput {
	return o.ApplyT(func(v BucketLifecycle) *BucketLifecycle {
		return &v
	}).(BucketLifecyclePtrOutput)
}

// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
func (o BucketLifecycleOutput) Rule() BucketLifecycleRuleItemArrayOutput {
	return o.ApplyT(func(v BucketLifecycle) []BucketLifecycleRuleItem { return v.Rule }).(BucketLifecycleRuleItemArrayOutput)
}

type BucketLifecyclePtrOutput struct{ *pulumi.OutputState }

func (BucketLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycle)(nil)).Elem()
}

func (o BucketLifecyclePtrOutput) ToBucketLifecyclePtrOutput() BucketLifecyclePtrOutput {
	return o
}

func (o BucketLifecyclePtrOutput) ToBucketLifecyclePtrOutputWithContext(ctx context.Context) BucketLifecyclePtrOutput {
	return o
}

func (o BucketLifecyclePtrOutput) Elem() BucketLifecycleOutput {
	return o.ApplyT(func(v *BucketLifecycle) BucketLifecycle { return *v }).(BucketLifecycleOutput)
}

// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
func (o BucketLifecyclePtrOutput) Rule() BucketLifecycleRuleItemArrayOutput {
	return o.ApplyT(func(v *BucketLifecycle) []BucketLifecycleRuleItem {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(BucketLifecycleRuleItemArrayOutput)
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycleResponse struct {
	// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
	Rule []BucketLifecycleRuleItemResponse `pulumi:"rule"`
}

// BucketLifecycleResponseInput is an input type that accepts BucketLifecycleResponseArgs and BucketLifecycleResponseOutput values.
// You can construct a concrete instance of `BucketLifecycleResponseInput` via:
//
//          BucketLifecycleResponseArgs{...}
type BucketLifecycleResponseInput interface {
	pulumi.Input

	ToBucketLifecycleResponseOutput() BucketLifecycleResponseOutput
	ToBucketLifecycleResponseOutputWithContext(context.Context) BucketLifecycleResponseOutput
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycleResponseArgs struct {
	// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
	Rule BucketLifecycleRuleItemResponseArrayInput `pulumi:"rule"`
}

func (BucketLifecycleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleResponse)(nil)).Elem()
}

func (i BucketLifecycleResponseArgs) ToBucketLifecycleResponseOutput() BucketLifecycleResponseOutput {
	return i.ToBucketLifecycleResponseOutputWithContext(context.Background())
}

func (i BucketLifecycleResponseArgs) ToBucketLifecycleResponseOutputWithContext(ctx context.Context) BucketLifecycleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleResponseOutput)
}

func (i BucketLifecycleResponseArgs) ToBucketLifecycleResponsePtrOutput() BucketLifecycleResponsePtrOutput {
	return i.ToBucketLifecycleResponsePtrOutputWithContext(context.Background())
}

func (i BucketLifecycleResponseArgs) ToBucketLifecycleResponsePtrOutputWithContext(ctx context.Context) BucketLifecycleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleResponseOutput).ToBucketLifecycleResponsePtrOutputWithContext(ctx)
}

// BucketLifecycleResponsePtrInput is an input type that accepts BucketLifecycleResponseArgs, BucketLifecycleResponsePtr and BucketLifecycleResponsePtrOutput values.
// You can construct a concrete instance of `BucketLifecycleResponsePtrInput` via:
//
//          BucketLifecycleResponseArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleResponsePtrInput interface {
	pulumi.Input

	ToBucketLifecycleResponsePtrOutput() BucketLifecycleResponsePtrOutput
	ToBucketLifecycleResponsePtrOutputWithContext(context.Context) BucketLifecycleResponsePtrOutput
}

type bucketLifecycleResponsePtrType BucketLifecycleResponseArgs

func BucketLifecycleResponsePtr(v *BucketLifecycleResponseArgs) BucketLifecycleResponsePtrInput {
	return (*bucketLifecycleResponsePtrType)(v)
}

func (*bucketLifecycleResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleResponse)(nil)).Elem()
}

func (i *bucketLifecycleResponsePtrType) ToBucketLifecycleResponsePtrOutput() BucketLifecycleResponsePtrOutput {
	return i.ToBucketLifecycleResponsePtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleResponsePtrType) ToBucketLifecycleResponsePtrOutputWithContext(ctx context.Context) BucketLifecycleResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleResponsePtrOutput)
}

// The bucket's lifecycle configuration. See lifecycle management for more information.
type BucketLifecycleResponseOutput struct{ *pulumi.OutputState }

func (BucketLifecycleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleResponse)(nil)).Elem()
}

func (o BucketLifecycleResponseOutput) ToBucketLifecycleResponseOutput() BucketLifecycleResponseOutput {
	return o
}

func (o BucketLifecycleResponseOutput) ToBucketLifecycleResponseOutputWithContext(ctx context.Context) BucketLifecycleResponseOutput {
	return o
}

func (o BucketLifecycleResponseOutput) ToBucketLifecycleResponsePtrOutput() BucketLifecycleResponsePtrOutput {
	return o.ToBucketLifecycleResponsePtrOutputWithContext(context.Background())
}

func (o BucketLifecycleResponseOutput) ToBucketLifecycleResponsePtrOutputWithContext(ctx context.Context) BucketLifecycleResponsePtrOutput {
	return o.ApplyT(func(v BucketLifecycleResponse) *BucketLifecycleResponse {
		return &v
	}).(BucketLifecycleResponsePtrOutput)
}

// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
func (o BucketLifecycleResponseOutput) Rule() BucketLifecycleRuleItemResponseArrayOutput {
	return o.ApplyT(func(v BucketLifecycleResponse) []BucketLifecycleRuleItemResponse { return v.Rule }).(BucketLifecycleRuleItemResponseArrayOutput)
}

type BucketLifecycleResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleResponse)(nil)).Elem()
}

func (o BucketLifecycleResponsePtrOutput) ToBucketLifecycleResponsePtrOutput() BucketLifecycleResponsePtrOutput {
	return o
}

func (o BucketLifecycleResponsePtrOutput) ToBucketLifecycleResponsePtrOutputWithContext(ctx context.Context) BucketLifecycleResponsePtrOutput {
	return o
}

func (o BucketLifecycleResponsePtrOutput) Elem() BucketLifecycleResponseOutput {
	return o.ApplyT(func(v *BucketLifecycleResponse) BucketLifecycleResponse { return *v }).(BucketLifecycleResponseOutput)
}

// A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
func (o BucketLifecycleResponsePtrOutput) Rule() BucketLifecycleRuleItemResponseArrayOutput {
	return o.ApplyT(func(v *BucketLifecycleResponse) []BucketLifecycleRuleItemResponse {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(BucketLifecycleRuleItemResponseArrayOutput)
}

type BucketLifecycleRuleItem struct {
	// The action to take.
	Action *BucketLifecycleRuleItemAction `pulumi:"action"`
	// The condition(s) under which the action will be taken.
	Condition *BucketLifecycleRuleItemCondition `pulumi:"condition"`
}

// BucketLifecycleRuleItemInput is an input type that accepts BucketLifecycleRuleItemArgs and BucketLifecycleRuleItemOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemInput` via:
//
//          BucketLifecycleRuleItemArgs{...}
type BucketLifecycleRuleItemInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemOutput() BucketLifecycleRuleItemOutput
	ToBucketLifecycleRuleItemOutputWithContext(context.Context) BucketLifecycleRuleItemOutput
}

type BucketLifecycleRuleItemArgs struct {
	// The action to take.
	Action BucketLifecycleRuleItemActionPtrInput `pulumi:"action"`
	// The condition(s) under which the action will be taken.
	Condition BucketLifecycleRuleItemConditionPtrInput `pulumi:"condition"`
}

func (BucketLifecycleRuleItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItem)(nil)).Elem()
}

func (i BucketLifecycleRuleItemArgs) ToBucketLifecycleRuleItemOutput() BucketLifecycleRuleItemOutput {
	return i.ToBucketLifecycleRuleItemOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemArgs) ToBucketLifecycleRuleItemOutputWithContext(ctx context.Context) BucketLifecycleRuleItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemOutput)
}

// BucketLifecycleRuleItemArrayInput is an input type that accepts BucketLifecycleRuleItemArray and BucketLifecycleRuleItemArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemArrayInput` via:
//
//          BucketLifecycleRuleItemArray{ BucketLifecycleRuleItemArgs{...} }
type BucketLifecycleRuleItemArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemArrayOutput() BucketLifecycleRuleItemArrayOutput
	ToBucketLifecycleRuleItemArrayOutputWithContext(context.Context) BucketLifecycleRuleItemArrayOutput
}

type BucketLifecycleRuleItemArray []BucketLifecycleRuleItemInput

func (BucketLifecycleRuleItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleItem)(nil)).Elem()
}

func (i BucketLifecycleRuleItemArray) ToBucketLifecycleRuleItemArrayOutput() BucketLifecycleRuleItemArrayOutput {
	return i.ToBucketLifecycleRuleItemArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemArray) ToBucketLifecycleRuleItemArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemArrayOutput)
}

type BucketLifecycleRuleItemOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItem)(nil)).Elem()
}

func (o BucketLifecycleRuleItemOutput) ToBucketLifecycleRuleItemOutput() BucketLifecycleRuleItemOutput {
	return o
}

func (o BucketLifecycleRuleItemOutput) ToBucketLifecycleRuleItemOutputWithContext(ctx context.Context) BucketLifecycleRuleItemOutput {
	return o
}

// The action to take.
func (o BucketLifecycleRuleItemOutput) Action() BucketLifecycleRuleItemActionPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItem) *BucketLifecycleRuleItemAction { return v.Action }).(BucketLifecycleRuleItemActionPtrOutput)
}

// The condition(s) under which the action will be taken.
func (o BucketLifecycleRuleItemOutput) Condition() BucketLifecycleRuleItemConditionPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItem) *BucketLifecycleRuleItemCondition { return v.Condition }).(BucketLifecycleRuleItemConditionPtrOutput)
}

type BucketLifecycleRuleItemArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleItem)(nil)).Elem()
}

func (o BucketLifecycleRuleItemArrayOutput) ToBucketLifecycleRuleItemArrayOutput() BucketLifecycleRuleItemArrayOutput {
	return o
}

func (o BucketLifecycleRuleItemArrayOutput) ToBucketLifecycleRuleItemArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleItemArrayOutput {
	return o
}

func (o BucketLifecycleRuleItemArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleItem {
		return vs[0].([]BucketLifecycleRuleItem)[vs[1].(int)]
	}).(BucketLifecycleRuleItemOutput)
}

// The action to take.
type BucketLifecycleRuleItemAction struct {
	// Target storage class. Required iff the type of the action is SetStorageClass.
	StorageClass *string `pulumi:"storageClass"`
	// Type of the action. Currently, only Delete and SetStorageClass are supported.
	Type *string `pulumi:"type"`
}

// BucketLifecycleRuleItemActionInput is an input type that accepts BucketLifecycleRuleItemActionArgs and BucketLifecycleRuleItemActionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemActionInput` via:
//
//          BucketLifecycleRuleItemActionArgs{...}
type BucketLifecycleRuleItemActionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemActionOutput() BucketLifecycleRuleItemActionOutput
	ToBucketLifecycleRuleItemActionOutputWithContext(context.Context) BucketLifecycleRuleItemActionOutput
}

// The action to take.
type BucketLifecycleRuleItemActionArgs struct {
	// Target storage class. Required iff the type of the action is SetStorageClass.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// Type of the action. Currently, only Delete and SetStorageClass are supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BucketLifecycleRuleItemActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemAction)(nil)).Elem()
}

func (i BucketLifecycleRuleItemActionArgs) ToBucketLifecycleRuleItemActionOutput() BucketLifecycleRuleItemActionOutput {
	return i.ToBucketLifecycleRuleItemActionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemActionArgs) ToBucketLifecycleRuleItemActionOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemActionOutput)
}

func (i BucketLifecycleRuleItemActionArgs) ToBucketLifecycleRuleItemActionPtrOutput() BucketLifecycleRuleItemActionPtrOutput {
	return i.ToBucketLifecycleRuleItemActionPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemActionArgs) ToBucketLifecycleRuleItemActionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemActionOutput).ToBucketLifecycleRuleItemActionPtrOutputWithContext(ctx)
}

// BucketLifecycleRuleItemActionPtrInput is an input type that accepts BucketLifecycleRuleItemActionArgs, BucketLifecycleRuleItemActionPtr and BucketLifecycleRuleItemActionPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemActionPtrInput` via:
//
//          BucketLifecycleRuleItemActionArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleRuleItemActionPtrInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemActionPtrOutput() BucketLifecycleRuleItemActionPtrOutput
	ToBucketLifecycleRuleItemActionPtrOutputWithContext(context.Context) BucketLifecycleRuleItemActionPtrOutput
}

type bucketLifecycleRuleItemActionPtrType BucketLifecycleRuleItemActionArgs

func BucketLifecycleRuleItemActionPtr(v *BucketLifecycleRuleItemActionArgs) BucketLifecycleRuleItemActionPtrInput {
	return (*bucketLifecycleRuleItemActionPtrType)(v)
}

func (*bucketLifecycleRuleItemActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleItemAction)(nil)).Elem()
}

func (i *bucketLifecycleRuleItemActionPtrType) ToBucketLifecycleRuleItemActionPtrOutput() BucketLifecycleRuleItemActionPtrOutput {
	return i.ToBucketLifecycleRuleItemActionPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleRuleItemActionPtrType) ToBucketLifecycleRuleItemActionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemActionPtrOutput)
}

// The action to take.
type BucketLifecycleRuleItemActionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemAction)(nil)).Elem()
}

func (o BucketLifecycleRuleItemActionOutput) ToBucketLifecycleRuleItemActionOutput() BucketLifecycleRuleItemActionOutput {
	return o
}

func (o BucketLifecycleRuleItemActionOutput) ToBucketLifecycleRuleItemActionOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionOutput {
	return o
}

func (o BucketLifecycleRuleItemActionOutput) ToBucketLifecycleRuleItemActionPtrOutput() BucketLifecycleRuleItemActionPtrOutput {
	return o.ToBucketLifecycleRuleItemActionPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleRuleItemActionOutput) ToBucketLifecycleRuleItemActionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemAction) *BucketLifecycleRuleItemAction {
		return &v
	}).(BucketLifecycleRuleItemActionPtrOutput)
}

// Target storage class. Required iff the type of the action is SetStorageClass.
func (o BucketLifecycleRuleItemActionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemAction) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Type of the action. Currently, only Delete and SetStorageClass are supported.
func (o BucketLifecycleRuleItemActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BucketLifecycleRuleItemActionPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleItemAction)(nil)).Elem()
}

func (o BucketLifecycleRuleItemActionPtrOutput) ToBucketLifecycleRuleItemActionPtrOutput() BucketLifecycleRuleItemActionPtrOutput {
	return o
}

func (o BucketLifecycleRuleItemActionPtrOutput) ToBucketLifecycleRuleItemActionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionPtrOutput {
	return o
}

func (o BucketLifecycleRuleItemActionPtrOutput) Elem() BucketLifecycleRuleItemActionOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemAction) BucketLifecycleRuleItemAction { return *v }).(BucketLifecycleRuleItemActionOutput)
}

// Target storage class. Required iff the type of the action is SetStorageClass.
func (o BucketLifecycleRuleItemActionPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemAction) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

// Type of the action. Currently, only Delete and SetStorageClass are supported.
func (o BucketLifecycleRuleItemActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The action to take.
type BucketLifecycleRuleItemActionResponse struct {
	// Target storage class. Required iff the type of the action is SetStorageClass.
	StorageClass string `pulumi:"storageClass"`
	// Type of the action. Currently, only Delete and SetStorageClass are supported.
	Type string `pulumi:"type"`
}

// BucketLifecycleRuleItemActionResponseInput is an input type that accepts BucketLifecycleRuleItemActionResponseArgs and BucketLifecycleRuleItemActionResponseOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemActionResponseInput` via:
//
//          BucketLifecycleRuleItemActionResponseArgs{...}
type BucketLifecycleRuleItemActionResponseInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemActionResponseOutput() BucketLifecycleRuleItemActionResponseOutput
	ToBucketLifecycleRuleItemActionResponseOutputWithContext(context.Context) BucketLifecycleRuleItemActionResponseOutput
}

// The action to take.
type BucketLifecycleRuleItemActionResponseArgs struct {
	// Target storage class. Required iff the type of the action is SetStorageClass.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
	// Type of the action. Currently, only Delete and SetStorageClass are supported.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BucketLifecycleRuleItemActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemActionResponse)(nil)).Elem()
}

func (i BucketLifecycleRuleItemActionResponseArgs) ToBucketLifecycleRuleItemActionResponseOutput() BucketLifecycleRuleItemActionResponseOutput {
	return i.ToBucketLifecycleRuleItemActionResponseOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemActionResponseArgs) ToBucketLifecycleRuleItemActionResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemActionResponseOutput)
}

// The action to take.
type BucketLifecycleRuleItemActionResponseOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemActionResponse)(nil)).Elem()
}

func (o BucketLifecycleRuleItemActionResponseOutput) ToBucketLifecycleRuleItemActionResponseOutput() BucketLifecycleRuleItemActionResponseOutput {
	return o
}

func (o BucketLifecycleRuleItemActionResponseOutput) ToBucketLifecycleRuleItemActionResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemActionResponseOutput {
	return o
}

// Target storage class. Required iff the type of the action is SetStorageClass.
func (o BucketLifecycleRuleItemActionResponseOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemActionResponse) string { return v.StorageClass }).(pulumi.StringOutput)
}

// Type of the action. Currently, only Delete and SetStorageClass are supported.
func (o BucketLifecycleRuleItemActionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemActionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemCondition struct {
	// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
	Age *int `pulumi:"age"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
	CreatedBefore *string `pulumi:"createdBefore"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
	CustomTimeBefore *string `pulumi:"customTimeBefore"`
	// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
	DaysSinceCustomTime *int `pulumi:"daysSinceCustomTime"`
	// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
	DaysSinceNoncurrentTime *int `pulumi:"daysSinceNoncurrentTime"`
	// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
	IsLive *bool `pulumi:"isLive"`
	// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
	MatchesPattern *string `pulumi:"matchesPattern"`
	// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
	MatchesStorageClass []string `pulumi:"matchesStorageClass"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
	NoncurrentTimeBefore *string `pulumi:"noncurrentTimeBefore"`
	// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
	NumNewerVersions *int `pulumi:"numNewerVersions"`
}

// BucketLifecycleRuleItemConditionInput is an input type that accepts BucketLifecycleRuleItemConditionArgs and BucketLifecycleRuleItemConditionOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemConditionInput` via:
//
//          BucketLifecycleRuleItemConditionArgs{...}
type BucketLifecycleRuleItemConditionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemConditionOutput() BucketLifecycleRuleItemConditionOutput
	ToBucketLifecycleRuleItemConditionOutputWithContext(context.Context) BucketLifecycleRuleItemConditionOutput
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemConditionArgs struct {
	// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
	Age pulumi.IntPtrInput `pulumi:"age"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
	CreatedBefore pulumi.StringPtrInput `pulumi:"createdBefore"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
	CustomTimeBefore pulumi.StringPtrInput `pulumi:"customTimeBefore"`
	// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
	DaysSinceCustomTime pulumi.IntPtrInput `pulumi:"daysSinceCustomTime"`
	// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
	DaysSinceNoncurrentTime pulumi.IntPtrInput `pulumi:"daysSinceNoncurrentTime"`
	// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
	IsLive pulumi.BoolPtrInput `pulumi:"isLive"`
	// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
	MatchesPattern pulumi.StringPtrInput `pulumi:"matchesPattern"`
	// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
	MatchesStorageClass pulumi.StringArrayInput `pulumi:"matchesStorageClass"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
	NoncurrentTimeBefore pulumi.StringPtrInput `pulumi:"noncurrentTimeBefore"`
	// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
	NumNewerVersions pulumi.IntPtrInput `pulumi:"numNewerVersions"`
}

func (BucketLifecycleRuleItemConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemCondition)(nil)).Elem()
}

func (i BucketLifecycleRuleItemConditionArgs) ToBucketLifecycleRuleItemConditionOutput() BucketLifecycleRuleItemConditionOutput {
	return i.ToBucketLifecycleRuleItemConditionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemConditionArgs) ToBucketLifecycleRuleItemConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemConditionOutput)
}

func (i BucketLifecycleRuleItemConditionArgs) ToBucketLifecycleRuleItemConditionPtrOutput() BucketLifecycleRuleItemConditionPtrOutput {
	return i.ToBucketLifecycleRuleItemConditionPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemConditionArgs) ToBucketLifecycleRuleItemConditionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemConditionOutput).ToBucketLifecycleRuleItemConditionPtrOutputWithContext(ctx)
}

// BucketLifecycleRuleItemConditionPtrInput is an input type that accepts BucketLifecycleRuleItemConditionArgs, BucketLifecycleRuleItemConditionPtr and BucketLifecycleRuleItemConditionPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemConditionPtrInput` via:
//
//          BucketLifecycleRuleItemConditionArgs{...}
//
//  or:
//
//          nil
type BucketLifecycleRuleItemConditionPtrInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemConditionPtrOutput() BucketLifecycleRuleItemConditionPtrOutput
	ToBucketLifecycleRuleItemConditionPtrOutputWithContext(context.Context) BucketLifecycleRuleItemConditionPtrOutput
}

type bucketLifecycleRuleItemConditionPtrType BucketLifecycleRuleItemConditionArgs

func BucketLifecycleRuleItemConditionPtr(v *BucketLifecycleRuleItemConditionArgs) BucketLifecycleRuleItemConditionPtrInput {
	return (*bucketLifecycleRuleItemConditionPtrType)(v)
}

func (*bucketLifecycleRuleItemConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleItemCondition)(nil)).Elem()
}

func (i *bucketLifecycleRuleItemConditionPtrType) ToBucketLifecycleRuleItemConditionPtrOutput() BucketLifecycleRuleItemConditionPtrOutput {
	return i.ToBucketLifecycleRuleItemConditionPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleRuleItemConditionPtrType) ToBucketLifecycleRuleItemConditionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemConditionPtrOutput)
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemConditionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemCondition)(nil)).Elem()
}

func (o BucketLifecycleRuleItemConditionOutput) ToBucketLifecycleRuleItemConditionOutput() BucketLifecycleRuleItemConditionOutput {
	return o
}

func (o BucketLifecycleRuleItemConditionOutput) ToBucketLifecycleRuleItemConditionOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionOutput {
	return o
}

func (o BucketLifecycleRuleItemConditionOutput) ToBucketLifecycleRuleItemConditionPtrOutput() BucketLifecycleRuleItemConditionPtrOutput {
	return o.ToBucketLifecycleRuleItemConditionPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleRuleItemConditionOutput) ToBucketLifecycleRuleItemConditionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *BucketLifecycleRuleItemCondition {
		return &v
	}).(BucketLifecycleRuleItemConditionPtrOutput)
}

// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
func (o BucketLifecycleRuleItemConditionOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *int { return v.Age }).(pulumi.IntPtrOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
func (o BucketLifecycleRuleItemConditionOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *string { return v.CreatedBefore }).(pulumi.StringPtrOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
func (o BucketLifecycleRuleItemConditionOutput) CustomTimeBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *string { return v.CustomTimeBefore }).(pulumi.StringPtrOutput)
}

// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
func (o BucketLifecycleRuleItemConditionOutput) DaysSinceCustomTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *int { return v.DaysSinceCustomTime }).(pulumi.IntPtrOutput)
}

// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
func (o BucketLifecycleRuleItemConditionOutput) DaysSinceNoncurrentTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *int { return v.DaysSinceNoncurrentTime }).(pulumi.IntPtrOutput)
}

// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
func (o BucketLifecycleRuleItemConditionOutput) IsLive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *bool { return v.IsLive }).(pulumi.BoolPtrOutput)
}

// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
func (o BucketLifecycleRuleItemConditionOutput) MatchesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *string { return v.MatchesPattern }).(pulumi.StringPtrOutput)
}

// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
func (o BucketLifecycleRuleItemConditionOutput) MatchesStorageClass() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) []string { return v.MatchesStorageClass }).(pulumi.StringArrayOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
func (o BucketLifecycleRuleItemConditionOutput) NoncurrentTimeBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *string { return v.NoncurrentTimeBefore }).(pulumi.StringPtrOutput)
}

// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
func (o BucketLifecycleRuleItemConditionOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemCondition) *int { return v.NumNewerVersions }).(pulumi.IntPtrOutput)
}

type BucketLifecycleRuleItemConditionPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleItemCondition)(nil)).Elem()
}

func (o BucketLifecycleRuleItemConditionPtrOutput) ToBucketLifecycleRuleItemConditionPtrOutput() BucketLifecycleRuleItemConditionPtrOutput {
	return o
}

func (o BucketLifecycleRuleItemConditionPtrOutput) ToBucketLifecycleRuleItemConditionPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionPtrOutput {
	return o
}

func (o BucketLifecycleRuleItemConditionPtrOutput) Elem() BucketLifecycleRuleItemConditionOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) BucketLifecycleRuleItemCondition { return *v }).(BucketLifecycleRuleItemConditionOutput)
}

// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
func (o BucketLifecycleRuleItemConditionPtrOutput) Age() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *int {
		if v == nil {
			return nil
		}
		return v.Age
	}).(pulumi.IntPtrOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
func (o BucketLifecycleRuleItemConditionPtrOutput) CreatedBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBefore
	}).(pulumi.StringPtrOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
func (o BucketLifecycleRuleItemConditionPtrOutput) CustomTimeBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *string {
		if v == nil {
			return nil
		}
		return v.CustomTimeBefore
	}).(pulumi.StringPtrOutput)
}

// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
func (o BucketLifecycleRuleItemConditionPtrOutput) DaysSinceCustomTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *int {
		if v == nil {
			return nil
		}
		return v.DaysSinceCustomTime
	}).(pulumi.IntPtrOutput)
}

// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
func (o BucketLifecycleRuleItemConditionPtrOutput) DaysSinceNoncurrentTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *int {
		if v == nil {
			return nil
		}
		return v.DaysSinceNoncurrentTime
	}).(pulumi.IntPtrOutput)
}

// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
func (o BucketLifecycleRuleItemConditionPtrOutput) IsLive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *bool {
		if v == nil {
			return nil
		}
		return v.IsLive
	}).(pulumi.BoolPtrOutput)
}

// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
func (o BucketLifecycleRuleItemConditionPtrOutput) MatchesPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *string {
		if v == nil {
			return nil
		}
		return v.MatchesPattern
	}).(pulumi.StringPtrOutput)
}

// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
func (o BucketLifecycleRuleItemConditionPtrOutput) MatchesStorageClass() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) []string {
		if v == nil {
			return nil
		}
		return v.MatchesStorageClass
	}).(pulumi.StringArrayOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
func (o BucketLifecycleRuleItemConditionPtrOutput) NoncurrentTimeBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *string {
		if v == nil {
			return nil
		}
		return v.NoncurrentTimeBefore
	}).(pulumi.StringPtrOutput)
}

// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
func (o BucketLifecycleRuleItemConditionPtrOutput) NumNewerVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleRuleItemCondition) *int {
		if v == nil {
			return nil
		}
		return v.NumNewerVersions
	}).(pulumi.IntPtrOutput)
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemConditionResponse struct {
	// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
	Age int `pulumi:"age"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
	CreatedBefore string `pulumi:"createdBefore"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
	CustomTimeBefore string `pulumi:"customTimeBefore"`
	// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
	DaysSinceCustomTime int `pulumi:"daysSinceCustomTime"`
	// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
	DaysSinceNoncurrentTime int `pulumi:"daysSinceNoncurrentTime"`
	// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
	IsLive bool `pulumi:"isLive"`
	// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
	MatchesPattern string `pulumi:"matchesPattern"`
	// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
	MatchesStorageClass []string `pulumi:"matchesStorageClass"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
	NoncurrentTimeBefore string `pulumi:"noncurrentTimeBefore"`
	// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
	NumNewerVersions int `pulumi:"numNewerVersions"`
}

// BucketLifecycleRuleItemConditionResponseInput is an input type that accepts BucketLifecycleRuleItemConditionResponseArgs and BucketLifecycleRuleItemConditionResponseOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemConditionResponseInput` via:
//
//          BucketLifecycleRuleItemConditionResponseArgs{...}
type BucketLifecycleRuleItemConditionResponseInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemConditionResponseOutput() BucketLifecycleRuleItemConditionResponseOutput
	ToBucketLifecycleRuleItemConditionResponseOutputWithContext(context.Context) BucketLifecycleRuleItemConditionResponseOutput
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemConditionResponseArgs struct {
	// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
	Age pulumi.IntInput `pulumi:"age"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
	CreatedBefore pulumi.StringInput `pulumi:"createdBefore"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
	CustomTimeBefore pulumi.StringInput `pulumi:"customTimeBefore"`
	// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
	DaysSinceCustomTime pulumi.IntInput `pulumi:"daysSinceCustomTime"`
	// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
	DaysSinceNoncurrentTime pulumi.IntInput `pulumi:"daysSinceNoncurrentTime"`
	// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
	IsLive pulumi.BoolInput `pulumi:"isLive"`
	// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
	MatchesPattern pulumi.StringInput `pulumi:"matchesPattern"`
	// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
	MatchesStorageClass pulumi.StringArrayInput `pulumi:"matchesStorageClass"`
	// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
	NoncurrentTimeBefore pulumi.StringInput `pulumi:"noncurrentTimeBefore"`
	// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
	NumNewerVersions pulumi.IntInput `pulumi:"numNewerVersions"`
}

func (BucketLifecycleRuleItemConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemConditionResponse)(nil)).Elem()
}

func (i BucketLifecycleRuleItemConditionResponseArgs) ToBucketLifecycleRuleItemConditionResponseOutput() BucketLifecycleRuleItemConditionResponseOutput {
	return i.ToBucketLifecycleRuleItemConditionResponseOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemConditionResponseArgs) ToBucketLifecycleRuleItemConditionResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemConditionResponseOutput)
}

// The condition(s) under which the action will be taken.
type BucketLifecycleRuleItemConditionResponseOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemConditionResponse)(nil)).Elem()
}

func (o BucketLifecycleRuleItemConditionResponseOutput) ToBucketLifecycleRuleItemConditionResponseOutput() BucketLifecycleRuleItemConditionResponseOutput {
	return o
}

func (o BucketLifecycleRuleItemConditionResponseOutput) ToBucketLifecycleRuleItemConditionResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemConditionResponseOutput {
	return o
}

// Age of an object (in days). This condition is satisfied when an object reaches the specified age.
func (o BucketLifecycleRuleItemConditionResponseOutput) Age() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) int { return v.Age }).(pulumi.IntOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
func (o BucketLifecycleRuleItemConditionResponseOutput) CreatedBefore() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) string { return v.CreatedBefore }).(pulumi.StringOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
func (o BucketLifecycleRuleItemConditionResponseOutput) CustomTimeBefore() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) string { return v.CustomTimeBefore }).(pulumi.StringOutput)
}

// Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
func (o BucketLifecycleRuleItemConditionResponseOutput) DaysSinceCustomTime() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) int { return v.DaysSinceCustomTime }).(pulumi.IntOutput)
}

// Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
func (o BucketLifecycleRuleItemConditionResponseOutput) DaysSinceNoncurrentTime() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) int { return v.DaysSinceNoncurrentTime }).(pulumi.IntOutput)
}

// Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
func (o BucketLifecycleRuleItemConditionResponseOutput) IsLive() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) bool { return v.IsLive }).(pulumi.BoolOutput)
}

// A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
func (o BucketLifecycleRuleItemConditionResponseOutput) MatchesPattern() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) string { return v.MatchesPattern }).(pulumi.StringOutput)
}

// Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
func (o BucketLifecycleRuleItemConditionResponseOutput) MatchesStorageClass() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) []string { return v.MatchesStorageClass }).(pulumi.StringArrayOutput)
}

// A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
func (o BucketLifecycleRuleItemConditionResponseOutput) NoncurrentTimeBefore() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) string { return v.NoncurrentTimeBefore }).(pulumi.StringOutput)
}

// Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
func (o BucketLifecycleRuleItemConditionResponseOutput) NumNewerVersions() pulumi.IntOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemConditionResponse) int { return v.NumNewerVersions }).(pulumi.IntOutput)
}

type BucketLifecycleRuleItemResponse struct {
	// The action to take.
	Action BucketLifecycleRuleItemActionResponse `pulumi:"action"`
	// The condition(s) under which the action will be taken.
	Condition BucketLifecycleRuleItemConditionResponse `pulumi:"condition"`
}

// BucketLifecycleRuleItemResponseInput is an input type that accepts BucketLifecycleRuleItemResponseArgs and BucketLifecycleRuleItemResponseOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemResponseInput` via:
//
//          BucketLifecycleRuleItemResponseArgs{...}
type BucketLifecycleRuleItemResponseInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemResponseOutput() BucketLifecycleRuleItemResponseOutput
	ToBucketLifecycleRuleItemResponseOutputWithContext(context.Context) BucketLifecycleRuleItemResponseOutput
}

type BucketLifecycleRuleItemResponseArgs struct {
	// The action to take.
	Action BucketLifecycleRuleItemActionResponseInput `pulumi:"action"`
	// The condition(s) under which the action will be taken.
	Condition BucketLifecycleRuleItemConditionResponseInput `pulumi:"condition"`
}

func (BucketLifecycleRuleItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemResponse)(nil)).Elem()
}

func (i BucketLifecycleRuleItemResponseArgs) ToBucketLifecycleRuleItemResponseOutput() BucketLifecycleRuleItemResponseOutput {
	return i.ToBucketLifecycleRuleItemResponseOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemResponseArgs) ToBucketLifecycleRuleItemResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemResponseOutput)
}

// BucketLifecycleRuleItemResponseArrayInput is an input type that accepts BucketLifecycleRuleItemResponseArray and BucketLifecycleRuleItemResponseArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleRuleItemResponseArrayInput` via:
//
//          BucketLifecycleRuleItemResponseArray{ BucketLifecycleRuleItemResponseArgs{...} }
type BucketLifecycleRuleItemResponseArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleItemResponseArrayOutput() BucketLifecycleRuleItemResponseArrayOutput
	ToBucketLifecycleRuleItemResponseArrayOutputWithContext(context.Context) BucketLifecycleRuleItemResponseArrayOutput
}

type BucketLifecycleRuleItemResponseArray []BucketLifecycleRuleItemResponseInput

func (BucketLifecycleRuleItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleItemResponse)(nil)).Elem()
}

func (i BucketLifecycleRuleItemResponseArray) ToBucketLifecycleRuleItemResponseArrayOutput() BucketLifecycleRuleItemResponseArrayOutput {
	return i.ToBucketLifecycleRuleItemResponseArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleItemResponseArray) ToBucketLifecycleRuleItemResponseArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleItemResponseArrayOutput)
}

type BucketLifecycleRuleItemResponseOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleItemResponse)(nil)).Elem()
}

func (o BucketLifecycleRuleItemResponseOutput) ToBucketLifecycleRuleItemResponseOutput() BucketLifecycleRuleItemResponseOutput {
	return o
}

func (o BucketLifecycleRuleItemResponseOutput) ToBucketLifecycleRuleItemResponseOutputWithContext(ctx context.Context) BucketLifecycleRuleItemResponseOutput {
	return o
}

// The action to take.
func (o BucketLifecycleRuleItemResponseOutput) Action() BucketLifecycleRuleItemActionResponseOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemResponse) BucketLifecycleRuleItemActionResponse { return v.Action }).(BucketLifecycleRuleItemActionResponseOutput)
}

// The condition(s) under which the action will be taken.
func (o BucketLifecycleRuleItemResponseOutput) Condition() BucketLifecycleRuleItemConditionResponseOutput {
	return o.ApplyT(func(v BucketLifecycleRuleItemResponse) BucketLifecycleRuleItemConditionResponse { return v.Condition }).(BucketLifecycleRuleItemConditionResponseOutput)
}

type BucketLifecycleRuleItemResponseArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleRuleItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleItemResponse)(nil)).Elem()
}

func (o BucketLifecycleRuleItemResponseArrayOutput) ToBucketLifecycleRuleItemResponseArrayOutput() BucketLifecycleRuleItemResponseArrayOutput {
	return o
}

func (o BucketLifecycleRuleItemResponseArrayOutput) ToBucketLifecycleRuleItemResponseArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleItemResponseArrayOutput {
	return o
}

func (o BucketLifecycleRuleItemResponseArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleRuleItemResponse {
		return vs[0].([]BucketLifecycleRuleItemResponse)[vs[1].(int)]
	}).(BucketLifecycleRuleItemResponseOutput)
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLogging struct {
	// The destination bucket where the current bucket's logs should be placed.
	LogBucket *string `pulumi:"logBucket"`
	// A prefix for log object names.
	LogObjectPrefix *string `pulumi:"logObjectPrefix"`
}

// BucketLoggingInput is an input type that accepts BucketLoggingArgs and BucketLoggingOutput values.
// You can construct a concrete instance of `BucketLoggingInput` via:
//
//          BucketLoggingArgs{...}
type BucketLoggingInput interface {
	pulumi.Input

	ToBucketLoggingOutput() BucketLoggingOutput
	ToBucketLoggingOutputWithContext(context.Context) BucketLoggingOutput
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLoggingArgs struct {
	// The destination bucket where the current bucket's logs should be placed.
	LogBucket pulumi.StringPtrInput `pulumi:"logBucket"`
	// A prefix for log object names.
	LogObjectPrefix pulumi.StringPtrInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArgs) ToBucketLoggingOutput() BucketLoggingOutput {
	return i.ToBucketLoggingOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput)
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput).ToBucketLoggingPtrOutputWithContext(ctx)
}

// BucketLoggingPtrInput is an input type that accepts BucketLoggingArgs, BucketLoggingPtr and BucketLoggingPtrOutput values.
// You can construct a concrete instance of `BucketLoggingPtrInput` via:
//
//          BucketLoggingArgs{...}
//
//  or:
//
//          nil
type BucketLoggingPtrInput interface {
	pulumi.Input

	ToBucketLoggingPtrOutput() BucketLoggingPtrOutput
	ToBucketLoggingPtrOutputWithContext(context.Context) BucketLoggingPtrOutput
}

type bucketLoggingPtrType BucketLoggingArgs

func BucketLoggingPtr(v *BucketLoggingArgs) BucketLoggingPtrInput {
	return (*bucketLoggingPtrType)(v)
}

func (*bucketLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return i.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (i *bucketLoggingPtrType) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingPtrOutput)
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLoggingOutput struct{ *pulumi.OutputState }

func (BucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (o BucketLoggingOutput) ToBucketLoggingOutput() BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o.ToBucketLoggingPtrOutputWithContext(context.Background())
}

func (o BucketLoggingOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o.ApplyT(func(v BucketLogging) *BucketLogging {
		return &v
	}).(BucketLoggingPtrOutput)
}

// The destination bucket where the current bucket's logs should be placed.
func (o BucketLoggingOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLogging) *string { return v.LogBucket }).(pulumi.StringPtrOutput)
}

// A prefix for log object names.
func (o BucketLoggingOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLogging) *string { return v.LogObjectPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingPtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLogging)(nil)).Elem()
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutput() BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) ToBucketLoggingPtrOutputWithContext(ctx context.Context) BucketLoggingPtrOutput {
	return o
}

func (o BucketLoggingPtrOutput) Elem() BucketLoggingOutput {
	return o.ApplyT(func(v *BucketLogging) BucketLogging { return *v }).(BucketLoggingOutput)
}

// The destination bucket where the current bucket's logs should be placed.
func (o BucketLoggingPtrOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLogging) *string {
		if v == nil {
			return nil
		}
		return v.LogBucket
	}).(pulumi.StringPtrOutput)
}

// A prefix for log object names.
func (o BucketLoggingPtrOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLogging) *string {
		if v == nil {
			return nil
		}
		return v.LogObjectPrefix
	}).(pulumi.StringPtrOutput)
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLoggingResponse struct {
	// The destination bucket where the current bucket's logs should be placed.
	LogBucket string `pulumi:"logBucket"`
	// A prefix for log object names.
	LogObjectPrefix string `pulumi:"logObjectPrefix"`
}

// BucketLoggingResponseInput is an input type that accepts BucketLoggingResponseArgs and BucketLoggingResponseOutput values.
// You can construct a concrete instance of `BucketLoggingResponseInput` via:
//
//          BucketLoggingResponseArgs{...}
type BucketLoggingResponseInput interface {
	pulumi.Input

	ToBucketLoggingResponseOutput() BucketLoggingResponseOutput
	ToBucketLoggingResponseOutputWithContext(context.Context) BucketLoggingResponseOutput
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLoggingResponseArgs struct {
	// The destination bucket where the current bucket's logs should be placed.
	LogBucket pulumi.StringInput `pulumi:"logBucket"`
	// A prefix for log object names.
	LogObjectPrefix pulumi.StringInput `pulumi:"logObjectPrefix"`
}

func (BucketLoggingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingResponse)(nil)).Elem()
}

func (i BucketLoggingResponseArgs) ToBucketLoggingResponseOutput() BucketLoggingResponseOutput {
	return i.ToBucketLoggingResponseOutputWithContext(context.Background())
}

func (i BucketLoggingResponseArgs) ToBucketLoggingResponseOutputWithContext(ctx context.Context) BucketLoggingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingResponseOutput)
}

func (i BucketLoggingResponseArgs) ToBucketLoggingResponsePtrOutput() BucketLoggingResponsePtrOutput {
	return i.ToBucketLoggingResponsePtrOutputWithContext(context.Background())
}

func (i BucketLoggingResponseArgs) ToBucketLoggingResponsePtrOutputWithContext(ctx context.Context) BucketLoggingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingResponseOutput).ToBucketLoggingResponsePtrOutputWithContext(ctx)
}

// BucketLoggingResponsePtrInput is an input type that accepts BucketLoggingResponseArgs, BucketLoggingResponsePtr and BucketLoggingResponsePtrOutput values.
// You can construct a concrete instance of `BucketLoggingResponsePtrInput` via:
//
//          BucketLoggingResponseArgs{...}
//
//  or:
//
//          nil
type BucketLoggingResponsePtrInput interface {
	pulumi.Input

	ToBucketLoggingResponsePtrOutput() BucketLoggingResponsePtrOutput
	ToBucketLoggingResponsePtrOutputWithContext(context.Context) BucketLoggingResponsePtrOutput
}

type bucketLoggingResponsePtrType BucketLoggingResponseArgs

func BucketLoggingResponsePtr(v *BucketLoggingResponseArgs) BucketLoggingResponsePtrInput {
	return (*bucketLoggingResponsePtrType)(v)
}

func (*bucketLoggingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingResponse)(nil)).Elem()
}

func (i *bucketLoggingResponsePtrType) ToBucketLoggingResponsePtrOutput() BucketLoggingResponsePtrOutput {
	return i.ToBucketLoggingResponsePtrOutputWithContext(context.Background())
}

func (i *bucketLoggingResponsePtrType) ToBucketLoggingResponsePtrOutputWithContext(ctx context.Context) BucketLoggingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingResponsePtrOutput)
}

// The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
type BucketLoggingResponseOutput struct{ *pulumi.OutputState }

func (BucketLoggingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLoggingResponse)(nil)).Elem()
}

func (o BucketLoggingResponseOutput) ToBucketLoggingResponseOutput() BucketLoggingResponseOutput {
	return o
}

func (o BucketLoggingResponseOutput) ToBucketLoggingResponseOutputWithContext(ctx context.Context) BucketLoggingResponseOutput {
	return o
}

func (o BucketLoggingResponseOutput) ToBucketLoggingResponsePtrOutput() BucketLoggingResponsePtrOutput {
	return o.ToBucketLoggingResponsePtrOutputWithContext(context.Background())
}

func (o BucketLoggingResponseOutput) ToBucketLoggingResponsePtrOutputWithContext(ctx context.Context) BucketLoggingResponsePtrOutput {
	return o.ApplyT(func(v BucketLoggingResponse) *BucketLoggingResponse {
		return &v
	}).(BucketLoggingResponsePtrOutput)
}

// The destination bucket where the current bucket's logs should be placed.
func (o BucketLoggingResponseOutput) LogBucket() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLoggingResponse) string { return v.LogBucket }).(pulumi.StringOutput)
}

// A prefix for log object names.
func (o BucketLoggingResponseOutput) LogObjectPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketLoggingResponse) string { return v.LogObjectPrefix }).(pulumi.StringOutput)
}

type BucketLoggingResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketLoggingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLoggingResponse)(nil)).Elem()
}

func (o BucketLoggingResponsePtrOutput) ToBucketLoggingResponsePtrOutput() BucketLoggingResponsePtrOutput {
	return o
}

func (o BucketLoggingResponsePtrOutput) ToBucketLoggingResponsePtrOutputWithContext(ctx context.Context) BucketLoggingResponsePtrOutput {
	return o
}

func (o BucketLoggingResponsePtrOutput) Elem() BucketLoggingResponseOutput {
	return o.ApplyT(func(v *BucketLoggingResponse) BucketLoggingResponse { return *v }).(BucketLoggingResponseOutput)
}

// The destination bucket where the current bucket's logs should be placed.
func (o BucketLoggingResponsePtrOutput) LogBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLoggingResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogBucket
	}).(pulumi.StringPtrOutput)
}

// A prefix for log object names.
func (o BucketLoggingResponsePtrOutput) LogObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLoggingResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogObjectPrefix
	}).(pulumi.StringPtrOutput)
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryption struct {
	// The encryption algorithm.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// SHA256 hash value of the encryption key.
	KeySha256 *string `pulumi:"keySha256"`
}

// BucketObjectCustomerEncryptionInput is an input type that accepts BucketObjectCustomerEncryptionArgs and BucketObjectCustomerEncryptionOutput values.
// You can construct a concrete instance of `BucketObjectCustomerEncryptionInput` via:
//
//          BucketObjectCustomerEncryptionArgs{...}
type BucketObjectCustomerEncryptionInput interface {
	pulumi.Input

	ToBucketObjectCustomerEncryptionOutput() BucketObjectCustomerEncryptionOutput
	ToBucketObjectCustomerEncryptionOutputWithContext(context.Context) BucketObjectCustomerEncryptionOutput
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryptionArgs struct {
	// The encryption algorithm.
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// SHA256 hash value of the encryption key.
	KeySha256 pulumi.StringPtrInput `pulumi:"keySha256"`
}

func (BucketObjectCustomerEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectCustomerEncryption)(nil)).Elem()
}

func (i BucketObjectCustomerEncryptionArgs) ToBucketObjectCustomerEncryptionOutput() BucketObjectCustomerEncryptionOutput {
	return i.ToBucketObjectCustomerEncryptionOutputWithContext(context.Background())
}

func (i BucketObjectCustomerEncryptionArgs) ToBucketObjectCustomerEncryptionOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionOutput)
}

func (i BucketObjectCustomerEncryptionArgs) ToBucketObjectCustomerEncryptionPtrOutput() BucketObjectCustomerEncryptionPtrOutput {
	return i.ToBucketObjectCustomerEncryptionPtrOutputWithContext(context.Background())
}

func (i BucketObjectCustomerEncryptionArgs) ToBucketObjectCustomerEncryptionPtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionOutput).ToBucketObjectCustomerEncryptionPtrOutputWithContext(ctx)
}

// BucketObjectCustomerEncryptionPtrInput is an input type that accepts BucketObjectCustomerEncryptionArgs, BucketObjectCustomerEncryptionPtr and BucketObjectCustomerEncryptionPtrOutput values.
// You can construct a concrete instance of `BucketObjectCustomerEncryptionPtrInput` via:
//
//          BucketObjectCustomerEncryptionArgs{...}
//
//  or:
//
//          nil
type BucketObjectCustomerEncryptionPtrInput interface {
	pulumi.Input

	ToBucketObjectCustomerEncryptionPtrOutput() BucketObjectCustomerEncryptionPtrOutput
	ToBucketObjectCustomerEncryptionPtrOutputWithContext(context.Context) BucketObjectCustomerEncryptionPtrOutput
}

type bucketObjectCustomerEncryptionPtrType BucketObjectCustomerEncryptionArgs

func BucketObjectCustomerEncryptionPtr(v *BucketObjectCustomerEncryptionArgs) BucketObjectCustomerEncryptionPtrInput {
	return (*bucketObjectCustomerEncryptionPtrType)(v)
}

func (*bucketObjectCustomerEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectCustomerEncryption)(nil)).Elem()
}

func (i *bucketObjectCustomerEncryptionPtrType) ToBucketObjectCustomerEncryptionPtrOutput() BucketObjectCustomerEncryptionPtrOutput {
	return i.ToBucketObjectCustomerEncryptionPtrOutputWithContext(context.Background())
}

func (i *bucketObjectCustomerEncryptionPtrType) ToBucketObjectCustomerEncryptionPtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionPtrOutput)
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryptionOutput struct{ *pulumi.OutputState }

func (BucketObjectCustomerEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectCustomerEncryption)(nil)).Elem()
}

func (o BucketObjectCustomerEncryptionOutput) ToBucketObjectCustomerEncryptionOutput() BucketObjectCustomerEncryptionOutput {
	return o
}

func (o BucketObjectCustomerEncryptionOutput) ToBucketObjectCustomerEncryptionOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionOutput {
	return o
}

func (o BucketObjectCustomerEncryptionOutput) ToBucketObjectCustomerEncryptionPtrOutput() BucketObjectCustomerEncryptionPtrOutput {
	return o.ToBucketObjectCustomerEncryptionPtrOutputWithContext(context.Background())
}

func (o BucketObjectCustomerEncryptionOutput) ToBucketObjectCustomerEncryptionPtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionPtrOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryption) *BucketObjectCustomerEncryption {
		return &v
	}).(BucketObjectCustomerEncryptionPtrOutput)
}

// The encryption algorithm.
func (o BucketObjectCustomerEncryptionOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryption) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// SHA256 hash value of the encryption key.
func (o BucketObjectCustomerEncryptionOutput) KeySha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryption) *string { return v.KeySha256 }).(pulumi.StringPtrOutput)
}

type BucketObjectCustomerEncryptionPtrOutput struct{ *pulumi.OutputState }

func (BucketObjectCustomerEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectCustomerEncryption)(nil)).Elem()
}

func (o BucketObjectCustomerEncryptionPtrOutput) ToBucketObjectCustomerEncryptionPtrOutput() BucketObjectCustomerEncryptionPtrOutput {
	return o
}

func (o BucketObjectCustomerEncryptionPtrOutput) ToBucketObjectCustomerEncryptionPtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionPtrOutput {
	return o
}

func (o BucketObjectCustomerEncryptionPtrOutput) Elem() BucketObjectCustomerEncryptionOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryption) BucketObjectCustomerEncryption { return *v }).(BucketObjectCustomerEncryptionOutput)
}

// The encryption algorithm.
func (o BucketObjectCustomerEncryptionPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryption) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// SHA256 hash value of the encryption key.
func (o BucketObjectCustomerEncryptionPtrOutput) KeySha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeySha256
	}).(pulumi.StringPtrOutput)
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryptionResponse struct {
	// The encryption algorithm.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// SHA256 hash value of the encryption key.
	KeySha256 string `pulumi:"keySha256"`
}

// BucketObjectCustomerEncryptionResponseInput is an input type that accepts BucketObjectCustomerEncryptionResponseArgs and BucketObjectCustomerEncryptionResponseOutput values.
// You can construct a concrete instance of `BucketObjectCustomerEncryptionResponseInput` via:
//
//          BucketObjectCustomerEncryptionResponseArgs{...}
type BucketObjectCustomerEncryptionResponseInput interface {
	pulumi.Input

	ToBucketObjectCustomerEncryptionResponseOutput() BucketObjectCustomerEncryptionResponseOutput
	ToBucketObjectCustomerEncryptionResponseOutputWithContext(context.Context) BucketObjectCustomerEncryptionResponseOutput
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryptionResponseArgs struct {
	// The encryption algorithm.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// SHA256 hash value of the encryption key.
	KeySha256 pulumi.StringInput `pulumi:"keySha256"`
}

func (BucketObjectCustomerEncryptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectCustomerEncryptionResponse)(nil)).Elem()
}

func (i BucketObjectCustomerEncryptionResponseArgs) ToBucketObjectCustomerEncryptionResponseOutput() BucketObjectCustomerEncryptionResponseOutput {
	return i.ToBucketObjectCustomerEncryptionResponseOutputWithContext(context.Background())
}

func (i BucketObjectCustomerEncryptionResponseArgs) ToBucketObjectCustomerEncryptionResponseOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionResponseOutput)
}

func (i BucketObjectCustomerEncryptionResponseArgs) ToBucketObjectCustomerEncryptionResponsePtrOutput() BucketObjectCustomerEncryptionResponsePtrOutput {
	return i.ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i BucketObjectCustomerEncryptionResponseArgs) ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionResponseOutput).ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(ctx)
}

// BucketObjectCustomerEncryptionResponsePtrInput is an input type that accepts BucketObjectCustomerEncryptionResponseArgs, BucketObjectCustomerEncryptionResponsePtr and BucketObjectCustomerEncryptionResponsePtrOutput values.
// You can construct a concrete instance of `BucketObjectCustomerEncryptionResponsePtrInput` via:
//
//          BucketObjectCustomerEncryptionResponseArgs{...}
//
//  or:
//
//          nil
type BucketObjectCustomerEncryptionResponsePtrInput interface {
	pulumi.Input

	ToBucketObjectCustomerEncryptionResponsePtrOutput() BucketObjectCustomerEncryptionResponsePtrOutput
	ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(context.Context) BucketObjectCustomerEncryptionResponsePtrOutput
}

type bucketObjectCustomerEncryptionResponsePtrType BucketObjectCustomerEncryptionResponseArgs

func BucketObjectCustomerEncryptionResponsePtr(v *BucketObjectCustomerEncryptionResponseArgs) BucketObjectCustomerEncryptionResponsePtrInput {
	return (*bucketObjectCustomerEncryptionResponsePtrType)(v)
}

func (*bucketObjectCustomerEncryptionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectCustomerEncryptionResponse)(nil)).Elem()
}

func (i *bucketObjectCustomerEncryptionResponsePtrType) ToBucketObjectCustomerEncryptionResponsePtrOutput() BucketObjectCustomerEncryptionResponsePtrOutput {
	return i.ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(context.Background())
}

func (i *bucketObjectCustomerEncryptionResponsePtrType) ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectCustomerEncryptionResponsePtrOutput)
}

// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
type BucketObjectCustomerEncryptionResponseOutput struct{ *pulumi.OutputState }

func (BucketObjectCustomerEncryptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectCustomerEncryptionResponse)(nil)).Elem()
}

func (o BucketObjectCustomerEncryptionResponseOutput) ToBucketObjectCustomerEncryptionResponseOutput() BucketObjectCustomerEncryptionResponseOutput {
	return o
}

func (o BucketObjectCustomerEncryptionResponseOutput) ToBucketObjectCustomerEncryptionResponseOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponseOutput {
	return o
}

func (o BucketObjectCustomerEncryptionResponseOutput) ToBucketObjectCustomerEncryptionResponsePtrOutput() BucketObjectCustomerEncryptionResponsePtrOutput {
	return o.ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(context.Background())
}

func (o BucketObjectCustomerEncryptionResponseOutput) ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponsePtrOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryptionResponse) *BucketObjectCustomerEncryptionResponse {
		return &v
	}).(BucketObjectCustomerEncryptionResponsePtrOutput)
}

// The encryption algorithm.
func (o BucketObjectCustomerEncryptionResponseOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryptionResponse) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// SHA256 hash value of the encryption key.
func (o BucketObjectCustomerEncryptionResponseOutput) KeySha256() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectCustomerEncryptionResponse) string { return v.KeySha256 }).(pulumi.StringOutput)
}

type BucketObjectCustomerEncryptionResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketObjectCustomerEncryptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectCustomerEncryptionResponse)(nil)).Elem()
}

func (o BucketObjectCustomerEncryptionResponsePtrOutput) ToBucketObjectCustomerEncryptionResponsePtrOutput() BucketObjectCustomerEncryptionResponsePtrOutput {
	return o
}

func (o BucketObjectCustomerEncryptionResponsePtrOutput) ToBucketObjectCustomerEncryptionResponsePtrOutputWithContext(ctx context.Context) BucketObjectCustomerEncryptionResponsePtrOutput {
	return o
}

func (o BucketObjectCustomerEncryptionResponsePtrOutput) Elem() BucketObjectCustomerEncryptionResponseOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryptionResponse) BucketObjectCustomerEncryptionResponse { return *v }).(BucketObjectCustomerEncryptionResponseOutput)
}

// The encryption algorithm.
func (o BucketObjectCustomerEncryptionResponsePtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// SHA256 hash value of the encryption key.
func (o BucketObjectCustomerEncryptionResponsePtrOutput) KeySha256() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectCustomerEncryptionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.KeySha256
	}).(pulumi.StringPtrOutput)
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwner struct {
	// The entity, in the form user-userId.
	Entity *string `pulumi:"entity"`
	// The ID for the entity.
	EntityId *string `pulumi:"entityId"`
}

// BucketObjectOwnerInput is an input type that accepts BucketObjectOwnerArgs and BucketObjectOwnerOutput values.
// You can construct a concrete instance of `BucketObjectOwnerInput` via:
//
//          BucketObjectOwnerArgs{...}
type BucketObjectOwnerInput interface {
	pulumi.Input

	ToBucketObjectOwnerOutput() BucketObjectOwnerOutput
	ToBucketObjectOwnerOutputWithContext(context.Context) BucketObjectOwnerOutput
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwnerArgs struct {
	// The entity, in the form user-userId.
	Entity pulumi.StringPtrInput `pulumi:"entity"`
	// The ID for the entity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
}

func (BucketObjectOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectOwner)(nil)).Elem()
}

func (i BucketObjectOwnerArgs) ToBucketObjectOwnerOutput() BucketObjectOwnerOutput {
	return i.ToBucketObjectOwnerOutputWithContext(context.Background())
}

func (i BucketObjectOwnerArgs) ToBucketObjectOwnerOutputWithContext(ctx context.Context) BucketObjectOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerOutput)
}

func (i BucketObjectOwnerArgs) ToBucketObjectOwnerPtrOutput() BucketObjectOwnerPtrOutput {
	return i.ToBucketObjectOwnerPtrOutputWithContext(context.Background())
}

func (i BucketObjectOwnerArgs) ToBucketObjectOwnerPtrOutputWithContext(ctx context.Context) BucketObjectOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerOutput).ToBucketObjectOwnerPtrOutputWithContext(ctx)
}

// BucketObjectOwnerPtrInput is an input type that accepts BucketObjectOwnerArgs, BucketObjectOwnerPtr and BucketObjectOwnerPtrOutput values.
// You can construct a concrete instance of `BucketObjectOwnerPtrInput` via:
//
//          BucketObjectOwnerArgs{...}
//
//  or:
//
//          nil
type BucketObjectOwnerPtrInput interface {
	pulumi.Input

	ToBucketObjectOwnerPtrOutput() BucketObjectOwnerPtrOutput
	ToBucketObjectOwnerPtrOutputWithContext(context.Context) BucketObjectOwnerPtrOutput
}

type bucketObjectOwnerPtrType BucketObjectOwnerArgs

func BucketObjectOwnerPtr(v *BucketObjectOwnerArgs) BucketObjectOwnerPtrInput {
	return (*bucketObjectOwnerPtrType)(v)
}

func (*bucketObjectOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectOwner)(nil)).Elem()
}

func (i *bucketObjectOwnerPtrType) ToBucketObjectOwnerPtrOutput() BucketObjectOwnerPtrOutput {
	return i.ToBucketObjectOwnerPtrOutputWithContext(context.Background())
}

func (i *bucketObjectOwnerPtrType) ToBucketObjectOwnerPtrOutputWithContext(ctx context.Context) BucketObjectOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerPtrOutput)
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwnerOutput struct{ *pulumi.OutputState }

func (BucketObjectOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectOwner)(nil)).Elem()
}

func (o BucketObjectOwnerOutput) ToBucketObjectOwnerOutput() BucketObjectOwnerOutput {
	return o
}

func (o BucketObjectOwnerOutput) ToBucketObjectOwnerOutputWithContext(ctx context.Context) BucketObjectOwnerOutput {
	return o
}

func (o BucketObjectOwnerOutput) ToBucketObjectOwnerPtrOutput() BucketObjectOwnerPtrOutput {
	return o.ToBucketObjectOwnerPtrOutputWithContext(context.Background())
}

func (o BucketObjectOwnerOutput) ToBucketObjectOwnerPtrOutputWithContext(ctx context.Context) BucketObjectOwnerPtrOutput {
	return o.ApplyT(func(v BucketObjectOwner) *BucketObjectOwner {
		return &v
	}).(BucketObjectOwnerPtrOutput)
}

// The entity, in the form user-userId.
func (o BucketObjectOwnerOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectOwner) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketObjectOwnerOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectOwner) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

type BucketObjectOwnerPtrOutput struct{ *pulumi.OutputState }

func (BucketObjectOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectOwner)(nil)).Elem()
}

func (o BucketObjectOwnerPtrOutput) ToBucketObjectOwnerPtrOutput() BucketObjectOwnerPtrOutput {
	return o
}

func (o BucketObjectOwnerPtrOutput) ToBucketObjectOwnerPtrOutputWithContext(ctx context.Context) BucketObjectOwnerPtrOutput {
	return o
}

func (o BucketObjectOwnerPtrOutput) Elem() BucketObjectOwnerOutput {
	return o.ApplyT(func(v *BucketObjectOwner) BucketObjectOwner { return *v }).(BucketObjectOwnerOutput)
}

// The entity, in the form user-userId.
func (o BucketObjectOwnerPtrOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectOwner) *string {
		if v == nil {
			return nil
		}
		return v.Entity
	}).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketObjectOwnerPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectOwner) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwnerResponse struct {
	// The entity, in the form user-userId.
	Entity string `pulumi:"entity"`
	// The ID for the entity.
	EntityId string `pulumi:"entityId"`
}

// BucketObjectOwnerResponseInput is an input type that accepts BucketObjectOwnerResponseArgs and BucketObjectOwnerResponseOutput values.
// You can construct a concrete instance of `BucketObjectOwnerResponseInput` via:
//
//          BucketObjectOwnerResponseArgs{...}
type BucketObjectOwnerResponseInput interface {
	pulumi.Input

	ToBucketObjectOwnerResponseOutput() BucketObjectOwnerResponseOutput
	ToBucketObjectOwnerResponseOutputWithContext(context.Context) BucketObjectOwnerResponseOutput
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwnerResponseArgs struct {
	// The entity, in the form user-userId.
	Entity pulumi.StringInput `pulumi:"entity"`
	// The ID for the entity.
	EntityId pulumi.StringInput `pulumi:"entityId"`
}

func (BucketObjectOwnerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectOwnerResponse)(nil)).Elem()
}

func (i BucketObjectOwnerResponseArgs) ToBucketObjectOwnerResponseOutput() BucketObjectOwnerResponseOutput {
	return i.ToBucketObjectOwnerResponseOutputWithContext(context.Background())
}

func (i BucketObjectOwnerResponseArgs) ToBucketObjectOwnerResponseOutputWithContext(ctx context.Context) BucketObjectOwnerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerResponseOutput)
}

func (i BucketObjectOwnerResponseArgs) ToBucketObjectOwnerResponsePtrOutput() BucketObjectOwnerResponsePtrOutput {
	return i.ToBucketObjectOwnerResponsePtrOutputWithContext(context.Background())
}

func (i BucketObjectOwnerResponseArgs) ToBucketObjectOwnerResponsePtrOutputWithContext(ctx context.Context) BucketObjectOwnerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerResponseOutput).ToBucketObjectOwnerResponsePtrOutputWithContext(ctx)
}

// BucketObjectOwnerResponsePtrInput is an input type that accepts BucketObjectOwnerResponseArgs, BucketObjectOwnerResponsePtr and BucketObjectOwnerResponsePtrOutput values.
// You can construct a concrete instance of `BucketObjectOwnerResponsePtrInput` via:
//
//          BucketObjectOwnerResponseArgs{...}
//
//  or:
//
//          nil
type BucketObjectOwnerResponsePtrInput interface {
	pulumi.Input

	ToBucketObjectOwnerResponsePtrOutput() BucketObjectOwnerResponsePtrOutput
	ToBucketObjectOwnerResponsePtrOutputWithContext(context.Context) BucketObjectOwnerResponsePtrOutput
}

type bucketObjectOwnerResponsePtrType BucketObjectOwnerResponseArgs

func BucketObjectOwnerResponsePtr(v *BucketObjectOwnerResponseArgs) BucketObjectOwnerResponsePtrInput {
	return (*bucketObjectOwnerResponsePtrType)(v)
}

func (*bucketObjectOwnerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectOwnerResponse)(nil)).Elem()
}

func (i *bucketObjectOwnerResponsePtrType) ToBucketObjectOwnerResponsePtrOutput() BucketObjectOwnerResponsePtrOutput {
	return i.ToBucketObjectOwnerResponsePtrOutputWithContext(context.Background())
}

func (i *bucketObjectOwnerResponsePtrType) ToBucketObjectOwnerResponsePtrOutputWithContext(ctx context.Context) BucketObjectOwnerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOwnerResponsePtrOutput)
}

// The owner of the object. This will always be the uploader of the object.
type BucketObjectOwnerResponseOutput struct{ *pulumi.OutputState }

func (BucketObjectOwnerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectOwnerResponse)(nil)).Elem()
}

func (o BucketObjectOwnerResponseOutput) ToBucketObjectOwnerResponseOutput() BucketObjectOwnerResponseOutput {
	return o
}

func (o BucketObjectOwnerResponseOutput) ToBucketObjectOwnerResponseOutputWithContext(ctx context.Context) BucketObjectOwnerResponseOutput {
	return o
}

func (o BucketObjectOwnerResponseOutput) ToBucketObjectOwnerResponsePtrOutput() BucketObjectOwnerResponsePtrOutput {
	return o.ToBucketObjectOwnerResponsePtrOutputWithContext(context.Background())
}

func (o BucketObjectOwnerResponseOutput) ToBucketObjectOwnerResponsePtrOutputWithContext(ctx context.Context) BucketObjectOwnerResponsePtrOutput {
	return o.ApplyT(func(v BucketObjectOwnerResponse) *BucketObjectOwnerResponse {
		return &v
	}).(BucketObjectOwnerResponsePtrOutput)
}

// The entity, in the form user-userId.
func (o BucketObjectOwnerResponseOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectOwnerResponse) string { return v.Entity }).(pulumi.StringOutput)
}

// The ID for the entity.
func (o BucketObjectOwnerResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectOwnerResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

type BucketObjectOwnerResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketObjectOwnerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectOwnerResponse)(nil)).Elem()
}

func (o BucketObjectOwnerResponsePtrOutput) ToBucketObjectOwnerResponsePtrOutput() BucketObjectOwnerResponsePtrOutput {
	return o
}

func (o BucketObjectOwnerResponsePtrOutput) ToBucketObjectOwnerResponsePtrOutputWithContext(ctx context.Context) BucketObjectOwnerResponsePtrOutput {
	return o
}

func (o BucketObjectOwnerResponsePtrOutput) Elem() BucketObjectOwnerResponseOutput {
	return o.ApplyT(func(v *BucketObjectOwnerResponse) BucketObjectOwnerResponse { return *v }).(BucketObjectOwnerResponseOutput)
}

// The entity, in the form user-userId.
func (o BucketObjectOwnerResponsePtrOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectOwnerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Entity
	}).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketObjectOwnerResponsePtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketObjectOwnerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwner struct {
	// The entity, in the form project-owner-projectId.
	Entity *string `pulumi:"entity"`
	// The ID for the entity.
	EntityId *string `pulumi:"entityId"`
}

// BucketOwnerInput is an input type that accepts BucketOwnerArgs and BucketOwnerOutput values.
// You can construct a concrete instance of `BucketOwnerInput` via:
//
//          BucketOwnerArgs{...}
type BucketOwnerInput interface {
	pulumi.Input

	ToBucketOwnerOutput() BucketOwnerOutput
	ToBucketOwnerOutputWithContext(context.Context) BucketOwnerOutput
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwnerArgs struct {
	// The entity, in the form project-owner-projectId.
	Entity pulumi.StringPtrInput `pulumi:"entity"`
	// The ID for the entity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
}

func (BucketOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwner)(nil)).Elem()
}

func (i BucketOwnerArgs) ToBucketOwnerOutput() BucketOwnerOutput {
	return i.ToBucketOwnerOutputWithContext(context.Background())
}

func (i BucketOwnerArgs) ToBucketOwnerOutputWithContext(ctx context.Context) BucketOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerOutput)
}

func (i BucketOwnerArgs) ToBucketOwnerPtrOutput() BucketOwnerPtrOutput {
	return i.ToBucketOwnerPtrOutputWithContext(context.Background())
}

func (i BucketOwnerArgs) ToBucketOwnerPtrOutputWithContext(ctx context.Context) BucketOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerOutput).ToBucketOwnerPtrOutputWithContext(ctx)
}

// BucketOwnerPtrInput is an input type that accepts BucketOwnerArgs, BucketOwnerPtr and BucketOwnerPtrOutput values.
// You can construct a concrete instance of `BucketOwnerPtrInput` via:
//
//          BucketOwnerArgs{...}
//
//  or:
//
//          nil
type BucketOwnerPtrInput interface {
	pulumi.Input

	ToBucketOwnerPtrOutput() BucketOwnerPtrOutput
	ToBucketOwnerPtrOutputWithContext(context.Context) BucketOwnerPtrOutput
}

type bucketOwnerPtrType BucketOwnerArgs

func BucketOwnerPtr(v *BucketOwnerArgs) BucketOwnerPtrInput {
	return (*bucketOwnerPtrType)(v)
}

func (*bucketOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwner)(nil)).Elem()
}

func (i *bucketOwnerPtrType) ToBucketOwnerPtrOutput() BucketOwnerPtrOutput {
	return i.ToBucketOwnerPtrOutputWithContext(context.Background())
}

func (i *bucketOwnerPtrType) ToBucketOwnerPtrOutputWithContext(ctx context.Context) BucketOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerPtrOutput)
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwnerOutput struct{ *pulumi.OutputState }

func (BucketOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwner)(nil)).Elem()
}

func (o BucketOwnerOutput) ToBucketOwnerOutput() BucketOwnerOutput {
	return o
}

func (o BucketOwnerOutput) ToBucketOwnerOutputWithContext(ctx context.Context) BucketOwnerOutput {
	return o
}

func (o BucketOwnerOutput) ToBucketOwnerPtrOutput() BucketOwnerPtrOutput {
	return o.ToBucketOwnerPtrOutputWithContext(context.Background())
}

func (o BucketOwnerOutput) ToBucketOwnerPtrOutputWithContext(ctx context.Context) BucketOwnerPtrOutput {
	return o.ApplyT(func(v BucketOwner) *BucketOwner {
		return &v
	}).(BucketOwnerPtrOutput)
}

// The entity, in the form project-owner-projectId.
func (o BucketOwnerOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketOwner) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketOwnerOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketOwner) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

type BucketOwnerPtrOutput struct{ *pulumi.OutputState }

func (BucketOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwner)(nil)).Elem()
}

func (o BucketOwnerPtrOutput) ToBucketOwnerPtrOutput() BucketOwnerPtrOutput {
	return o
}

func (o BucketOwnerPtrOutput) ToBucketOwnerPtrOutputWithContext(ctx context.Context) BucketOwnerPtrOutput {
	return o
}

func (o BucketOwnerPtrOutput) Elem() BucketOwnerOutput {
	return o.ApplyT(func(v *BucketOwner) BucketOwner { return *v }).(BucketOwnerOutput)
}

// The entity, in the form project-owner-projectId.
func (o BucketOwnerPtrOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketOwner) *string {
		if v == nil {
			return nil
		}
		return v.Entity
	}).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketOwnerPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketOwner) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwnerResponse struct {
	// The entity, in the form project-owner-projectId.
	Entity string `pulumi:"entity"`
	// The ID for the entity.
	EntityId string `pulumi:"entityId"`
}

// BucketOwnerResponseInput is an input type that accepts BucketOwnerResponseArgs and BucketOwnerResponseOutput values.
// You can construct a concrete instance of `BucketOwnerResponseInput` via:
//
//          BucketOwnerResponseArgs{...}
type BucketOwnerResponseInput interface {
	pulumi.Input

	ToBucketOwnerResponseOutput() BucketOwnerResponseOutput
	ToBucketOwnerResponseOutputWithContext(context.Context) BucketOwnerResponseOutput
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwnerResponseArgs struct {
	// The entity, in the form project-owner-projectId.
	Entity pulumi.StringInput `pulumi:"entity"`
	// The ID for the entity.
	EntityId pulumi.StringInput `pulumi:"entityId"`
}

func (BucketOwnerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnerResponse)(nil)).Elem()
}

func (i BucketOwnerResponseArgs) ToBucketOwnerResponseOutput() BucketOwnerResponseOutput {
	return i.ToBucketOwnerResponseOutputWithContext(context.Background())
}

func (i BucketOwnerResponseArgs) ToBucketOwnerResponseOutputWithContext(ctx context.Context) BucketOwnerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerResponseOutput)
}

func (i BucketOwnerResponseArgs) ToBucketOwnerResponsePtrOutput() BucketOwnerResponsePtrOutput {
	return i.ToBucketOwnerResponsePtrOutputWithContext(context.Background())
}

func (i BucketOwnerResponseArgs) ToBucketOwnerResponsePtrOutputWithContext(ctx context.Context) BucketOwnerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerResponseOutput).ToBucketOwnerResponsePtrOutputWithContext(ctx)
}

// BucketOwnerResponsePtrInput is an input type that accepts BucketOwnerResponseArgs, BucketOwnerResponsePtr and BucketOwnerResponsePtrOutput values.
// You can construct a concrete instance of `BucketOwnerResponsePtrInput` via:
//
//          BucketOwnerResponseArgs{...}
//
//  or:
//
//          nil
type BucketOwnerResponsePtrInput interface {
	pulumi.Input

	ToBucketOwnerResponsePtrOutput() BucketOwnerResponsePtrOutput
	ToBucketOwnerResponsePtrOutputWithContext(context.Context) BucketOwnerResponsePtrOutput
}

type bucketOwnerResponsePtrType BucketOwnerResponseArgs

func BucketOwnerResponsePtr(v *BucketOwnerResponseArgs) BucketOwnerResponsePtrInput {
	return (*bucketOwnerResponsePtrType)(v)
}

func (*bucketOwnerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwnerResponse)(nil)).Elem()
}

func (i *bucketOwnerResponsePtrType) ToBucketOwnerResponsePtrOutput() BucketOwnerResponsePtrOutput {
	return i.ToBucketOwnerResponsePtrOutputWithContext(context.Background())
}

func (i *bucketOwnerResponsePtrType) ToBucketOwnerResponsePtrOutputWithContext(ctx context.Context) BucketOwnerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOwnerResponsePtrOutput)
}

// The owner of the bucket. This is always the project team's owner group.
type BucketOwnerResponseOutput struct{ *pulumi.OutputState }

func (BucketOwnerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketOwnerResponse)(nil)).Elem()
}

func (o BucketOwnerResponseOutput) ToBucketOwnerResponseOutput() BucketOwnerResponseOutput {
	return o
}

func (o BucketOwnerResponseOutput) ToBucketOwnerResponseOutputWithContext(ctx context.Context) BucketOwnerResponseOutput {
	return o
}

func (o BucketOwnerResponseOutput) ToBucketOwnerResponsePtrOutput() BucketOwnerResponsePtrOutput {
	return o.ToBucketOwnerResponsePtrOutputWithContext(context.Background())
}

func (o BucketOwnerResponseOutput) ToBucketOwnerResponsePtrOutputWithContext(ctx context.Context) BucketOwnerResponsePtrOutput {
	return o.ApplyT(func(v BucketOwnerResponse) *BucketOwnerResponse {
		return &v
	}).(BucketOwnerResponsePtrOutput)
}

// The entity, in the form project-owner-projectId.
func (o BucketOwnerResponseOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v BucketOwnerResponse) string { return v.Entity }).(pulumi.StringOutput)
}

// The ID for the entity.
func (o BucketOwnerResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketOwnerResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

type BucketOwnerResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketOwnerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketOwnerResponse)(nil)).Elem()
}

func (o BucketOwnerResponsePtrOutput) ToBucketOwnerResponsePtrOutput() BucketOwnerResponsePtrOutput {
	return o
}

func (o BucketOwnerResponsePtrOutput) ToBucketOwnerResponsePtrOutputWithContext(ctx context.Context) BucketOwnerResponsePtrOutput {
	return o
}

func (o BucketOwnerResponsePtrOutput) Elem() BucketOwnerResponseOutput {
	return o.ApplyT(func(v *BucketOwnerResponse) BucketOwnerResponse { return *v }).(BucketOwnerResponseOutput)
}

// The entity, in the form project-owner-projectId.
func (o BucketOwnerResponsePtrOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketOwnerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Entity
	}).(pulumi.StringPtrOutput)
}

// The ID for the entity.
func (o BucketOwnerResponsePtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketOwnerResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicy struct {
	// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
	EffectiveTime *string `pulumi:"effectiveTime"`
	// Once locked, an object retention policy cannot be modified.
	IsLocked *bool `pulumi:"isLocked"`
	// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
	RetentionPeriod *string `pulumi:"retentionPeriod"`
}

// BucketRetentionPolicyInput is an input type that accepts BucketRetentionPolicyArgs and BucketRetentionPolicyOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyInput` via:
//
//          BucketRetentionPolicyArgs{...}
type BucketRetentionPolicyInput interface {
	pulumi.Input

	ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput
	ToBucketRetentionPolicyOutputWithContext(context.Context) BucketRetentionPolicyOutput
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicyArgs struct {
	// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
	EffectiveTime pulumi.StringPtrInput `pulumi:"effectiveTime"`
	// Once locked, an object retention policy cannot be modified.
	IsLocked pulumi.BoolPtrInput `pulumi:"isLocked"`
	// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
	RetentionPeriod pulumi.StringPtrInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return i.ToBucketRetentionPolicyOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput)
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyArgs) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyOutput).ToBucketRetentionPolicyPtrOutputWithContext(ctx)
}

// BucketRetentionPolicyPtrInput is an input type that accepts BucketRetentionPolicyArgs, BucketRetentionPolicyPtr and BucketRetentionPolicyPtrOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyPtrInput` via:
//
//          BucketRetentionPolicyArgs{...}
//
//  or:
//
//          nil
type BucketRetentionPolicyPtrInput interface {
	pulumi.Input

	ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput
	ToBucketRetentionPolicyPtrOutputWithContext(context.Context) BucketRetentionPolicyPtrOutput
}

type bucketRetentionPolicyPtrType BucketRetentionPolicyArgs

func BucketRetentionPolicyPtr(v *BucketRetentionPolicyArgs) BucketRetentionPolicyPtrInput {
	return (*bucketRetentionPolicyPtrType)(v)
}

func (*bucketRetentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return i.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *bucketRetentionPolicyPtrType) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyPtrOutput)
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicyOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutput() BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyOutputWithContext(ctx context.Context) BucketRetentionPolicyOutput {
	return o
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o.ToBucketRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o BucketRetentionPolicyOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *BucketRetentionPolicy {
		return &v
	}).(BucketRetentionPolicyPtrOutput)
}

// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
func (o BucketRetentionPolicyOutput) EffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *string { return v.EffectiveTime }).(pulumi.StringPtrOutput)
}

// Once locked, an object retention policy cannot be modified.
func (o BucketRetentionPolicyOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *bool { return v.IsLocked }).(pulumi.BoolPtrOutput)
}

// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
func (o BucketRetentionPolicyOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicy) *string { return v.RetentionPeriod }).(pulumi.StringPtrOutput)
}

type BucketRetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicy)(nil)).Elem()
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutput() BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) ToBucketRetentionPolicyPtrOutputWithContext(ctx context.Context) BucketRetentionPolicyPtrOutput {
	return o
}

func (o BucketRetentionPolicyPtrOutput) Elem() BucketRetentionPolicyOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) BucketRetentionPolicy { return *v }).(BucketRetentionPolicyOutput)
}

// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
func (o BucketRetentionPolicyPtrOutput) EffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.EffectiveTime
	}).(pulumi.StringPtrOutput)
}

// Once locked, an object retention policy cannot be modified.
func (o BucketRetentionPolicyPtrOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.IsLocked
	}).(pulumi.BoolPtrOutput)
}

// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
func (o BucketRetentionPolicyPtrOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.StringPtrOutput)
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicyResponse struct {
	// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
	EffectiveTime string `pulumi:"effectiveTime"`
	// Once locked, an object retention policy cannot be modified.
	IsLocked bool `pulumi:"isLocked"`
	// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
	RetentionPeriod string `pulumi:"retentionPeriod"`
}

// BucketRetentionPolicyResponseInput is an input type that accepts BucketRetentionPolicyResponseArgs and BucketRetentionPolicyResponseOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyResponseInput` via:
//
//          BucketRetentionPolicyResponseArgs{...}
type BucketRetentionPolicyResponseInput interface {
	pulumi.Input

	ToBucketRetentionPolicyResponseOutput() BucketRetentionPolicyResponseOutput
	ToBucketRetentionPolicyResponseOutputWithContext(context.Context) BucketRetentionPolicyResponseOutput
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicyResponseArgs struct {
	// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
	EffectiveTime pulumi.StringInput `pulumi:"effectiveTime"`
	// Once locked, an object retention policy cannot be modified.
	IsLocked pulumi.BoolInput `pulumi:"isLocked"`
	// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
	RetentionPeriod pulumi.StringInput `pulumi:"retentionPeriod"`
}

func (BucketRetentionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyResponse)(nil)).Elem()
}

func (i BucketRetentionPolicyResponseArgs) ToBucketRetentionPolicyResponseOutput() BucketRetentionPolicyResponseOutput {
	return i.ToBucketRetentionPolicyResponseOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyResponseArgs) ToBucketRetentionPolicyResponseOutputWithContext(ctx context.Context) BucketRetentionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyResponseOutput)
}

func (i BucketRetentionPolicyResponseArgs) ToBucketRetentionPolicyResponsePtrOutput() BucketRetentionPolicyResponsePtrOutput {
	return i.ToBucketRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i BucketRetentionPolicyResponseArgs) ToBucketRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) BucketRetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyResponseOutput).ToBucketRetentionPolicyResponsePtrOutputWithContext(ctx)
}

// BucketRetentionPolicyResponsePtrInput is an input type that accepts BucketRetentionPolicyResponseArgs, BucketRetentionPolicyResponsePtr and BucketRetentionPolicyResponsePtrOutput values.
// You can construct a concrete instance of `BucketRetentionPolicyResponsePtrInput` via:
//
//          BucketRetentionPolicyResponseArgs{...}
//
//  or:
//
//          nil
type BucketRetentionPolicyResponsePtrInput interface {
	pulumi.Input

	ToBucketRetentionPolicyResponsePtrOutput() BucketRetentionPolicyResponsePtrOutput
	ToBucketRetentionPolicyResponsePtrOutputWithContext(context.Context) BucketRetentionPolicyResponsePtrOutput
}

type bucketRetentionPolicyResponsePtrType BucketRetentionPolicyResponseArgs

func BucketRetentionPolicyResponsePtr(v *BucketRetentionPolicyResponseArgs) BucketRetentionPolicyResponsePtrInput {
	return (*bucketRetentionPolicyResponsePtrType)(v)
}

func (*bucketRetentionPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicyResponse)(nil)).Elem()
}

func (i *bucketRetentionPolicyResponsePtrType) ToBucketRetentionPolicyResponsePtrOutput() BucketRetentionPolicyResponsePtrOutput {
	return i.ToBucketRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *bucketRetentionPolicyResponsePtrType) ToBucketRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) BucketRetentionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRetentionPolicyResponsePtrOutput)
}

// The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
type BucketRetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRetentionPolicyResponse)(nil)).Elem()
}

func (o BucketRetentionPolicyResponseOutput) ToBucketRetentionPolicyResponseOutput() BucketRetentionPolicyResponseOutput {
	return o
}

func (o BucketRetentionPolicyResponseOutput) ToBucketRetentionPolicyResponseOutputWithContext(ctx context.Context) BucketRetentionPolicyResponseOutput {
	return o
}

func (o BucketRetentionPolicyResponseOutput) ToBucketRetentionPolicyResponsePtrOutput() BucketRetentionPolicyResponsePtrOutput {
	return o.ToBucketRetentionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o BucketRetentionPolicyResponseOutput) ToBucketRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) BucketRetentionPolicyResponsePtrOutput {
	return o.ApplyT(func(v BucketRetentionPolicyResponse) *BucketRetentionPolicyResponse {
		return &v
	}).(BucketRetentionPolicyResponsePtrOutput)
}

// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
func (o BucketRetentionPolicyResponseOutput) EffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v BucketRetentionPolicyResponse) string { return v.EffectiveTime }).(pulumi.StringOutput)
}

// Once locked, an object retention policy cannot be modified.
func (o BucketRetentionPolicyResponseOutput) IsLocked() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketRetentionPolicyResponse) bool { return v.IsLocked }).(pulumi.BoolOutput)
}

// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
func (o BucketRetentionPolicyResponseOutput) RetentionPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v BucketRetentionPolicyResponse) string { return v.RetentionPeriod }).(pulumi.StringOutput)
}

type BucketRetentionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketRetentionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRetentionPolicyResponse)(nil)).Elem()
}

func (o BucketRetentionPolicyResponsePtrOutput) ToBucketRetentionPolicyResponsePtrOutput() BucketRetentionPolicyResponsePtrOutput {
	return o
}

func (o BucketRetentionPolicyResponsePtrOutput) ToBucketRetentionPolicyResponsePtrOutputWithContext(ctx context.Context) BucketRetentionPolicyResponsePtrOutput {
	return o
}

func (o BucketRetentionPolicyResponsePtrOutput) Elem() BucketRetentionPolicyResponseOutput {
	return o.ApplyT(func(v *BucketRetentionPolicyResponse) BucketRetentionPolicyResponse { return *v }).(BucketRetentionPolicyResponseOutput)
}

// Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
func (o BucketRetentionPolicyResponsePtrOutput) EffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.EffectiveTime
	}).(pulumi.StringPtrOutput)
}

// Once locked, an object retention policy cannot be modified.
func (o BucketRetentionPolicyResponsePtrOutput) IsLocked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsLocked
	}).(pulumi.BoolPtrOutput)
}

// The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
func (o BucketRetentionPolicyResponsePtrOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRetentionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriod
	}).(pulumi.StringPtrOutput)
}

// The bucket's versioning configuration.
type BucketVersioning struct {
	// While set to true, versioning is fully enabled for this bucket.
	Enabled *bool `pulumi:"enabled"`
}

// BucketVersioningInput is an input type that accepts BucketVersioningArgs and BucketVersioningOutput values.
// You can construct a concrete instance of `BucketVersioningInput` via:
//
//          BucketVersioningArgs{...}
type BucketVersioningInput interface {
	pulumi.Input

	ToBucketVersioningOutput() BucketVersioningOutput
	ToBucketVersioningOutputWithContext(context.Context) BucketVersioningOutput
}

// The bucket's versioning configuration.
type BucketVersioningArgs struct {
	// While set to true, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (BucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (i BucketVersioningArgs) ToBucketVersioningOutput() BucketVersioningOutput {
	return i.ToBucketVersioningOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput)
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput).ToBucketVersioningPtrOutputWithContext(ctx)
}

// BucketVersioningPtrInput is an input type that accepts BucketVersioningArgs, BucketVersioningPtr and BucketVersioningPtrOutput values.
// You can construct a concrete instance of `BucketVersioningPtrInput` via:
//
//          BucketVersioningArgs{...}
//
//  or:
//
//          nil
type BucketVersioningPtrInput interface {
	pulumi.Input

	ToBucketVersioningPtrOutput() BucketVersioningPtrOutput
	ToBucketVersioningPtrOutputWithContext(context.Context) BucketVersioningPtrOutput
}

type bucketVersioningPtrType BucketVersioningArgs

func BucketVersioningPtr(v *BucketVersioningArgs) BucketVersioningPtrInput {
	return (*bucketVersioningPtrType)(v)
}

func (*bucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningPtrOutput)
}

// The bucket's versioning configuration.
type BucketVersioningOutput struct{ *pulumi.OutputState }

func (BucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningOutput) ToBucketVersioningOutput() BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o.ApplyT(func(v BucketVersioning) *BucketVersioning {
		return &v
	}).(BucketVersioningPtrOutput)
}

// While set to true, versioning is fully enabled for this bucket.
func (o BucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type BucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) Elem() BucketVersioningOutput {
	return o.ApplyT(func(v *BucketVersioning) BucketVersioning { return *v }).(BucketVersioningOutput)
}

// While set to true, versioning is fully enabled for this bucket.
func (o BucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The bucket's versioning configuration.
type BucketVersioningResponse struct {
	// While set to true, versioning is fully enabled for this bucket.
	Enabled bool `pulumi:"enabled"`
}

// BucketVersioningResponseInput is an input type that accepts BucketVersioningResponseArgs and BucketVersioningResponseOutput values.
// You can construct a concrete instance of `BucketVersioningResponseInput` via:
//
//          BucketVersioningResponseArgs{...}
type BucketVersioningResponseInput interface {
	pulumi.Input

	ToBucketVersioningResponseOutput() BucketVersioningResponseOutput
	ToBucketVersioningResponseOutputWithContext(context.Context) BucketVersioningResponseOutput
}

// The bucket's versioning configuration.
type BucketVersioningResponseArgs struct {
	// While set to true, versioning is fully enabled for this bucket.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketVersioningResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningResponse)(nil)).Elem()
}

func (i BucketVersioningResponseArgs) ToBucketVersioningResponseOutput() BucketVersioningResponseOutput {
	return i.ToBucketVersioningResponseOutputWithContext(context.Background())
}

func (i BucketVersioningResponseArgs) ToBucketVersioningResponseOutputWithContext(ctx context.Context) BucketVersioningResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningResponseOutput)
}

func (i BucketVersioningResponseArgs) ToBucketVersioningResponsePtrOutput() BucketVersioningResponsePtrOutput {
	return i.ToBucketVersioningResponsePtrOutputWithContext(context.Background())
}

func (i BucketVersioningResponseArgs) ToBucketVersioningResponsePtrOutputWithContext(ctx context.Context) BucketVersioningResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningResponseOutput).ToBucketVersioningResponsePtrOutputWithContext(ctx)
}

// BucketVersioningResponsePtrInput is an input type that accepts BucketVersioningResponseArgs, BucketVersioningResponsePtr and BucketVersioningResponsePtrOutput values.
// You can construct a concrete instance of `BucketVersioningResponsePtrInput` via:
//
//          BucketVersioningResponseArgs{...}
//
//  or:
//
//          nil
type BucketVersioningResponsePtrInput interface {
	pulumi.Input

	ToBucketVersioningResponsePtrOutput() BucketVersioningResponsePtrOutput
	ToBucketVersioningResponsePtrOutputWithContext(context.Context) BucketVersioningResponsePtrOutput
}

type bucketVersioningResponsePtrType BucketVersioningResponseArgs

func BucketVersioningResponsePtr(v *BucketVersioningResponseArgs) BucketVersioningResponsePtrInput {
	return (*bucketVersioningResponsePtrType)(v)
}

func (*bucketVersioningResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningResponse)(nil)).Elem()
}

func (i *bucketVersioningResponsePtrType) ToBucketVersioningResponsePtrOutput() BucketVersioningResponsePtrOutput {
	return i.ToBucketVersioningResponsePtrOutputWithContext(context.Background())
}

func (i *bucketVersioningResponsePtrType) ToBucketVersioningResponsePtrOutputWithContext(ctx context.Context) BucketVersioningResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningResponsePtrOutput)
}

// The bucket's versioning configuration.
type BucketVersioningResponseOutput struct{ *pulumi.OutputState }

func (BucketVersioningResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioningResponse)(nil)).Elem()
}

func (o BucketVersioningResponseOutput) ToBucketVersioningResponseOutput() BucketVersioningResponseOutput {
	return o
}

func (o BucketVersioningResponseOutput) ToBucketVersioningResponseOutputWithContext(ctx context.Context) BucketVersioningResponseOutput {
	return o
}

func (o BucketVersioningResponseOutput) ToBucketVersioningResponsePtrOutput() BucketVersioningResponsePtrOutput {
	return o.ToBucketVersioningResponsePtrOutputWithContext(context.Background())
}

func (o BucketVersioningResponseOutput) ToBucketVersioningResponsePtrOutputWithContext(ctx context.Context) BucketVersioningResponsePtrOutput {
	return o.ApplyT(func(v BucketVersioningResponse) *BucketVersioningResponse {
		return &v
	}).(BucketVersioningResponsePtrOutput)
}

// While set to true, versioning is fully enabled for this bucket.
func (o BucketVersioningResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketVersioningResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketVersioningResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketVersioningResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioningResponse)(nil)).Elem()
}

func (o BucketVersioningResponsePtrOutput) ToBucketVersioningResponsePtrOutput() BucketVersioningResponsePtrOutput {
	return o
}

func (o BucketVersioningResponsePtrOutput) ToBucketVersioningResponsePtrOutputWithContext(ctx context.Context) BucketVersioningResponsePtrOutput {
	return o
}

func (o BucketVersioningResponsePtrOutput) Elem() BucketVersioningResponseOutput {
	return o.ApplyT(func(v *BucketVersioningResponse) BucketVersioningResponse { return *v }).(BucketVersioningResponseOutput)
}

// While set to true, versioning is fully enabled for this bucket.
func (o BucketVersioningResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketVersioningResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsite struct {
	// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
	MainPageSuffix *string `pulumi:"mainPageSuffix"`
	// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
	NotFoundPage *string `pulumi:"notFoundPage"`
}

// BucketWebsiteInput is an input type that accepts BucketWebsiteArgs and BucketWebsiteOutput values.
// You can construct a concrete instance of `BucketWebsiteInput` via:
//
//          BucketWebsiteArgs{...}
type BucketWebsiteInput interface {
	pulumi.Input

	ToBucketWebsiteOutput() BucketWebsiteOutput
	ToBucketWebsiteOutputWithContext(context.Context) BucketWebsiteOutput
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsiteArgs struct {
	// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
	MainPageSuffix pulumi.StringPtrInput `pulumi:"mainPageSuffix"`
	// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
	NotFoundPage pulumi.StringPtrInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return i.ToBucketWebsiteOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput)
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput).ToBucketWebsitePtrOutputWithContext(ctx)
}

// BucketWebsitePtrInput is an input type that accepts BucketWebsiteArgs, BucketWebsitePtr and BucketWebsitePtrOutput values.
// You can construct a concrete instance of `BucketWebsitePtrInput` via:
//
//          BucketWebsiteArgs{...}
//
//  or:
//
//          nil
type BucketWebsitePtrInput interface {
	pulumi.Input

	ToBucketWebsitePtrOutput() BucketWebsitePtrOutput
	ToBucketWebsitePtrOutputWithContext(context.Context) BucketWebsitePtrOutput
}

type bucketWebsitePtrType BucketWebsiteArgs

func BucketWebsitePtr(v *BucketWebsiteArgs) BucketWebsitePtrInput {
	return (*bucketWebsitePtrType)(v)
}

func (*bucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsitePtrOutput)
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsiteOutput struct{ *pulumi.OutputState }

func (BucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o.ApplyT(func(v BucketWebsite) *BucketWebsite {
		return &v
	}).(BucketWebsitePtrOutput)
}

// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
func (o BucketWebsiteOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.MainPageSuffix }).(pulumi.StringPtrOutput)
}

// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
func (o BucketWebsiteOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketWebsite) *string { return v.NotFoundPage }).(pulumi.StringPtrOutput)
}

type BucketWebsitePtrOutput struct{ *pulumi.OutputState }

func (BucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) Elem() BucketWebsiteOutput {
	return o.ApplyT(func(v *BucketWebsite) BucketWebsite { return *v }).(BucketWebsiteOutput)
}

// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
func (o BucketWebsitePtrOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.MainPageSuffix
	}).(pulumi.StringPtrOutput)
}

// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
func (o BucketWebsitePtrOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsite) *string {
		if v == nil {
			return nil
		}
		return v.NotFoundPage
	}).(pulumi.StringPtrOutput)
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsiteResponse struct {
	// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
	MainPageSuffix string `pulumi:"mainPageSuffix"`
	// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
	NotFoundPage string `pulumi:"notFoundPage"`
}

// BucketWebsiteResponseInput is an input type that accepts BucketWebsiteResponseArgs and BucketWebsiteResponseOutput values.
// You can construct a concrete instance of `BucketWebsiteResponseInput` via:
//
//          BucketWebsiteResponseArgs{...}
type BucketWebsiteResponseInput interface {
	pulumi.Input

	ToBucketWebsiteResponseOutput() BucketWebsiteResponseOutput
	ToBucketWebsiteResponseOutputWithContext(context.Context) BucketWebsiteResponseOutput
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsiteResponseArgs struct {
	// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
	MainPageSuffix pulumi.StringInput `pulumi:"mainPageSuffix"`
	// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
	NotFoundPage pulumi.StringInput `pulumi:"notFoundPage"`
}

func (BucketWebsiteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteResponse)(nil)).Elem()
}

func (i BucketWebsiteResponseArgs) ToBucketWebsiteResponseOutput() BucketWebsiteResponseOutput {
	return i.ToBucketWebsiteResponseOutputWithContext(context.Background())
}

func (i BucketWebsiteResponseArgs) ToBucketWebsiteResponseOutputWithContext(ctx context.Context) BucketWebsiteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteResponseOutput)
}

func (i BucketWebsiteResponseArgs) ToBucketWebsiteResponsePtrOutput() BucketWebsiteResponsePtrOutput {
	return i.ToBucketWebsiteResponsePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteResponseArgs) ToBucketWebsiteResponsePtrOutputWithContext(ctx context.Context) BucketWebsiteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteResponseOutput).ToBucketWebsiteResponsePtrOutputWithContext(ctx)
}

// BucketWebsiteResponsePtrInput is an input type that accepts BucketWebsiteResponseArgs, BucketWebsiteResponsePtr and BucketWebsiteResponsePtrOutput values.
// You can construct a concrete instance of `BucketWebsiteResponsePtrInput` via:
//
//          BucketWebsiteResponseArgs{...}
//
//  or:
//
//          nil
type BucketWebsiteResponsePtrInput interface {
	pulumi.Input

	ToBucketWebsiteResponsePtrOutput() BucketWebsiteResponsePtrOutput
	ToBucketWebsiteResponsePtrOutputWithContext(context.Context) BucketWebsiteResponsePtrOutput
}

type bucketWebsiteResponsePtrType BucketWebsiteResponseArgs

func BucketWebsiteResponsePtr(v *BucketWebsiteResponseArgs) BucketWebsiteResponsePtrInput {
	return (*bucketWebsiteResponsePtrType)(v)
}

func (*bucketWebsiteResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteResponse)(nil)).Elem()
}

func (i *bucketWebsiteResponsePtrType) ToBucketWebsiteResponsePtrOutput() BucketWebsiteResponsePtrOutput {
	return i.ToBucketWebsiteResponsePtrOutputWithContext(context.Background())
}

func (i *bucketWebsiteResponsePtrType) ToBucketWebsiteResponsePtrOutputWithContext(ctx context.Context) BucketWebsiteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteResponsePtrOutput)
}

// The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
type BucketWebsiteResponseOutput struct{ *pulumi.OutputState }

func (BucketWebsiteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsiteResponse)(nil)).Elem()
}

func (o BucketWebsiteResponseOutput) ToBucketWebsiteResponseOutput() BucketWebsiteResponseOutput {
	return o
}

func (o BucketWebsiteResponseOutput) ToBucketWebsiteResponseOutputWithContext(ctx context.Context) BucketWebsiteResponseOutput {
	return o
}

func (o BucketWebsiteResponseOutput) ToBucketWebsiteResponsePtrOutput() BucketWebsiteResponsePtrOutput {
	return o.ToBucketWebsiteResponsePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteResponseOutput) ToBucketWebsiteResponsePtrOutputWithContext(ctx context.Context) BucketWebsiteResponsePtrOutput {
	return o.ApplyT(func(v BucketWebsiteResponse) *BucketWebsiteResponse {
		return &v
	}).(BucketWebsiteResponsePtrOutput)
}

// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
func (o BucketWebsiteResponseOutput) MainPageSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketWebsiteResponse) string { return v.MainPageSuffix }).(pulumi.StringOutput)
}

// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
func (o BucketWebsiteResponseOutput) NotFoundPage() pulumi.StringOutput {
	return o.ApplyT(func(v BucketWebsiteResponse) string { return v.NotFoundPage }).(pulumi.StringOutput)
}

type BucketWebsiteResponsePtrOutput struct{ *pulumi.OutputState }

func (BucketWebsiteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteResponse)(nil)).Elem()
}

func (o BucketWebsiteResponsePtrOutput) ToBucketWebsiteResponsePtrOutput() BucketWebsiteResponsePtrOutput {
	return o
}

func (o BucketWebsiteResponsePtrOutput) ToBucketWebsiteResponsePtrOutputWithContext(ctx context.Context) BucketWebsiteResponsePtrOutput {
	return o
}

func (o BucketWebsiteResponsePtrOutput) Elem() BucketWebsiteResponseOutput {
	return o.ApplyT(func(v *BucketWebsiteResponse) BucketWebsiteResponse { return *v }).(BucketWebsiteResponseOutput)
}

// If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
func (o BucketWebsiteResponsePtrOutput) MainPageSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MainPageSuffix
	}).(pulumi.StringPtrOutput)
}

// If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
func (o BucketWebsiteResponsePtrOutput) NotFoundPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteResponse) *string {
		if v == nil {
			return nil
		}
		return &v.NotFoundPage
	}).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeam struct {
	// The project number.
	ProjectNumber *string `pulumi:"projectNumber"`
	// The team.
	Team *string `pulumi:"team"`
}

// DefaultObjectAccessControlProjectTeamInput is an input type that accepts DefaultObjectAccessControlProjectTeamArgs and DefaultObjectAccessControlProjectTeamOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamInput` via:
//
//          DefaultObjectAccessControlProjectTeamArgs{...}
type DefaultObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput
	ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamOutput
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeamArgs struct {
	// The project number.
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringPtrInput `pulumi:"team"`
}

func (DefaultObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return i.ToDefaultObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput)
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamArgs) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamOutput).ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

// DefaultObjectAccessControlProjectTeamPtrInput is an input type that accepts DefaultObjectAccessControlProjectTeamArgs, DefaultObjectAccessControlProjectTeamPtr and DefaultObjectAccessControlProjectTeamPtrOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamPtrInput` via:
//
//          DefaultObjectAccessControlProjectTeamArgs{...}
//
//  or:
//
//          nil
type DefaultObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput
	ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamPtrOutput
}

type defaultObjectAccessControlProjectTeamPtrType DefaultObjectAccessControlProjectTeamArgs

func DefaultObjectAccessControlProjectTeamPtr(v *DefaultObjectAccessControlProjectTeamArgs) DefaultObjectAccessControlProjectTeamPtrInput {
	return (*defaultObjectAccessControlProjectTeamPtrType)(v)
}

func (*defaultObjectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *defaultObjectAccessControlProjectTeamPtrType) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamPtrOutput)
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutput() DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o DefaultObjectAccessControlProjectTeamOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *DefaultObjectAccessControlProjectTeam {
		return &v
	}).(DefaultObjectAccessControlProjectTeamPtrOutput)
}

// The project number.
func (o DefaultObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

// The team.
func (o DefaultObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type DefaultObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutput() DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) ToDefaultObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamPtrOutput) Elem() DefaultObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) DefaultObjectAccessControlProjectTeam { return *v }).(DefaultObjectAccessControlProjectTeamOutput)
}

// The project number.
func (o DefaultObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o DefaultObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeamResponse struct {
	// The project number.
	ProjectNumber string `pulumi:"projectNumber"`
	// The team.
	Team string `pulumi:"team"`
}

// DefaultObjectAccessControlProjectTeamResponseInput is an input type that accepts DefaultObjectAccessControlProjectTeamResponseArgs and DefaultObjectAccessControlProjectTeamResponseOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamResponseInput` via:
//
//          DefaultObjectAccessControlProjectTeamResponseArgs{...}
type DefaultObjectAccessControlProjectTeamResponseInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamResponseOutput() DefaultObjectAccessControlProjectTeamResponseOutput
	ToDefaultObjectAccessControlProjectTeamResponseOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamResponseOutput
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeamResponseArgs struct {
	// The project number.
	ProjectNumber pulumi.StringInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringInput `pulumi:"team"`
}

func (DefaultObjectAccessControlProjectTeamResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i DefaultObjectAccessControlProjectTeamResponseArgs) ToDefaultObjectAccessControlProjectTeamResponseOutput() DefaultObjectAccessControlProjectTeamResponseOutput {
	return i.ToDefaultObjectAccessControlProjectTeamResponseOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamResponseArgs) ToDefaultObjectAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamResponseOutput)
}

func (i DefaultObjectAccessControlProjectTeamResponseArgs) ToDefaultObjectAccessControlProjectTeamResponsePtrOutput() DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i DefaultObjectAccessControlProjectTeamResponseArgs) ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamResponseOutput).ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx)
}

// DefaultObjectAccessControlProjectTeamResponsePtrInput is an input type that accepts DefaultObjectAccessControlProjectTeamResponseArgs, DefaultObjectAccessControlProjectTeamResponsePtr and DefaultObjectAccessControlProjectTeamResponsePtrOutput values.
// You can construct a concrete instance of `DefaultObjectAccessControlProjectTeamResponsePtrInput` via:
//
//          DefaultObjectAccessControlProjectTeamResponseArgs{...}
//
//  or:
//
//          nil
type DefaultObjectAccessControlProjectTeamResponsePtrInput interface {
	pulumi.Input

	ToDefaultObjectAccessControlProjectTeamResponsePtrOutput() DefaultObjectAccessControlProjectTeamResponsePtrOutput
	ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Context) DefaultObjectAccessControlProjectTeamResponsePtrOutput
}

type defaultObjectAccessControlProjectTeamResponsePtrType DefaultObjectAccessControlProjectTeamResponseArgs

func DefaultObjectAccessControlProjectTeamResponsePtr(v *DefaultObjectAccessControlProjectTeamResponseArgs) DefaultObjectAccessControlProjectTeamResponsePtrInput {
	return (*defaultObjectAccessControlProjectTeamResponsePtrType)(v)
}

func (*defaultObjectAccessControlProjectTeamResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i *defaultObjectAccessControlProjectTeamResponsePtrType) ToDefaultObjectAccessControlProjectTeamResponsePtrOutput() DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return i.ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i *defaultObjectAccessControlProjectTeamResponsePtrType) ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultObjectAccessControlProjectTeamResponsePtrOutput)
}

// The project team associated with the entity, if any.
type DefaultObjectAccessControlProjectTeamResponseOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamResponseOutput) ToDefaultObjectAccessControlProjectTeamResponseOutput() DefaultObjectAccessControlProjectTeamResponseOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamResponseOutput) ToDefaultObjectAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponseOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamResponseOutput) ToDefaultObjectAccessControlProjectTeamResponsePtrOutput() DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return o.ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (o DefaultObjectAccessControlProjectTeamResponseOutput) ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeamResponse) *DefaultObjectAccessControlProjectTeamResponse {
		return &v
	}).(DefaultObjectAccessControlProjectTeamResponsePtrOutput)
}

// The project number.
func (o DefaultObjectAccessControlProjectTeamResponseOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeamResponse) string { return v.ProjectNumber }).(pulumi.StringOutput)
}

// The team.
func (o DefaultObjectAccessControlProjectTeamResponseOutput) Team() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultObjectAccessControlProjectTeamResponse) string { return v.Team }).(pulumi.StringOutput)
}

type DefaultObjectAccessControlProjectTeamResponsePtrOutput struct{ *pulumi.OutputState }

func (DefaultObjectAccessControlProjectTeamResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DefaultObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o DefaultObjectAccessControlProjectTeamResponsePtrOutput) ToDefaultObjectAccessControlProjectTeamResponsePtrOutput() DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamResponsePtrOutput) ToDefaultObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) DefaultObjectAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o DefaultObjectAccessControlProjectTeamResponsePtrOutput) Elem() DefaultObjectAccessControlProjectTeamResponseOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeamResponse) DefaultObjectAccessControlProjectTeamResponse {
		return *v
	}).(DefaultObjectAccessControlProjectTeamResponseOutput)
}

// The project number.
func (o DefaultObjectAccessControlProjectTeamResponsePtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o DefaultObjectAccessControlProjectTeamResponsePtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DefaultObjectAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Team
	}).(pulumi.StringPtrOutput)
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type Expr struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression *string `pulumi:"expression"`
	// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//          ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type ExprArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//          ExprArgs{...}
//
//  or:
//
//          nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyT(func(v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr { return *v }).(ExprOutput)
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type ExprResponse struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression string `pulumi:"expression"`
	// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// ExprResponseInput is an input type that accepts ExprResponseArgs and ExprResponseOutput values.
// You can construct a concrete instance of `ExprResponseInput` via:
//
//          ExprResponseArgs{...}
type ExprResponseInput interface {
	pulumi.Input

	ToExprResponseOutput() ExprResponseOutput
	ToExprResponseOutputWithContext(context.Context) ExprResponseOutput
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type ExprResponseArgs struct {
	// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression pulumi.StringInput `pulumi:"expression"`
	// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringInput `pulumi:"location"`
	// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ExprResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (i ExprResponseArgs) ToExprResponseOutput() ExprResponseOutput {
	return i.ToExprResponseOutputWithContext(context.Background())
}

func (i ExprResponseArgs) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprResponseOutput)
}

// Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// An access-control entry.
type ObjectAccessControlType struct {
	// The name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain *string `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email *string `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity *string `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId *string `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag *string `pulumi:"etag"`
	// The content generation of the object, if applied to an object.
	Generation *string `pulumi:"generation"`
	// The ID of the access-control entry.
	Id *string `pulumi:"id"`
	// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
	Kind *string `pulumi:"kind"`
	// The name of the object, if applied to an object.
	Object *string `pulumi:"object"`
	// The project team associated with the entity, if any.
	ProjectTeam *ObjectAccessControlProjectTeam `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role *string `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink *string `pulumi:"selfLink"`
}

// ObjectAccessControlTypeInput is an input type that accepts ObjectAccessControlTypeArgs and ObjectAccessControlTypeOutput values.
// You can construct a concrete instance of `ObjectAccessControlTypeInput` via:
//
//          ObjectAccessControlTypeArgs{...}
type ObjectAccessControlTypeInput interface {
	pulumi.Input

	ToObjectAccessControlTypeOutput() ObjectAccessControlTypeOutput
	ToObjectAccessControlTypeOutputWithContext(context.Context) ObjectAccessControlTypeOutput
}

// An access-control entry.
type ObjectAccessControlTypeArgs struct {
	// The name of the bucket.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity pulumi.StringPtrInput `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The content generation of the object, if applied to an object.
	Generation pulumi.StringPtrInput `pulumi:"generation"`
	// The ID of the access-control entry.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The name of the object, if applied to an object.
	Object pulumi.StringPtrInput `pulumi:"object"`
	// The project team associated with the entity, if any.
	ProjectTeam ObjectAccessControlProjectTeamPtrInput `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink pulumi.StringPtrInput `pulumi:"selfLink"`
}

func (ObjectAccessControlTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlType)(nil)).Elem()
}

func (i ObjectAccessControlTypeArgs) ToObjectAccessControlTypeOutput() ObjectAccessControlTypeOutput {
	return i.ToObjectAccessControlTypeOutputWithContext(context.Background())
}

func (i ObjectAccessControlTypeArgs) ToObjectAccessControlTypeOutputWithContext(ctx context.Context) ObjectAccessControlTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlTypeOutput)
}

// ObjectAccessControlTypeArrayInput is an input type that accepts ObjectAccessControlTypeArray and ObjectAccessControlTypeArrayOutput values.
// You can construct a concrete instance of `ObjectAccessControlTypeArrayInput` via:
//
//          ObjectAccessControlTypeArray{ ObjectAccessControlTypeArgs{...} }
type ObjectAccessControlTypeArrayInput interface {
	pulumi.Input

	ToObjectAccessControlTypeArrayOutput() ObjectAccessControlTypeArrayOutput
	ToObjectAccessControlTypeArrayOutputWithContext(context.Context) ObjectAccessControlTypeArrayOutput
}

type ObjectAccessControlTypeArray []ObjectAccessControlTypeInput

func (ObjectAccessControlTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectAccessControlType)(nil)).Elem()
}

func (i ObjectAccessControlTypeArray) ToObjectAccessControlTypeArrayOutput() ObjectAccessControlTypeArrayOutput {
	return i.ToObjectAccessControlTypeArrayOutputWithContext(context.Background())
}

func (i ObjectAccessControlTypeArray) ToObjectAccessControlTypeArrayOutputWithContext(ctx context.Context) ObjectAccessControlTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlTypeArrayOutput)
}

// An access-control entry.
type ObjectAccessControlTypeOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlType)(nil)).Elem()
}

func (o ObjectAccessControlTypeOutput) ToObjectAccessControlTypeOutput() ObjectAccessControlTypeOutput {
	return o
}

func (o ObjectAccessControlTypeOutput) ToObjectAccessControlTypeOutputWithContext(ctx context.Context) ObjectAccessControlTypeOutput {
	return o
}

// The name of the bucket.
func (o ObjectAccessControlTypeOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The domain associated with the entity, if any.
func (o ObjectAccessControlTypeOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The email address associated with the entity, if any.
func (o ObjectAccessControlTypeOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The entity holding the permission, in one of the following forms:
// - user-userId
// - user-email
// - group-groupId
// - group-email
// - domain-domain
// - project-team-projectId
// - allUsers
// - allAuthenticatedUsers Examples:
// - The user liz@example.com would be user-liz@example.com.
// - The group example@googlegroups.com would be group-example@googlegroups.com.
// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
func (o ObjectAccessControlTypeOutput) Entity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Entity }).(pulumi.StringPtrOutput)
}

// The ID for the entity, if any.
func (o ObjectAccessControlTypeOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// HTTP 1.1 Entity tag for the access-control entry.
func (o ObjectAccessControlTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The content generation of the object, if applied to an object.
func (o ObjectAccessControlTypeOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

// The ID of the access-control entry.
func (o ObjectAccessControlTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
func (o ObjectAccessControlTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The name of the object, if applied to an object.
func (o ObjectAccessControlTypeOutput) Object() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Object }).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
func (o ObjectAccessControlTypeOutput) ProjectTeam() ObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *ObjectAccessControlProjectTeam { return v.ProjectTeam }).(ObjectAccessControlProjectTeamPtrOutput)
}

// The access permission for the entity.
func (o ObjectAccessControlTypeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// The link to this access-control entry.
func (o ObjectAccessControlTypeOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlType) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlTypeArrayOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectAccessControlType)(nil)).Elem()
}

func (o ObjectAccessControlTypeArrayOutput) ToObjectAccessControlTypeArrayOutput() ObjectAccessControlTypeArrayOutput {
	return o
}

func (o ObjectAccessControlTypeArrayOutput) ToObjectAccessControlTypeArrayOutputWithContext(ctx context.Context) ObjectAccessControlTypeArrayOutput {
	return o
}

func (o ObjectAccessControlTypeArrayOutput) Index(i pulumi.IntInput) ObjectAccessControlTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectAccessControlType {
		return vs[0].([]ObjectAccessControlType)[vs[1].(int)]
	}).(ObjectAccessControlTypeOutput)
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeam struct {
	// The project number.
	ProjectNumber *string `pulumi:"projectNumber"`
	// The team.
	Team *string `pulumi:"team"`
}

// ObjectAccessControlProjectTeamInput is an input type that accepts ObjectAccessControlProjectTeamArgs and ObjectAccessControlProjectTeamOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamInput` via:
//
//          ObjectAccessControlProjectTeamArgs{...}
type ObjectAccessControlProjectTeamInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput
	ToObjectAccessControlProjectTeamOutputWithContext(context.Context) ObjectAccessControlProjectTeamOutput
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeamArgs struct {
	// The project number.
	ProjectNumber pulumi.StringPtrInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringPtrInput `pulumi:"team"`
}

func (ObjectAccessControlProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return i.ToObjectAccessControlProjectTeamOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput)
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamArgs) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamOutput).ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx)
}

// ObjectAccessControlProjectTeamPtrInput is an input type that accepts ObjectAccessControlProjectTeamArgs, ObjectAccessControlProjectTeamPtr and ObjectAccessControlProjectTeamPtrOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamPtrInput` via:
//
//          ObjectAccessControlProjectTeamArgs{...}
//
//  or:
//
//          nil
type ObjectAccessControlProjectTeamPtrInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput
	ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Context) ObjectAccessControlProjectTeamPtrOutput
}

type objectAccessControlProjectTeamPtrType ObjectAccessControlProjectTeamArgs

func ObjectAccessControlProjectTeamPtr(v *ObjectAccessControlProjectTeamArgs) ObjectAccessControlProjectTeamPtrInput {
	return (*objectAccessControlProjectTeamPtrType)(v)
}

func (*objectAccessControlProjectTeamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return i.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (i *objectAccessControlProjectTeamPtrType) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamPtrOutput)
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeamOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutput() ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamOutput {
	return o
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o.ToObjectAccessControlProjectTeamPtrOutputWithContext(context.Background())
}

func (o ObjectAccessControlProjectTeamOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *ObjectAccessControlProjectTeam {
		return &v
	}).(ObjectAccessControlProjectTeamPtrOutput)
}

// The project number.
func (o ObjectAccessControlProjectTeamOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.ProjectNumber }).(pulumi.StringPtrOutput)
}

// The team.
func (o ObjectAccessControlProjectTeamOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeam) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ObjectAccessControlProjectTeamPtrOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeam)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutput() ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) ToObjectAccessControlProjectTeamPtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamPtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamPtrOutput) Elem() ObjectAccessControlProjectTeamOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) ObjectAccessControlProjectTeam { return *v }).(ObjectAccessControlProjectTeamOutput)
}

// The project number.
func (o ObjectAccessControlProjectTeamPtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o ObjectAccessControlProjectTeamPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeam) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeamResponse struct {
	// The project number.
	ProjectNumber string `pulumi:"projectNumber"`
	// The team.
	Team string `pulumi:"team"`
}

// ObjectAccessControlProjectTeamResponseInput is an input type that accepts ObjectAccessControlProjectTeamResponseArgs and ObjectAccessControlProjectTeamResponseOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamResponseInput` via:
//
//          ObjectAccessControlProjectTeamResponseArgs{...}
type ObjectAccessControlProjectTeamResponseInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamResponseOutput() ObjectAccessControlProjectTeamResponseOutput
	ToObjectAccessControlProjectTeamResponseOutputWithContext(context.Context) ObjectAccessControlProjectTeamResponseOutput
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeamResponseArgs struct {
	// The project number.
	ProjectNumber pulumi.StringInput `pulumi:"projectNumber"`
	// The team.
	Team pulumi.StringInput `pulumi:"team"`
}

func (ObjectAccessControlProjectTeamResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i ObjectAccessControlProjectTeamResponseArgs) ToObjectAccessControlProjectTeamResponseOutput() ObjectAccessControlProjectTeamResponseOutput {
	return i.ToObjectAccessControlProjectTeamResponseOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamResponseArgs) ToObjectAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamResponseOutput)
}

func (i ObjectAccessControlProjectTeamResponseArgs) ToObjectAccessControlProjectTeamResponsePtrOutput() ObjectAccessControlProjectTeamResponsePtrOutput {
	return i.ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i ObjectAccessControlProjectTeamResponseArgs) ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamResponseOutput).ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx)
}

// ObjectAccessControlProjectTeamResponsePtrInput is an input type that accepts ObjectAccessControlProjectTeamResponseArgs, ObjectAccessControlProjectTeamResponsePtr and ObjectAccessControlProjectTeamResponsePtrOutput values.
// You can construct a concrete instance of `ObjectAccessControlProjectTeamResponsePtrInput` via:
//
//          ObjectAccessControlProjectTeamResponseArgs{...}
//
//  or:
//
//          nil
type ObjectAccessControlProjectTeamResponsePtrInput interface {
	pulumi.Input

	ToObjectAccessControlProjectTeamResponsePtrOutput() ObjectAccessControlProjectTeamResponsePtrOutput
	ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Context) ObjectAccessControlProjectTeamResponsePtrOutput
}

type objectAccessControlProjectTeamResponsePtrType ObjectAccessControlProjectTeamResponseArgs

func ObjectAccessControlProjectTeamResponsePtr(v *ObjectAccessControlProjectTeamResponseArgs) ObjectAccessControlProjectTeamResponsePtrInput {
	return (*objectAccessControlProjectTeamResponsePtrType)(v)
}

func (*objectAccessControlProjectTeamResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (i *objectAccessControlProjectTeamResponsePtrType) ToObjectAccessControlProjectTeamResponsePtrOutput() ObjectAccessControlProjectTeamResponsePtrOutput {
	return i.ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (i *objectAccessControlProjectTeamResponsePtrType) ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlProjectTeamResponsePtrOutput)
}

// The project team associated with the entity, if any.
type ObjectAccessControlProjectTeamResponseOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamResponseOutput) ToObjectAccessControlProjectTeamResponseOutput() ObjectAccessControlProjectTeamResponseOutput {
	return o
}

func (o ObjectAccessControlProjectTeamResponseOutput) ToObjectAccessControlProjectTeamResponseOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponseOutput {
	return o
}

func (o ObjectAccessControlProjectTeamResponseOutput) ToObjectAccessControlProjectTeamResponsePtrOutput() ObjectAccessControlProjectTeamResponsePtrOutput {
	return o.ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(context.Background())
}

func (o ObjectAccessControlProjectTeamResponseOutput) ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponsePtrOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeamResponse) *ObjectAccessControlProjectTeamResponse {
		return &v
	}).(ObjectAccessControlProjectTeamResponsePtrOutput)
}

// The project number.
func (o ObjectAccessControlProjectTeamResponseOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeamResponse) string { return v.ProjectNumber }).(pulumi.StringOutput)
}

// The team.
func (o ObjectAccessControlProjectTeamResponseOutput) Team() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlProjectTeamResponse) string { return v.Team }).(pulumi.StringOutput)
}

type ObjectAccessControlProjectTeamResponsePtrOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlProjectTeamResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectAccessControlProjectTeamResponse)(nil)).Elem()
}

func (o ObjectAccessControlProjectTeamResponsePtrOutput) ToObjectAccessControlProjectTeamResponsePtrOutput() ObjectAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamResponsePtrOutput) ToObjectAccessControlProjectTeamResponsePtrOutputWithContext(ctx context.Context) ObjectAccessControlProjectTeamResponsePtrOutput {
	return o
}

func (o ObjectAccessControlProjectTeamResponsePtrOutput) Elem() ObjectAccessControlProjectTeamResponseOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeamResponse) ObjectAccessControlProjectTeamResponse { return *v }).(ObjectAccessControlProjectTeamResponseOutput)
}

// The project number.
func (o ObjectAccessControlProjectTeamResponsePtrOutput) ProjectNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectNumber
	}).(pulumi.StringPtrOutput)
}

// The team.
func (o ObjectAccessControlProjectTeamResponsePtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectAccessControlProjectTeamResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Team
	}).(pulumi.StringPtrOutput)
}

// An access-control entry.
type ObjectAccessControlResponse struct {
	// The name of the bucket.
	Bucket string `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain string `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email string `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity string `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId string `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag string `pulumi:"etag"`
	// The content generation of the object, if applied to an object.
	Generation string `pulumi:"generation"`
	// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
	Kind string `pulumi:"kind"`
	// The name of the object, if applied to an object.
	Object string `pulumi:"object"`
	// The project team associated with the entity, if any.
	ProjectTeam ObjectAccessControlProjectTeamResponse `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role string `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink string `pulumi:"selfLink"`
}

// ObjectAccessControlResponseInput is an input type that accepts ObjectAccessControlResponseArgs and ObjectAccessControlResponseOutput values.
// You can construct a concrete instance of `ObjectAccessControlResponseInput` via:
//
//          ObjectAccessControlResponseArgs{...}
type ObjectAccessControlResponseInput interface {
	pulumi.Input

	ToObjectAccessControlResponseOutput() ObjectAccessControlResponseOutput
	ToObjectAccessControlResponseOutputWithContext(context.Context) ObjectAccessControlResponseOutput
}

// An access-control entry.
type ObjectAccessControlResponseArgs struct {
	// The name of the bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The domain associated with the entity, if any.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The email address associated with the entity, if any.
	Email pulumi.StringInput `pulumi:"email"`
	// The entity holding the permission, in one of the following forms:
	// - user-userId
	// - user-email
	// - group-groupId
	// - group-email
	// - domain-domain
	// - project-team-projectId
	// - allUsers
	// - allAuthenticatedUsers Examples:
	// - The user liz@example.com would be user-liz@example.com.
	// - The group example@googlegroups.com would be group-example@googlegroups.com.
	// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
	Entity pulumi.StringInput `pulumi:"entity"`
	// The ID for the entity, if any.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// HTTP 1.1 Entity tag for the access-control entry.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The content generation of the object, if applied to an object.
	Generation pulumi.StringInput `pulumi:"generation"`
	// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name of the object, if applied to an object.
	Object pulumi.StringInput `pulumi:"object"`
	// The project team associated with the entity, if any.
	ProjectTeam ObjectAccessControlProjectTeamResponseInput `pulumi:"projectTeam"`
	// The access permission for the entity.
	Role pulumi.StringInput `pulumi:"role"`
	// The link to this access-control entry.
	SelfLink pulumi.StringInput `pulumi:"selfLink"`
}

func (ObjectAccessControlResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlResponse)(nil)).Elem()
}

func (i ObjectAccessControlResponseArgs) ToObjectAccessControlResponseOutput() ObjectAccessControlResponseOutput {
	return i.ToObjectAccessControlResponseOutputWithContext(context.Background())
}

func (i ObjectAccessControlResponseArgs) ToObjectAccessControlResponseOutputWithContext(ctx context.Context) ObjectAccessControlResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlResponseOutput)
}

// ObjectAccessControlResponseArrayInput is an input type that accepts ObjectAccessControlResponseArray and ObjectAccessControlResponseArrayOutput values.
// You can construct a concrete instance of `ObjectAccessControlResponseArrayInput` via:
//
//          ObjectAccessControlResponseArray{ ObjectAccessControlResponseArgs{...} }
type ObjectAccessControlResponseArrayInput interface {
	pulumi.Input

	ToObjectAccessControlResponseArrayOutput() ObjectAccessControlResponseArrayOutput
	ToObjectAccessControlResponseArrayOutputWithContext(context.Context) ObjectAccessControlResponseArrayOutput
}

type ObjectAccessControlResponseArray []ObjectAccessControlResponseInput

func (ObjectAccessControlResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectAccessControlResponse)(nil)).Elem()
}

func (i ObjectAccessControlResponseArray) ToObjectAccessControlResponseArrayOutput() ObjectAccessControlResponseArrayOutput {
	return i.ToObjectAccessControlResponseArrayOutputWithContext(context.Background())
}

func (i ObjectAccessControlResponseArray) ToObjectAccessControlResponseArrayOutputWithContext(ctx context.Context) ObjectAccessControlResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectAccessControlResponseArrayOutput)
}

// An access-control entry.
type ObjectAccessControlResponseOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectAccessControlResponse)(nil)).Elem()
}

func (o ObjectAccessControlResponseOutput) ToObjectAccessControlResponseOutput() ObjectAccessControlResponseOutput {
	return o
}

func (o ObjectAccessControlResponseOutput) ToObjectAccessControlResponseOutputWithContext(ctx context.Context) ObjectAccessControlResponseOutput {
	return o
}

// The name of the bucket.
func (o ObjectAccessControlResponseOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Bucket }).(pulumi.StringOutput)
}

// The domain associated with the entity, if any.
func (o ObjectAccessControlResponseOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Domain }).(pulumi.StringOutput)
}

// The email address associated with the entity, if any.
func (o ObjectAccessControlResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The entity holding the permission, in one of the following forms:
// - user-userId
// - user-email
// - group-groupId
// - group-email
// - domain-domain
// - project-team-projectId
// - allUsers
// - allAuthenticatedUsers Examples:
// - The user liz@example.com would be user-liz@example.com.
// - The group example@googlegroups.com would be group-example@googlegroups.com.
// - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
func (o ObjectAccessControlResponseOutput) Entity() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Entity }).(pulumi.StringOutput)
}

// The ID for the entity, if any.
func (o ObjectAccessControlResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

// HTTP 1.1 Entity tag for the access-control entry.
func (o ObjectAccessControlResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The content generation of the object, if applied to an object.
func (o ObjectAccessControlResponseOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Generation }).(pulumi.StringOutput)
}

// The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
func (o ObjectAccessControlResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The name of the object, if applied to an object.
func (o ObjectAccessControlResponseOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Object }).(pulumi.StringOutput)
}

// The project team associated with the entity, if any.
func (o ObjectAccessControlResponseOutput) ProjectTeam() ObjectAccessControlProjectTeamResponseOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) ObjectAccessControlProjectTeamResponse { return v.ProjectTeam }).(ObjectAccessControlProjectTeamResponseOutput)
}

// The access permission for the entity.
func (o ObjectAccessControlResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.Role }).(pulumi.StringOutput)
}

// The link to this access-control entry.
func (o ObjectAccessControlResponseOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectAccessControlResponse) string { return v.SelfLink }).(pulumi.StringOutput)
}

type ObjectAccessControlResponseArrayOutput struct{ *pulumi.OutputState }

func (ObjectAccessControlResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectAccessControlResponse)(nil)).Elem()
}

func (o ObjectAccessControlResponseArrayOutput) ToObjectAccessControlResponseArrayOutput() ObjectAccessControlResponseArrayOutput {
	return o
}

func (o ObjectAccessControlResponseArrayOutput) ToObjectAccessControlResponseArrayOutputWithContext(ctx context.Context) ObjectAccessControlResponseArrayOutput {
	return o
}

func (o ObjectAccessControlResponseArrayOutput) Index(i pulumi.IntInput) ObjectAccessControlResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectAccessControlResponse {
		return vs[0].([]ObjectAccessControlResponse)[vs[1].(int)]
	}).(ObjectAccessControlResponseOutput)
}

type ObjectIamPolicyBindingsItem struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition *Expr `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members []string `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role *string `pulumi:"role"`
}

// ObjectIamPolicyBindingsItemInput is an input type that accepts ObjectIamPolicyBindingsItemArgs and ObjectIamPolicyBindingsItemOutput values.
// You can construct a concrete instance of `ObjectIamPolicyBindingsItemInput` via:
//
//          ObjectIamPolicyBindingsItemArgs{...}
type ObjectIamPolicyBindingsItemInput interface {
	pulumi.Input

	ToObjectIamPolicyBindingsItemOutput() ObjectIamPolicyBindingsItemOutput
	ToObjectIamPolicyBindingsItemOutputWithContext(context.Context) ObjectIamPolicyBindingsItemOutput
}

type ObjectIamPolicyBindingsItemArgs struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprPtrInput `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (ObjectIamPolicyBindingsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectIamPolicyBindingsItem)(nil)).Elem()
}

func (i ObjectIamPolicyBindingsItemArgs) ToObjectIamPolicyBindingsItemOutput() ObjectIamPolicyBindingsItemOutput {
	return i.ToObjectIamPolicyBindingsItemOutputWithContext(context.Background())
}

func (i ObjectIamPolicyBindingsItemArgs) ToObjectIamPolicyBindingsItemOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectIamPolicyBindingsItemOutput)
}

// ObjectIamPolicyBindingsItemArrayInput is an input type that accepts ObjectIamPolicyBindingsItemArray and ObjectIamPolicyBindingsItemArrayOutput values.
// You can construct a concrete instance of `ObjectIamPolicyBindingsItemArrayInput` via:
//
//          ObjectIamPolicyBindingsItemArray{ ObjectIamPolicyBindingsItemArgs{...} }
type ObjectIamPolicyBindingsItemArrayInput interface {
	pulumi.Input

	ToObjectIamPolicyBindingsItemArrayOutput() ObjectIamPolicyBindingsItemArrayOutput
	ToObjectIamPolicyBindingsItemArrayOutputWithContext(context.Context) ObjectIamPolicyBindingsItemArrayOutput
}

type ObjectIamPolicyBindingsItemArray []ObjectIamPolicyBindingsItemInput

func (ObjectIamPolicyBindingsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectIamPolicyBindingsItem)(nil)).Elem()
}

func (i ObjectIamPolicyBindingsItemArray) ToObjectIamPolicyBindingsItemArrayOutput() ObjectIamPolicyBindingsItemArrayOutput {
	return i.ToObjectIamPolicyBindingsItemArrayOutputWithContext(context.Background())
}

func (i ObjectIamPolicyBindingsItemArray) ToObjectIamPolicyBindingsItemArrayOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectIamPolicyBindingsItemArrayOutput)
}

type ObjectIamPolicyBindingsItemOutput struct{ *pulumi.OutputState }

func (ObjectIamPolicyBindingsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectIamPolicyBindingsItem)(nil)).Elem()
}

func (o ObjectIamPolicyBindingsItemOutput) ToObjectIamPolicyBindingsItemOutput() ObjectIamPolicyBindingsItemOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemOutput) ToObjectIamPolicyBindingsItemOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemOutput {
	return o
}

// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
func (o ObjectIamPolicyBindingsItemOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItem) *Expr { return v.Condition }).(ExprPtrOutput)
}

// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
func (o ObjectIamPolicyBindingsItemOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItem) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
// The new IAM roles are:
// - roles/storage.admin — Full control of Google Cloud Storage resources.
// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
func (o ObjectIamPolicyBindingsItemOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItem) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ObjectIamPolicyBindingsItemArrayOutput struct{ *pulumi.OutputState }

func (ObjectIamPolicyBindingsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectIamPolicyBindingsItem)(nil)).Elem()
}

func (o ObjectIamPolicyBindingsItemArrayOutput) ToObjectIamPolicyBindingsItemArrayOutput() ObjectIamPolicyBindingsItemArrayOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemArrayOutput) ToObjectIamPolicyBindingsItemArrayOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemArrayOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemArrayOutput) Index(i pulumi.IntInput) ObjectIamPolicyBindingsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectIamPolicyBindingsItem {
		return vs[0].([]ObjectIamPolicyBindingsItem)[vs[1].(int)]
	}).(ObjectIamPolicyBindingsItemOutput)
}

type ObjectIamPolicyBindingsItemResponse struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprResponse `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members []string `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role string `pulumi:"role"`
}

// ObjectIamPolicyBindingsItemResponseInput is an input type that accepts ObjectIamPolicyBindingsItemResponseArgs and ObjectIamPolicyBindingsItemResponseOutput values.
// You can construct a concrete instance of `ObjectIamPolicyBindingsItemResponseInput` via:
//
//          ObjectIamPolicyBindingsItemResponseArgs{...}
type ObjectIamPolicyBindingsItemResponseInput interface {
	pulumi.Input

	ToObjectIamPolicyBindingsItemResponseOutput() ObjectIamPolicyBindingsItemResponseOutput
	ToObjectIamPolicyBindingsItemResponseOutputWithContext(context.Context) ObjectIamPolicyBindingsItemResponseOutput
}

type ObjectIamPolicyBindingsItemResponseArgs struct {
	// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
	Condition ExprResponseInput `pulumi:"condition"`
	// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
	// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
	// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
	// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
	// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
	// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
	// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
	// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
	// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
	// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
	Members pulumi.StringArrayInput `pulumi:"members"`
	// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
	// The new IAM roles are:
	// - roles/storage.admin — Full control of Google Cloud Storage resources.
	// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
	// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
	// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
	// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
	// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
	// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
	// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
	// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
	Role pulumi.StringInput `pulumi:"role"`
}

func (ObjectIamPolicyBindingsItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (i ObjectIamPolicyBindingsItemResponseArgs) ToObjectIamPolicyBindingsItemResponseOutput() ObjectIamPolicyBindingsItemResponseOutput {
	return i.ToObjectIamPolicyBindingsItemResponseOutputWithContext(context.Background())
}

func (i ObjectIamPolicyBindingsItemResponseArgs) ToObjectIamPolicyBindingsItemResponseOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectIamPolicyBindingsItemResponseOutput)
}

// ObjectIamPolicyBindingsItemResponseArrayInput is an input type that accepts ObjectIamPolicyBindingsItemResponseArray and ObjectIamPolicyBindingsItemResponseArrayOutput values.
// You can construct a concrete instance of `ObjectIamPolicyBindingsItemResponseArrayInput` via:
//
//          ObjectIamPolicyBindingsItemResponseArray{ ObjectIamPolicyBindingsItemResponseArgs{...} }
type ObjectIamPolicyBindingsItemResponseArrayInput interface {
	pulumi.Input

	ToObjectIamPolicyBindingsItemResponseArrayOutput() ObjectIamPolicyBindingsItemResponseArrayOutput
	ToObjectIamPolicyBindingsItemResponseArrayOutputWithContext(context.Context) ObjectIamPolicyBindingsItemResponseArrayOutput
}

type ObjectIamPolicyBindingsItemResponseArray []ObjectIamPolicyBindingsItemResponseInput

func (ObjectIamPolicyBindingsItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (i ObjectIamPolicyBindingsItemResponseArray) ToObjectIamPolicyBindingsItemResponseArrayOutput() ObjectIamPolicyBindingsItemResponseArrayOutput {
	return i.ToObjectIamPolicyBindingsItemResponseArrayOutputWithContext(context.Background())
}

func (i ObjectIamPolicyBindingsItemResponseArray) ToObjectIamPolicyBindingsItemResponseArrayOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectIamPolicyBindingsItemResponseArrayOutput)
}

type ObjectIamPolicyBindingsItemResponseOutput struct{ *pulumi.OutputState }

func (ObjectIamPolicyBindingsItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (o ObjectIamPolicyBindingsItemResponseOutput) ToObjectIamPolicyBindingsItemResponseOutput() ObjectIamPolicyBindingsItemResponseOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemResponseOutput) ToObjectIamPolicyBindingsItemResponseOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemResponseOutput {
	return o
}

// The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
func (o ObjectIamPolicyBindingsItemResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItemResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:
// - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
// - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.
// - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.
// - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .
// - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
// - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.
// - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
// - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
// - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
func (o ObjectIamPolicyBindingsItemResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItemResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
// The new IAM roles are:
// - roles/storage.admin — Full control of Google Cloud Storage resources.
// - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.
// - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.
// - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:
// - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.
// - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.
// - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.
// - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.
// - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
func (o ObjectIamPolicyBindingsItemResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectIamPolicyBindingsItemResponse) string { return v.Role }).(pulumi.StringOutput)
}

type ObjectIamPolicyBindingsItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ObjectIamPolicyBindingsItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectIamPolicyBindingsItemResponse)(nil)).Elem()
}

func (o ObjectIamPolicyBindingsItemResponseArrayOutput) ToObjectIamPolicyBindingsItemResponseArrayOutput() ObjectIamPolicyBindingsItemResponseArrayOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemResponseArrayOutput) ToObjectIamPolicyBindingsItemResponseArrayOutputWithContext(ctx context.Context) ObjectIamPolicyBindingsItemResponseArrayOutput {
	return o
}

func (o ObjectIamPolicyBindingsItemResponseArrayOutput) Index(i pulumi.IntInput) ObjectIamPolicyBindingsItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectIamPolicyBindingsItemResponse {
		return vs[0].([]ObjectIamPolicyBindingsItemResponse)[vs[1].(int)]
	}).(ObjectIamPolicyBindingsItemResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketAccessControlTypeOutput{})
	pulumi.RegisterOutputType(BucketAccessControlTypeArrayOutput{})
	pulumi.RegisterOutputType(BucketAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(BucketAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(BucketAccessControlProjectTeamResponseOutput{})
	pulumi.RegisterOutputType(BucketAccessControlProjectTeamResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketAccessControlResponseOutput{})
	pulumi.RegisterOutputType(BucketAccessControlResponseArrayOutput{})
	pulumi.RegisterOutputType(BucketBillingOutput{})
	pulumi.RegisterOutputType(BucketBillingPtrOutput{})
	pulumi.RegisterOutputType(BucketBillingResponseOutput{})
	pulumi.RegisterOutputType(BucketBillingResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketCorsItemOutput{})
	pulumi.RegisterOutputType(BucketCorsItemArrayOutput{})
	pulumi.RegisterOutputType(BucketCorsItemResponseOutput{})
	pulumi.RegisterOutputType(BucketCorsItemResponseArrayOutput{})
	pulumi.RegisterOutputType(BucketEncryptionOutput{})
	pulumi.RegisterOutputType(BucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(BucketEncryptionResponseOutput{})
	pulumi.RegisterOutputType(BucketEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationBucketPolicyOnlyOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationBucketPolicyOnlyPtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationBucketPolicyOnlyResponseOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationBucketPolicyOnlyResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationUniformBucketLevelAccessOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationUniformBucketLevelAccessPtrOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationUniformBucketLevelAccessResponseOutput{})
	pulumi.RegisterOutputType(BucketIamConfigurationUniformBucketLevelAccessResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketIamPolicyBindingsItemOutput{})
	pulumi.RegisterOutputType(BucketIamPolicyBindingsItemArrayOutput{})
	pulumi.RegisterOutputType(BucketIamPolicyBindingsItemResponseOutput{})
	pulumi.RegisterOutputType(BucketIamPolicyBindingsItemResponseArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleOutput{})
	pulumi.RegisterOutputType(BucketLifecyclePtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleResponseOutput{})
	pulumi.RegisterOutputType(BucketLifecycleResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemActionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemActionPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemActionResponseOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemConditionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemConditionPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemConditionResponseOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemResponseOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleItemResponseArrayOutput{})
	pulumi.RegisterOutputType(BucketLoggingOutput{})
	pulumi.RegisterOutputType(BucketLoggingPtrOutput{})
	pulumi.RegisterOutputType(BucketLoggingResponseOutput{})
	pulumi.RegisterOutputType(BucketLoggingResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketObjectCustomerEncryptionOutput{})
	pulumi.RegisterOutputType(BucketObjectCustomerEncryptionPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectCustomerEncryptionResponseOutput{})
	pulumi.RegisterOutputType(BucketObjectCustomerEncryptionResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketObjectOwnerOutput{})
	pulumi.RegisterOutputType(BucketObjectOwnerPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectOwnerResponseOutput{})
	pulumi.RegisterOutputType(BucketObjectOwnerResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketOwnerOutput{})
	pulumi.RegisterOutputType(BucketOwnerPtrOutput{})
	pulumi.RegisterOutputType(BucketOwnerResponseOutput{})
	pulumi.RegisterOutputType(BucketOwnerResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(BucketRetentionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketVersioningOutput{})
	pulumi.RegisterOutputType(BucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(BucketVersioningResponseOutput{})
	pulumi.RegisterOutputType(BucketVersioningResponsePtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteOutput{})
	pulumi.RegisterOutputType(BucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteResponseOutput{})
	pulumi.RegisterOutputType(BucketWebsiteResponsePtrOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamResponseOutput{})
	pulumi.RegisterOutputType(DefaultObjectAccessControlProjectTeamResponsePtrOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlTypeOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlTypeArrayOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamPtrOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamResponseOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlProjectTeamResponsePtrOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlResponseOutput{})
	pulumi.RegisterOutputType(ObjectAccessControlResponseArrayOutput{})
	pulumi.RegisterOutputType(ObjectIamPolicyBindingsItemOutput{})
	pulumi.RegisterOutputType(ObjectIamPolicyBindingsItemArrayOutput{})
	pulumi.RegisterOutputType(ObjectIamPolicyBindingsItemResponseOutput{})
	pulumi.RegisterOutputType(ObjectIamPolicyBindingsItemResponseArrayOutput{})
}
