// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns metadata for the specified folder. Only applicable to buckets with hierarchical namespace enabled.
func LookupFolder(ctx *pulumi.Context, args *LookupFolderArgs, opts ...pulumi.InvokeOption) (*LookupFolderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFolderResult
	err := ctx.Invoke("google-native:storage/v1:getFolder", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFolderArgs struct {
	Bucket                   string  `pulumi:"bucket"`
	Folder                   string  `pulumi:"folder"`
	IfMetagenerationMatch    *string `pulumi:"ifMetagenerationMatch"`
	IfMetagenerationNotMatch *string `pulumi:"ifMetagenerationNotMatch"`
}

type LookupFolderResult struct {
	// The name of the bucket containing this folder.
	Bucket string `pulumi:"bucket"`
	// The creation time of the folder in RFC 3339 format.
	CreateTime string `pulumi:"createTime"`
	// The kind of item this is. For folders, this is always storage#folder.
	Kind string `pulumi:"kind"`
	// The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.
	Metageneration string `pulumi:"metageneration"`
	// The name of the folder. Required if not specified by URL parameter.
	Name string `pulumi:"name"`
	// Only present if the folder is part of an ongoing rename folder operation. Contains information which can be used to query the operation status.
	PendingRenameInfo FolderPendingRenameInfoResponse `pulumi:"pendingRenameInfo"`
	// The link to this folder.
	SelfLink string `pulumi:"selfLink"`
	// The modification time of the folder metadata in RFC 3339 format.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupFolderOutput(ctx *pulumi.Context, args LookupFolderOutputArgs, opts ...pulumi.InvokeOption) LookupFolderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFolderResult, error) {
			args := v.(LookupFolderArgs)
			r, err := LookupFolder(ctx, &args, opts...)
			var s LookupFolderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFolderResultOutput)
}

type LookupFolderOutputArgs struct {
	Bucket                   pulumi.StringInput    `pulumi:"bucket"`
	Folder                   pulumi.StringInput    `pulumi:"folder"`
	IfMetagenerationMatch    pulumi.StringPtrInput `pulumi:"ifMetagenerationMatch"`
	IfMetagenerationNotMatch pulumi.StringPtrInput `pulumi:"ifMetagenerationNotMatch"`
}

func (LookupFolderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFolderArgs)(nil)).Elem()
}

type LookupFolderResultOutput struct{ *pulumi.OutputState }

func (LookupFolderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFolderResult)(nil)).Elem()
}

func (o LookupFolderResultOutput) ToLookupFolderResultOutput() LookupFolderResultOutput {
	return o
}

func (o LookupFolderResultOutput) ToLookupFolderResultOutputWithContext(ctx context.Context) LookupFolderResultOutput {
	return o
}

// The name of the bucket containing this folder.
func (o LookupFolderResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The creation time of the folder in RFC 3339 format.
func (o LookupFolderResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The kind of item this is. For folders, this is always storage#folder.
func (o LookupFolderResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.
func (o LookupFolderResultOutput) Metageneration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.Metageneration }).(pulumi.StringOutput)
}

// The name of the folder. Required if not specified by URL parameter.
func (o LookupFolderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.Name }).(pulumi.StringOutput)
}

// Only present if the folder is part of an ongoing rename folder operation. Contains information which can be used to query the operation status.
func (o LookupFolderResultOutput) PendingRenameInfo() FolderPendingRenameInfoResponseOutput {
	return o.ApplyT(func(v LookupFolderResult) FolderPendingRenameInfoResponse { return v.PendingRenameInfo }).(FolderPendingRenameInfoResponseOutput)
}

// The link to this folder.
func (o LookupFolderResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The modification time of the folder metadata in RFC 3339 format.
func (o LookupFolderResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFolderResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFolderResultOutput{})
}
