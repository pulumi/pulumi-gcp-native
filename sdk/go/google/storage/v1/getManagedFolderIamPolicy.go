// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns an IAM policy for the specified managed folder.
func LookupManagedFolderIamPolicy(ctx *pulumi.Context, args *LookupManagedFolderIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupManagedFolderIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedFolderIamPolicyResult
	err := ctx.Invoke("google-native:storage/v1:getManagedFolderIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedFolderIamPolicyArgs struct {
	Bucket                        string  `pulumi:"bucket"`
	ManagedFolder                 string  `pulumi:"managedFolder"`
	OptionsRequestedPolicyVersion *int    `pulumi:"optionsRequestedPolicyVersion"`
	UserProject                   *string `pulumi:"userProject"`
}

type LookupManagedFolderIamPolicyResult struct {
	// An association between a role, which comes with a set of permissions, and members who may assume that role.
	Bindings []ManagedFolderIamPolicyBindingsItemResponse `pulumi:"bindings"`
	// HTTP 1.1  Entity tag for the policy.
	Etag string `pulumi:"etag"`
	// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
	Kind string `pulumi:"kind"`
	// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, projects/_/buckets/bucket/objects/object for objects, and projects/_/buckets/bucket/managedFolders/managedFolder. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
	ResourceId string `pulumi:"resourceId"`
	// The IAM policy format version.
	Version int `pulumi:"version"`
}

func LookupManagedFolderIamPolicyOutput(ctx *pulumi.Context, args LookupManagedFolderIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupManagedFolderIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedFolderIamPolicyResult, error) {
			args := v.(LookupManagedFolderIamPolicyArgs)
			r, err := LookupManagedFolderIamPolicy(ctx, &args, opts...)
			var s LookupManagedFolderIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedFolderIamPolicyResultOutput)
}

type LookupManagedFolderIamPolicyOutputArgs struct {
	Bucket                        pulumi.StringInput    `pulumi:"bucket"`
	ManagedFolder                 pulumi.StringInput    `pulumi:"managedFolder"`
	OptionsRequestedPolicyVersion pulumi.IntPtrInput    `pulumi:"optionsRequestedPolicyVersion"`
	UserProject                   pulumi.StringPtrInput `pulumi:"userProject"`
}

func (LookupManagedFolderIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedFolderIamPolicyArgs)(nil)).Elem()
}

type LookupManagedFolderIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupManagedFolderIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedFolderIamPolicyResult)(nil)).Elem()
}

func (o LookupManagedFolderIamPolicyResultOutput) ToLookupManagedFolderIamPolicyResultOutput() LookupManagedFolderIamPolicyResultOutput {
	return o
}

func (o LookupManagedFolderIamPolicyResultOutput) ToLookupManagedFolderIamPolicyResultOutputWithContext(ctx context.Context) LookupManagedFolderIamPolicyResultOutput {
	return o
}

func (o LookupManagedFolderIamPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupManagedFolderIamPolicyResult] {
	return pulumix.Output[LookupManagedFolderIamPolicyResult]{
		OutputState: o.OutputState,
	}
}

// An association between a role, which comes with a set of permissions, and members who may assume that role.
func (o LookupManagedFolderIamPolicyResultOutput) Bindings() ManagedFolderIamPolicyBindingsItemResponseArrayOutput {
	return o.ApplyT(func(v LookupManagedFolderIamPolicyResult) []ManagedFolderIamPolicyBindingsItemResponse {
		return v.Bindings
	}).(ManagedFolderIamPolicyBindingsItemResponseArrayOutput)
}

// HTTP 1.1  Entity tag for the policy.
func (o LookupManagedFolderIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
func (o LookupManagedFolderIamPolicyResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderIamPolicyResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, projects/_/buckets/bucket/objects/object for objects, and projects/_/buckets/bucket/managedFolders/managedFolder. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
func (o LookupManagedFolderIamPolicyResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedFolderIamPolicyResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The IAM policy format version.
func (o LookupManagedFolderIamPolicyResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedFolderIamPolicyResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedFolderIamPolicyResultOutput{})
}
