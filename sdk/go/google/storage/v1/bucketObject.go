// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Stores a new object and metadata.
type BucketObject struct {
	pulumi.CustomResourceState

	// Access controls on the object.
	Acl ObjectAccessControlResponseArrayOutput `pulumi:"acl"`
	// The name of the bucket containing this object.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
	CacheControl pulumi.StringOutput `pulumi:"cacheControl"`
	// Number of underlying components that make up this object. Components are accumulated by compose operations.
	ComponentCount pulumi.IntOutput `pulumi:"componentCount"`
	// Content-Disposition of the object data.
	ContentDisposition pulumi.StringOutput `pulumi:"contentDisposition"`
	// Content-Encoding of the object data.
	ContentEncoding pulumi.StringOutput `pulumi:"contentEncoding"`
	// Content-Language of the object data.
	ContentLanguage pulumi.StringOutput `pulumi:"contentLanguage"`
	// Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.
	Crc32c pulumi.StringOutput `pulumi:"crc32c"`
	// A timestamp in RFC 3339 format specified by the user for an object.
	CustomTime pulumi.StringOutput `pulumi:"customTime"`
	// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
	CustomerEncryption BucketObjectCustomerEncryptionResponseOutput `pulumi:"customerEncryption"`
	// HTTP 1.1 Entity tag for the object.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false.
	EventBasedHold pulumi.BoolOutput `pulumi:"eventBasedHold"`
	// The content generation of this object. Used for object versioning.
	Generation pulumi.StringOutput `pulumi:"generation"`
	// The kind of item this is. For objects, this is always storage#object.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request.
	KmsKeyName pulumi.StringOutput `pulumi:"kmsKeyName"`
	// MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
	Md5Hash pulumi.StringOutput `pulumi:"md5Hash"`
	// Media download link.
	MediaLink pulumi.StringOutput `pulumi:"mediaLink"`
	// User-provided metadata, in key/value pairs.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
	Metageneration pulumi.StringOutput `pulumi:"metageneration"`
	// The name of the object. Required if not specified by URL parameter.
	Name pulumi.StringOutput `pulumi:"name"`
	// The owner of the object. This will always be the uploader of the object.
	Owner BucketObjectOwnerResponseOutput `pulumi:"owner"`
	// A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold).
	RetentionExpirationTime pulumi.StringOutput `pulumi:"retentionExpirationTime"`
	// The link to this object.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Content-Length of the data in bytes.
	Size pulumi.StringOutput `pulumi:"size"`
	// Storage class of the object.
	StorageClass pulumi.StringOutput `pulumi:"storageClass"`
	// Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object.
	TemporaryHold pulumi.BoolOutput `pulumi:"temporaryHold"`
	// The creation time of the object in RFC 3339 format.
	TimeCreated pulumi.StringOutput `pulumi:"timeCreated"`
	// The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
	TimeDeleted pulumi.StringOutput `pulumi:"timeDeleted"`
	// The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
	TimeStorageClassUpdated pulumi.StringOutput `pulumi:"timeStorageClassUpdated"`
	// The modification time of the object metadata in RFC 3339 format.
	Updated pulumi.StringOutput `pulumi:"updated"`
}

// NewBucketObject registers a new resource with the given unique name, arguments, and options.
func NewBucketObject(ctx *pulumi.Context,
	name string, args *BucketObjectArgs, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	var resource BucketObject
	err := ctx.RegisterResource("google-native:storage/v1:BucketObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketObject gets an existing BucketObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketObjectState, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	var resource BucketObject
	err := ctx.ReadResource("google-native:storage/v1:BucketObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketObject resources.
type bucketObjectState struct {
}

type BucketObjectState struct {
}

func (BucketObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectState)(nil)).Elem()
}

type bucketObjectArgs struct {
	// Access controls on the object.
	Acl []ObjectAccessControlType `pulumi:"acl"`
	// The name of the bucket containing this object.
	Bucket string `pulumi:"bucket"`
	// Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
	CacheControl *string `pulumi:"cacheControl"`
	// Number of underlying components that make up this object. Components are accumulated by compose operations.
	ComponentCount *int `pulumi:"componentCount"`
	// Content-Disposition of the object data.
	ContentDisposition *string `pulumi:"contentDisposition"`
	// Content-Encoding of the object data.
	ContentEncoding *string `pulumi:"contentEncoding"`
	// Content-Language of the object data.
	ContentLanguage *string `pulumi:"contentLanguage"`
	// Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.
	ContentType *string `pulumi:"contentType"`
	// CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.
	Crc32c *string `pulumi:"crc32c"`
	// A timestamp in RFC 3339 format specified by the user for an object.
	CustomTime *string `pulumi:"customTime"`
	// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
	CustomerEncryption *BucketObjectCustomerEncryption `pulumi:"customerEncryption"`
	// HTTP 1.1 Entity tag for the object.
	Etag *string `pulumi:"etag"`
	// Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false.
	EventBasedHold *bool `pulumi:"eventBasedHold"`
	// The content generation of this object. Used for object versioning.
	Generation *string `pulumi:"generation"`
	// The ID of the object, including the bucket name, object name, and generation number.
	Id *string `pulumi:"id"`
	// Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
	IfGenerationMatch *string `pulumi:"ifGenerationMatch"`
	// Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
	IfGenerationNotMatch *string `pulumi:"ifGenerationNotMatch"`
	// Makes the operation conditional on whether the object's current metageneration matches the given value.
	IfMetagenerationMatch *string `pulumi:"ifMetagenerationMatch"`
	// Makes the operation conditional on whether the object's current metageneration does not match the given value.
	IfMetagenerationNotMatch *string `pulumi:"ifMetagenerationNotMatch"`
	// The kind of item this is. For objects, this is always storage#object.
	Kind *string `pulumi:"kind"`
	// Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
	Md5Hash *string `pulumi:"md5Hash"`
	// Media download link.
	MediaLink *string `pulumi:"mediaLink"`
	// User-provided metadata, in key/value pairs.
	Metadata map[string]string `pulumi:"metadata"`
	// The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
	Metageneration *string `pulumi:"metageneration"`
	// The name of the object. Required if not specified by URL parameter.
	Name *string `pulumi:"name"`
	// The owner of the object. This will always be the uploader of the object.
	Owner *BucketObjectOwner `pulumi:"owner"`
	// Apply a predefined set of access controls to this object.
	PredefinedAcl *string `pulumi:"predefinedAcl"`
	// Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
	Projection *string `pulumi:"projection"`
	// The project to be billed for this request if the target bucket is requester-pays bucket.
	ProvisionalUserProject *string `pulumi:"provisionalUserProject"`
	// A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold).
	RetentionExpirationTime *string `pulumi:"retentionExpirationTime"`
	// The link to this object.
	SelfLink *string `pulumi:"selfLink"`
	// Content-Length of the data in bytes.
	Size   *string               `pulumi:"size"`
	Source pulumi.AssetOrArchive `pulumi:"source"`
	// Storage class of the object.
	StorageClass *string `pulumi:"storageClass"`
	// Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object.
	TemporaryHold *bool `pulumi:"temporaryHold"`
	// The creation time of the object in RFC 3339 format.
	TimeCreated *string `pulumi:"timeCreated"`
	// The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
	TimeDeleted *string `pulumi:"timeDeleted"`
	// The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
	TimeStorageClassUpdated *string `pulumi:"timeStorageClassUpdated"`
	// The modification time of the object metadata in RFC 3339 format.
	Updated *string `pulumi:"updated"`
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject *string `pulumi:"userProject"`
}

// The set of arguments for constructing a BucketObject resource.
type BucketObjectArgs struct {
	// Access controls on the object.
	Acl ObjectAccessControlTypeArrayInput
	// The name of the bucket containing this object.
	Bucket pulumi.StringInput
	// Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
	CacheControl pulumi.StringPtrInput
	// Number of underlying components that make up this object. Components are accumulated by compose operations.
	ComponentCount pulumi.IntPtrInput
	// Content-Disposition of the object data.
	ContentDisposition pulumi.StringPtrInput
	// Content-Encoding of the object data.
	ContentEncoding pulumi.StringPtrInput
	// Content-Language of the object data.
	ContentLanguage pulumi.StringPtrInput
	// Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream.
	ContentType pulumi.StringPtrInput
	// CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.
	Crc32c pulumi.StringPtrInput
	// A timestamp in RFC 3339 format specified by the user for an object.
	CustomTime pulumi.StringPtrInput
	// Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
	CustomerEncryption BucketObjectCustomerEncryptionPtrInput
	// HTTP 1.1 Entity tag for the object.
	Etag pulumi.StringPtrInput
	// Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false.
	EventBasedHold pulumi.BoolPtrInput
	// The content generation of this object. Used for object versioning.
	Generation pulumi.StringPtrInput
	// The ID of the object, including the bucket name, object name, and generation number.
	Id pulumi.StringPtrInput
	// Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
	IfGenerationMatch pulumi.StringPtrInput
	// Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
	IfGenerationNotMatch pulumi.StringPtrInput
	// Makes the operation conditional on whether the object's current metageneration matches the given value.
	IfMetagenerationMatch pulumi.StringPtrInput
	// Makes the operation conditional on whether the object's current metageneration does not match the given value.
	IfMetagenerationNotMatch pulumi.StringPtrInput
	// The kind of item this is. For objects, this is always storage#object.
	Kind pulumi.StringPtrInput
	// Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request.
	KmsKeyName pulumi.StringPtrInput
	// MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
	Md5Hash pulumi.StringPtrInput
	// Media download link.
	MediaLink pulumi.StringPtrInput
	// User-provided metadata, in key/value pairs.
	Metadata pulumi.StringMapInput
	// The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
	Metageneration pulumi.StringPtrInput
	// The name of the object. Required if not specified by URL parameter.
	Name pulumi.StringPtrInput
	// The owner of the object. This will always be the uploader of the object.
	Owner BucketObjectOwnerPtrInput
	// Apply a predefined set of access controls to this object.
	PredefinedAcl pulumi.StringPtrInput
	// Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
	Projection pulumi.StringPtrInput
	// The project to be billed for this request if the target bucket is requester-pays bucket.
	ProvisionalUserProject pulumi.StringPtrInput
	// A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold).
	RetentionExpirationTime pulumi.StringPtrInput
	// The link to this object.
	SelfLink pulumi.StringPtrInput
	// Content-Length of the data in bytes.
	Size   pulumi.StringPtrInput
	Source pulumi.AssetOrArchiveInput
	// Storage class of the object.
	StorageClass pulumi.StringPtrInput
	// Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object.
	TemporaryHold pulumi.BoolPtrInput
	// The creation time of the object in RFC 3339 format.
	TimeCreated pulumi.StringPtrInput
	// The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
	TimeDeleted pulumi.StringPtrInput
	// The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
	TimeStorageClassUpdated pulumi.StringPtrInput
	// The modification time of the object metadata in RFC 3339 format.
	Updated pulumi.StringPtrInput
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject pulumi.StringPtrInput
}

func (BucketObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectArgs)(nil)).Elem()
}

type BucketObjectInput interface {
	pulumi.Input

	ToBucketObjectOutput() BucketObjectOutput
	ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput
}

func (*BucketObject) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObject)(nil)).Elem()
}

func (i *BucketObject) ToBucketObjectOutput() BucketObjectOutput {
	return i.ToBucketObjectOutputWithContext(context.Background())
}

func (i *BucketObject) ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOutput)
}

type BucketObjectOutput struct{ *pulumi.OutputState }

func (BucketObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObject)(nil)).Elem()
}

func (o BucketObjectOutput) ToBucketObjectOutput() BucketObjectOutput {
	return o
}

func (o BucketObjectOutput) ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectInput)(nil)).Elem(), &BucketObject{})
	pulumi.RegisterOutputType(BucketObjectOutput{})
}
