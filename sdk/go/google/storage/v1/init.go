// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-cloud/sdk/go/google-cloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-cloud:storage/v1:Bucket":
		r, err = NewBucket(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:BucketAccessControl":
		r, err = NewBucketAccessControl(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:BucketIamPolicy":
		r, err = NewBucketIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:BucketObject":
		r, err = NewBucketObject(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:DefaultObjectAccessControl":
		r, err = NewDefaultObjectAccessControl(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:HmacKey":
		r, err = NewHmacKey(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:Notification":
		r, err = NewNotification(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:ObjectAccessControl":
		r, err = NewObjectAccessControl(ctx, name, nil, pulumi.URN_(urn))
	case "google-cloud:storage/v1:ObjectIamPolicy":
		r, err = NewObjectIamPolicy(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := google - cloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"google-cloud",
		"storage/v1",
		&module{version},
	)
}
