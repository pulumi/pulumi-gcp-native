// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a new KeyRing in a given Project and Location.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type KeyRing struct {
	pulumi.CustomResourceState

	// The time at which this KeyRing was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewKeyRing registers a new resource with the given unique name, arguments, and options.
func NewKeyRing(ctx *pulumi.Context,
	name string, args *KeyRingArgs, opts ...pulumi.ResourceOption) (*KeyRing, error) {
	if args == nil {
		args = &KeyRingArgs{}
	}

	var resource KeyRing
	err := ctx.RegisterResource("google-native:cloudkms/v1:KeyRing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeyRing gets an existing KeyRing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeyRing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyRingState, opts ...pulumi.ResourceOption) (*KeyRing, error) {
	var resource KeyRing
	err := ctx.ReadResource("google-native:cloudkms/v1:KeyRing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeyRing resources.
type keyRingState struct {
}

type KeyRingState struct {
}

func (KeyRingState) ElementType() reflect.Type {
	return reflect.TypeOf((*keyRingState)(nil)).Elem()
}

type keyRingArgs struct {
	// Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
	KeyRingId *string `pulumi:"keyRingId"`
	Location  *string `pulumi:"location"`
	Project   *string `pulumi:"project"`
}

// The set of arguments for constructing a KeyRing resource.
type KeyRingArgs struct {
	// Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
	KeyRingId pulumi.StringPtrInput
	Location  pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
}

func (KeyRingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keyRingArgs)(nil)).Elem()
}

type KeyRingInput interface {
	pulumi.Input

	ToKeyRingOutput() KeyRingOutput
	ToKeyRingOutputWithContext(ctx context.Context) KeyRingOutput
}

func (*KeyRing) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRing)(nil)).Elem()
}

func (i *KeyRing) ToKeyRingOutput() KeyRingOutput {
	return i.ToKeyRingOutputWithContext(context.Background())
}

func (i *KeyRing) ToKeyRingOutputWithContext(ctx context.Context) KeyRingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRingOutput)
}

type KeyRingOutput struct{ *pulumi.OutputState }

func (KeyRingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyRing)(nil)).Elem()
}

func (o KeyRingOutput) ToKeyRingOutput() KeyRingOutput {
	return o
}

func (o KeyRingOutput) ToKeyRingOutputWithContext(ctx context.Context) KeyRingOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeyRingInput)(nil)).Elem(), &KeyRing{})
	pulumi.RegisterOutputType(KeyRingOutput{})
}
