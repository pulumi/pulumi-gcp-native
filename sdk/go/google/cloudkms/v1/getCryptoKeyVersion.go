// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns metadata for a given CryptoKeyVersion.
func LookupCryptoKeyVersion(ctx *pulumi.Context, args *LookupCryptoKeyVersionArgs, opts ...pulumi.InvokeOption) (*LookupCryptoKeyVersionResult, error) {
	var rv LookupCryptoKeyVersionResult
	err := ctx.Invoke("google-native:cloudkms/v1:getCryptoKeyVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCryptoKeyVersionArgs struct {
	CryptoKeyId        string  `pulumi:"cryptoKeyId"`
	CryptoKeyVersionId string  `pulumi:"cryptoKeyVersionId"`
	KeyRingId          string  `pulumi:"keyRingId"`
	Location           string  `pulumi:"location"`
	Project            *string `pulumi:"project"`
}

type LookupCryptoKeyVersionResult struct {
	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm string `pulumi:"algorithm"`
	// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
	Attestation KeyOperationAttestationResponse `pulumi:"attestation"`
	// The time at which this CryptoKeyVersion was created.
	CreateTime string `pulumi:"createTime"`
	// The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
	DestroyEventTime string `pulumi:"destroyEventTime"`
	// The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
	DestroyTime string `pulumi:"destroyTime"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.
	ExternalProtectionLevelOptions ExternalProtectionLevelOptionsResponse `pulumi:"externalProtectionLevelOptions"`
	// The time this CryptoKeyVersion's key material was generated.
	GenerateTime string `pulumi:"generateTime"`
	// The root cause of an import failure. Only present if state is IMPORT_FAILED.
	ImportFailureReason string `pulumi:"importFailureReason"`
	// The name of the ImportJob used to import this CryptoKeyVersion. Only present if the underlying key material was imported.
	ImportJob string `pulumi:"importJob"`
	// The time at which this CryptoKeyVersion's key material was imported.
	ImportTime string `pulumi:"importTime"`
	// The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	Name string `pulumi:"name"`
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel string `pulumi:"protectionLevel"`
	// The current state of the CryptoKeyVersion.
	State string `pulumi:"state"`
}
