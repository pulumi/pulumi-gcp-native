// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns metadata for a given EkmConnection.
func LookupEkmConnection(ctx *pulumi.Context, args *LookupEkmConnectionArgs, opts ...pulumi.InvokeOption) (*LookupEkmConnectionResult, error) {
	var rv LookupEkmConnectionResult
	err := ctx.Invoke("google-native:cloudkms/v1:getEkmConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEkmConnectionArgs struct {
	EkmConnectionId string  `pulumi:"ekmConnectionId"`
	Location        string  `pulumi:"location"`
	Project         *string `pulumi:"project"`
}

type LookupEkmConnectionResult struct {
	// The time at which the EkmConnection was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
	Etag string `pulumi:"etag"`
	// The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.
	Name string `pulumi:"name"`
	// A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
	ServiceResolvers []ServiceResolverResponse `pulumi:"serviceResolvers"`
}

func LookupEkmConnectionOutput(ctx *pulumi.Context, args LookupEkmConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupEkmConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEkmConnectionResult, error) {
			args := v.(LookupEkmConnectionArgs)
			r, err := LookupEkmConnection(ctx, &args, opts...)
			var s LookupEkmConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEkmConnectionResultOutput)
}

type LookupEkmConnectionOutputArgs struct {
	EkmConnectionId pulumi.StringInput    `pulumi:"ekmConnectionId"`
	Location        pulumi.StringInput    `pulumi:"location"`
	Project         pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupEkmConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEkmConnectionArgs)(nil)).Elem()
}

type LookupEkmConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupEkmConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEkmConnectionResult)(nil)).Elem()
}

func (o LookupEkmConnectionResultOutput) ToLookupEkmConnectionResultOutput() LookupEkmConnectionResultOutput {
	return o
}

func (o LookupEkmConnectionResultOutput) ToLookupEkmConnectionResultOutputWithContext(ctx context.Context) LookupEkmConnectionResultOutput {
	return o
}

// The time at which the EkmConnection was created.
func (o LookupEkmConnectionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
func (o LookupEkmConnectionResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.
func (o LookupEkmConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEkmConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.
func (o LookupEkmConnectionResultOutput) ServiceResolvers() ServiceResolverResponseArrayOutput {
	return o.ApplyT(func(v LookupEkmConnectionResult) []ServiceResolverResponse { return v.ServiceResolvers }).(ServiceResolverResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEkmConnectionResultOutput{})
}
