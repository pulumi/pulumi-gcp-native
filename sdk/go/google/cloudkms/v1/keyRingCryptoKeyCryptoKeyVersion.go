// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next sequential id. If unset, state will be set to ENABLED.
type KeyRingCryptoKeyCryptoKeyVersion struct {
	pulumi.CustomResourceState
}

// NewKeyRingCryptoKeyCryptoKeyVersion registers a new resource with the given unique name, arguments, and options.
func NewKeyRingCryptoKeyCryptoKeyVersion(ctx *pulumi.Context,
	name string, args *KeyRingCryptoKeyCryptoKeyVersionArgs, opts ...pulumi.ResourceOption) (*KeyRingCryptoKeyCryptoKeyVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoKeyVersionsId == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKeyVersionsId'")
	}
	if args.CryptoKeysId == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKeysId'")
	}
	if args.KeyRingsId == nil {
		return nil, errors.New("invalid value for required argument 'KeyRingsId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource KeyRingCryptoKeyCryptoKeyVersion
	err := ctx.RegisterResource("google-cloud:cloudkms/v1:KeyRingCryptoKeyCryptoKeyVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeyRingCryptoKeyCryptoKeyVersion gets an existing KeyRingCryptoKeyCryptoKeyVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeyRingCryptoKeyCryptoKeyVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeyRingCryptoKeyCryptoKeyVersionState, opts ...pulumi.ResourceOption) (*KeyRingCryptoKeyCryptoKeyVersion, error) {
	var resource KeyRingCryptoKeyCryptoKeyVersion
	err := ctx.ReadResource("google-cloud:cloudkms/v1:KeyRingCryptoKeyCryptoKeyVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeyRingCryptoKeyCryptoKeyVersion resources.
type keyRingCryptoKeyCryptoKeyVersionState struct {
}

type KeyRingCryptoKeyCryptoKeyVersionState struct {
}

func (KeyRingCryptoKeyCryptoKeyVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*keyRingCryptoKeyCryptoKeyVersionState)(nil)).Elem()
}

type keyRingCryptoKeyCryptoKeyVersionArgs struct {
	// Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm *string `pulumi:"algorithm"`
	// Output only. Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
	Attestation *KeyOperationAttestation `pulumi:"attestation"`
	// Output only. The time at which this CryptoKeyVersion was created.
	CreateTime          *string `pulumi:"createTime"`
	CryptoKeyVersionsId string  `pulumi:"cryptoKeyVersionsId"`
	CryptoKeysId        string  `pulumi:"cryptoKeysId"`
	// Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
	DestroyEventTime *string `pulumi:"destroyEventTime"`
	// Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
	DestroyTime *string `pulumi:"destroyTime"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.
	ExternalProtectionLevelOptions *ExternalProtectionLevelOptions `pulumi:"externalProtectionLevelOptions"`
	// Output only. The time this CryptoKeyVersion's key material was generated.
	GenerateTime *string `pulumi:"generateTime"`
	// Output only. The root cause of an import failure. Only present if state is IMPORT_FAILED.
	ImportFailureReason *string `pulumi:"importFailureReason"`
	// Output only. The name of the ImportJob used to import this CryptoKeyVersion. Only present if the underlying key material was imported.
	ImportJob *string `pulumi:"importJob"`
	// Output only. The time at which this CryptoKeyVersion's key material was imported.
	ImportTime  *string `pulumi:"importTime"`
	KeyRingsId  string  `pulumi:"keyRingsId"`
	LocationsId string  `pulumi:"locationsId"`
	// Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	Name       *string `pulumi:"name"`
	ProjectsId string  `pulumi:"projectsId"`
	// Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel *string `pulumi:"protectionLevel"`
	// The current state of the CryptoKeyVersion.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a KeyRingCryptoKeyCryptoKeyVersion resource.
type KeyRingCryptoKeyCryptoKeyVersionArgs struct {
	// Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm pulumi.StringPtrInput
	// Output only. Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
	Attestation KeyOperationAttestationPtrInput
	// Output only. The time at which this CryptoKeyVersion was created.
	CreateTime          pulumi.StringPtrInput
	CryptoKeyVersionsId pulumi.StringInput
	CryptoKeysId        pulumi.StringInput
	// Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
	DestroyEventTime pulumi.StringPtrInput
	// Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
	DestroyTime pulumi.StringPtrInput
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.
	ExternalProtectionLevelOptions ExternalProtectionLevelOptionsPtrInput
	// Output only. The time this CryptoKeyVersion's key material was generated.
	GenerateTime pulumi.StringPtrInput
	// Output only. The root cause of an import failure. Only present if state is IMPORT_FAILED.
	ImportFailureReason pulumi.StringPtrInput
	// Output only. The name of the ImportJob used to import this CryptoKeyVersion. Only present if the underlying key material was imported.
	ImportJob pulumi.StringPtrInput
	// Output only. The time at which this CryptoKeyVersion's key material was imported.
	ImportTime  pulumi.StringPtrInput
	KeyRingsId  pulumi.StringInput
	LocationsId pulumi.StringInput
	// Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	Name       pulumi.StringPtrInput
	ProjectsId pulumi.StringInput
	// Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel pulumi.StringPtrInput
	// The current state of the CryptoKeyVersion.
	State pulumi.StringPtrInput
}

func (KeyRingCryptoKeyCryptoKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keyRingCryptoKeyCryptoKeyVersionArgs)(nil)).Elem()
}

type KeyRingCryptoKeyCryptoKeyVersionInput interface {
	pulumi.Input

	ToKeyRingCryptoKeyCryptoKeyVersionOutput() KeyRingCryptoKeyCryptoKeyVersionOutput
	ToKeyRingCryptoKeyCryptoKeyVersionOutputWithContext(ctx context.Context) KeyRingCryptoKeyCryptoKeyVersionOutput
}

func (*KeyRingCryptoKeyCryptoKeyVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRingCryptoKeyCryptoKeyVersion)(nil))
}

func (i *KeyRingCryptoKeyCryptoKeyVersion) ToKeyRingCryptoKeyCryptoKeyVersionOutput() KeyRingCryptoKeyCryptoKeyVersionOutput {
	return i.ToKeyRingCryptoKeyCryptoKeyVersionOutputWithContext(context.Background())
}

func (i *KeyRingCryptoKeyCryptoKeyVersion) ToKeyRingCryptoKeyCryptoKeyVersionOutputWithContext(ctx context.Context) KeyRingCryptoKeyCryptoKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyRingCryptoKeyCryptoKeyVersionOutput)
}

type KeyRingCryptoKeyCryptoKeyVersionOutput struct {
	*pulumi.OutputState
}

func (KeyRingCryptoKeyCryptoKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyRingCryptoKeyCryptoKeyVersion)(nil))
}

func (o KeyRingCryptoKeyCryptoKeyVersionOutput) ToKeyRingCryptoKeyCryptoKeyVersionOutput() KeyRingCryptoKeyCryptoKeyVersionOutput {
	return o
}

func (o KeyRingCryptoKeyCryptoKeyVersionOutput) ToKeyRingCryptoKeyCryptoKeyVersionOutputWithContext(ctx context.Context) KeyRingCryptoKeyCryptoKeyVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KeyRingCryptoKeyCryptoKeyVersionOutput{})
}
