// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SecurityPolicyRecaptchaOptionsConfigResponse struct {
	// An optional field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	RedirectSiteKey string `pulumi:"redirectSiteKey"`
}

type SecurityPolicyRecaptchaOptionsConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRecaptchaOptionsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRecaptchaOptionsConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRecaptchaOptionsConfigResponseOutput) ToSecurityPolicyRecaptchaOptionsConfigResponseOutput() SecurityPolicyRecaptchaOptionsConfigResponseOutput {
	return o
}

func (o SecurityPolicyRecaptchaOptionsConfigResponseOutput) ToSecurityPolicyRecaptchaOptionsConfigResponseOutputWithContext(ctx context.Context) SecurityPolicyRecaptchaOptionsConfigResponseOutput {
	return o
}

// An optional field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRecaptchaOptionsConfigResponseOutput) RedirectSiteKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRecaptchaOptionsConfigResponse) string { return v.RedirectSiteKey }).(pulumi.StringOutput)
}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
type SecurityPolicyRule struct {
	// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
	Action *string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
	Direction *SecurityPolicyRuleDirection `pulumi:"direction"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
	EnableLogging *bool `pulumi:"enableLogging"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	HeaderAction *SecurityPolicyRuleHttpHeaderAction `pulumi:"headerAction"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
	Match *SecurityPolicyRuleMatcher `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced. The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields'). Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds. Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all. For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet. Example: networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff" The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive.
	NetworkMatch *SecurityPolicyRuleNetworkMatcher `pulumi:"networkMatch"`
	// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	PreconfiguredWafConfig *SecurityPolicyRulePreconfiguredWafConfig `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview *bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority *int `pulumi:"priority"`
	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	RateLimitOptions *SecurityPolicyRuleRateLimitOptions `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	RedirectOptions *SecurityPolicyRuleRedirectOptions `pulumi:"redirectOptions"`
	// This must be specified for redirect actions. Cannot be specified for any other actions.
	RedirectTarget *string `pulumi:"redirectTarget"`
	// Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
	RuleNumber *string `pulumi:"ruleNumber"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
	TargetResources []string `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts []string `pulumi:"targetServiceAccounts"`
}

// SecurityPolicyRuleInput is an input type that accepts SecurityPolicyRuleArgs and SecurityPolicyRuleOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleInput` via:
//
//	SecurityPolicyRuleArgs{...}
type SecurityPolicyRuleInput interface {
	pulumi.Input

	ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput
	ToSecurityPolicyRuleOutputWithContext(context.Context) SecurityPolicyRuleOutput
}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
type SecurityPolicyRuleArgs struct {
	// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
	Direction SecurityPolicyRuleDirectionPtrInput `pulumi:"direction"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
	EnableLogging pulumi.BoolPtrInput `pulumi:"enableLogging"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	HeaderAction SecurityPolicyRuleHttpHeaderActionPtrInput `pulumi:"headerAction"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
	Match SecurityPolicyRuleMatcherPtrInput `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced. The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields'). Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds. Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all. For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet. Example: networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff" The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive.
	NetworkMatch SecurityPolicyRuleNetworkMatcherPtrInput `pulumi:"networkMatch"`
	// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	PreconfiguredWafConfig SecurityPolicyRulePreconfiguredWafConfigPtrInput `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview pulumi.BoolPtrInput `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	RateLimitOptions SecurityPolicyRuleRateLimitOptionsPtrInput `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	RedirectOptions SecurityPolicyRuleRedirectOptionsPtrInput `pulumi:"redirectOptions"`
	// This must be specified for redirect actions. Cannot be specified for any other actions.
	RedirectTarget pulumi.StringPtrInput `pulumi:"redirectTarget"`
	// Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
	RuleNumber pulumi.StringPtrInput `pulumi:"ruleNumber"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
	TargetResources pulumi.StringArrayInput `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts pulumi.StringArrayInput `pulumi:"targetServiceAccounts"`
}

func (SecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRule)(nil)).Elem()
}

func (i SecurityPolicyRuleArgs) ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput {
	return i.ToSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleArgs) ToSecurityPolicyRuleOutputWithContext(ctx context.Context) SecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleOutput)
}

// SecurityPolicyRuleArrayInput is an input type that accepts SecurityPolicyRuleArray and SecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleArrayInput` via:
//
//	SecurityPolicyRuleArray{ SecurityPolicyRuleArgs{...} }
type SecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput
	ToSecurityPolicyRuleArrayOutputWithContext(context.Context) SecurityPolicyRuleArrayOutput
}

type SecurityPolicyRuleArray []SecurityPolicyRuleInput

func (SecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRule)(nil)).Elem()
}

func (i SecurityPolicyRuleArray) ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput {
	return i.ToSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleArray) ToSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleArrayOutput)
}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
type SecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRule)(nil)).Elem()
}

func (o SecurityPolicyRuleOutput) ToSecurityPolicyRuleOutput() SecurityPolicyRuleOutput {
	return o
}

func (o SecurityPolicyRuleOutput) ToSecurityPolicyRuleOutputWithContext(ctx context.Context) SecurityPolicyRuleOutput {
	return o
}

// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
func (o SecurityPolicyRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o SecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleOutput) Direction() SecurityPolicyRuleDirectionPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleDirection { return v.Direction }).(SecurityPolicyRuleDirectionPtrOutput)
}

// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleOutput) EnableLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *bool { return v.EnableLogging }).(pulumi.BoolPtrOutput)
}

// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleOutput) HeaderAction() SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleHttpHeaderAction { return v.HeaderAction }).(SecurityPolicyRuleHttpHeaderActionPtrOutput)
}

// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
func (o SecurityPolicyRuleOutput) Match() SecurityPolicyRuleMatcherPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleMatcher { return v.Match }).(SecurityPolicyRuleMatcherPtrOutput)
}

// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced. The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields'). Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds. Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all. For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet. Example: networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff" The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive.
func (o SecurityPolicyRuleOutput) NetworkMatch() SecurityPolicyRuleNetworkMatcherPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleNetworkMatcher { return v.NetworkMatch }).(SecurityPolicyRuleNetworkMatcherPtrOutput)
}

// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
func (o SecurityPolicyRuleOutput) PreconfiguredWafConfig() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRulePreconfiguredWafConfig { return v.PreconfiguredWafConfig }).(SecurityPolicyRulePreconfiguredWafConfigPtrOutput)
}

// If set to true, the specified action is not enforced.
func (o SecurityPolicyRuleOutput) Preview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *bool { return v.Preview }).(pulumi.BoolPtrOutput)
}

// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
func (o SecurityPolicyRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
func (o SecurityPolicyRuleOutput) RateLimitOptions() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleRateLimitOptions { return v.RateLimitOptions }).(SecurityPolicyRuleRateLimitOptionsPtrOutput)
}

// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleOutput) RedirectOptions() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *SecurityPolicyRuleRedirectOptions { return v.RedirectOptions }).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

// This must be specified for redirect actions. Cannot be specified for any other actions.
func (o SecurityPolicyRuleOutput) RedirectTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *string { return v.RedirectTarget }).(pulumi.StringPtrOutput)
}

// Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
func (o SecurityPolicyRuleOutput) RuleNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRule) *string { return v.RuleNumber }).(pulumi.StringPtrOutput)
}

// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleOutput) TargetResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRule) []string { return v.TargetResources }).(pulumi.StringArrayOutput)
}

// A list of service accounts indicating the sets of instances that are applied with this rule.
func (o SecurityPolicyRuleOutput) TargetServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRule) []string { return v.TargetServiceAccounts }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRule)(nil)).Elem()
}

func (o SecurityPolicyRuleArrayOutput) ToSecurityPolicyRuleArrayOutput() SecurityPolicyRuleArrayOutput {
	return o
}

func (o SecurityPolicyRuleArrayOutput) ToSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleArrayOutput {
	return o
}

func (o SecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRule {
		return vs[0].([]SecurityPolicyRule)[vs[1].(int)]
	}).(SecurityPolicyRuleOutput)
}

type SecurityPolicyRuleHttpHeaderAction struct {
	// The list of request headers to add or overwrite if they're already present.
	RequestHeadersToAdds []SecurityPolicyRuleHttpHeaderActionHttpHeaderOption `pulumi:"requestHeadersToAdds"`
}

// SecurityPolicyRuleHttpHeaderActionInput is an input type that accepts SecurityPolicyRuleHttpHeaderActionArgs and SecurityPolicyRuleHttpHeaderActionOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleHttpHeaderActionInput` via:
//
//	SecurityPolicyRuleHttpHeaderActionArgs{...}
type SecurityPolicyRuleHttpHeaderActionInput interface {
	pulumi.Input

	ToSecurityPolicyRuleHttpHeaderActionOutput() SecurityPolicyRuleHttpHeaderActionOutput
	ToSecurityPolicyRuleHttpHeaderActionOutputWithContext(context.Context) SecurityPolicyRuleHttpHeaderActionOutput
}

type SecurityPolicyRuleHttpHeaderActionArgs struct {
	// The list of request headers to add or overwrite if they're already present.
	RequestHeadersToAdds SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayInput `pulumi:"requestHeadersToAdds"`
}

func (SecurityPolicyRuleHttpHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderAction)(nil)).Elem()
}

func (i SecurityPolicyRuleHttpHeaderActionArgs) ToSecurityPolicyRuleHttpHeaderActionOutput() SecurityPolicyRuleHttpHeaderActionOutput {
	return i.ToSecurityPolicyRuleHttpHeaderActionOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleHttpHeaderActionArgs) ToSecurityPolicyRuleHttpHeaderActionOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleHttpHeaderActionOutput)
}

func (i SecurityPolicyRuleHttpHeaderActionArgs) ToSecurityPolicyRuleHttpHeaderActionPtrOutput() SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return i.ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleHttpHeaderActionArgs) ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleHttpHeaderActionOutput).ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleHttpHeaderActionPtrInput is an input type that accepts SecurityPolicyRuleHttpHeaderActionArgs, SecurityPolicyRuleHttpHeaderActionPtr and SecurityPolicyRuleHttpHeaderActionPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleHttpHeaderActionPtrInput` via:
//
//	        SecurityPolicyRuleHttpHeaderActionArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleHttpHeaderActionPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleHttpHeaderActionPtrOutput() SecurityPolicyRuleHttpHeaderActionPtrOutput
	ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(context.Context) SecurityPolicyRuleHttpHeaderActionPtrOutput
}

type securityPolicyRuleHttpHeaderActionPtrType SecurityPolicyRuleHttpHeaderActionArgs

func SecurityPolicyRuleHttpHeaderActionPtr(v *SecurityPolicyRuleHttpHeaderActionArgs) SecurityPolicyRuleHttpHeaderActionPtrInput {
	return (*securityPolicyRuleHttpHeaderActionPtrType)(v)
}

func (*securityPolicyRuleHttpHeaderActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleHttpHeaderAction)(nil)).Elem()
}

func (i *securityPolicyRuleHttpHeaderActionPtrType) ToSecurityPolicyRuleHttpHeaderActionPtrOutput() SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return i.ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleHttpHeaderActionPtrType) ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleHttpHeaderActionPtrOutput)
}

type SecurityPolicyRuleHttpHeaderActionOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderAction)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionOutput) ToSecurityPolicyRuleHttpHeaderActionOutput() SecurityPolicyRuleHttpHeaderActionOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionOutput) ToSecurityPolicyRuleHttpHeaderActionOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionOutput) ToSecurityPolicyRuleHttpHeaderActionPtrOutput() SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return o.ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleHttpHeaderActionOutput) ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleHttpHeaderAction) *SecurityPolicyRuleHttpHeaderAction {
		return &v
	}).(SecurityPolicyRuleHttpHeaderActionPtrOutput)
}

// The list of request headers to add or overwrite if they're already present.
func (o SecurityPolicyRuleHttpHeaderActionOutput) RequestHeadersToAdds() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderAction) []SecurityPolicyRuleHttpHeaderActionHttpHeaderOption {
		return v.RequestHeadersToAdds
	}).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput)
}

type SecurityPolicyRuleHttpHeaderActionPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleHttpHeaderAction)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionPtrOutput) ToSecurityPolicyRuleHttpHeaderActionPtrOutput() SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionPtrOutput) ToSecurityPolicyRuleHttpHeaderActionPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionPtrOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionPtrOutput) Elem() SecurityPolicyRuleHttpHeaderActionOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleHttpHeaderAction) SecurityPolicyRuleHttpHeaderAction {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleHttpHeaderAction
		return ret
	}).(SecurityPolicyRuleHttpHeaderActionOutput)
}

// The list of request headers to add or overwrite if they're already present.
func (o SecurityPolicyRuleHttpHeaderActionPtrOutput) RequestHeadersToAdds() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleHttpHeaderAction) []SecurityPolicyRuleHttpHeaderActionHttpHeaderOption {
		if v == nil {
			return nil
		}
		return v.RequestHeadersToAdds
	}).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput)
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOption struct {
	// The name of the header to set.
	HeaderName *string `pulumi:"headerName"`
	// The value to set the named header to.
	HeaderValue *string `pulumi:"headerValue"`
}

// SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionInput is an input type that accepts SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs and SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionInput` via:
//
//	SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs{...}
type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionInput interface {
	pulumi.Input

	ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput
	ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutputWithContext(context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs struct {
	// The name of the header to set.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// The value to set the named header to.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionHttpHeaderOption)(nil)).Elem()
}

func (i SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput {
	return i.ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput)
}

// SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayInput is an input type that accepts SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray and SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayInput` via:
//
//	SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray{ SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs{...} }
type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput
	ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutputWithContext(context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray []SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionInput

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleHttpHeaderActionHttpHeaderOption)(nil)).Elem()
}

func (i SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return i.ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput)
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionHttpHeaderOption)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput {
	return o
}

// The name of the header to set.
func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderActionHttpHeaderOption) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// The value to set the named header to.
func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderActionHttpHeaderOption) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleHttpHeaderActionHttpHeaderOption)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleHttpHeaderActionHttpHeaderOption {
		return vs[0].([]SecurityPolicyRuleHttpHeaderActionHttpHeaderOption)[vs[1].(int)]
	}).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput)
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse struct {
	// The name of the header to set.
	HeaderName string `pulumi:"headerName"`
	// The value to set the named header to.
	HeaderValue string `pulumi:"headerValue"`
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput {
	return o
}

// The name of the header to set.
func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value to set the named header to.
func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput) ToSecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse {
		return vs[0].([]SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput)
}

type SecurityPolicyRuleHttpHeaderActionResponse struct {
	// The list of request headers to add or overwrite if they're already present.
	RequestHeadersToAdds []SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse `pulumi:"requestHeadersToAdds"`
}

type SecurityPolicyRuleHttpHeaderActionResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleHttpHeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleHttpHeaderActionResponseOutput) ToSecurityPolicyRuleHttpHeaderActionResponseOutput() SecurityPolicyRuleHttpHeaderActionResponseOutput {
	return o
}

func (o SecurityPolicyRuleHttpHeaderActionResponseOutput) ToSecurityPolicyRuleHttpHeaderActionResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleHttpHeaderActionResponseOutput {
	return o
}

// The list of request headers to add or overwrite if they're already present.
func (o SecurityPolicyRuleHttpHeaderActionResponseOutput) RequestHeadersToAdds() SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleHttpHeaderActionResponse) []SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponse {
		return v.RequestHeadersToAdds
	}).(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput)
}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
type SecurityPolicyRuleMatcher struct {
	// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
	Config *SecurityPolicyRuleMatcherConfig `pulumi:"config"`
	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
	Expr *Expr `pulumi:"expr"`
	// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
	ExprOptions *SecurityPolicyRuleMatcherExprOptions `pulumi:"exprOptions"`
	// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
	VersionedExpr *SecurityPolicyRuleMatcherVersionedExpr `pulumi:"versionedExpr"`
}

// SecurityPolicyRuleMatcherInput is an input type that accepts SecurityPolicyRuleMatcherArgs and SecurityPolicyRuleMatcherOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherInput` via:
//
//	SecurityPolicyRuleMatcherArgs{...}
type SecurityPolicyRuleMatcherInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherOutput() SecurityPolicyRuleMatcherOutput
	ToSecurityPolicyRuleMatcherOutputWithContext(context.Context) SecurityPolicyRuleMatcherOutput
}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
type SecurityPolicyRuleMatcherArgs struct {
	// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
	Config SecurityPolicyRuleMatcherConfigPtrInput `pulumi:"config"`
	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
	Expr ExprPtrInput `pulumi:"expr"`
	// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
	ExprOptions SecurityPolicyRuleMatcherExprOptionsPtrInput `pulumi:"exprOptions"`
	// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
	VersionedExpr SecurityPolicyRuleMatcherVersionedExprPtrInput `pulumi:"versionedExpr"`
}

func (SecurityPolicyRuleMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcher)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherArgs) ToSecurityPolicyRuleMatcherOutput() SecurityPolicyRuleMatcherOutput {
	return i.ToSecurityPolicyRuleMatcherOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherArgs) ToSecurityPolicyRuleMatcherOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherOutput)
}

func (i SecurityPolicyRuleMatcherArgs) ToSecurityPolicyRuleMatcherPtrOutput() SecurityPolicyRuleMatcherPtrOutput {
	return i.ToSecurityPolicyRuleMatcherPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherArgs) ToSecurityPolicyRuleMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherOutput).ToSecurityPolicyRuleMatcherPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleMatcherPtrInput is an input type that accepts SecurityPolicyRuleMatcherArgs, SecurityPolicyRuleMatcherPtr and SecurityPolicyRuleMatcherPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherPtrInput` via:
//
//	        SecurityPolicyRuleMatcherArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleMatcherPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherPtrOutput() SecurityPolicyRuleMatcherPtrOutput
	ToSecurityPolicyRuleMatcherPtrOutputWithContext(context.Context) SecurityPolicyRuleMatcherPtrOutput
}

type securityPolicyRuleMatcherPtrType SecurityPolicyRuleMatcherArgs

func SecurityPolicyRuleMatcherPtr(v *SecurityPolicyRuleMatcherArgs) SecurityPolicyRuleMatcherPtrInput {
	return (*securityPolicyRuleMatcherPtrType)(v)
}

func (*securityPolicyRuleMatcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcher)(nil)).Elem()
}

func (i *securityPolicyRuleMatcherPtrType) ToSecurityPolicyRuleMatcherPtrOutput() SecurityPolicyRuleMatcherPtrOutput {
	return i.ToSecurityPolicyRuleMatcherPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleMatcherPtrType) ToSecurityPolicyRuleMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherPtrOutput)
}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
type SecurityPolicyRuleMatcherOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcher)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherOutput) ToSecurityPolicyRuleMatcherOutput() SecurityPolicyRuleMatcherOutput {
	return o
}

func (o SecurityPolicyRuleMatcherOutput) ToSecurityPolicyRuleMatcherOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherOutput {
	return o
}

func (o SecurityPolicyRuleMatcherOutput) ToSecurityPolicyRuleMatcherPtrOutput() SecurityPolicyRuleMatcherPtrOutput {
	return o.ToSecurityPolicyRuleMatcherPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherOutput) ToSecurityPolicyRuleMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcher {
		return &v
	}).(SecurityPolicyRuleMatcherPtrOutput)
}

// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
func (o SecurityPolicyRuleMatcherOutput) Config() SecurityPolicyRuleMatcherConfigPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherConfig { return v.Config }).(SecurityPolicyRuleMatcherConfigPtrOutput)
}

// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
func (o SecurityPolicyRuleMatcherOutput) Expr() ExprPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcher) *Expr { return v.Expr }).(ExprPtrOutput)
}

// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
func (o SecurityPolicyRuleMatcherOutput) ExprOptions() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherExprOptions { return v.ExprOptions }).(SecurityPolicyRuleMatcherExprOptionsPtrOutput)
}

// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
func (o SecurityPolicyRuleMatcherOutput) VersionedExpr() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherVersionedExpr { return v.VersionedExpr }).(SecurityPolicyRuleMatcherVersionedExprPtrOutput)
}

type SecurityPolicyRuleMatcherPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcher)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherPtrOutput) ToSecurityPolicyRuleMatcherPtrOutput() SecurityPolicyRuleMatcherPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherPtrOutput) ToSecurityPolicyRuleMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherPtrOutput) Elem() SecurityPolicyRuleMatcherOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcher) SecurityPolicyRuleMatcher {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleMatcher
		return ret
	}).(SecurityPolicyRuleMatcherOutput)
}

// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
func (o SecurityPolicyRuleMatcherPtrOutput) Config() SecurityPolicyRuleMatcherConfigPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(SecurityPolicyRuleMatcherConfigPtrOutput)
}

// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
func (o SecurityPolicyRuleMatcherPtrOutput) Expr() ExprPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcher) *Expr {
		if v == nil {
			return nil
		}
		return v.Expr
	}).(ExprPtrOutput)
}

// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
func (o SecurityPolicyRuleMatcherPtrOutput) ExprOptions() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherExprOptions {
		if v == nil {
			return nil
		}
		return v.ExprOptions
	}).(SecurityPolicyRuleMatcherExprOptionsPtrOutput)
}

// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
func (o SecurityPolicyRuleMatcherPtrOutput) VersionedExpr() SecurityPolicyRuleMatcherVersionedExprPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcher) *SecurityPolicyRuleMatcherVersionedExpr {
		if v == nil {
			return nil
		}
		return v.VersionedExpr
	}).(SecurityPolicyRuleMatcherVersionedExprPtrOutput)
}

type SecurityPolicyRuleMatcherConfig struct {
	// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
	DestIpRanges []string `pulumi:"destIpRanges"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	DestPorts []SecurityPolicyRuleMatcherConfigDestinationPort `pulumi:"destPorts"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	Layer4Configs []SecurityPolicyRuleMatcherConfigLayer4Config `pulumi:"layer4Configs"`
	// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
	SrcIpRanges []string `pulumi:"srcIpRanges"`
}

// SecurityPolicyRuleMatcherConfigInput is an input type that accepts SecurityPolicyRuleMatcherConfigArgs and SecurityPolicyRuleMatcherConfigOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigInput` via:
//
//	SecurityPolicyRuleMatcherConfigArgs{...}
type SecurityPolicyRuleMatcherConfigInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigOutput() SecurityPolicyRuleMatcherConfigOutput
	ToSecurityPolicyRuleMatcherConfigOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigOutput
}

type SecurityPolicyRuleMatcherConfigArgs struct {
	// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
	DestIpRanges pulumi.StringArrayInput `pulumi:"destIpRanges"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	DestPorts SecurityPolicyRuleMatcherConfigDestinationPortArrayInput `pulumi:"destPorts"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	Layer4Configs SecurityPolicyRuleMatcherConfigLayer4ConfigArrayInput `pulumi:"layer4Configs"`
	// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
	SrcIpRanges pulumi.StringArrayInput `pulumi:"srcIpRanges"`
}

func (SecurityPolicyRuleMatcherConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfig)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherConfigArgs) ToSecurityPolicyRuleMatcherConfigOutput() SecurityPolicyRuleMatcherConfigOutput {
	return i.ToSecurityPolicyRuleMatcherConfigOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigArgs) ToSecurityPolicyRuleMatcherConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigOutput)
}

func (i SecurityPolicyRuleMatcherConfigArgs) ToSecurityPolicyRuleMatcherConfigPtrOutput() SecurityPolicyRuleMatcherConfigPtrOutput {
	return i.ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigArgs) ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigOutput).ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleMatcherConfigPtrInput is an input type that accepts SecurityPolicyRuleMatcherConfigArgs, SecurityPolicyRuleMatcherConfigPtr and SecurityPolicyRuleMatcherConfigPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigPtrInput` via:
//
//	        SecurityPolicyRuleMatcherConfigArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleMatcherConfigPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigPtrOutput() SecurityPolicyRuleMatcherConfigPtrOutput
	ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigPtrOutput
}

type securityPolicyRuleMatcherConfigPtrType SecurityPolicyRuleMatcherConfigArgs

func SecurityPolicyRuleMatcherConfigPtr(v *SecurityPolicyRuleMatcherConfigArgs) SecurityPolicyRuleMatcherConfigPtrInput {
	return (*securityPolicyRuleMatcherConfigPtrType)(v)
}

func (*securityPolicyRuleMatcherConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherConfig)(nil)).Elem()
}

func (i *securityPolicyRuleMatcherConfigPtrType) ToSecurityPolicyRuleMatcherConfigPtrOutput() SecurityPolicyRuleMatcherConfigPtrOutput {
	return i.ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleMatcherConfigPtrType) ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigPtrOutput)
}

type SecurityPolicyRuleMatcherConfigOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfig)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigOutput) ToSecurityPolicyRuleMatcherConfigOutput() SecurityPolicyRuleMatcherConfigOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigOutput) ToSecurityPolicyRuleMatcherConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigOutput) ToSecurityPolicyRuleMatcherConfigPtrOutput() SecurityPolicyRuleMatcherConfigPtrOutput {
	return o.ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherConfigOutput) ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleMatcherConfig) *SecurityPolicyRuleMatcherConfig {
		return &v
	}).(SecurityPolicyRuleMatcherConfigPtrOutput)
}

// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfig) []string { return v.DestIpRanges }).(pulumi.StringArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigOutput) DestPorts() SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfig) []SecurityPolicyRuleMatcherConfigDestinationPort {
		return v.DestPorts
	}).(SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigOutput) Layer4Configs() SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfig) []SecurityPolicyRuleMatcherConfigLayer4Config {
		return v.Layer4Configs
	}).(SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput)
}

// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
func (o SecurityPolicyRuleMatcherConfigOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfig) []string { return v.SrcIpRanges }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherConfig)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigPtrOutput) ToSecurityPolicyRuleMatcherConfigPtrOutput() SecurityPolicyRuleMatcherConfigPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigPtrOutput) ToSecurityPolicyRuleMatcherConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigPtrOutput) Elem() SecurityPolicyRuleMatcherConfigOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherConfig) SecurityPolicyRuleMatcherConfig {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleMatcherConfig
		return ret
	}).(SecurityPolicyRuleMatcherConfigOutput)
}

// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigPtrOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherConfig) []string {
		if v == nil {
			return nil
		}
		return v.DestIpRanges
	}).(pulumi.StringArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigPtrOutput) DestPorts() SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherConfig) []SecurityPolicyRuleMatcherConfigDestinationPort {
		if v == nil {
			return nil
		}
		return v.DestPorts
	}).(SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigPtrOutput) Layer4Configs() SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherConfig) []SecurityPolicyRuleMatcherConfigLayer4Config {
		if v == nil {
			return nil
		}
		return v.Layer4Configs
	}).(SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput)
}

// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
func (o SecurityPolicyRuleMatcherConfigPtrOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherConfig) []string {
		if v == nil {
			return nil
		}
		return v.SrcIpRanges
	}).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigDestinationPort struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol *string `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports []string `pulumi:"ports"`
}

// SecurityPolicyRuleMatcherConfigDestinationPortInput is an input type that accepts SecurityPolicyRuleMatcherConfigDestinationPortArgs and SecurityPolicyRuleMatcherConfigDestinationPortOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigDestinationPortInput` via:
//
//	SecurityPolicyRuleMatcherConfigDestinationPortArgs{...}
type SecurityPolicyRuleMatcherConfigDestinationPortInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigDestinationPortOutput() SecurityPolicyRuleMatcherConfigDestinationPortOutput
	ToSecurityPolicyRuleMatcherConfigDestinationPortOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigDestinationPortOutput
}

type SecurityPolicyRuleMatcherConfigDestinationPortArgs struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (SecurityPolicyRuleMatcherConfigDestinationPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigDestinationPort)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherConfigDestinationPortArgs) ToSecurityPolicyRuleMatcherConfigDestinationPortOutput() SecurityPolicyRuleMatcherConfigDestinationPortOutput {
	return i.ToSecurityPolicyRuleMatcherConfigDestinationPortOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigDestinationPortArgs) ToSecurityPolicyRuleMatcherConfigDestinationPortOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigDestinationPortOutput)
}

// SecurityPolicyRuleMatcherConfigDestinationPortArrayInput is an input type that accepts SecurityPolicyRuleMatcherConfigDestinationPortArray and SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigDestinationPortArrayInput` via:
//
//	SecurityPolicyRuleMatcherConfigDestinationPortArray{ SecurityPolicyRuleMatcherConfigDestinationPortArgs{...} }
type SecurityPolicyRuleMatcherConfigDestinationPortArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutput() SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput
	ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput
}

type SecurityPolicyRuleMatcherConfigDestinationPortArray []SecurityPolicyRuleMatcherConfigDestinationPortInput

func (SecurityPolicyRuleMatcherConfigDestinationPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigDestinationPort)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherConfigDestinationPortArray) ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutput() SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return i.ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigDestinationPortArray) ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput)
}

type SecurityPolicyRuleMatcherConfigDestinationPortOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigDestinationPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigDestinationPort)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortOutput() SecurityPolicyRuleMatcherConfigDestinationPortOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortOutput {
	return o
}

// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
func (o SecurityPolicyRuleMatcherConfigDestinationPortOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigDestinationPort) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigDestinationPortOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigDestinationPort) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigDestinationPort)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutput() SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleMatcherConfigDestinationPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleMatcherConfigDestinationPort {
		return vs[0].([]SecurityPolicyRuleMatcherConfigDestinationPort)[vs[1].(int)]
	}).(SecurityPolicyRuleMatcherConfigDestinationPortOutput)
}

type SecurityPolicyRuleMatcherConfigDestinationPortResponse struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol string `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports []string `pulumi:"ports"`
}

type SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigDestinationPortResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortResponseOutput() SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput {
	return o
}

// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigDestinationPortResponse) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigDestinationPortResponse) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigDestinationPortResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput() SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput) ToSecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleMatcherConfigDestinationPortResponse {
		return vs[0].([]SecurityPolicyRuleMatcherConfigDestinationPortResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput)
}

type SecurityPolicyRuleMatcherConfigLayer4Config struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol *string `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports []string `pulumi:"ports"`
}

// SecurityPolicyRuleMatcherConfigLayer4ConfigInput is an input type that accepts SecurityPolicyRuleMatcherConfigLayer4ConfigArgs and SecurityPolicyRuleMatcherConfigLayer4ConfigOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigLayer4ConfigInput` via:
//
//	SecurityPolicyRuleMatcherConfigLayer4ConfigArgs{...}
type SecurityPolicyRuleMatcherConfigLayer4ConfigInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigOutput
	ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigOutput
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigArgs struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
}

func (SecurityPolicyRuleMatcherConfigLayer4ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigLayer4Config)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherConfigLayer4ConfigArgs) ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigOutput {
	return i.ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigLayer4ConfigArgs) ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigLayer4ConfigOutput)
}

// SecurityPolicyRuleMatcherConfigLayer4ConfigArrayInput is an input type that accepts SecurityPolicyRuleMatcherConfigLayer4ConfigArray and SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherConfigLayer4ConfigArrayInput` via:
//
//	SecurityPolicyRuleMatcherConfigLayer4ConfigArray{ SecurityPolicyRuleMatcherConfigLayer4ConfigArgs{...} }
type SecurityPolicyRuleMatcherConfigLayer4ConfigArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput
	ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutputWithContext(context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigArray []SecurityPolicyRuleMatcherConfigLayer4ConfigInput

func (SecurityPolicyRuleMatcherConfigLayer4ConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigLayer4Config)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherConfigLayer4ConfigArray) ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return i.ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherConfigLayer4ConfigArray) ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput)
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigLayer4ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigLayer4Config)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigOutput {
	return o
}

// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
func (o SecurityPolicyRuleMatcherConfigLayer4ConfigOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigLayer4Config) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigLayer4ConfigOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigLayer4Config) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigLayer4Config)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleMatcherConfigLayer4ConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleMatcherConfigLayer4Config {
		return vs[0].([]SecurityPolicyRuleMatcherConfigLayer4Config)[vs[1].(int)]
	}).(SecurityPolicyRuleMatcherConfigLayer4ConfigOutput)
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigResponse struct {
	// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
	IpProtocol string `pulumi:"ipProtocol"`
	// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
	Ports []string `pulumi:"ports"`
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigLayer4ConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput {
	return o
}

// The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigLayer4ConfigResponse) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigLayer4ConfigResponse) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleMatcherConfigLayer4ConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput() SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput) ToSecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleMatcherConfigLayer4ConfigResponse {
		return vs[0].([]SecurityPolicyRuleMatcherConfigLayer4ConfigResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput)
}

type SecurityPolicyRuleMatcherConfigResponse struct {
	// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
	DestIpRanges []string `pulumi:"destIpRanges"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	DestPorts []SecurityPolicyRuleMatcherConfigDestinationPortResponse `pulumi:"destPorts"`
	// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
	Layer4Configs []SecurityPolicyRuleMatcherConfigLayer4ConfigResponse `pulumi:"layer4Configs"`
	// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
	SrcIpRanges []string `pulumi:"srcIpRanges"`
}

type SecurityPolicyRuleMatcherConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherConfigResponseOutput) ToSecurityPolicyRuleMatcherConfigResponseOutput() SecurityPolicyRuleMatcherConfigResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherConfigResponseOutput) ToSecurityPolicyRuleMatcherConfigResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherConfigResponseOutput {
	return o
}

// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigResponseOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigResponse) []string { return v.DestIpRanges }).(pulumi.StringArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigResponseOutput) DestPorts() SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigResponse) []SecurityPolicyRuleMatcherConfigDestinationPortResponse {
		return v.DestPorts
	}).(SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput)
}

// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleMatcherConfigResponseOutput) Layer4Configs() SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigResponse) []SecurityPolicyRuleMatcherConfigLayer4ConfigResponse {
		return v.Layer4Configs
	}).(SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput)
}

// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
func (o SecurityPolicyRuleMatcherConfigResponseOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherConfigResponse) []string { return v.SrcIpRanges }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherExprOptions struct {
	// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
	RecaptchaOptions *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions `pulumi:"recaptchaOptions"`
}

// SecurityPolicyRuleMatcherExprOptionsInput is an input type that accepts SecurityPolicyRuleMatcherExprOptionsArgs and SecurityPolicyRuleMatcherExprOptionsOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherExprOptionsInput` via:
//
//	SecurityPolicyRuleMatcherExprOptionsArgs{...}
type SecurityPolicyRuleMatcherExprOptionsInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherExprOptionsOutput() SecurityPolicyRuleMatcherExprOptionsOutput
	ToSecurityPolicyRuleMatcherExprOptionsOutputWithContext(context.Context) SecurityPolicyRuleMatcherExprOptionsOutput
}

type SecurityPolicyRuleMatcherExprOptionsArgs struct {
	// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
	RecaptchaOptions SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput `pulumi:"recaptchaOptions"`
}

func (SecurityPolicyRuleMatcherExprOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptions)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherExprOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsOutput() SecurityPolicyRuleMatcherExprOptionsOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherExprOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsOutput)
}

func (i SecurityPolicyRuleMatcherExprOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherExprOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsOutput).ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleMatcherExprOptionsPtrInput is an input type that accepts SecurityPolicyRuleMatcherExprOptionsArgs, SecurityPolicyRuleMatcherExprOptionsPtr and SecurityPolicyRuleMatcherExprOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherExprOptionsPtrInput` via:
//
//	        SecurityPolicyRuleMatcherExprOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleMatcherExprOptionsPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherExprOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsPtrOutput
	ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(context.Context) SecurityPolicyRuleMatcherExprOptionsPtrOutput
}

type securityPolicyRuleMatcherExprOptionsPtrType SecurityPolicyRuleMatcherExprOptionsArgs

func SecurityPolicyRuleMatcherExprOptionsPtr(v *SecurityPolicyRuleMatcherExprOptionsArgs) SecurityPolicyRuleMatcherExprOptionsPtrInput {
	return (*securityPolicyRuleMatcherExprOptionsPtrType)(v)
}

func (*securityPolicyRuleMatcherExprOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherExprOptions)(nil)).Elem()
}

func (i *securityPolicyRuleMatcherExprOptionsPtrType) ToSecurityPolicyRuleMatcherExprOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleMatcherExprOptionsPtrType) ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsPtrOutput)
}

type SecurityPolicyRuleMatcherExprOptionsOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsOutput() SecurityPolicyRuleMatcherExprOptionsOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o.ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherExprOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleMatcherExprOptions) *SecurityPolicyRuleMatcherExprOptions {
		return &v
	}).(SecurityPolicyRuleMatcherExprOptionsPtrOutput)
}

// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
func (o SecurityPolicyRuleMatcherExprOptionsOutput) RecaptchaOptions() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptions) *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions {
		return v.RecaptchaOptions
	}).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput)
}

type SecurityPolicyRuleMatcherExprOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherExprOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsPtrOutput) ToSecurityPolicyRuleMatcherExprOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsPtrOutput) ToSecurityPolicyRuleMatcherExprOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsPtrOutput) Elem() SecurityPolicyRuleMatcherExprOptionsOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherExprOptions) SecurityPolicyRuleMatcherExprOptions {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleMatcherExprOptions
		return ret
	}).(SecurityPolicyRuleMatcherExprOptionsOutput)
}

// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
func (o SecurityPolicyRuleMatcherExprOptionsPtrOutput) RecaptchaOptions() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherExprOptions) *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions {
		if v == nil {
			return nil
		}
		return v.RecaptchaOptions
	}).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput)
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions struct {
	// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	ActionTokenSiteKeys []string `pulumi:"actionTokenSiteKeys"`
	// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	SessionTokenSiteKeys []string `pulumi:"sessionTokenSiteKeys"`
}

// SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsInput is an input type that accepts SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs and SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsInput` via:
//
//	SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs{...}
type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput
	ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutputWithContext(context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs struct {
	// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	ActionTokenSiteKeys pulumi.StringArrayInput `pulumi:"actionTokenSiteKeys"`
	// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	SessionTokenSiteKeys pulumi.StringArrayInput `pulumi:"sessionTokenSiteKeys"`
}

func (SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions)(nil)).Elem()
}

func (i SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput)
}

func (i SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput).ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput is an input type that accepts SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs, SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtr and SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput` via:
//
//	        SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput
	ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput
}

type securityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrType SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs

func SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtr(v *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput {
	return (*securityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrType)(v)
}

func (*securityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions)(nil)).Elem()
}

func (i *securityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrType) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return i.ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrType) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput)
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o.ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions {
		return &v
	}).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput)
}

// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) ActionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) []string { return v.ActionTokenSiteKeys }).(pulumi.StringArrayOutput)
}

// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput) SessionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) []string { return v.SessionTokenSiteKeys }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) Elem() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions
		return ret
	}).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput)
}

// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) ActionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) []string {
		if v == nil {
			return nil
		}
		return v.ActionTokenSiteKeys
	}).(pulumi.StringArrayOutput)
}

// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput) SessionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleMatcherExprOptionsRecaptchaOptions) []string {
		if v == nil {
			return nil
		}
		return v.SessionTokenSiteKeys
	}).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse struct {
	// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	ActionTokenSiteKeys []string `pulumi:"actionTokenSiteKeys"`
	// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
	SessionTokenSiteKeys []string `pulumi:"sessionTokenSiteKeys"`
}

type SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput) ToSecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput {
	return o
}

// A list of site keys to be used during the validation of reCAPTCHA action-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput) ActionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse) []string {
		return v.ActionTokenSiteKeys
	}).(pulumi.StringArrayOutput)
}

// A list of site keys to be used during the validation of reCAPTCHA session-tokens. The provided site keys need to be created from reCAPTCHA API under the same project where the security policy is created.
func (o SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput) SessionTokenSiteKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse) []string {
		return v.SessionTokenSiteKeys
	}).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleMatcherExprOptionsResponse struct {
	// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
	RecaptchaOptions SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse `pulumi:"recaptchaOptions"`
}

type SecurityPolicyRuleMatcherExprOptionsResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherExprOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherExprOptionsResponseOutput) ToSecurityPolicyRuleMatcherExprOptionsResponseOutput() SecurityPolicyRuleMatcherExprOptionsResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherExprOptionsResponseOutput) ToSecurityPolicyRuleMatcherExprOptionsResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherExprOptionsResponseOutput {
	return o
}

// reCAPTCHA configuration options to be applied for the rule. If the rule does not evaluate reCAPTCHA tokens, this field will have no effect.
func (o SecurityPolicyRuleMatcherExprOptionsResponseOutput) RecaptchaOptions() SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherExprOptionsResponse) SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponse {
		return v.RecaptchaOptions
	}).(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput)
}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
type SecurityPolicyRuleMatcherResponse struct {
	// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
	Config SecurityPolicyRuleMatcherConfigResponse `pulumi:"config"`
	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
	Expr ExprResponse `pulumi:"expr"`
	// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
	ExprOptions SecurityPolicyRuleMatcherExprOptionsResponse `pulumi:"exprOptions"`
	// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
	VersionedExpr string `pulumi:"versionedExpr"`
}

// Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
type SecurityPolicyRuleMatcherResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleMatcherResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleMatcherResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleMatcherResponseOutput) ToSecurityPolicyRuleMatcherResponseOutput() SecurityPolicyRuleMatcherResponseOutput {
	return o
}

func (o SecurityPolicyRuleMatcherResponseOutput) ToSecurityPolicyRuleMatcherResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleMatcherResponseOutput {
	return o
}

// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
func (o SecurityPolicyRuleMatcherResponseOutput) Config() SecurityPolicyRuleMatcherConfigResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherResponse) SecurityPolicyRuleMatcherConfigResponse { return v.Config }).(SecurityPolicyRuleMatcherConfigResponseOutput)
}

// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Expressions containing `evaluateThreatIntelligence` require Cloud Armor Managed Protection Plus tier and are not supported in Edge Policies nor in Regional Policies. Expressions containing `evaluatePreconfiguredExpr('sourceiplist-*')` require Cloud Armor Managed Protection Plus tier and are only supported in Global Security Policies.
func (o SecurityPolicyRuleMatcherResponseOutput) Expr() ExprResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherResponse) ExprResponse { return v.Expr }).(ExprResponseOutput)
}

// The configuration options available when specifying a user defined CEVAL expression (i.e., 'expr').
func (o SecurityPolicyRuleMatcherResponseOutput) ExprOptions() SecurityPolicyRuleMatcherExprOptionsResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherResponse) SecurityPolicyRuleMatcherExprOptionsResponse {
		return v.ExprOptions
	}).(SecurityPolicyRuleMatcherExprOptionsResponseOutput)
}

// Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
func (o SecurityPolicyRuleMatcherResponseOutput) VersionedExpr() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleMatcherResponse) string { return v.VersionedExpr }).(pulumi.StringOutput)
}

// Represents a match condition that incoming network traffic is evaluated against.
type SecurityPolicyRuleNetworkMatcher struct {
	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	DestIpRanges []string `pulumi:"destIpRanges"`
	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	DestPorts []string `pulumi:"destPorts"`
	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	IpProtocols []string `pulumi:"ipProtocols"`
	// BGP Autonomous System Number associated with the source IP address.
	SrcAsns []int `pulumi:"srcAsns"`
	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIpRanges []string `pulumi:"srcIpRanges"`
	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	SrcPorts []string `pulumi:"srcPorts"`
	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	SrcRegionCodes []string `pulumi:"srcRegionCodes"`
	// User-defined fields. Each element names a defined field and lists the matching values for that field.
	UserDefinedFields []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch `pulumi:"userDefinedFields"`
}

// SecurityPolicyRuleNetworkMatcherInput is an input type that accepts SecurityPolicyRuleNetworkMatcherArgs and SecurityPolicyRuleNetworkMatcherOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleNetworkMatcherInput` via:
//
//	SecurityPolicyRuleNetworkMatcherArgs{...}
type SecurityPolicyRuleNetworkMatcherInput interface {
	pulumi.Input

	ToSecurityPolicyRuleNetworkMatcherOutput() SecurityPolicyRuleNetworkMatcherOutput
	ToSecurityPolicyRuleNetworkMatcherOutputWithContext(context.Context) SecurityPolicyRuleNetworkMatcherOutput
}

// Represents a match condition that incoming network traffic is evaluated against.
type SecurityPolicyRuleNetworkMatcherArgs struct {
	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	DestIpRanges pulumi.StringArrayInput `pulumi:"destIpRanges"`
	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	DestPorts pulumi.StringArrayInput `pulumi:"destPorts"`
	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// BGP Autonomous System Number associated with the source IP address.
	SrcAsns pulumi.IntArrayInput `pulumi:"srcAsns"`
	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIpRanges pulumi.StringArrayInput `pulumi:"srcIpRanges"`
	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	SrcPorts pulumi.StringArrayInput `pulumi:"srcPorts"`
	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	SrcRegionCodes pulumi.StringArrayInput `pulumi:"srcRegionCodes"`
	// User-defined fields. Each element names a defined field and lists the matching values for that field.
	UserDefinedFields SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayInput `pulumi:"userDefinedFields"`
}

func (SecurityPolicyRuleNetworkMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcher)(nil)).Elem()
}

func (i SecurityPolicyRuleNetworkMatcherArgs) ToSecurityPolicyRuleNetworkMatcherOutput() SecurityPolicyRuleNetworkMatcherOutput {
	return i.ToSecurityPolicyRuleNetworkMatcherOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleNetworkMatcherArgs) ToSecurityPolicyRuleNetworkMatcherOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleNetworkMatcherOutput)
}

func (i SecurityPolicyRuleNetworkMatcherArgs) ToSecurityPolicyRuleNetworkMatcherPtrOutput() SecurityPolicyRuleNetworkMatcherPtrOutput {
	return i.ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleNetworkMatcherArgs) ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleNetworkMatcherOutput).ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleNetworkMatcherPtrInput is an input type that accepts SecurityPolicyRuleNetworkMatcherArgs, SecurityPolicyRuleNetworkMatcherPtr and SecurityPolicyRuleNetworkMatcherPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleNetworkMatcherPtrInput` via:
//
//	        SecurityPolicyRuleNetworkMatcherArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleNetworkMatcherPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleNetworkMatcherPtrOutput() SecurityPolicyRuleNetworkMatcherPtrOutput
	ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(context.Context) SecurityPolicyRuleNetworkMatcherPtrOutput
}

type securityPolicyRuleNetworkMatcherPtrType SecurityPolicyRuleNetworkMatcherArgs

func SecurityPolicyRuleNetworkMatcherPtr(v *SecurityPolicyRuleNetworkMatcherArgs) SecurityPolicyRuleNetworkMatcherPtrInput {
	return (*securityPolicyRuleNetworkMatcherPtrType)(v)
}

func (*securityPolicyRuleNetworkMatcherPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleNetworkMatcher)(nil)).Elem()
}

func (i *securityPolicyRuleNetworkMatcherPtrType) ToSecurityPolicyRuleNetworkMatcherPtrOutput() SecurityPolicyRuleNetworkMatcherPtrOutput {
	return i.ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleNetworkMatcherPtrType) ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleNetworkMatcherPtrOutput)
}

// Represents a match condition that incoming network traffic is evaluated against.
type SecurityPolicyRuleNetworkMatcherOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcher)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherOutput) ToSecurityPolicyRuleNetworkMatcherOutput() SecurityPolicyRuleNetworkMatcherOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherOutput) ToSecurityPolicyRuleNetworkMatcherOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherOutput) ToSecurityPolicyRuleNetworkMatcherPtrOutput() SecurityPolicyRuleNetworkMatcherPtrOutput {
	return o.ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleNetworkMatcherOutput) ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleNetworkMatcher) *SecurityPolicyRuleNetworkMatcher {
		return &v
	}).(SecurityPolicyRuleNetworkMatcherPtrOutput)
}

// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.DestIpRanges }).(pulumi.StringArrayOutput)
}

// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherOutput) DestPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.DestPorts }).(pulumi.StringArrayOutput)
}

// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
func (o SecurityPolicyRuleNetworkMatcherOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// BGP Autonomous System Number associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherOutput) SrcAsns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []int { return v.SrcAsns }).(pulumi.IntArrayOutput)
}

// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.SrcIpRanges }).(pulumi.StringArrayOutput)
}

// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherOutput) SrcPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.SrcPorts }).(pulumi.StringArrayOutput)
}

// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherOutput) SrcRegionCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []string { return v.SrcRegionCodes }).(pulumi.StringArrayOutput)
}

// User-defined fields. Each element names a defined field and lists the matching values for that field.
func (o SecurityPolicyRuleNetworkMatcherOutput) UserDefinedFields() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcher) []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
		return v.UserDefinedFields
	}).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput)
}

type SecurityPolicyRuleNetworkMatcherPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleNetworkMatcher)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherPtrOutput) ToSecurityPolicyRuleNetworkMatcherPtrOutput() SecurityPolicyRuleNetworkMatcherPtrOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherPtrOutput) ToSecurityPolicyRuleNetworkMatcherPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherPtrOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherPtrOutput) Elem() SecurityPolicyRuleNetworkMatcherOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) SecurityPolicyRuleNetworkMatcher {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleNetworkMatcher
		return ret
	}).(SecurityPolicyRuleNetworkMatcherOutput)
}

// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.DestIpRanges
	}).(pulumi.StringArrayOutput)
}

// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) DestPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.DestPorts
	}).(pulumi.StringArrayOutput)
}

// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.IpProtocols
	}).(pulumi.StringArrayOutput)
}

// BGP Autonomous System Number associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) SrcAsns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []int {
		if v == nil {
			return nil
		}
		return v.SrcAsns
	}).(pulumi.IntArrayOutput)
}

// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.SrcIpRanges
	}).(pulumi.StringArrayOutput)
}

// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) SrcPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.SrcPorts
	}).(pulumi.StringArrayOutput)
}

// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) SrcRegionCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []string {
		if v == nil {
			return nil
		}
		return v.SrcRegionCodes
	}).(pulumi.StringArrayOutput)
}

// User-defined fields. Each element names a defined field and lists the matching values for that field.
func (o SecurityPolicyRuleNetworkMatcherPtrOutput) UserDefinedFields() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleNetworkMatcher) []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
		if v == nil {
			return nil
		}
		return v.UserDefinedFields
	}).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput)
}

// Represents a match condition that incoming network traffic is evaluated against.
type SecurityPolicyRuleNetworkMatcherResponse struct {
	// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	DestIpRanges []string `pulumi:"destIpRanges"`
	// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	DestPorts []string `pulumi:"destPorts"`
	// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
	IpProtocols []string `pulumi:"ipProtocols"`
	// BGP Autonomous System Number associated with the source IP address.
	SrcAsns []int `pulumi:"srcAsns"`
	// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
	SrcIpRanges []string `pulumi:"srcIpRanges"`
	// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
	SrcPorts []string `pulumi:"srcPorts"`
	// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
	SrcRegionCodes []string `pulumi:"srcRegionCodes"`
	// User-defined fields. Each element names a defined field and lists the matching values for that field.
	UserDefinedFields []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse `pulumi:"userDefinedFields"`
}

// Represents a match condition that incoming network traffic is evaluated against.
type SecurityPolicyRuleNetworkMatcherResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherResponseOutput) ToSecurityPolicyRuleNetworkMatcherResponseOutput() SecurityPolicyRuleNetworkMatcherResponseOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherResponseOutput) ToSecurityPolicyRuleNetworkMatcherResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherResponseOutput {
	return o
}

// Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) DestIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.DestIpRanges }).(pulumi.StringArrayOutput)
}

// Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) DestPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.DestPorts }).(pulumi.StringArrayOutput)
}

// IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// BGP Autonomous System Number associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) SrcAsns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []int { return v.SrcAsns }).(pulumi.IntArrayOutput)
}

// Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) SrcIpRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.SrcIpRanges }).(pulumi.StringArrayOutput)
}

// Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) SrcPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.SrcPorts }).(pulumi.StringArrayOutput)
}

// Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) SrcRegionCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []string { return v.SrcRegionCodes }).(pulumi.StringArrayOutput)
}

// User-defined fields. Each element names a defined field and lists the matching values for that field.
func (o SecurityPolicyRuleNetworkMatcherResponseOutput) UserDefinedFields() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherResponse) []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse {
		return v.UserDefinedFields
	}).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput)
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch struct {
	// Name of the user-defined field, as given in the definition.
	Name *string `pulumi:"name"`
	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	Values []string `pulumi:"values"`
}

// SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchInput is an input type that accepts SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs and SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchInput` via:
//
//	SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs{...}
type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchInput interface {
	pulumi.Input

	ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput
	ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutputWithContext(context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs struct {
	// Name of the user-defined field, as given in the definition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)(nil)).Elem()
}

func (i SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput {
	return i.ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput)
}

// SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayInput is an input type that accepts SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray and SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayInput` via:
//
//	SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray{ SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs{...} }
type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput
	ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutputWithContext(context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray []SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchInput

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)(nil)).Elem()
}

func (i SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return i.ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput)
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput {
	return o
}

// Name of the user-defined field, as given in the definition.
func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch {
		return vs[0].([]SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)[vs[1].(int)]
	}).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput)
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse struct {
	// Name of the user-defined field, as given in the definition.
	Name string `pulumi:"name"`
	// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
	Values []string `pulumi:"values"`
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput {
	return o
}

// Name of the user-defined field, as given in the definition.
func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Matching values of the field. Each element can be a 32-bit unsigned decimal or hexadecimal (starting with "0x") number (e.g. "64") or range (e.g. "0x400-0x7ff").
func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput() SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput) ToSecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse {
		return vs[0].([]SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput)
}

type SecurityPolicyRulePreconfiguredWafConfig struct {
	// A list of exclusions to apply during preconfigured WAF evaluation.
	Exclusions []SecurityPolicyRulePreconfiguredWafConfigExclusion `pulumi:"exclusions"`
}

// SecurityPolicyRulePreconfiguredWafConfigInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigArgs and SecurityPolicyRulePreconfiguredWafConfigOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigInput` via:
//
//	SecurityPolicyRulePreconfiguredWafConfigArgs{...}
type SecurityPolicyRulePreconfiguredWafConfigInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigOutput() SecurityPolicyRulePreconfiguredWafConfigOutput
	ToSecurityPolicyRulePreconfiguredWafConfigOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigOutput
}

type SecurityPolicyRulePreconfiguredWafConfigArgs struct {
	// A list of exclusions to apply during preconfigured WAF evaluation.
	Exclusions SecurityPolicyRulePreconfiguredWafConfigExclusionArrayInput `pulumi:"exclusions"`
}

func (SecurityPolicyRulePreconfiguredWafConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfig)(nil)).Elem()
}

func (i SecurityPolicyRulePreconfiguredWafConfigArgs) ToSecurityPolicyRulePreconfiguredWafConfigOutput() SecurityPolicyRulePreconfiguredWafConfigOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigArgs) ToSecurityPolicyRulePreconfiguredWafConfigOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigOutput)
}

func (i SecurityPolicyRulePreconfiguredWafConfigArgs) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutput() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigArgs) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigOutput).ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(ctx)
}

// SecurityPolicyRulePreconfiguredWafConfigPtrInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigArgs, SecurityPolicyRulePreconfiguredWafConfigPtr and SecurityPolicyRulePreconfiguredWafConfigPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigPtrInput` via:
//
//	        SecurityPolicyRulePreconfiguredWafConfigArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRulePreconfiguredWafConfigPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigPtrOutput() SecurityPolicyRulePreconfiguredWafConfigPtrOutput
	ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigPtrOutput
}

type securityPolicyRulePreconfiguredWafConfigPtrType SecurityPolicyRulePreconfiguredWafConfigArgs

func SecurityPolicyRulePreconfiguredWafConfigPtr(v *SecurityPolicyRulePreconfiguredWafConfigArgs) SecurityPolicyRulePreconfiguredWafConfigPtrInput {
	return (*securityPolicyRulePreconfiguredWafConfigPtrType)(v)
}

func (*securityPolicyRulePreconfiguredWafConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRulePreconfiguredWafConfig)(nil)).Elem()
}

func (i *securityPolicyRulePreconfiguredWafConfigPtrType) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutput() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRulePreconfiguredWafConfigPtrType) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigPtrOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfig)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigOutput) ToSecurityPolicyRulePreconfiguredWafConfigOutput() SecurityPolicyRulePreconfiguredWafConfigOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigOutput) ToSecurityPolicyRulePreconfiguredWafConfigOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigOutput) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutput() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o.ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRulePreconfiguredWafConfigOutput) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRulePreconfiguredWafConfig) *SecurityPolicyRulePreconfiguredWafConfig {
		return &v
	}).(SecurityPolicyRulePreconfiguredWafConfigPtrOutput)
}

// A list of exclusions to apply during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigOutput) Exclusions() SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfig) []SecurityPolicyRulePreconfiguredWafConfigExclusion {
		return v.Exclusions
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRulePreconfiguredWafConfig)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigPtrOutput) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutput() SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigPtrOutput) ToSecurityPolicyRulePreconfiguredWafConfigPtrOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigPtrOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigPtrOutput) Elem() SecurityPolicyRulePreconfiguredWafConfigOutput {
	return o.ApplyT(func(v *SecurityPolicyRulePreconfiguredWafConfig) SecurityPolicyRulePreconfiguredWafConfig {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRulePreconfiguredWafConfig
		return ret
	}).(SecurityPolicyRulePreconfiguredWafConfigOutput)
}

// A list of exclusions to apply during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigPtrOutput) Exclusions() SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRulePreconfiguredWafConfig) []SecurityPolicyRulePreconfiguredWafConfigExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusion struct {
	// A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestCookiesToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams `pulumi:"requestCookiesToExclude"`
	// A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestHeadersToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams `pulumi:"requestHeadersToExclude"`
	// A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
	RequestQueryParamsToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams `pulumi:"requestQueryParamsToExclude"`
	// A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
	RequestUrisToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams `pulumi:"requestUrisToExclude"`
	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
	TargetRuleIds []string `pulumi:"targetRuleIds"`
	// Target WAF rule set to apply the preconfigured WAF exclusion.
	TargetRuleSet *string `pulumi:"targetRuleSet"`
}

// SecurityPolicyRulePreconfiguredWafConfigExclusionInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigExclusionArgs and SecurityPolicyRulePreconfiguredWafConfigExclusionOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigExclusionInput` via:
//
//	SecurityPolicyRulePreconfiguredWafConfigExclusionArgs{...}
type SecurityPolicyRulePreconfiguredWafConfigExclusionInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionOutput
	ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionOutput
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionArgs struct {
	// A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestCookiesToExclude SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput `pulumi:"requestCookiesToExclude"`
	// A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestHeadersToExclude SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput `pulumi:"requestHeadersToExclude"`
	// A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
	RequestQueryParamsToExclude SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput `pulumi:"requestQueryParamsToExclude"`
	// A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
	RequestUrisToExclude SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput `pulumi:"requestUrisToExclude"`
	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
	TargetRuleIds pulumi.StringArrayInput `pulumi:"targetRuleIds"`
	// Target WAF rule set to apply the preconfigured WAF exclusion.
	TargetRuleSet pulumi.StringPtrInput `pulumi:"targetRuleSet"`
}

func (SecurityPolicyRulePreconfiguredWafConfigExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusion)(nil)).Elem()
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionArgs) ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionArgs) ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigExclusionOutput)
}

// SecurityPolicyRulePreconfiguredWafConfigExclusionArrayInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigExclusionArray and SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigExclusionArrayInput` via:
//
//	SecurityPolicyRulePreconfiguredWafConfigExclusionArray{ SecurityPolicyRulePreconfiguredWafConfigExclusionArgs{...} }
type SecurityPolicyRulePreconfiguredWafConfigExclusionArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput
	ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionArray []SecurityPolicyRulePreconfiguredWafConfigExclusionInput

func (SecurityPolicyRulePreconfiguredWafConfigExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusion)(nil)).Elem()
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionArray) ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionArray) ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusion)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionOutput {
	return o
}

// A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) RequestCookiesToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
		return v.RequestCookiesToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput)
}

// A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) RequestHeadersToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
		return v.RequestHeadersToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput)
}

// A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) RequestQueryParamsToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
		return v.RequestQueryParamsToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput)
}

// A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) RequestUrisToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
		return v.RequestUrisToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput)
}

// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) TargetRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) []string { return v.TargetRuleIds }).(pulumi.StringArrayOutput)
}

// Target WAF rule set to apply the preconfigured WAF exclusion.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionOutput) TargetRuleSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusion) *string { return v.TargetRuleSet }).(pulumi.StringPtrOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusion)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRulePreconfiguredWafConfigExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRulePreconfiguredWafConfigExclusion {
		return vs[0].([]SecurityPolicyRulePreconfiguredWafConfigExclusion)[vs[1].(int)]
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams struct {
	// The match operator for the field.
	Op *SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOp `pulumi:"op"`
	// The value of the field.
	Val *string `pulumi:"val"`
}

// SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs and SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsInput` via:
//
//	SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs{...}
type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput
	ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs struct {
	// The match operator for the field.
	Op SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOpPtrInput `pulumi:"op"`
	// The value of the field.
	Val pulumi.StringPtrInput `pulumi:"val"`
}

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams)(nil)).Elem()
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput)
}

// SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput is an input type that accepts SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray and SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput` via:
//
//	SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray{ SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs{...} }
type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput
	ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutputWithContext(context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsInput

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams)(nil)).Elem()
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return i.ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput {
	return o
}

// The match operator for the field.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput) Op() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOpPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams) *SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOp {
		return v.Op
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOpPtrOutput)
}

// The value of the field.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput) Val() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams) *string { return v.Val }).(pulumi.StringPtrOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams {
		return vs[0].([]SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParams)[vs[1].(int)]
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse struct {
	// The match operator for the field.
	Op string `pulumi:"op"`
	// The value of the field.
	Val string `pulumi:"val"`
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput {
	return o
}

// The match operator for the field.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse) string { return v.Op }).(pulumi.StringOutput)
}

// The value of the field.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput) Val() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse) string { return v.Val }).(pulumi.StringOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse {
		return vs[0].([]SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse)[vs[1].(int)]
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionResponse struct {
	// A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestCookiesToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse `pulumi:"requestCookiesToExclude"`
	// A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
	RequestHeadersToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse `pulumi:"requestHeadersToExclude"`
	// A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
	RequestQueryParamsToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse `pulumi:"requestQueryParamsToExclude"`
	// A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
	RequestUrisToExclude []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse `pulumi:"requestUrisToExclude"`
	// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
	TargetRuleIds []string `pulumi:"targetRuleIds"`
	// Target WAF rule set to apply the preconfigured WAF exclusion.
	TargetRuleSet string `pulumi:"targetRuleSet"`
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionResponse)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput {
	return o
}

// A list of request cookie names whose value will be excluded from inspection during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) RequestCookiesToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse {
		return v.RequestCookiesToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput)
}

// A list of request header names whose value will be excluded from inspection during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) RequestHeadersToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse {
		return v.RequestHeadersToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput)
}

// A list of request query parameter names whose value will be excluded from inspection during preconfigured WAF evaluation. Note that the parameter can be in the query string or in the POST body.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) RequestQueryParamsToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse {
		return v.RequestQueryParamsToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput)
}

// A list of request URIs from the request line to be excluded from inspection during preconfigured WAF evaluation. When specifying this field, the query or fragment part should be excluded.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) RequestUrisToExclude() SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) []SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponse {
		return v.RequestUrisToExclude
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput)
}

// A list of target rule IDs under the WAF rule set to apply the preconfigured WAF exclusion. If omitted, it refers to all the rule IDs under the WAF rule set.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) TargetRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) []string { return v.TargetRuleIds }).(pulumi.StringArrayOutput)
}

// Target WAF rule set to apply the preconfigured WAF exclusion.
func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput) TargetRuleSet() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigExclusionResponse) string { return v.TargetRuleSet }).(pulumi.StringOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRulePreconfiguredWafConfigExclusionResponse)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput() SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput) ToSecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRulePreconfiguredWafConfigExclusionResponse {
		return vs[0].([]SecurityPolicyRulePreconfiguredWafConfigExclusionResponse)[vs[1].(int)]
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput)
}

type SecurityPolicyRulePreconfiguredWafConfigResponse struct {
	// A list of exclusions to apply during preconfigured WAF evaluation.
	Exclusions []SecurityPolicyRulePreconfiguredWafConfigExclusionResponse `pulumi:"exclusions"`
}

type SecurityPolicyRulePreconfiguredWafConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRulePreconfiguredWafConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRulePreconfiguredWafConfigResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigResponseOutput() SecurityPolicyRulePreconfiguredWafConfigResponseOutput {
	return o
}

func (o SecurityPolicyRulePreconfiguredWafConfigResponseOutput) ToSecurityPolicyRulePreconfiguredWafConfigResponseOutputWithContext(ctx context.Context) SecurityPolicyRulePreconfiguredWafConfigResponseOutput {
	return o
}

// A list of exclusions to apply during preconfigured WAF evaluation.
func (o SecurityPolicyRulePreconfiguredWafConfigResponseOutput) Exclusions() SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRulePreconfiguredWafConfigResponse) []SecurityPolicyRulePreconfiguredWafConfigExclusionResponse {
		return v.Exclusions
	}).(SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput)
}

type SecurityPolicyRuleRateLimitOptions struct {
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	BanDurationSec *int `pulumi:"banDurationSec"`
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
	BanThreshold *SecurityPolicyRuleRateLimitOptionsThreshold `pulumi:"banThreshold"`
	// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
	ConformAction *string `pulumi:"conformAction"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKey *SecurityPolicyRuleRateLimitOptionsEnforceOnKey `pulumi:"enforceOnKey"`
	// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
	EnforceOnKeyConfigs []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig `pulumi:"enforceOnKeyConfigs"`
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `pulumi:"enforceOnKeyName"`
	// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedAction *string `pulumi:"exceedAction"`
	// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
	ExceedActionRpcStatus *SecurityPolicyRuleRateLimitOptionsRpcStatus `pulumi:"exceedActionRpcStatus"`
	// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedRedirectOptions *SecurityPolicyRuleRedirectOptions `pulumi:"exceedRedirectOptions"`
	// Threshold at which to begin ratelimiting.
	RateLimitThreshold *SecurityPolicyRuleRateLimitOptionsThreshold `pulumi:"rateLimitThreshold"`
}

// SecurityPolicyRuleRateLimitOptionsInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsArgs and SecurityPolicyRuleRateLimitOptionsOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsInput` via:
//
//	SecurityPolicyRuleRateLimitOptionsArgs{...}
type SecurityPolicyRuleRateLimitOptionsInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsOutput() SecurityPolicyRuleRateLimitOptionsOutput
	ToSecurityPolicyRuleRateLimitOptionsOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsOutput
}

type SecurityPolicyRuleRateLimitOptionsArgs struct {
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	BanDurationSec pulumi.IntPtrInput `pulumi:"banDurationSec"`
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
	BanThreshold SecurityPolicyRuleRateLimitOptionsThresholdPtrInput `pulumi:"banThreshold"`
	// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
	ConformAction pulumi.StringPtrInput `pulumi:"conformAction"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKey SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrInput `pulumi:"enforceOnKey"`
	// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
	EnforceOnKeyConfigs SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayInput `pulumi:"enforceOnKeyConfigs"`
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName pulumi.StringPtrInput `pulumi:"enforceOnKeyName"`
	// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedAction pulumi.StringPtrInput `pulumi:"exceedAction"`
	// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
	ExceedActionRpcStatus SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput `pulumi:"exceedActionRpcStatus"`
	// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedRedirectOptions SecurityPolicyRuleRedirectOptionsPtrInput `pulumi:"exceedRedirectOptions"`
	// Threshold at which to begin ratelimiting.
	RateLimitThreshold SecurityPolicyRuleRateLimitOptionsThresholdPtrInput `pulumi:"rateLimitThreshold"`
}

func (SecurityPolicyRuleRateLimitOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptions)(nil)).Elem()
}

func (i SecurityPolicyRuleRateLimitOptionsArgs) ToSecurityPolicyRuleRateLimitOptionsOutput() SecurityPolicyRuleRateLimitOptionsOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsArgs) ToSecurityPolicyRuleRateLimitOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsOutput)
}

func (i SecurityPolicyRuleRateLimitOptionsArgs) ToSecurityPolicyRuleRateLimitOptionsPtrOutput() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsArgs) ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsOutput).ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleRateLimitOptionsPtrInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsArgs, SecurityPolicyRuleRateLimitOptionsPtr and SecurityPolicyRuleRateLimitOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsPtrInput` via:
//
//	        SecurityPolicyRuleRateLimitOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleRateLimitOptionsPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsPtrOutput() SecurityPolicyRuleRateLimitOptionsPtrOutput
	ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsPtrOutput
}

type securityPolicyRuleRateLimitOptionsPtrType SecurityPolicyRuleRateLimitOptionsArgs

func SecurityPolicyRuleRateLimitOptionsPtr(v *SecurityPolicyRuleRateLimitOptionsArgs) SecurityPolicyRuleRateLimitOptionsPtrInput {
	return (*securityPolicyRuleRateLimitOptionsPtrType)(v)
}

func (*securityPolicyRuleRateLimitOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptions)(nil)).Elem()
}

func (i *securityPolicyRuleRateLimitOptionsPtrType) ToSecurityPolicyRuleRateLimitOptionsPtrOutput() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleRateLimitOptionsPtrType) ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsOutput) ToSecurityPolicyRuleRateLimitOptionsOutput() SecurityPolicyRuleRateLimitOptionsOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsOutput) ToSecurityPolicyRuleRateLimitOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsOutput) ToSecurityPolicyRuleRateLimitOptionsPtrOutput() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o.ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsOutput) ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptions {
		return &v
	}).(SecurityPolicyRuleRateLimitOptionsPtrOutput)
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
func (o SecurityPolicyRuleRateLimitOptionsOutput) BanDurationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *int { return v.BanDurationSec }).(pulumi.IntPtrOutput)
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
func (o SecurityPolicyRuleRateLimitOptionsOutput) BanThreshold() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsThreshold {
		return v.BanThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
func (o SecurityPolicyRuleRateLimitOptionsOutput) ConformAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *string { return v.ConformAction }).(pulumi.StringPtrOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
func (o SecurityPolicyRuleRateLimitOptionsOutput) EnforceOnKey() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsEnforceOnKey {
		return v.EnforceOnKey
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput)
}

// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
func (o SecurityPolicyRuleRateLimitOptionsOutput) EnforceOnKeyConfigs() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig {
		return v.EnforceOnKeyConfigs
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput)
}

// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
func (o SecurityPolicyRuleRateLimitOptionsOutput) EnforceOnKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *string { return v.EnforceOnKeyName }).(pulumi.StringPtrOutput)
}

// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsOutput) ExceedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *string { return v.ExceedAction }).(pulumi.StringPtrOutput)
}

// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
func (o SecurityPolicyRuleRateLimitOptionsOutput) ExceedActionRpcStatus() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsRpcStatus {
		return v.ExceedActionRpcStatus
	}).(SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput)
}

// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsOutput) ExceedRedirectOptions() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRedirectOptions {
		return v.ExceedRedirectOptions
	}).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

// Threshold at which to begin ratelimiting.
func (o SecurityPolicyRuleRateLimitOptionsOutput) RateLimitThreshold() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsThreshold {
		return v.RateLimitThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ToSecurityPolicyRuleRateLimitOptionsPtrOutput() SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ToSecurityPolicyRuleRateLimitOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) Elem() SecurityPolicyRuleRateLimitOptionsOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) SecurityPolicyRuleRateLimitOptions {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRateLimitOptions
		return ret
	}).(SecurityPolicyRuleRateLimitOptionsOutput)
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) BanDurationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *int {
		if v == nil {
			return nil
		}
		return v.BanDurationSec
	}).(pulumi.IntPtrOutput)
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) BanThreshold() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsThreshold {
		if v == nil {
			return nil
		}
		return v.BanThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ConformAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *string {
		if v == nil {
			return nil
		}
		return v.ConformAction
	}).(pulumi.StringPtrOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) EnforceOnKey() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsEnforceOnKey {
		if v == nil {
			return nil
		}
		return v.EnforceOnKey
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyPtrOutput)
}

// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) EnforceOnKeyConfigs() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig {
		if v == nil {
			return nil
		}
		return v.EnforceOnKeyConfigs
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput)
}

// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) EnforceOnKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *string {
		if v == nil {
			return nil
		}
		return v.EnforceOnKeyName
	}).(pulumi.StringPtrOutput)
}

// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ExceedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *string {
		if v == nil {
			return nil
		}
		return v.ExceedAction
	}).(pulumi.StringPtrOutput)
}

// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ExceedActionRpcStatus() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsRpcStatus {
		if v == nil {
			return nil
		}
		return v.ExceedActionRpcStatus
	}).(SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput)
}

// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) ExceedRedirectOptions() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRedirectOptions {
		if v == nil {
			return nil
		}
		return v.ExceedRedirectOptions
	}).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

// Threshold at which to begin ratelimiting.
func (o SecurityPolicyRuleRateLimitOptionsPtrOutput) RateLimitThreshold() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptions) *SecurityPolicyRuleRateLimitOptionsThreshold {
		if v == nil {
			return nil
		}
		return v.RateLimitThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig struct {
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName *string `pulumi:"enforceOnKeyName"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKeyType *SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigEnforceOnKeyType `pulumi:"enforceOnKeyType"`
}

// SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs and SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigInput` via:
//
//	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs{...}
type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput
	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs struct {
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName pulumi.StringPtrInput `pulumi:"enforceOnKeyName"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKeyType SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigEnforceOnKeyTypePtrInput `pulumi:"enforceOnKeyType"`
}

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig)(nil)).Elem()
}

func (i SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput)
}

// SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray and SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayInput` via:
//
//	SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray{ SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs{...} }
type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput
	ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigInput

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig)(nil)).Elem()
}

func (i SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput {
	return o
}

// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput) EnforceOnKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig) *string { return v.EnforceOnKeyName }).(pulumi.StringPtrOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput) EnforceOnKeyType() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigEnforceOnKeyTypePtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig) *SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigEnforceOnKeyType {
		return v.EnforceOnKeyType
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigEnforceOnKeyTypePtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig {
		return vs[0].([]SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfig)[vs[1].(int)]
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse struct {
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName string `pulumi:"enforceOnKeyName"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKeyType string `pulumi:"enforceOnKeyType"`
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput {
	return o
}

// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput) EnforceOnKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse) string { return v.EnforceOnKeyName }).(pulumi.StringOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKeyConfigs" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput) EnforceOnKeyType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse) string { return v.EnforceOnKeyType }).(pulumi.StringOutput)
}

type SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput) ToSecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse {
		return vs[0].([]SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput)
}

type SecurityPolicyRuleRateLimitOptionsResponse struct {
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
	BanDurationSec int `pulumi:"banDurationSec"`
	// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
	BanThreshold SecurityPolicyRuleRateLimitOptionsThresholdResponse `pulumi:"banThreshold"`
	// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
	ConformAction string `pulumi:"conformAction"`
	// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
	EnforceOnKey string `pulumi:"enforceOnKey"`
	// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
	EnforceOnKeyConfigs []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse `pulumi:"enforceOnKeyConfigs"`
	// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
	EnforceOnKeyName string `pulumi:"enforceOnKeyName"`
	// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedAction string `pulumi:"exceedAction"`
	// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
	ExceedActionRpcStatus SecurityPolicyRuleRateLimitOptionsRpcStatusResponse `pulumi:"exceedActionRpcStatus"`
	// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	ExceedRedirectOptions SecurityPolicyRuleRedirectOptionsResponse `pulumi:"exceedRedirectOptions"`
	// Threshold at which to begin ratelimiting.
	RateLimitThreshold SecurityPolicyRuleRateLimitOptionsThresholdResponse `pulumi:"rateLimitThreshold"`
}

type SecurityPolicyRuleRateLimitOptionsResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ToSecurityPolicyRuleRateLimitOptionsResponseOutput() SecurityPolicyRuleRateLimitOptionsResponseOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ToSecurityPolicyRuleRateLimitOptionsResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsResponseOutput {
	return o
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) BanDurationSec() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) int { return v.BanDurationSec }).(pulumi.IntOutput)
}

// Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) BanThreshold() SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) SecurityPolicyRuleRateLimitOptionsThresholdResponse {
		return v.BanThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput)
}

// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ConformAction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) string { return v.ConformAction }).(pulumi.StringOutput)
}

// Determines the key to enforce the rate_limit_threshold on. Possible values are: - ALL: A single rate limit threshold is applied to all the requests matching this rule. This is the default value if "enforceOnKey" is not configured. - IP: The source IP address of the request is the key. Each IP has this limit enforced separately. - HTTP_HEADER: The value of the HTTP header whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the header value. If no such header is present in the request, the key type defaults to ALL. - XFF_IP: The first IP address (i.e. the originating client IP address) specified in the list of IPs under X-Forwarded-For HTTP header. If no such header is present or the value is not a valid IP, the key defaults to the source IP address of the request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose name is configured under "enforceOnKeyName". The key value is truncated to the first 128 bytes of the cookie value. If no such cookie is present in the request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP request. The key value is truncated to the first 128 bytes. - SNI: Server name indication in the TLS session of the HTTPS request. The key value is truncated to the first 128 bytes. The key type defaults to ALL on a HTTP session. - REGION_CODE: The country/region from which the request originates.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) EnforceOnKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) string { return v.EnforceOnKey }).(pulumi.StringOutput)
}

// If specified, any combination of values of enforce_on_key_type/enforce_on_key_name is treated as the key on which ratelimit threshold/action is enforced. You can specify up to 3 enforce_on_key_configs. If enforce_on_key_configs is specified, enforce_on_key must not be specified.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) EnforceOnKeyConfigs() SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) []SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponse {
		return v.EnforceOnKeyConfigs
	}).(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput)
}

// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) EnforceOnKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) string { return v.EnforceOnKeyName }).(pulumi.StringOutput)
}

// Action to take for requests that are above the configured rate limit threshold, to either deny with a specified HTTP response code, or redirect to a different endpoint. Valid options are `deny(STATUS)`, where valid values for `STATUS` are 403, 404, 429, and 502, and `redirect`, where the redirect parameters come from `exceedRedirectOptions` below. The `redirect` action is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ExceedAction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) string { return v.ExceedAction }).(pulumi.StringOutput)
}

// Specified gRPC response status for proxyless gRPC requests that are above the configured rate limit threshold
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ExceedActionRpcStatus() SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) SecurityPolicyRuleRateLimitOptionsRpcStatusResponse {
		return v.ExceedActionRpcStatus
	}).(SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput)
}

// Parameters defining the redirect action that is used as the exceed action. Cannot be specified if the exceed action is not redirect. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) ExceedRedirectOptions() SecurityPolicyRuleRedirectOptionsResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) SecurityPolicyRuleRedirectOptionsResponse {
		return v.ExceedRedirectOptions
	}).(SecurityPolicyRuleRedirectOptionsResponseOutput)
}

// Threshold at which to begin ratelimiting.
func (o SecurityPolicyRuleRateLimitOptionsResponseOutput) RateLimitThreshold() SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsResponse) SecurityPolicyRuleRateLimitOptionsThresholdResponse {
		return v.RateLimitThreshold
	}).(SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput)
}

// Simplified google.rpc.Status type (omitting details).
type SecurityPolicyRuleRateLimitOptionsRpcStatus struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code *int `pulumi:"code"`
	// A developer-facing error message, which should be in English.
	Message *string `pulumi:"message"`
}

// SecurityPolicyRuleRateLimitOptionsRpcStatusInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsRpcStatusArgs and SecurityPolicyRuleRateLimitOptionsRpcStatusOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsRpcStatusInput` via:
//
//	SecurityPolicyRuleRateLimitOptionsRpcStatusArgs{...}
type SecurityPolicyRuleRateLimitOptionsRpcStatusInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusOutput
	ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusOutput
}

// Simplified google.rpc.Status type (omitting details).
type SecurityPolicyRuleRateLimitOptionsRpcStatusArgs struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// A developer-facing error message, which should be in English.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsRpcStatus)(nil)).Elem()
}

func (i SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsRpcStatusOutput)
}

func (i SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsRpcStatusOutput).ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsRpcStatusArgs, SecurityPolicyRuleRateLimitOptionsRpcStatusPtr and SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput` via:
//
//	        SecurityPolicyRuleRateLimitOptionsRpcStatusArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput
	ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput
}

type securityPolicyRuleRateLimitOptionsRpcStatusPtrType SecurityPolicyRuleRateLimitOptionsRpcStatusArgs

func SecurityPolicyRuleRateLimitOptionsRpcStatusPtr(v *SecurityPolicyRuleRateLimitOptionsRpcStatusArgs) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput {
	return (*securityPolicyRuleRateLimitOptionsRpcStatusPtrType)(v)
}

func (*securityPolicyRuleRateLimitOptionsRpcStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsRpcStatus)(nil)).Elem()
}

func (i *securityPolicyRuleRateLimitOptionsRpcStatusPtrType) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleRateLimitOptionsRpcStatusPtrType) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput)
}

// Simplified google.rpc.Status type (omitting details).
type SecurityPolicyRuleRateLimitOptionsRpcStatusOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsRpcStatus)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o.ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRateLimitOptionsRpcStatus) *SecurityPolicyRuleRateLimitOptionsRpcStatus {
		return &v
	}).(SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsRpcStatus) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// A developer-facing error message, which should be in English.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsRpcStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsRpcStatus)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) Elem() SecurityPolicyRuleRateLimitOptionsRpcStatusOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsRpcStatus) SecurityPolicyRuleRateLimitOptionsRpcStatus {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRateLimitOptionsRpcStatus
		return ret
	}).(SecurityPolicyRuleRateLimitOptionsRpcStatusOutput)
}

// The status code, which should be an enum value of google.rpc.Code.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsRpcStatus) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// A developer-facing error message, which should be in English.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsRpcStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Simplified google.rpc.Status type (omitting details).
type SecurityPolicyRuleRateLimitOptionsRpcStatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A developer-facing error message, which should be in English.
	Message string `pulumi:"message"`
}

// Simplified google.rpc.Status type (omitting details).
type SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsRpcStatusResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput() SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput) ToSecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsRpcStatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A developer-facing error message, which should be in English.
func (o SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsRpcStatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

type SecurityPolicyRuleRateLimitOptionsThreshold struct {
	// Number of HTTP(S) requests for calculating the threshold.
	Count *int `pulumi:"count"`
	// Interval over which the threshold is computed.
	IntervalSec *int `pulumi:"intervalSec"`
}

// SecurityPolicyRuleRateLimitOptionsThresholdInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsThresholdArgs and SecurityPolicyRuleRateLimitOptionsThresholdOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsThresholdInput` via:
//
//	SecurityPolicyRuleRateLimitOptionsThresholdArgs{...}
type SecurityPolicyRuleRateLimitOptionsThresholdInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsThresholdOutput() SecurityPolicyRuleRateLimitOptionsThresholdOutput
	ToSecurityPolicyRuleRateLimitOptionsThresholdOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsThresholdOutput
}

type SecurityPolicyRuleRateLimitOptionsThresholdArgs struct {
	// Number of HTTP(S) requests for calculating the threshold.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval over which the threshold is computed.
	IntervalSec pulumi.IntPtrInput `pulumi:"intervalSec"`
}

func (SecurityPolicyRuleRateLimitOptionsThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsThreshold)(nil)).Elem()
}

func (i SecurityPolicyRuleRateLimitOptionsThresholdArgs) ToSecurityPolicyRuleRateLimitOptionsThresholdOutput() SecurityPolicyRuleRateLimitOptionsThresholdOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsThresholdOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsThresholdArgs) ToSecurityPolicyRuleRateLimitOptionsThresholdOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsThresholdOutput)
}

func (i SecurityPolicyRuleRateLimitOptionsThresholdArgs) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutput() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRateLimitOptionsThresholdArgs) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsThresholdOutput).ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleRateLimitOptionsThresholdPtrInput is an input type that accepts SecurityPolicyRuleRateLimitOptionsThresholdArgs, SecurityPolicyRuleRateLimitOptionsThresholdPtr and SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRateLimitOptionsThresholdPtrInput` via:
//
//	        SecurityPolicyRuleRateLimitOptionsThresholdArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleRateLimitOptionsThresholdPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutput() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput
	ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(context.Context) SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput
}

type securityPolicyRuleRateLimitOptionsThresholdPtrType SecurityPolicyRuleRateLimitOptionsThresholdArgs

func SecurityPolicyRuleRateLimitOptionsThresholdPtr(v *SecurityPolicyRuleRateLimitOptionsThresholdArgs) SecurityPolicyRuleRateLimitOptionsThresholdPtrInput {
	return (*securityPolicyRuleRateLimitOptionsThresholdPtrType)(v)
}

func (*securityPolicyRuleRateLimitOptionsThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsThreshold)(nil)).Elem()
}

func (i *securityPolicyRuleRateLimitOptionsThresholdPtrType) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutput() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return i.ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleRateLimitOptionsThresholdPtrType) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsThresholdOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsThreshold)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdOutput() SecurityPolicyRuleRateLimitOptionsThresholdOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutput() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRateLimitOptionsThreshold) *SecurityPolicyRuleRateLimitOptionsThreshold {
		return &v
	}).(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput)
}

// Number of HTTP(S) requests for calculating the threshold.
func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsThreshold) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval over which the threshold is computed.
func (o SecurityPolicyRuleRateLimitOptionsThresholdOutput) IntervalSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsThreshold) *int { return v.IntervalSec }).(pulumi.IntPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRateLimitOptionsThreshold)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutput() SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) Elem() SecurityPolicyRuleRateLimitOptionsThresholdOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsThreshold) SecurityPolicyRuleRateLimitOptionsThreshold {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRateLimitOptionsThreshold
		return ret
	}).(SecurityPolicyRuleRateLimitOptionsThresholdOutput)
}

// Number of HTTP(S) requests for calculating the threshold.
func (o SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsThreshold) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval over which the threshold is computed.
func (o SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput) IntervalSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRateLimitOptionsThreshold) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSec
	}).(pulumi.IntPtrOutput)
}

type SecurityPolicyRuleRateLimitOptionsThresholdResponse struct {
	// Number of HTTP(S) requests for calculating the threshold.
	Count int `pulumi:"count"`
	// Interval over which the threshold is computed.
	IntervalSec int `pulumi:"intervalSec"`
}

type SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsThresholdResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdResponseOutput() SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput {
	return o
}

func (o SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput) ToSecurityPolicyRuleRateLimitOptionsThresholdResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput {
	return o
}

// Number of HTTP(S) requests for calculating the threshold.
func (o SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsThresholdResponse) int { return v.Count }).(pulumi.IntOutput)
}

// Interval over which the threshold is computed.
func (o SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput) IntervalSec() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRateLimitOptionsThresholdResponse) int { return v.IntervalSec }).(pulumi.IntOutput)
}

type SecurityPolicyRuleRedirectOptions struct {
	// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
	Target *string `pulumi:"target"`
	// Type of the redirect action.
	Type *SecurityPolicyRuleRedirectOptionsType `pulumi:"type"`
}

// SecurityPolicyRuleRedirectOptionsInput is an input type that accepts SecurityPolicyRuleRedirectOptionsArgs and SecurityPolicyRuleRedirectOptionsOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRedirectOptionsInput` via:
//
//	SecurityPolicyRuleRedirectOptionsArgs{...}
type SecurityPolicyRuleRedirectOptionsInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRedirectOptionsOutput() SecurityPolicyRuleRedirectOptionsOutput
	ToSecurityPolicyRuleRedirectOptionsOutputWithContext(context.Context) SecurityPolicyRuleRedirectOptionsOutput
}

type SecurityPolicyRuleRedirectOptionsArgs struct {
	// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Type of the redirect action.
	Type SecurityPolicyRuleRedirectOptionsTypePtrInput `pulumi:"type"`
}

func (SecurityPolicyRuleRedirectOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRedirectOptions)(nil)).Elem()
}

func (i SecurityPolicyRuleRedirectOptionsArgs) ToSecurityPolicyRuleRedirectOptionsOutput() SecurityPolicyRuleRedirectOptionsOutput {
	return i.ToSecurityPolicyRuleRedirectOptionsOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRedirectOptionsArgs) ToSecurityPolicyRuleRedirectOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRedirectOptionsOutput)
}

func (i SecurityPolicyRuleRedirectOptionsArgs) ToSecurityPolicyRuleRedirectOptionsPtrOutput() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return i.ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityPolicyRuleRedirectOptionsArgs) ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRedirectOptionsOutput).ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(ctx)
}

// SecurityPolicyRuleRedirectOptionsPtrInput is an input type that accepts SecurityPolicyRuleRedirectOptionsArgs, SecurityPolicyRuleRedirectOptionsPtr and SecurityPolicyRuleRedirectOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityPolicyRuleRedirectOptionsPtrInput` via:
//
//	        SecurityPolicyRuleRedirectOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityPolicyRuleRedirectOptionsPtrInput interface {
	pulumi.Input

	ToSecurityPolicyRuleRedirectOptionsPtrOutput() SecurityPolicyRuleRedirectOptionsPtrOutput
	ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(context.Context) SecurityPolicyRuleRedirectOptionsPtrOutput
}

type securityPolicyRuleRedirectOptionsPtrType SecurityPolicyRuleRedirectOptionsArgs

func SecurityPolicyRuleRedirectOptionsPtr(v *SecurityPolicyRuleRedirectOptionsArgs) SecurityPolicyRuleRedirectOptionsPtrInput {
	return (*securityPolicyRuleRedirectOptionsPtrType)(v)
}

func (*securityPolicyRuleRedirectOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRedirectOptions)(nil)).Elem()
}

func (i *securityPolicyRuleRedirectOptionsPtrType) ToSecurityPolicyRuleRedirectOptionsPtrOutput() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return i.ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(context.Background())
}

func (i *securityPolicyRuleRedirectOptionsPtrType) ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

type SecurityPolicyRuleRedirectOptionsOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRedirectOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRedirectOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleRedirectOptionsOutput) ToSecurityPolicyRuleRedirectOptionsOutput() SecurityPolicyRuleRedirectOptionsOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsOutput) ToSecurityPolicyRuleRedirectOptionsOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsOutput) ToSecurityPolicyRuleRedirectOptionsPtrOutput() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityPolicyRuleRedirectOptionsOutput) ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityPolicyRuleRedirectOptions) *SecurityPolicyRuleRedirectOptions {
		return &v
	}).(SecurityPolicyRuleRedirectOptionsPtrOutput)
}

// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
func (o SecurityPolicyRuleRedirectOptionsOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRedirectOptions) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Type of the redirect action.
func (o SecurityPolicyRuleRedirectOptionsOutput) Type() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRedirectOptions) *SecurityPolicyRuleRedirectOptionsType { return v.Type }).(SecurityPolicyRuleRedirectOptionsTypePtrOutput)
}

type SecurityPolicyRuleRedirectOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRedirectOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityPolicyRuleRedirectOptions)(nil)).Elem()
}

func (o SecurityPolicyRuleRedirectOptionsPtrOutput) ToSecurityPolicyRuleRedirectOptionsPtrOutput() SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsPtrOutput) ToSecurityPolicyRuleRedirectOptionsPtrOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsPtrOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsPtrOutput) Elem() SecurityPolicyRuleRedirectOptionsOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRedirectOptions) SecurityPolicyRuleRedirectOptions {
		if v != nil {
			return *v
		}
		var ret SecurityPolicyRuleRedirectOptions
		return ret
	}).(SecurityPolicyRuleRedirectOptionsOutput)
}

// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
func (o SecurityPolicyRuleRedirectOptionsPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRedirectOptions) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// Type of the redirect action.
func (o SecurityPolicyRuleRedirectOptionsPtrOutput) Type() SecurityPolicyRuleRedirectOptionsTypePtrOutput {
	return o.ApplyT(func(v *SecurityPolicyRuleRedirectOptions) *SecurityPolicyRuleRedirectOptionsType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(SecurityPolicyRuleRedirectOptionsTypePtrOutput)
}

type SecurityPolicyRuleRedirectOptionsResponse struct {
	// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
	Target string `pulumi:"target"`
	// Type of the redirect action.
	Type string `pulumi:"type"`
}

type SecurityPolicyRuleRedirectOptionsResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleRedirectOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleRedirectOptionsResponseOutput) ToSecurityPolicyRuleRedirectOptionsResponseOutput() SecurityPolicyRuleRedirectOptionsResponseOutput {
	return o
}

func (o SecurityPolicyRuleRedirectOptionsResponseOutput) ToSecurityPolicyRuleRedirectOptionsResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleRedirectOptionsResponseOutput {
	return o
}

// Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
func (o SecurityPolicyRuleRedirectOptionsResponseOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRedirectOptionsResponse) string { return v.Target }).(pulumi.StringOutput)
}

// Type of the redirect action.
func (o SecurityPolicyRuleRedirectOptionsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleRedirectOptionsResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
type SecurityPolicyRuleResponse struct {
	// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
	Action string `pulumi:"action"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description string `pulumi:"description"`
	// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
	Direction string `pulumi:"direction"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
	EnableLogging bool `pulumi:"enableLogging"`
	// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	HeaderAction SecurityPolicyRuleHttpHeaderActionResponse `pulumi:"headerAction"`
	// [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
	Kind string `pulumi:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
	Match SecurityPolicyRuleMatcherResponse `pulumi:"match"`
	// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced. The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields'). Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds. Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all. For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet. Example: networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff" The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive.
	NetworkMatch SecurityPolicyRuleNetworkMatcherResponse `pulumi:"networkMatch"`
	// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
	PreconfiguredWafConfig SecurityPolicyRulePreconfiguredWafConfigResponse `pulumi:"preconfiguredWafConfig"`
	// If set to true, the specified action is not enforced.
	Preview bool `pulumi:"preview"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
	Priority int `pulumi:"priority"`
	// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
	RateLimitOptions SecurityPolicyRuleRateLimitOptionsResponse `pulumi:"rateLimitOptions"`
	// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
	RedirectOptions SecurityPolicyRuleRedirectOptionsResponse `pulumi:"redirectOptions"`
	// This must be specified for redirect actions. Cannot be specified for any other actions.
	RedirectTarget string `pulumi:"redirectTarget"`
	// The minimum managed protection tier required for this rule. [Deprecated] Use requiredManagedProtectionTiers instead.
	//
	// Deprecated: [Output Only] The minimum managed protection tier required for this rule. [Deprecated] Use requiredManagedProtectionTiers instead.
	RuleManagedProtectionTier string `pulumi:"ruleManagedProtectionTier"`
	// Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
	RuleNumber string `pulumi:"ruleNumber"`
	// Calculation of the complexity of a single firewall security policy rule.
	RuleTupleCount int `pulumi:"ruleTupleCount"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
	TargetResources []string `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts []string `pulumi:"targetServiceAccounts"`
}

// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
type SecurityPolicyRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyRuleResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleResponseOutput) ToSecurityPolicyRuleResponseOutput() SecurityPolicyRuleResponseOutput {
	return o
}

func (o SecurityPolicyRuleResponseOutput) ToSecurityPolicyRuleResponseOutputWithContext(ctx context.Context) SecurityPolicyRuleResponseOutput {
	return o
}

// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this.
func (o SecurityPolicyRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o SecurityPolicyRuleResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleResponseOutput) EnableLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) bool { return v.EnableLogging }).(pulumi.BoolOutput)
}

// Optional, additional actions that are performed on headers. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleResponseOutput) HeaderAction() SecurityPolicyRuleHttpHeaderActionResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRuleHttpHeaderActionResponse { return v.HeaderAction }).(SecurityPolicyRuleHttpHeaderActionResponseOutput)
}

// [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
func (o SecurityPolicyRuleResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
func (o SecurityPolicyRuleResponseOutput) Match() SecurityPolicyRuleMatcherResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRuleMatcherResponse { return v.Match }).(SecurityPolicyRuleMatcherResponseOutput)
}

// A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding 'action' is enforced. The match criteria for a rule consists of built-in match fields (like 'srcIpRanges') and potentially multiple user-defined match fields ('userDefinedFields'). Field values may be extracted directly from the packet or derived from it (e.g. 'srcRegionCodes'). Some fields may not be present in every packet (e.g. 'srcPorts'). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds. Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it's not required to be present. For strings specifying '*' is also equivalent to match all. For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet. Example: networkMatch: srcIpRanges: - "192.0.2.0/24" - "198.51.100.0/24" userDefinedFields: - name: "ipv4_fragment_offset" values: - "1-0x1fff" The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named "ipv4_fragment_offset" with a value between 1 and 0x1fff inclusive.
func (o SecurityPolicyRuleResponseOutput) NetworkMatch() SecurityPolicyRuleNetworkMatcherResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRuleNetworkMatcherResponse { return v.NetworkMatch }).(SecurityPolicyRuleNetworkMatcherResponseOutput)
}

// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
func (o SecurityPolicyRuleResponseOutput) PreconfiguredWafConfig() SecurityPolicyRulePreconfiguredWafConfigResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRulePreconfiguredWafConfigResponse {
		return v.PreconfiguredWafConfig
	}).(SecurityPolicyRulePreconfiguredWafConfigResponseOutput)
}

// If set to true, the specified action is not enforced.
func (o SecurityPolicyRuleResponseOutput) Preview() pulumi.BoolOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) bool { return v.Preview }).(pulumi.BoolOutput)
}

// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
func (o SecurityPolicyRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
func (o SecurityPolicyRuleResponseOutput) RateLimitOptions() SecurityPolicyRuleRateLimitOptionsResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRuleRateLimitOptionsResponse {
		return v.RateLimitOptions
	}).(SecurityPolicyRuleRateLimitOptionsResponseOutput)
}

// Parameters defining the redirect action. Cannot be specified for any other actions. This field is only supported in Global Security Policies of type CLOUD_ARMOR.
func (o SecurityPolicyRuleResponseOutput) RedirectOptions() SecurityPolicyRuleRedirectOptionsResponseOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) SecurityPolicyRuleRedirectOptionsResponse { return v.RedirectOptions }).(SecurityPolicyRuleRedirectOptionsResponseOutput)
}

// This must be specified for redirect actions. Cannot be specified for any other actions.
func (o SecurityPolicyRuleResponseOutput) RedirectTarget() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.RedirectTarget }).(pulumi.StringOutput)
}

// The minimum managed protection tier required for this rule. [Deprecated] Use requiredManagedProtectionTiers instead.
//
// Deprecated: [Output Only] The minimum managed protection tier required for this rule. [Deprecated] Use requiredManagedProtectionTiers instead.
func (o SecurityPolicyRuleResponseOutput) RuleManagedProtectionTier() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.RuleManagedProtectionTier }).(pulumi.StringOutput)
}

// Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
func (o SecurityPolicyRuleResponseOutput) RuleNumber() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) string { return v.RuleNumber }).(pulumi.StringOutput)
}

// Calculation of the complexity of a single firewall security policy rule.
func (o SecurityPolicyRuleResponseOutput) RuleTupleCount() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) int { return v.RuleTupleCount }).(pulumi.IntOutput)
}

// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
func (o SecurityPolicyRuleResponseOutput) TargetResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) []string { return v.TargetResources }).(pulumi.StringArrayOutput)
}

// A list of service accounts indicating the sets of instances that are applied with this rule.
func (o SecurityPolicyRuleResponseOutput) TargetServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityPolicyRuleResponse) []string { return v.TargetServiceAccounts }).(pulumi.StringArrayOutput)
}

type SecurityPolicyRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyRuleResponse)(nil)).Elem()
}

func (o SecurityPolicyRuleResponseArrayOutput) ToSecurityPolicyRuleResponseArrayOutput() SecurityPolicyRuleResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleResponseArrayOutput) ToSecurityPolicyRuleResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyRuleResponseArrayOutput {
	return o
}

func (o SecurityPolicyRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyRuleResponse {
		return vs[0].([]SecurityPolicyRuleResponse)[vs[1].(int)]
	}).(SecurityPolicyRuleResponseOutput)
}

type SecurityPolicyUserDefinedField struct {
	// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
	Base *SecurityPolicyUserDefinedFieldBase `pulumi:"base"`
	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	Mask *string `pulumi:"mask"`
	// The name of this field. Must be unique within the policy.
	Name *string `pulumi:"name"`
	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	Offset *int `pulumi:"offset"`
	// Size of the field in bytes. Valid values: 1-4.
	Size *int `pulumi:"size"`
}

// SecurityPolicyUserDefinedFieldInput is an input type that accepts SecurityPolicyUserDefinedFieldArgs and SecurityPolicyUserDefinedFieldOutput values.
// You can construct a concrete instance of `SecurityPolicyUserDefinedFieldInput` via:
//
//	SecurityPolicyUserDefinedFieldArgs{...}
type SecurityPolicyUserDefinedFieldInput interface {
	pulumi.Input

	ToSecurityPolicyUserDefinedFieldOutput() SecurityPolicyUserDefinedFieldOutput
	ToSecurityPolicyUserDefinedFieldOutputWithContext(context.Context) SecurityPolicyUserDefinedFieldOutput
}

type SecurityPolicyUserDefinedFieldArgs struct {
	// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
	Base SecurityPolicyUserDefinedFieldBasePtrInput `pulumi:"base"`
	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	Mask pulumi.StringPtrInput `pulumi:"mask"`
	// The name of this field. Must be unique within the policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// Size of the field in bytes. Valid values: 1-4.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (SecurityPolicyUserDefinedFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyUserDefinedField)(nil)).Elem()
}

func (i SecurityPolicyUserDefinedFieldArgs) ToSecurityPolicyUserDefinedFieldOutput() SecurityPolicyUserDefinedFieldOutput {
	return i.ToSecurityPolicyUserDefinedFieldOutputWithContext(context.Background())
}

func (i SecurityPolicyUserDefinedFieldArgs) ToSecurityPolicyUserDefinedFieldOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyUserDefinedFieldOutput)
}

// SecurityPolicyUserDefinedFieldArrayInput is an input type that accepts SecurityPolicyUserDefinedFieldArray and SecurityPolicyUserDefinedFieldArrayOutput values.
// You can construct a concrete instance of `SecurityPolicyUserDefinedFieldArrayInput` via:
//
//	SecurityPolicyUserDefinedFieldArray{ SecurityPolicyUserDefinedFieldArgs{...} }
type SecurityPolicyUserDefinedFieldArrayInput interface {
	pulumi.Input

	ToSecurityPolicyUserDefinedFieldArrayOutput() SecurityPolicyUserDefinedFieldArrayOutput
	ToSecurityPolicyUserDefinedFieldArrayOutputWithContext(context.Context) SecurityPolicyUserDefinedFieldArrayOutput
}

type SecurityPolicyUserDefinedFieldArray []SecurityPolicyUserDefinedFieldInput

func (SecurityPolicyUserDefinedFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyUserDefinedField)(nil)).Elem()
}

func (i SecurityPolicyUserDefinedFieldArray) ToSecurityPolicyUserDefinedFieldArrayOutput() SecurityPolicyUserDefinedFieldArrayOutput {
	return i.ToSecurityPolicyUserDefinedFieldArrayOutputWithContext(context.Background())
}

func (i SecurityPolicyUserDefinedFieldArray) ToSecurityPolicyUserDefinedFieldArrayOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityPolicyUserDefinedFieldArrayOutput)
}

type SecurityPolicyUserDefinedFieldOutput struct{ *pulumi.OutputState }

func (SecurityPolicyUserDefinedFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyUserDefinedField)(nil)).Elem()
}

func (o SecurityPolicyUserDefinedFieldOutput) ToSecurityPolicyUserDefinedFieldOutput() SecurityPolicyUserDefinedFieldOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldOutput) ToSecurityPolicyUserDefinedFieldOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldOutput {
	return o
}

// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
func (o SecurityPolicyUserDefinedFieldOutput) Base() SecurityPolicyUserDefinedFieldBasePtrOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedField) *SecurityPolicyUserDefinedFieldBase { return v.Base }).(SecurityPolicyUserDefinedFieldBasePtrOutput)
}

// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
func (o SecurityPolicyUserDefinedFieldOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedField) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

// The name of this field. Must be unique within the policy.
func (o SecurityPolicyUserDefinedFieldOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedField) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Offset of the first byte of the field (in network byte order) relative to 'base'.
func (o SecurityPolicyUserDefinedFieldOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedField) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// Size of the field in bytes. Valid values: 1-4.
func (o SecurityPolicyUserDefinedFieldOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedField) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type SecurityPolicyUserDefinedFieldArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyUserDefinedFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyUserDefinedField)(nil)).Elem()
}

func (o SecurityPolicyUserDefinedFieldArrayOutput) ToSecurityPolicyUserDefinedFieldArrayOutput() SecurityPolicyUserDefinedFieldArrayOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldArrayOutput) ToSecurityPolicyUserDefinedFieldArrayOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldArrayOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldArrayOutput) Index(i pulumi.IntInput) SecurityPolicyUserDefinedFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyUserDefinedField {
		return vs[0].([]SecurityPolicyUserDefinedField)[vs[1].(int)]
	}).(SecurityPolicyUserDefinedFieldOutput)
}

type SecurityPolicyUserDefinedFieldResponse struct {
	// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
	Base string `pulumi:"base"`
	// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
	Mask string `pulumi:"mask"`
	// The name of this field. Must be unique within the policy.
	Name string `pulumi:"name"`
	// Offset of the first byte of the field (in network byte order) relative to 'base'.
	Offset int `pulumi:"offset"`
	// Size of the field in bytes. Valid values: 1-4.
	Size int `pulumi:"size"`
}

type SecurityPolicyUserDefinedFieldResponseOutput struct{ *pulumi.OutputState }

func (SecurityPolicyUserDefinedFieldResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityPolicyUserDefinedFieldResponse)(nil)).Elem()
}

func (o SecurityPolicyUserDefinedFieldResponseOutput) ToSecurityPolicyUserDefinedFieldResponseOutput() SecurityPolicyUserDefinedFieldResponseOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldResponseOutput) ToSecurityPolicyUserDefinedFieldResponseOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldResponseOutput {
	return o
}

// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
func (o SecurityPolicyUserDefinedFieldResponseOutput) Base() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedFieldResponse) string { return v.Base }).(pulumi.StringOutput)
}

// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
func (o SecurityPolicyUserDefinedFieldResponseOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedFieldResponse) string { return v.Mask }).(pulumi.StringOutput)
}

// The name of this field. Must be unique within the policy.
func (o SecurityPolicyUserDefinedFieldResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedFieldResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Offset of the first byte of the field (in network byte order) relative to 'base'.
func (o SecurityPolicyUserDefinedFieldResponseOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedFieldResponse) int { return v.Offset }).(pulumi.IntOutput)
}

// Size of the field in bytes. Valid values: 1-4.
func (o SecurityPolicyUserDefinedFieldResponseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityPolicyUserDefinedFieldResponse) int { return v.Size }).(pulumi.IntOutput)
}

type SecurityPolicyUserDefinedFieldResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityPolicyUserDefinedFieldResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityPolicyUserDefinedFieldResponse)(nil)).Elem()
}

func (o SecurityPolicyUserDefinedFieldResponseArrayOutput) ToSecurityPolicyUserDefinedFieldResponseArrayOutput() SecurityPolicyUserDefinedFieldResponseArrayOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldResponseArrayOutput) ToSecurityPolicyUserDefinedFieldResponseArrayOutputWithContext(ctx context.Context) SecurityPolicyUserDefinedFieldResponseArrayOutput {
	return o
}

func (o SecurityPolicyUserDefinedFieldResponseArrayOutput) Index(i pulumi.IntInput) SecurityPolicyUserDefinedFieldResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityPolicyUserDefinedFieldResponse {
		return vs[0].([]SecurityPolicyUserDefinedFieldResponse)[vs[1].(int)]
	}).(SecurityPolicyUserDefinedFieldResponseOutput)
}

// The authentication and authorization settings for a BackendService.
type SecuritySettings struct {
	// [Deprecated] Use clientTlsPolicy instead.
	//
	// Deprecated: [Deprecated] Use clientTlsPolicy instead.
	Authentication *string `pulumi:"authentication"`
	// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	//
	// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	AuthenticationPolicy *AuthenticationPolicy `pulumi:"authenticationPolicy"`
	// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	//
	// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	AuthorizationConfig *AuthorizationConfig `pulumi:"authorizationConfig"`
	// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
	AwsV4Authentication *AWSV4Signature `pulumi:"awsV4Authentication"`
	// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
	ClientTlsPolicy *string `pulumi:"clientTlsPolicy"`
	// [Deprecated] TLS Settings for the backend service.
	//
	// Deprecated: [Deprecated] TLS Settings for the backend service.
	ClientTlsSettings *ClientTlsSettings `pulumi:"clientTlsSettings"`
	// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// SecuritySettingsInput is an input type that accepts SecuritySettingsArgs and SecuritySettingsOutput values.
// You can construct a concrete instance of `SecuritySettingsInput` via:
//
//	SecuritySettingsArgs{...}
type SecuritySettingsInput interface {
	pulumi.Input

	ToSecuritySettingsOutput() SecuritySettingsOutput
	ToSecuritySettingsOutputWithContext(context.Context) SecuritySettingsOutput
}

// The authentication and authorization settings for a BackendService.
type SecuritySettingsArgs struct {
	// [Deprecated] Use clientTlsPolicy instead.
	//
	// Deprecated: [Deprecated] Use clientTlsPolicy instead.
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	//
	// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	AuthenticationPolicy AuthenticationPolicyPtrInput `pulumi:"authenticationPolicy"`
	// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	//
	// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	AuthorizationConfig AuthorizationConfigPtrInput `pulumi:"authorizationConfig"`
	// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
	AwsV4Authentication AWSV4SignaturePtrInput `pulumi:"awsV4Authentication"`
	// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
	ClientTlsPolicy pulumi.StringPtrInput `pulumi:"clientTlsPolicy"`
	// [Deprecated] TLS Settings for the backend service.
	//
	// Deprecated: [Deprecated] TLS Settings for the backend service.
	ClientTlsSettings ClientTlsSettingsPtrInput `pulumi:"clientTlsSettings"`
	// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
}

func (SecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return i.ToSecuritySettingsOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput)
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i SecuritySettingsArgs) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsOutput).ToSecuritySettingsPtrOutputWithContext(ctx)
}

// SecuritySettingsPtrInput is an input type that accepts SecuritySettingsArgs, SecuritySettingsPtr and SecuritySettingsPtrOutput values.
// You can construct a concrete instance of `SecuritySettingsPtrInput` via:
//
//	        SecuritySettingsArgs{...}
//
//	or:
//
//	        nil
type SecuritySettingsPtrInput interface {
	pulumi.Input

	ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput
	ToSecuritySettingsPtrOutputWithContext(context.Context) SecuritySettingsPtrOutput
}

type securitySettingsPtrType SecuritySettingsArgs

func SecuritySettingsPtr(v *SecuritySettingsArgs) SecuritySettingsPtrInput {
	return (*securitySettingsPtrType)(v)
}

func (*securitySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return i.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (i *securitySettingsPtrType) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySettingsPtrOutput)
}

// The authentication and authorization settings for a BackendService.
type SecuritySettingsOutput struct{ *pulumi.OutputState }

func (SecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutput() SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsOutputWithContext(ctx context.Context) SecuritySettingsOutput {
	return o
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o.ToSecuritySettingsPtrOutputWithContext(context.Background())
}

func (o SecuritySettingsOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecuritySettings) *SecuritySettings {
		return &v
	}).(SecuritySettingsPtrOutput)
}

// [Deprecated] Use clientTlsPolicy instead.
//
// Deprecated: [Deprecated] Use clientTlsPolicy instead.
func (o SecuritySettingsOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
//
// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
func (o SecuritySettingsOutput) AuthenticationPolicy() AuthenticationPolicyPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *AuthenticationPolicy { return v.AuthenticationPolicy }).(AuthenticationPolicyPtrOutput)
}

// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
//
// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
func (o SecuritySettingsOutput) AuthorizationConfig() AuthorizationConfigPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *AuthorizationConfig { return v.AuthorizationConfig }).(AuthorizationConfigPtrOutput)
}

// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
func (o SecuritySettingsOutput) AwsV4Authentication() AWSV4SignaturePtrOutput {
	return o.ApplyT(func(v SecuritySettings) *AWSV4Signature { return v.AwsV4Authentication }).(AWSV4SignaturePtrOutput)
}

// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
func (o SecuritySettingsOutput) ClientTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *string { return v.ClientTlsPolicy }).(pulumi.StringPtrOutput)
}

// [Deprecated] TLS Settings for the backend service.
//
// Deprecated: [Deprecated] TLS Settings for the backend service.
func (o SecuritySettingsOutput) ClientTlsSettings() ClientTlsSettingsPtrOutput {
	return o.ApplyT(func(v SecuritySettings) *ClientTlsSettings { return v.ClientTlsSettings }).(ClientTlsSettingsPtrOutput)
}

// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
func (o SecuritySettingsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecuritySettings) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type SecuritySettingsPtrOutput struct{ *pulumi.OutputState }

func (SecuritySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySettings)(nil)).Elem()
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutput() SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) ToSecuritySettingsPtrOutputWithContext(ctx context.Context) SecuritySettingsPtrOutput {
	return o
}

func (o SecuritySettingsPtrOutput) Elem() SecuritySettingsOutput {
	return o.ApplyT(func(v *SecuritySettings) SecuritySettings {
		if v != nil {
			return *v
		}
		var ret SecuritySettings
		return ret
	}).(SecuritySettingsOutput)
}

// [Deprecated] Use clientTlsPolicy instead.
//
// Deprecated: [Deprecated] Use clientTlsPolicy instead.
func (o SecuritySettingsPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
//
// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
func (o SecuritySettingsPtrOutput) AuthenticationPolicy() AuthenticationPolicyPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *AuthenticationPolicy {
		if v == nil {
			return nil
		}
		return v.AuthenticationPolicy
	}).(AuthenticationPolicyPtrOutput)
}

// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
//
// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
func (o SecuritySettingsPtrOutput) AuthorizationConfig() AuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *AuthorizationConfig {
		if v == nil {
			return nil
		}
		return v.AuthorizationConfig
	}).(AuthorizationConfigPtrOutput)
}

// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
func (o SecuritySettingsPtrOutput) AwsV4Authentication() AWSV4SignaturePtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *AWSV4Signature {
		if v == nil {
			return nil
		}
		return v.AwsV4Authentication
	}).(AWSV4SignaturePtrOutput)
}

// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
func (o SecuritySettingsPtrOutput) ClientTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientTlsPolicy
	}).(pulumi.StringPtrOutput)
}

// [Deprecated] TLS Settings for the backend service.
//
// Deprecated: [Deprecated] TLS Settings for the backend service.
func (o SecuritySettingsPtrOutput) ClientTlsSettings() ClientTlsSettingsPtrOutput {
	return o.ApplyT(func(v *SecuritySettings) *ClientTlsSettings {
		if v == nil {
			return nil
		}
		return v.ClientTlsSettings
	}).(ClientTlsSettingsPtrOutput)
}

// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
func (o SecuritySettingsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecuritySettings) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// The authentication and authorization settings for a BackendService.
type SecuritySettingsResponse struct {
	// [Deprecated] Use clientTlsPolicy instead.
	//
	// Deprecated: [Deprecated] Use clientTlsPolicy instead.
	Authentication string `pulumi:"authentication"`
	// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	//
	// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
	AuthenticationPolicy AuthenticationPolicyResponse `pulumi:"authenticationPolicy"`
	// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	//
	// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
	AuthorizationConfig AuthorizationConfigResponse `pulumi:"authorizationConfig"`
	// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
	AwsV4Authentication AWSV4SignatureResponse `pulumi:"awsV4Authentication"`
	// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
	ClientTlsPolicy string `pulumi:"clientTlsPolicy"`
	// [Deprecated] TLS Settings for the backend service.
	//
	// Deprecated: [Deprecated] TLS Settings for the backend service.
	ClientTlsSettings ClientTlsSettingsResponse `pulumi:"clientTlsSettings"`
	// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
	SubjectAltNames []string `pulumi:"subjectAltNames"`
}

// The authentication and authorization settings for a BackendService.
type SecuritySettingsResponseOutput struct{ *pulumi.OutputState }

func (SecuritySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySettingsResponse)(nil)).Elem()
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutput() SecuritySettingsResponseOutput {
	return o
}

func (o SecuritySettingsResponseOutput) ToSecuritySettingsResponseOutputWithContext(ctx context.Context) SecuritySettingsResponseOutput {
	return o
}

// [Deprecated] Use clientTlsPolicy instead.
//
// Deprecated: [Deprecated] Use clientTlsPolicy instead.
func (o SecuritySettingsResponseOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) string { return v.Authentication }).(pulumi.StringOutput)
}

// [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
//
// Deprecated: [Deprecated] Authentication policy defines what authentication methods can be accepted on backends, and if authenticated, which method/certificate will set the request principal. request principal.
func (o SecuritySettingsResponseOutput) AuthenticationPolicy() AuthenticationPolicyResponseOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) AuthenticationPolicyResponse { return v.AuthenticationPolicy }).(AuthenticationPolicyResponseOutput)
}

// [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
//
// Deprecated: [Deprecated] Authorization config defines the Role Based Access Control (RBAC) config. Authorization config defines the Role Based Access Control (RBAC) config.
func (o SecuritySettingsResponseOutput) AuthorizationConfig() AuthorizationConfigResponseOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) AuthorizationConfigResponse { return v.AuthorizationConfig }).(AuthorizationConfigResponseOutput)
}

// The configuration needed to generate a signature for access to private storage buckets that support AWS's Signature Version 4 for authentication. Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
func (o SecuritySettingsResponseOutput) AwsV4Authentication() AWSV4SignatureResponseOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) AWSV4SignatureResponse { return v.AwsV4Authentication }).(AWSV4SignatureResponseOutput)
}

// Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted.
func (o SecuritySettingsResponseOutput) ClientTlsPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) string { return v.ClientTlsPolicy }).(pulumi.StringOutput)
}

// [Deprecated] TLS Settings for the backend service.
//
// Deprecated: [Deprecated] TLS Settings for the backend service.
func (o SecuritySettingsResponseOutput) ClientTlsSettings() ClientTlsSettingsResponseOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) ClientTlsSettingsResponse { return v.ClientTlsSettings }).(ClientTlsSettingsResponseOutput)
}

// Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode).
func (o SecuritySettingsResponseOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecuritySettingsResponse) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

type ServerBinding struct {
	Type *ServerBindingType `pulumi:"type"`
}

// ServerBindingInput is an input type that accepts ServerBindingArgs and ServerBindingOutput values.
// You can construct a concrete instance of `ServerBindingInput` via:
//
//	ServerBindingArgs{...}
type ServerBindingInput interface {
	pulumi.Input

	ToServerBindingOutput() ServerBindingOutput
	ToServerBindingOutputWithContext(context.Context) ServerBindingOutput
}

type ServerBindingArgs struct {
	Type ServerBindingTypePtrInput `pulumi:"type"`
}

func (ServerBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerBinding)(nil)).Elem()
}

func (i ServerBindingArgs) ToServerBindingOutput() ServerBindingOutput {
	return i.ToServerBindingOutputWithContext(context.Background())
}

func (i ServerBindingArgs) ToServerBindingOutputWithContext(ctx context.Context) ServerBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerBindingOutput)
}

func (i ServerBindingArgs) ToServerBindingPtrOutput() ServerBindingPtrOutput {
	return i.ToServerBindingPtrOutputWithContext(context.Background())
}

func (i ServerBindingArgs) ToServerBindingPtrOutputWithContext(ctx context.Context) ServerBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerBindingOutput).ToServerBindingPtrOutputWithContext(ctx)
}

// ServerBindingPtrInput is an input type that accepts ServerBindingArgs, ServerBindingPtr and ServerBindingPtrOutput values.
// You can construct a concrete instance of `ServerBindingPtrInput` via:
//
//	        ServerBindingArgs{...}
//
//	or:
//
//	        nil
type ServerBindingPtrInput interface {
	pulumi.Input

	ToServerBindingPtrOutput() ServerBindingPtrOutput
	ToServerBindingPtrOutputWithContext(context.Context) ServerBindingPtrOutput
}

type serverBindingPtrType ServerBindingArgs

func ServerBindingPtr(v *ServerBindingArgs) ServerBindingPtrInput {
	return (*serverBindingPtrType)(v)
}

func (*serverBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerBinding)(nil)).Elem()
}

func (i *serverBindingPtrType) ToServerBindingPtrOutput() ServerBindingPtrOutput {
	return i.ToServerBindingPtrOutputWithContext(context.Background())
}

func (i *serverBindingPtrType) ToServerBindingPtrOutputWithContext(ctx context.Context) ServerBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerBindingPtrOutput)
}

type ServerBindingOutput struct{ *pulumi.OutputState }

func (ServerBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerBinding)(nil)).Elem()
}

func (o ServerBindingOutput) ToServerBindingOutput() ServerBindingOutput {
	return o
}

func (o ServerBindingOutput) ToServerBindingOutputWithContext(ctx context.Context) ServerBindingOutput {
	return o
}

func (o ServerBindingOutput) ToServerBindingPtrOutput() ServerBindingPtrOutput {
	return o.ToServerBindingPtrOutputWithContext(context.Background())
}

func (o ServerBindingOutput) ToServerBindingPtrOutputWithContext(ctx context.Context) ServerBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerBinding) *ServerBinding {
		return &v
	}).(ServerBindingPtrOutput)
}

func (o ServerBindingOutput) Type() ServerBindingTypePtrOutput {
	return o.ApplyT(func(v ServerBinding) *ServerBindingType { return v.Type }).(ServerBindingTypePtrOutput)
}

type ServerBindingPtrOutput struct{ *pulumi.OutputState }

func (ServerBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerBinding)(nil)).Elem()
}

func (o ServerBindingPtrOutput) ToServerBindingPtrOutput() ServerBindingPtrOutput {
	return o
}

func (o ServerBindingPtrOutput) ToServerBindingPtrOutputWithContext(ctx context.Context) ServerBindingPtrOutput {
	return o
}

func (o ServerBindingPtrOutput) Elem() ServerBindingOutput {
	return o.ApplyT(func(v *ServerBinding) ServerBinding {
		if v != nil {
			return *v
		}
		var ret ServerBinding
		return ret
	}).(ServerBindingOutput)
}

func (o ServerBindingPtrOutput) Type() ServerBindingTypePtrOutput {
	return o.ApplyT(func(v *ServerBinding) *ServerBindingType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ServerBindingTypePtrOutput)
}

type ServerBindingResponse struct {
	Type string `pulumi:"type"`
}

type ServerBindingResponseOutput struct{ *pulumi.OutputState }

func (ServerBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerBindingResponse)(nil)).Elem()
}

func (o ServerBindingResponseOutput) ToServerBindingResponseOutput() ServerBindingResponseOutput {
	return o
}

func (o ServerBindingResponseOutput) ToServerBindingResponseOutputWithContext(ctx context.Context) ServerBindingResponseOutput {
	return o
}

func (o ServerBindingResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerBindingResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The TLS settings for the server.
type ServerTlsSettings struct {
	// Configures the mechanism to obtain security certificates and identity information.
	ProxyTlsContext *TlsContext `pulumi:"proxyTlsContext"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
	TlsMode *ServerTlsSettingsTlsMode `pulumi:"tlsMode"`
}

// ServerTlsSettingsInput is an input type that accepts ServerTlsSettingsArgs and ServerTlsSettingsOutput values.
// You can construct a concrete instance of `ServerTlsSettingsInput` via:
//
//	ServerTlsSettingsArgs{...}
type ServerTlsSettingsInput interface {
	pulumi.Input

	ToServerTlsSettingsOutput() ServerTlsSettingsOutput
	ToServerTlsSettingsOutputWithContext(context.Context) ServerTlsSettingsOutput
}

// The TLS settings for the server.
type ServerTlsSettingsArgs struct {
	// Configures the mechanism to obtain security certificates and identity information.
	ProxyTlsContext TlsContextPtrInput `pulumi:"proxyTlsContext"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames pulumi.StringArrayInput `pulumi:"subjectAltNames"`
	// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
	TlsMode ServerTlsSettingsTlsModePtrInput `pulumi:"tlsMode"`
}

func (ServerTlsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTlsSettings)(nil)).Elem()
}

func (i ServerTlsSettingsArgs) ToServerTlsSettingsOutput() ServerTlsSettingsOutput {
	return i.ToServerTlsSettingsOutputWithContext(context.Background())
}

func (i ServerTlsSettingsArgs) ToServerTlsSettingsOutputWithContext(ctx context.Context) ServerTlsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTlsSettingsOutput)
}

func (i ServerTlsSettingsArgs) ToServerTlsSettingsPtrOutput() ServerTlsSettingsPtrOutput {
	return i.ToServerTlsSettingsPtrOutputWithContext(context.Background())
}

func (i ServerTlsSettingsArgs) ToServerTlsSettingsPtrOutputWithContext(ctx context.Context) ServerTlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTlsSettingsOutput).ToServerTlsSettingsPtrOutputWithContext(ctx)
}

// ServerTlsSettingsPtrInput is an input type that accepts ServerTlsSettingsArgs, ServerTlsSettingsPtr and ServerTlsSettingsPtrOutput values.
// You can construct a concrete instance of `ServerTlsSettingsPtrInput` via:
//
//	        ServerTlsSettingsArgs{...}
//
//	or:
//
//	        nil
type ServerTlsSettingsPtrInput interface {
	pulumi.Input

	ToServerTlsSettingsPtrOutput() ServerTlsSettingsPtrOutput
	ToServerTlsSettingsPtrOutputWithContext(context.Context) ServerTlsSettingsPtrOutput
}

type serverTlsSettingsPtrType ServerTlsSettingsArgs

func ServerTlsSettingsPtr(v *ServerTlsSettingsArgs) ServerTlsSettingsPtrInput {
	return (*serverTlsSettingsPtrType)(v)
}

func (*serverTlsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTlsSettings)(nil)).Elem()
}

func (i *serverTlsSettingsPtrType) ToServerTlsSettingsPtrOutput() ServerTlsSettingsPtrOutput {
	return i.ToServerTlsSettingsPtrOutputWithContext(context.Background())
}

func (i *serverTlsSettingsPtrType) ToServerTlsSettingsPtrOutputWithContext(ctx context.Context) ServerTlsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTlsSettingsPtrOutput)
}

// The TLS settings for the server.
type ServerTlsSettingsOutput struct{ *pulumi.OutputState }

func (ServerTlsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTlsSettings)(nil)).Elem()
}

func (o ServerTlsSettingsOutput) ToServerTlsSettingsOutput() ServerTlsSettingsOutput {
	return o
}

func (o ServerTlsSettingsOutput) ToServerTlsSettingsOutputWithContext(ctx context.Context) ServerTlsSettingsOutput {
	return o
}

func (o ServerTlsSettingsOutput) ToServerTlsSettingsPtrOutput() ServerTlsSettingsPtrOutput {
	return o.ToServerTlsSettingsPtrOutputWithContext(context.Background())
}

func (o ServerTlsSettingsOutput) ToServerTlsSettingsPtrOutputWithContext(ctx context.Context) ServerTlsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTlsSettings) *ServerTlsSettings {
		return &v
	}).(ServerTlsSettingsPtrOutput)
}

// Configures the mechanism to obtain security certificates and identity information.
func (o ServerTlsSettingsOutput) ProxyTlsContext() TlsContextPtrOutput {
	return o.ApplyT(func(v ServerTlsSettings) *TlsContext { return v.ProxyTlsContext }).(TlsContextPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o ServerTlsSettingsOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerTlsSettings) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
func (o ServerTlsSettingsOutput) TlsMode() ServerTlsSettingsTlsModePtrOutput {
	return o.ApplyT(func(v ServerTlsSettings) *ServerTlsSettingsTlsMode { return v.TlsMode }).(ServerTlsSettingsTlsModePtrOutput)
}

type ServerTlsSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServerTlsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTlsSettings)(nil)).Elem()
}

func (o ServerTlsSettingsPtrOutput) ToServerTlsSettingsPtrOutput() ServerTlsSettingsPtrOutput {
	return o
}

func (o ServerTlsSettingsPtrOutput) ToServerTlsSettingsPtrOutputWithContext(ctx context.Context) ServerTlsSettingsPtrOutput {
	return o
}

func (o ServerTlsSettingsPtrOutput) Elem() ServerTlsSettingsOutput {
	return o.ApplyT(func(v *ServerTlsSettings) ServerTlsSettings {
		if v != nil {
			return *v
		}
		var ret ServerTlsSettings
		return ret
	}).(ServerTlsSettingsOutput)
}

// Configures the mechanism to obtain security certificates and identity information.
func (o ServerTlsSettingsPtrOutput) ProxyTlsContext() TlsContextPtrOutput {
	return o.ApplyT(func(v *ServerTlsSettings) *TlsContext {
		if v == nil {
			return nil
		}
		return v.ProxyTlsContext
	}).(TlsContextPtrOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o ServerTlsSettingsPtrOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerTlsSettings) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(pulumi.StringArrayOutput)
}

// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
func (o ServerTlsSettingsPtrOutput) TlsMode() ServerTlsSettingsTlsModePtrOutput {
	return o.ApplyT(func(v *ServerTlsSettings) *ServerTlsSettingsTlsMode {
		if v == nil {
			return nil
		}
		return v.TlsMode
	}).(ServerTlsSettingsTlsModePtrOutput)
}

// The TLS settings for the server.
type ServerTlsSettingsResponse struct {
	// Configures the mechanism to obtain security certificates and identity information.
	ProxyTlsContext TlsContextResponse `pulumi:"proxyTlsContext"`
	// A list of alternate names to verify the subject identity in the certificate presented by the client.
	SubjectAltNames []string `pulumi:"subjectAltNames"`
	// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
	TlsMode string `pulumi:"tlsMode"`
}

// The TLS settings for the server.
type ServerTlsSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServerTlsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTlsSettingsResponse)(nil)).Elem()
}

func (o ServerTlsSettingsResponseOutput) ToServerTlsSettingsResponseOutput() ServerTlsSettingsResponseOutput {
	return o
}

func (o ServerTlsSettingsResponseOutput) ToServerTlsSettingsResponseOutputWithContext(ctx context.Context) ServerTlsSettingsResponseOutput {
	return o
}

// Configures the mechanism to obtain security certificates and identity information.
func (o ServerTlsSettingsResponseOutput) ProxyTlsContext() TlsContextResponseOutput {
	return o.ApplyT(func(v ServerTlsSettingsResponse) TlsContextResponse { return v.ProxyTlsContext }).(TlsContextResponseOutput)
}

// A list of alternate names to verify the subject identity in the certificate presented by the client.
func (o ServerTlsSettingsResponseOutput) SubjectAltNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerTlsSettingsResponse) []string { return v.SubjectAltNames }).(pulumi.StringArrayOutput)
}

// Indicates whether connections should be secured using TLS. The value of this field determines how TLS is enforced. This field can be set to one of the following: - SIMPLE Secure connections with standard TLS semantics. - MUTUAL Secure connections to the backends using mutual TLS by presenting client certificates for authentication.
func (o ServerTlsSettingsResponseOutput) TlsMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTlsSettingsResponse) string { return v.TlsMode }).(pulumi.StringOutput)
}

// A service account.
type ServiceAccount struct {
	// Email address of the service account.
	Email *string `pulumi:"email"`
	// The list of scopes to be made available for this service account.
	Scopes []string `pulumi:"scopes"`
}

// ServiceAccountInput is an input type that accepts ServiceAccountArgs and ServiceAccountOutput values.
// You can construct a concrete instance of `ServiceAccountInput` via:
//
//	ServiceAccountArgs{...}
type ServiceAccountInput interface {
	pulumi.Input

	ToServiceAccountOutput() ServiceAccountOutput
	ToServiceAccountOutputWithContext(context.Context) ServiceAccountOutput
}

// A service account.
type ServiceAccountArgs struct {
	// Email address of the service account.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The list of scopes to be made available for this service account.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccount)(nil)).Elem()
}

func (i ServiceAccountArgs) ToServiceAccountOutput() ServiceAccountOutput {
	return i.ToServiceAccountOutputWithContext(context.Background())
}

func (i ServiceAccountArgs) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountOutput)
}

// ServiceAccountArrayInput is an input type that accepts ServiceAccountArray and ServiceAccountArrayOutput values.
// You can construct a concrete instance of `ServiceAccountArrayInput` via:
//
//	ServiceAccountArray{ ServiceAccountArgs{...} }
type ServiceAccountArrayInput interface {
	pulumi.Input

	ToServiceAccountArrayOutput() ServiceAccountArrayOutput
	ToServiceAccountArrayOutputWithContext(context.Context) ServiceAccountArrayOutput
}

type ServiceAccountArray []ServiceAccountInput

func (ServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccount)(nil)).Elem()
}

func (i ServiceAccountArray) ToServiceAccountArrayOutput() ServiceAccountArrayOutput {
	return i.ToServiceAccountArrayOutputWithContext(context.Background())
}

func (i ServiceAccountArray) ToServiceAccountArrayOutputWithContext(ctx context.Context) ServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountArrayOutput)
}

// A service account.
type ServiceAccountOutput struct{ *pulumi.OutputState }

func (ServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccount)(nil)).Elem()
}

func (o ServiceAccountOutput) ToServiceAccountOutput() ServiceAccountOutput {
	return o
}

func (o ServiceAccountOutput) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return o
}

// Email address of the service account.
func (o ServiceAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The list of scopes to be made available for this service account.
func (o ServiceAccountOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAccount) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccount)(nil)).Elem()
}

func (o ServiceAccountArrayOutput) ToServiceAccountArrayOutput() ServiceAccountArrayOutput {
	return o
}

func (o ServiceAccountArrayOutput) ToServiceAccountArrayOutputWithContext(ctx context.Context) ServiceAccountArrayOutput {
	return o
}

func (o ServiceAccountArrayOutput) Index(i pulumi.IntInput) ServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAccount {
		return vs[0].([]ServiceAccount)[vs[1].(int)]
	}).(ServiceAccountOutput)
}

// A service account.
type ServiceAccountResponse struct {
	// Email address of the service account.
	Email string `pulumi:"email"`
	// The list of scopes to be made available for this service account.
	Scopes []string `pulumi:"scopes"`
}

// A service account.
type ServiceAccountResponseOutput struct{ *pulumi.OutputState }

func (ServiceAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountResponse)(nil)).Elem()
}

func (o ServiceAccountResponseOutput) ToServiceAccountResponseOutput() ServiceAccountResponseOutput {
	return o
}

func (o ServiceAccountResponseOutput) ToServiceAccountResponseOutputWithContext(ctx context.Context) ServiceAccountResponseOutput {
	return o
}

// Email address of the service account.
func (o ServiceAccountResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAccountResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The list of scopes to be made available for this service account.
func (o ServiceAccountResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAccountResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ServiceAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountResponse)(nil)).Elem()
}

func (o ServiceAccountResponseArrayOutput) ToServiceAccountResponseArrayOutput() ServiceAccountResponseArrayOutput {
	return o
}

func (o ServiceAccountResponseArrayOutput) ToServiceAccountResponseArrayOutputWithContext(ctx context.Context) ServiceAccountResponseArrayOutput {
	return o
}

func (o ServiceAccountResponseArrayOutput) Index(i pulumi.IntInput) ServiceAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAccountResponse {
		return vs[0].([]ServiceAccountResponse)[vs[1].(int)]
	}).(ServiceAccountResponseOutput)
}

// [Output Only] A connection connected to this service attachment.
type ServiceAttachmentConnectedEndpointResponse struct {
	// The url of the consumer network.
	ConsumerNetwork string `pulumi:"consumerNetwork"`
	// The url of a connected endpoint.
	Endpoint string `pulumi:"endpoint"`
	// The PSC connection id of the connected endpoint.
	PscConnectionId string `pulumi:"pscConnectionId"`
	// The status of a connected endpoint to this service attachment.
	Status string `pulumi:"status"`
}

// [Output Only] A connection connected to this service attachment.
type ServiceAttachmentConnectedEndpointResponseOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConnectedEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConnectedEndpointResponse)(nil)).Elem()
}

func (o ServiceAttachmentConnectedEndpointResponseOutput) ToServiceAttachmentConnectedEndpointResponseOutput() ServiceAttachmentConnectedEndpointResponseOutput {
	return o
}

func (o ServiceAttachmentConnectedEndpointResponseOutput) ToServiceAttachmentConnectedEndpointResponseOutputWithContext(ctx context.Context) ServiceAttachmentConnectedEndpointResponseOutput {
	return o
}

// The url of the consumer network.
func (o ServiceAttachmentConnectedEndpointResponseOutput) ConsumerNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConnectedEndpointResponse) string { return v.ConsumerNetwork }).(pulumi.StringOutput)
}

// The url of a connected endpoint.
func (o ServiceAttachmentConnectedEndpointResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConnectedEndpointResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The PSC connection id of the connected endpoint.
func (o ServiceAttachmentConnectedEndpointResponseOutput) PscConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConnectedEndpointResponse) string { return v.PscConnectionId }).(pulumi.StringOutput)
}

// The status of a connected endpoint to this service attachment.
func (o ServiceAttachmentConnectedEndpointResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConnectedEndpointResponse) string { return v.Status }).(pulumi.StringOutput)
}

type ServiceAttachmentConnectedEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConnectedEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAttachmentConnectedEndpointResponse)(nil)).Elem()
}

func (o ServiceAttachmentConnectedEndpointResponseArrayOutput) ToServiceAttachmentConnectedEndpointResponseArrayOutput() ServiceAttachmentConnectedEndpointResponseArrayOutput {
	return o
}

func (o ServiceAttachmentConnectedEndpointResponseArrayOutput) ToServiceAttachmentConnectedEndpointResponseArrayOutputWithContext(ctx context.Context) ServiceAttachmentConnectedEndpointResponseArrayOutput {
	return o
}

func (o ServiceAttachmentConnectedEndpointResponseArrayOutput) Index(i pulumi.IntInput) ServiceAttachmentConnectedEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAttachmentConnectedEndpointResponse {
		return vs[0].([]ServiceAttachmentConnectedEndpointResponse)[vs[1].(int)]
	}).(ServiceAttachmentConnectedEndpointResponseOutput)
}

type ServiceAttachmentConsumerProjectLimit struct {
	// The value of the limit to set.
	ConnectionLimit *int `pulumi:"connectionLimit"`
	// The network URL for the network to set the limit for.
	NetworkUrl *string `pulumi:"networkUrl"`
	// The project id or number for the project to set the limit for.
	ProjectIdOrNum *string `pulumi:"projectIdOrNum"`
}

// ServiceAttachmentConsumerProjectLimitInput is an input type that accepts ServiceAttachmentConsumerProjectLimitArgs and ServiceAttachmentConsumerProjectLimitOutput values.
// You can construct a concrete instance of `ServiceAttachmentConsumerProjectLimitInput` via:
//
//	ServiceAttachmentConsumerProjectLimitArgs{...}
type ServiceAttachmentConsumerProjectLimitInput interface {
	pulumi.Input

	ToServiceAttachmentConsumerProjectLimitOutput() ServiceAttachmentConsumerProjectLimitOutput
	ToServiceAttachmentConsumerProjectLimitOutputWithContext(context.Context) ServiceAttachmentConsumerProjectLimitOutput
}

type ServiceAttachmentConsumerProjectLimitArgs struct {
	// The value of the limit to set.
	ConnectionLimit pulumi.IntPtrInput `pulumi:"connectionLimit"`
	// The network URL for the network to set the limit for.
	NetworkUrl pulumi.StringPtrInput `pulumi:"networkUrl"`
	// The project id or number for the project to set the limit for.
	ProjectIdOrNum pulumi.StringPtrInput `pulumi:"projectIdOrNum"`
}

func (ServiceAttachmentConsumerProjectLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConsumerProjectLimit)(nil)).Elem()
}

func (i ServiceAttachmentConsumerProjectLimitArgs) ToServiceAttachmentConsumerProjectLimitOutput() ServiceAttachmentConsumerProjectLimitOutput {
	return i.ToServiceAttachmentConsumerProjectLimitOutputWithContext(context.Background())
}

func (i ServiceAttachmentConsumerProjectLimitArgs) ToServiceAttachmentConsumerProjectLimitOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAttachmentConsumerProjectLimitOutput)
}

// ServiceAttachmentConsumerProjectLimitArrayInput is an input type that accepts ServiceAttachmentConsumerProjectLimitArray and ServiceAttachmentConsumerProjectLimitArrayOutput values.
// You can construct a concrete instance of `ServiceAttachmentConsumerProjectLimitArrayInput` via:
//
//	ServiceAttachmentConsumerProjectLimitArray{ ServiceAttachmentConsumerProjectLimitArgs{...} }
type ServiceAttachmentConsumerProjectLimitArrayInput interface {
	pulumi.Input

	ToServiceAttachmentConsumerProjectLimitArrayOutput() ServiceAttachmentConsumerProjectLimitArrayOutput
	ToServiceAttachmentConsumerProjectLimitArrayOutputWithContext(context.Context) ServiceAttachmentConsumerProjectLimitArrayOutput
}

type ServiceAttachmentConsumerProjectLimitArray []ServiceAttachmentConsumerProjectLimitInput

func (ServiceAttachmentConsumerProjectLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAttachmentConsumerProjectLimit)(nil)).Elem()
}

func (i ServiceAttachmentConsumerProjectLimitArray) ToServiceAttachmentConsumerProjectLimitArrayOutput() ServiceAttachmentConsumerProjectLimitArrayOutput {
	return i.ToServiceAttachmentConsumerProjectLimitArrayOutputWithContext(context.Background())
}

func (i ServiceAttachmentConsumerProjectLimitArray) ToServiceAttachmentConsumerProjectLimitArrayOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAttachmentConsumerProjectLimitArrayOutput)
}

type ServiceAttachmentConsumerProjectLimitOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConsumerProjectLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConsumerProjectLimit)(nil)).Elem()
}

func (o ServiceAttachmentConsumerProjectLimitOutput) ToServiceAttachmentConsumerProjectLimitOutput() ServiceAttachmentConsumerProjectLimitOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitOutput) ToServiceAttachmentConsumerProjectLimitOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitOutput {
	return o
}

// The value of the limit to set.
func (o ServiceAttachmentConsumerProjectLimitOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimit) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

// The network URL for the network to set the limit for.
func (o ServiceAttachmentConsumerProjectLimitOutput) NetworkUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimit) *string { return v.NetworkUrl }).(pulumi.StringPtrOutput)
}

// The project id or number for the project to set the limit for.
func (o ServiceAttachmentConsumerProjectLimitOutput) ProjectIdOrNum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimit) *string { return v.ProjectIdOrNum }).(pulumi.StringPtrOutput)
}

type ServiceAttachmentConsumerProjectLimitArrayOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConsumerProjectLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAttachmentConsumerProjectLimit)(nil)).Elem()
}

func (o ServiceAttachmentConsumerProjectLimitArrayOutput) ToServiceAttachmentConsumerProjectLimitArrayOutput() ServiceAttachmentConsumerProjectLimitArrayOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitArrayOutput) ToServiceAttachmentConsumerProjectLimitArrayOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitArrayOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitArrayOutput) Index(i pulumi.IntInput) ServiceAttachmentConsumerProjectLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAttachmentConsumerProjectLimit {
		return vs[0].([]ServiceAttachmentConsumerProjectLimit)[vs[1].(int)]
	}).(ServiceAttachmentConsumerProjectLimitOutput)
}

type ServiceAttachmentConsumerProjectLimitResponse struct {
	// The value of the limit to set.
	ConnectionLimit int `pulumi:"connectionLimit"`
	// The network URL for the network to set the limit for.
	NetworkUrl string `pulumi:"networkUrl"`
	// The project id or number for the project to set the limit for.
	ProjectIdOrNum string `pulumi:"projectIdOrNum"`
}

type ServiceAttachmentConsumerProjectLimitResponseOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConsumerProjectLimitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentConsumerProjectLimitResponse)(nil)).Elem()
}

func (o ServiceAttachmentConsumerProjectLimitResponseOutput) ToServiceAttachmentConsumerProjectLimitResponseOutput() ServiceAttachmentConsumerProjectLimitResponseOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitResponseOutput) ToServiceAttachmentConsumerProjectLimitResponseOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitResponseOutput {
	return o
}

// The value of the limit to set.
func (o ServiceAttachmentConsumerProjectLimitResponseOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimitResponse) int { return v.ConnectionLimit }).(pulumi.IntOutput)
}

// The network URL for the network to set the limit for.
func (o ServiceAttachmentConsumerProjectLimitResponseOutput) NetworkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimitResponse) string { return v.NetworkUrl }).(pulumi.StringOutput)
}

// The project id or number for the project to set the limit for.
func (o ServiceAttachmentConsumerProjectLimitResponseOutput) ProjectIdOrNum() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentConsumerProjectLimitResponse) string { return v.ProjectIdOrNum }).(pulumi.StringOutput)
}

type ServiceAttachmentConsumerProjectLimitResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentConsumerProjectLimitResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAttachmentConsumerProjectLimitResponse)(nil)).Elem()
}

func (o ServiceAttachmentConsumerProjectLimitResponseArrayOutput) ToServiceAttachmentConsumerProjectLimitResponseArrayOutput() ServiceAttachmentConsumerProjectLimitResponseArrayOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitResponseArrayOutput) ToServiceAttachmentConsumerProjectLimitResponseArrayOutputWithContext(ctx context.Context) ServiceAttachmentConsumerProjectLimitResponseArrayOutput {
	return o
}

func (o ServiceAttachmentConsumerProjectLimitResponseArrayOutput) Index(i pulumi.IntInput) ServiceAttachmentConsumerProjectLimitResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAttachmentConsumerProjectLimitResponse {
		return vs[0].([]ServiceAttachmentConsumerProjectLimitResponse)[vs[1].(int)]
	}).(ServiceAttachmentConsumerProjectLimitResponseOutput)
}

// Use to configure this PSC connection in tunneling mode. In tunneling mode traffic from consumer to producer will be encapsulated as it crosses the VPC boundary and traffic from producer to consumer will be decapsulated in the same manner.
type ServiceAttachmentTunnelingConfig struct {
	// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
	EncapsulationProfile *ServiceAttachmentTunnelingConfigEncapsulationProfile `pulumi:"encapsulationProfile"`
	// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
	RoutingMode *ServiceAttachmentTunnelingConfigRoutingMode `pulumi:"routingMode"`
}

// ServiceAttachmentTunnelingConfigInput is an input type that accepts ServiceAttachmentTunnelingConfigArgs and ServiceAttachmentTunnelingConfigOutput values.
// You can construct a concrete instance of `ServiceAttachmentTunnelingConfigInput` via:
//
//	ServiceAttachmentTunnelingConfigArgs{...}
type ServiceAttachmentTunnelingConfigInput interface {
	pulumi.Input

	ToServiceAttachmentTunnelingConfigOutput() ServiceAttachmentTunnelingConfigOutput
	ToServiceAttachmentTunnelingConfigOutputWithContext(context.Context) ServiceAttachmentTunnelingConfigOutput
}

// Use to configure this PSC connection in tunneling mode. In tunneling mode traffic from consumer to producer will be encapsulated as it crosses the VPC boundary and traffic from producer to consumer will be decapsulated in the same manner.
type ServiceAttachmentTunnelingConfigArgs struct {
	// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
	EncapsulationProfile ServiceAttachmentTunnelingConfigEncapsulationProfilePtrInput `pulumi:"encapsulationProfile"`
	// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
	RoutingMode ServiceAttachmentTunnelingConfigRoutingModePtrInput `pulumi:"routingMode"`
}

func (ServiceAttachmentTunnelingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentTunnelingConfig)(nil)).Elem()
}

func (i ServiceAttachmentTunnelingConfigArgs) ToServiceAttachmentTunnelingConfigOutput() ServiceAttachmentTunnelingConfigOutput {
	return i.ToServiceAttachmentTunnelingConfigOutputWithContext(context.Background())
}

func (i ServiceAttachmentTunnelingConfigArgs) ToServiceAttachmentTunnelingConfigOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAttachmentTunnelingConfigOutput)
}

func (i ServiceAttachmentTunnelingConfigArgs) ToServiceAttachmentTunnelingConfigPtrOutput() ServiceAttachmentTunnelingConfigPtrOutput {
	return i.ToServiceAttachmentTunnelingConfigPtrOutputWithContext(context.Background())
}

func (i ServiceAttachmentTunnelingConfigArgs) ToServiceAttachmentTunnelingConfigPtrOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAttachmentTunnelingConfigOutput).ToServiceAttachmentTunnelingConfigPtrOutputWithContext(ctx)
}

// ServiceAttachmentTunnelingConfigPtrInput is an input type that accepts ServiceAttachmentTunnelingConfigArgs, ServiceAttachmentTunnelingConfigPtr and ServiceAttachmentTunnelingConfigPtrOutput values.
// You can construct a concrete instance of `ServiceAttachmentTunnelingConfigPtrInput` via:
//
//	        ServiceAttachmentTunnelingConfigArgs{...}
//
//	or:
//
//	        nil
type ServiceAttachmentTunnelingConfigPtrInput interface {
	pulumi.Input

	ToServiceAttachmentTunnelingConfigPtrOutput() ServiceAttachmentTunnelingConfigPtrOutput
	ToServiceAttachmentTunnelingConfigPtrOutputWithContext(context.Context) ServiceAttachmentTunnelingConfigPtrOutput
}

type serviceAttachmentTunnelingConfigPtrType ServiceAttachmentTunnelingConfigArgs

func ServiceAttachmentTunnelingConfigPtr(v *ServiceAttachmentTunnelingConfigArgs) ServiceAttachmentTunnelingConfigPtrInput {
	return (*serviceAttachmentTunnelingConfigPtrType)(v)
}

func (*serviceAttachmentTunnelingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAttachmentTunnelingConfig)(nil)).Elem()
}

func (i *serviceAttachmentTunnelingConfigPtrType) ToServiceAttachmentTunnelingConfigPtrOutput() ServiceAttachmentTunnelingConfigPtrOutput {
	return i.ToServiceAttachmentTunnelingConfigPtrOutputWithContext(context.Background())
}

func (i *serviceAttachmentTunnelingConfigPtrType) ToServiceAttachmentTunnelingConfigPtrOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAttachmentTunnelingConfigPtrOutput)
}

// Use to configure this PSC connection in tunneling mode. In tunneling mode traffic from consumer to producer will be encapsulated as it crosses the VPC boundary and traffic from producer to consumer will be decapsulated in the same manner.
type ServiceAttachmentTunnelingConfigOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentTunnelingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentTunnelingConfig)(nil)).Elem()
}

func (o ServiceAttachmentTunnelingConfigOutput) ToServiceAttachmentTunnelingConfigOutput() ServiceAttachmentTunnelingConfigOutput {
	return o
}

func (o ServiceAttachmentTunnelingConfigOutput) ToServiceAttachmentTunnelingConfigOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigOutput {
	return o
}

func (o ServiceAttachmentTunnelingConfigOutput) ToServiceAttachmentTunnelingConfigPtrOutput() ServiceAttachmentTunnelingConfigPtrOutput {
	return o.ToServiceAttachmentTunnelingConfigPtrOutputWithContext(context.Background())
}

func (o ServiceAttachmentTunnelingConfigOutput) ToServiceAttachmentTunnelingConfigPtrOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAttachmentTunnelingConfig) *ServiceAttachmentTunnelingConfig {
		return &v
	}).(ServiceAttachmentTunnelingConfigPtrOutput)
}

// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
func (o ServiceAttachmentTunnelingConfigOutput) EncapsulationProfile() ServiceAttachmentTunnelingConfigEncapsulationProfilePtrOutput {
	return o.ApplyT(func(v ServiceAttachmentTunnelingConfig) *ServiceAttachmentTunnelingConfigEncapsulationProfile {
		return v.EncapsulationProfile
	}).(ServiceAttachmentTunnelingConfigEncapsulationProfilePtrOutput)
}

// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
func (o ServiceAttachmentTunnelingConfigOutput) RoutingMode() ServiceAttachmentTunnelingConfigRoutingModePtrOutput {
	return o.ApplyT(func(v ServiceAttachmentTunnelingConfig) *ServiceAttachmentTunnelingConfigRoutingMode {
		return v.RoutingMode
	}).(ServiceAttachmentTunnelingConfigRoutingModePtrOutput)
}

type ServiceAttachmentTunnelingConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentTunnelingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAttachmentTunnelingConfig)(nil)).Elem()
}

func (o ServiceAttachmentTunnelingConfigPtrOutput) ToServiceAttachmentTunnelingConfigPtrOutput() ServiceAttachmentTunnelingConfigPtrOutput {
	return o
}

func (o ServiceAttachmentTunnelingConfigPtrOutput) ToServiceAttachmentTunnelingConfigPtrOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigPtrOutput {
	return o
}

func (o ServiceAttachmentTunnelingConfigPtrOutput) Elem() ServiceAttachmentTunnelingConfigOutput {
	return o.ApplyT(func(v *ServiceAttachmentTunnelingConfig) ServiceAttachmentTunnelingConfig {
		if v != nil {
			return *v
		}
		var ret ServiceAttachmentTunnelingConfig
		return ret
	}).(ServiceAttachmentTunnelingConfigOutput)
}

// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
func (o ServiceAttachmentTunnelingConfigPtrOutput) EncapsulationProfile() ServiceAttachmentTunnelingConfigEncapsulationProfilePtrOutput {
	return o.ApplyT(func(v *ServiceAttachmentTunnelingConfig) *ServiceAttachmentTunnelingConfigEncapsulationProfile {
		if v == nil {
			return nil
		}
		return v.EncapsulationProfile
	}).(ServiceAttachmentTunnelingConfigEncapsulationProfilePtrOutput)
}

// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
func (o ServiceAttachmentTunnelingConfigPtrOutput) RoutingMode() ServiceAttachmentTunnelingConfigRoutingModePtrOutput {
	return o.ApplyT(func(v *ServiceAttachmentTunnelingConfig) *ServiceAttachmentTunnelingConfigRoutingMode {
		if v == nil {
			return nil
		}
		return v.RoutingMode
	}).(ServiceAttachmentTunnelingConfigRoutingModePtrOutput)
}

// Use to configure this PSC connection in tunneling mode. In tunneling mode traffic from consumer to producer will be encapsulated as it crosses the VPC boundary and traffic from producer to consumer will be decapsulated in the same manner.
type ServiceAttachmentTunnelingConfigResponse struct {
	// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
	EncapsulationProfile string `pulumi:"encapsulationProfile"`
	// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
	RoutingMode string `pulumi:"routingMode"`
}

// Use to configure this PSC connection in tunneling mode. In tunneling mode traffic from consumer to producer will be encapsulated as it crosses the VPC boundary and traffic from producer to consumer will be decapsulated in the same manner.
type ServiceAttachmentTunnelingConfigResponseOutput struct{ *pulumi.OutputState }

func (ServiceAttachmentTunnelingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAttachmentTunnelingConfigResponse)(nil)).Elem()
}

func (o ServiceAttachmentTunnelingConfigResponseOutput) ToServiceAttachmentTunnelingConfigResponseOutput() ServiceAttachmentTunnelingConfigResponseOutput {
	return o
}

func (o ServiceAttachmentTunnelingConfigResponseOutput) ToServiceAttachmentTunnelingConfigResponseOutputWithContext(ctx context.Context) ServiceAttachmentTunnelingConfigResponseOutput {
	return o
}

// Specify the encapsulation protocol and what metadata to include in incoming encapsulated packet headers.
func (o ServiceAttachmentTunnelingConfigResponseOutput) EncapsulationProfile() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentTunnelingConfigResponse) string { return v.EncapsulationProfile }).(pulumi.StringOutput)
}

// How this Service Attachment will treat traffic sent to the tunnel_ip, destined for the consumer network.
func (o ServiceAttachmentTunnelingConfigResponseOutput) RoutingMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAttachmentTunnelingConfigResponse) string { return v.RoutingMode }).(pulumi.StringOutput)
}

// Specifies the parameters to configure an integration with instances.
type ServiceIntegrationSpec struct {
	BackupDr *ServiceIntegrationSpecBackupDRSpec `pulumi:"backupDr"`
}

// ServiceIntegrationSpecInput is an input type that accepts ServiceIntegrationSpecArgs and ServiceIntegrationSpecOutput values.
// You can construct a concrete instance of `ServiceIntegrationSpecInput` via:
//
//	ServiceIntegrationSpecArgs{...}
type ServiceIntegrationSpecInput interface {
	pulumi.Input

	ToServiceIntegrationSpecOutput() ServiceIntegrationSpecOutput
	ToServiceIntegrationSpecOutputWithContext(context.Context) ServiceIntegrationSpecOutput
}

// Specifies the parameters to configure an integration with instances.
type ServiceIntegrationSpecArgs struct {
	BackupDr ServiceIntegrationSpecBackupDRSpecPtrInput `pulumi:"backupDr"`
}

func (ServiceIntegrationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpec)(nil)).Elem()
}

func (i ServiceIntegrationSpecArgs) ToServiceIntegrationSpecOutput() ServiceIntegrationSpecOutput {
	return i.ToServiceIntegrationSpecOutputWithContext(context.Background())
}

func (i ServiceIntegrationSpecArgs) ToServiceIntegrationSpecOutputWithContext(ctx context.Context) ServiceIntegrationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecOutput)
}

func (i ServiceIntegrationSpecArgs) ToServiceIntegrationSpecPtrOutput() ServiceIntegrationSpecPtrOutput {
	return i.ToServiceIntegrationSpecPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationSpecArgs) ToServiceIntegrationSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecOutput).ToServiceIntegrationSpecPtrOutputWithContext(ctx)
}

// ServiceIntegrationSpecPtrInput is an input type that accepts ServiceIntegrationSpecArgs, ServiceIntegrationSpecPtr and ServiceIntegrationSpecPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationSpecPtrInput` via:
//
//	        ServiceIntegrationSpecArgs{...}
//
//	or:
//
//	        nil
type ServiceIntegrationSpecPtrInput interface {
	pulumi.Input

	ToServiceIntegrationSpecPtrOutput() ServiceIntegrationSpecPtrOutput
	ToServiceIntegrationSpecPtrOutputWithContext(context.Context) ServiceIntegrationSpecPtrOutput
}

type serviceIntegrationSpecPtrType ServiceIntegrationSpecArgs

func ServiceIntegrationSpecPtr(v *ServiceIntegrationSpecArgs) ServiceIntegrationSpecPtrInput {
	return (*serviceIntegrationSpecPtrType)(v)
}

func (*serviceIntegrationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSpec)(nil)).Elem()
}

func (i *serviceIntegrationSpecPtrType) ToServiceIntegrationSpecPtrOutput() ServiceIntegrationSpecPtrOutput {
	return i.ToServiceIntegrationSpecPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationSpecPtrType) ToServiceIntegrationSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecPtrOutput)
}

// Specifies the parameters to configure an integration with instances.
type ServiceIntegrationSpecOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpec)(nil)).Elem()
}

func (o ServiceIntegrationSpecOutput) ToServiceIntegrationSpecOutput() ServiceIntegrationSpecOutput {
	return o
}

func (o ServiceIntegrationSpecOutput) ToServiceIntegrationSpecOutputWithContext(ctx context.Context) ServiceIntegrationSpecOutput {
	return o
}

func (o ServiceIntegrationSpecOutput) ToServiceIntegrationSpecPtrOutput() ServiceIntegrationSpecPtrOutput {
	return o.ToServiceIntegrationSpecPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationSpecOutput) ToServiceIntegrationSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceIntegrationSpec) *ServiceIntegrationSpec {
		return &v
	}).(ServiceIntegrationSpecPtrOutput)
}

func (o ServiceIntegrationSpecOutput) BackupDr() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationSpec) *ServiceIntegrationSpecBackupDRSpec { return v.BackupDr }).(ServiceIntegrationSpecBackupDRSpecPtrOutput)
}

type ServiceIntegrationSpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSpec)(nil)).Elem()
}

func (o ServiceIntegrationSpecPtrOutput) ToServiceIntegrationSpecPtrOutput() ServiceIntegrationSpecPtrOutput {
	return o
}

func (o ServiceIntegrationSpecPtrOutput) ToServiceIntegrationSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecPtrOutput {
	return o
}

func (o ServiceIntegrationSpecPtrOutput) Elem() ServiceIntegrationSpecOutput {
	return o.ApplyT(func(v *ServiceIntegrationSpec) ServiceIntegrationSpec {
		if v != nil {
			return *v
		}
		var ret ServiceIntegrationSpec
		return ret
	}).(ServiceIntegrationSpecOutput)
}

func (o ServiceIntegrationSpecPtrOutput) BackupDr() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationSpec) *ServiceIntegrationSpecBackupDRSpec {
		if v == nil {
			return nil
		}
		return v.BackupDr
	}).(ServiceIntegrationSpecBackupDRSpecPtrOutput)
}

// Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.
type ServiceIntegrationSpecBackupDRSpec struct {
	// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
	Plan *string `pulumi:"plan"`
}

// ServiceIntegrationSpecBackupDRSpecInput is an input type that accepts ServiceIntegrationSpecBackupDRSpecArgs and ServiceIntegrationSpecBackupDRSpecOutput values.
// You can construct a concrete instance of `ServiceIntegrationSpecBackupDRSpecInput` via:
//
//	ServiceIntegrationSpecBackupDRSpecArgs{...}
type ServiceIntegrationSpecBackupDRSpecInput interface {
	pulumi.Input

	ToServiceIntegrationSpecBackupDRSpecOutput() ServiceIntegrationSpecBackupDRSpecOutput
	ToServiceIntegrationSpecBackupDRSpecOutputWithContext(context.Context) ServiceIntegrationSpecBackupDRSpecOutput
}

// Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.
type ServiceIntegrationSpecBackupDRSpecArgs struct {
	// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
	Plan pulumi.StringPtrInput `pulumi:"plan"`
}

func (ServiceIntegrationSpecBackupDRSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpecBackupDRSpec)(nil)).Elem()
}

func (i ServiceIntegrationSpecBackupDRSpecArgs) ToServiceIntegrationSpecBackupDRSpecOutput() ServiceIntegrationSpecBackupDRSpecOutput {
	return i.ToServiceIntegrationSpecBackupDRSpecOutputWithContext(context.Background())
}

func (i ServiceIntegrationSpecBackupDRSpecArgs) ToServiceIntegrationSpecBackupDRSpecOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecBackupDRSpecOutput)
}

func (i ServiceIntegrationSpecBackupDRSpecArgs) ToServiceIntegrationSpecBackupDRSpecPtrOutput() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return i.ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(context.Background())
}

func (i ServiceIntegrationSpecBackupDRSpecArgs) ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecBackupDRSpecOutput).ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(ctx)
}

// ServiceIntegrationSpecBackupDRSpecPtrInput is an input type that accepts ServiceIntegrationSpecBackupDRSpecArgs, ServiceIntegrationSpecBackupDRSpecPtr and ServiceIntegrationSpecBackupDRSpecPtrOutput values.
// You can construct a concrete instance of `ServiceIntegrationSpecBackupDRSpecPtrInput` via:
//
//	        ServiceIntegrationSpecBackupDRSpecArgs{...}
//
//	or:
//
//	        nil
type ServiceIntegrationSpecBackupDRSpecPtrInput interface {
	pulumi.Input

	ToServiceIntegrationSpecBackupDRSpecPtrOutput() ServiceIntegrationSpecBackupDRSpecPtrOutput
	ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(context.Context) ServiceIntegrationSpecBackupDRSpecPtrOutput
}

type serviceIntegrationSpecBackupDRSpecPtrType ServiceIntegrationSpecBackupDRSpecArgs

func ServiceIntegrationSpecBackupDRSpecPtr(v *ServiceIntegrationSpecBackupDRSpecArgs) ServiceIntegrationSpecBackupDRSpecPtrInput {
	return (*serviceIntegrationSpecBackupDRSpecPtrType)(v)
}

func (*serviceIntegrationSpecBackupDRSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSpecBackupDRSpec)(nil)).Elem()
}

func (i *serviceIntegrationSpecBackupDRSpecPtrType) ToServiceIntegrationSpecBackupDRSpecPtrOutput() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return i.ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(context.Background())
}

func (i *serviceIntegrationSpecBackupDRSpecPtrType) ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIntegrationSpecBackupDRSpecPtrOutput)
}

// Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.
type ServiceIntegrationSpecBackupDRSpecOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecBackupDRSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpecBackupDRSpec)(nil)).Elem()
}

func (o ServiceIntegrationSpecBackupDRSpecOutput) ToServiceIntegrationSpecBackupDRSpecOutput() ServiceIntegrationSpecBackupDRSpecOutput {
	return o
}

func (o ServiceIntegrationSpecBackupDRSpecOutput) ToServiceIntegrationSpecBackupDRSpecOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecOutput {
	return o
}

func (o ServiceIntegrationSpecBackupDRSpecOutput) ToServiceIntegrationSpecBackupDRSpecPtrOutput() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o.ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(context.Background())
}

func (o ServiceIntegrationSpecBackupDRSpecOutput) ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceIntegrationSpecBackupDRSpec) *ServiceIntegrationSpecBackupDRSpec {
		return &v
	}).(ServiceIntegrationSpecBackupDRSpecPtrOutput)
}

// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
func (o ServiceIntegrationSpecBackupDRSpecOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIntegrationSpecBackupDRSpec) *string { return v.Plan }).(pulumi.StringPtrOutput)
}

type ServiceIntegrationSpecBackupDRSpecPtrOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecBackupDRSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIntegrationSpecBackupDRSpec)(nil)).Elem()
}

func (o ServiceIntegrationSpecBackupDRSpecPtrOutput) ToServiceIntegrationSpecBackupDRSpecPtrOutput() ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o
}

func (o ServiceIntegrationSpecBackupDRSpecPtrOutput) ToServiceIntegrationSpecBackupDRSpecPtrOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecPtrOutput {
	return o
}

func (o ServiceIntegrationSpecBackupDRSpecPtrOutput) Elem() ServiceIntegrationSpecBackupDRSpecOutput {
	return o.ApplyT(func(v *ServiceIntegrationSpecBackupDRSpec) ServiceIntegrationSpecBackupDRSpec {
		if v != nil {
			return *v
		}
		var ret ServiceIntegrationSpecBackupDRSpec
		return ret
	}).(ServiceIntegrationSpecBackupDRSpecOutput)
}

// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
func (o ServiceIntegrationSpecBackupDRSpecPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIntegrationSpecBackupDRSpec) *string {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(pulumi.StringPtrOutput)
}

// Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.
type ServiceIntegrationSpecBackupDRSpecResponse struct {
	// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
	Plan string `pulumi:"plan"`
}

// Specifies parameters to Backup and DR to attach a BackupPlan to a compute instance for managed VM backup.
type ServiceIntegrationSpecBackupDRSpecResponseOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecBackupDRSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpecBackupDRSpecResponse)(nil)).Elem()
}

func (o ServiceIntegrationSpecBackupDRSpecResponseOutput) ToServiceIntegrationSpecBackupDRSpecResponseOutput() ServiceIntegrationSpecBackupDRSpecResponseOutput {
	return o
}

func (o ServiceIntegrationSpecBackupDRSpecResponseOutput) ToServiceIntegrationSpecBackupDRSpecResponseOutputWithContext(ctx context.Context) ServiceIntegrationSpecBackupDRSpecResponseOutput {
	return o
}

// The BackupPlan resource to attach to the instance. Specified as a resource reference in instances, and regional instance templates, and as just the plan name in global instance templates
func (o ServiceIntegrationSpecBackupDRSpecResponseOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIntegrationSpecBackupDRSpecResponse) string { return v.Plan }).(pulumi.StringOutput)
}

// Specifies the parameters to configure an integration with instances.
type ServiceIntegrationSpecResponse struct {
	BackupDr ServiceIntegrationSpecBackupDRSpecResponse `pulumi:"backupDr"`
}

// Specifies the parameters to configure an integration with instances.
type ServiceIntegrationSpecResponseOutput struct{ *pulumi.OutputState }

func (ServiceIntegrationSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIntegrationSpecResponse)(nil)).Elem()
}

func (o ServiceIntegrationSpecResponseOutput) ToServiceIntegrationSpecResponseOutput() ServiceIntegrationSpecResponseOutput {
	return o
}

func (o ServiceIntegrationSpecResponseOutput) ToServiceIntegrationSpecResponseOutputWithContext(ctx context.Context) ServiceIntegrationSpecResponseOutput {
	return o
}

func (o ServiceIntegrationSpecResponseOutput) BackupDr() ServiceIntegrationSpecBackupDRSpecResponseOutput {
	return o.ApplyT(func(v ServiceIntegrationSpecResponse) ServiceIntegrationSpecBackupDRSpecResponse { return v.BackupDr }).(ServiceIntegrationSpecBackupDRSpecResponseOutput)
}

// The share setting for reservations and sole tenancy node groups.
type ShareSettings struct {
	// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
	FolderMap *ShareSettingsFolderConfig `pulumi:"folderMap"`
	// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	ProjectMap *ShareSettingsProjectConfig `pulumi:"projectMap"`
	// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	Projects []string `pulumi:"projects"`
	// Type of sharing for this shared-reservation
	ShareType *ShareSettingsShareType `pulumi:"shareType"`
}

// ShareSettingsInput is an input type that accepts ShareSettingsArgs and ShareSettingsOutput values.
// You can construct a concrete instance of `ShareSettingsInput` via:
//
//	ShareSettingsArgs{...}
type ShareSettingsInput interface {
	pulumi.Input

	ToShareSettingsOutput() ShareSettingsOutput
	ToShareSettingsOutputWithContext(context.Context) ShareSettingsOutput
}

// The share setting for reservations and sole tenancy node groups.
type ShareSettingsArgs struct {
	// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
	FolderMap ShareSettingsFolderConfigPtrInput `pulumi:"folderMap"`
	// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	ProjectMap ShareSettingsProjectConfigPtrInput `pulumi:"projectMap"`
	// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	Projects pulumi.StringArrayInput `pulumi:"projects"`
	// Type of sharing for this shared-reservation
	ShareType ShareSettingsShareTypePtrInput `pulumi:"shareType"`
}

func (ShareSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettings)(nil)).Elem()
}

func (i ShareSettingsArgs) ToShareSettingsOutput() ShareSettingsOutput {
	return i.ToShareSettingsOutputWithContext(context.Background())
}

func (i ShareSettingsArgs) ToShareSettingsOutputWithContext(ctx context.Context) ShareSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsOutput)
}

func (i ShareSettingsArgs) ToShareSettingsPtrOutput() ShareSettingsPtrOutput {
	return i.ToShareSettingsPtrOutputWithContext(context.Background())
}

func (i ShareSettingsArgs) ToShareSettingsPtrOutputWithContext(ctx context.Context) ShareSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsOutput).ToShareSettingsPtrOutputWithContext(ctx)
}

// ShareSettingsPtrInput is an input type that accepts ShareSettingsArgs, ShareSettingsPtr and ShareSettingsPtrOutput values.
// You can construct a concrete instance of `ShareSettingsPtrInput` via:
//
//	        ShareSettingsArgs{...}
//
//	or:
//
//	        nil
type ShareSettingsPtrInput interface {
	pulumi.Input

	ToShareSettingsPtrOutput() ShareSettingsPtrOutput
	ToShareSettingsPtrOutputWithContext(context.Context) ShareSettingsPtrOutput
}

type shareSettingsPtrType ShareSettingsArgs

func ShareSettingsPtr(v *ShareSettingsArgs) ShareSettingsPtrInput {
	return (*shareSettingsPtrType)(v)
}

func (*shareSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettings)(nil)).Elem()
}

func (i *shareSettingsPtrType) ToShareSettingsPtrOutput() ShareSettingsPtrOutput {
	return i.ToShareSettingsPtrOutputWithContext(context.Background())
}

func (i *shareSettingsPtrType) ToShareSettingsPtrOutputWithContext(ctx context.Context) ShareSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsPtrOutput)
}

// The share setting for reservations and sole tenancy node groups.
type ShareSettingsOutput struct{ *pulumi.OutputState }

func (ShareSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettings)(nil)).Elem()
}

func (o ShareSettingsOutput) ToShareSettingsOutput() ShareSettingsOutput {
	return o
}

func (o ShareSettingsOutput) ToShareSettingsOutputWithContext(ctx context.Context) ShareSettingsOutput {
	return o
}

func (o ShareSettingsOutput) ToShareSettingsPtrOutput() ShareSettingsPtrOutput {
	return o.ToShareSettingsPtrOutputWithContext(context.Background())
}

func (o ShareSettingsOutput) ToShareSettingsPtrOutputWithContext(ctx context.Context) ShareSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareSettings) *ShareSettings {
		return &v
	}).(ShareSettingsPtrOutput)
}

// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsOutput) FolderMap() ShareSettingsFolderConfigPtrOutput {
	return o.ApplyT(func(v ShareSettings) *ShareSettingsFolderConfig { return v.FolderMap }).(ShareSettingsFolderConfigPtrOutput)
}

// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsOutput) ProjectMap() ShareSettingsProjectConfigPtrOutput {
	return o.ApplyT(func(v ShareSettings) *ShareSettingsProjectConfig { return v.ProjectMap }).(ShareSettingsProjectConfigPtrOutput)
}

// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ShareSettings) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// Type of sharing for this shared-reservation
func (o ShareSettingsOutput) ShareType() ShareSettingsShareTypePtrOutput {
	return o.ApplyT(func(v ShareSettings) *ShareSettingsShareType { return v.ShareType }).(ShareSettingsShareTypePtrOutput)
}

type ShareSettingsPtrOutput struct{ *pulumi.OutputState }

func (ShareSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettings)(nil)).Elem()
}

func (o ShareSettingsPtrOutput) ToShareSettingsPtrOutput() ShareSettingsPtrOutput {
	return o
}

func (o ShareSettingsPtrOutput) ToShareSettingsPtrOutputWithContext(ctx context.Context) ShareSettingsPtrOutput {
	return o
}

func (o ShareSettingsPtrOutput) Elem() ShareSettingsOutput {
	return o.ApplyT(func(v *ShareSettings) ShareSettings {
		if v != nil {
			return *v
		}
		var ret ShareSettings
		return ret
	}).(ShareSettingsOutput)
}

// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsPtrOutput) FolderMap() ShareSettingsFolderConfigPtrOutput {
	return o.ApplyT(func(v *ShareSettings) *ShareSettingsFolderConfig {
		if v == nil {
			return nil
		}
		return v.FolderMap
	}).(ShareSettingsFolderConfigPtrOutput)
}

// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsPtrOutput) ProjectMap() ShareSettingsProjectConfigPtrOutput {
	return o.ApplyT(func(v *ShareSettings) *ShareSettingsProjectConfig {
		if v == nil {
			return nil
		}
		return v.ProjectMap
	}).(ShareSettingsProjectConfigPtrOutput)
}

// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsPtrOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ShareSettings) []string {
		if v == nil {
			return nil
		}
		return v.Projects
	}).(pulumi.StringArrayOutput)
}

// Type of sharing for this shared-reservation
func (o ShareSettingsPtrOutput) ShareType() ShareSettingsShareTypePtrOutput {
	return o.ApplyT(func(v *ShareSettings) *ShareSettingsShareType {
		if v == nil {
			return nil
		}
		return v.ShareType
	}).(ShareSettingsShareTypePtrOutput)
}

// Config for each folder in the share settings.
type ShareSettingsFolderConfig struct {
	// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
	FolderId *string `pulumi:"folderId"`
}

// ShareSettingsFolderConfigInput is an input type that accepts ShareSettingsFolderConfigArgs and ShareSettingsFolderConfigOutput values.
// You can construct a concrete instance of `ShareSettingsFolderConfigInput` via:
//
//	ShareSettingsFolderConfigArgs{...}
type ShareSettingsFolderConfigInput interface {
	pulumi.Input

	ToShareSettingsFolderConfigOutput() ShareSettingsFolderConfigOutput
	ToShareSettingsFolderConfigOutputWithContext(context.Context) ShareSettingsFolderConfigOutput
}

// Config for each folder in the share settings.
type ShareSettingsFolderConfigArgs struct {
	// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
}

func (ShareSettingsFolderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsFolderConfig)(nil)).Elem()
}

func (i ShareSettingsFolderConfigArgs) ToShareSettingsFolderConfigOutput() ShareSettingsFolderConfigOutput {
	return i.ToShareSettingsFolderConfigOutputWithContext(context.Background())
}

func (i ShareSettingsFolderConfigArgs) ToShareSettingsFolderConfigOutputWithContext(ctx context.Context) ShareSettingsFolderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsFolderConfigOutput)
}

func (i ShareSettingsFolderConfigArgs) ToShareSettingsFolderConfigPtrOutput() ShareSettingsFolderConfigPtrOutput {
	return i.ToShareSettingsFolderConfigPtrOutputWithContext(context.Background())
}

func (i ShareSettingsFolderConfigArgs) ToShareSettingsFolderConfigPtrOutputWithContext(ctx context.Context) ShareSettingsFolderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsFolderConfigOutput).ToShareSettingsFolderConfigPtrOutputWithContext(ctx)
}

// ShareSettingsFolderConfigPtrInput is an input type that accepts ShareSettingsFolderConfigArgs, ShareSettingsFolderConfigPtr and ShareSettingsFolderConfigPtrOutput values.
// You can construct a concrete instance of `ShareSettingsFolderConfigPtrInput` via:
//
//	        ShareSettingsFolderConfigArgs{...}
//
//	or:
//
//	        nil
type ShareSettingsFolderConfigPtrInput interface {
	pulumi.Input

	ToShareSettingsFolderConfigPtrOutput() ShareSettingsFolderConfigPtrOutput
	ToShareSettingsFolderConfigPtrOutputWithContext(context.Context) ShareSettingsFolderConfigPtrOutput
}

type shareSettingsFolderConfigPtrType ShareSettingsFolderConfigArgs

func ShareSettingsFolderConfigPtr(v *ShareSettingsFolderConfigArgs) ShareSettingsFolderConfigPtrInput {
	return (*shareSettingsFolderConfigPtrType)(v)
}

func (*shareSettingsFolderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettingsFolderConfig)(nil)).Elem()
}

func (i *shareSettingsFolderConfigPtrType) ToShareSettingsFolderConfigPtrOutput() ShareSettingsFolderConfigPtrOutput {
	return i.ToShareSettingsFolderConfigPtrOutputWithContext(context.Background())
}

func (i *shareSettingsFolderConfigPtrType) ToShareSettingsFolderConfigPtrOutputWithContext(ctx context.Context) ShareSettingsFolderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsFolderConfigPtrOutput)
}

// Config for each folder in the share settings.
type ShareSettingsFolderConfigOutput struct{ *pulumi.OutputState }

func (ShareSettingsFolderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsFolderConfig)(nil)).Elem()
}

func (o ShareSettingsFolderConfigOutput) ToShareSettingsFolderConfigOutput() ShareSettingsFolderConfigOutput {
	return o
}

func (o ShareSettingsFolderConfigOutput) ToShareSettingsFolderConfigOutputWithContext(ctx context.Context) ShareSettingsFolderConfigOutput {
	return o
}

func (o ShareSettingsFolderConfigOutput) ToShareSettingsFolderConfigPtrOutput() ShareSettingsFolderConfigPtrOutput {
	return o.ToShareSettingsFolderConfigPtrOutputWithContext(context.Background())
}

func (o ShareSettingsFolderConfigOutput) ToShareSettingsFolderConfigPtrOutputWithContext(ctx context.Context) ShareSettingsFolderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareSettingsFolderConfig) *ShareSettingsFolderConfig {
		return &v
	}).(ShareSettingsFolderConfigPtrOutput)
}

// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsFolderConfigOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSettingsFolderConfig) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

type ShareSettingsFolderConfigPtrOutput struct{ *pulumi.OutputState }

func (ShareSettingsFolderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettingsFolderConfig)(nil)).Elem()
}

func (o ShareSettingsFolderConfigPtrOutput) ToShareSettingsFolderConfigPtrOutput() ShareSettingsFolderConfigPtrOutput {
	return o
}

func (o ShareSettingsFolderConfigPtrOutput) ToShareSettingsFolderConfigPtrOutputWithContext(ctx context.Context) ShareSettingsFolderConfigPtrOutput {
	return o
}

func (o ShareSettingsFolderConfigPtrOutput) Elem() ShareSettingsFolderConfigOutput {
	return o.ApplyT(func(v *ShareSettingsFolderConfig) ShareSettingsFolderConfig {
		if v != nil {
			return *v
		}
		var ret ShareSettingsFolderConfig
		return ret
	}).(ShareSettingsFolderConfigOutput)
}

// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsFolderConfigPtrOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSettingsFolderConfig) *string {
		if v == nil {
			return nil
		}
		return v.FolderId
	}).(pulumi.StringPtrOutput)
}

// Config for each folder in the share settings.
type ShareSettingsFolderConfigResponse struct {
	// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
	FolderId string `pulumi:"folderId"`
}

// Config for each folder in the share settings.
type ShareSettingsFolderConfigResponseOutput struct{ *pulumi.OutputState }

func (ShareSettingsFolderConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsFolderConfigResponse)(nil)).Elem()
}

func (o ShareSettingsFolderConfigResponseOutput) ToShareSettingsFolderConfigResponseOutput() ShareSettingsFolderConfigResponseOutput {
	return o
}

func (o ShareSettingsFolderConfigResponseOutput) ToShareSettingsFolderConfigResponseOutputWithContext(ctx context.Context) ShareSettingsFolderConfigResponseOutput {
	return o
}

// The folder ID, should be same as the key of this folder config in the parent map. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsFolderConfigResponseOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSettingsFolderConfigResponse) string { return v.FolderId }).(pulumi.StringOutput)
}

// Config for each project in the share settings.
type ShareSettingsProjectConfig struct {
	// The project ID, should be same as the key of this project config in the parent map.
	Project *string `pulumi:"project"`
}

// ShareSettingsProjectConfigInput is an input type that accepts ShareSettingsProjectConfigArgs and ShareSettingsProjectConfigOutput values.
// You can construct a concrete instance of `ShareSettingsProjectConfigInput` via:
//
//	ShareSettingsProjectConfigArgs{...}
type ShareSettingsProjectConfigInput interface {
	pulumi.Input

	ToShareSettingsProjectConfigOutput() ShareSettingsProjectConfigOutput
	ToShareSettingsProjectConfigOutputWithContext(context.Context) ShareSettingsProjectConfigOutput
}

// Config for each project in the share settings.
type ShareSettingsProjectConfigArgs struct {
	// The project ID, should be same as the key of this project config in the parent map.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (ShareSettingsProjectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsProjectConfig)(nil)).Elem()
}

func (i ShareSettingsProjectConfigArgs) ToShareSettingsProjectConfigOutput() ShareSettingsProjectConfigOutput {
	return i.ToShareSettingsProjectConfigOutputWithContext(context.Background())
}

func (i ShareSettingsProjectConfigArgs) ToShareSettingsProjectConfigOutputWithContext(ctx context.Context) ShareSettingsProjectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsProjectConfigOutput)
}

func (i ShareSettingsProjectConfigArgs) ToShareSettingsProjectConfigPtrOutput() ShareSettingsProjectConfigPtrOutput {
	return i.ToShareSettingsProjectConfigPtrOutputWithContext(context.Background())
}

func (i ShareSettingsProjectConfigArgs) ToShareSettingsProjectConfigPtrOutputWithContext(ctx context.Context) ShareSettingsProjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsProjectConfigOutput).ToShareSettingsProjectConfigPtrOutputWithContext(ctx)
}

// ShareSettingsProjectConfigPtrInput is an input type that accepts ShareSettingsProjectConfigArgs, ShareSettingsProjectConfigPtr and ShareSettingsProjectConfigPtrOutput values.
// You can construct a concrete instance of `ShareSettingsProjectConfigPtrInput` via:
//
//	        ShareSettingsProjectConfigArgs{...}
//
//	or:
//
//	        nil
type ShareSettingsProjectConfigPtrInput interface {
	pulumi.Input

	ToShareSettingsProjectConfigPtrOutput() ShareSettingsProjectConfigPtrOutput
	ToShareSettingsProjectConfigPtrOutputWithContext(context.Context) ShareSettingsProjectConfigPtrOutput
}

type shareSettingsProjectConfigPtrType ShareSettingsProjectConfigArgs

func ShareSettingsProjectConfigPtr(v *ShareSettingsProjectConfigArgs) ShareSettingsProjectConfigPtrInput {
	return (*shareSettingsProjectConfigPtrType)(v)
}

func (*shareSettingsProjectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettingsProjectConfig)(nil)).Elem()
}

func (i *shareSettingsProjectConfigPtrType) ToShareSettingsProjectConfigPtrOutput() ShareSettingsProjectConfigPtrOutput {
	return i.ToShareSettingsProjectConfigPtrOutputWithContext(context.Background())
}

func (i *shareSettingsProjectConfigPtrType) ToShareSettingsProjectConfigPtrOutputWithContext(ctx context.Context) ShareSettingsProjectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShareSettingsProjectConfigPtrOutput)
}

// Config for each project in the share settings.
type ShareSettingsProjectConfigOutput struct{ *pulumi.OutputState }

func (ShareSettingsProjectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsProjectConfig)(nil)).Elem()
}

func (o ShareSettingsProjectConfigOutput) ToShareSettingsProjectConfigOutput() ShareSettingsProjectConfigOutput {
	return o
}

func (o ShareSettingsProjectConfigOutput) ToShareSettingsProjectConfigOutputWithContext(ctx context.Context) ShareSettingsProjectConfigOutput {
	return o
}

func (o ShareSettingsProjectConfigOutput) ToShareSettingsProjectConfigPtrOutput() ShareSettingsProjectConfigPtrOutput {
	return o.ToShareSettingsProjectConfigPtrOutputWithContext(context.Background())
}

func (o ShareSettingsProjectConfigOutput) ToShareSettingsProjectConfigPtrOutputWithContext(ctx context.Context) ShareSettingsProjectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShareSettingsProjectConfig) *ShareSettingsProjectConfig {
		return &v
	}).(ShareSettingsProjectConfigPtrOutput)
}

// The project ID, should be same as the key of this project config in the parent map.
func (o ShareSettingsProjectConfigOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShareSettingsProjectConfig) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type ShareSettingsProjectConfigPtrOutput struct{ *pulumi.OutputState }

func (ShareSettingsProjectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShareSettingsProjectConfig)(nil)).Elem()
}

func (o ShareSettingsProjectConfigPtrOutput) ToShareSettingsProjectConfigPtrOutput() ShareSettingsProjectConfigPtrOutput {
	return o
}

func (o ShareSettingsProjectConfigPtrOutput) ToShareSettingsProjectConfigPtrOutputWithContext(ctx context.Context) ShareSettingsProjectConfigPtrOutput {
	return o
}

func (o ShareSettingsProjectConfigPtrOutput) Elem() ShareSettingsProjectConfigOutput {
	return o.ApplyT(func(v *ShareSettingsProjectConfig) ShareSettingsProjectConfig {
		if v != nil {
			return *v
		}
		var ret ShareSettingsProjectConfig
		return ret
	}).(ShareSettingsProjectConfigOutput)
}

// The project ID, should be same as the key of this project config in the parent map.
func (o ShareSettingsProjectConfigPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShareSettingsProjectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Config for each project in the share settings.
type ShareSettingsProjectConfigResponse struct {
	// The project ID, should be same as the key of this project config in the parent map.
	Project string `pulumi:"project"`
}

// Config for each project in the share settings.
type ShareSettingsProjectConfigResponseOutput struct{ *pulumi.OutputState }

func (ShareSettingsProjectConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsProjectConfigResponse)(nil)).Elem()
}

func (o ShareSettingsProjectConfigResponseOutput) ToShareSettingsProjectConfigResponseOutput() ShareSettingsProjectConfigResponseOutput {
	return o
}

func (o ShareSettingsProjectConfigResponseOutput) ToShareSettingsProjectConfigResponseOutputWithContext(ctx context.Context) ShareSettingsProjectConfigResponseOutput {
	return o
}

// The project ID, should be same as the key of this project config in the parent map.
func (o ShareSettingsProjectConfigResponseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSettingsProjectConfigResponse) string { return v.Project }).(pulumi.StringOutput)
}

// The share setting for reservations and sole tenancy node groups.
type ShareSettingsResponse struct {
	// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
	FolderMap ShareSettingsFolderConfigResponse `pulumi:"folderMap"`
	// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	ProjectMap ShareSettingsProjectConfigResponse `pulumi:"projectMap"`
	// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
	Projects []string `pulumi:"projects"`
	// Type of sharing for this shared-reservation
	ShareType string `pulumi:"shareType"`
}

// The share setting for reservations and sole tenancy node groups.
type ShareSettingsResponseOutput struct{ *pulumi.OutputState }

func (ShareSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShareSettingsResponse)(nil)).Elem()
}

func (o ShareSettingsResponseOutput) ToShareSettingsResponseOutput() ShareSettingsResponseOutput {
	return o
}

func (o ShareSettingsResponseOutput) ToShareSettingsResponseOutputWithContext(ctx context.Context) ShareSettingsResponseOutput {
	return o
}

// A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
func (o ShareSettingsResponseOutput) FolderMap() ShareSettingsFolderConfigResponseOutput {
	return o.ApplyT(func(v ShareSettingsResponse) ShareSettingsFolderConfigResponse { return v.FolderMap }).(ShareSettingsFolderConfigResponseOutput)
}

// A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsResponseOutput) ProjectMap() ShareSettingsProjectConfigResponseOutput {
	return o.ApplyT(func(v ShareSettingsResponse) ShareSettingsProjectConfigResponse { return v.ProjectMap }).(ShareSettingsProjectConfigResponseOutput)
}

// A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
func (o ShareSettingsResponseOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ShareSettingsResponse) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// Type of sharing for this shared-reservation
func (o ShareSettingsResponseOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v ShareSettingsResponse) string { return v.ShareType }).(pulumi.StringOutput)
}

// A set of Shielded Instance options.
type ShieldedInstanceConfig struct {
	// Defines whether the instance has integrity monitoring enabled. Enabled by default.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled. Disabled by default.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled. Enabled by default.
	EnableVtpm *bool `pulumi:"enableVtpm"`
}

// ShieldedInstanceConfigInput is an input type that accepts ShieldedInstanceConfigArgs and ShieldedInstanceConfigOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigInput` via:
//
//	ShieldedInstanceConfigArgs{...}
type ShieldedInstanceConfigInput interface {
	pulumi.Input

	ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput
	ToShieldedInstanceConfigOutputWithContext(context.Context) ShieldedInstanceConfigOutput
}

// A set of Shielded Instance options.
type ShieldedInstanceConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled. Enabled by default.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled. Disabled by default.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled. Enabled by default.
	EnableVtpm pulumi.BoolPtrInput `pulumi:"enableVtpm"`
}

func (ShieldedInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfig)(nil)).Elem()
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput {
	return i.ToShieldedInstanceConfigOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigOutputWithContext(ctx context.Context) ShieldedInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigOutput)
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return i.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i ShieldedInstanceConfigArgs) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigOutput).ToShieldedInstanceConfigPtrOutputWithContext(ctx)
}

// ShieldedInstanceConfigPtrInput is an input type that accepts ShieldedInstanceConfigArgs, ShieldedInstanceConfigPtr and ShieldedInstanceConfigPtrOutput values.
// You can construct a concrete instance of `ShieldedInstanceConfigPtrInput` via:
//
//	        ShieldedInstanceConfigArgs{...}
//
//	or:
//
//	        nil
type ShieldedInstanceConfigPtrInput interface {
	pulumi.Input

	ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput
	ToShieldedInstanceConfigPtrOutputWithContext(context.Context) ShieldedInstanceConfigPtrOutput
}

type shieldedInstanceConfigPtrType ShieldedInstanceConfigArgs

func ShieldedInstanceConfigPtr(v *ShieldedInstanceConfigArgs) ShieldedInstanceConfigPtrInput {
	return (*shieldedInstanceConfigPtrType)(v)
}

func (*shieldedInstanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfig)(nil)).Elem()
}

func (i *shieldedInstanceConfigPtrType) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return i.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *shieldedInstanceConfigPtrType) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceConfigPtrOutput)
}

// A set of Shielded Instance options.
type ShieldedInstanceConfigOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfig)(nil)).Elem()
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigOutput() ShieldedInstanceConfigOutput {
	return o
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigOutputWithContext(ctx context.Context) ShieldedInstanceConfigOutput {
	return o
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return o.ToShieldedInstanceConfigPtrOutputWithContext(context.Background())
}

func (o ShieldedInstanceConfigOutput) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShieldedInstanceConfig) *ShieldedInstanceConfig {
		return &v
	}).(ShieldedInstanceConfigPtrOutput)
}

// Defines whether the instance has integrity monitoring enabled. Enabled by default.
func (o ShieldedInstanceConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled. Disabled by default.
func (o ShieldedInstanceConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled. Enabled by default.
func (o ShieldedInstanceConfigOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceConfig) *bool { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

type ShieldedInstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceConfig)(nil)).Elem()
}

func (o ShieldedInstanceConfigPtrOutput) ToShieldedInstanceConfigPtrOutput() ShieldedInstanceConfigPtrOutput {
	return o
}

func (o ShieldedInstanceConfigPtrOutput) ToShieldedInstanceConfigPtrOutputWithContext(ctx context.Context) ShieldedInstanceConfigPtrOutput {
	return o
}

func (o ShieldedInstanceConfigPtrOutput) Elem() ShieldedInstanceConfigOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) ShieldedInstanceConfig {
		if v != nil {
			return *v
		}
		var ret ShieldedInstanceConfig
		return ret
	}).(ShieldedInstanceConfigOutput)
}

// Defines whether the instance has integrity monitoring enabled. Enabled by default.
func (o ShieldedInstanceConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled. Disabled by default.
func (o ShieldedInstanceConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled. Enabled by default.
func (o ShieldedInstanceConfigPtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

// A set of Shielded Instance options.
type ShieldedInstanceConfigResponse struct {
	// Defines whether the instance has integrity monitoring enabled. Enabled by default.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled. Disabled by default.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled. Enabled by default.
	EnableVtpm bool `pulumi:"enableVtpm"`
}

// A set of Shielded Instance options.
type ShieldedInstanceConfigResponseOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceConfigResponse)(nil)).Elem()
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponseOutput() ShieldedInstanceConfigResponseOutput {
	return o
}

func (o ShieldedInstanceConfigResponseOutput) ToShieldedInstanceConfigResponseOutputWithContext(ctx context.Context) ShieldedInstanceConfigResponseOutput {
	return o
}

// Defines whether the instance has integrity monitoring enabled. Enabled by default.
func (o ShieldedInstanceConfigResponseOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

// Defines whether the instance has Secure Boot enabled. Disabled by default.
func (o ShieldedInstanceConfigResponseOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

// Defines whether the instance has the vTPM enabled. Enabled by default.
func (o ShieldedInstanceConfigResponseOutput) EnableVtpm() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceConfigResponse) bool { return v.EnableVtpm }).(pulumi.BoolOutput)
}

// The policy describes the baseline against which Instance boot integrity is measured.
type ShieldedInstanceIntegrityPolicy struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy *bool `pulumi:"updateAutoLearnPolicy"`
}

// ShieldedInstanceIntegrityPolicyInput is an input type that accepts ShieldedInstanceIntegrityPolicyArgs and ShieldedInstanceIntegrityPolicyOutput values.
// You can construct a concrete instance of `ShieldedInstanceIntegrityPolicyInput` via:
//
//	ShieldedInstanceIntegrityPolicyArgs{...}
type ShieldedInstanceIntegrityPolicyInput interface {
	pulumi.Input

	ToShieldedInstanceIntegrityPolicyOutput() ShieldedInstanceIntegrityPolicyOutput
	ToShieldedInstanceIntegrityPolicyOutputWithContext(context.Context) ShieldedInstanceIntegrityPolicyOutput
}

// The policy describes the baseline against which Instance boot integrity is measured.
type ShieldedInstanceIntegrityPolicyArgs struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy pulumi.BoolPtrInput `pulumi:"updateAutoLearnPolicy"`
}

func (ShieldedInstanceIntegrityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceIntegrityPolicy)(nil)).Elem()
}

func (i ShieldedInstanceIntegrityPolicyArgs) ToShieldedInstanceIntegrityPolicyOutput() ShieldedInstanceIntegrityPolicyOutput {
	return i.ToShieldedInstanceIntegrityPolicyOutputWithContext(context.Background())
}

func (i ShieldedInstanceIntegrityPolicyArgs) ToShieldedInstanceIntegrityPolicyOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceIntegrityPolicyOutput)
}

func (i ShieldedInstanceIntegrityPolicyArgs) ToShieldedInstanceIntegrityPolicyPtrOutput() ShieldedInstanceIntegrityPolicyPtrOutput {
	return i.ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (i ShieldedInstanceIntegrityPolicyArgs) ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceIntegrityPolicyOutput).ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(ctx)
}

// ShieldedInstanceIntegrityPolicyPtrInput is an input type that accepts ShieldedInstanceIntegrityPolicyArgs, ShieldedInstanceIntegrityPolicyPtr and ShieldedInstanceIntegrityPolicyPtrOutput values.
// You can construct a concrete instance of `ShieldedInstanceIntegrityPolicyPtrInput` via:
//
//	        ShieldedInstanceIntegrityPolicyArgs{...}
//
//	or:
//
//	        nil
type ShieldedInstanceIntegrityPolicyPtrInput interface {
	pulumi.Input

	ToShieldedInstanceIntegrityPolicyPtrOutput() ShieldedInstanceIntegrityPolicyPtrOutput
	ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(context.Context) ShieldedInstanceIntegrityPolicyPtrOutput
}

type shieldedInstanceIntegrityPolicyPtrType ShieldedInstanceIntegrityPolicyArgs

func ShieldedInstanceIntegrityPolicyPtr(v *ShieldedInstanceIntegrityPolicyArgs) ShieldedInstanceIntegrityPolicyPtrInput {
	return (*shieldedInstanceIntegrityPolicyPtrType)(v)
}

func (*shieldedInstanceIntegrityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceIntegrityPolicy)(nil)).Elem()
}

func (i *shieldedInstanceIntegrityPolicyPtrType) ToShieldedInstanceIntegrityPolicyPtrOutput() ShieldedInstanceIntegrityPolicyPtrOutput {
	return i.ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (i *shieldedInstanceIntegrityPolicyPtrType) ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedInstanceIntegrityPolicyPtrOutput)
}

// The policy describes the baseline against which Instance boot integrity is measured.
type ShieldedInstanceIntegrityPolicyOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceIntegrityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceIntegrityPolicy)(nil)).Elem()
}

func (o ShieldedInstanceIntegrityPolicyOutput) ToShieldedInstanceIntegrityPolicyOutput() ShieldedInstanceIntegrityPolicyOutput {
	return o
}

func (o ShieldedInstanceIntegrityPolicyOutput) ToShieldedInstanceIntegrityPolicyOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyOutput {
	return o
}

func (o ShieldedInstanceIntegrityPolicyOutput) ToShieldedInstanceIntegrityPolicyPtrOutput() ShieldedInstanceIntegrityPolicyPtrOutput {
	return o.ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (o ShieldedInstanceIntegrityPolicyOutput) ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShieldedInstanceIntegrityPolicy) *ShieldedInstanceIntegrityPolicy {
		return &v
	}).(ShieldedInstanceIntegrityPolicyPtrOutput)
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedInstanceIntegrityPolicyOutput) UpdateAutoLearnPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedInstanceIntegrityPolicy) *bool { return v.UpdateAutoLearnPolicy }).(pulumi.BoolPtrOutput)
}

type ShieldedInstanceIntegrityPolicyPtrOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceIntegrityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedInstanceIntegrityPolicy)(nil)).Elem()
}

func (o ShieldedInstanceIntegrityPolicyPtrOutput) ToShieldedInstanceIntegrityPolicyPtrOutput() ShieldedInstanceIntegrityPolicyPtrOutput {
	return o
}

func (o ShieldedInstanceIntegrityPolicyPtrOutput) ToShieldedInstanceIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyPtrOutput {
	return o
}

func (o ShieldedInstanceIntegrityPolicyPtrOutput) Elem() ShieldedInstanceIntegrityPolicyOutput {
	return o.ApplyT(func(v *ShieldedInstanceIntegrityPolicy) ShieldedInstanceIntegrityPolicy {
		if v != nil {
			return *v
		}
		var ret ShieldedInstanceIntegrityPolicy
		return ret
	}).(ShieldedInstanceIntegrityPolicyOutput)
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedInstanceIntegrityPolicyPtrOutput) UpdateAutoLearnPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedInstanceIntegrityPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAutoLearnPolicy
	}).(pulumi.BoolPtrOutput)
}

// The policy describes the baseline against which Instance boot integrity is measured.
type ShieldedInstanceIntegrityPolicyResponse struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy bool `pulumi:"updateAutoLearnPolicy"`
}

// The policy describes the baseline against which Instance boot integrity is measured.
type ShieldedInstanceIntegrityPolicyResponseOutput struct{ *pulumi.OutputState }

func (ShieldedInstanceIntegrityPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedInstanceIntegrityPolicyResponse)(nil)).Elem()
}

func (o ShieldedInstanceIntegrityPolicyResponseOutput) ToShieldedInstanceIntegrityPolicyResponseOutput() ShieldedInstanceIntegrityPolicyResponseOutput {
	return o
}

func (o ShieldedInstanceIntegrityPolicyResponseOutput) ToShieldedInstanceIntegrityPolicyResponseOutputWithContext(ctx context.Context) ShieldedInstanceIntegrityPolicyResponseOutput {
	return o
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedInstanceIntegrityPolicyResponseOutput) UpdateAutoLearnPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedInstanceIntegrityPolicyResponse) bool { return v.UpdateAutoLearnPolicy }).(pulumi.BoolOutput)
}

// A set of Shielded VM options.
type ShieldedVmConfig struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring *bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot *bool `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled.
	EnableVtpm *bool `pulumi:"enableVtpm"`
}

// ShieldedVmConfigInput is an input type that accepts ShieldedVmConfigArgs and ShieldedVmConfigOutput values.
// You can construct a concrete instance of `ShieldedVmConfigInput` via:
//
//	ShieldedVmConfigArgs{...}
type ShieldedVmConfigInput interface {
	pulumi.Input

	ToShieldedVmConfigOutput() ShieldedVmConfigOutput
	ToShieldedVmConfigOutputWithContext(context.Context) ShieldedVmConfigOutput
}

// A set of Shielded VM options.
type ShieldedVmConfigArgs struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring pulumi.BoolPtrInput `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot pulumi.BoolPtrInput `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled.
	EnableVtpm pulumi.BoolPtrInput `pulumi:"enableVtpm"`
}

func (ShieldedVmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmConfig)(nil)).Elem()
}

func (i ShieldedVmConfigArgs) ToShieldedVmConfigOutput() ShieldedVmConfigOutput {
	return i.ToShieldedVmConfigOutputWithContext(context.Background())
}

func (i ShieldedVmConfigArgs) ToShieldedVmConfigOutputWithContext(ctx context.Context) ShieldedVmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmConfigOutput)
}

func (i ShieldedVmConfigArgs) ToShieldedVmConfigPtrOutput() ShieldedVmConfigPtrOutput {
	return i.ToShieldedVmConfigPtrOutputWithContext(context.Background())
}

func (i ShieldedVmConfigArgs) ToShieldedVmConfigPtrOutputWithContext(ctx context.Context) ShieldedVmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmConfigOutput).ToShieldedVmConfigPtrOutputWithContext(ctx)
}

// ShieldedVmConfigPtrInput is an input type that accepts ShieldedVmConfigArgs, ShieldedVmConfigPtr and ShieldedVmConfigPtrOutput values.
// You can construct a concrete instance of `ShieldedVmConfigPtrInput` via:
//
//	        ShieldedVmConfigArgs{...}
//
//	or:
//
//	        nil
type ShieldedVmConfigPtrInput interface {
	pulumi.Input

	ToShieldedVmConfigPtrOutput() ShieldedVmConfigPtrOutput
	ToShieldedVmConfigPtrOutputWithContext(context.Context) ShieldedVmConfigPtrOutput
}

type shieldedVmConfigPtrType ShieldedVmConfigArgs

func ShieldedVmConfigPtr(v *ShieldedVmConfigArgs) ShieldedVmConfigPtrInput {
	return (*shieldedVmConfigPtrType)(v)
}

func (*shieldedVmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedVmConfig)(nil)).Elem()
}

func (i *shieldedVmConfigPtrType) ToShieldedVmConfigPtrOutput() ShieldedVmConfigPtrOutput {
	return i.ToShieldedVmConfigPtrOutputWithContext(context.Background())
}

func (i *shieldedVmConfigPtrType) ToShieldedVmConfigPtrOutputWithContext(ctx context.Context) ShieldedVmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmConfigPtrOutput)
}

// A set of Shielded VM options.
type ShieldedVmConfigOutput struct{ *pulumi.OutputState }

func (ShieldedVmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmConfig)(nil)).Elem()
}

func (o ShieldedVmConfigOutput) ToShieldedVmConfigOutput() ShieldedVmConfigOutput {
	return o
}

func (o ShieldedVmConfigOutput) ToShieldedVmConfigOutputWithContext(ctx context.Context) ShieldedVmConfigOutput {
	return o
}

func (o ShieldedVmConfigOutput) ToShieldedVmConfigPtrOutput() ShieldedVmConfigPtrOutput {
	return o.ToShieldedVmConfigPtrOutputWithContext(context.Background())
}

func (o ShieldedVmConfigOutput) ToShieldedVmConfigPtrOutputWithContext(ctx context.Context) ShieldedVmConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShieldedVmConfig) *ShieldedVmConfig {
		return &v
	}).(ShieldedVmConfigPtrOutput)
}

// Defines whether the instance has integrity monitoring enabled.
func (o ShieldedVmConfigOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedVmConfig) *bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o ShieldedVmConfigOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedVmConfig) *bool { return v.EnableSecureBoot }).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled.
func (o ShieldedVmConfigOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedVmConfig) *bool { return v.EnableVtpm }).(pulumi.BoolPtrOutput)
}

type ShieldedVmConfigPtrOutput struct{ *pulumi.OutputState }

func (ShieldedVmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedVmConfig)(nil)).Elem()
}

func (o ShieldedVmConfigPtrOutput) ToShieldedVmConfigPtrOutput() ShieldedVmConfigPtrOutput {
	return o
}

func (o ShieldedVmConfigPtrOutput) ToShieldedVmConfigPtrOutputWithContext(ctx context.Context) ShieldedVmConfigPtrOutput {
	return o
}

func (o ShieldedVmConfigPtrOutput) Elem() ShieldedVmConfigOutput {
	return o.ApplyT(func(v *ShieldedVmConfig) ShieldedVmConfig {
		if v != nil {
			return *v
		}
		var ret ShieldedVmConfig
		return ret
	}).(ShieldedVmConfigOutput)
}

// Defines whether the instance has integrity monitoring enabled.
func (o ShieldedVmConfigPtrOutput) EnableIntegrityMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedVmConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIntegrityMonitoring
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o ShieldedVmConfigPtrOutput) EnableSecureBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedVmConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecureBoot
	}).(pulumi.BoolPtrOutput)
}

// Defines whether the instance has the vTPM enabled.
func (o ShieldedVmConfigPtrOutput) EnableVtpm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedVmConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVtpm
	}).(pulumi.BoolPtrOutput)
}

// A set of Shielded VM options.
type ShieldedVmConfigResponse struct {
	// Defines whether the instance has integrity monitoring enabled.
	EnableIntegrityMonitoring bool `pulumi:"enableIntegrityMonitoring"`
	// Defines whether the instance has Secure Boot enabled.
	EnableSecureBoot bool `pulumi:"enableSecureBoot"`
	// Defines whether the instance has the vTPM enabled.
	EnableVtpm bool `pulumi:"enableVtpm"`
}

// A set of Shielded VM options.
type ShieldedVmConfigResponseOutput struct{ *pulumi.OutputState }

func (ShieldedVmConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmConfigResponse)(nil)).Elem()
}

func (o ShieldedVmConfigResponseOutput) ToShieldedVmConfigResponseOutput() ShieldedVmConfigResponseOutput {
	return o
}

func (o ShieldedVmConfigResponseOutput) ToShieldedVmConfigResponseOutputWithContext(ctx context.Context) ShieldedVmConfigResponseOutput {
	return o
}

// Defines whether the instance has integrity monitoring enabled.
func (o ShieldedVmConfigResponseOutput) EnableIntegrityMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedVmConfigResponse) bool { return v.EnableIntegrityMonitoring }).(pulumi.BoolOutput)
}

// Defines whether the instance has Secure Boot enabled.
func (o ShieldedVmConfigResponseOutput) EnableSecureBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedVmConfigResponse) bool { return v.EnableSecureBoot }).(pulumi.BoolOutput)
}

// Defines whether the instance has the vTPM enabled.
func (o ShieldedVmConfigResponseOutput) EnableVtpm() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedVmConfigResponse) bool { return v.EnableVtpm }).(pulumi.BoolOutput)
}

// The policy describes the baseline against which VM instance boot integrity is measured.
type ShieldedVmIntegrityPolicy struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy *bool `pulumi:"updateAutoLearnPolicy"`
}

// ShieldedVmIntegrityPolicyInput is an input type that accepts ShieldedVmIntegrityPolicyArgs and ShieldedVmIntegrityPolicyOutput values.
// You can construct a concrete instance of `ShieldedVmIntegrityPolicyInput` via:
//
//	ShieldedVmIntegrityPolicyArgs{...}
type ShieldedVmIntegrityPolicyInput interface {
	pulumi.Input

	ToShieldedVmIntegrityPolicyOutput() ShieldedVmIntegrityPolicyOutput
	ToShieldedVmIntegrityPolicyOutputWithContext(context.Context) ShieldedVmIntegrityPolicyOutput
}

// The policy describes the baseline against which VM instance boot integrity is measured.
type ShieldedVmIntegrityPolicyArgs struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy pulumi.BoolPtrInput `pulumi:"updateAutoLearnPolicy"`
}

func (ShieldedVmIntegrityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmIntegrityPolicy)(nil)).Elem()
}

func (i ShieldedVmIntegrityPolicyArgs) ToShieldedVmIntegrityPolicyOutput() ShieldedVmIntegrityPolicyOutput {
	return i.ToShieldedVmIntegrityPolicyOutputWithContext(context.Background())
}

func (i ShieldedVmIntegrityPolicyArgs) ToShieldedVmIntegrityPolicyOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmIntegrityPolicyOutput)
}

func (i ShieldedVmIntegrityPolicyArgs) ToShieldedVmIntegrityPolicyPtrOutput() ShieldedVmIntegrityPolicyPtrOutput {
	return i.ToShieldedVmIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (i ShieldedVmIntegrityPolicyArgs) ToShieldedVmIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmIntegrityPolicyOutput).ToShieldedVmIntegrityPolicyPtrOutputWithContext(ctx)
}

// ShieldedVmIntegrityPolicyPtrInput is an input type that accepts ShieldedVmIntegrityPolicyArgs, ShieldedVmIntegrityPolicyPtr and ShieldedVmIntegrityPolicyPtrOutput values.
// You can construct a concrete instance of `ShieldedVmIntegrityPolicyPtrInput` via:
//
//	        ShieldedVmIntegrityPolicyArgs{...}
//
//	or:
//
//	        nil
type ShieldedVmIntegrityPolicyPtrInput interface {
	pulumi.Input

	ToShieldedVmIntegrityPolicyPtrOutput() ShieldedVmIntegrityPolicyPtrOutput
	ToShieldedVmIntegrityPolicyPtrOutputWithContext(context.Context) ShieldedVmIntegrityPolicyPtrOutput
}

type shieldedVmIntegrityPolicyPtrType ShieldedVmIntegrityPolicyArgs

func ShieldedVmIntegrityPolicyPtr(v *ShieldedVmIntegrityPolicyArgs) ShieldedVmIntegrityPolicyPtrInput {
	return (*shieldedVmIntegrityPolicyPtrType)(v)
}

func (*shieldedVmIntegrityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedVmIntegrityPolicy)(nil)).Elem()
}

func (i *shieldedVmIntegrityPolicyPtrType) ToShieldedVmIntegrityPolicyPtrOutput() ShieldedVmIntegrityPolicyPtrOutput {
	return i.ToShieldedVmIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (i *shieldedVmIntegrityPolicyPtrType) ToShieldedVmIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShieldedVmIntegrityPolicyPtrOutput)
}

// The policy describes the baseline against which VM instance boot integrity is measured.
type ShieldedVmIntegrityPolicyOutput struct{ *pulumi.OutputState }

func (ShieldedVmIntegrityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmIntegrityPolicy)(nil)).Elem()
}

func (o ShieldedVmIntegrityPolicyOutput) ToShieldedVmIntegrityPolicyOutput() ShieldedVmIntegrityPolicyOutput {
	return o
}

func (o ShieldedVmIntegrityPolicyOutput) ToShieldedVmIntegrityPolicyOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyOutput {
	return o
}

func (o ShieldedVmIntegrityPolicyOutput) ToShieldedVmIntegrityPolicyPtrOutput() ShieldedVmIntegrityPolicyPtrOutput {
	return o.ToShieldedVmIntegrityPolicyPtrOutputWithContext(context.Background())
}

func (o ShieldedVmIntegrityPolicyOutput) ToShieldedVmIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ShieldedVmIntegrityPolicy) *ShieldedVmIntegrityPolicy {
		return &v
	}).(ShieldedVmIntegrityPolicyPtrOutput)
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedVmIntegrityPolicyOutput) UpdateAutoLearnPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ShieldedVmIntegrityPolicy) *bool { return v.UpdateAutoLearnPolicy }).(pulumi.BoolPtrOutput)
}

type ShieldedVmIntegrityPolicyPtrOutput struct{ *pulumi.OutputState }

func (ShieldedVmIntegrityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShieldedVmIntegrityPolicy)(nil)).Elem()
}

func (o ShieldedVmIntegrityPolicyPtrOutput) ToShieldedVmIntegrityPolicyPtrOutput() ShieldedVmIntegrityPolicyPtrOutput {
	return o
}

func (o ShieldedVmIntegrityPolicyPtrOutput) ToShieldedVmIntegrityPolicyPtrOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyPtrOutput {
	return o
}

func (o ShieldedVmIntegrityPolicyPtrOutput) Elem() ShieldedVmIntegrityPolicyOutput {
	return o.ApplyT(func(v *ShieldedVmIntegrityPolicy) ShieldedVmIntegrityPolicy {
		if v != nil {
			return *v
		}
		var ret ShieldedVmIntegrityPolicy
		return ret
	}).(ShieldedVmIntegrityPolicyOutput)
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedVmIntegrityPolicyPtrOutput) UpdateAutoLearnPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ShieldedVmIntegrityPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAutoLearnPolicy
	}).(pulumi.BoolPtrOutput)
}

// The policy describes the baseline against which VM instance boot integrity is measured.
type ShieldedVmIntegrityPolicyResponse struct {
	// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
	UpdateAutoLearnPolicy bool `pulumi:"updateAutoLearnPolicy"`
}

// The policy describes the baseline against which VM instance boot integrity is measured.
type ShieldedVmIntegrityPolicyResponseOutput struct{ *pulumi.OutputState }

func (ShieldedVmIntegrityPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShieldedVmIntegrityPolicyResponse)(nil)).Elem()
}

func (o ShieldedVmIntegrityPolicyResponseOutput) ToShieldedVmIntegrityPolicyResponseOutput() ShieldedVmIntegrityPolicyResponseOutput {
	return o
}

func (o ShieldedVmIntegrityPolicyResponseOutput) ToShieldedVmIntegrityPolicyResponseOutputWithContext(ctx context.Context) ShieldedVmIntegrityPolicyResponseOutput {
	return o
}

// Updates the integrity policy baseline using the measurements from the VM instance's most recent boot.
func (o ShieldedVmIntegrityPolicyResponseOutput) UpdateAutoLearnPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v ShieldedVmIntegrityPolicyResponse) bool { return v.UpdateAutoLearnPolicy }).(pulumi.BoolOutput)
}

type SourceDiskEncryptionKey struct {
	// The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
	DiskEncryptionKey *CustomerEncryptionKey `pulumi:"diskEncryptionKey"`
	// URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
	SourceDisk *string `pulumi:"sourceDisk"`
}

// SourceDiskEncryptionKeyInput is an input type that accepts SourceDiskEncryptionKeyArgs and SourceDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `SourceDiskEncryptionKeyInput` via:
//
//	SourceDiskEncryptionKeyArgs{...}
type SourceDiskEncryptionKeyInput interface {
	pulumi.Input

	ToSourceDiskEncryptionKeyOutput() SourceDiskEncryptionKeyOutput
	ToSourceDiskEncryptionKeyOutputWithContext(context.Context) SourceDiskEncryptionKeyOutput
}

type SourceDiskEncryptionKeyArgs struct {
	// The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
	DiskEncryptionKey CustomerEncryptionKeyPtrInput `pulumi:"diskEncryptionKey"`
	// URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
	SourceDisk pulumi.StringPtrInput `pulumi:"sourceDisk"`
}

func (SourceDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceDiskEncryptionKey)(nil)).Elem()
}

func (i SourceDiskEncryptionKeyArgs) ToSourceDiskEncryptionKeyOutput() SourceDiskEncryptionKeyOutput {
	return i.ToSourceDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i SourceDiskEncryptionKeyArgs) ToSourceDiskEncryptionKeyOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceDiskEncryptionKeyOutput)
}

// SourceDiskEncryptionKeyArrayInput is an input type that accepts SourceDiskEncryptionKeyArray and SourceDiskEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `SourceDiskEncryptionKeyArrayInput` via:
//
//	SourceDiskEncryptionKeyArray{ SourceDiskEncryptionKeyArgs{...} }
type SourceDiskEncryptionKeyArrayInput interface {
	pulumi.Input

	ToSourceDiskEncryptionKeyArrayOutput() SourceDiskEncryptionKeyArrayOutput
	ToSourceDiskEncryptionKeyArrayOutputWithContext(context.Context) SourceDiskEncryptionKeyArrayOutput
}

type SourceDiskEncryptionKeyArray []SourceDiskEncryptionKeyInput

func (SourceDiskEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceDiskEncryptionKey)(nil)).Elem()
}

func (i SourceDiskEncryptionKeyArray) ToSourceDiskEncryptionKeyArrayOutput() SourceDiskEncryptionKeyArrayOutput {
	return i.ToSourceDiskEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i SourceDiskEncryptionKeyArray) ToSourceDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceDiskEncryptionKeyArrayOutput)
}

type SourceDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (SourceDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceDiskEncryptionKey)(nil)).Elem()
}

func (o SourceDiskEncryptionKeyOutput) ToSourceDiskEncryptionKeyOutput() SourceDiskEncryptionKeyOutput {
	return o
}

func (o SourceDiskEncryptionKeyOutput) ToSourceDiskEncryptionKeyOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyOutput {
	return o
}

// The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
func (o SourceDiskEncryptionKeyOutput) DiskEncryptionKey() CustomerEncryptionKeyPtrOutput {
	return o.ApplyT(func(v SourceDiskEncryptionKey) *CustomerEncryptionKey { return v.DiskEncryptionKey }).(CustomerEncryptionKeyPtrOutput)
}

// URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
func (o SourceDiskEncryptionKeyOutput) SourceDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceDiskEncryptionKey) *string { return v.SourceDisk }).(pulumi.StringPtrOutput)
}

type SourceDiskEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (SourceDiskEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceDiskEncryptionKey)(nil)).Elem()
}

func (o SourceDiskEncryptionKeyArrayOutput) ToSourceDiskEncryptionKeyArrayOutput() SourceDiskEncryptionKeyArrayOutput {
	return o
}

func (o SourceDiskEncryptionKeyArrayOutput) ToSourceDiskEncryptionKeyArrayOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyArrayOutput {
	return o
}

func (o SourceDiskEncryptionKeyArrayOutput) Index(i pulumi.IntInput) SourceDiskEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceDiskEncryptionKey {
		return vs[0].([]SourceDiskEncryptionKey)[vs[1].(int)]
	}).(SourceDiskEncryptionKeyOutput)
}

type SourceDiskEncryptionKeyResponse struct {
	// The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
	DiskEncryptionKey CustomerEncryptionKeyResponse `pulumi:"diskEncryptionKey"`
	// URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
	SourceDisk string `pulumi:"sourceDisk"`
}

type SourceDiskEncryptionKeyResponseOutput struct{ *pulumi.OutputState }

func (SourceDiskEncryptionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceDiskEncryptionKeyResponse)(nil)).Elem()
}

func (o SourceDiskEncryptionKeyResponseOutput) ToSourceDiskEncryptionKeyResponseOutput() SourceDiskEncryptionKeyResponseOutput {
	return o
}

func (o SourceDiskEncryptionKeyResponseOutput) ToSourceDiskEncryptionKeyResponseOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyResponseOutput {
	return o
}

// The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
func (o SourceDiskEncryptionKeyResponseOutput) DiskEncryptionKey() CustomerEncryptionKeyResponseOutput {
	return o.ApplyT(func(v SourceDiskEncryptionKeyResponse) CustomerEncryptionKeyResponse { return v.DiskEncryptionKey }).(CustomerEncryptionKeyResponseOutput)
}

// URL of the disk attached to the source instance. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
func (o SourceDiskEncryptionKeyResponseOutput) SourceDisk() pulumi.StringOutput {
	return o.ApplyT(func(v SourceDiskEncryptionKeyResponse) string { return v.SourceDisk }).(pulumi.StringOutput)
}

type SourceDiskEncryptionKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (SourceDiskEncryptionKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceDiskEncryptionKeyResponse)(nil)).Elem()
}

func (o SourceDiskEncryptionKeyResponseArrayOutput) ToSourceDiskEncryptionKeyResponseArrayOutput() SourceDiskEncryptionKeyResponseArrayOutput {
	return o
}

func (o SourceDiskEncryptionKeyResponseArrayOutput) ToSourceDiskEncryptionKeyResponseArrayOutputWithContext(ctx context.Context) SourceDiskEncryptionKeyResponseArrayOutput {
	return o
}

func (o SourceDiskEncryptionKeyResponseArrayOutput) Index(i pulumi.IntInput) SourceDiskEncryptionKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceDiskEncryptionKeyResponse {
		return vs[0].([]SourceDiskEncryptionKeyResponse)[vs[1].(int)]
	}).(SourceDiskEncryptionKeyResponseOutput)
}

// A specification of the parameters to use when creating the instance template from a source instance.
type SourceInstanceParams struct {
	// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
	DiskConfigs []DiskInstantiationConfig `pulumi:"diskConfigs"`
}

// SourceInstanceParamsInput is an input type that accepts SourceInstanceParamsArgs and SourceInstanceParamsOutput values.
// You can construct a concrete instance of `SourceInstanceParamsInput` via:
//
//	SourceInstanceParamsArgs{...}
type SourceInstanceParamsInput interface {
	pulumi.Input

	ToSourceInstanceParamsOutput() SourceInstanceParamsOutput
	ToSourceInstanceParamsOutputWithContext(context.Context) SourceInstanceParamsOutput
}

// A specification of the parameters to use when creating the instance template from a source instance.
type SourceInstanceParamsArgs struct {
	// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
	DiskConfigs DiskInstantiationConfigArrayInput `pulumi:"diskConfigs"`
}

func (SourceInstanceParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInstanceParams)(nil)).Elem()
}

func (i SourceInstanceParamsArgs) ToSourceInstanceParamsOutput() SourceInstanceParamsOutput {
	return i.ToSourceInstanceParamsOutputWithContext(context.Background())
}

func (i SourceInstanceParamsArgs) ToSourceInstanceParamsOutputWithContext(ctx context.Context) SourceInstanceParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInstanceParamsOutput)
}

func (i SourceInstanceParamsArgs) ToSourceInstanceParamsPtrOutput() SourceInstanceParamsPtrOutput {
	return i.ToSourceInstanceParamsPtrOutputWithContext(context.Background())
}

func (i SourceInstanceParamsArgs) ToSourceInstanceParamsPtrOutputWithContext(ctx context.Context) SourceInstanceParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInstanceParamsOutput).ToSourceInstanceParamsPtrOutputWithContext(ctx)
}

// SourceInstanceParamsPtrInput is an input type that accepts SourceInstanceParamsArgs, SourceInstanceParamsPtr and SourceInstanceParamsPtrOutput values.
// You can construct a concrete instance of `SourceInstanceParamsPtrInput` via:
//
//	        SourceInstanceParamsArgs{...}
//
//	or:
//
//	        nil
type SourceInstanceParamsPtrInput interface {
	pulumi.Input

	ToSourceInstanceParamsPtrOutput() SourceInstanceParamsPtrOutput
	ToSourceInstanceParamsPtrOutputWithContext(context.Context) SourceInstanceParamsPtrOutput
}

type sourceInstanceParamsPtrType SourceInstanceParamsArgs

func SourceInstanceParamsPtr(v *SourceInstanceParamsArgs) SourceInstanceParamsPtrInput {
	return (*sourceInstanceParamsPtrType)(v)
}

func (*sourceInstanceParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceInstanceParams)(nil)).Elem()
}

func (i *sourceInstanceParamsPtrType) ToSourceInstanceParamsPtrOutput() SourceInstanceParamsPtrOutput {
	return i.ToSourceInstanceParamsPtrOutputWithContext(context.Background())
}

func (i *sourceInstanceParamsPtrType) ToSourceInstanceParamsPtrOutputWithContext(ctx context.Context) SourceInstanceParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceInstanceParamsPtrOutput)
}

// A specification of the parameters to use when creating the instance template from a source instance.
type SourceInstanceParamsOutput struct{ *pulumi.OutputState }

func (SourceInstanceParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInstanceParams)(nil)).Elem()
}

func (o SourceInstanceParamsOutput) ToSourceInstanceParamsOutput() SourceInstanceParamsOutput {
	return o
}

func (o SourceInstanceParamsOutput) ToSourceInstanceParamsOutputWithContext(ctx context.Context) SourceInstanceParamsOutput {
	return o
}

func (o SourceInstanceParamsOutput) ToSourceInstanceParamsPtrOutput() SourceInstanceParamsPtrOutput {
	return o.ToSourceInstanceParamsPtrOutputWithContext(context.Background())
}

func (o SourceInstanceParamsOutput) ToSourceInstanceParamsPtrOutputWithContext(ctx context.Context) SourceInstanceParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceInstanceParams) *SourceInstanceParams {
		return &v
	}).(SourceInstanceParamsPtrOutput)
}

// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
func (o SourceInstanceParamsOutput) DiskConfigs() DiskInstantiationConfigArrayOutput {
	return o.ApplyT(func(v SourceInstanceParams) []DiskInstantiationConfig { return v.DiskConfigs }).(DiskInstantiationConfigArrayOutput)
}

type SourceInstanceParamsPtrOutput struct{ *pulumi.OutputState }

func (SourceInstanceParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceInstanceParams)(nil)).Elem()
}

func (o SourceInstanceParamsPtrOutput) ToSourceInstanceParamsPtrOutput() SourceInstanceParamsPtrOutput {
	return o
}

func (o SourceInstanceParamsPtrOutput) ToSourceInstanceParamsPtrOutputWithContext(ctx context.Context) SourceInstanceParamsPtrOutput {
	return o
}

func (o SourceInstanceParamsPtrOutput) Elem() SourceInstanceParamsOutput {
	return o.ApplyT(func(v *SourceInstanceParams) SourceInstanceParams {
		if v != nil {
			return *v
		}
		var ret SourceInstanceParams
		return ret
	}).(SourceInstanceParamsOutput)
}

// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
func (o SourceInstanceParamsPtrOutput) DiskConfigs() DiskInstantiationConfigArrayOutput {
	return o.ApplyT(func(v *SourceInstanceParams) []DiskInstantiationConfig {
		if v == nil {
			return nil
		}
		return v.DiskConfigs
	}).(DiskInstantiationConfigArrayOutput)
}

// A specification of the parameters to use when creating the instance template from a source instance.
type SourceInstanceParamsResponse struct {
	// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
	DiskConfigs []DiskInstantiationConfigResponse `pulumi:"diskConfigs"`
}

// A specification of the parameters to use when creating the instance template from a source instance.
type SourceInstanceParamsResponseOutput struct{ *pulumi.OutputState }

func (SourceInstanceParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInstanceParamsResponse)(nil)).Elem()
}

func (o SourceInstanceParamsResponseOutput) ToSourceInstanceParamsResponseOutput() SourceInstanceParamsResponseOutput {
	return o
}

func (o SourceInstanceParamsResponseOutput) ToSourceInstanceParamsResponseOutputWithContext(ctx context.Context) SourceInstanceParamsResponseOutput {
	return o
}

// Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, the source images for each disk will be used. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes.
func (o SourceInstanceParamsResponseOutput) DiskConfigs() DiskInstantiationConfigResponseArrayOutput {
	return o.ApplyT(func(v SourceInstanceParamsResponse) []DiskInstantiationConfigResponse { return v.DiskConfigs }).(DiskInstantiationConfigResponseArrayOutput)
}

// DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
type SourceInstancePropertiesResponse struct {
	// Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
	CanIpForward bool `pulumi:"canIpForward"`
	// Whether the instance created from this machine image should be protected against deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// An optional text description for the instances that are created from this machine image.
	Description string `pulumi:"description"`
	// An array of disks that are associated with the instances that are created from this machine image.
	Disks []SavedAttachedDiskResponse `pulumi:"disks"`
	// A list of guest accelerator cards' type and count to use for instances created from this machine image.
	GuestAccelerators []AcceleratorConfigResponse `pulumi:"guestAccelerators"`
	// KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
	KeyRevocationActionType string `pulumi:"keyRevocationActionType"`
	// Labels to apply to instances that are created from this machine image.
	Labels map[string]string `pulumi:"labels"`
	// The machine type to use for instances that are created from this machine image.
	MachineType string `pulumi:"machineType"`
	// The metadata key/value pairs to assign to instances that are created from this machine image. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
	Metadata MetadataResponse `pulumi:"metadata"`
	// Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
	MinCpuPlatform string `pulumi:"minCpuPlatform"`
	// An array of network access configurations for this interface.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// PostKeyRevocationActionType of the instance.
	PostKeyRevocationActionType string `pulumi:"postKeyRevocationActionType"`
	// Specifies the scheduling options for the instances that are created from this machine image.
	Scheduling SchedulingResponse `pulumi:"scheduling"`
	// A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
	ServiceAccounts []ServiceAccountResponse `pulumi:"serviceAccounts"`
	// A list of tags to apply to the instances that are created from this machine image. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
	Tags TagsResponse `pulumi:"tags"`
}

// DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
type SourceInstancePropertiesResponseOutput struct{ *pulumi.OutputState }

func (SourceInstancePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceInstancePropertiesResponse)(nil)).Elem()
}

func (o SourceInstancePropertiesResponseOutput) ToSourceInstancePropertiesResponseOutput() SourceInstancePropertiesResponseOutput {
	return o
}

func (o SourceInstancePropertiesResponseOutput) ToSourceInstancePropertiesResponseOutputWithContext(ctx context.Context) SourceInstancePropertiesResponseOutput {
	return o
}

// Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
func (o SourceInstancePropertiesResponseOutput) CanIpForward() pulumi.BoolOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) bool { return v.CanIpForward }).(pulumi.BoolOutput)
}

// Whether the instance created from this machine image should be protected against deletion.
func (o SourceInstancePropertiesResponseOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// An optional text description for the instances that are created from this machine image.
func (o SourceInstancePropertiesResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) string { return v.Description }).(pulumi.StringOutput)
}

// An array of disks that are associated with the instances that are created from this machine image.
func (o SourceInstancePropertiesResponseOutput) Disks() SavedAttachedDiskResponseArrayOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) []SavedAttachedDiskResponse { return v.Disks }).(SavedAttachedDiskResponseArrayOutput)
}

// A list of guest accelerator cards' type and count to use for instances created from this machine image.
func (o SourceInstancePropertiesResponseOutput) GuestAccelerators() AcceleratorConfigResponseArrayOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) []AcceleratorConfigResponse { return v.GuestAccelerators }).(AcceleratorConfigResponseArrayOutput)
}

// KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
func (o SourceInstancePropertiesResponseOutput) KeyRevocationActionType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) string { return v.KeyRevocationActionType }).(pulumi.StringOutput)
}

// Labels to apply to instances that are created from this machine image.
func (o SourceInstancePropertiesResponseOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The machine type to use for instances that are created from this machine image.
func (o SourceInstancePropertiesResponseOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) string { return v.MachineType }).(pulumi.StringOutput)
}

// The metadata key/value pairs to assign to instances that are created from this machine image. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
func (o SourceInstancePropertiesResponseOutput) Metadata() MetadataResponseOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) MetadataResponse { return v.Metadata }).(MetadataResponseOutput)
}

// Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
func (o SourceInstancePropertiesResponseOutput) MinCpuPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) string { return v.MinCpuPlatform }).(pulumi.StringOutput)
}

// An array of network access configurations for this interface.
func (o SourceInstancePropertiesResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// PostKeyRevocationActionType of the instance.
func (o SourceInstancePropertiesResponseOutput) PostKeyRevocationActionType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) string { return v.PostKeyRevocationActionType }).(pulumi.StringOutput)
}

// Specifies the scheduling options for the instances that are created from this machine image.
func (o SourceInstancePropertiesResponseOutput) Scheduling() SchedulingResponseOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) SchedulingResponse { return v.Scheduling }).(SchedulingResponseOutput)
}

// A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
func (o SourceInstancePropertiesResponseOutput) ServiceAccounts() ServiceAccountResponseArrayOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) []ServiceAccountResponse { return v.ServiceAccounts }).(ServiceAccountResponseArrayOutput)
}

// A list of tags to apply to the instances that are created from this machine image. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
func (o SourceInstancePropertiesResponseOutput) Tags() TagsResponseOutput {
	return o.ApplyT(func(v SourceInstancePropertiesResponse) TagsResponse { return v.Tags }).(TagsResponseOutput)
}

// Configuration and status of a managed SSL certificate.
type SslCertificateManagedSslCertificate struct {
	// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
	Domains []string `pulumi:"domains"`
}

// SslCertificateManagedSslCertificateInput is an input type that accepts SslCertificateManagedSslCertificateArgs and SslCertificateManagedSslCertificateOutput values.
// You can construct a concrete instance of `SslCertificateManagedSslCertificateInput` via:
//
//	SslCertificateManagedSslCertificateArgs{...}
type SslCertificateManagedSslCertificateInput interface {
	pulumi.Input

	ToSslCertificateManagedSslCertificateOutput() SslCertificateManagedSslCertificateOutput
	ToSslCertificateManagedSslCertificateOutputWithContext(context.Context) SslCertificateManagedSslCertificateOutput
}

// Configuration and status of a managed SSL certificate.
type SslCertificateManagedSslCertificateArgs struct {
	// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
	Domains pulumi.StringArrayInput `pulumi:"domains"`
}

func (SslCertificateManagedSslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateManagedSslCertificate)(nil)).Elem()
}

func (i SslCertificateManagedSslCertificateArgs) ToSslCertificateManagedSslCertificateOutput() SslCertificateManagedSslCertificateOutput {
	return i.ToSslCertificateManagedSslCertificateOutputWithContext(context.Background())
}

func (i SslCertificateManagedSslCertificateArgs) ToSslCertificateManagedSslCertificateOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateManagedSslCertificateOutput)
}

func (i SslCertificateManagedSslCertificateArgs) ToSslCertificateManagedSslCertificatePtrOutput() SslCertificateManagedSslCertificatePtrOutput {
	return i.ToSslCertificateManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (i SslCertificateManagedSslCertificateArgs) ToSslCertificateManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateManagedSslCertificateOutput).ToSslCertificateManagedSslCertificatePtrOutputWithContext(ctx)
}

// SslCertificateManagedSslCertificatePtrInput is an input type that accepts SslCertificateManagedSslCertificateArgs, SslCertificateManagedSslCertificatePtr and SslCertificateManagedSslCertificatePtrOutput values.
// You can construct a concrete instance of `SslCertificateManagedSslCertificatePtrInput` via:
//
//	        SslCertificateManagedSslCertificateArgs{...}
//
//	or:
//
//	        nil
type SslCertificateManagedSslCertificatePtrInput interface {
	pulumi.Input

	ToSslCertificateManagedSslCertificatePtrOutput() SslCertificateManagedSslCertificatePtrOutput
	ToSslCertificateManagedSslCertificatePtrOutputWithContext(context.Context) SslCertificateManagedSslCertificatePtrOutput
}

type sslCertificateManagedSslCertificatePtrType SslCertificateManagedSslCertificateArgs

func SslCertificateManagedSslCertificatePtr(v *SslCertificateManagedSslCertificateArgs) SslCertificateManagedSslCertificatePtrInput {
	return (*sslCertificateManagedSslCertificatePtrType)(v)
}

func (*sslCertificateManagedSslCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCertificateManagedSslCertificate)(nil)).Elem()
}

func (i *sslCertificateManagedSslCertificatePtrType) ToSslCertificateManagedSslCertificatePtrOutput() SslCertificateManagedSslCertificatePtrOutput {
	return i.ToSslCertificateManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (i *sslCertificateManagedSslCertificatePtrType) ToSslCertificateManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateManagedSslCertificatePtrOutput)
}

// Configuration and status of a managed SSL certificate.
type SslCertificateManagedSslCertificateOutput struct{ *pulumi.OutputState }

func (SslCertificateManagedSslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateManagedSslCertificate)(nil)).Elem()
}

func (o SslCertificateManagedSslCertificateOutput) ToSslCertificateManagedSslCertificateOutput() SslCertificateManagedSslCertificateOutput {
	return o
}

func (o SslCertificateManagedSslCertificateOutput) ToSslCertificateManagedSslCertificateOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificateOutput {
	return o
}

func (o SslCertificateManagedSslCertificateOutput) ToSslCertificateManagedSslCertificatePtrOutput() SslCertificateManagedSslCertificatePtrOutput {
	return o.ToSslCertificateManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (o SslCertificateManagedSslCertificateOutput) ToSslCertificateManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslCertificateManagedSslCertificate) *SslCertificateManagedSslCertificate {
		return &v
	}).(SslCertificateManagedSslCertificatePtrOutput)
}

// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
func (o SslCertificateManagedSslCertificateOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslCertificateManagedSslCertificate) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

type SslCertificateManagedSslCertificatePtrOutput struct{ *pulumi.OutputState }

func (SslCertificateManagedSslCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCertificateManagedSslCertificate)(nil)).Elem()
}

func (o SslCertificateManagedSslCertificatePtrOutput) ToSslCertificateManagedSslCertificatePtrOutput() SslCertificateManagedSslCertificatePtrOutput {
	return o
}

func (o SslCertificateManagedSslCertificatePtrOutput) ToSslCertificateManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificatePtrOutput {
	return o
}

func (o SslCertificateManagedSslCertificatePtrOutput) Elem() SslCertificateManagedSslCertificateOutput {
	return o.ApplyT(func(v *SslCertificateManagedSslCertificate) SslCertificateManagedSslCertificate {
		if v != nil {
			return *v
		}
		var ret SslCertificateManagedSslCertificate
		return ret
	}).(SslCertificateManagedSslCertificateOutput)
}

// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
func (o SslCertificateManagedSslCertificatePtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SslCertificateManagedSslCertificate) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Configuration and status of a managed SSL certificate.
type SslCertificateManagedSslCertificateResponse struct {
	// [Output only] Detailed statuses of the domains specified for managed certificate resource.
	DomainStatus map[string]string `pulumi:"domainStatus"`
	// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
	Domains []string `pulumi:"domains"`
	// [Output only] Status of the managed certificate resource.
	Status string `pulumi:"status"`
}

// Configuration and status of a managed SSL certificate.
type SslCertificateManagedSslCertificateResponseOutput struct{ *pulumi.OutputState }

func (SslCertificateManagedSslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateManagedSslCertificateResponse)(nil)).Elem()
}

func (o SslCertificateManagedSslCertificateResponseOutput) ToSslCertificateManagedSslCertificateResponseOutput() SslCertificateManagedSslCertificateResponseOutput {
	return o
}

func (o SslCertificateManagedSslCertificateResponseOutput) ToSslCertificateManagedSslCertificateResponseOutputWithContext(ctx context.Context) SslCertificateManagedSslCertificateResponseOutput {
	return o
}

// [Output only] Detailed statuses of the domains specified for managed certificate resource.
func (o SslCertificateManagedSslCertificateResponseOutput) DomainStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v SslCertificateManagedSslCertificateResponse) map[string]string { return v.DomainStatus }).(pulumi.StringMapOutput)
}

// The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates).
func (o SslCertificateManagedSslCertificateResponseOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SslCertificateManagedSslCertificateResponse) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// [Output only] Status of the managed certificate resource.
func (o SslCertificateManagedSslCertificateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SslCertificateManagedSslCertificateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Configuration and status of a self-managed SSL certificate.
type SslCertificateSelfManagedSslCertificate struct {
	// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
	Certificate *string `pulumi:"certificate"`
	// A write-only private key in PEM format. Only insert requests will include this field.
	PrivateKey *string `pulumi:"privateKey"`
}

// SslCertificateSelfManagedSslCertificateInput is an input type that accepts SslCertificateSelfManagedSslCertificateArgs and SslCertificateSelfManagedSslCertificateOutput values.
// You can construct a concrete instance of `SslCertificateSelfManagedSslCertificateInput` via:
//
//	SslCertificateSelfManagedSslCertificateArgs{...}
type SslCertificateSelfManagedSslCertificateInput interface {
	pulumi.Input

	ToSslCertificateSelfManagedSslCertificateOutput() SslCertificateSelfManagedSslCertificateOutput
	ToSslCertificateSelfManagedSslCertificateOutputWithContext(context.Context) SslCertificateSelfManagedSslCertificateOutput
}

// Configuration and status of a self-managed SSL certificate.
type SslCertificateSelfManagedSslCertificateArgs struct {
	// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// A write-only private key in PEM format. Only insert requests will include this field.
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
}

func (SslCertificateSelfManagedSslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateSelfManagedSslCertificate)(nil)).Elem()
}

func (i SslCertificateSelfManagedSslCertificateArgs) ToSslCertificateSelfManagedSslCertificateOutput() SslCertificateSelfManagedSslCertificateOutput {
	return i.ToSslCertificateSelfManagedSslCertificateOutputWithContext(context.Background())
}

func (i SslCertificateSelfManagedSslCertificateArgs) ToSslCertificateSelfManagedSslCertificateOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateSelfManagedSslCertificateOutput)
}

func (i SslCertificateSelfManagedSslCertificateArgs) ToSslCertificateSelfManagedSslCertificatePtrOutput() SslCertificateSelfManagedSslCertificatePtrOutput {
	return i.ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (i SslCertificateSelfManagedSslCertificateArgs) ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateSelfManagedSslCertificateOutput).ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(ctx)
}

// SslCertificateSelfManagedSslCertificatePtrInput is an input type that accepts SslCertificateSelfManagedSslCertificateArgs, SslCertificateSelfManagedSslCertificatePtr and SslCertificateSelfManagedSslCertificatePtrOutput values.
// You can construct a concrete instance of `SslCertificateSelfManagedSslCertificatePtrInput` via:
//
//	        SslCertificateSelfManagedSslCertificateArgs{...}
//
//	or:
//
//	        nil
type SslCertificateSelfManagedSslCertificatePtrInput interface {
	pulumi.Input

	ToSslCertificateSelfManagedSslCertificatePtrOutput() SslCertificateSelfManagedSslCertificatePtrOutput
	ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(context.Context) SslCertificateSelfManagedSslCertificatePtrOutput
}

type sslCertificateSelfManagedSslCertificatePtrType SslCertificateSelfManagedSslCertificateArgs

func SslCertificateSelfManagedSslCertificatePtr(v *SslCertificateSelfManagedSslCertificateArgs) SslCertificateSelfManagedSslCertificatePtrInput {
	return (*sslCertificateSelfManagedSslCertificatePtrType)(v)
}

func (*sslCertificateSelfManagedSslCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCertificateSelfManagedSslCertificate)(nil)).Elem()
}

func (i *sslCertificateSelfManagedSslCertificatePtrType) ToSslCertificateSelfManagedSslCertificatePtrOutput() SslCertificateSelfManagedSslCertificatePtrOutput {
	return i.ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (i *sslCertificateSelfManagedSslCertificatePtrType) ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SslCertificateSelfManagedSslCertificatePtrOutput)
}

// Configuration and status of a self-managed SSL certificate.
type SslCertificateSelfManagedSslCertificateOutput struct{ *pulumi.OutputState }

func (SslCertificateSelfManagedSslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateSelfManagedSslCertificate)(nil)).Elem()
}

func (o SslCertificateSelfManagedSslCertificateOutput) ToSslCertificateSelfManagedSslCertificateOutput() SslCertificateSelfManagedSslCertificateOutput {
	return o
}

func (o SslCertificateSelfManagedSslCertificateOutput) ToSslCertificateSelfManagedSslCertificateOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificateOutput {
	return o
}

func (o SslCertificateSelfManagedSslCertificateOutput) ToSslCertificateSelfManagedSslCertificatePtrOutput() SslCertificateSelfManagedSslCertificatePtrOutput {
	return o.ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(context.Background())
}

func (o SslCertificateSelfManagedSslCertificateOutput) ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslCertificateSelfManagedSslCertificate) *SslCertificateSelfManagedSslCertificate {
		return &v
	}).(SslCertificateSelfManagedSslCertificatePtrOutput)
}

// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
func (o SslCertificateSelfManagedSslCertificateOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslCertificateSelfManagedSslCertificate) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// A write-only private key in PEM format. Only insert requests will include this field.
func (o SslCertificateSelfManagedSslCertificateOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SslCertificateSelfManagedSslCertificate) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

type SslCertificateSelfManagedSslCertificatePtrOutput struct{ *pulumi.OutputState }

func (SslCertificateSelfManagedSslCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslCertificateSelfManagedSslCertificate)(nil)).Elem()
}

func (o SslCertificateSelfManagedSslCertificatePtrOutput) ToSslCertificateSelfManagedSslCertificatePtrOutput() SslCertificateSelfManagedSslCertificatePtrOutput {
	return o
}

func (o SslCertificateSelfManagedSslCertificatePtrOutput) ToSslCertificateSelfManagedSslCertificatePtrOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificatePtrOutput {
	return o
}

func (o SslCertificateSelfManagedSslCertificatePtrOutput) Elem() SslCertificateSelfManagedSslCertificateOutput {
	return o.ApplyT(func(v *SslCertificateSelfManagedSslCertificate) SslCertificateSelfManagedSslCertificate {
		if v != nil {
			return *v
		}
		var ret SslCertificateSelfManagedSslCertificate
		return ret
	}).(SslCertificateSelfManagedSslCertificateOutput)
}

// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
func (o SslCertificateSelfManagedSslCertificatePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslCertificateSelfManagedSslCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// A write-only private key in PEM format. Only insert requests will include this field.
func (o SslCertificateSelfManagedSslCertificatePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SslCertificateSelfManagedSslCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// Configuration and status of a self-managed SSL certificate.
type SslCertificateSelfManagedSslCertificateResponse struct {
	// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
	Certificate string `pulumi:"certificate"`
	// A write-only private key in PEM format. Only insert requests will include this field.
	PrivateKey string `pulumi:"privateKey"`
}

// Configuration and status of a self-managed SSL certificate.
type SslCertificateSelfManagedSslCertificateResponseOutput struct{ *pulumi.OutputState }

func (SslCertificateSelfManagedSslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslCertificateSelfManagedSslCertificateResponse)(nil)).Elem()
}

func (o SslCertificateSelfManagedSslCertificateResponseOutput) ToSslCertificateSelfManagedSslCertificateResponseOutput() SslCertificateSelfManagedSslCertificateResponseOutput {
	return o
}

func (o SslCertificateSelfManagedSslCertificateResponseOutput) ToSslCertificateSelfManagedSslCertificateResponseOutputWithContext(ctx context.Context) SslCertificateSelfManagedSslCertificateResponseOutput {
	return o
}

// A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
func (o SslCertificateSelfManagedSslCertificateResponseOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v SslCertificateSelfManagedSslCertificateResponse) string { return v.Certificate }).(pulumi.StringOutput)
}

// A write-only private key in PEM format. Only insert requests will include this field.
func (o SslCertificateSelfManagedSslCertificateResponseOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v SslCertificateSelfManagedSslCertificateResponse) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type SslPolicyWarningsItemDataItemResponse struct {
	// A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
	Key string `pulumi:"key"`
	// A warning data value corresponding to the key.
	Value string `pulumi:"value"`
}

type SslPolicyWarningsItemDataItemResponseOutput struct{ *pulumi.OutputState }

func (SslPolicyWarningsItemDataItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyWarningsItemDataItemResponse)(nil)).Elem()
}

func (o SslPolicyWarningsItemDataItemResponseOutput) ToSslPolicyWarningsItemDataItemResponseOutput() SslPolicyWarningsItemDataItemResponseOutput {
	return o
}

func (o SslPolicyWarningsItemDataItemResponseOutput) ToSslPolicyWarningsItemDataItemResponseOutputWithContext(ctx context.Context) SslPolicyWarningsItemDataItemResponseOutput {
	return o
}

// A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
func (o SslPolicyWarningsItemDataItemResponseOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SslPolicyWarningsItemDataItemResponse) string { return v.Key }).(pulumi.StringOutput)
}

// A warning data value corresponding to the key.
func (o SslPolicyWarningsItemDataItemResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SslPolicyWarningsItemDataItemResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SslPolicyWarningsItemDataItemResponseArrayOutput struct{ *pulumi.OutputState }

func (SslPolicyWarningsItemDataItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslPolicyWarningsItemDataItemResponse)(nil)).Elem()
}

func (o SslPolicyWarningsItemDataItemResponseArrayOutput) ToSslPolicyWarningsItemDataItemResponseArrayOutput() SslPolicyWarningsItemDataItemResponseArrayOutput {
	return o
}

func (o SslPolicyWarningsItemDataItemResponseArrayOutput) ToSslPolicyWarningsItemDataItemResponseArrayOutputWithContext(ctx context.Context) SslPolicyWarningsItemDataItemResponseArrayOutput {
	return o
}

func (o SslPolicyWarningsItemDataItemResponseArrayOutput) Index(i pulumi.IntInput) SslPolicyWarningsItemDataItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SslPolicyWarningsItemDataItemResponse {
		return vs[0].([]SslPolicyWarningsItemDataItemResponse)[vs[1].(int)]
	}).(SslPolicyWarningsItemDataItemResponseOutput)
}

type SslPolicyWarningsItemResponse struct {
	// A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
	Code string `pulumi:"code"`
	// Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
	Data []SslPolicyWarningsItemDataItemResponse `pulumi:"data"`
	// A human-readable description of the warning code.
	Message string `pulumi:"message"`
}

type SslPolicyWarningsItemResponseOutput struct{ *pulumi.OutputState }

func (SslPolicyWarningsItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslPolicyWarningsItemResponse)(nil)).Elem()
}

func (o SslPolicyWarningsItemResponseOutput) ToSslPolicyWarningsItemResponseOutput() SslPolicyWarningsItemResponseOutput {
	return o
}

func (o SslPolicyWarningsItemResponseOutput) ToSslPolicyWarningsItemResponseOutputWithContext(ctx context.Context) SslPolicyWarningsItemResponseOutput {
	return o
}

// A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
func (o SslPolicyWarningsItemResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v SslPolicyWarningsItemResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
func (o SslPolicyWarningsItemResponseOutput) Data() SslPolicyWarningsItemDataItemResponseArrayOutput {
	return o.ApplyT(func(v SslPolicyWarningsItemResponse) []SslPolicyWarningsItemDataItemResponse { return v.Data }).(SslPolicyWarningsItemDataItemResponseArrayOutput)
}

// A human-readable description of the warning code.
func (o SslPolicyWarningsItemResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v SslPolicyWarningsItemResponse) string { return v.Message }).(pulumi.StringOutput)
}

type SslPolicyWarningsItemResponseArrayOutput struct{ *pulumi.OutputState }

func (SslPolicyWarningsItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SslPolicyWarningsItemResponse)(nil)).Elem()
}

func (o SslPolicyWarningsItemResponseArrayOutput) ToSslPolicyWarningsItemResponseArrayOutput() SslPolicyWarningsItemResponseArrayOutput {
	return o
}

func (o SslPolicyWarningsItemResponseArrayOutput) ToSslPolicyWarningsItemResponseArrayOutputWithContext(ctx context.Context) SslPolicyWarningsItemResponseArrayOutput {
	return o
}

func (o SslPolicyWarningsItemResponseArrayOutput) Index(i pulumi.IntInput) SslPolicyWarningsItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SslPolicyWarningsItemResponse {
		return vs[0].([]SslPolicyWarningsItemResponse)[vs[1].(int)]
	}).(SslPolicyWarningsItemResponseOutput)
}

type StatefulPolicy struct {
	PreservedState *StatefulPolicyPreservedState `pulumi:"preservedState"`
}

// StatefulPolicyInput is an input type that accepts StatefulPolicyArgs and StatefulPolicyOutput values.
// You can construct a concrete instance of `StatefulPolicyInput` via:
//
//	StatefulPolicyArgs{...}
type StatefulPolicyInput interface {
	pulumi.Input

	ToStatefulPolicyOutput() StatefulPolicyOutput
	ToStatefulPolicyOutputWithContext(context.Context) StatefulPolicyOutput
}

type StatefulPolicyArgs struct {
	PreservedState StatefulPolicyPreservedStatePtrInput `pulumi:"preservedState"`
}

func (StatefulPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicy)(nil)).Elem()
}

func (i StatefulPolicyArgs) ToStatefulPolicyOutput() StatefulPolicyOutput {
	return i.ToStatefulPolicyOutputWithContext(context.Background())
}

func (i StatefulPolicyArgs) ToStatefulPolicyOutputWithContext(ctx context.Context) StatefulPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyOutput)
}

func (i StatefulPolicyArgs) ToStatefulPolicyPtrOutput() StatefulPolicyPtrOutput {
	return i.ToStatefulPolicyPtrOutputWithContext(context.Background())
}

func (i StatefulPolicyArgs) ToStatefulPolicyPtrOutputWithContext(ctx context.Context) StatefulPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyOutput).ToStatefulPolicyPtrOutputWithContext(ctx)
}

// StatefulPolicyPtrInput is an input type that accepts StatefulPolicyArgs, StatefulPolicyPtr and StatefulPolicyPtrOutput values.
// You can construct a concrete instance of `StatefulPolicyPtrInput` via:
//
//	        StatefulPolicyArgs{...}
//
//	or:
//
//	        nil
type StatefulPolicyPtrInput interface {
	pulumi.Input

	ToStatefulPolicyPtrOutput() StatefulPolicyPtrOutput
	ToStatefulPolicyPtrOutputWithContext(context.Context) StatefulPolicyPtrOutput
}

type statefulPolicyPtrType StatefulPolicyArgs

func StatefulPolicyPtr(v *StatefulPolicyArgs) StatefulPolicyPtrInput {
	return (*statefulPolicyPtrType)(v)
}

func (*statefulPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicy)(nil)).Elem()
}

func (i *statefulPolicyPtrType) ToStatefulPolicyPtrOutput() StatefulPolicyPtrOutput {
	return i.ToStatefulPolicyPtrOutputWithContext(context.Background())
}

func (i *statefulPolicyPtrType) ToStatefulPolicyPtrOutputWithContext(ctx context.Context) StatefulPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPtrOutput)
}

type StatefulPolicyOutput struct{ *pulumi.OutputState }

func (StatefulPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicy)(nil)).Elem()
}

func (o StatefulPolicyOutput) ToStatefulPolicyOutput() StatefulPolicyOutput {
	return o
}

func (o StatefulPolicyOutput) ToStatefulPolicyOutputWithContext(ctx context.Context) StatefulPolicyOutput {
	return o
}

func (o StatefulPolicyOutput) ToStatefulPolicyPtrOutput() StatefulPolicyPtrOutput {
	return o.ToStatefulPolicyPtrOutputWithContext(context.Background())
}

func (o StatefulPolicyOutput) ToStatefulPolicyPtrOutputWithContext(ctx context.Context) StatefulPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulPolicy) *StatefulPolicy {
		return &v
	}).(StatefulPolicyPtrOutput)
}

func (o StatefulPolicyOutput) PreservedState() StatefulPolicyPreservedStatePtrOutput {
	return o.ApplyT(func(v StatefulPolicy) *StatefulPolicyPreservedState { return v.PreservedState }).(StatefulPolicyPreservedStatePtrOutput)
}

type StatefulPolicyPtrOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicy)(nil)).Elem()
}

func (o StatefulPolicyPtrOutput) ToStatefulPolicyPtrOutput() StatefulPolicyPtrOutput {
	return o
}

func (o StatefulPolicyPtrOutput) ToStatefulPolicyPtrOutputWithContext(ctx context.Context) StatefulPolicyPtrOutput {
	return o
}

func (o StatefulPolicyPtrOutput) Elem() StatefulPolicyOutput {
	return o.ApplyT(func(v *StatefulPolicy) StatefulPolicy {
		if v != nil {
			return *v
		}
		var ret StatefulPolicy
		return ret
	}).(StatefulPolicyOutput)
}

func (o StatefulPolicyPtrOutput) PreservedState() StatefulPolicyPreservedStatePtrOutput {
	return o.ApplyT(func(v *StatefulPolicy) *StatefulPolicyPreservedState {
		if v == nil {
			return nil
		}
		return v.PreservedState
	}).(StatefulPolicyPreservedStatePtrOutput)
}

// Configuration of preserved resources.
type StatefulPolicyPreservedState struct {
	// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
	Disks *StatefulPolicyPreservedStateDiskDevice `pulumi:"disks"`
	// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	ExternalIPs *StatefulPolicyPreservedStateNetworkIp `pulumi:"externalIPs"`
	// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	InternalIPs *StatefulPolicyPreservedStateNetworkIp `pulumi:"internalIPs"`
}

// StatefulPolicyPreservedStateInput is an input type that accepts StatefulPolicyPreservedStateArgs and StatefulPolicyPreservedStateOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStateInput` via:
//
//	StatefulPolicyPreservedStateArgs{...}
type StatefulPolicyPreservedStateInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStateOutput() StatefulPolicyPreservedStateOutput
	ToStatefulPolicyPreservedStateOutputWithContext(context.Context) StatefulPolicyPreservedStateOutput
}

// Configuration of preserved resources.
type StatefulPolicyPreservedStateArgs struct {
	// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
	Disks StatefulPolicyPreservedStateDiskDevicePtrInput `pulumi:"disks"`
	// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	ExternalIPs StatefulPolicyPreservedStateNetworkIpPtrInput `pulumi:"externalIPs"`
	// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	InternalIPs StatefulPolicyPreservedStateNetworkIpPtrInput `pulumi:"internalIPs"`
}

func (StatefulPolicyPreservedStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedState)(nil)).Elem()
}

func (i StatefulPolicyPreservedStateArgs) ToStatefulPolicyPreservedStateOutput() StatefulPolicyPreservedStateOutput {
	return i.ToStatefulPolicyPreservedStateOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateArgs) ToStatefulPolicyPreservedStateOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateOutput)
}

func (i StatefulPolicyPreservedStateArgs) ToStatefulPolicyPreservedStatePtrOutput() StatefulPolicyPreservedStatePtrOutput {
	return i.ToStatefulPolicyPreservedStatePtrOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateArgs) ToStatefulPolicyPreservedStatePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateOutput).ToStatefulPolicyPreservedStatePtrOutputWithContext(ctx)
}

// StatefulPolicyPreservedStatePtrInput is an input type that accepts StatefulPolicyPreservedStateArgs, StatefulPolicyPreservedStatePtr and StatefulPolicyPreservedStatePtrOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStatePtrInput` via:
//
//	        StatefulPolicyPreservedStateArgs{...}
//
//	or:
//
//	        nil
type StatefulPolicyPreservedStatePtrInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStatePtrOutput() StatefulPolicyPreservedStatePtrOutput
	ToStatefulPolicyPreservedStatePtrOutputWithContext(context.Context) StatefulPolicyPreservedStatePtrOutput
}

type statefulPolicyPreservedStatePtrType StatefulPolicyPreservedStateArgs

func StatefulPolicyPreservedStatePtr(v *StatefulPolicyPreservedStateArgs) StatefulPolicyPreservedStatePtrInput {
	return (*statefulPolicyPreservedStatePtrType)(v)
}

func (*statefulPolicyPreservedStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedState)(nil)).Elem()
}

func (i *statefulPolicyPreservedStatePtrType) ToStatefulPolicyPreservedStatePtrOutput() StatefulPolicyPreservedStatePtrOutput {
	return i.ToStatefulPolicyPreservedStatePtrOutputWithContext(context.Background())
}

func (i *statefulPolicyPreservedStatePtrType) ToStatefulPolicyPreservedStatePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStatePtrOutput)
}

// Configuration of preserved resources.
type StatefulPolicyPreservedStateOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedState)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateOutput) ToStatefulPolicyPreservedStateOutput() StatefulPolicyPreservedStateOutput {
	return o
}

func (o StatefulPolicyPreservedStateOutput) ToStatefulPolicyPreservedStateOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateOutput {
	return o
}

func (o StatefulPolicyPreservedStateOutput) ToStatefulPolicyPreservedStatePtrOutput() StatefulPolicyPreservedStatePtrOutput {
	return o.ToStatefulPolicyPreservedStatePtrOutputWithContext(context.Background())
}

func (o StatefulPolicyPreservedStateOutput) ToStatefulPolicyPreservedStatePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulPolicyPreservedState) *StatefulPolicyPreservedState {
		return &v
	}).(StatefulPolicyPreservedStatePtrOutput)
}

// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
func (o StatefulPolicyPreservedStateOutput) Disks() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedState) *StatefulPolicyPreservedStateDiskDevice { return v.Disks }).(StatefulPolicyPreservedStateDiskDevicePtrOutput)
}

// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStateOutput) ExternalIPs() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedState) *StatefulPolicyPreservedStateNetworkIp { return v.ExternalIPs }).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStateOutput) InternalIPs() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedState) *StatefulPolicyPreservedStateNetworkIp { return v.InternalIPs }).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

type StatefulPolicyPreservedStatePtrOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedState)(nil)).Elem()
}

func (o StatefulPolicyPreservedStatePtrOutput) ToStatefulPolicyPreservedStatePtrOutput() StatefulPolicyPreservedStatePtrOutput {
	return o
}

func (o StatefulPolicyPreservedStatePtrOutput) ToStatefulPolicyPreservedStatePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStatePtrOutput {
	return o
}

func (o StatefulPolicyPreservedStatePtrOutput) Elem() StatefulPolicyPreservedStateOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedState) StatefulPolicyPreservedState {
		if v != nil {
			return *v
		}
		var ret StatefulPolicyPreservedState
		return ret
	}).(StatefulPolicyPreservedStateOutput)
}

// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
func (o StatefulPolicyPreservedStatePtrOutput) Disks() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedState) *StatefulPolicyPreservedStateDiskDevice {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(StatefulPolicyPreservedStateDiskDevicePtrOutput)
}

// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStatePtrOutput) ExternalIPs() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedState) *StatefulPolicyPreservedStateNetworkIp {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStatePtrOutput) InternalIPs() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedState) *StatefulPolicyPreservedStateNetworkIp {
		if v == nil {
			return nil
		}
		return v.InternalIPs
	}).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

type StatefulPolicyPreservedStateDiskDevice struct {
	// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
	AutoDelete *StatefulPolicyPreservedStateDiskDeviceAutoDelete `pulumi:"autoDelete"`
}

// StatefulPolicyPreservedStateDiskDeviceInput is an input type that accepts StatefulPolicyPreservedStateDiskDeviceArgs and StatefulPolicyPreservedStateDiskDeviceOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStateDiskDeviceInput` via:
//
//	StatefulPolicyPreservedStateDiskDeviceArgs{...}
type StatefulPolicyPreservedStateDiskDeviceInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStateDiskDeviceOutput() StatefulPolicyPreservedStateDiskDeviceOutput
	ToStatefulPolicyPreservedStateDiskDeviceOutputWithContext(context.Context) StatefulPolicyPreservedStateDiskDeviceOutput
}

type StatefulPolicyPreservedStateDiskDeviceArgs struct {
	// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
	AutoDelete StatefulPolicyPreservedStateDiskDeviceAutoDeletePtrInput `pulumi:"autoDelete"`
}

func (StatefulPolicyPreservedStateDiskDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateDiskDevice)(nil)).Elem()
}

func (i StatefulPolicyPreservedStateDiskDeviceArgs) ToStatefulPolicyPreservedStateDiskDeviceOutput() StatefulPolicyPreservedStateDiskDeviceOutput {
	return i.ToStatefulPolicyPreservedStateDiskDeviceOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateDiskDeviceArgs) ToStatefulPolicyPreservedStateDiskDeviceOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateDiskDeviceOutput)
}

func (i StatefulPolicyPreservedStateDiskDeviceArgs) ToStatefulPolicyPreservedStateDiskDevicePtrOutput() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return i.ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateDiskDeviceArgs) ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateDiskDeviceOutput).ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(ctx)
}

// StatefulPolicyPreservedStateDiskDevicePtrInput is an input type that accepts StatefulPolicyPreservedStateDiskDeviceArgs, StatefulPolicyPreservedStateDiskDevicePtr and StatefulPolicyPreservedStateDiskDevicePtrOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStateDiskDevicePtrInput` via:
//
//	        StatefulPolicyPreservedStateDiskDeviceArgs{...}
//
//	or:
//
//	        nil
type StatefulPolicyPreservedStateDiskDevicePtrInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStateDiskDevicePtrOutput() StatefulPolicyPreservedStateDiskDevicePtrOutput
	ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(context.Context) StatefulPolicyPreservedStateDiskDevicePtrOutput
}

type statefulPolicyPreservedStateDiskDevicePtrType StatefulPolicyPreservedStateDiskDeviceArgs

func StatefulPolicyPreservedStateDiskDevicePtr(v *StatefulPolicyPreservedStateDiskDeviceArgs) StatefulPolicyPreservedStateDiskDevicePtrInput {
	return (*statefulPolicyPreservedStateDiskDevicePtrType)(v)
}

func (*statefulPolicyPreservedStateDiskDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedStateDiskDevice)(nil)).Elem()
}

func (i *statefulPolicyPreservedStateDiskDevicePtrType) ToStatefulPolicyPreservedStateDiskDevicePtrOutput() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return i.ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(context.Background())
}

func (i *statefulPolicyPreservedStateDiskDevicePtrType) ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateDiskDevicePtrOutput)
}

type StatefulPolicyPreservedStateDiskDeviceOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateDiskDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateDiskDevice)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateDiskDeviceOutput) ToStatefulPolicyPreservedStateDiskDeviceOutput() StatefulPolicyPreservedStateDiskDeviceOutput {
	return o
}

func (o StatefulPolicyPreservedStateDiskDeviceOutput) ToStatefulPolicyPreservedStateDiskDeviceOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDeviceOutput {
	return o
}

func (o StatefulPolicyPreservedStateDiskDeviceOutput) ToStatefulPolicyPreservedStateDiskDevicePtrOutput() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o.ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(context.Background())
}

func (o StatefulPolicyPreservedStateDiskDeviceOutput) ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulPolicyPreservedStateDiskDevice) *StatefulPolicyPreservedStateDiskDevice {
		return &v
	}).(StatefulPolicyPreservedStateDiskDevicePtrOutput)
}

// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
func (o StatefulPolicyPreservedStateDiskDeviceOutput) AutoDelete() StatefulPolicyPreservedStateDiskDeviceAutoDeletePtrOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateDiskDevice) *StatefulPolicyPreservedStateDiskDeviceAutoDelete {
		return v.AutoDelete
	}).(StatefulPolicyPreservedStateDiskDeviceAutoDeletePtrOutput)
}

type StatefulPolicyPreservedStateDiskDevicePtrOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateDiskDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedStateDiskDevice)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateDiskDevicePtrOutput) ToStatefulPolicyPreservedStateDiskDevicePtrOutput() StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o
}

func (o StatefulPolicyPreservedStateDiskDevicePtrOutput) ToStatefulPolicyPreservedStateDiskDevicePtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDevicePtrOutput {
	return o
}

func (o StatefulPolicyPreservedStateDiskDevicePtrOutput) Elem() StatefulPolicyPreservedStateDiskDeviceOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedStateDiskDevice) StatefulPolicyPreservedStateDiskDevice {
		if v != nil {
			return *v
		}
		var ret StatefulPolicyPreservedStateDiskDevice
		return ret
	}).(StatefulPolicyPreservedStateDiskDeviceOutput)
}

// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
func (o StatefulPolicyPreservedStateDiskDevicePtrOutput) AutoDelete() StatefulPolicyPreservedStateDiskDeviceAutoDeletePtrOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedStateDiskDevice) *StatefulPolicyPreservedStateDiskDeviceAutoDelete {
		if v == nil {
			return nil
		}
		return v.AutoDelete
	}).(StatefulPolicyPreservedStateDiskDeviceAutoDeletePtrOutput)
}

type StatefulPolicyPreservedStateDiskDeviceResponse struct {
	// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
	AutoDelete string `pulumi:"autoDelete"`
}

type StatefulPolicyPreservedStateDiskDeviceResponseOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateDiskDeviceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateDiskDeviceResponse)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateDiskDeviceResponseOutput) ToStatefulPolicyPreservedStateDiskDeviceResponseOutput() StatefulPolicyPreservedStateDiskDeviceResponseOutput {
	return o
}

func (o StatefulPolicyPreservedStateDiskDeviceResponseOutput) ToStatefulPolicyPreservedStateDiskDeviceResponseOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateDiskDeviceResponseOutput {
	return o
}

// These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
func (o StatefulPolicyPreservedStateDiskDeviceResponseOutput) AutoDelete() pulumi.StringOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateDiskDeviceResponse) string { return v.AutoDelete }).(pulumi.StringOutput)
}

type StatefulPolicyPreservedStateNetworkIp struct {
	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	AutoDelete *StatefulPolicyPreservedStateNetworkIpAutoDelete `pulumi:"autoDelete"`
}

// StatefulPolicyPreservedStateNetworkIpInput is an input type that accepts StatefulPolicyPreservedStateNetworkIpArgs and StatefulPolicyPreservedStateNetworkIpOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStateNetworkIpInput` via:
//
//	StatefulPolicyPreservedStateNetworkIpArgs{...}
type StatefulPolicyPreservedStateNetworkIpInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStateNetworkIpOutput() StatefulPolicyPreservedStateNetworkIpOutput
	ToStatefulPolicyPreservedStateNetworkIpOutputWithContext(context.Context) StatefulPolicyPreservedStateNetworkIpOutput
}

type StatefulPolicyPreservedStateNetworkIpArgs struct {
	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	AutoDelete StatefulPolicyPreservedStateNetworkIpAutoDeletePtrInput `pulumi:"autoDelete"`
}

func (StatefulPolicyPreservedStateNetworkIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateNetworkIp)(nil)).Elem()
}

func (i StatefulPolicyPreservedStateNetworkIpArgs) ToStatefulPolicyPreservedStateNetworkIpOutput() StatefulPolicyPreservedStateNetworkIpOutput {
	return i.ToStatefulPolicyPreservedStateNetworkIpOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateNetworkIpArgs) ToStatefulPolicyPreservedStateNetworkIpOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateNetworkIpOutput)
}

func (i StatefulPolicyPreservedStateNetworkIpArgs) ToStatefulPolicyPreservedStateNetworkIpPtrOutput() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return i.ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(context.Background())
}

func (i StatefulPolicyPreservedStateNetworkIpArgs) ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateNetworkIpOutput).ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(ctx)
}

// StatefulPolicyPreservedStateNetworkIpPtrInput is an input type that accepts StatefulPolicyPreservedStateNetworkIpArgs, StatefulPolicyPreservedStateNetworkIpPtr and StatefulPolicyPreservedStateNetworkIpPtrOutput values.
// You can construct a concrete instance of `StatefulPolicyPreservedStateNetworkIpPtrInput` via:
//
//	        StatefulPolicyPreservedStateNetworkIpArgs{...}
//
//	or:
//
//	        nil
type StatefulPolicyPreservedStateNetworkIpPtrInput interface {
	pulumi.Input

	ToStatefulPolicyPreservedStateNetworkIpPtrOutput() StatefulPolicyPreservedStateNetworkIpPtrOutput
	ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(context.Context) StatefulPolicyPreservedStateNetworkIpPtrOutput
}

type statefulPolicyPreservedStateNetworkIpPtrType StatefulPolicyPreservedStateNetworkIpArgs

func StatefulPolicyPreservedStateNetworkIpPtr(v *StatefulPolicyPreservedStateNetworkIpArgs) StatefulPolicyPreservedStateNetworkIpPtrInput {
	return (*statefulPolicyPreservedStateNetworkIpPtrType)(v)
}

func (*statefulPolicyPreservedStateNetworkIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedStateNetworkIp)(nil)).Elem()
}

func (i *statefulPolicyPreservedStateNetworkIpPtrType) ToStatefulPolicyPreservedStateNetworkIpPtrOutput() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return i.ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(context.Background())
}

func (i *statefulPolicyPreservedStateNetworkIpPtrType) ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

type StatefulPolicyPreservedStateNetworkIpOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateNetworkIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateNetworkIp)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateNetworkIpOutput) ToStatefulPolicyPreservedStateNetworkIpOutput() StatefulPolicyPreservedStateNetworkIpOutput {
	return o
}

func (o StatefulPolicyPreservedStateNetworkIpOutput) ToStatefulPolicyPreservedStateNetworkIpOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpOutput {
	return o
}

func (o StatefulPolicyPreservedStateNetworkIpOutput) ToStatefulPolicyPreservedStateNetworkIpPtrOutput() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(context.Background())
}

func (o StatefulPolicyPreservedStateNetworkIpOutput) ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StatefulPolicyPreservedStateNetworkIp) *StatefulPolicyPreservedStateNetworkIp {
		return &v
	}).(StatefulPolicyPreservedStateNetworkIpPtrOutput)
}

// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
func (o StatefulPolicyPreservedStateNetworkIpOutput) AutoDelete() StatefulPolicyPreservedStateNetworkIpAutoDeletePtrOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateNetworkIp) *StatefulPolicyPreservedStateNetworkIpAutoDelete {
		return v.AutoDelete
	}).(StatefulPolicyPreservedStateNetworkIpAutoDeletePtrOutput)
}

type StatefulPolicyPreservedStateNetworkIpPtrOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateNetworkIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatefulPolicyPreservedStateNetworkIp)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateNetworkIpPtrOutput) ToStatefulPolicyPreservedStateNetworkIpPtrOutput() StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o
}

func (o StatefulPolicyPreservedStateNetworkIpPtrOutput) ToStatefulPolicyPreservedStateNetworkIpPtrOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpPtrOutput {
	return o
}

func (o StatefulPolicyPreservedStateNetworkIpPtrOutput) Elem() StatefulPolicyPreservedStateNetworkIpOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedStateNetworkIp) StatefulPolicyPreservedStateNetworkIp {
		if v != nil {
			return *v
		}
		var ret StatefulPolicyPreservedStateNetworkIp
		return ret
	}).(StatefulPolicyPreservedStateNetworkIpOutput)
}

// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
func (o StatefulPolicyPreservedStateNetworkIpPtrOutput) AutoDelete() StatefulPolicyPreservedStateNetworkIpAutoDeletePtrOutput {
	return o.ApplyT(func(v *StatefulPolicyPreservedStateNetworkIp) *StatefulPolicyPreservedStateNetworkIpAutoDelete {
		if v == nil {
			return nil
		}
		return v.AutoDelete
	}).(StatefulPolicyPreservedStateNetworkIpAutoDeletePtrOutput)
}

type StatefulPolicyPreservedStateNetworkIpResponse struct {
	// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
	AutoDelete string `pulumi:"autoDelete"`
}

type StatefulPolicyPreservedStateNetworkIpResponseOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateNetworkIpResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateNetworkIpResponse)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateNetworkIpResponseOutput) ToStatefulPolicyPreservedStateNetworkIpResponseOutput() StatefulPolicyPreservedStateNetworkIpResponseOutput {
	return o
}

func (o StatefulPolicyPreservedStateNetworkIpResponseOutput) ToStatefulPolicyPreservedStateNetworkIpResponseOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateNetworkIpResponseOutput {
	return o
}

// These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
func (o StatefulPolicyPreservedStateNetworkIpResponseOutput) AutoDelete() pulumi.StringOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateNetworkIpResponse) string { return v.AutoDelete }).(pulumi.StringOutput)
}

// Configuration of preserved resources.
type StatefulPolicyPreservedStateResponse struct {
	// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
	Disks StatefulPolicyPreservedStateDiskDeviceResponse `pulumi:"disks"`
	// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	ExternalIPs StatefulPolicyPreservedStateNetworkIpResponse `pulumi:"externalIPs"`
	// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
	InternalIPs StatefulPolicyPreservedStateNetworkIpResponse `pulumi:"internalIPs"`
}

// Configuration of preserved resources.
type StatefulPolicyPreservedStateResponseOutput struct{ *pulumi.OutputState }

func (StatefulPolicyPreservedStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyPreservedStateResponse)(nil)).Elem()
}

func (o StatefulPolicyPreservedStateResponseOutput) ToStatefulPolicyPreservedStateResponseOutput() StatefulPolicyPreservedStateResponseOutput {
	return o
}

func (o StatefulPolicyPreservedStateResponseOutput) ToStatefulPolicyPreservedStateResponseOutputWithContext(ctx context.Context) StatefulPolicyPreservedStateResponseOutput {
	return o
}

// Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.
func (o StatefulPolicyPreservedStateResponseOutput) Disks() StatefulPolicyPreservedStateDiskDeviceResponseOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateResponse) StatefulPolicyPreservedStateDiskDeviceResponse {
		return v.Disks
	}).(StatefulPolicyPreservedStateDiskDeviceResponseOutput)
}

// External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStateResponseOutput) ExternalIPs() StatefulPolicyPreservedStateNetworkIpResponseOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateResponse) StatefulPolicyPreservedStateNetworkIpResponse {
		return v.ExternalIPs
	}).(StatefulPolicyPreservedStateNetworkIpResponseOutput)
}

// Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name.
func (o StatefulPolicyPreservedStateResponseOutput) InternalIPs() StatefulPolicyPreservedStateNetworkIpResponseOutput {
	return o.ApplyT(func(v StatefulPolicyPreservedStateResponse) StatefulPolicyPreservedStateNetworkIpResponse {
		return v.InternalIPs
	}).(StatefulPolicyPreservedStateNetworkIpResponseOutput)
}

type StatefulPolicyResponse struct {
	PreservedState StatefulPolicyPreservedStateResponse `pulumi:"preservedState"`
}

type StatefulPolicyResponseOutput struct{ *pulumi.OutputState }

func (StatefulPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatefulPolicyResponse)(nil)).Elem()
}

func (o StatefulPolicyResponseOutput) ToStatefulPolicyResponseOutput() StatefulPolicyResponseOutput {
	return o
}

func (o StatefulPolicyResponseOutput) ToStatefulPolicyResponseOutputWithContext(ctx context.Context) StatefulPolicyResponseOutput {
	return o
}

func (o StatefulPolicyResponseOutput) PreservedState() StatefulPolicyPreservedStateResponseOutput {
	return o.ApplyT(func(v StatefulPolicyResponse) StatefulPolicyPreservedStateResponse { return v.PreservedState }).(StatefulPolicyPreservedStateResponseOutput)
}

// [Output Only] Contains output only fields.
type StoragePoolResourceStatusResponse struct {
	// Sum of all the disks' provisioned IOPS.
	AggregateDiskProvisionedIops string `pulumi:"aggregateDiskProvisionedIops"`
	// Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
	AggregateDiskSizeGb string `pulumi:"aggregateDiskSizeGb"`
	// Timestamp of the last successful resize in RFC3339 text format.
	LastResizeTimestamp string `pulumi:"lastResizeTimestamp"`
	// Maximum allowed aggregate disk size in gigabytes.
	MaxAggregateDiskSizeGb string `pulumi:"maxAggregateDiskSizeGb"`
	// Number of disks used.
	NumberOfDisks string `pulumi:"numberOfDisks"`
	// Space used by data stored in disks within the storage pool (in bytes).
	UsedBytes string `pulumi:"usedBytes"`
	// Space used by compressed and deduped data stored in disks within the storage pool (in bytes).
	UsedReducedBytes string `pulumi:"usedReducedBytes"`
	// Sum of all the disks' provisioned throughput in MB/s.
	UsedThroughput string `pulumi:"usedThroughput"`
}

// [Output Only] Contains output only fields.
type StoragePoolResourceStatusResponseOutput struct{ *pulumi.OutputState }

func (StoragePoolResourceStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StoragePoolResourceStatusResponse)(nil)).Elem()
}

func (o StoragePoolResourceStatusResponseOutput) ToStoragePoolResourceStatusResponseOutput() StoragePoolResourceStatusResponseOutput {
	return o
}

func (o StoragePoolResourceStatusResponseOutput) ToStoragePoolResourceStatusResponseOutputWithContext(ctx context.Context) StoragePoolResourceStatusResponseOutput {
	return o
}

// Sum of all the disks' provisioned IOPS.
func (o StoragePoolResourceStatusResponseOutput) AggregateDiskProvisionedIops() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.AggregateDiskProvisionedIops }).(pulumi.StringOutput)
}

// Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
func (o StoragePoolResourceStatusResponseOutput) AggregateDiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.AggregateDiskSizeGb }).(pulumi.StringOutput)
}

// Timestamp of the last successful resize in RFC3339 text format.
func (o StoragePoolResourceStatusResponseOutput) LastResizeTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.LastResizeTimestamp }).(pulumi.StringOutput)
}

// Maximum allowed aggregate disk size in gigabytes.
func (o StoragePoolResourceStatusResponseOutput) MaxAggregateDiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.MaxAggregateDiskSizeGb }).(pulumi.StringOutput)
}

// Number of disks used.
func (o StoragePoolResourceStatusResponseOutput) NumberOfDisks() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.NumberOfDisks }).(pulumi.StringOutput)
}

// Space used by data stored in disks within the storage pool (in bytes).
func (o StoragePoolResourceStatusResponseOutput) UsedBytes() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.UsedBytes }).(pulumi.StringOutput)
}

// Space used by compressed and deduped data stored in disks within the storage pool (in bytes).
func (o StoragePoolResourceStatusResponseOutput) UsedReducedBytes() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.UsedReducedBytes }).(pulumi.StringOutput)
}

// Sum of all the disks' provisioned throughput in MB/s.
func (o StoragePoolResourceStatusResponseOutput) UsedThroughput() pulumi.StringOutput {
	return o.ApplyT(func(v StoragePoolResourceStatusResponse) string { return v.UsedThroughput }).(pulumi.StringOutput)
}

type StructuredEntries struct {
	// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
	Entries map[string]interface{} `pulumi:"entries"`
}

// StructuredEntriesInput is an input type that accepts StructuredEntriesArgs and StructuredEntriesOutput values.
// You can construct a concrete instance of `StructuredEntriesInput` via:
//
//	StructuredEntriesArgs{...}
type StructuredEntriesInput interface {
	pulumi.Input

	ToStructuredEntriesOutput() StructuredEntriesOutput
	ToStructuredEntriesOutputWithContext(context.Context) StructuredEntriesOutput
}

type StructuredEntriesArgs struct {
	// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
	Entries pulumi.MapInput `pulumi:"entries"`
}

func (StructuredEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StructuredEntries)(nil)).Elem()
}

func (i StructuredEntriesArgs) ToStructuredEntriesOutput() StructuredEntriesOutput {
	return i.ToStructuredEntriesOutputWithContext(context.Background())
}

func (i StructuredEntriesArgs) ToStructuredEntriesOutputWithContext(ctx context.Context) StructuredEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StructuredEntriesOutput)
}

func (i StructuredEntriesArgs) ToStructuredEntriesPtrOutput() StructuredEntriesPtrOutput {
	return i.ToStructuredEntriesPtrOutputWithContext(context.Background())
}

func (i StructuredEntriesArgs) ToStructuredEntriesPtrOutputWithContext(ctx context.Context) StructuredEntriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StructuredEntriesOutput).ToStructuredEntriesPtrOutputWithContext(ctx)
}

// StructuredEntriesPtrInput is an input type that accepts StructuredEntriesArgs, StructuredEntriesPtr and StructuredEntriesPtrOutput values.
// You can construct a concrete instance of `StructuredEntriesPtrInput` via:
//
//	        StructuredEntriesArgs{...}
//
//	or:
//
//	        nil
type StructuredEntriesPtrInput interface {
	pulumi.Input

	ToStructuredEntriesPtrOutput() StructuredEntriesPtrOutput
	ToStructuredEntriesPtrOutputWithContext(context.Context) StructuredEntriesPtrOutput
}

type structuredEntriesPtrType StructuredEntriesArgs

func StructuredEntriesPtr(v *StructuredEntriesArgs) StructuredEntriesPtrInput {
	return (*structuredEntriesPtrType)(v)
}

func (*structuredEntriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StructuredEntries)(nil)).Elem()
}

func (i *structuredEntriesPtrType) ToStructuredEntriesPtrOutput() StructuredEntriesPtrOutput {
	return i.ToStructuredEntriesPtrOutputWithContext(context.Background())
}

func (i *structuredEntriesPtrType) ToStructuredEntriesPtrOutputWithContext(ctx context.Context) StructuredEntriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StructuredEntriesPtrOutput)
}

type StructuredEntriesOutput struct{ *pulumi.OutputState }

func (StructuredEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StructuredEntries)(nil)).Elem()
}

func (o StructuredEntriesOutput) ToStructuredEntriesOutput() StructuredEntriesOutput {
	return o
}

func (o StructuredEntriesOutput) ToStructuredEntriesOutputWithContext(ctx context.Context) StructuredEntriesOutput {
	return o
}

func (o StructuredEntriesOutput) ToStructuredEntriesPtrOutput() StructuredEntriesPtrOutput {
	return o.ToStructuredEntriesPtrOutputWithContext(context.Background())
}

func (o StructuredEntriesOutput) ToStructuredEntriesPtrOutputWithContext(ctx context.Context) StructuredEntriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StructuredEntries) *StructuredEntries {
		return &v
	}).(StructuredEntriesPtrOutput)
}

// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
func (o StructuredEntriesOutput) Entries() pulumi.MapOutput {
	return o.ApplyT(func(v StructuredEntries) map[string]interface{} { return v.Entries }).(pulumi.MapOutput)
}

type StructuredEntriesPtrOutput struct{ *pulumi.OutputState }

func (StructuredEntriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StructuredEntries)(nil)).Elem()
}

func (o StructuredEntriesPtrOutput) ToStructuredEntriesPtrOutput() StructuredEntriesPtrOutput {
	return o
}

func (o StructuredEntriesPtrOutput) ToStructuredEntriesPtrOutputWithContext(ctx context.Context) StructuredEntriesPtrOutput {
	return o
}

func (o StructuredEntriesPtrOutput) Elem() StructuredEntriesOutput {
	return o.ApplyT(func(v *StructuredEntries) StructuredEntries {
		if v != nil {
			return *v
		}
		var ret StructuredEntries
		return ret
	}).(StructuredEntriesOutput)
}

// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
func (o StructuredEntriesPtrOutput) Entries() pulumi.MapOutput {
	return o.ApplyT(func(v *StructuredEntries) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Entries
	}).(pulumi.MapOutput)
}

type StructuredEntriesResponse struct {
	// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
	Entries map[string]interface{} `pulumi:"entries"`
}

type StructuredEntriesResponseOutput struct{ *pulumi.OutputState }

func (StructuredEntriesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StructuredEntriesResponse)(nil)).Elem()
}

func (o StructuredEntriesResponseOutput) ToStructuredEntriesResponseOutput() StructuredEntriesResponseOutput {
	return o
}

func (o StructuredEntriesResponseOutput) ToStructuredEntriesResponseOutputWithContext(ctx context.Context) StructuredEntriesResponseOutput {
	return o
}

// Map of a partner metadata that belong to the same subdomain. It accepts any value including google.protobuf.Struct.
func (o StructuredEntriesResponseOutput) Entries() pulumi.MapOutput {
	return o.ApplyT(func(v StructuredEntriesResponse) map[string]interface{} { return v.Entries }).(pulumi.MapOutput)
}

// The available logging options for this subnetwork.
type SubnetworkLogConfig struct {
	// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
	AggregationInterval *SubnetworkLogConfigAggregationInterval `pulumi:"aggregationInterval"`
	// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
	Enable *bool `pulumi:"enable"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
	FilterExpr *string `pulumi:"filterExpr"`
	// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
	FlowSampling *float64 `pulumi:"flowSampling"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
	Metadata *SubnetworkLogConfigMetadata `pulumi:"metadata"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
	MetadataFields []string `pulumi:"metadataFields"`
}

// SubnetworkLogConfigInput is an input type that accepts SubnetworkLogConfigArgs and SubnetworkLogConfigOutput values.
// You can construct a concrete instance of `SubnetworkLogConfigInput` via:
//
//	SubnetworkLogConfigArgs{...}
type SubnetworkLogConfigInput interface {
	pulumi.Input

	ToSubnetworkLogConfigOutput() SubnetworkLogConfigOutput
	ToSubnetworkLogConfigOutputWithContext(context.Context) SubnetworkLogConfigOutput
}

// The available logging options for this subnetwork.
type SubnetworkLogConfigArgs struct {
	// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
	AggregationInterval SubnetworkLogConfigAggregationIntervalPtrInput `pulumi:"aggregationInterval"`
	// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
	FilterExpr pulumi.StringPtrInput `pulumi:"filterExpr"`
	// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
	FlowSampling pulumi.Float64PtrInput `pulumi:"flowSampling"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
	Metadata SubnetworkLogConfigMetadataPtrInput `pulumi:"metadata"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
	MetadataFields pulumi.StringArrayInput `pulumi:"metadataFields"`
}

func (SubnetworkLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfig)(nil)).Elem()
}

func (i SubnetworkLogConfigArgs) ToSubnetworkLogConfigOutput() SubnetworkLogConfigOutput {
	return i.ToSubnetworkLogConfigOutputWithContext(context.Background())
}

func (i SubnetworkLogConfigArgs) ToSubnetworkLogConfigOutputWithContext(ctx context.Context) SubnetworkLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkLogConfigOutput)
}

func (i SubnetworkLogConfigArgs) ToSubnetworkLogConfigPtrOutput() SubnetworkLogConfigPtrOutput {
	return i.ToSubnetworkLogConfigPtrOutputWithContext(context.Background())
}

func (i SubnetworkLogConfigArgs) ToSubnetworkLogConfigPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkLogConfigOutput).ToSubnetworkLogConfigPtrOutputWithContext(ctx)
}

// SubnetworkLogConfigPtrInput is an input type that accepts SubnetworkLogConfigArgs, SubnetworkLogConfigPtr and SubnetworkLogConfigPtrOutput values.
// You can construct a concrete instance of `SubnetworkLogConfigPtrInput` via:
//
//	        SubnetworkLogConfigArgs{...}
//
//	or:
//
//	        nil
type SubnetworkLogConfigPtrInput interface {
	pulumi.Input

	ToSubnetworkLogConfigPtrOutput() SubnetworkLogConfigPtrOutput
	ToSubnetworkLogConfigPtrOutputWithContext(context.Context) SubnetworkLogConfigPtrOutput
}

type subnetworkLogConfigPtrType SubnetworkLogConfigArgs

func SubnetworkLogConfigPtr(v *SubnetworkLogConfigArgs) SubnetworkLogConfigPtrInput {
	return (*subnetworkLogConfigPtrType)(v)
}

func (*subnetworkLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkLogConfig)(nil)).Elem()
}

func (i *subnetworkLogConfigPtrType) ToSubnetworkLogConfigPtrOutput() SubnetworkLogConfigPtrOutput {
	return i.ToSubnetworkLogConfigPtrOutputWithContext(context.Background())
}

func (i *subnetworkLogConfigPtrType) ToSubnetworkLogConfigPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkLogConfigPtrOutput)
}

// The available logging options for this subnetwork.
type SubnetworkLogConfigOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfig)(nil)).Elem()
}

func (o SubnetworkLogConfigOutput) ToSubnetworkLogConfigOutput() SubnetworkLogConfigOutput {
	return o
}

func (o SubnetworkLogConfigOutput) ToSubnetworkLogConfigOutputWithContext(ctx context.Context) SubnetworkLogConfigOutput {
	return o
}

func (o SubnetworkLogConfigOutput) ToSubnetworkLogConfigPtrOutput() SubnetworkLogConfigPtrOutput {
	return o.ToSubnetworkLogConfigPtrOutputWithContext(context.Background())
}

func (o SubnetworkLogConfigOutput) ToSubnetworkLogConfigPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubnetworkLogConfig) *SubnetworkLogConfig {
		return &v
	}).(SubnetworkLogConfigPtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
func (o SubnetworkLogConfigOutput) AggregationInterval() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) *SubnetworkLogConfigAggregationInterval { return v.AggregationInterval }).(SubnetworkLogConfigAggregationIntervalPtrOutput)
}

// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
func (o SubnetworkLogConfigOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
func (o SubnetworkLogConfigOutput) FilterExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) *string { return v.FilterExpr }).(pulumi.StringPtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
func (o SubnetworkLogConfigOutput) FlowSampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) *float64 { return v.FlowSampling }).(pulumi.Float64PtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
func (o SubnetworkLogConfigOutput) Metadata() SubnetworkLogConfigMetadataPtrOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) *SubnetworkLogConfigMetadata { return v.Metadata }).(SubnetworkLogConfigMetadataPtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
func (o SubnetworkLogConfigOutput) MetadataFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetworkLogConfig) []string { return v.MetadataFields }).(pulumi.StringArrayOutput)
}

type SubnetworkLogConfigPtrOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetworkLogConfig)(nil)).Elem()
}

func (o SubnetworkLogConfigPtrOutput) ToSubnetworkLogConfigPtrOutput() SubnetworkLogConfigPtrOutput {
	return o
}

func (o SubnetworkLogConfigPtrOutput) ToSubnetworkLogConfigPtrOutputWithContext(ctx context.Context) SubnetworkLogConfigPtrOutput {
	return o
}

func (o SubnetworkLogConfigPtrOutput) Elem() SubnetworkLogConfigOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) SubnetworkLogConfig {
		if v != nil {
			return *v
		}
		var ret SubnetworkLogConfig
		return ret
	}).(SubnetworkLogConfigOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
func (o SubnetworkLogConfigPtrOutput) AggregationInterval() SubnetworkLogConfigAggregationIntervalPtrOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) *SubnetworkLogConfigAggregationInterval {
		if v == nil {
			return nil
		}
		return v.AggregationInterval
	}).(SubnetworkLogConfigAggregationIntervalPtrOutput)
}

// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
func (o SubnetworkLogConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
func (o SubnetworkLogConfigPtrOutput) FilterExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) *string {
		if v == nil {
			return nil
		}
		return v.FilterExpr
	}).(pulumi.StringPtrOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
func (o SubnetworkLogConfigPtrOutput) FlowSampling() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.FlowSampling
	}).(pulumi.Float64PtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
func (o SubnetworkLogConfigPtrOutput) Metadata() SubnetworkLogConfigMetadataPtrOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) *SubnetworkLogConfigMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(SubnetworkLogConfigMetadataPtrOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
func (o SubnetworkLogConfigPtrOutput) MetadataFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetworkLogConfig) []string {
		if v == nil {
			return nil
		}
		return v.MetadataFields
	}).(pulumi.StringArrayOutput)
}

// The available logging options for this subnetwork.
type SubnetworkLogConfigResponse struct {
	// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
	AggregationInterval string `pulumi:"aggregationInterval"`
	// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
	Enable bool `pulumi:"enable"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
	FilterExpr string `pulumi:"filterExpr"`
	// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
	FlowSampling float64 `pulumi:"flowSampling"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
	Metadata string `pulumi:"metadata"`
	// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
	MetadataFields []string `pulumi:"metadataFields"`
}

// The available logging options for this subnetwork.
type SubnetworkLogConfigResponseOutput struct{ *pulumi.OutputState }

func (SubnetworkLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkLogConfigResponse)(nil)).Elem()
}

func (o SubnetworkLogConfigResponseOutput) ToSubnetworkLogConfigResponseOutput() SubnetworkLogConfigResponseOutput {
	return o
}

func (o SubnetworkLogConfigResponseOutput) ToSubnetworkLogConfigResponseOutputWithContext(ctx context.Context) SubnetworkLogConfigResponseOutput {
	return o
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
func (o SubnetworkLogConfigResponseOutput) AggregationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) string { return v.AggregationInterval }).(pulumi.StringOutput)
}

// Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is determined by the org policy, if there is no org policy specified, then it will default to disabled. Flow logging isn't supported if the subnet purpose field is set to REGIONAL_MANAGED_PROXY.
func (o SubnetworkLogConfigResponseOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) bool { return v.Enable }).(pulumi.BoolOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. The filter expression is used to define which VPC flow logs should be exported to Cloud Logging.
func (o SubnetworkLogConfigResponseOutput) FilterExpr() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) string { return v.FilterExpr }).(pulumi.StringOutput)
}

// Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5 unless otherwise specified by the org policy, which means half of all collected logs are reported.
func (o SubnetworkLogConfigResponseOutput) FlowSampling() pulumi.Float64Output {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) float64 { return v.FlowSampling }).(pulumi.Float64Output)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
func (o SubnetworkLogConfigResponseOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) string { return v.Metadata }).(pulumi.StringOutput)
}

// Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA.
func (o SubnetworkLogConfigResponseOutput) MetadataFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetworkLogConfigResponse) []string { return v.MetadataFields }).(pulumi.StringArrayOutput)
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRange struct {
	// The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
	RangeName *string `pulumi:"rangeName"`
	// The URL of the reserved internal range.
	ReservedInternalRange *string `pulumi:"reservedInternalRange"`
}

// SubnetworkSecondaryRangeInput is an input type that accepts SubnetworkSecondaryRangeArgs and SubnetworkSecondaryRangeOutput values.
// You can construct a concrete instance of `SubnetworkSecondaryRangeInput` via:
//
//	SubnetworkSecondaryRangeArgs{...}
type SubnetworkSecondaryRangeInput interface {
	pulumi.Input

	ToSubnetworkSecondaryRangeOutput() SubnetworkSecondaryRangeOutput
	ToSubnetworkSecondaryRangeOutputWithContext(context.Context) SubnetworkSecondaryRangeOutput
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRangeArgs struct {
	// The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
	IpCidrRange pulumi.StringPtrInput `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
	RangeName pulumi.StringPtrInput `pulumi:"rangeName"`
	// The URL of the reserved internal range.
	ReservedInternalRange pulumi.StringPtrInput `pulumi:"reservedInternalRange"`
}

func (SubnetworkSecondaryRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkSecondaryRange)(nil)).Elem()
}

func (i SubnetworkSecondaryRangeArgs) ToSubnetworkSecondaryRangeOutput() SubnetworkSecondaryRangeOutput {
	return i.ToSubnetworkSecondaryRangeOutputWithContext(context.Background())
}

func (i SubnetworkSecondaryRangeArgs) ToSubnetworkSecondaryRangeOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkSecondaryRangeOutput)
}

// SubnetworkSecondaryRangeArrayInput is an input type that accepts SubnetworkSecondaryRangeArray and SubnetworkSecondaryRangeArrayOutput values.
// You can construct a concrete instance of `SubnetworkSecondaryRangeArrayInput` via:
//
//	SubnetworkSecondaryRangeArray{ SubnetworkSecondaryRangeArgs{...} }
type SubnetworkSecondaryRangeArrayInput interface {
	pulumi.Input

	ToSubnetworkSecondaryRangeArrayOutput() SubnetworkSecondaryRangeArrayOutput
	ToSubnetworkSecondaryRangeArrayOutputWithContext(context.Context) SubnetworkSecondaryRangeArrayOutput
}

type SubnetworkSecondaryRangeArray []SubnetworkSecondaryRangeInput

func (SubnetworkSecondaryRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetworkSecondaryRange)(nil)).Elem()
}

func (i SubnetworkSecondaryRangeArray) ToSubnetworkSecondaryRangeArrayOutput() SubnetworkSecondaryRangeArrayOutput {
	return i.ToSubnetworkSecondaryRangeArrayOutputWithContext(context.Background())
}

func (i SubnetworkSecondaryRangeArray) ToSubnetworkSecondaryRangeArrayOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetworkSecondaryRangeArrayOutput)
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRangeOutput struct{ *pulumi.OutputState }

func (SubnetworkSecondaryRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkSecondaryRange)(nil)).Elem()
}

func (o SubnetworkSecondaryRangeOutput) ToSubnetworkSecondaryRangeOutput() SubnetworkSecondaryRangeOutput {
	return o
}

func (o SubnetworkSecondaryRangeOutput) ToSubnetworkSecondaryRangeOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeOutput {
	return o
}

// The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
func (o SubnetworkSecondaryRangeOutput) IpCidrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRange) *string { return v.IpCidrRange }).(pulumi.StringPtrOutput)
}

// The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
func (o SubnetworkSecondaryRangeOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRange) *string { return v.RangeName }).(pulumi.StringPtrOutput)
}

// The URL of the reserved internal range.
func (o SubnetworkSecondaryRangeOutput) ReservedInternalRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRange) *string { return v.ReservedInternalRange }).(pulumi.StringPtrOutput)
}

type SubnetworkSecondaryRangeArrayOutput struct{ *pulumi.OutputState }

func (SubnetworkSecondaryRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetworkSecondaryRange)(nil)).Elem()
}

func (o SubnetworkSecondaryRangeArrayOutput) ToSubnetworkSecondaryRangeArrayOutput() SubnetworkSecondaryRangeArrayOutput {
	return o
}

func (o SubnetworkSecondaryRangeArrayOutput) ToSubnetworkSecondaryRangeArrayOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeArrayOutput {
	return o
}

func (o SubnetworkSecondaryRangeArrayOutput) Index(i pulumi.IntInput) SubnetworkSecondaryRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetworkSecondaryRange {
		return vs[0].([]SubnetworkSecondaryRange)[vs[1].(int)]
	}).(SubnetworkSecondaryRangeOutput)
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRangeResponse struct {
	// The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
	RangeName string `pulumi:"rangeName"`
	// The URL of the reserved internal range.
	ReservedInternalRange string `pulumi:"reservedInternalRange"`
}

// Represents a secondary IP range of a subnetwork.
type SubnetworkSecondaryRangeResponseOutput struct{ *pulumi.OutputState }

func (SubnetworkSecondaryRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetworkSecondaryRangeResponse)(nil)).Elem()
}

func (o SubnetworkSecondaryRangeResponseOutput) ToSubnetworkSecondaryRangeResponseOutput() SubnetworkSecondaryRangeResponseOutput {
	return o
}

func (o SubnetworkSecondaryRangeResponseOutput) ToSubnetworkSecondaryRangeResponseOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeResponseOutput {
	return o
}

// The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list.
func (o SubnetworkSecondaryRangeResponseOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRangeResponse) string { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
func (o SubnetworkSecondaryRangeResponseOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRangeResponse) string { return v.RangeName }).(pulumi.StringOutput)
}

// The URL of the reserved internal range.
func (o SubnetworkSecondaryRangeResponseOutput) ReservedInternalRange() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetworkSecondaryRangeResponse) string { return v.ReservedInternalRange }).(pulumi.StringOutput)
}

type SubnetworkSecondaryRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetworkSecondaryRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetworkSecondaryRangeResponse)(nil)).Elem()
}

func (o SubnetworkSecondaryRangeResponseArrayOutput) ToSubnetworkSecondaryRangeResponseArrayOutput() SubnetworkSecondaryRangeResponseArrayOutput {
	return o
}

func (o SubnetworkSecondaryRangeResponseArrayOutput) ToSubnetworkSecondaryRangeResponseArrayOutputWithContext(ctx context.Context) SubnetworkSecondaryRangeResponseArrayOutput {
	return o
}

func (o SubnetworkSecondaryRangeResponseArrayOutput) Index(i pulumi.IntInput) SubnetworkSecondaryRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetworkSecondaryRangeResponse {
		return vs[0].([]SubnetworkSecondaryRangeResponse)[vs[1].(int)]
	}).(SubnetworkSecondaryRangeResponseOutput)
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
type Subsetting struct {
	Policy *SubsettingPolicy `pulumi:"policy"`
	// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
	SubsetSize *int `pulumi:"subsetSize"`
}

// SubsettingInput is an input type that accepts SubsettingArgs and SubsettingOutput values.
// You can construct a concrete instance of `SubsettingInput` via:
//
//	SubsettingArgs{...}
type SubsettingInput interface {
	pulumi.Input

	ToSubsettingOutput() SubsettingOutput
	ToSubsettingOutputWithContext(context.Context) SubsettingOutput
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
type SubsettingArgs struct {
	Policy SubsettingPolicyPtrInput `pulumi:"policy"`
	// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
	SubsetSize pulumi.IntPtrInput `pulumi:"subsetSize"`
}

func (SubsettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Subsetting)(nil)).Elem()
}

func (i SubsettingArgs) ToSubsettingOutput() SubsettingOutput {
	return i.ToSubsettingOutputWithContext(context.Background())
}

func (i SubsettingArgs) ToSubsettingOutputWithContext(ctx context.Context) SubsettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubsettingOutput)
}

func (i SubsettingArgs) ToSubsettingPtrOutput() SubsettingPtrOutput {
	return i.ToSubsettingPtrOutputWithContext(context.Background())
}

func (i SubsettingArgs) ToSubsettingPtrOutputWithContext(ctx context.Context) SubsettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubsettingOutput).ToSubsettingPtrOutputWithContext(ctx)
}

// SubsettingPtrInput is an input type that accepts SubsettingArgs, SubsettingPtr and SubsettingPtrOutput values.
// You can construct a concrete instance of `SubsettingPtrInput` via:
//
//	        SubsettingArgs{...}
//
//	or:
//
//	        nil
type SubsettingPtrInput interface {
	pulumi.Input

	ToSubsettingPtrOutput() SubsettingPtrOutput
	ToSubsettingPtrOutputWithContext(context.Context) SubsettingPtrOutput
}

type subsettingPtrType SubsettingArgs

func SubsettingPtr(v *SubsettingArgs) SubsettingPtrInput {
	return (*subsettingPtrType)(v)
}

func (*subsettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Subsetting)(nil)).Elem()
}

func (i *subsettingPtrType) ToSubsettingPtrOutput() SubsettingPtrOutput {
	return i.ToSubsettingPtrOutputWithContext(context.Background())
}

func (i *subsettingPtrType) ToSubsettingPtrOutputWithContext(ctx context.Context) SubsettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubsettingPtrOutput)
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
type SubsettingOutput struct{ *pulumi.OutputState }

func (SubsettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Subsetting)(nil)).Elem()
}

func (o SubsettingOutput) ToSubsettingOutput() SubsettingOutput {
	return o
}

func (o SubsettingOutput) ToSubsettingOutputWithContext(ctx context.Context) SubsettingOutput {
	return o
}

func (o SubsettingOutput) ToSubsettingPtrOutput() SubsettingPtrOutput {
	return o.ToSubsettingPtrOutputWithContext(context.Background())
}

func (o SubsettingOutput) ToSubsettingPtrOutputWithContext(ctx context.Context) SubsettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Subsetting) *Subsetting {
		return &v
	}).(SubsettingPtrOutput)
}

func (o SubsettingOutput) Policy() SubsettingPolicyPtrOutput {
	return o.ApplyT(func(v Subsetting) *SubsettingPolicy { return v.Policy }).(SubsettingPolicyPtrOutput)
}

// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
func (o SubsettingOutput) SubsetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Subsetting) *int { return v.SubsetSize }).(pulumi.IntPtrOutput)
}

type SubsettingPtrOutput struct{ *pulumi.OutputState }

func (SubsettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Subsetting)(nil)).Elem()
}

func (o SubsettingPtrOutput) ToSubsettingPtrOutput() SubsettingPtrOutput {
	return o
}

func (o SubsettingPtrOutput) ToSubsettingPtrOutputWithContext(ctx context.Context) SubsettingPtrOutput {
	return o
}

func (o SubsettingPtrOutput) Elem() SubsettingOutput {
	return o.ApplyT(func(v *Subsetting) Subsetting {
		if v != nil {
			return *v
		}
		var ret Subsetting
		return ret
	}).(SubsettingOutput)
}

func (o SubsettingPtrOutput) Policy() SubsettingPolicyPtrOutput {
	return o.ApplyT(func(v *Subsetting) *SubsettingPolicy {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(SubsettingPolicyPtrOutput)
}

// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
func (o SubsettingPtrOutput) SubsetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Subsetting) *int {
		if v == nil {
			return nil
		}
		return v.SubsetSize
	}).(pulumi.IntPtrOutput)
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
type SubsettingResponse struct {
	Policy string `pulumi:"policy"`
	// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
	SubsetSize int `pulumi:"subsetSize"`
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director.
type SubsettingResponseOutput struct{ *pulumi.OutputState }

func (SubsettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubsettingResponse)(nil)).Elem()
}

func (o SubsettingResponseOutput) ToSubsettingResponseOutput() SubsettingResponseOutput {
	return o
}

func (o SubsettingResponseOutput) ToSubsettingResponseOutputWithContext(ctx context.Context) SubsettingResponseOutput {
	return o
}

func (o SubsettingResponseOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v SubsettingResponse) string { return v.Policy }).(pulumi.StringOutput)
}

// The number of backends per backend group assigned to each proxy instance or each service mesh client. An input parameter to the `CONSISTENT_HASH_SUBSETTING` algorithm. Can only be set if `policy` is set to `CONSISTENT_HASH_SUBSETTING`. Can only be set if load balancing scheme is `INTERNAL_MANAGED` or `INTERNAL_SELF_MANAGED`. `subset_size` is optional for Internal HTTP(S) load balancing and required for Traffic Director. If you do not provide this value, Cloud Load Balancing will calculate it dynamically to optimize the number of proxies/clients visible to each backend and vice versa. Must be greater than 0. If `subset_size` is larger than the number of backends/endpoints, then subsetting is disabled.
func (o SubsettingResponseOutput) SubsetSize() pulumi.IntOutput {
	return o.ApplyT(func(v SubsettingResponse) int { return v.SubsetSize }).(pulumi.IntOutput)
}

type TCPHealthCheck struct {
	// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
	Port *int `pulumi:"port"`
	// Not supported.
	PortName *string `pulumi:"portName"`
	// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
	PortSpecification *TCPHealthCheckPortSpecification `pulumi:"portSpecification"`
	// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
	ProxyHeader *TCPHealthCheckProxyHeader `pulumi:"proxyHeader"`
	// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
	Request *string `pulumi:"request"`
	// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
	Response *string `pulumi:"response"`
}

// TCPHealthCheckInput is an input type that accepts TCPHealthCheckArgs and TCPHealthCheckOutput values.
// You can construct a concrete instance of `TCPHealthCheckInput` via:
//
//	TCPHealthCheckArgs{...}
type TCPHealthCheckInput interface {
	pulumi.Input

	ToTCPHealthCheckOutput() TCPHealthCheckOutput
	ToTCPHealthCheckOutputWithContext(context.Context) TCPHealthCheckOutput
}

type TCPHealthCheckArgs struct {
	// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Not supported.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
	// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
	PortSpecification TCPHealthCheckPortSpecificationPtrInput `pulumi:"portSpecification"`
	// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
	ProxyHeader TCPHealthCheckProxyHeaderPtrInput `pulumi:"proxyHeader"`
	// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
	Request pulumi.StringPtrInput `pulumi:"request"`
	// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
	Response pulumi.StringPtrInput `pulumi:"response"`
}

func (TCPHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheck)(nil)).Elem()
}

func (i TCPHealthCheckArgs) ToTCPHealthCheckOutput() TCPHealthCheckOutput {
	return i.ToTCPHealthCheckOutputWithContext(context.Background())
}

func (i TCPHealthCheckArgs) ToTCPHealthCheckOutputWithContext(ctx context.Context) TCPHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPHealthCheckOutput)
}

func (i TCPHealthCheckArgs) ToTCPHealthCheckPtrOutput() TCPHealthCheckPtrOutput {
	return i.ToTCPHealthCheckPtrOutputWithContext(context.Background())
}

func (i TCPHealthCheckArgs) ToTCPHealthCheckPtrOutputWithContext(ctx context.Context) TCPHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPHealthCheckOutput).ToTCPHealthCheckPtrOutputWithContext(ctx)
}

// TCPHealthCheckPtrInput is an input type that accepts TCPHealthCheckArgs, TCPHealthCheckPtr and TCPHealthCheckPtrOutput values.
// You can construct a concrete instance of `TCPHealthCheckPtrInput` via:
//
//	        TCPHealthCheckArgs{...}
//
//	or:
//
//	        nil
type TCPHealthCheckPtrInput interface {
	pulumi.Input

	ToTCPHealthCheckPtrOutput() TCPHealthCheckPtrOutput
	ToTCPHealthCheckPtrOutputWithContext(context.Context) TCPHealthCheckPtrOutput
}

type tcphealthCheckPtrType TCPHealthCheckArgs

func TCPHealthCheckPtr(v *TCPHealthCheckArgs) TCPHealthCheckPtrInput {
	return (*tcphealthCheckPtrType)(v)
}

func (*tcphealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPHealthCheck)(nil)).Elem()
}

func (i *tcphealthCheckPtrType) ToTCPHealthCheckPtrOutput() TCPHealthCheckPtrOutput {
	return i.ToTCPHealthCheckPtrOutputWithContext(context.Background())
}

func (i *tcphealthCheckPtrType) ToTCPHealthCheckPtrOutputWithContext(ctx context.Context) TCPHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPHealthCheckPtrOutput)
}

type TCPHealthCheckOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheck)(nil)).Elem()
}

func (o TCPHealthCheckOutput) ToTCPHealthCheckOutput() TCPHealthCheckOutput {
	return o
}

func (o TCPHealthCheckOutput) ToTCPHealthCheckOutputWithContext(ctx context.Context) TCPHealthCheckOutput {
	return o
}

func (o TCPHealthCheckOutput) ToTCPHealthCheckPtrOutput() TCPHealthCheckPtrOutput {
	return o.ToTCPHealthCheckPtrOutputWithContext(context.Background())
}

func (o TCPHealthCheckOutput) ToTCPHealthCheckPtrOutputWithContext(ctx context.Context) TCPHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TCPHealthCheck) *TCPHealthCheck {
		return &v
	}).(TCPHealthCheckPtrOutput)
}

// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
func (o TCPHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Not supported.
func (o TCPHealthCheckOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
func (o TCPHealthCheckOutput) PortSpecification() TCPHealthCheckPortSpecificationPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *TCPHealthCheckPortSpecification { return v.PortSpecification }).(TCPHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
func (o TCPHealthCheckOutput) ProxyHeader() TCPHealthCheckProxyHeaderPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *TCPHealthCheckProxyHeader { return v.ProxyHeader }).(TCPHealthCheckProxyHeaderPtrOutput)
}

// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
func (o TCPHealthCheckOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *string { return v.Request }).(pulumi.StringPtrOutput)
}

// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
func (o TCPHealthCheckOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPHealthCheck) *string { return v.Response }).(pulumi.StringPtrOutput)
}

type TCPHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPHealthCheck)(nil)).Elem()
}

func (o TCPHealthCheckPtrOutput) ToTCPHealthCheckPtrOutput() TCPHealthCheckPtrOutput {
	return o
}

func (o TCPHealthCheckPtrOutput) ToTCPHealthCheckPtrOutputWithContext(ctx context.Context) TCPHealthCheckPtrOutput {
	return o
}

func (o TCPHealthCheckPtrOutput) Elem() TCPHealthCheckOutput {
	return o.ApplyT(func(v *TCPHealthCheck) TCPHealthCheck {
		if v != nil {
			return *v
		}
		var ret TCPHealthCheck
		return ret
	}).(TCPHealthCheckOutput)
}

// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
func (o TCPHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Not supported.
func (o TCPHealthCheckPtrOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.PortName
	}).(pulumi.StringPtrOutput)
}

// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
func (o TCPHealthCheckPtrOutput) PortSpecification() TCPHealthCheckPortSpecificationPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *TCPHealthCheckPortSpecification {
		if v == nil {
			return nil
		}
		return v.PortSpecification
	}).(TCPHealthCheckPortSpecificationPtrOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
func (o TCPHealthCheckPtrOutput) ProxyHeader() TCPHealthCheckProxyHeaderPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *TCPHealthCheckProxyHeader {
		if v == nil {
			return nil
		}
		return v.ProxyHeader
	}).(TCPHealthCheckProxyHeaderPtrOutput)
}

// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
func (o TCPHealthCheckPtrOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Request
	}).(pulumi.StringPtrOutput)
}

// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
func (o TCPHealthCheckPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

type TCPHealthCheckResponse struct {
	// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
	Port int `pulumi:"port"`
	// Not supported.
	PortName string `pulumi:"portName"`
	// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
	PortSpecification string `pulumi:"portSpecification"`
	// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
	ProxyHeader string `pulumi:"proxyHeader"`
	// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
	Request string `pulumi:"request"`
	// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
	Response string `pulumi:"response"`
}

type TCPHealthCheckResponseOutput struct{ *pulumi.OutputState }

func (TCPHealthCheckResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPHealthCheckResponse)(nil)).Elem()
}

func (o TCPHealthCheckResponseOutput) ToTCPHealthCheckResponseOutput() TCPHealthCheckResponseOutput {
	return o
}

func (o TCPHealthCheckResponseOutput) ToTCPHealthCheckResponseOutputWithContext(ctx context.Context) TCPHealthCheckResponseOutput {
	return o
}

// The TCP port number to which the health check prober sends packets. The default value is 80. Valid values are 1 through 65535.
func (o TCPHealthCheckResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Not supported.
func (o TCPHealthCheckResponseOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) string { return v.PortName }).(pulumi.StringOutput)
}

// Specifies how a port is selected for health checking. Can be one of the following values: USE_FIXED_PORT: Specifies a port number explicitly using the port field in the health check. Supported by backend services for pass-through load balancers and backend services for proxy load balancers. Not supported by target pools. The health check supports all backends supported by the backend service provided the backend can be health checked. For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method of specifying the health check port by referring to the backend service. Only supported by backend services for proxy load balancers. Not supported by target pools. Not supported by backend services for pass-through load balancers. Supports all backends that can be health checked; for example, GCE_VM_IP_PORT network endpoint groups and instance group backends. For GCE_VM_IP_PORT network endpoint group backends, the health check uses the port number specified for each endpoint in the network endpoint group. For instance group backends, the health check uses the port number determined by looking up the backend service's named port in the instance group's list of named ports.
func (o TCPHealthCheckResponseOutput) PortSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) string { return v.PortSpecification }).(pulumi.StringOutput)
}

// Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
func (o TCPHealthCheckResponseOutput) ProxyHeader() pulumi.StringOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) string { return v.ProxyHeader }).(pulumi.StringOutput)
}

// Instructs the health check prober to send this exact ASCII string, up to 1024 bytes in length, after establishing the TCP connection.
func (o TCPHealthCheckResponseOutput) Request() pulumi.StringOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) string { return v.Request }).(pulumi.StringOutput)
}

// Creates a content-based TCP health check. In addition to establishing a TCP connection, you can configure the health check to pass only when the backend sends this exact response ASCII string, up to 1024 bytes in length. For details, see: https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
func (o TCPHealthCheckResponseOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v TCPHealthCheckResponse) string { return v.Response }).(pulumi.StringOutput)
}

// A set of instance tags.
type Tags struct {
	// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
	Items []string `pulumi:"items"`
}

// TagsInput is an input type that accepts TagsArgs and TagsOutput values.
// You can construct a concrete instance of `TagsInput` via:
//
//	TagsArgs{...}
type TagsInput interface {
	pulumi.Input

	ToTagsOutput() TagsOutput
	ToTagsOutputWithContext(context.Context) TagsOutput
}

// A set of instance tags.
type TagsArgs struct {
	// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (TagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tags)(nil)).Elem()
}

func (i TagsArgs) ToTagsOutput() TagsOutput {
	return i.ToTagsOutputWithContext(context.Background())
}

func (i TagsArgs) ToTagsOutputWithContext(ctx context.Context) TagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsOutput)
}

func (i TagsArgs) ToTagsPtrOutput() TagsPtrOutput {
	return i.ToTagsPtrOutputWithContext(context.Background())
}

func (i TagsArgs) ToTagsPtrOutputWithContext(ctx context.Context) TagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsOutput).ToTagsPtrOutputWithContext(ctx)
}

// TagsPtrInput is an input type that accepts TagsArgs, TagsPtr and TagsPtrOutput values.
// You can construct a concrete instance of `TagsPtrInput` via:
//
//	        TagsArgs{...}
//
//	or:
//
//	        nil
type TagsPtrInput interface {
	pulumi.Input

	ToTagsPtrOutput() TagsPtrOutput
	ToTagsPtrOutputWithContext(context.Context) TagsPtrOutput
}

type tagsPtrType TagsArgs

func TagsPtr(v *TagsArgs) TagsPtrInput {
	return (*tagsPtrType)(v)
}

func (*tagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Tags)(nil)).Elem()
}

func (i *tagsPtrType) ToTagsPtrOutput() TagsPtrOutput {
	return i.ToTagsPtrOutputWithContext(context.Background())
}

func (i *tagsPtrType) ToTagsPtrOutputWithContext(ctx context.Context) TagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsPtrOutput)
}

// A set of instance tags.
type TagsOutput struct{ *pulumi.OutputState }

func (TagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tags)(nil)).Elem()
}

func (o TagsOutput) ToTagsOutput() TagsOutput {
	return o
}

func (o TagsOutput) ToTagsOutputWithContext(ctx context.Context) TagsOutput {
	return o
}

func (o TagsOutput) ToTagsPtrOutput() TagsPtrOutput {
	return o.ToTagsPtrOutputWithContext(context.Background())
}

func (o TagsOutput) ToTagsPtrOutputWithContext(ctx context.Context) TagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Tags) *Tags {
		return &v
	}).(TagsPtrOutput)
}

// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
func (o TagsOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Tags) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type TagsPtrOutput struct{ *pulumi.OutputState }

func (TagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tags)(nil)).Elem()
}

func (o TagsPtrOutput) ToTagsPtrOutput() TagsPtrOutput {
	return o
}

func (o TagsPtrOutput) ToTagsPtrOutputWithContext(ctx context.Context) TagsPtrOutput {
	return o
}

func (o TagsPtrOutput) Elem() TagsOutput {
	return o.ApplyT(func(v *Tags) Tags {
		if v != nil {
			return *v
		}
		var ret Tags
		return ret
	}).(TagsOutput)
}

// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
func (o TagsPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Tags) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

// A set of instance tags.
type TagsResponse struct {
	// Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
	Fingerprint string `pulumi:"fingerprint"`
	// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
	Items []string `pulumi:"items"`
}

// A set of instance tags.
type TagsResponseOutput struct{ *pulumi.OutputState }

func (TagsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagsResponse)(nil)).Elem()
}

func (o TagsResponseOutput) ToTagsResponseOutput() TagsResponseOutput {
	return o
}

func (o TagsResponseOutput) ToTagsResponseOutputWithContext(ctx context.Context) TagsResponseOutput {
	return o
}

// Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
func (o TagsResponseOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v TagsResponse) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
func (o TagsResponseOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TagsResponse) []string { return v.Items }).(pulumi.StringArrayOutput)
}

// [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
type TlsCertificateContext struct {
	// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
	CertificatePaths *TlsCertificatePaths `pulumi:"certificatePaths"`
	// Defines how TLS certificates are obtained.
	CertificateSource *TlsCertificateContextCertificateSource `pulumi:"certificateSource"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig *SdsConfig `pulumi:"sdsConfig"`
}

// TlsCertificateContextInput is an input type that accepts TlsCertificateContextArgs and TlsCertificateContextOutput values.
// You can construct a concrete instance of `TlsCertificateContextInput` via:
//
//	TlsCertificateContextArgs{...}
type TlsCertificateContextInput interface {
	pulumi.Input

	ToTlsCertificateContextOutput() TlsCertificateContextOutput
	ToTlsCertificateContextOutputWithContext(context.Context) TlsCertificateContextOutput
}

// [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
type TlsCertificateContextArgs struct {
	// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
	CertificatePaths TlsCertificatePathsPtrInput `pulumi:"certificatePaths"`
	// Defines how TLS certificates are obtained.
	CertificateSource TlsCertificateContextCertificateSourcePtrInput `pulumi:"certificateSource"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig SdsConfigPtrInput `pulumi:"sdsConfig"`
}

func (TlsCertificateContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateContext)(nil)).Elem()
}

func (i TlsCertificateContextArgs) ToTlsCertificateContextOutput() TlsCertificateContextOutput {
	return i.ToTlsCertificateContextOutputWithContext(context.Background())
}

func (i TlsCertificateContextArgs) ToTlsCertificateContextOutputWithContext(ctx context.Context) TlsCertificateContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateContextOutput)
}

func (i TlsCertificateContextArgs) ToTlsCertificateContextPtrOutput() TlsCertificateContextPtrOutput {
	return i.ToTlsCertificateContextPtrOutputWithContext(context.Background())
}

func (i TlsCertificateContextArgs) ToTlsCertificateContextPtrOutputWithContext(ctx context.Context) TlsCertificateContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateContextOutput).ToTlsCertificateContextPtrOutputWithContext(ctx)
}

// TlsCertificateContextPtrInput is an input type that accepts TlsCertificateContextArgs, TlsCertificateContextPtr and TlsCertificateContextPtrOutput values.
// You can construct a concrete instance of `TlsCertificateContextPtrInput` via:
//
//	        TlsCertificateContextArgs{...}
//
//	or:
//
//	        nil
type TlsCertificateContextPtrInput interface {
	pulumi.Input

	ToTlsCertificateContextPtrOutput() TlsCertificateContextPtrOutput
	ToTlsCertificateContextPtrOutputWithContext(context.Context) TlsCertificateContextPtrOutput
}

type tlsCertificateContextPtrType TlsCertificateContextArgs

func TlsCertificateContextPtr(v *TlsCertificateContextArgs) TlsCertificateContextPtrInput {
	return (*tlsCertificateContextPtrType)(v)
}

func (*tlsCertificateContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertificateContext)(nil)).Elem()
}

func (i *tlsCertificateContextPtrType) ToTlsCertificateContextPtrOutput() TlsCertificateContextPtrOutput {
	return i.ToTlsCertificateContextPtrOutputWithContext(context.Background())
}

func (i *tlsCertificateContextPtrType) ToTlsCertificateContextPtrOutputWithContext(ctx context.Context) TlsCertificateContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateContextPtrOutput)
}

// [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
type TlsCertificateContextOutput struct{ *pulumi.OutputState }

func (TlsCertificateContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateContext)(nil)).Elem()
}

func (o TlsCertificateContextOutput) ToTlsCertificateContextOutput() TlsCertificateContextOutput {
	return o
}

func (o TlsCertificateContextOutput) ToTlsCertificateContextOutputWithContext(ctx context.Context) TlsCertificateContextOutput {
	return o
}

func (o TlsCertificateContextOutput) ToTlsCertificateContextPtrOutput() TlsCertificateContextPtrOutput {
	return o.ToTlsCertificateContextPtrOutputWithContext(context.Background())
}

func (o TlsCertificateContextOutput) ToTlsCertificateContextPtrOutputWithContext(ctx context.Context) TlsCertificateContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsCertificateContext) *TlsCertificateContext {
		return &v
	}).(TlsCertificateContextPtrOutput)
}

// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
func (o TlsCertificateContextOutput) CertificatePaths() TlsCertificatePathsPtrOutput {
	return o.ApplyT(func(v TlsCertificateContext) *TlsCertificatePaths { return v.CertificatePaths }).(TlsCertificatePathsPtrOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsCertificateContextOutput) CertificateSource() TlsCertificateContextCertificateSourcePtrOutput {
	return o.ApplyT(func(v TlsCertificateContext) *TlsCertificateContextCertificateSource { return v.CertificateSource }).(TlsCertificateContextCertificateSourcePtrOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsCertificateContextOutput) SdsConfig() SdsConfigPtrOutput {
	return o.ApplyT(func(v TlsCertificateContext) *SdsConfig { return v.SdsConfig }).(SdsConfigPtrOutput)
}

type TlsCertificateContextPtrOutput struct{ *pulumi.OutputState }

func (TlsCertificateContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertificateContext)(nil)).Elem()
}

func (o TlsCertificateContextPtrOutput) ToTlsCertificateContextPtrOutput() TlsCertificateContextPtrOutput {
	return o
}

func (o TlsCertificateContextPtrOutput) ToTlsCertificateContextPtrOutputWithContext(ctx context.Context) TlsCertificateContextPtrOutput {
	return o
}

func (o TlsCertificateContextPtrOutput) Elem() TlsCertificateContextOutput {
	return o.ApplyT(func(v *TlsCertificateContext) TlsCertificateContext {
		if v != nil {
			return *v
		}
		var ret TlsCertificateContext
		return ret
	}).(TlsCertificateContextOutput)
}

// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
func (o TlsCertificateContextPtrOutput) CertificatePaths() TlsCertificatePathsPtrOutput {
	return o.ApplyT(func(v *TlsCertificateContext) *TlsCertificatePaths {
		if v == nil {
			return nil
		}
		return v.CertificatePaths
	}).(TlsCertificatePathsPtrOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsCertificateContextPtrOutput) CertificateSource() TlsCertificateContextCertificateSourcePtrOutput {
	return o.ApplyT(func(v *TlsCertificateContext) *TlsCertificateContextCertificateSource {
		if v == nil {
			return nil
		}
		return v.CertificateSource
	}).(TlsCertificateContextCertificateSourcePtrOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsCertificateContextPtrOutput) SdsConfig() SdsConfigPtrOutput {
	return o.ApplyT(func(v *TlsCertificateContext) *SdsConfig {
		if v == nil {
			return nil
		}
		return v.SdsConfig
	}).(SdsConfigPtrOutput)
}

// [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
type TlsCertificateContextResponse struct {
	// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
	CertificatePaths TlsCertificatePathsResponse `pulumi:"certificatePaths"`
	// Defines how TLS certificates are obtained.
	CertificateSource string `pulumi:"certificateSource"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig SdsConfigResponse `pulumi:"sdsConfig"`
}

// [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
type TlsCertificateContextResponseOutput struct{ *pulumi.OutputState }

func (TlsCertificateContextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateContextResponse)(nil)).Elem()
}

func (o TlsCertificateContextResponseOutput) ToTlsCertificateContextResponseOutput() TlsCertificateContextResponseOutput {
	return o
}

func (o TlsCertificateContextResponseOutput) ToTlsCertificateContextResponseOutputWithContext(ctx context.Context) TlsCertificateContextResponseOutput {
	return o
}

// Specifies the certificate and private key paths. This field is applicable only if tlsCertificateSource is set to USE_PATH.
func (o TlsCertificateContextResponseOutput) CertificatePaths() TlsCertificatePathsResponseOutput {
	return o.ApplyT(func(v TlsCertificateContextResponse) TlsCertificatePathsResponse { return v.CertificatePaths }).(TlsCertificatePathsResponseOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsCertificateContextResponseOutput) CertificateSource() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificateContextResponse) string { return v.CertificateSource }).(pulumi.StringOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsCertificateContextResponseOutput) SdsConfig() SdsConfigResponseOutput {
	return o.ApplyT(func(v TlsCertificateContextResponse) SdsConfigResponse { return v.SdsConfig }).(SdsConfigResponseOutput)
}

// [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
type TlsCertificatePaths struct {
	// The path to the file holding the client or server TLS certificate to use.
	CertificatePath *string `pulumi:"certificatePath"`
	// The path to the file holding the client or server private key.
	PrivateKeyPath *string `pulumi:"privateKeyPath"`
}

// TlsCertificatePathsInput is an input type that accepts TlsCertificatePathsArgs and TlsCertificatePathsOutput values.
// You can construct a concrete instance of `TlsCertificatePathsInput` via:
//
//	TlsCertificatePathsArgs{...}
type TlsCertificatePathsInput interface {
	pulumi.Input

	ToTlsCertificatePathsOutput() TlsCertificatePathsOutput
	ToTlsCertificatePathsOutputWithContext(context.Context) TlsCertificatePathsOutput
}

// [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
type TlsCertificatePathsArgs struct {
	// The path to the file holding the client or server TLS certificate to use.
	CertificatePath pulumi.StringPtrInput `pulumi:"certificatePath"`
	// The path to the file holding the client or server private key.
	PrivateKeyPath pulumi.StringPtrInput `pulumi:"privateKeyPath"`
}

func (TlsCertificatePathsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificatePaths)(nil)).Elem()
}

func (i TlsCertificatePathsArgs) ToTlsCertificatePathsOutput() TlsCertificatePathsOutput {
	return i.ToTlsCertificatePathsOutputWithContext(context.Background())
}

func (i TlsCertificatePathsArgs) ToTlsCertificatePathsOutputWithContext(ctx context.Context) TlsCertificatePathsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificatePathsOutput)
}

func (i TlsCertificatePathsArgs) ToTlsCertificatePathsPtrOutput() TlsCertificatePathsPtrOutput {
	return i.ToTlsCertificatePathsPtrOutputWithContext(context.Background())
}

func (i TlsCertificatePathsArgs) ToTlsCertificatePathsPtrOutputWithContext(ctx context.Context) TlsCertificatePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificatePathsOutput).ToTlsCertificatePathsPtrOutputWithContext(ctx)
}

// TlsCertificatePathsPtrInput is an input type that accepts TlsCertificatePathsArgs, TlsCertificatePathsPtr and TlsCertificatePathsPtrOutput values.
// You can construct a concrete instance of `TlsCertificatePathsPtrInput` via:
//
//	        TlsCertificatePathsArgs{...}
//
//	or:
//
//	        nil
type TlsCertificatePathsPtrInput interface {
	pulumi.Input

	ToTlsCertificatePathsPtrOutput() TlsCertificatePathsPtrOutput
	ToTlsCertificatePathsPtrOutputWithContext(context.Context) TlsCertificatePathsPtrOutput
}

type tlsCertificatePathsPtrType TlsCertificatePathsArgs

func TlsCertificatePathsPtr(v *TlsCertificatePathsArgs) TlsCertificatePathsPtrInput {
	return (*tlsCertificatePathsPtrType)(v)
}

func (*tlsCertificatePathsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertificatePaths)(nil)).Elem()
}

func (i *tlsCertificatePathsPtrType) ToTlsCertificatePathsPtrOutput() TlsCertificatePathsPtrOutput {
	return i.ToTlsCertificatePathsPtrOutputWithContext(context.Background())
}

func (i *tlsCertificatePathsPtrType) ToTlsCertificatePathsPtrOutputWithContext(ctx context.Context) TlsCertificatePathsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificatePathsPtrOutput)
}

// [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
type TlsCertificatePathsOutput struct{ *pulumi.OutputState }

func (TlsCertificatePathsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificatePaths)(nil)).Elem()
}

func (o TlsCertificatePathsOutput) ToTlsCertificatePathsOutput() TlsCertificatePathsOutput {
	return o
}

func (o TlsCertificatePathsOutput) ToTlsCertificatePathsOutputWithContext(ctx context.Context) TlsCertificatePathsOutput {
	return o
}

func (o TlsCertificatePathsOutput) ToTlsCertificatePathsPtrOutput() TlsCertificatePathsPtrOutput {
	return o.ToTlsCertificatePathsPtrOutputWithContext(context.Background())
}

func (o TlsCertificatePathsOutput) ToTlsCertificatePathsPtrOutputWithContext(ctx context.Context) TlsCertificatePathsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsCertificatePaths) *TlsCertificatePaths {
		return &v
	}).(TlsCertificatePathsPtrOutput)
}

// The path to the file holding the client or server TLS certificate to use.
func (o TlsCertificatePathsOutput) CertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsCertificatePaths) *string { return v.CertificatePath }).(pulumi.StringPtrOutput)
}

// The path to the file holding the client or server private key.
func (o TlsCertificatePathsOutput) PrivateKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsCertificatePaths) *string { return v.PrivateKeyPath }).(pulumi.StringPtrOutput)
}

type TlsCertificatePathsPtrOutput struct{ *pulumi.OutputState }

func (TlsCertificatePathsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsCertificatePaths)(nil)).Elem()
}

func (o TlsCertificatePathsPtrOutput) ToTlsCertificatePathsPtrOutput() TlsCertificatePathsPtrOutput {
	return o
}

func (o TlsCertificatePathsPtrOutput) ToTlsCertificatePathsPtrOutputWithContext(ctx context.Context) TlsCertificatePathsPtrOutput {
	return o
}

func (o TlsCertificatePathsPtrOutput) Elem() TlsCertificatePathsOutput {
	return o.ApplyT(func(v *TlsCertificatePaths) TlsCertificatePaths {
		if v != nil {
			return *v
		}
		var ret TlsCertificatePaths
		return ret
	}).(TlsCertificatePathsOutput)
}

// The path to the file holding the client or server TLS certificate to use.
func (o TlsCertificatePathsPtrOutput) CertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsCertificatePaths) *string {
		if v == nil {
			return nil
		}
		return v.CertificatePath
	}).(pulumi.StringPtrOutput)
}

// The path to the file holding the client or server private key.
func (o TlsCertificatePathsPtrOutput) PrivateKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsCertificatePaths) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyPath
	}).(pulumi.StringPtrOutput)
}

// [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
type TlsCertificatePathsResponse struct {
	// The path to the file holding the client or server TLS certificate to use.
	CertificatePath string `pulumi:"certificatePath"`
	// The path to the file holding the client or server private key.
	PrivateKeyPath string `pulumi:"privateKeyPath"`
}

// [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
type TlsCertificatePathsResponseOutput struct{ *pulumi.OutputState }

func (TlsCertificatePathsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificatePathsResponse)(nil)).Elem()
}

func (o TlsCertificatePathsResponseOutput) ToTlsCertificatePathsResponseOutput() TlsCertificatePathsResponseOutput {
	return o
}

func (o TlsCertificatePathsResponseOutput) ToTlsCertificatePathsResponseOutputWithContext(ctx context.Context) TlsCertificatePathsResponseOutput {
	return o
}

// The path to the file holding the client or server TLS certificate to use.
func (o TlsCertificatePathsResponseOutput) CertificatePath() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificatePathsResponse) string { return v.CertificatePath }).(pulumi.StringOutput)
}

// The path to the file holding the client or server private key.
func (o TlsCertificatePathsResponseOutput) PrivateKeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v TlsCertificatePathsResponse) string { return v.PrivateKeyPath }).(pulumi.StringOutput)
}

// [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
type TlsContext struct {
	// Defines the mechanism to obtain the client or server certificate.
	CertificateContext *TlsCertificateContext `pulumi:"certificateContext"`
	// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
	ValidationContext *TlsValidationContext `pulumi:"validationContext"`
}

// TlsContextInput is an input type that accepts TlsContextArgs and TlsContextOutput values.
// You can construct a concrete instance of `TlsContextInput` via:
//
//	TlsContextArgs{...}
type TlsContextInput interface {
	pulumi.Input

	ToTlsContextOutput() TlsContextOutput
	ToTlsContextOutputWithContext(context.Context) TlsContextOutput
}

// [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
type TlsContextArgs struct {
	// Defines the mechanism to obtain the client or server certificate.
	CertificateContext TlsCertificateContextPtrInput `pulumi:"certificateContext"`
	// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
	ValidationContext TlsValidationContextPtrInput `pulumi:"validationContext"`
}

func (TlsContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsContext)(nil)).Elem()
}

func (i TlsContextArgs) ToTlsContextOutput() TlsContextOutput {
	return i.ToTlsContextOutputWithContext(context.Background())
}

func (i TlsContextArgs) ToTlsContextOutputWithContext(ctx context.Context) TlsContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsContextOutput)
}

func (i TlsContextArgs) ToTlsContextPtrOutput() TlsContextPtrOutput {
	return i.ToTlsContextPtrOutputWithContext(context.Background())
}

func (i TlsContextArgs) ToTlsContextPtrOutputWithContext(ctx context.Context) TlsContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsContextOutput).ToTlsContextPtrOutputWithContext(ctx)
}

// TlsContextPtrInput is an input type that accepts TlsContextArgs, TlsContextPtr and TlsContextPtrOutput values.
// You can construct a concrete instance of `TlsContextPtrInput` via:
//
//	        TlsContextArgs{...}
//
//	or:
//
//	        nil
type TlsContextPtrInput interface {
	pulumi.Input

	ToTlsContextPtrOutput() TlsContextPtrOutput
	ToTlsContextPtrOutputWithContext(context.Context) TlsContextPtrOutput
}

type tlsContextPtrType TlsContextArgs

func TlsContextPtr(v *TlsContextArgs) TlsContextPtrInput {
	return (*tlsContextPtrType)(v)
}

func (*tlsContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsContext)(nil)).Elem()
}

func (i *tlsContextPtrType) ToTlsContextPtrOutput() TlsContextPtrOutput {
	return i.ToTlsContextPtrOutputWithContext(context.Background())
}

func (i *tlsContextPtrType) ToTlsContextPtrOutputWithContext(ctx context.Context) TlsContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsContextPtrOutput)
}

// [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
type TlsContextOutput struct{ *pulumi.OutputState }

func (TlsContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsContext)(nil)).Elem()
}

func (o TlsContextOutput) ToTlsContextOutput() TlsContextOutput {
	return o
}

func (o TlsContextOutput) ToTlsContextOutputWithContext(ctx context.Context) TlsContextOutput {
	return o
}

func (o TlsContextOutput) ToTlsContextPtrOutput() TlsContextPtrOutput {
	return o.ToTlsContextPtrOutputWithContext(context.Background())
}

func (o TlsContextOutput) ToTlsContextPtrOutputWithContext(ctx context.Context) TlsContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsContext) *TlsContext {
		return &v
	}).(TlsContextPtrOutput)
}

// Defines the mechanism to obtain the client or server certificate.
func (o TlsContextOutput) CertificateContext() TlsCertificateContextPtrOutput {
	return o.ApplyT(func(v TlsContext) *TlsCertificateContext { return v.CertificateContext }).(TlsCertificateContextPtrOutput)
}

// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
func (o TlsContextOutput) ValidationContext() TlsValidationContextPtrOutput {
	return o.ApplyT(func(v TlsContext) *TlsValidationContext { return v.ValidationContext }).(TlsValidationContextPtrOutput)
}

type TlsContextPtrOutput struct{ *pulumi.OutputState }

func (TlsContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsContext)(nil)).Elem()
}

func (o TlsContextPtrOutput) ToTlsContextPtrOutput() TlsContextPtrOutput {
	return o
}

func (o TlsContextPtrOutput) ToTlsContextPtrOutputWithContext(ctx context.Context) TlsContextPtrOutput {
	return o
}

func (o TlsContextPtrOutput) Elem() TlsContextOutput {
	return o.ApplyT(func(v *TlsContext) TlsContext {
		if v != nil {
			return *v
		}
		var ret TlsContext
		return ret
	}).(TlsContextOutput)
}

// Defines the mechanism to obtain the client or server certificate.
func (o TlsContextPtrOutput) CertificateContext() TlsCertificateContextPtrOutput {
	return o.ApplyT(func(v *TlsContext) *TlsCertificateContext {
		if v == nil {
			return nil
		}
		return v.CertificateContext
	}).(TlsCertificateContextPtrOutput)
}

// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
func (o TlsContextPtrOutput) ValidationContext() TlsValidationContextPtrOutput {
	return o.ApplyT(func(v *TlsContext) *TlsValidationContext {
		if v == nil {
			return nil
		}
		return v.ValidationContext
	}).(TlsValidationContextPtrOutput)
}

// [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
type TlsContextResponse struct {
	// Defines the mechanism to obtain the client or server certificate.
	CertificateContext TlsCertificateContextResponse `pulumi:"certificateContext"`
	// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
	ValidationContext TlsValidationContextResponse `pulumi:"validationContext"`
}

// [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
type TlsContextResponseOutput struct{ *pulumi.OutputState }

func (TlsContextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsContextResponse)(nil)).Elem()
}

func (o TlsContextResponseOutput) ToTlsContextResponseOutput() TlsContextResponseOutput {
	return o
}

func (o TlsContextResponseOutput) ToTlsContextResponseOutputWithContext(ctx context.Context) TlsContextResponseOutput {
	return o
}

// Defines the mechanism to obtain the client or server certificate.
func (o TlsContextResponseOutput) CertificateContext() TlsCertificateContextResponseOutput {
	return o.ApplyT(func(v TlsContextResponse) TlsCertificateContextResponse { return v.CertificateContext }).(TlsCertificateContextResponseOutput)
}

// Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
func (o TlsContextResponseOutput) ValidationContext() TlsValidationContextResponseOutput {
	return o.ApplyT(func(v TlsContextResponse) TlsValidationContextResponse { return v.ValidationContext }).(TlsValidationContextResponseOutput)
}

// [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
type TlsValidationContext struct {
	// The path to the file holding the CA certificate to validate the client or server certificate.
	CertificatePath *string `pulumi:"certificatePath"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig *SdsConfig `pulumi:"sdsConfig"`
	// Defines how TLS certificates are obtained.
	ValidationSource *TlsValidationContextValidationSource `pulumi:"validationSource"`
}

// TlsValidationContextInput is an input type that accepts TlsValidationContextArgs and TlsValidationContextOutput values.
// You can construct a concrete instance of `TlsValidationContextInput` via:
//
//	TlsValidationContextArgs{...}
type TlsValidationContextInput interface {
	pulumi.Input

	ToTlsValidationContextOutput() TlsValidationContextOutput
	ToTlsValidationContextOutputWithContext(context.Context) TlsValidationContextOutput
}

// [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
type TlsValidationContextArgs struct {
	// The path to the file holding the CA certificate to validate the client or server certificate.
	CertificatePath pulumi.StringPtrInput `pulumi:"certificatePath"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig SdsConfigPtrInput `pulumi:"sdsConfig"`
	// Defines how TLS certificates are obtained.
	ValidationSource TlsValidationContextValidationSourcePtrInput `pulumi:"validationSource"`
}

func (TlsValidationContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsValidationContext)(nil)).Elem()
}

func (i TlsValidationContextArgs) ToTlsValidationContextOutput() TlsValidationContextOutput {
	return i.ToTlsValidationContextOutputWithContext(context.Background())
}

func (i TlsValidationContextArgs) ToTlsValidationContextOutputWithContext(ctx context.Context) TlsValidationContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsValidationContextOutput)
}

func (i TlsValidationContextArgs) ToTlsValidationContextPtrOutput() TlsValidationContextPtrOutput {
	return i.ToTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i TlsValidationContextArgs) ToTlsValidationContextPtrOutputWithContext(ctx context.Context) TlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsValidationContextOutput).ToTlsValidationContextPtrOutputWithContext(ctx)
}

// TlsValidationContextPtrInput is an input type that accepts TlsValidationContextArgs, TlsValidationContextPtr and TlsValidationContextPtrOutput values.
// You can construct a concrete instance of `TlsValidationContextPtrInput` via:
//
//	        TlsValidationContextArgs{...}
//
//	or:
//
//	        nil
type TlsValidationContextPtrInput interface {
	pulumi.Input

	ToTlsValidationContextPtrOutput() TlsValidationContextPtrOutput
	ToTlsValidationContextPtrOutputWithContext(context.Context) TlsValidationContextPtrOutput
}

type tlsValidationContextPtrType TlsValidationContextArgs

func TlsValidationContextPtr(v *TlsValidationContextArgs) TlsValidationContextPtrInput {
	return (*tlsValidationContextPtrType)(v)
}

func (*tlsValidationContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsValidationContext)(nil)).Elem()
}

func (i *tlsValidationContextPtrType) ToTlsValidationContextPtrOutput() TlsValidationContextPtrOutput {
	return i.ToTlsValidationContextPtrOutputWithContext(context.Background())
}

func (i *tlsValidationContextPtrType) ToTlsValidationContextPtrOutputWithContext(ctx context.Context) TlsValidationContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsValidationContextPtrOutput)
}

// [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
type TlsValidationContextOutput struct{ *pulumi.OutputState }

func (TlsValidationContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsValidationContext)(nil)).Elem()
}

func (o TlsValidationContextOutput) ToTlsValidationContextOutput() TlsValidationContextOutput {
	return o
}

func (o TlsValidationContextOutput) ToTlsValidationContextOutputWithContext(ctx context.Context) TlsValidationContextOutput {
	return o
}

func (o TlsValidationContextOutput) ToTlsValidationContextPtrOutput() TlsValidationContextPtrOutput {
	return o.ToTlsValidationContextPtrOutputWithContext(context.Background())
}

func (o TlsValidationContextOutput) ToTlsValidationContextPtrOutputWithContext(ctx context.Context) TlsValidationContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TlsValidationContext) *TlsValidationContext {
		return &v
	}).(TlsValidationContextPtrOutput)
}

// The path to the file holding the CA certificate to validate the client or server certificate.
func (o TlsValidationContextOutput) CertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TlsValidationContext) *string { return v.CertificatePath }).(pulumi.StringPtrOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsValidationContextOutput) SdsConfig() SdsConfigPtrOutput {
	return o.ApplyT(func(v TlsValidationContext) *SdsConfig { return v.SdsConfig }).(SdsConfigPtrOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsValidationContextOutput) ValidationSource() TlsValidationContextValidationSourcePtrOutput {
	return o.ApplyT(func(v TlsValidationContext) *TlsValidationContextValidationSource { return v.ValidationSource }).(TlsValidationContextValidationSourcePtrOutput)
}

type TlsValidationContextPtrOutput struct{ *pulumi.OutputState }

func (TlsValidationContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsValidationContext)(nil)).Elem()
}

func (o TlsValidationContextPtrOutput) ToTlsValidationContextPtrOutput() TlsValidationContextPtrOutput {
	return o
}

func (o TlsValidationContextPtrOutput) ToTlsValidationContextPtrOutputWithContext(ctx context.Context) TlsValidationContextPtrOutput {
	return o
}

func (o TlsValidationContextPtrOutput) Elem() TlsValidationContextOutput {
	return o.ApplyT(func(v *TlsValidationContext) TlsValidationContext {
		if v != nil {
			return *v
		}
		var ret TlsValidationContext
		return ret
	}).(TlsValidationContextOutput)
}

// The path to the file holding the CA certificate to validate the client or server certificate.
func (o TlsValidationContextPtrOutput) CertificatePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsValidationContext) *string {
		if v == nil {
			return nil
		}
		return v.CertificatePath
	}).(pulumi.StringPtrOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsValidationContextPtrOutput) SdsConfig() SdsConfigPtrOutput {
	return o.ApplyT(func(v *TlsValidationContext) *SdsConfig {
		if v == nil {
			return nil
		}
		return v.SdsConfig
	}).(SdsConfigPtrOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsValidationContextPtrOutput) ValidationSource() TlsValidationContextValidationSourcePtrOutput {
	return o.ApplyT(func(v *TlsValidationContext) *TlsValidationContextValidationSource {
		if v == nil {
			return nil
		}
		return v.ValidationSource
	}).(TlsValidationContextValidationSourcePtrOutput)
}

// [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
type TlsValidationContextResponse struct {
	// The path to the file holding the CA certificate to validate the client or server certificate.
	CertificatePath string `pulumi:"certificatePath"`
	// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
	SdsConfig SdsConfigResponse `pulumi:"sdsConfig"`
	// Defines how TLS certificates are obtained.
	ValidationSource string `pulumi:"validationSource"`
}

// [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
type TlsValidationContextResponseOutput struct{ *pulumi.OutputState }

func (TlsValidationContextResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsValidationContextResponse)(nil)).Elem()
}

func (o TlsValidationContextResponseOutput) ToTlsValidationContextResponseOutput() TlsValidationContextResponseOutput {
	return o
}

func (o TlsValidationContextResponseOutput) ToTlsValidationContextResponseOutputWithContext(ctx context.Context) TlsValidationContextResponseOutput {
	return o
}

// The path to the file holding the CA certificate to validate the client or server certificate.
func (o TlsValidationContextResponseOutput) CertificatePath() pulumi.StringOutput {
	return o.ApplyT(func(v TlsValidationContextResponse) string { return v.CertificatePath }).(pulumi.StringOutput)
}

// Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
func (o TlsValidationContextResponseOutput) SdsConfig() SdsConfigResponseOutput {
	return o.ApplyT(func(v TlsValidationContextResponse) SdsConfigResponse { return v.SdsConfig }).(SdsConfigResponseOutput)
}

// Defines how TLS certificates are obtained.
func (o TlsValidationContextResponseOutput) ValidationSource() pulumi.StringOutput {
	return o.ApplyT(func(v TlsValidationContextResponse) string { return v.ValidationSource }).(pulumi.StringOutput)
}

type UDPHealthCheck struct {
	// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
	Port *int `pulumi:"port"`
	// Not supported.
	PortName *string `pulumi:"portName"`
	// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
	Request *string `pulumi:"request"`
	// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
	Response *string `pulumi:"response"`
}

// UDPHealthCheckInput is an input type that accepts UDPHealthCheckArgs and UDPHealthCheckOutput values.
// You can construct a concrete instance of `UDPHealthCheckInput` via:
//
//	UDPHealthCheckArgs{...}
type UDPHealthCheckInput interface {
	pulumi.Input

	ToUDPHealthCheckOutput() UDPHealthCheckOutput
	ToUDPHealthCheckOutputWithContext(context.Context) UDPHealthCheckOutput
}

type UDPHealthCheckArgs struct {
	// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Not supported.
	PortName pulumi.StringPtrInput `pulumi:"portName"`
	// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
	Request pulumi.StringPtrInput `pulumi:"request"`
	// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
	Response pulumi.StringPtrInput `pulumi:"response"`
}

func (UDPHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UDPHealthCheck)(nil)).Elem()
}

func (i UDPHealthCheckArgs) ToUDPHealthCheckOutput() UDPHealthCheckOutput {
	return i.ToUDPHealthCheckOutputWithContext(context.Background())
}

func (i UDPHealthCheckArgs) ToUDPHealthCheckOutputWithContext(ctx context.Context) UDPHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPHealthCheckOutput)
}

func (i UDPHealthCheckArgs) ToUDPHealthCheckPtrOutput() UDPHealthCheckPtrOutput {
	return i.ToUDPHealthCheckPtrOutputWithContext(context.Background())
}

func (i UDPHealthCheckArgs) ToUDPHealthCheckPtrOutputWithContext(ctx context.Context) UDPHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPHealthCheckOutput).ToUDPHealthCheckPtrOutputWithContext(ctx)
}

// UDPHealthCheckPtrInput is an input type that accepts UDPHealthCheckArgs, UDPHealthCheckPtr and UDPHealthCheckPtrOutput values.
// You can construct a concrete instance of `UDPHealthCheckPtrInput` via:
//
//	        UDPHealthCheckArgs{...}
//
//	or:
//
//	        nil
type UDPHealthCheckPtrInput interface {
	pulumi.Input

	ToUDPHealthCheckPtrOutput() UDPHealthCheckPtrOutput
	ToUDPHealthCheckPtrOutputWithContext(context.Context) UDPHealthCheckPtrOutput
}

type udphealthCheckPtrType UDPHealthCheckArgs

func UDPHealthCheckPtr(v *UDPHealthCheckArgs) UDPHealthCheckPtrInput {
	return (*udphealthCheckPtrType)(v)
}

func (*udphealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPHealthCheck)(nil)).Elem()
}

func (i *udphealthCheckPtrType) ToUDPHealthCheckPtrOutput() UDPHealthCheckPtrOutput {
	return i.ToUDPHealthCheckPtrOutputWithContext(context.Background())
}

func (i *udphealthCheckPtrType) ToUDPHealthCheckPtrOutputWithContext(ctx context.Context) UDPHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPHealthCheckPtrOutput)
}

type UDPHealthCheckOutput struct{ *pulumi.OutputState }

func (UDPHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UDPHealthCheck)(nil)).Elem()
}

func (o UDPHealthCheckOutput) ToUDPHealthCheckOutput() UDPHealthCheckOutput {
	return o
}

func (o UDPHealthCheckOutput) ToUDPHealthCheckOutputWithContext(ctx context.Context) UDPHealthCheckOutput {
	return o
}

func (o UDPHealthCheckOutput) ToUDPHealthCheckPtrOutput() UDPHealthCheckPtrOutput {
	return o.ToUDPHealthCheckPtrOutputWithContext(context.Background())
}

func (o UDPHealthCheckOutput) ToUDPHealthCheckPtrOutputWithContext(ctx context.Context) UDPHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UDPHealthCheck) *UDPHealthCheck {
		return &v
	}).(UDPHealthCheckPtrOutput)
}

// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
func (o UDPHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UDPHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Not supported.
func (o UDPHealthCheckOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UDPHealthCheck) *string { return v.PortName }).(pulumi.StringPtrOutput)
}

// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
func (o UDPHealthCheckOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UDPHealthCheck) *string { return v.Request }).(pulumi.StringPtrOutput)
}

// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
func (o UDPHealthCheckOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UDPHealthCheck) *string { return v.Response }).(pulumi.StringPtrOutput)
}

type UDPHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (UDPHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPHealthCheck)(nil)).Elem()
}

func (o UDPHealthCheckPtrOutput) ToUDPHealthCheckPtrOutput() UDPHealthCheckPtrOutput {
	return o
}

func (o UDPHealthCheckPtrOutput) ToUDPHealthCheckPtrOutputWithContext(ctx context.Context) UDPHealthCheckPtrOutput {
	return o
}

func (o UDPHealthCheckPtrOutput) Elem() UDPHealthCheckOutput {
	return o.ApplyT(func(v *UDPHealthCheck) UDPHealthCheck {
		if v != nil {
			return *v
		}
		var ret UDPHealthCheck
		return ret
	}).(UDPHealthCheckOutput)
}

// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
func (o UDPHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UDPHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Not supported.
func (o UDPHealthCheckPtrOutput) PortName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UDPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.PortName
	}).(pulumi.StringPtrOutput)
}

// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
func (o UDPHealthCheckPtrOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UDPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Request
	}).(pulumi.StringPtrOutput)
}

// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
func (o UDPHealthCheckPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UDPHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

type UDPHealthCheckResponse struct {
	// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
	Port int `pulumi:"port"`
	// Not supported.
	PortName string `pulumi:"portName"`
	// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
	Request string `pulumi:"request"`
	// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
	Response string `pulumi:"response"`
}

type UDPHealthCheckResponseOutput struct{ *pulumi.OutputState }

func (UDPHealthCheckResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UDPHealthCheckResponse)(nil)).Elem()
}

func (o UDPHealthCheckResponseOutput) ToUDPHealthCheckResponseOutput() UDPHealthCheckResponseOutput {
	return o
}

func (o UDPHealthCheckResponseOutput) ToUDPHealthCheckResponseOutputWithContext(ctx context.Context) UDPHealthCheckResponseOutput {
	return o
}

// The UDP port number to which the health check prober sends packets. Valid values are 1 through 65535.
func (o UDPHealthCheckResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v UDPHealthCheckResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Not supported.
func (o UDPHealthCheckResponseOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v UDPHealthCheckResponse) string { return v.PortName }).(pulumi.StringOutput)
}

// Raw data of request to send in payload of UDP packet. It is an error if this is empty. The request data can only be ASCII.
func (o UDPHealthCheckResponseOutput) Request() pulumi.StringOutput {
	return o.ApplyT(func(v UDPHealthCheckResponse) string { return v.Request }).(pulumi.StringOutput)
}

// The bytes to match against the beginning of the response data. It is an error if this is empty. The response data can only be ASCII.
func (o UDPHealthCheckResponseOutput) Response() pulumi.StringOutput {
	return o.ApplyT(func(v UDPHealthCheckResponse) string { return v.Response }).(pulumi.StringOutput)
}

type Uint128Response struct {
	High string `pulumi:"high"`
	Low  string `pulumi:"low"`
}

type Uint128ResponseOutput struct{ *pulumi.OutputState }

func (Uint128ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Uint128Response)(nil)).Elem()
}

func (o Uint128ResponseOutput) ToUint128ResponseOutput() Uint128ResponseOutput {
	return o
}

func (o Uint128ResponseOutput) ToUint128ResponseOutputWithContext(ctx context.Context) Uint128ResponseOutput {
	return o
}

func (o Uint128ResponseOutput) High() pulumi.StringOutput {
	return o.ApplyT(func(v Uint128Response) string { return v.High }).(pulumi.StringOutput)
}

func (o Uint128ResponseOutput) Low() pulumi.StringOutput {
	return o.ApplyT(func(v Uint128Response) string { return v.Low }).(pulumi.StringOutput)
}

// Upcoming Maintenance notification information.
type UpcomingMaintenanceResponse struct {
	// Indicates if the maintenance can be customer triggered.
	CanReschedule bool `pulumi:"canReschedule"`
	// The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
	//
	// Deprecated: [Output Only] The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
	Date string `pulumi:"date"`
	// The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.
	LatestWindowStartTime string `pulumi:"latestWindowStartTime"`
	MaintenanceStatus     string `pulumi:"maintenanceStatus"`
	// The start time window of the maintenance disruption. DEPRECATED: Use window_start_time instead. TimeWindow is a container for two strings that represent timestamps in "yyyy-MM-dd'T'HH:mm:ssZ" text format.
	//
	// Deprecated: [Output Only] The start time window of the maintenance disruption. DEPRECATED: Use window_start_time instead. TimeWindow is a container for two strings that represent timestamps in "yyyy-MM-dd'T'HH:mm:ssZ" text format.
	StartTimeWindow UpcomingMaintenanceTimeWindowResponse `pulumi:"startTimeWindow"`
	// The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
	//
	// Deprecated: [Output Only] The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
	Time string `pulumi:"time"`
	// Defines the type of maintenance.
	Type string `pulumi:"type"`
	// The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.
	WindowEndTime string `pulumi:"windowEndTime"`
	// The current start time of the maintenance window. This timestamp value is in RFC3339 text format.
	WindowStartTime string `pulumi:"windowStartTime"`
}

// Upcoming Maintenance notification information.
type UpcomingMaintenanceResponseOutput struct{ *pulumi.OutputState }

func (UpcomingMaintenanceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpcomingMaintenanceResponse)(nil)).Elem()
}

func (o UpcomingMaintenanceResponseOutput) ToUpcomingMaintenanceResponseOutput() UpcomingMaintenanceResponseOutput {
	return o
}

func (o UpcomingMaintenanceResponseOutput) ToUpcomingMaintenanceResponseOutputWithContext(ctx context.Context) UpcomingMaintenanceResponseOutput {
	return o
}

// Indicates if the maintenance can be customer triggered.
func (o UpcomingMaintenanceResponseOutput) CanReschedule() pulumi.BoolOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) bool { return v.CanReschedule }).(pulumi.BoolOutput)
}

// The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
//
// Deprecated: [Output Only] The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
func (o UpcomingMaintenanceResponseOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.Date }).(pulumi.StringOutput)
}

// The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.
func (o UpcomingMaintenanceResponseOutput) LatestWindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.LatestWindowStartTime }).(pulumi.StringOutput)
}

func (o UpcomingMaintenanceResponseOutput) MaintenanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.MaintenanceStatus }).(pulumi.StringOutput)
}

// The start time window of the maintenance disruption. DEPRECATED: Use window_start_time instead. TimeWindow is a container for two strings that represent timestamps in "yyyy-MM-dd'T'HH:mm:ssZ" text format.
//
// Deprecated: [Output Only] The start time window of the maintenance disruption. DEPRECATED: Use window_start_time instead. TimeWindow is a container for two strings that represent timestamps in "yyyy-MM-dd'T'HH:mm:ssZ" text format.
func (o UpcomingMaintenanceResponseOutput) StartTimeWindow() UpcomingMaintenanceTimeWindowResponseOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) UpcomingMaintenanceTimeWindowResponse { return v.StartTimeWindow }).(UpcomingMaintenanceTimeWindowResponseOutput)
}

// The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
//
// Deprecated: [Output Only] The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
func (o UpcomingMaintenanceResponseOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.Time }).(pulumi.StringOutput)
}

// Defines the type of maintenance.
func (o UpcomingMaintenanceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.
func (o UpcomingMaintenanceResponseOutput) WindowEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.WindowEndTime }).(pulumi.StringOutput)
}

// The current start time of the maintenance window. This timestamp value is in RFC3339 text format.
func (o UpcomingMaintenanceResponseOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceResponse) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

// Represents a window of time using two timestamps: `earliest` and `latest`.
type UpcomingMaintenanceTimeWindowResponse struct {
	Earliest string `pulumi:"earliest"`
	Latest   string `pulumi:"latest"`
}

// Represents a window of time using two timestamps: `earliest` and `latest`.
type UpcomingMaintenanceTimeWindowResponseOutput struct{ *pulumi.OutputState }

func (UpcomingMaintenanceTimeWindowResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpcomingMaintenanceTimeWindowResponse)(nil)).Elem()
}

func (o UpcomingMaintenanceTimeWindowResponseOutput) ToUpcomingMaintenanceTimeWindowResponseOutput() UpcomingMaintenanceTimeWindowResponseOutput {
	return o
}

func (o UpcomingMaintenanceTimeWindowResponseOutput) ToUpcomingMaintenanceTimeWindowResponseOutputWithContext(ctx context.Context) UpcomingMaintenanceTimeWindowResponseOutput {
	return o
}

func (o UpcomingMaintenanceTimeWindowResponseOutput) Earliest() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceTimeWindowResponse) string { return v.Earliest }).(pulumi.StringOutput)
}

func (o UpcomingMaintenanceTimeWindowResponseOutput) Latest() pulumi.StringOutput {
	return o.ApplyT(func(v UpcomingMaintenanceTimeWindowResponse) string { return v.Latest }).(pulumi.StringOutput)
}

// Message for the expected URL mappings.
type UrlMapTest struct {
	// The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
	BackendServiceWeight *int `pulumi:"backendServiceWeight"`
	// Description of this test case.
	Description *string `pulumi:"description"`
	// The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
	ExpectedOutputUrl *string `pulumi:"expectedOutputUrl"`
	// For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
	ExpectedRedirectResponseCode *int `pulumi:"expectedRedirectResponseCode"`
	// The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	//
	// Deprecated: The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	ExpectedUrlRedirect *string `pulumi:"expectedUrlRedirect"`
	// HTTP headers for this request. If headers contains a host header, then host must also match the header value.
	Headers []UrlMapTestHeader `pulumi:"headers"`
	// Host portion of the URL. If headers contains a host header, then host must also match the header value.
	Host *string `pulumi:"host"`
	// Path portion of the URL.
	Path *string `pulumi:"path"`
	// Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
	Service *string `pulumi:"service"`
}

// UrlMapTestInput is an input type that accepts UrlMapTestArgs and UrlMapTestOutput values.
// You can construct a concrete instance of `UrlMapTestInput` via:
//
//	UrlMapTestArgs{...}
type UrlMapTestInput interface {
	pulumi.Input

	ToUrlMapTestOutput() UrlMapTestOutput
	ToUrlMapTestOutputWithContext(context.Context) UrlMapTestOutput
}

// Message for the expected URL mappings.
type UrlMapTestArgs struct {
	// The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
	BackendServiceWeight pulumi.IntPtrInput `pulumi:"backendServiceWeight"`
	// Description of this test case.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
	ExpectedOutputUrl pulumi.StringPtrInput `pulumi:"expectedOutputUrl"`
	// For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
	ExpectedRedirectResponseCode pulumi.IntPtrInput `pulumi:"expectedRedirectResponseCode"`
	// The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	//
	// Deprecated: The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	ExpectedUrlRedirect pulumi.StringPtrInput `pulumi:"expectedUrlRedirect"`
	// HTTP headers for this request. If headers contains a host header, then host must also match the header value.
	Headers UrlMapTestHeaderArrayInput `pulumi:"headers"`
	// Host portion of the URL. If headers contains a host header, then host must also match the header value.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Path portion of the URL.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (UrlMapTestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTest)(nil)).Elem()
}

func (i UrlMapTestArgs) ToUrlMapTestOutput() UrlMapTestOutput {
	return i.ToUrlMapTestOutputWithContext(context.Background())
}

func (i UrlMapTestArgs) ToUrlMapTestOutputWithContext(ctx context.Context) UrlMapTestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlMapTestOutput)
}

// UrlMapTestArrayInput is an input type that accepts UrlMapTestArray and UrlMapTestArrayOutput values.
// You can construct a concrete instance of `UrlMapTestArrayInput` via:
//
//	UrlMapTestArray{ UrlMapTestArgs{...} }
type UrlMapTestArrayInput interface {
	pulumi.Input

	ToUrlMapTestArrayOutput() UrlMapTestArrayOutput
	ToUrlMapTestArrayOutputWithContext(context.Context) UrlMapTestArrayOutput
}

type UrlMapTestArray []UrlMapTestInput

func (UrlMapTestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTest)(nil)).Elem()
}

func (i UrlMapTestArray) ToUrlMapTestArrayOutput() UrlMapTestArrayOutput {
	return i.ToUrlMapTestArrayOutputWithContext(context.Background())
}

func (i UrlMapTestArray) ToUrlMapTestArrayOutputWithContext(ctx context.Context) UrlMapTestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlMapTestArrayOutput)
}

// Message for the expected URL mappings.
type UrlMapTestOutput struct{ *pulumi.OutputState }

func (UrlMapTestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTest)(nil)).Elem()
}

func (o UrlMapTestOutput) ToUrlMapTestOutput() UrlMapTestOutput {
	return o
}

func (o UrlMapTestOutput) ToUrlMapTestOutputWithContext(ctx context.Context) UrlMapTestOutput {
	return o
}

// The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
func (o UrlMapTestOutput) BackendServiceWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *int { return v.BackendServiceWeight }).(pulumi.IntPtrOutput)
}

// Description of this test case.
func (o UrlMapTestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
func (o UrlMapTestOutput) ExpectedOutputUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.ExpectedOutputUrl }).(pulumi.StringPtrOutput)
}

// For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
func (o UrlMapTestOutput) ExpectedRedirectResponseCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *int { return v.ExpectedRedirectResponseCode }).(pulumi.IntPtrOutput)
}

// The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
//
// Deprecated: The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
func (o UrlMapTestOutput) ExpectedUrlRedirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.ExpectedUrlRedirect }).(pulumi.StringPtrOutput)
}

// HTTP headers for this request. If headers contains a host header, then host must also match the header value.
func (o UrlMapTestOutput) Headers() UrlMapTestHeaderArrayOutput {
	return o.ApplyT(func(v UrlMapTest) []UrlMapTestHeader { return v.Headers }).(UrlMapTestHeaderArrayOutput)
}

// Host portion of the URL. If headers contains a host header, then host must also match the header value.
func (o UrlMapTestOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Path portion of the URL.
func (o UrlMapTestOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
func (o UrlMapTestOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTest) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type UrlMapTestArrayOutput struct{ *pulumi.OutputState }

func (UrlMapTestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTest)(nil)).Elem()
}

func (o UrlMapTestArrayOutput) ToUrlMapTestArrayOutput() UrlMapTestArrayOutput {
	return o
}

func (o UrlMapTestArrayOutput) ToUrlMapTestArrayOutputWithContext(ctx context.Context) UrlMapTestArrayOutput {
	return o
}

func (o UrlMapTestArrayOutput) Index(i pulumi.IntInput) UrlMapTestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlMapTest {
		return vs[0].([]UrlMapTest)[vs[1].(int)]
	}).(UrlMapTestOutput)
}

// HTTP headers used in UrlMapTests.
type UrlMapTestHeader struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// UrlMapTestHeaderInput is an input type that accepts UrlMapTestHeaderArgs and UrlMapTestHeaderOutput values.
// You can construct a concrete instance of `UrlMapTestHeaderInput` via:
//
//	UrlMapTestHeaderArgs{...}
type UrlMapTestHeaderInput interface {
	pulumi.Input

	ToUrlMapTestHeaderOutput() UrlMapTestHeaderOutput
	ToUrlMapTestHeaderOutputWithContext(context.Context) UrlMapTestHeaderOutput
}

// HTTP headers used in UrlMapTests.
type UrlMapTestHeaderArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UrlMapTestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTestHeader)(nil)).Elem()
}

func (i UrlMapTestHeaderArgs) ToUrlMapTestHeaderOutput() UrlMapTestHeaderOutput {
	return i.ToUrlMapTestHeaderOutputWithContext(context.Background())
}

func (i UrlMapTestHeaderArgs) ToUrlMapTestHeaderOutputWithContext(ctx context.Context) UrlMapTestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlMapTestHeaderOutput)
}

// UrlMapTestHeaderArrayInput is an input type that accepts UrlMapTestHeaderArray and UrlMapTestHeaderArrayOutput values.
// You can construct a concrete instance of `UrlMapTestHeaderArrayInput` via:
//
//	UrlMapTestHeaderArray{ UrlMapTestHeaderArgs{...} }
type UrlMapTestHeaderArrayInput interface {
	pulumi.Input

	ToUrlMapTestHeaderArrayOutput() UrlMapTestHeaderArrayOutput
	ToUrlMapTestHeaderArrayOutputWithContext(context.Context) UrlMapTestHeaderArrayOutput
}

type UrlMapTestHeaderArray []UrlMapTestHeaderInput

func (UrlMapTestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTestHeader)(nil)).Elem()
}

func (i UrlMapTestHeaderArray) ToUrlMapTestHeaderArrayOutput() UrlMapTestHeaderArrayOutput {
	return i.ToUrlMapTestHeaderArrayOutputWithContext(context.Background())
}

func (i UrlMapTestHeaderArray) ToUrlMapTestHeaderArrayOutputWithContext(ctx context.Context) UrlMapTestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlMapTestHeaderArrayOutput)
}

// HTTP headers used in UrlMapTests.
type UrlMapTestHeaderOutput struct{ *pulumi.OutputState }

func (UrlMapTestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTestHeader)(nil)).Elem()
}

func (o UrlMapTestHeaderOutput) ToUrlMapTestHeaderOutput() UrlMapTestHeaderOutput {
	return o
}

func (o UrlMapTestHeaderOutput) ToUrlMapTestHeaderOutputWithContext(ctx context.Context) UrlMapTestHeaderOutput {
	return o
}

// Header name.
func (o UrlMapTestHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTestHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o UrlMapTestHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlMapTestHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UrlMapTestHeaderArrayOutput struct{ *pulumi.OutputState }

func (UrlMapTestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTestHeader)(nil)).Elem()
}

func (o UrlMapTestHeaderArrayOutput) ToUrlMapTestHeaderArrayOutput() UrlMapTestHeaderArrayOutput {
	return o
}

func (o UrlMapTestHeaderArrayOutput) ToUrlMapTestHeaderArrayOutputWithContext(ctx context.Context) UrlMapTestHeaderArrayOutput {
	return o
}

func (o UrlMapTestHeaderArrayOutput) Index(i pulumi.IntInput) UrlMapTestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlMapTestHeader {
		return vs[0].([]UrlMapTestHeader)[vs[1].(int)]
	}).(UrlMapTestHeaderOutput)
}

// HTTP headers used in UrlMapTests.
type UrlMapTestHeaderResponse struct {
	// Header name.
	Name string `pulumi:"name"`
	// Header value.
	Value string `pulumi:"value"`
}

// HTTP headers used in UrlMapTests.
type UrlMapTestHeaderResponseOutput struct{ *pulumi.OutputState }

func (UrlMapTestHeaderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTestHeaderResponse)(nil)).Elem()
}

func (o UrlMapTestHeaderResponseOutput) ToUrlMapTestHeaderResponseOutput() UrlMapTestHeaderResponseOutput {
	return o
}

func (o UrlMapTestHeaderResponseOutput) ToUrlMapTestHeaderResponseOutputWithContext(ctx context.Context) UrlMapTestHeaderResponseOutput {
	return o
}

// Header name.
func (o UrlMapTestHeaderResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestHeaderResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Header value.
func (o UrlMapTestHeaderResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestHeaderResponse) string { return v.Value }).(pulumi.StringOutput)
}

type UrlMapTestHeaderResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlMapTestHeaderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTestHeaderResponse)(nil)).Elem()
}

func (o UrlMapTestHeaderResponseArrayOutput) ToUrlMapTestHeaderResponseArrayOutput() UrlMapTestHeaderResponseArrayOutput {
	return o
}

func (o UrlMapTestHeaderResponseArrayOutput) ToUrlMapTestHeaderResponseArrayOutputWithContext(ctx context.Context) UrlMapTestHeaderResponseArrayOutput {
	return o
}

func (o UrlMapTestHeaderResponseArrayOutput) Index(i pulumi.IntInput) UrlMapTestHeaderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlMapTestHeaderResponse {
		return vs[0].([]UrlMapTestHeaderResponse)[vs[1].(int)]
	}).(UrlMapTestHeaderResponseOutput)
}

// Message for the expected URL mappings.
type UrlMapTestResponse struct {
	// The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
	BackendServiceWeight int `pulumi:"backendServiceWeight"`
	// Description of this test case.
	Description string `pulumi:"description"`
	// The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
	ExpectedOutputUrl string `pulumi:"expectedOutputUrl"`
	// For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
	ExpectedRedirectResponseCode int `pulumi:"expectedRedirectResponseCode"`
	// The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	//
	// Deprecated: The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
	ExpectedUrlRedirect string `pulumi:"expectedUrlRedirect"`
	// HTTP headers for this request. If headers contains a host header, then host must also match the header value.
	Headers []UrlMapTestHeaderResponse `pulumi:"headers"`
	// Host portion of the URL. If headers contains a host header, then host must also match the header value.
	Host string `pulumi:"host"`
	// Path portion of the URL.
	Path string `pulumi:"path"`
	// Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
	Service string `pulumi:"service"`
}

// Message for the expected URL mappings.
type UrlMapTestResponseOutput struct{ *pulumi.OutputState }

func (UrlMapTestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlMapTestResponse)(nil)).Elem()
}

func (o UrlMapTestResponseOutput) ToUrlMapTestResponseOutput() UrlMapTestResponseOutput {
	return o
}

func (o UrlMapTestResponseOutput) ToUrlMapTestResponseOutputWithContext(ctx context.Context) UrlMapTestResponseOutput {
	return o
}

// The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
func (o UrlMapTestResponseOutput) BackendServiceWeight() pulumi.IntOutput {
	return o.ApplyT(func(v UrlMapTestResponse) int { return v.BackendServiceWeight }).(pulumi.IntOutput)
}

// Description of this test case.
func (o UrlMapTestResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
func (o UrlMapTestResponseOutput) ExpectedOutputUrl() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.ExpectedOutputUrl }).(pulumi.StringOutput)
}

// For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
func (o UrlMapTestResponseOutput) ExpectedRedirectResponseCode() pulumi.IntOutput {
	return o.ApplyT(func(v UrlMapTestResponse) int { return v.ExpectedRedirectResponseCode }).(pulumi.IntOutput)
}

// The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
//
// Deprecated: The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
func (o UrlMapTestResponseOutput) ExpectedUrlRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.ExpectedUrlRedirect }).(pulumi.StringOutput)
}

// HTTP headers for this request. If headers contains a host header, then host must also match the header value.
func (o UrlMapTestResponseOutput) Headers() UrlMapTestHeaderResponseArrayOutput {
	return o.ApplyT(func(v UrlMapTestResponse) []UrlMapTestHeaderResponse { return v.Headers }).(UrlMapTestHeaderResponseArrayOutput)
}

// Host portion of the URL. If headers contains a host header, then host must also match the header value.
func (o UrlMapTestResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.Host }).(pulumi.StringOutput)
}

// Path portion of the URL.
func (o UrlMapTestResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.Path }).(pulumi.StringOutput)
}

// Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
func (o UrlMapTestResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v UrlMapTestResponse) string { return v.Service }).(pulumi.StringOutput)
}

type UrlMapTestResponseArrayOutput struct{ *pulumi.OutputState }

func (UrlMapTestResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlMapTestResponse)(nil)).Elem()
}

func (o UrlMapTestResponseArrayOutput) ToUrlMapTestResponseArrayOutput() UrlMapTestResponseArrayOutput {
	return o
}

func (o UrlMapTestResponseArrayOutput) ToUrlMapTestResponseArrayOutputWithContext(ctx context.Context) UrlMapTestResponseArrayOutput {
	return o
}

func (o UrlMapTestResponseArrayOutput) Index(i pulumi.IntInput) UrlMapTestResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlMapTestResponse {
		return vs[0].([]UrlMapTestResponse)[vs[1].(int)]
	}).(UrlMapTestResponseOutput)
}

// The spec for modifying the path before sending the request to the matched backend service.
type UrlRewrite struct {
	// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
	HostRewrite *string `pulumi:"hostRewrite"`
	// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
	PathPrefixRewrite *string `pulumi:"pathPrefixRewrite"`
	//  If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
	PathTemplateRewrite *string `pulumi:"pathTemplateRewrite"`
}

// UrlRewriteInput is an input type that accepts UrlRewriteArgs and UrlRewriteOutput values.
// You can construct a concrete instance of `UrlRewriteInput` via:
//
//	UrlRewriteArgs{...}
type UrlRewriteInput interface {
	pulumi.Input

	ToUrlRewriteOutput() UrlRewriteOutput
	ToUrlRewriteOutputWithContext(context.Context) UrlRewriteOutput
}

// The spec for modifying the path before sending the request to the matched backend service.
type UrlRewriteArgs struct {
	// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
	HostRewrite pulumi.StringPtrInput `pulumi:"hostRewrite"`
	// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
	PathPrefixRewrite pulumi.StringPtrInput `pulumi:"pathPrefixRewrite"`
	//  If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
	PathTemplateRewrite pulumi.StringPtrInput `pulumi:"pathTemplateRewrite"`
}

func (UrlRewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewrite)(nil)).Elem()
}

func (i UrlRewriteArgs) ToUrlRewriteOutput() UrlRewriteOutput {
	return i.ToUrlRewriteOutputWithContext(context.Background())
}

func (i UrlRewriteArgs) ToUrlRewriteOutputWithContext(ctx context.Context) UrlRewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteOutput)
}

func (i UrlRewriteArgs) ToUrlRewritePtrOutput() UrlRewritePtrOutput {
	return i.ToUrlRewritePtrOutputWithContext(context.Background())
}

func (i UrlRewriteArgs) ToUrlRewritePtrOutputWithContext(ctx context.Context) UrlRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewriteOutput).ToUrlRewritePtrOutputWithContext(ctx)
}

// UrlRewritePtrInput is an input type that accepts UrlRewriteArgs, UrlRewritePtr and UrlRewritePtrOutput values.
// You can construct a concrete instance of `UrlRewritePtrInput` via:
//
//	        UrlRewriteArgs{...}
//
//	or:
//
//	        nil
type UrlRewritePtrInput interface {
	pulumi.Input

	ToUrlRewritePtrOutput() UrlRewritePtrOutput
	ToUrlRewritePtrOutputWithContext(context.Context) UrlRewritePtrOutput
}

type urlRewritePtrType UrlRewriteArgs

func UrlRewritePtr(v *UrlRewriteArgs) UrlRewritePtrInput {
	return (*urlRewritePtrType)(v)
}

func (*urlRewritePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlRewrite)(nil)).Elem()
}

func (i *urlRewritePtrType) ToUrlRewritePtrOutput() UrlRewritePtrOutput {
	return i.ToUrlRewritePtrOutputWithContext(context.Background())
}

func (i *urlRewritePtrType) ToUrlRewritePtrOutputWithContext(ctx context.Context) UrlRewritePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlRewritePtrOutput)
}

// The spec for modifying the path before sending the request to the matched backend service.
type UrlRewriteOutput struct{ *pulumi.OutputState }

func (UrlRewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewrite)(nil)).Elem()
}

func (o UrlRewriteOutput) ToUrlRewriteOutput() UrlRewriteOutput {
	return o
}

func (o UrlRewriteOutput) ToUrlRewriteOutputWithContext(ctx context.Context) UrlRewriteOutput {
	return o
}

func (o UrlRewriteOutput) ToUrlRewritePtrOutput() UrlRewritePtrOutput {
	return o.ToUrlRewritePtrOutputWithContext(context.Background())
}

func (o UrlRewriteOutput) ToUrlRewritePtrOutputWithContext(ctx context.Context) UrlRewritePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UrlRewrite) *UrlRewrite {
		return &v
	}).(UrlRewritePtrOutput)
}

// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
func (o UrlRewriteOutput) HostRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRewrite) *string { return v.HostRewrite }).(pulumi.StringPtrOutput)
}

// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
func (o UrlRewriteOutput) PathPrefixRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRewrite) *string { return v.PathPrefixRewrite }).(pulumi.StringPtrOutput)
}

// If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
func (o UrlRewriteOutput) PathTemplateRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlRewrite) *string { return v.PathTemplateRewrite }).(pulumi.StringPtrOutput)
}

type UrlRewritePtrOutput struct{ *pulumi.OutputState }

func (UrlRewritePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlRewrite)(nil)).Elem()
}

func (o UrlRewritePtrOutput) ToUrlRewritePtrOutput() UrlRewritePtrOutput {
	return o
}

func (o UrlRewritePtrOutput) ToUrlRewritePtrOutputWithContext(ctx context.Context) UrlRewritePtrOutput {
	return o
}

func (o UrlRewritePtrOutput) Elem() UrlRewriteOutput {
	return o.ApplyT(func(v *UrlRewrite) UrlRewrite {
		if v != nil {
			return *v
		}
		var ret UrlRewrite
		return ret
	}).(UrlRewriteOutput)
}

// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
func (o UrlRewritePtrOutput) HostRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlRewrite) *string {
		if v == nil {
			return nil
		}
		return v.HostRewrite
	}).(pulumi.StringPtrOutput)
}

// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
func (o UrlRewritePtrOutput) PathPrefixRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlRewrite) *string {
		if v == nil {
			return nil
		}
		return v.PathPrefixRewrite
	}).(pulumi.StringPtrOutput)
}

// If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
func (o UrlRewritePtrOutput) PathTemplateRewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UrlRewrite) *string {
		if v == nil {
			return nil
		}
		return v.PathTemplateRewrite
	}).(pulumi.StringPtrOutput)
}

// The spec for modifying the path before sending the request to the matched backend service.
type UrlRewriteResponse struct {
	// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
	HostRewrite string `pulumi:"hostRewrite"`
	// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
	PathPrefixRewrite string `pulumi:"pathPrefixRewrite"`
	//  If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
	PathTemplateRewrite string `pulumi:"pathTemplateRewrite"`
}

// The spec for modifying the path before sending the request to the matched backend service.
type UrlRewriteResponseOutput struct{ *pulumi.OutputState }

func (UrlRewriteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlRewriteResponse)(nil)).Elem()
}

func (o UrlRewriteResponseOutput) ToUrlRewriteResponseOutput() UrlRewriteResponseOutput {
	return o
}

func (o UrlRewriteResponseOutput) ToUrlRewriteResponseOutputWithContext(ctx context.Context) UrlRewriteResponseOutput {
	return o
}

// Before forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be from 1 to 255 characters.
func (o UrlRewriteResponseOutput) HostRewrite() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteResponse) string { return v.HostRewrite }).(pulumi.StringOutput)
}

// Before forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be from 1 to 1024 characters.
func (o UrlRewriteResponseOutput) PathPrefixRewrite() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteResponse) string { return v.PathPrefixRewrite }).(pulumi.StringOutput)
}

// If specified, the pattern rewrites the URL path (based on the :path header) using the HTTP template syntax. A corresponding path_template_match must be specified. Any template variables must exist in the path_template_match field. - -At least one variable must be specified in the path_template_match field - You can omit variables from the rewritten URL - The * and ** operators cannot be matched unless they have a corresponding variable name - e.g. {format=*} or {var=**}. For example, a path_template_match of /static/{format=**} could be rewritten as /static/content/{format} to prefix /content to the URL. Variables can also be re-ordered in a rewrite, so that /{country}/{format}/{suffix=**} can be rewritten as /content/{format}/{country}/{suffix}. At least one non-empty routeRules[].matchRules[].path_template_match is required. Only one of path_prefix_rewrite or path_template_rewrite may be specified.
func (o UrlRewriteResponseOutput) PathTemplateRewrite() pulumi.StringOutput {
	return o.ApplyT(func(v UrlRewriteResponse) string { return v.PathTemplateRewrite }).(pulumi.StringOutput)
}

// A VPN gateway interface.
type VpnGatewayVpnGatewayInterface struct {
	// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
	InterconnectAttachment *string `pulumi:"interconnectAttachment"`
}

// VpnGatewayVpnGatewayInterfaceInput is an input type that accepts VpnGatewayVpnGatewayInterfaceArgs and VpnGatewayVpnGatewayInterfaceOutput values.
// You can construct a concrete instance of `VpnGatewayVpnGatewayInterfaceInput` via:
//
//	VpnGatewayVpnGatewayInterfaceArgs{...}
type VpnGatewayVpnGatewayInterfaceInput interface {
	pulumi.Input

	ToVpnGatewayVpnGatewayInterfaceOutput() VpnGatewayVpnGatewayInterfaceOutput
	ToVpnGatewayVpnGatewayInterfaceOutputWithContext(context.Context) VpnGatewayVpnGatewayInterfaceOutput
}

// A VPN gateway interface.
type VpnGatewayVpnGatewayInterfaceArgs struct {
	// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
	InterconnectAttachment pulumi.StringPtrInput `pulumi:"interconnectAttachment"`
}

func (VpnGatewayVpnGatewayInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayVpnGatewayInterface)(nil)).Elem()
}

func (i VpnGatewayVpnGatewayInterfaceArgs) ToVpnGatewayVpnGatewayInterfaceOutput() VpnGatewayVpnGatewayInterfaceOutput {
	return i.ToVpnGatewayVpnGatewayInterfaceOutputWithContext(context.Background())
}

func (i VpnGatewayVpnGatewayInterfaceArgs) ToVpnGatewayVpnGatewayInterfaceOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayVpnGatewayInterfaceOutput)
}

// VpnGatewayVpnGatewayInterfaceArrayInput is an input type that accepts VpnGatewayVpnGatewayInterfaceArray and VpnGatewayVpnGatewayInterfaceArrayOutput values.
// You can construct a concrete instance of `VpnGatewayVpnGatewayInterfaceArrayInput` via:
//
//	VpnGatewayVpnGatewayInterfaceArray{ VpnGatewayVpnGatewayInterfaceArgs{...} }
type VpnGatewayVpnGatewayInterfaceArrayInput interface {
	pulumi.Input

	ToVpnGatewayVpnGatewayInterfaceArrayOutput() VpnGatewayVpnGatewayInterfaceArrayOutput
	ToVpnGatewayVpnGatewayInterfaceArrayOutputWithContext(context.Context) VpnGatewayVpnGatewayInterfaceArrayOutput
}

type VpnGatewayVpnGatewayInterfaceArray []VpnGatewayVpnGatewayInterfaceInput

func (VpnGatewayVpnGatewayInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayVpnGatewayInterface)(nil)).Elem()
}

func (i VpnGatewayVpnGatewayInterfaceArray) ToVpnGatewayVpnGatewayInterfaceArrayOutput() VpnGatewayVpnGatewayInterfaceArrayOutput {
	return i.ToVpnGatewayVpnGatewayInterfaceArrayOutputWithContext(context.Background())
}

func (i VpnGatewayVpnGatewayInterfaceArray) ToVpnGatewayVpnGatewayInterfaceArrayOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayVpnGatewayInterfaceArrayOutput)
}

// A VPN gateway interface.
type VpnGatewayVpnGatewayInterfaceOutput struct{ *pulumi.OutputState }

func (VpnGatewayVpnGatewayInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayVpnGatewayInterface)(nil)).Elem()
}

func (o VpnGatewayVpnGatewayInterfaceOutput) ToVpnGatewayVpnGatewayInterfaceOutput() VpnGatewayVpnGatewayInterfaceOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceOutput) ToVpnGatewayVpnGatewayInterfaceOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceOutput {
	return o
}

// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
func (o VpnGatewayVpnGatewayInterfaceOutput) InterconnectAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayVpnGatewayInterface) *string { return v.InterconnectAttachment }).(pulumi.StringPtrOutput)
}

type VpnGatewayVpnGatewayInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayVpnGatewayInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayVpnGatewayInterface)(nil)).Elem()
}

func (o VpnGatewayVpnGatewayInterfaceArrayOutput) ToVpnGatewayVpnGatewayInterfaceArrayOutput() VpnGatewayVpnGatewayInterfaceArrayOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceArrayOutput) ToVpnGatewayVpnGatewayInterfaceArrayOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceArrayOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceArrayOutput) Index(i pulumi.IntInput) VpnGatewayVpnGatewayInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayVpnGatewayInterface {
		return vs[0].([]VpnGatewayVpnGatewayInterface)[vs[1].(int)]
	}).(VpnGatewayVpnGatewayInterfaceOutput)
}

// A VPN gateway interface.
type VpnGatewayVpnGatewayInterfaceResponse struct {
	// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
	InterconnectAttachment string `pulumi:"interconnectAttachment"`
	// IP address for this VPN interface associated with the VPN gateway. The IP address could be either a regional external IP address or a regional internal IP address. The two IP addresses for a VPN gateway must be all regional external or regional internal IP addresses. There cannot be a mix of regional external IP addresses and regional internal IP addresses. For HA VPN over Cloud Interconnect, the IP addresses for both interfaces could either be regional internal IP addresses or regional external IP addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels, the IP address must be a regional external IP address.
	IpAddress string `pulumi:"ipAddress"`
	// IPv6 address for this VPN interface associated with the VPN gateway. The IPv6 address must be a regional external IPv6 address. The format is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
	Ipv6Address string `pulumi:"ipv6Address"`
}

// A VPN gateway interface.
type VpnGatewayVpnGatewayInterfaceResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayVpnGatewayInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayVpnGatewayInterfaceResponse)(nil)).Elem()
}

func (o VpnGatewayVpnGatewayInterfaceResponseOutput) ToVpnGatewayVpnGatewayInterfaceResponseOutput() VpnGatewayVpnGatewayInterfaceResponseOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceResponseOutput) ToVpnGatewayVpnGatewayInterfaceResponseOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceResponseOutput {
	return o
}

// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
func (o VpnGatewayVpnGatewayInterfaceResponseOutput) InterconnectAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayVpnGatewayInterfaceResponse) string { return v.InterconnectAttachment }).(pulumi.StringOutput)
}

// IP address for this VPN interface associated with the VPN gateway. The IP address could be either a regional external IP address or a regional internal IP address. The two IP addresses for a VPN gateway must be all regional external or regional internal IP addresses. There cannot be a mix of regional external IP addresses and regional internal IP addresses. For HA VPN over Cloud Interconnect, the IP addresses for both interfaces could either be regional internal IP addresses or regional external IP addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels, the IP address must be a regional external IP address.
func (o VpnGatewayVpnGatewayInterfaceResponseOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayVpnGatewayInterfaceResponse) string { return v.IpAddress }).(pulumi.StringOutput)
}

// IPv6 address for this VPN interface associated with the VPN gateway. The IPv6 address must be a regional external IPv6 address. The format is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
func (o VpnGatewayVpnGatewayInterfaceResponseOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v VpnGatewayVpnGatewayInterfaceResponse) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

type VpnGatewayVpnGatewayInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayVpnGatewayInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayVpnGatewayInterfaceResponse)(nil)).Elem()
}

func (o VpnGatewayVpnGatewayInterfaceResponseArrayOutput) ToVpnGatewayVpnGatewayInterfaceResponseArrayOutput() VpnGatewayVpnGatewayInterfaceResponseArrayOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceResponseArrayOutput) ToVpnGatewayVpnGatewayInterfaceResponseArrayOutputWithContext(ctx context.Context) VpnGatewayVpnGatewayInterfaceResponseArrayOutput {
	return o
}

func (o VpnGatewayVpnGatewayInterfaceResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayVpnGatewayInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayVpnGatewayInterfaceResponse {
		return vs[0].([]VpnGatewayVpnGatewayInterfaceResponse)[vs[1].(int)]
	}).(VpnGatewayVpnGatewayInterfaceResponseOutput)
}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
type WeightedBackendService struct {
	// The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
	BackendService *string `pulumi:"backendService"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
	HeaderAction *HttpHeaderAction `pulumi:"headerAction"`
	// Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
	Weight *int `pulumi:"weight"`
}

// WeightedBackendServiceInput is an input type that accepts WeightedBackendServiceArgs and WeightedBackendServiceOutput values.
// You can construct a concrete instance of `WeightedBackendServiceInput` via:
//
//	WeightedBackendServiceArgs{...}
type WeightedBackendServiceInput interface {
	pulumi.Input

	ToWeightedBackendServiceOutput() WeightedBackendServiceOutput
	ToWeightedBackendServiceOutputWithContext(context.Context) WeightedBackendServiceOutput
}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
type WeightedBackendServiceArgs struct {
	// The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
	BackendService pulumi.StringPtrInput `pulumi:"backendService"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
	HeaderAction HttpHeaderActionPtrInput `pulumi:"headerAction"`
	// Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (WeightedBackendServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WeightedBackendService)(nil)).Elem()
}

func (i WeightedBackendServiceArgs) ToWeightedBackendServiceOutput() WeightedBackendServiceOutput {
	return i.ToWeightedBackendServiceOutputWithContext(context.Background())
}

func (i WeightedBackendServiceArgs) ToWeightedBackendServiceOutputWithContext(ctx context.Context) WeightedBackendServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeightedBackendServiceOutput)
}

// WeightedBackendServiceArrayInput is an input type that accepts WeightedBackendServiceArray and WeightedBackendServiceArrayOutput values.
// You can construct a concrete instance of `WeightedBackendServiceArrayInput` via:
//
//	WeightedBackendServiceArray{ WeightedBackendServiceArgs{...} }
type WeightedBackendServiceArrayInput interface {
	pulumi.Input

	ToWeightedBackendServiceArrayOutput() WeightedBackendServiceArrayOutput
	ToWeightedBackendServiceArrayOutputWithContext(context.Context) WeightedBackendServiceArrayOutput
}

type WeightedBackendServiceArray []WeightedBackendServiceInput

func (WeightedBackendServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeightedBackendService)(nil)).Elem()
}

func (i WeightedBackendServiceArray) ToWeightedBackendServiceArrayOutput() WeightedBackendServiceArrayOutput {
	return i.ToWeightedBackendServiceArrayOutputWithContext(context.Background())
}

func (i WeightedBackendServiceArray) ToWeightedBackendServiceArrayOutputWithContext(ctx context.Context) WeightedBackendServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeightedBackendServiceArrayOutput)
}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
type WeightedBackendServiceOutput struct{ *pulumi.OutputState }

func (WeightedBackendServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeightedBackendService)(nil)).Elem()
}

func (o WeightedBackendServiceOutput) ToWeightedBackendServiceOutput() WeightedBackendServiceOutput {
	return o
}

func (o WeightedBackendServiceOutput) ToWeightedBackendServiceOutputWithContext(ctx context.Context) WeightedBackendServiceOutput {
	return o
}

// The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
func (o WeightedBackendServiceOutput) BackendService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WeightedBackendService) *string { return v.BackendService }).(pulumi.StringPtrOutput)
}

// Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
func (o WeightedBackendServiceOutput) HeaderAction() HttpHeaderActionPtrOutput {
	return o.ApplyT(func(v WeightedBackendService) *HttpHeaderAction { return v.HeaderAction }).(HttpHeaderActionPtrOutput)
}

// Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
func (o WeightedBackendServiceOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WeightedBackendService) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type WeightedBackendServiceArrayOutput struct{ *pulumi.OutputState }

func (WeightedBackendServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeightedBackendService)(nil)).Elem()
}

func (o WeightedBackendServiceArrayOutput) ToWeightedBackendServiceArrayOutput() WeightedBackendServiceArrayOutput {
	return o
}

func (o WeightedBackendServiceArrayOutput) ToWeightedBackendServiceArrayOutputWithContext(ctx context.Context) WeightedBackendServiceArrayOutput {
	return o
}

func (o WeightedBackendServiceArrayOutput) Index(i pulumi.IntInput) WeightedBackendServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WeightedBackendService {
		return vs[0].([]WeightedBackendService)[vs[1].(int)]
	}).(WeightedBackendServiceOutput)
}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
type WeightedBackendServiceResponse struct {
	// The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
	BackendService string `pulumi:"backendService"`
	// Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
	HeaderAction HttpHeaderActionResponse `pulumi:"headerAction"`
	// Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
	Weight int `pulumi:"weight"`
}

// In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple backend services. The volume of traffic for each backend service is proportional to the weight specified in each WeightedBackendService
type WeightedBackendServiceResponseOutput struct{ *pulumi.OutputState }

func (WeightedBackendServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeightedBackendServiceResponse)(nil)).Elem()
}

func (o WeightedBackendServiceResponseOutput) ToWeightedBackendServiceResponseOutput() WeightedBackendServiceResponseOutput {
	return o
}

func (o WeightedBackendServiceResponseOutput) ToWeightedBackendServiceResponseOutputWithContext(ctx context.Context) WeightedBackendServiceResponseOutput {
	return o
}

// The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the load balancer applies any relevant headerActions specified as part of this backendServiceWeight.
func (o WeightedBackendServiceResponseOutput) BackendService() pulumi.StringOutput {
	return o.ApplyT(func(v WeightedBackendServiceResponse) string { return v.BackendService }).(pulumi.StringOutput)
}

// Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. headerAction is not supported for load balancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy that has validateForProxyless field set to true.
func (o WeightedBackendServiceResponseOutput) HeaderAction() HttpHeaderActionResponseOutput {
	return o.ApplyT(func(v WeightedBackendServiceResponse) HttpHeaderActionResponse { return v.HeaderAction }).(HttpHeaderActionResponseOutput)
}

// Specifies the fraction of traffic sent to a backend service, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backend service, subsequent requests are sent to the same backend service as determined by the backend service's session affinity policy. The value must be from 0 to 1000.
func (o WeightedBackendServiceResponseOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v WeightedBackendServiceResponse) int { return v.Weight }).(pulumi.IntOutput)
}

type WeightedBackendServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (WeightedBackendServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeightedBackendServiceResponse)(nil)).Elem()
}

func (o WeightedBackendServiceResponseArrayOutput) ToWeightedBackendServiceResponseArrayOutput() WeightedBackendServiceResponseArrayOutput {
	return o
}

func (o WeightedBackendServiceResponseArrayOutput) ToWeightedBackendServiceResponseArrayOutputWithContext(ctx context.Context) WeightedBackendServiceResponseArrayOutput {
	return o
}

func (o WeightedBackendServiceResponseArrayOutput) Index(i pulumi.IntInput) WeightedBackendServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WeightedBackendServiceResponse {
		return vs[0].([]WeightedBackendServiceResponse)[vs[1].(int)]
	}).(WeightedBackendServiceResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleInput)(nil)).Elem(), SecurityPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleArrayInput)(nil)).Elem(), SecurityPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionInput)(nil)).Elem(), SecurityPolicyRuleHttpHeaderActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionPtrInput)(nil)).Elem(), SecurityPolicyRuleHttpHeaderActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionInput)(nil)).Elem(), SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayInput)(nil)).Elem(), SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherInput)(nil)).Elem(), SecurityPolicyRuleMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherPtrInput)(nil)).Elem(), SecurityPolicyRuleMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigPtrInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigDestinationPortInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigDestinationPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigDestinationPortArrayInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigDestinationPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigLayer4ConfigInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigLayer4ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherConfigLayer4ConfigArrayInput)(nil)).Elem(), SecurityPolicyRuleMatcherConfigLayer4ConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsInput)(nil)).Elem(), SecurityPolicyRuleMatcherExprOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsPtrInput)(nil)).Elem(), SecurityPolicyRuleMatcherExprOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsInput)(nil)).Elem(), SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrInput)(nil)).Elem(), SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherInput)(nil)).Elem(), SecurityPolicyRuleNetworkMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherPtrInput)(nil)).Elem(), SecurityPolicyRuleNetworkMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchInput)(nil)).Elem(), SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayInput)(nil)).Elem(), SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigPtrInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionArrayInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayInput)(nil)).Elem(), SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsPtrInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsRpcStatusInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsRpcStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsRpcStatusPtrInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsRpcStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsThresholdInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRateLimitOptionsThresholdPtrInput)(nil)).Elem(), SecurityPolicyRuleRateLimitOptionsThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsInput)(nil)).Elem(), SecurityPolicyRuleRedirectOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyRuleRedirectOptionsPtrInput)(nil)).Elem(), SecurityPolicyRuleRedirectOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyUserDefinedFieldInput)(nil)).Elem(), SecurityPolicyUserDefinedFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityPolicyUserDefinedFieldArrayInput)(nil)).Elem(), SecurityPolicyUserDefinedFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySettingsInput)(nil)).Elem(), SecuritySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySettingsPtrInput)(nil)).Elem(), SecuritySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerBindingInput)(nil)).Elem(), ServerBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerBindingPtrInput)(nil)).Elem(), ServerBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTlsSettingsInput)(nil)).Elem(), ServerTlsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTlsSettingsPtrInput)(nil)).Elem(), ServerTlsSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountInput)(nil)).Elem(), ServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountArrayInput)(nil)).Elem(), ServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentConsumerProjectLimitInput)(nil)).Elem(), ServiceAttachmentConsumerProjectLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentConsumerProjectLimitArrayInput)(nil)).Elem(), ServiceAttachmentConsumerProjectLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentTunnelingConfigInput)(nil)).Elem(), ServiceAttachmentTunnelingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAttachmentTunnelingConfigPtrInput)(nil)).Elem(), ServiceAttachmentTunnelingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationSpecInput)(nil)).Elem(), ServiceIntegrationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationSpecPtrInput)(nil)).Elem(), ServiceIntegrationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationSpecBackupDRSpecInput)(nil)).Elem(), ServiceIntegrationSpecBackupDRSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIntegrationSpecBackupDRSpecPtrInput)(nil)).Elem(), ServiceIntegrationSpecBackupDRSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsInput)(nil)).Elem(), ShareSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsPtrInput)(nil)).Elem(), ShareSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsFolderConfigInput)(nil)).Elem(), ShareSettingsFolderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsFolderConfigPtrInput)(nil)).Elem(), ShareSettingsFolderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsProjectConfigInput)(nil)).Elem(), ShareSettingsProjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShareSettingsProjectConfigPtrInput)(nil)).Elem(), ShareSettingsProjectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedInstanceConfigInput)(nil)).Elem(), ShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedInstanceConfigPtrInput)(nil)).Elem(), ShieldedInstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedInstanceIntegrityPolicyInput)(nil)).Elem(), ShieldedInstanceIntegrityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedInstanceIntegrityPolicyPtrInput)(nil)).Elem(), ShieldedInstanceIntegrityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedVmConfigInput)(nil)).Elem(), ShieldedVmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedVmConfigPtrInput)(nil)).Elem(), ShieldedVmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedVmIntegrityPolicyInput)(nil)).Elem(), ShieldedVmIntegrityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ShieldedVmIntegrityPolicyPtrInput)(nil)).Elem(), ShieldedVmIntegrityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceDiskEncryptionKeyInput)(nil)).Elem(), SourceDiskEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceDiskEncryptionKeyArrayInput)(nil)).Elem(), SourceDiskEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceInstanceParamsInput)(nil)).Elem(), SourceInstanceParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceInstanceParamsPtrInput)(nil)).Elem(), SourceInstanceParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateManagedSslCertificateInput)(nil)).Elem(), SslCertificateManagedSslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateManagedSslCertificatePtrInput)(nil)).Elem(), SslCertificateManagedSslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateSelfManagedSslCertificateInput)(nil)).Elem(), SslCertificateSelfManagedSslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SslCertificateSelfManagedSslCertificatePtrInput)(nil)).Elem(), SslCertificateSelfManagedSslCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyInput)(nil)).Elem(), StatefulPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPtrInput)(nil)).Elem(), StatefulPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStateInput)(nil)).Elem(), StatefulPolicyPreservedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStatePtrInput)(nil)).Elem(), StatefulPolicyPreservedStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStateDiskDeviceInput)(nil)).Elem(), StatefulPolicyPreservedStateDiskDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStateDiskDevicePtrInput)(nil)).Elem(), StatefulPolicyPreservedStateDiskDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStateNetworkIpInput)(nil)).Elem(), StatefulPolicyPreservedStateNetworkIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatefulPolicyPreservedStateNetworkIpPtrInput)(nil)).Elem(), StatefulPolicyPreservedStateNetworkIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StructuredEntriesInput)(nil)).Elem(), StructuredEntriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StructuredEntriesPtrInput)(nil)).Elem(), StructuredEntriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigInput)(nil)).Elem(), SubnetworkLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkLogConfigPtrInput)(nil)).Elem(), SubnetworkLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkSecondaryRangeInput)(nil)).Elem(), SubnetworkSecondaryRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetworkSecondaryRangeArrayInput)(nil)).Elem(), SubnetworkSecondaryRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubsettingInput)(nil)).Elem(), SubsettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubsettingPtrInput)(nil)).Elem(), SubsettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckInput)(nil)).Elem(), TCPHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TCPHealthCheckPtrInput)(nil)).Elem(), TCPHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagsInput)(nil)).Elem(), TagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagsPtrInput)(nil)).Elem(), TagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateContextInput)(nil)).Elem(), TlsCertificateContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateContextPtrInput)(nil)).Elem(), TlsCertificateContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificatePathsInput)(nil)).Elem(), TlsCertificatePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificatePathsPtrInput)(nil)).Elem(), TlsCertificatePathsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsContextInput)(nil)).Elem(), TlsContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsContextPtrInput)(nil)).Elem(), TlsContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsValidationContextInput)(nil)).Elem(), TlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsValidationContextPtrInput)(nil)).Elem(), TlsValidationContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPHealthCheckInput)(nil)).Elem(), UDPHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UDPHealthCheckPtrInput)(nil)).Elem(), UDPHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlMapTestInput)(nil)).Elem(), UrlMapTestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlMapTestArrayInput)(nil)).Elem(), UrlMapTestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlMapTestHeaderInput)(nil)).Elem(), UrlMapTestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlMapTestHeaderArrayInput)(nil)).Elem(), UrlMapTestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlRewriteInput)(nil)).Elem(), UrlRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlRewritePtrInput)(nil)).Elem(), UrlRewriteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayVpnGatewayInterfaceInput)(nil)).Elem(), VpnGatewayVpnGatewayInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayVpnGatewayInterfaceArrayInput)(nil)).Elem(), VpnGatewayVpnGatewayInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WeightedBackendServiceInput)(nil)).Elem(), WeightedBackendServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WeightedBackendServiceArrayInput)(nil)).Elem(), WeightedBackendServiceArray{})
	pulumi.RegisterOutputType(SecurityPolicyRecaptchaOptionsConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionHttpHeaderOptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleHttpHeaderActionResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigDestinationPortOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigDestinationPortArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigDestinationPortResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigDestinationPortResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigLayer4ConfigOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigLayer4ConfigArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigLayer4ConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigLayer4ConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsRecaptchaOptionsResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherExprOptionsResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleMatcherResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatchResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionFieldParamsResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigExclusionResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRulePreconfiguredWafConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsRpcStatusOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsRpcStatusPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsRpcStatusResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsThresholdOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsThresholdPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRateLimitOptionsThresholdResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRedirectOptionsOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRedirectOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleRedirectOptionsResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyUserDefinedFieldOutput{})
	pulumi.RegisterOutputType(SecurityPolicyUserDefinedFieldArrayOutput{})
	pulumi.RegisterOutputType(SecurityPolicyUserDefinedFieldResponseOutput{})
	pulumi.RegisterOutputType(SecurityPolicyUserDefinedFieldResponseArrayOutput{})
	pulumi.RegisterOutputType(SecuritySettingsOutput{})
	pulumi.RegisterOutputType(SecuritySettingsPtrOutput{})
	pulumi.RegisterOutputType(SecuritySettingsResponseOutput{})
	pulumi.RegisterOutputType(ServerBindingOutput{})
	pulumi.RegisterOutputType(ServerBindingPtrOutput{})
	pulumi.RegisterOutputType(ServerBindingResponseOutput{})
	pulumi.RegisterOutputType(ServerTlsSettingsOutput{})
	pulumi.RegisterOutputType(ServerTlsSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServerTlsSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServiceAccountOutput{})
	pulumi.RegisterOutputType(ServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(ServiceAccountResponseOutput{})
	pulumi.RegisterOutputType(ServiceAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConnectedEndpointResponseOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConnectedEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConsumerProjectLimitOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConsumerProjectLimitArrayOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConsumerProjectLimitResponseOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentConsumerProjectLimitResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentTunnelingConfigOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentTunnelingConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceAttachmentTunnelingConfigResponseOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecBackupDRSpecOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecBackupDRSpecPtrOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecBackupDRSpecResponseOutput{})
	pulumi.RegisterOutputType(ServiceIntegrationSpecResponseOutput{})
	pulumi.RegisterOutputType(ShareSettingsOutput{})
	pulumi.RegisterOutputType(ShareSettingsPtrOutput{})
	pulumi.RegisterOutputType(ShareSettingsFolderConfigOutput{})
	pulumi.RegisterOutputType(ShareSettingsFolderConfigPtrOutput{})
	pulumi.RegisterOutputType(ShareSettingsFolderConfigResponseOutput{})
	pulumi.RegisterOutputType(ShareSettingsProjectConfigOutput{})
	pulumi.RegisterOutputType(ShareSettingsProjectConfigPtrOutput{})
	pulumi.RegisterOutputType(ShareSettingsProjectConfigResponseOutput{})
	pulumi.RegisterOutputType(ShareSettingsResponseOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceConfigResponseOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceIntegrityPolicyOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceIntegrityPolicyPtrOutput{})
	pulumi.RegisterOutputType(ShieldedInstanceIntegrityPolicyResponseOutput{})
	pulumi.RegisterOutputType(ShieldedVmConfigOutput{})
	pulumi.RegisterOutputType(ShieldedVmConfigPtrOutput{})
	pulumi.RegisterOutputType(ShieldedVmConfigResponseOutput{})
	pulumi.RegisterOutputType(ShieldedVmIntegrityPolicyOutput{})
	pulumi.RegisterOutputType(ShieldedVmIntegrityPolicyPtrOutput{})
	pulumi.RegisterOutputType(ShieldedVmIntegrityPolicyResponseOutput{})
	pulumi.RegisterOutputType(SourceDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(SourceDiskEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(SourceDiskEncryptionKeyResponseOutput{})
	pulumi.RegisterOutputType(SourceDiskEncryptionKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(SourceInstanceParamsOutput{})
	pulumi.RegisterOutputType(SourceInstanceParamsPtrOutput{})
	pulumi.RegisterOutputType(SourceInstanceParamsResponseOutput{})
	pulumi.RegisterOutputType(SourceInstancePropertiesResponseOutput{})
	pulumi.RegisterOutputType(SslCertificateManagedSslCertificateOutput{})
	pulumi.RegisterOutputType(SslCertificateManagedSslCertificatePtrOutput{})
	pulumi.RegisterOutputType(SslCertificateManagedSslCertificateResponseOutput{})
	pulumi.RegisterOutputType(SslCertificateSelfManagedSslCertificateOutput{})
	pulumi.RegisterOutputType(SslCertificateSelfManagedSslCertificatePtrOutput{})
	pulumi.RegisterOutputType(SslCertificateSelfManagedSslCertificateResponseOutput{})
	pulumi.RegisterOutputType(SslPolicyWarningsItemDataItemResponseOutput{})
	pulumi.RegisterOutputType(SslPolicyWarningsItemDataItemResponseArrayOutput{})
	pulumi.RegisterOutputType(SslPolicyWarningsItemResponseOutput{})
	pulumi.RegisterOutputType(SslPolicyWarningsItemResponseArrayOutput{})
	pulumi.RegisterOutputType(StatefulPolicyOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPtrOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStatePtrOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateDiskDeviceOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateDiskDevicePtrOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateDiskDeviceResponseOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateNetworkIpOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateNetworkIpPtrOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateNetworkIpResponseOutput{})
	pulumi.RegisterOutputType(StatefulPolicyPreservedStateResponseOutput{})
	pulumi.RegisterOutputType(StatefulPolicyResponseOutput{})
	pulumi.RegisterOutputType(StoragePoolResourceStatusResponseOutput{})
	pulumi.RegisterOutputType(StructuredEntriesOutput{})
	pulumi.RegisterOutputType(StructuredEntriesPtrOutput{})
	pulumi.RegisterOutputType(StructuredEntriesResponseOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigPtrOutput{})
	pulumi.RegisterOutputType(SubnetworkLogConfigResponseOutput{})
	pulumi.RegisterOutputType(SubnetworkSecondaryRangeOutput{})
	pulumi.RegisterOutputType(SubnetworkSecondaryRangeArrayOutput{})
	pulumi.RegisterOutputType(SubnetworkSecondaryRangeResponseOutput{})
	pulumi.RegisterOutputType(SubnetworkSecondaryRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubsettingOutput{})
	pulumi.RegisterOutputType(SubsettingPtrOutput{})
	pulumi.RegisterOutputType(SubsettingResponseOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TCPHealthCheckResponseOutput{})
	pulumi.RegisterOutputType(TagsOutput{})
	pulumi.RegisterOutputType(TagsPtrOutput{})
	pulumi.RegisterOutputType(TagsResponseOutput{})
	pulumi.RegisterOutputType(TlsCertificateContextOutput{})
	pulumi.RegisterOutputType(TlsCertificateContextPtrOutput{})
	pulumi.RegisterOutputType(TlsCertificateContextResponseOutput{})
	pulumi.RegisterOutputType(TlsCertificatePathsOutput{})
	pulumi.RegisterOutputType(TlsCertificatePathsPtrOutput{})
	pulumi.RegisterOutputType(TlsCertificatePathsResponseOutput{})
	pulumi.RegisterOutputType(TlsContextOutput{})
	pulumi.RegisterOutputType(TlsContextPtrOutput{})
	pulumi.RegisterOutputType(TlsContextResponseOutput{})
	pulumi.RegisterOutputType(TlsValidationContextOutput{})
	pulumi.RegisterOutputType(TlsValidationContextPtrOutput{})
	pulumi.RegisterOutputType(TlsValidationContextResponseOutput{})
	pulumi.RegisterOutputType(UDPHealthCheckOutput{})
	pulumi.RegisterOutputType(UDPHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(UDPHealthCheckResponseOutput{})
	pulumi.RegisterOutputType(Uint128ResponseOutput{})
	pulumi.RegisterOutputType(UpcomingMaintenanceResponseOutput{})
	pulumi.RegisterOutputType(UpcomingMaintenanceTimeWindowResponseOutput{})
	pulumi.RegisterOutputType(UrlMapTestOutput{})
	pulumi.RegisterOutputType(UrlMapTestArrayOutput{})
	pulumi.RegisterOutputType(UrlMapTestHeaderOutput{})
	pulumi.RegisterOutputType(UrlMapTestHeaderArrayOutput{})
	pulumi.RegisterOutputType(UrlMapTestHeaderResponseOutput{})
	pulumi.RegisterOutputType(UrlMapTestHeaderResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlMapTestResponseOutput{})
	pulumi.RegisterOutputType(UrlMapTestResponseArrayOutput{})
	pulumi.RegisterOutputType(UrlRewriteOutput{})
	pulumi.RegisterOutputType(UrlRewritePtrOutput{})
	pulumi.RegisterOutputType(UrlRewriteResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayVpnGatewayInterfaceOutput{})
	pulumi.RegisterOutputType(VpnGatewayVpnGatewayInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayVpnGatewayInterfaceResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayVpnGatewayInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(WeightedBackendServiceOutput{})
	pulumi.RegisterOutputType(WeightedBackendServiceArrayOutput{})
	pulumi.RegisterOutputType(WeightedBackendServiceResponseOutput{})
	pulumi.RegisterOutputType(WeightedBackendServiceResponseArrayOutput{})
}
