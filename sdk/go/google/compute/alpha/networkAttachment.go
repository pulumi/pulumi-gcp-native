// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a NetworkAttachment in the specified project in the given scope using the parameters that are included in the request.
type NetworkAttachment struct {
	pulumi.CustomResourceState

	// An array of connections for all the producers connected to this network attachment.
	ConnectionEndpoints  NetworkAttachmentConnectedEndpointResponseArrayOutput `pulumi:"connectionEndpoints"`
	ConnectionPreference pulumi.StringOutput                                   `pulumi:"connectionPreference"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// Type of the resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
	Network pulumi.StringOutput `pulumi:"network"`
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists pulumi.StringArrayOutput `pulumi:"producerAcceptLists"`
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerRejectLists pulumi.StringArrayOutput `pulumi:"producerRejectLists"`
	Project             pulumi.StringOutput      `pulumi:"project"`
	Region              pulumi.StringOutput      `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
	Subnetworks pulumi.StringArrayOutput `pulumi:"subnetworks"`
}

// NewNetworkAttachment registers a new resource with the given unique name, arguments, and options.
func NewNetworkAttachment(ctx *pulumi.Context,
	name string, args *NetworkAttachmentArgs, opts ...pulumi.ResourceOption) (*NetworkAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
		"region",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkAttachment
	err := ctx.RegisterResource("google-native:compute/alpha:NetworkAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAttachment gets an existing NetworkAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAttachmentState, opts ...pulumi.ResourceOption) (*NetworkAttachment, error) {
	var resource NetworkAttachment
	err := ctx.ReadResource("google-native:compute/alpha:NetworkAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAttachment resources.
type networkAttachmentState struct {
}

type NetworkAttachmentState struct {
}

func (NetworkAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAttachmentState)(nil)).Elem()
}

type networkAttachmentArgs struct {
	ConnectionPreference *NetworkAttachmentConnectionPreference `pulumi:"connectionPreference"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists []string `pulumi:"producerAcceptLists"`
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerRejectLists []string `pulumi:"producerRejectLists"`
	Project             *string  `pulumi:"project"`
	Region              string   `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
	RequestId *string `pulumi:"requestId"`
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
	Subnetworks []string `pulumi:"subnetworks"`
}

// The set of arguments for constructing a NetworkAttachment resource.
type NetworkAttachmentArgs struct {
	ConnectionPreference NetworkAttachmentConnectionPreferencePtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists pulumi.StringArrayInput
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerRejectLists pulumi.StringArrayInput
	Project             pulumi.StringPtrInput
	Region              pulumi.StringInput
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
	RequestId pulumi.StringPtrInput
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
	Subnetworks pulumi.StringArrayInput
}

func (NetworkAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAttachmentArgs)(nil)).Elem()
}

type NetworkAttachmentInput interface {
	pulumi.Input

	ToNetworkAttachmentOutput() NetworkAttachmentOutput
	ToNetworkAttachmentOutputWithContext(ctx context.Context) NetworkAttachmentOutput
}

func (*NetworkAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachment)(nil)).Elem()
}

func (i *NetworkAttachment) ToNetworkAttachmentOutput() NetworkAttachmentOutput {
	return i.ToNetworkAttachmentOutputWithContext(context.Background())
}

func (i *NetworkAttachment) ToNetworkAttachmentOutputWithContext(ctx context.Context) NetworkAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachmentOutput)
}

func (i *NetworkAttachment) ToOutput(ctx context.Context) pulumix.Output[*NetworkAttachment] {
	return pulumix.Output[*NetworkAttachment]{
		OutputState: i.ToNetworkAttachmentOutputWithContext(ctx).OutputState,
	}
}

type NetworkAttachmentOutput struct{ *pulumi.OutputState }

func (NetworkAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachment)(nil)).Elem()
}

func (o NetworkAttachmentOutput) ToNetworkAttachmentOutput() NetworkAttachmentOutput {
	return o
}

func (o NetworkAttachmentOutput) ToNetworkAttachmentOutputWithContext(ctx context.Context) NetworkAttachmentOutput {
	return o
}

func (o NetworkAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[*NetworkAttachment] {
	return pulumix.Output[*NetworkAttachment]{
		OutputState: o.OutputState,
	}
}

// An array of connections for all the producers connected to this network attachment.
func (o NetworkAttachmentOutput) ConnectionEndpoints() NetworkAttachmentConnectedEndpointResponseArrayOutput {
	return o.ApplyT(func(v *NetworkAttachment) NetworkAttachmentConnectedEndpointResponseArrayOutput {
		return v.ConnectionEndpoints
	}).(NetworkAttachmentConnectedEndpointResponseArrayOutput)
}

func (o NetworkAttachmentOutput) ConnectionPreference() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.ConnectionPreference }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o NetworkAttachmentOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o NetworkAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
func (o NetworkAttachmentOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// Type of the resource.
func (o NetworkAttachmentOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o NetworkAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
func (o NetworkAttachmentOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
func (o NetworkAttachmentOutput) ProducerAcceptLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringArrayOutput { return v.ProducerAcceptLists }).(pulumi.StringArrayOutput)
}

// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
func (o NetworkAttachmentOutput) ProducerRejectLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringArrayOutput { return v.ProducerRejectLists }).(pulumi.StringArrayOutput)
}

func (o NetworkAttachmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o NetworkAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
func (o NetworkAttachmentOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Server-defined URL for the resource.
func (o NetworkAttachmentOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource's resource id.
func (o NetworkAttachmentOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
func (o NetworkAttachmentOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkAttachment) pulumi.StringArrayOutput { return v.Subnetworks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAttachmentInput)(nil)).Elem(), &NetworkAttachment{})
	pulumi.RegisterOutputType(NetworkAttachmentOutput{})
}
