// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the specified QueuedResource resource.
func LookupZoneQueuedResource(ctx *pulumi.Context, args *LookupZoneQueuedResourceArgs, opts ...pulumi.InvokeOption) (*LookupZoneQueuedResourceResult, error) {
	var rv LookupZoneQueuedResourceResult
	err := ctx.Invoke("google-native:compute/alpha:getZoneQueuedResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupZoneQueuedResourceArgs struct {
	Project        *string `pulumi:"project"`
	QueuedResource string  `pulumi:"queuedResource"`
	Zone           string  `pulumi:"zone"`
}

type LookupZoneQueuedResourceResult struct {
	// Specification of VM instances to create.
	BulkInsertInstanceResource BulkInsertInstanceResourceResponse `pulumi:"bulkInsertInstanceResource"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description string `pulumi:"description"`
	// Type of the resource. Always compute#queuedResource for QueuedResources.
	Kind string `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name string `pulumi:"name"`
	// Queuing parameters for the requested capacity.
	QueuingPolicy QueuingPolicyResponse `pulumi:"queuingPolicy"`
	// [Output only] Server-defined URL for the resource.
	SelfLink string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId string `pulumi:"selfLinkWithId"`
	// [Output only] High-level status of the request.
	State string `pulumi:"state"`
	// [Output only] Result of queuing and provisioning based on deferred capacity.
	Status QueuedResourceStatusResponse `pulumi:"status"`
	// URL of the zone where the resource resides. Only applicable for zonal resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Zone string `pulumi:"zone"`
}

func LookupZoneQueuedResourceOutput(ctx *pulumi.Context, args LookupZoneQueuedResourceOutputArgs, opts ...pulumi.InvokeOption) LookupZoneQueuedResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneQueuedResourceResult, error) {
			args := v.(LookupZoneQueuedResourceArgs)
			r, err := LookupZoneQueuedResource(ctx, &args, opts...)
			var s LookupZoneQueuedResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneQueuedResourceResultOutput)
}

type LookupZoneQueuedResourceOutputArgs struct {
	Project        pulumi.StringPtrInput `pulumi:"project"`
	QueuedResource pulumi.StringInput    `pulumi:"queuedResource"`
	Zone           pulumi.StringInput    `pulumi:"zone"`
}

func (LookupZoneQueuedResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneQueuedResourceArgs)(nil)).Elem()
}

type LookupZoneQueuedResourceResultOutput struct{ *pulumi.OutputState }

func (LookupZoneQueuedResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneQueuedResourceResult)(nil)).Elem()
}

func (o LookupZoneQueuedResourceResultOutput) ToLookupZoneQueuedResourceResultOutput() LookupZoneQueuedResourceResultOutput {
	return o
}

func (o LookupZoneQueuedResourceResultOutput) ToLookupZoneQueuedResourceResultOutputWithContext(ctx context.Context) LookupZoneQueuedResourceResultOutput {
	return o
}

// Specification of VM instances to create.
func (o LookupZoneQueuedResourceResultOutput) BulkInsertInstanceResource() BulkInsertInstanceResourceResponseOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) BulkInsertInstanceResourceResponse {
		return v.BulkInsertInstanceResource
	}).(BulkInsertInstanceResourceResponseOutput)
}

// Creation timestamp in RFC3339 text format.
func (o LookupZoneQueuedResourceResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o LookupZoneQueuedResourceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.Description }).(pulumi.StringOutput)
}

// Type of the resource. Always compute#queuedResource for QueuedResources.
func (o LookupZoneQueuedResourceResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o LookupZoneQueuedResourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Queuing parameters for the requested capacity.
func (o LookupZoneQueuedResourceResultOutput) QueuingPolicy() QueuingPolicyResponseOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) QueuingPolicyResponse { return v.QueuingPolicy }).(QueuingPolicyResponseOutput)
}

// [Output only] Server-defined URL for the resource.
func (o LookupZoneQueuedResourceResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o LookupZoneQueuedResourceResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// [Output only] High-level status of the request.
func (o LookupZoneQueuedResourceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.State }).(pulumi.StringOutput)
}

// [Output only] Result of queuing and provisioning based on deferred capacity.
func (o LookupZoneQueuedResourceResultOutput) Status() QueuedResourceStatusResponseOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) QueuedResourceStatusResponse { return v.Status }).(QueuedResourceStatusResponseOutput)
}

// URL of the zone where the resource resides. Only applicable for zonal resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o LookupZoneQueuedResourceResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneQueuedResourceResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneQueuedResourceResultOutput{})
}
