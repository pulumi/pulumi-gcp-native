// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-google-native/sdk/go/google"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "google-native:compute/alpha:Address":
		r = &Address{}
	case "google-native:compute/alpha:Autoscaler":
		r = &Autoscaler{}
	case "google-native:compute/alpha:BackendBucket":
		r = &BackendBucket{}
	case "google-native:compute/alpha:BackendBucketIamPolicy":
		r = &BackendBucketIamPolicy{}
	case "google-native:compute/alpha:BackendService":
		r = &BackendService{}
	case "google-native:compute/alpha:BackendServiceIamPolicy":
		r = &BackendServiceIamPolicy{}
	case "google-native:compute/alpha:Disk":
		r = &Disk{}
	case "google-native:compute/alpha:DiskIamPolicy":
		r = &DiskIamPolicy{}
	case "google-native:compute/alpha:ExternalVpnGateway":
		r = &ExternalVpnGateway{}
	case "google-native:compute/alpha:Firewall":
		r = &Firewall{}
	case "google-native:compute/alpha:FirewallPolicy":
		r = &FirewallPolicy{}
	case "google-native:compute/alpha:FirewallPolicyIamPolicy":
		r = &FirewallPolicyIamPolicy{}
	case "google-native:compute/alpha:ForwardingRule":
		r = &ForwardingRule{}
	case "google-native:compute/alpha:FutureReservation":
		r = &FutureReservation{}
	case "google-native:compute/alpha:GlobalAddress":
		r = &GlobalAddress{}
	case "google-native:compute/alpha:GlobalForwardingRule":
		r = &GlobalForwardingRule{}
	case "google-native:compute/alpha:GlobalNetworkEndpointGroup":
		r = &GlobalNetworkEndpointGroup{}
	case "google-native:compute/alpha:GlobalPublicDelegatedPrefix":
		r = &GlobalPublicDelegatedPrefix{}
	case "google-native:compute/alpha:HealthCheck":
		r = &HealthCheck{}
	case "google-native:compute/alpha:HttpHealthCheck":
		r = &HttpHealthCheck{}
	case "google-native:compute/alpha:HttpsHealthCheck":
		r = &HttpsHealthCheck{}
	case "google-native:compute/alpha:Image":
		r = &Image{}
	case "google-native:compute/alpha:ImageIamPolicy":
		r = &ImageIamPolicy{}
	case "google-native:compute/alpha:Instance":
		r = &Instance{}
	case "google-native:compute/alpha:InstanceGroup":
		r = &InstanceGroup{}
	case "google-native:compute/alpha:InstanceGroupManager":
		r = &InstanceGroupManager{}
	case "google-native:compute/alpha:InstanceIamPolicy":
		r = &InstanceIamPolicy{}
	case "google-native:compute/alpha:InstanceTemplate":
		r = &InstanceTemplate{}
	case "google-native:compute/alpha:InstanceTemplateIamPolicy":
		r = &InstanceTemplateIamPolicy{}
	case "google-native:compute/alpha:InstantSnapshot":
		r = &InstantSnapshot{}
	case "google-native:compute/alpha:InstantSnapshotIamPolicy":
		r = &InstantSnapshotIamPolicy{}
	case "google-native:compute/alpha:Interconnect":
		r = &Interconnect{}
	case "google-native:compute/alpha:InterconnectAttachment":
		r = &InterconnectAttachment{}
	case "google-native:compute/alpha:InterconnectAttachmentIamPolicy":
		r = &InterconnectAttachmentIamPolicy{}
	case "google-native:compute/alpha:InterconnectIamPolicy":
		r = &InterconnectIamPolicy{}
	case "google-native:compute/alpha:License":
		r = &License{}
	case "google-native:compute/alpha:LicenseCodeIamPolicy":
		r = &LicenseCodeIamPolicy{}
	case "google-native:compute/alpha:LicenseIamPolicy":
		r = &LicenseIamPolicy{}
	case "google-native:compute/alpha:MachineImage":
		r = &MachineImage{}
	case "google-native:compute/alpha:MachineImageIamPolicy":
		r = &MachineImageIamPolicy{}
	case "google-native:compute/alpha:Network":
		r = &Network{}
	case "google-native:compute/alpha:NetworkEdgeSecurityService":
		r = &NetworkEdgeSecurityService{}
	case "google-native:compute/alpha:NetworkEndpointGroup":
		r = &NetworkEndpointGroup{}
	case "google-native:compute/alpha:NetworkFirewallPolicy":
		r = &NetworkFirewallPolicy{}
	case "google-native:compute/alpha:NetworkFirewallPolicyIamPolicy":
		r = &NetworkFirewallPolicyIamPolicy{}
	case "google-native:compute/alpha:NodeGroup":
		r = &NodeGroup{}
	case "google-native:compute/alpha:NodeGroupIamPolicy":
		r = &NodeGroupIamPolicy{}
	case "google-native:compute/alpha:NodeTemplate":
		r = &NodeTemplate{}
	case "google-native:compute/alpha:NodeTemplateIamPolicy":
		r = &NodeTemplateIamPolicy{}
	case "google-native:compute/alpha:OrganizationSecurityPolicy":
		r = &OrganizationSecurityPolicy{}
	case "google-native:compute/alpha:PacketMirroring":
		r = &PacketMirroring{}
	case "google-native:compute/alpha:PublicAdvertisedPrefix":
		r = &PublicAdvertisedPrefix{}
	case "google-native:compute/alpha:PublicDelegatedPrefix":
		r = &PublicDelegatedPrefix{}
	case "google-native:compute/alpha:RegionAutoscaler":
		r = &RegionAutoscaler{}
	case "google-native:compute/alpha:RegionBackendService":
		r = &RegionBackendService{}
	case "google-native:compute/alpha:RegionBackendServiceIamPolicy":
		r = &RegionBackendServiceIamPolicy{}
	case "google-native:compute/alpha:RegionCommitment":
		r = &RegionCommitment{}
	case "google-native:compute/alpha:RegionDisk":
		r = &RegionDisk{}
	case "google-native:compute/alpha:RegionDiskIamPolicy":
		r = &RegionDiskIamPolicy{}
	case "google-native:compute/alpha:RegionHealthCheck":
		r = &RegionHealthCheck{}
	case "google-native:compute/alpha:RegionHealthCheckService":
		r = &RegionHealthCheckService{}
	case "google-native:compute/alpha:RegionInstanceGroupManager":
		r = &RegionInstanceGroupManager{}
	case "google-native:compute/alpha:RegionInstantSnapshot":
		r = &RegionInstantSnapshot{}
	case "google-native:compute/alpha:RegionInstantSnapshotIamPolicy":
		r = &RegionInstantSnapshotIamPolicy{}
	case "google-native:compute/alpha:RegionNetwork":
		r = &RegionNetwork{}
	case "google-native:compute/alpha:RegionNetworkEndpointGroup":
		r = &RegionNetworkEndpointGroup{}
	case "google-native:compute/alpha:RegionNetworkFirewallPolicy":
		r = &RegionNetworkFirewallPolicy{}
	case "google-native:compute/alpha:RegionNetworkFirewallPolicyIamPolicy":
		r = &RegionNetworkFirewallPolicyIamPolicy{}
	case "google-native:compute/alpha:RegionNetworkIamPolicy":
		r = &RegionNetworkIamPolicy{}
	case "google-native:compute/alpha:RegionNotificationEndpoint":
		r = &RegionNotificationEndpoint{}
	case "google-native:compute/alpha:RegionSecurityPolicy":
		r = &RegionSecurityPolicy{}
	case "google-native:compute/alpha:RegionSslCertificate":
		r = &RegionSslCertificate{}
	case "google-native:compute/alpha:RegionSslPolicy":
		r = &RegionSslPolicy{}
	case "google-native:compute/alpha:RegionTargetHttpProxy":
		r = &RegionTargetHttpProxy{}
	case "google-native:compute/alpha:RegionTargetHttpsProxy":
		r = &RegionTargetHttpsProxy{}
	case "google-native:compute/alpha:RegionTargetTcpProxy":
		r = &RegionTargetTcpProxy{}
	case "google-native:compute/alpha:RegionUrlMap":
		r = &RegionUrlMap{}
	case "google-native:compute/alpha:Reservation":
		r = &Reservation{}
	case "google-native:compute/alpha:ReservationIamPolicy":
		r = &ReservationIamPolicy{}
	case "google-native:compute/alpha:ResourcePolicy":
		r = &ResourcePolicy{}
	case "google-native:compute/alpha:ResourcePolicyIamPolicy":
		r = &ResourcePolicyIamPolicy{}
	case "google-native:compute/alpha:Route":
		r = &Route{}
	case "google-native:compute/alpha:Router":
		r = &Router{}
	case "google-native:compute/alpha:SecurityPolicy":
		r = &SecurityPolicy{}
	case "google-native:compute/alpha:ServiceAttachment":
		r = &ServiceAttachment{}
	case "google-native:compute/alpha:ServiceAttachmentIamPolicy":
		r = &ServiceAttachmentIamPolicy{}
	case "google-native:compute/alpha:Snapshot":
		r = &Snapshot{}
	case "google-native:compute/alpha:SnapshotIamPolicy":
		r = &SnapshotIamPolicy{}
	case "google-native:compute/alpha:SslCertificate":
		r = &SslCertificate{}
	case "google-native:compute/alpha:SslPolicy":
		r = &SslPolicy{}
	case "google-native:compute/alpha:Subnetwork":
		r = &Subnetwork{}
	case "google-native:compute/alpha:SubnetworkIamPolicy":
		r = &SubnetworkIamPolicy{}
	case "google-native:compute/alpha:TargetGrpcProxy":
		r = &TargetGrpcProxy{}
	case "google-native:compute/alpha:TargetHttpProxy":
		r = &TargetHttpProxy{}
	case "google-native:compute/alpha:TargetHttpsProxy":
		r = &TargetHttpsProxy{}
	case "google-native:compute/alpha:TargetInstance":
		r = &TargetInstance{}
	case "google-native:compute/alpha:TargetPool":
		r = &TargetPool{}
	case "google-native:compute/alpha:TargetSslProxy":
		r = &TargetSslProxy{}
	case "google-native:compute/alpha:TargetTcpProxy":
		r = &TargetTcpProxy{}
	case "google-native:compute/alpha:TargetVpnGateway":
		r = &TargetVpnGateway{}
	case "google-native:compute/alpha:UrlMap":
		r = &UrlMap{}
	case "google-native:compute/alpha:VpnGateway":
		r = &VpnGateway{}
	case "google-native:compute/alpha:VpnTunnel":
		r = &VpnTunnel{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := google.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"google-native",
		"compute/alpha",
		&module{version},
	)
}
