// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new Future Reservation.
type FutureReservation struct {
	pulumi.CustomResourceState

	// The creation timestamp for this future reservation in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the future reservation.
	Description pulumi.StringOutput `pulumi:"description"`
	Kind        pulumi.StringOutput `pulumi:"kind"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`
	// Server-defined fully-qualified URL for this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
	// List of Projects/Folders to share with.
	ShareSettings ShareSettingsResponseOutput `pulumi:"shareSettings"`
	// Future Reservation configuration to indicate instance properties and total count.
	SpecificSkuProperties FutureReservationSpecificSKUPropertiesResponseOutput `pulumi:"specificSkuProperties"`
	// [Output only] Status of the Future Reservation
	Status FutureReservationStatusResponseOutput `pulumi:"status"`
	// Time window for this Future Reservation.
	TimeWindow FutureReservationTimeWindowResponseOutput `pulumi:"timeWindow"`
	// URL of the Zone where this future reservation resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewFutureReservation registers a new resource with the given unique name, arguments, and options.
func NewFutureReservation(ctx *pulumi.Context,
	name string, args *FutureReservationArgs, opts ...pulumi.ResourceOption) (*FutureReservation, error) {
	if args == nil {
		args = &FutureReservationArgs{}
	}

	var resource FutureReservation
	err := ctx.RegisterResource("google-native:compute/alpha:FutureReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFutureReservation gets an existing FutureReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFutureReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FutureReservationState, opts ...pulumi.ResourceOption) (*FutureReservation, error) {
	var resource FutureReservation
	err := ctx.ReadResource("google-native:compute/alpha:FutureReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FutureReservation resources.
type futureReservationState struct {
}

type FutureReservationState struct {
}

func (FutureReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*futureReservationState)(nil)).Elem()
}

type futureReservationArgs struct {
	// An optional description of this resource. Provide this property when you create the future reservation.
	Description *string `pulumi:"description"`
	Kind        *string `pulumi:"kind"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
	NamePrefix *string `pulumi:"namePrefix"`
	Project    *string `pulumi:"project"`
	RequestId  *string `pulumi:"requestId"`
	// List of Projects/Folders to share with.
	ShareSettings *ShareSettings `pulumi:"shareSettings"`
	// Future Reservation configuration to indicate instance properties and total count.
	SpecificSkuProperties *FutureReservationSpecificSKUProperties `pulumi:"specificSkuProperties"`
	// Time window for this Future Reservation.
	TimeWindow *FutureReservationTimeWindow `pulumi:"timeWindow"`
	Zone       *string                      `pulumi:"zone"`
}

// The set of arguments for constructing a FutureReservation resource.
type FutureReservationArgs struct {
	// An optional description of this resource. Provide this property when you create the future reservation.
	Description pulumi.StringPtrInput
	Kind        pulumi.StringPtrInput
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
	NamePrefix pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
	RequestId  pulumi.StringPtrInput
	// List of Projects/Folders to share with.
	ShareSettings ShareSettingsPtrInput
	// Future Reservation configuration to indicate instance properties and total count.
	SpecificSkuProperties FutureReservationSpecificSKUPropertiesPtrInput
	// Time window for this Future Reservation.
	TimeWindow FutureReservationTimeWindowPtrInput
	Zone       pulumi.StringPtrInput
}

func (FutureReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*futureReservationArgs)(nil)).Elem()
}

type FutureReservationInput interface {
	pulumi.Input

	ToFutureReservationOutput() FutureReservationOutput
	ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput
}

func (*FutureReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**FutureReservation)(nil)).Elem()
}

func (i *FutureReservation) ToFutureReservationOutput() FutureReservationOutput {
	return i.ToFutureReservationOutputWithContext(context.Background())
}

func (i *FutureReservation) ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FutureReservationOutput)
}

type FutureReservationOutput struct{ *pulumi.OutputState }

func (FutureReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FutureReservation)(nil)).Elem()
}

func (o FutureReservationOutput) ToFutureReservationOutput() FutureReservationOutput {
	return o
}

func (o FutureReservationOutput) ToFutureReservationOutputWithContext(ctx context.Context) FutureReservationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FutureReservationInput)(nil)).Elem(), &FutureReservation{})
	pulumi.RegisterOutputType(FutureReservationOutput{})
}
