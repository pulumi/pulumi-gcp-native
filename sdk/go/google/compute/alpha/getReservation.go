// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves information about the specified reservation.
func LookupReservation(ctx *pulumi.Context, args *LookupReservationArgs, opts ...pulumi.InvokeOption) (*LookupReservationResult, error) {
	var rv LookupReservationResult
	err := ctx.Invoke("google-native:compute/alpha:getReservation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupReservationArgs struct {
	Project     *string `pulumi:"project"`
	Reservation string  `pulumi:"reservation"`
	Zone        string  `pulumi:"zone"`
}

type LookupReservationResult struct {
	// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
	Commitment string `pulumi:"commitment"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description string `pulumi:"description"`
	// Type of the resource. Always compute#reservations for reservations.
	Kind string `pulumi:"kind"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name string `pulumi:"name"`
	// Reserved for future use.
	SatisfiesPzs bool `pulumi:"satisfiesPzs"`
	// Server-defined fully-qualified URL for this resource.
	SelfLink string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId string `pulumi:"selfLinkWithId"`
	// Share-settings for shared-reservation
	ShareSettings ShareSettingsResponse `pulumi:"shareSettings"`
	// Reservation for instances with specific machine shapes.
	SpecificReservation AllocationSpecificSKUReservationResponse `pulumi:"specificReservation"`
	// Indicates whether the reservation can be consumed by VMs with affinity for "any" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.
	SpecificReservationRequired bool `pulumi:"specificReservationRequired"`
	// The status of the reservation.
	Status string `pulumi:"status"`
	// Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment.
	Zone string `pulumi:"zone"`
}

func LookupReservationOutput(ctx *pulumi.Context, args LookupReservationOutputArgs, opts ...pulumi.InvokeOption) LookupReservationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReservationResult, error) {
			args := v.(LookupReservationArgs)
			r, err := LookupReservation(ctx, &args, opts...)
			var s LookupReservationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReservationResultOutput)
}

type LookupReservationOutputArgs struct {
	Project     pulumi.StringPtrInput `pulumi:"project"`
	Reservation pulumi.StringInput    `pulumi:"reservation"`
	Zone        pulumi.StringInput    `pulumi:"zone"`
}

func (LookupReservationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservationArgs)(nil)).Elem()
}

type LookupReservationResultOutput struct{ *pulumi.OutputState }

func (LookupReservationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservationResult)(nil)).Elem()
}

func (o LookupReservationResultOutput) ToLookupReservationResultOutput() LookupReservationResultOutput {
	return o
}

func (o LookupReservationResultOutput) ToLookupReservationResultOutputWithContext(ctx context.Context) LookupReservationResultOutput {
	return o
}

// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
func (o LookupReservationResultOutput) Commitment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Commitment }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o LookupReservationResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o LookupReservationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Type of the resource. Always compute#reservations for reservations.
func (o LookupReservationResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Kind }).(pulumi.StringOutput)
}

// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o LookupReservationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Reserved for future use.
func (o LookupReservationResultOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReservationResult) bool { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Server-defined fully-qualified URL for this resource.
func (o LookupReservationResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o LookupReservationResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// Share-settings for shared-reservation
func (o LookupReservationResultOutput) ShareSettings() ShareSettingsResponseOutput {
	return o.ApplyT(func(v LookupReservationResult) ShareSettingsResponse { return v.ShareSettings }).(ShareSettingsResponseOutput)
}

// Reservation for instances with specific machine shapes.
func (o LookupReservationResultOutput) SpecificReservation() AllocationSpecificSKUReservationResponseOutput {
	return o.ApplyT(func(v LookupReservationResult) AllocationSpecificSKUReservationResponse { return v.SpecificReservation }).(AllocationSpecificSKUReservationResponseOutput)
}

// Indicates whether the reservation can be consumed by VMs with affinity for "any" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.
func (o LookupReservationResultOutput) SpecificReservationRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReservationResult) bool { return v.SpecificReservationRequired }).(pulumi.BoolOutput)
}

// The status of the reservation.
func (o LookupReservationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Status }).(pulumi.StringOutput)
}

// Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment.
func (o LookupReservationResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReservationResultOutput{})
}
