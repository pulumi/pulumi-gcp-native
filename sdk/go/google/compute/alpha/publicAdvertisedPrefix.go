// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a PublicAdvertisedPrefix in the specified project using the parameters that are included in the request.
type PublicAdvertisedPrefix struct {
	pulumi.CustomResourceState
}

// NewPublicAdvertisedPrefix registers a new resource with the given unique name, arguments, and options.
func NewPublicAdvertisedPrefix(ctx *pulumi.Context,
	name string, args *PublicAdvertisedPrefixArgs, opts ...pulumi.ResourceOption) (*PublicAdvertisedPrefix, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.PublicAdvertisedPrefix == nil {
		return nil, errors.New("invalid value for required argument 'PublicAdvertisedPrefix'")
	}
	var resource PublicAdvertisedPrefix
	err := ctx.RegisterResource("google-cloud:compute/alpha:PublicAdvertisedPrefix", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicAdvertisedPrefix gets an existing PublicAdvertisedPrefix resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicAdvertisedPrefix(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicAdvertisedPrefixState, opts ...pulumi.ResourceOption) (*PublicAdvertisedPrefix, error) {
	var resource PublicAdvertisedPrefix
	err := ctx.ReadResource("google-cloud:compute/alpha:PublicAdvertisedPrefix", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicAdvertisedPrefix resources.
type publicAdvertisedPrefixState struct {
}

type PublicAdvertisedPrefixState struct {
}

func (PublicAdvertisedPrefixState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicAdvertisedPrefixState)(nil)).Elem()
}

type publicAdvertisedPrefixArgs struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp *string `pulumi:"dnsVerificationIp"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be provided in order to update the PublicAdvertisedPrefix, otherwise the request will fail with error 412 conditionNotMet.
	//
	// To see the latest fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
	Fingerprint *string `pulumi:"fingerprint"`
	// [Output Only] The unique identifier for the resource type. The server generates this identifier.
	Id *string `pulumi:"id"`
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes.
	Kind *string `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name                   *string `pulumi:"name"`
	Project                string  `pulumi:"project"`
	PublicAdvertisedPrefix string  `pulumi:"publicAdvertisedPrefix"`
	// [Output Only] The list of public delegated prefixes that exist for this public advertised prefix.
	PublicDelegatedPrefixs []PublicAdvertisedPrefixPublicDelegatedPrefix `pulumi:"publicDelegatedPrefixs"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// [Output Only] Server-defined URL with id for the resource.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
	// [Output Only] The shared secret to be used for reverse DNS verification.
	SharedSecret *string `pulumi:"sharedSecret"`
	// The status of the public advertised prefix.
	Status *string `pulumi:"status"`
}

// The set of arguments for constructing a PublicAdvertisedPrefix resource.
type PublicAdvertisedPrefixArgs struct {
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp pulumi.StringPtrInput
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be provided in order to update the PublicAdvertisedPrefix, otherwise the request will fail with error 412 conditionNotMet.
	//
	// To see the latest fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
	Fingerprint pulumi.StringPtrInput
	// [Output Only] The unique identifier for the resource type. The server generates this identifier.
	Id pulumi.StringPtrInput
	// The IPv4 address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange pulumi.StringPtrInput
	// [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes.
	Kind pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name                   pulumi.StringPtrInput
	Project                pulumi.StringInput
	PublicAdvertisedPrefix pulumi.StringInput
	// [Output Only] The list of public delegated prefixes that exist for this public advertised prefix.
	PublicDelegatedPrefixs PublicAdvertisedPrefixPublicDelegatedPrefixArrayInput
	// [Output Only] Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// [Output Only] Server-defined URL with id for the resource.
	SelfLinkWithId pulumi.StringPtrInput
	// [Output Only] The shared secret to be used for reverse DNS verification.
	SharedSecret pulumi.StringPtrInput
	// The status of the public advertised prefix.
	Status pulumi.StringPtrInput
}

func (PublicAdvertisedPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicAdvertisedPrefixArgs)(nil)).Elem()
}

type PublicAdvertisedPrefixInput interface {
	pulumi.Input

	ToPublicAdvertisedPrefixOutput() PublicAdvertisedPrefixOutput
	ToPublicAdvertisedPrefixOutputWithContext(ctx context.Context) PublicAdvertisedPrefixOutput
}

func (*PublicAdvertisedPrefix) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefix)(nil))
}

func (i *PublicAdvertisedPrefix) ToPublicAdvertisedPrefixOutput() PublicAdvertisedPrefixOutput {
	return i.ToPublicAdvertisedPrefixOutputWithContext(context.Background())
}

func (i *PublicAdvertisedPrefix) ToPublicAdvertisedPrefixOutputWithContext(ctx context.Context) PublicAdvertisedPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicAdvertisedPrefixOutput)
}

type PublicAdvertisedPrefixOutput struct {
	*pulumi.OutputState
}

func (PublicAdvertisedPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicAdvertisedPrefix)(nil))
}

func (o PublicAdvertisedPrefixOutput) ToPublicAdvertisedPrefixOutput() PublicAdvertisedPrefixOutput {
	return o
}

func (o PublicAdvertisedPrefixOutput) ToPublicAdvertisedPrefixOutputWithContext(ctx context.Context) PublicAdvertisedPrefixOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PublicAdvertisedPrefixOutput{})
}
