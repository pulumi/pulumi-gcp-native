// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the specified InPlaceSnapshot resource in the specified zone.
func LookupZoneInPlaceSnapshot(ctx *pulumi.Context, args *LookupZoneInPlaceSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupZoneInPlaceSnapshotResult, error) {
	var rv LookupZoneInPlaceSnapshotResult
	err := ctx.Invoke("google-native:compute/alpha:getZoneInPlaceSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupZoneInPlaceSnapshotArgs struct {
	InPlaceSnapshot string  `pulumi:"inPlaceSnapshot"`
	Project         *string `pulumi:"project"`
	Zone            string  `pulumi:"zone"`
}

type LookupZoneInPlaceSnapshotResult struct {
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description string `pulumi:"description"`
	// Size of the source disk, specified in GB.
	DiskSizeGb string `pulumi:"diskSizeGb"`
	// Specifies to create an application consistent in-place snapshot by informing the OS to prepare for the snapshot process. Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush bool `pulumi:"guestFlush"`
	// Type of the resource. Always compute#inPlaceSnapshot for InPlaceSnapshot resources.
	Kind string `pulumi:"kind"`
	// A fingerprint for the labels being applied to this InPlaceSnapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a InPlaceSnapshot.
	LabelFingerprint string `pulumi:"labelFingerprint"`
	// Labels to apply to this InPlaceSnapshot. These can be later modified by the setLabels method. Label values may be empty.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name string `pulumi:"name"`
	// URL of the region where the in-place snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region string `pulumi:"region"`
	// Server-defined URL for the resource.
	SelfLink string `pulumi:"selfLink"`
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId string `pulumi:"selfLinkWithId"`
	// URL of the source disk used to create this in-place snapshot. Note that the source disk must be in the same zone/region as the in-place snapshot to be created. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
	SourceDisk string `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this InPlaceSnapshot. This value may be used to determine whether the InPlaceSnapshot was taken from the current or a previous instance of a given disk name.
	SourceDiskId string `pulumi:"sourceDiskId"`
	// The status of the inPlaceSnapshot. This can be CREATING, DELETING, FAILED, or READY.
	Status string `pulumi:"status"`
	// URL of the zone where the in-place snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Zone string `pulumi:"zone"`
}

func LookupZoneInPlaceSnapshotOutput(ctx *pulumi.Context, args LookupZoneInPlaceSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupZoneInPlaceSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneInPlaceSnapshotResult, error) {
			args := v.(LookupZoneInPlaceSnapshotArgs)
			r, err := LookupZoneInPlaceSnapshot(ctx, &args, opts...)
			return *r, err
		}).(LookupZoneInPlaceSnapshotResultOutput)
}

type LookupZoneInPlaceSnapshotOutputArgs struct {
	InPlaceSnapshot pulumi.StringInput    `pulumi:"inPlaceSnapshot"`
	Project         pulumi.StringPtrInput `pulumi:"project"`
	Zone            pulumi.StringInput    `pulumi:"zone"`
}

func (LookupZoneInPlaceSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneInPlaceSnapshotArgs)(nil)).Elem()
}

type LookupZoneInPlaceSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupZoneInPlaceSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneInPlaceSnapshotResult)(nil)).Elem()
}

func (o LookupZoneInPlaceSnapshotResultOutput) ToLookupZoneInPlaceSnapshotResultOutput() LookupZoneInPlaceSnapshotResultOutput {
	return o
}

func (o LookupZoneInPlaceSnapshotResultOutput) ToLookupZoneInPlaceSnapshotResultOutputWithContext(ctx context.Context) LookupZoneInPlaceSnapshotResultOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o LookupZoneInPlaceSnapshotResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o LookupZoneInPlaceSnapshotResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Description }).(pulumi.StringOutput)
}

// Size of the source disk, specified in GB.
func (o LookupZoneInPlaceSnapshotResultOutput) DiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.DiskSizeGb }).(pulumi.StringOutput)
}

// Specifies to create an application consistent in-place snapshot by informing the OS to prepare for the snapshot process. Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
func (o LookupZoneInPlaceSnapshotResultOutput) GuestFlush() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) bool { return v.GuestFlush }).(pulumi.BoolOutput)
}

// Type of the resource. Always compute#inPlaceSnapshot for InPlaceSnapshot resources.
func (o LookupZoneInPlaceSnapshotResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Kind }).(pulumi.StringOutput)
}

// A fingerprint for the labels being applied to this InPlaceSnapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a InPlaceSnapshot.
func (o LookupZoneInPlaceSnapshotResultOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels to apply to this InPlaceSnapshot. These can be later modified by the setLabels method. Label values may be empty.
func (o LookupZoneInPlaceSnapshotResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o LookupZoneInPlaceSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

// URL of the region where the in-place snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o LookupZoneInPlaceSnapshotResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Region }).(pulumi.StringOutput)
}

// Server-defined URL for the resource.
func (o LookupZoneInPlaceSnapshotResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource's resource id.
func (o LookupZoneInPlaceSnapshotResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// URL of the source disk used to create this in-place snapshot. Note that the source disk must be in the same zone/region as the in-place snapshot to be created. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
func (o LookupZoneInPlaceSnapshotResultOutput) SourceDisk() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.SourceDisk }).(pulumi.StringOutput)
}

// The ID value of the disk used to create this InPlaceSnapshot. This value may be used to determine whether the InPlaceSnapshot was taken from the current or a previous instance of a given disk name.
func (o LookupZoneInPlaceSnapshotResultOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.SourceDiskId }).(pulumi.StringOutput)
}

// The status of the inPlaceSnapshot. This can be CREATING, DELETING, FAILED, or READY.
func (o LookupZoneInPlaceSnapshotResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Status }).(pulumi.StringOutput)
}

// URL of the zone where the in-place snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o LookupZoneInPlaceSnapshotResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneInPlaceSnapshotResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneInPlaceSnapshotResultOutput{})
}
