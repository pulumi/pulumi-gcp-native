// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new policy in the specified project and region using the data included in the request.
type RegionSslPolicy struct {
	pulumi.CustomResourceState

	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
	CustomFeatures pulumi.StringArrayOutput `pulumi:"customFeatures"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// The list of features enabled in the SSL policy.
	EnabledFeatures pulumi.StringArrayOutput `pulumi:"enabledFeatures"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// [Output only] Type of the resource. Always compute#sslPolicyfor SSL policies.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
	MinTlsVersion pulumi.StringOutput `pulumi:"minTlsVersion"`
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
	Profile pulumi.StringOutput `pulumi:"profile"`
	Project pulumi.StringOutput `pulumi:"project"`
	Region  pulumi.StringOutput `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
	// Security settings for the proxy. This field is only applicable to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	TlsSettings ServerTlsSettingsResponseOutput `pulumi:"tlsSettings"`
	// If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages.
	Warnings RegionSslPolicyWarningsItemResponseArrayOutput `pulumi:"warnings"`
}

// NewRegionSslPolicy registers a new resource with the given unique name, arguments, and options.
func NewRegionSslPolicy(ctx *pulumi.Context,
	name string, args *RegionSslPolicyArgs, opts ...pulumi.ResourceOption) (*RegionSslPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
		"region",
	})
	opts = append(opts, replaceOnChanges)
	var resource RegionSslPolicy
	err := ctx.RegisterResource("google-native:compute/alpha:RegionSslPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionSslPolicy gets an existing RegionSslPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionSslPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionSslPolicyState, opts ...pulumi.ResourceOption) (*RegionSslPolicy, error) {
	var resource RegionSslPolicy
	err := ctx.ReadResource("google-native:compute/alpha:RegionSslPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionSslPolicy resources.
type regionSslPolicyState struct {
}

type RegionSslPolicyState struct {
}

func (RegionSslPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSslPolicyState)(nil)).Elem()
}

type regionSslPolicyArgs struct {
	// A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
	CustomFeatures []string `pulumi:"customFeatures"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
	MinTlsVersion *RegionSslPolicyMinTlsVersion `pulumi:"minTlsVersion"`
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
	Profile *RegionSslPolicyProfile `pulumi:"profile"`
	Project *string                 `pulumi:"project"`
	Region  string                  `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Security settings for the proxy. This field is only applicable to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	TlsSettings *ServerTlsSettings `pulumi:"tlsSettings"`
}

// The set of arguments for constructing a RegionSslPolicy resource.
type RegionSslPolicyArgs struct {
	// A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
	CustomFeatures pulumi.StringArrayInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
	MinTlsVersion RegionSslPolicyMinTlsVersionPtrInput
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
	Profile RegionSslPolicyProfilePtrInput
	Project pulumi.StringPtrInput
	Region  pulumi.StringInput
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Security settings for the proxy. This field is only applicable to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	TlsSettings ServerTlsSettingsPtrInput
}

func (RegionSslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSslPolicyArgs)(nil)).Elem()
}

type RegionSslPolicyInput interface {
	pulumi.Input

	ToRegionSslPolicyOutput() RegionSslPolicyOutput
	ToRegionSslPolicyOutputWithContext(ctx context.Context) RegionSslPolicyOutput
}

func (*RegionSslPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSslPolicy)(nil)).Elem()
}

func (i *RegionSslPolicy) ToRegionSslPolicyOutput() RegionSslPolicyOutput {
	return i.ToRegionSslPolicyOutputWithContext(context.Background())
}

func (i *RegionSslPolicy) ToRegionSslPolicyOutputWithContext(ctx context.Context) RegionSslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionSslPolicyOutput)
}

type RegionSslPolicyOutput struct{ *pulumi.OutputState }

func (RegionSslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionSslPolicy)(nil)).Elem()
}

func (o RegionSslPolicyOutput) ToRegionSslPolicyOutput() RegionSslPolicyOutput {
	return o
}

func (o RegionSslPolicyOutput) ToRegionSslPolicyOutputWithContext(ctx context.Context) RegionSslPolicyOutput {
	return o
}

// Creation timestamp in RFC3339 text format.
func (o RegionSslPolicyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
func (o RegionSslPolicyOutput) CustomFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringArrayOutput { return v.CustomFeatures }).(pulumi.StringArrayOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o RegionSslPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The list of features enabled in the SSL policy.
func (o RegionSslPolicyOutput) EnabledFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringArrayOutput { return v.EnabledFeatures }).(pulumi.StringArrayOutput)
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
func (o RegionSslPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// [Output only] Type of the resource. Always compute#sslPolicyfor SSL policies.
func (o RegionSslPolicyOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
func (o RegionSslPolicyOutput) MinTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.MinTlsVersion }).(pulumi.StringOutput)
}

// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o RegionSslPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
func (o RegionSslPolicyOutput) Profile() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Profile }).(pulumi.StringOutput)
}

func (o RegionSslPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RegionSslPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
func (o RegionSslPolicyOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Server-defined URL for the resource.
func (o RegionSslPolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o RegionSslPolicyOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionSslPolicy) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// Security settings for the proxy. This field is only applicable to a global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED.
func (o RegionSslPolicyOutput) TlsSettings() ServerTlsSettingsResponseOutput {
	return o.ApplyT(func(v *RegionSslPolicy) ServerTlsSettingsResponseOutput { return v.TlsSettings }).(ServerTlsSettingsResponseOutput)
}

// If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages.
func (o RegionSslPolicyOutput) Warnings() RegionSslPolicyWarningsItemResponseArrayOutput {
	return o.ApplyT(func(v *RegionSslPolicy) RegionSslPolicyWarningsItemResponseArrayOutput { return v.Warnings }).(RegionSslPolicyWarningsItemResponseArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionSslPolicyInput)(nil)).Elem(), &RegionSslPolicy{})
	pulumi.RegisterOutputType(RegionSslPolicyOutput{})
}
