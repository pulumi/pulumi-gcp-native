// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alpha

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates an autoscaler in the specified project using the data included in the request.
type Autoscaler struct {
	pulumi.CustomResourceState
}

// NewAutoscaler registers a new resource with the given unique name, arguments, and options.
func NewAutoscaler(ctx *pulumi.Context,
	name string, args *AutoscalerArgs, opts ...pulumi.ResourceOption) (*Autoscaler, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Autoscaler == nil {
		return nil, errors.New("invalid value for required argument 'Autoscaler'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource Autoscaler
	err := ctx.RegisterResource("google-cloud:compute/alpha:Autoscaler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoscaler gets an existing Autoscaler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoscaler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoscalerState, opts ...pulumi.ResourceOption) (*Autoscaler, error) {
	var resource Autoscaler
	err := ctx.ReadResource("google-cloud:compute/alpha:Autoscaler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Autoscaler resources.
type autoscalerState struct {
}

type AutoscalerState struct {
}

func (AutoscalerState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalerState)(nil)).Elem()
}

type autoscalerArgs struct {
	Autoscaler string `pulumi:"autoscaler"`
	// The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
	//
	// If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy *AutoscalingPolicy `pulumi:"autoscalingPolicy"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	Id *string `pulumi:"id"`
	// [Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
	Kind *string `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project string  `pulumi:"project"`
	// [Output Only] Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.
	RecommendedSize *int `pulumi:"recommendedSize"`
	// [Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
	Region *string `pulumi:"region"`
	// [Output Only] Status information of existing scaling schedules.
	ScalingScheduleStatus map[string]string `pulumi:"scalingScheduleStatus"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// [Output Only] Server-defined URL for this resource with the resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
	// [Output Only] The status of the autoscaler configuration. Current set of possible values:
	// - PENDING: Autoscaler backend hasn't read new/updated configuration.
	// - DELETING: Configuration is being deleted.
	// - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field.
	// - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field.  New values might be added in the future.
	Status *string `pulumi:"status"`
	// [Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
	StatusDetails []AutoscalerStatusDetails `pulumi:"statusDetails"`
	// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
	Target *string `pulumi:"target"`
	// [Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a Autoscaler resource.
type AutoscalerArgs struct {
	Autoscaler pulumi.StringInput
	// The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.
	//
	// If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy AutoscalingPolicyPtrInput
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	Id pulumi.StringPtrInput
	// [Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
	Kind pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringInput
	// [Output Only] Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.
	RecommendedSize pulumi.IntPtrInput
	// [Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
	Region pulumi.StringPtrInput
	// [Output Only] Status information of existing scaling schedules.
	ScalingScheduleStatus pulumi.StringMapInput
	// [Output Only] Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// [Output Only] Server-defined URL for this resource with the resource id.
	SelfLinkWithId pulumi.StringPtrInput
	// [Output Only] The status of the autoscaler configuration. Current set of possible values:
	// - PENDING: Autoscaler backend hasn't read new/updated configuration.
	// - DELETING: Configuration is being deleted.
	// - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field.
	// - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field.  New values might be added in the future.
	Status pulumi.StringPtrInput
	// [Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
	StatusDetails AutoscalerStatusDetailsArrayInput
	// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
	Target pulumi.StringPtrInput
	// [Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
	Zone pulumi.StringInput
}

func (AutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoscalerArgs)(nil)).Elem()
}

type AutoscalerInput interface {
	pulumi.Input

	ToAutoscalerOutput() AutoscalerOutput
	ToAutoscalerOutputWithContext(ctx context.Context) AutoscalerOutput
}

func (*Autoscaler) ElementType() reflect.Type {
	return reflect.TypeOf((*Autoscaler)(nil))
}

func (i *Autoscaler) ToAutoscalerOutput() AutoscalerOutput {
	return i.ToAutoscalerOutputWithContext(context.Background())
}

func (i *Autoscaler) ToAutoscalerOutputWithContext(ctx context.Context) AutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerOutput)
}

type AutoscalerOutput struct {
	*pulumi.OutputState
}

func (AutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Autoscaler)(nil))
}

func (o AutoscalerOutput) ToAutoscalerOutput() AutoscalerOutput {
	return o
}

func (o AutoscalerOutput) ToAutoscalerOutputWithContext(ctx context.Context) AutoscalerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AutoscalerOutput{})
}
