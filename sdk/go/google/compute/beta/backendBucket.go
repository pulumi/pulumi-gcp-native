// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a BackendBucket resource in the specified project using the data included in the request.
type BackendBucket struct {
	pulumi.CustomResourceState

	// Cloud Storage bucket name.
	BucketName pulumi.StringOutput `pulumi:"bucketName"`
	// Cloud CDN configuration for this BackendBucket.
	CdnPolicy BackendBucketCdnPolicyResponseOutput `pulumi:"cdnPolicy"`
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
	CompressionMode pulumi.StringOutput `pulumi:"compressionMode"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders pulumi.StringArrayOutput `pulumi:"customResponseHeaders"`
	// An optional textual description of the resource; provided by the client when the resource is created.
	Description pulumi.StringOutput `pulumi:"description"`
	// The resource URL for the edge security policy associated with this backend bucket.
	EdgeSecurityPolicy pulumi.StringOutput `pulumi:"edgeSecurityPolicy"`
	// If true, enable Cloud CDN for this BackendBucket.
	EnableCdn pulumi.BoolOutput `pulumi:"enableCdn"`
	// Type of the resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
}

// NewBackendBucket registers a new resource with the given unique name, arguments, and options.
func NewBackendBucket(ctx *pulumi.Context,
	name string, args *BackendBucketArgs, opts ...pulumi.ResourceOption) (*BackendBucket, error) {
	if args == nil {
		args = &BackendBucketArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BackendBucket
	err := ctx.RegisterResource("google-native:compute/beta:BackendBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackendBucket gets an existing BackendBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackendBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackendBucketState, opts ...pulumi.ResourceOption) (*BackendBucket, error) {
	var resource BackendBucket
	err := ctx.ReadResource("google-native:compute/beta:BackendBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackendBucket resources.
type backendBucketState struct {
}

type BackendBucketState struct {
}

func (BackendBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*backendBucketState)(nil)).Elem()
}

type backendBucketArgs struct {
	// Cloud Storage bucket name.
	BucketName *string `pulumi:"bucketName"`
	// Cloud CDN configuration for this BackendBucket.
	CdnPolicy *BackendBucketCdnPolicy `pulumi:"cdnPolicy"`
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
	CompressionMode *BackendBucketCompressionMode `pulumi:"compressionMode"`
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders []string `pulumi:"customResponseHeaders"`
	// An optional textual description of the resource; provided by the client when the resource is created.
	Description *string `pulumi:"description"`
	// If true, enable Cloud CDN for this BackendBucket.
	EnableCdn *bool `pulumi:"enableCdn"`
	// Type of the resource.
	Kind *string `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a BackendBucket resource.
type BackendBucketArgs struct {
	// Cloud Storage bucket name.
	BucketName pulumi.StringPtrInput
	// Cloud CDN configuration for this BackendBucket.
	CdnPolicy BackendBucketCdnPolicyPtrInput
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
	CompressionMode BackendBucketCompressionModePtrInput
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders pulumi.StringArrayInput
	// An optional textual description of the resource; provided by the client when the resource is created.
	Description pulumi.StringPtrInput
	// If true, enable Cloud CDN for this BackendBucket.
	EnableCdn pulumi.BoolPtrInput
	// Type of the resource.
	Kind pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (BackendBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backendBucketArgs)(nil)).Elem()
}

type BackendBucketInput interface {
	pulumi.Input

	ToBackendBucketOutput() BackendBucketOutput
	ToBackendBucketOutputWithContext(ctx context.Context) BackendBucketOutput
}

func (*BackendBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendBucket)(nil)).Elem()
}

func (i *BackendBucket) ToBackendBucketOutput() BackendBucketOutput {
	return i.ToBackendBucketOutputWithContext(context.Background())
}

func (i *BackendBucket) ToBackendBucketOutputWithContext(ctx context.Context) BackendBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendBucketOutput)
}

type BackendBucketOutput struct{ *pulumi.OutputState }

func (BackendBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendBucket)(nil)).Elem()
}

func (o BackendBucketOutput) ToBackendBucketOutput() BackendBucketOutput {
	return o
}

func (o BackendBucketOutput) ToBackendBucketOutputWithContext(ctx context.Context) BackendBucketOutput {
	return o
}

// Cloud Storage bucket name.
func (o BackendBucketOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.BucketName }).(pulumi.StringOutput)
}

// Cloud CDN configuration for this BackendBucket.
func (o BackendBucketOutput) CdnPolicy() BackendBucketCdnPolicyResponseOutput {
	return o.ApplyT(func(v *BackendBucket) BackendBucketCdnPolicyResponseOutput { return v.CdnPolicy }).(BackendBucketCdnPolicyResponseOutput)
}

// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header.
func (o BackendBucketOutput) CompressionMode() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.CompressionMode }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o BackendBucketOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// Headers that the HTTP/S load balancer should add to proxied responses.
func (o BackendBucketOutput) CustomResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringArrayOutput { return v.CustomResponseHeaders }).(pulumi.StringArrayOutput)
}

// An optional textual description of the resource; provided by the client when the resource is created.
func (o BackendBucketOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The resource URL for the edge security policy associated with this backend bucket.
func (o BackendBucketOutput) EdgeSecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.EdgeSecurityPolicy }).(pulumi.StringOutput)
}

// If true, enable Cloud CDN for this BackendBucket.
func (o BackendBucketOutput) EnableCdn() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.BoolOutput { return v.EnableCdn }).(pulumi.BoolOutput)
}

// Type of the resource.
func (o BackendBucketOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o BackendBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BackendBucketOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
func (o BackendBucketOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Server-defined URL for the resource.
func (o BackendBucketOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *BackendBucket) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackendBucketInput)(nil)).Elem(), &BackendBucket{})
	pulumi.RegisterOutputType(BackendBucketOutput{})
}
