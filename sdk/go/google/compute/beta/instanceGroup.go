// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package beta

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an instance group in the specified project using the parameters that are included in the request.
type InstanceGroup struct {
	pulumi.CustomResourceState

	// The creation timestamp for this instance group in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The resource type, which is always compute#instanceGroup for instance groups.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringOutput `pulumi:"name"`
	//  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
	NamedPorts NamedPortResponseArrayOutput `pulumi:"namedPorts"`
	// The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Network pulumi.StringOutput `pulumi:"network"`
	// The URL of the region where the instance group is located (for regional resources).
	Region pulumi.StringOutput `pulumi:"region"`
	// The URL for this instance group. The server generates this URL.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The total number of instances in the instance group.
	Size pulumi.IntOutput `pulumi:"size"`
	// The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Subnetwork pulumi.StringOutput `pulumi:"subnetwork"`
	// The URL of the zone where the instance group is located (for zonal resources).
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroup(ctx *pulumi.Context,
	name string, args *InstanceGroupArgs, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource InstanceGroup
	err := ctx.RegisterResource("google-native:compute/beta:InstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroup gets an existing InstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGroupState, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	var resource InstanceGroup
	err := ctx.ReadResource("google-native:compute/beta:InstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGroup resources.
type instanceGroupState struct {
	// The creation timestamp for this instance group in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
	Fingerprint *string `pulumi:"fingerprint"`
	// The resource type, which is always compute#instanceGroup for instance groups.
	Kind *string `pulumi:"kind"`
	// The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	//  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
	NamedPorts []NamedPortResponse `pulumi:"namedPorts"`
	// The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Network *string `pulumi:"network"`
	// The URL of the region where the instance group is located (for regional resources).
	Region *string `pulumi:"region"`
	// The URL for this instance group. The server generates this URL.
	SelfLink *string `pulumi:"selfLink"`
	// The total number of instances in the instance group.
	Size *int `pulumi:"size"`
	// The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Subnetwork *string `pulumi:"subnetwork"`
	// The URL of the zone where the instance group is located (for zonal resources).
	Zone *string `pulumi:"zone"`
}

type InstanceGroupState struct {
	// The creation timestamp for this instance group in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
	Fingerprint pulumi.StringPtrInput
	// The resource type, which is always compute#instanceGroup for instance groups.
	Kind pulumi.StringPtrInput
	// The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	//  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
	NamedPorts NamedPortResponseArrayInput
	// The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Network pulumi.StringPtrInput
	// The URL of the region where the instance group is located (for regional resources).
	Region pulumi.StringPtrInput
	// The URL for this instance group. The server generates this URL.
	SelfLink pulumi.StringPtrInput
	// The total number of instances in the instance group.
	Size pulumi.IntPtrInput
	// The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
	Subnetwork pulumi.StringPtrInput
	// The URL of the zone where the instance group is located (for zonal resources).
	Zone pulumi.StringPtrInput
}

func (InstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupState)(nil)).Elem()
}

type instanceGroupArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	//  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
	NamedPorts []NamedPort `pulumi:"namedPorts"`
	Project    string      `pulumi:"project"`
	RequestId  *string     `pulumi:"requestId"`
	Zone       string      `pulumi:"zone"`
}

// The set of arguments for constructing a InstanceGroup resource.
type InstanceGroupArgs struct {
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	//  Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
	NamedPorts NamedPortArrayInput
	Project    pulumi.StringInput
	RequestId  pulumi.StringPtrInput
	Zone       pulumi.StringInput
}

func (InstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupArgs)(nil)).Elem()
}

type InstanceGroupInput interface {
	pulumi.Input

	ToInstanceGroupOutput() InstanceGroupOutput
	ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput
}

func (*InstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroup)(nil))
}

func (i *InstanceGroup) ToInstanceGroupOutput() InstanceGroupOutput {
	return i.ToInstanceGroupOutputWithContext(context.Background())
}

func (i *InstanceGroup) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupOutput)
}

type InstanceGroupOutput struct {
	*pulumi.OutputState
}

func (InstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceGroup)(nil))
}

func (o InstanceGroupOutput) ToInstanceGroupOutput() InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InstanceGroupOutput{})
}
