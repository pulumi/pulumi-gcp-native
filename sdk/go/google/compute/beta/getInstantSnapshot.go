// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the specified InstantSnapshot resource in the specified zone.
func LookupInstantSnapshot(ctx *pulumi.Context, args *LookupInstantSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupInstantSnapshotResult, error) {
	var rv LookupInstantSnapshotResult
	err := ctx.Invoke("google-native:compute/beta:getInstantSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInstantSnapshotArgs struct {
	InstantSnapshot string  `pulumi:"instantSnapshot"`
	Project         *string `pulumi:"project"`
	Zone            string  `pulumi:"zone"`
}

type LookupInstantSnapshotResult struct {
	// The architecture of the instant snapshot. Valid values are ARM64 or X86_64.
	Architecture string `pulumi:"architecture"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description string `pulumi:"description"`
	// Size of the source disk, specified in GB.
	DiskSizeGb string `pulumi:"diskSizeGb"`
	// Type of the resource. Always compute#instantSnapshot for InstantSnapshot resources.
	Kind string `pulumi:"kind"`
	// A fingerprint for the labels being applied to this InstantSnapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a InstantSnapshot.
	LabelFingerprint string `pulumi:"labelFingerprint"`
	// Labels to apply to this InstantSnapshot. These can be later modified by the setLabels method. Label values may be empty.
	Labels map[string]string `pulumi:"labels"`
	// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name string `pulumi:"name"`
	// URL of the region where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region string `pulumi:"region"`
	// Status information for the instant snapshot resource.
	ResourceStatus InstantSnapshotResourceStatusResponse `pulumi:"resourceStatus"`
	// Reserved for future use.
	SatisfiesPzs bool `pulumi:"satisfiesPzs"`
	// Server-defined URL for the resource.
	SelfLink string `pulumi:"selfLink"`
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId string `pulumi:"selfLinkWithId"`
	// URL of the source disk used to create this instant snapshot. Note that the source disk must be in the same zone/region as the instant snapshot to be created. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk
	SourceDisk string `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this InstantSnapshot. This value may be used to determine whether the InstantSnapshot was taken from the current or a previous instance of a given disk name.
	SourceDiskId string `pulumi:"sourceDiskId"`
	// The status of the instantSnapshot. This can be CREATING, DELETING, FAILED, or READY.
	Status string `pulumi:"status"`
	// URL of the zone where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Zone string `pulumi:"zone"`
}

func LookupInstantSnapshotOutput(ctx *pulumi.Context, args LookupInstantSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupInstantSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstantSnapshotResult, error) {
			args := v.(LookupInstantSnapshotArgs)
			r, err := LookupInstantSnapshot(ctx, &args, opts...)
			var s LookupInstantSnapshotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstantSnapshotResultOutput)
}

type LookupInstantSnapshotOutputArgs struct {
	InstantSnapshot pulumi.StringInput    `pulumi:"instantSnapshot"`
	Project         pulumi.StringPtrInput `pulumi:"project"`
	Zone            pulumi.StringInput    `pulumi:"zone"`
}

func (LookupInstantSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstantSnapshotArgs)(nil)).Elem()
}

type LookupInstantSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupInstantSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstantSnapshotResult)(nil)).Elem()
}

func (o LookupInstantSnapshotResultOutput) ToLookupInstantSnapshotResultOutput() LookupInstantSnapshotResultOutput {
	return o
}

func (o LookupInstantSnapshotResultOutput) ToLookupInstantSnapshotResultOutputWithContext(ctx context.Context) LookupInstantSnapshotResultOutput {
	return o
}

// The architecture of the instant snapshot. Valid values are ARM64 or X86_64.
func (o LookupInstantSnapshotResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o LookupInstantSnapshotResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o LookupInstantSnapshotResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Description }).(pulumi.StringOutput)
}

// Size of the source disk, specified in GB.
func (o LookupInstantSnapshotResultOutput) DiskSizeGb() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.DiskSizeGb }).(pulumi.StringOutput)
}

// Type of the resource. Always compute#instantSnapshot for InstantSnapshot resources.
func (o LookupInstantSnapshotResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Kind }).(pulumi.StringOutput)
}

// A fingerprint for the labels being applied to this InstantSnapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a InstantSnapshot.
func (o LookupInstantSnapshotResultOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels to apply to this InstantSnapshot. These can be later modified by the setLabels method. Label values may be empty.
func (o LookupInstantSnapshotResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o LookupInstantSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

// URL of the region where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o LookupInstantSnapshotResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Region }).(pulumi.StringOutput)
}

// Status information for the instant snapshot resource.
func (o LookupInstantSnapshotResultOutput) ResourceStatus() InstantSnapshotResourceStatusResponseOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) InstantSnapshotResourceStatusResponse { return v.ResourceStatus }).(InstantSnapshotResourceStatusResponseOutput)
}

// Reserved for future use.
func (o LookupInstantSnapshotResultOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) bool { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Server-defined URL for the resource.
func (o LookupInstantSnapshotResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource's resource id.
func (o LookupInstantSnapshotResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// URL of the source disk used to create this instant snapshot. Note that the source disk must be in the same zone/region as the instant snapshot to be created. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk
func (o LookupInstantSnapshotResultOutput) SourceDisk() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.SourceDisk }).(pulumi.StringOutput)
}

// The ID value of the disk used to create this InstantSnapshot. This value may be used to determine whether the InstantSnapshot was taken from the current or a previous instance of a given disk name.
func (o LookupInstantSnapshotResultOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.SourceDiskId }).(pulumi.StringOutput)
}

// The status of the instantSnapshot. This can be CREATING, DELETING, FAILED, or READY.
func (o LookupInstantSnapshotResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Status }).(pulumi.StringOutput)
}

// URL of the zone where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o LookupInstantSnapshotResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstantSnapshotResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstantSnapshotResultOutput{})
}
