// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified resource. Replaces any existing policy.
type InstanceTemplateIamPolicy struct {
	pulumi.CustomResourceState
}

// NewInstanceTemplateIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewInstanceTemplateIamPolicy(ctx *pulumi.Context,
	name string, args *InstanceTemplateIamPolicyArgs, opts ...pulumi.ResourceOption) (*InstanceTemplateIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	var resource InstanceTemplateIamPolicy
	err := ctx.RegisterResource("google-cloud:compute/v1:InstanceTemplateIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceTemplateIamPolicy gets an existing InstanceTemplateIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceTemplateIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceTemplateIamPolicyState, opts ...pulumi.ResourceOption) (*InstanceTemplateIamPolicy, error) {
	var resource InstanceTemplateIamPolicy
	err := ctx.ReadResource("google-cloud:compute/v1:InstanceTemplateIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceTemplateIamPolicy resources.
type instanceTemplateIamPolicyState struct {
}

type InstanceTemplateIamPolicyState struct {
}

func (InstanceTemplateIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTemplateIamPolicyState)(nil)).Elem()
}

type instanceTemplateIamPolicyArgs struct {
	// Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings.
	Bindings []Binding `pulumi:"bindings"`
	// Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
	Etag *string `pulumi:"etag"`
	// REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
	Policy   *Policy `pulumi:"policy"`
	Project  string  `pulumi:"project"`
	Resource string  `pulumi:"resource"`
}

// The set of arguments for constructing a InstanceTemplateIamPolicy resource.
type InstanceTemplateIamPolicyArgs struct {
	// Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings.
	Bindings BindingArrayInput
	// Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
	Etag pulumi.StringPtrInput
	// REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them.
	Policy   PolicyPtrInput
	Project  pulumi.StringInput
	Resource pulumi.StringInput
}

func (InstanceTemplateIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTemplateIamPolicyArgs)(nil)).Elem()
}

type InstanceTemplateIamPolicyInput interface {
	pulumi.Input

	ToInstanceTemplateIamPolicyOutput() InstanceTemplateIamPolicyOutput
	ToInstanceTemplateIamPolicyOutputWithContext(ctx context.Context) InstanceTemplateIamPolicyOutput
}

func (*InstanceTemplateIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplateIamPolicy)(nil))
}

func (i *InstanceTemplateIamPolicy) ToInstanceTemplateIamPolicyOutput() InstanceTemplateIamPolicyOutput {
	return i.ToInstanceTemplateIamPolicyOutputWithContext(context.Background())
}

func (i *InstanceTemplateIamPolicy) ToInstanceTemplateIamPolicyOutputWithContext(ctx context.Context) InstanceTemplateIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTemplateIamPolicyOutput)
}

type InstanceTemplateIamPolicyOutput struct {
	*pulumi.OutputState
}

func (InstanceTemplateIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTemplateIamPolicy)(nil))
}

func (o InstanceTemplateIamPolicyOutput) ToInstanceTemplateIamPolicyOutput() InstanceTemplateIamPolicyOutput {
	return o
}

func (o InstanceTemplateIamPolicyOutput) ToInstanceTemplateIamPolicyOutputWithContext(ctx context.Context) InstanceTemplateIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(InstanceTemplateIamPolicyOutput{})
}
