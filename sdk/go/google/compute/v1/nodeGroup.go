// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a NodeGroup resource in the specified project using the data included in the request.
type NodeGroup struct {
	pulumi.CustomResourceState

	// Specifies how autoscaling should behave.
	AutoscalingPolicy NodeGroupAutoscalingPolicyResponseOutput `pulumi:"autoscalingPolicy"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// [Output Only] The type of the resource. Always compute#nodeGroup for node group.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
	LocationHint pulumi.StringOutput `pulumi:"locationHint"`
	// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see  Maintenance policies.
	MaintenancePolicy pulumi.StringOutput                      `pulumi:"maintenancePolicy"`
	MaintenanceWindow NodeGroupMaintenanceWindowResponseOutput `pulumi:"maintenanceWindow"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// URL of the node template to create the node group from.
	NodeTemplate pulumi.StringOutput `pulumi:"nodeTemplate"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// [Output Only] The total number of nodes in the node group.
	Size   pulumi.IntOutput    `pulumi:"size"`
	Status pulumi.StringOutput `pulumi:"status"`
	// [Output Only] The name of the zone where the node group resides, such as us-central1-a.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewNodeGroup registers a new resource with the given unique name, arguments, and options.
func NewNodeGroup(ctx *pulumi.Context,
	name string, args *NodeGroupArgs, opts ...pulumi.ResourceOption) (*NodeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InitialNodeCount == nil {
		return nil, errors.New("invalid value for required argument 'InitialNodeCount'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource NodeGroup
	err := ctx.RegisterResource("google-native:compute/v1:NodeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeGroup gets an existing NodeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeGroupState, opts ...pulumi.ResourceOption) (*NodeGroup, error) {
	var resource NodeGroup
	err := ctx.ReadResource("google-native:compute/v1:NodeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeGroup resources.
type nodeGroupState struct {
	// Specifies how autoscaling should behave.
	AutoscalingPolicy *NodeGroupAutoscalingPolicyResponse `pulumi:"autoscalingPolicy"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	Fingerprint *string `pulumi:"fingerprint"`
	// [Output Only] The type of the resource. Always compute#nodeGroup for node group.
	Kind *string `pulumi:"kind"`
	// An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
	LocationHint *string `pulumi:"locationHint"`
	// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see  Maintenance policies.
	MaintenancePolicy *string                             `pulumi:"maintenancePolicy"`
	MaintenanceWindow *NodeGroupMaintenanceWindowResponse `pulumi:"maintenanceWindow"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// URL of the node template to create the node group from.
	NodeTemplate *string `pulumi:"nodeTemplate"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// [Output Only] The total number of nodes in the node group.
	Size   *int    `pulumi:"size"`
	Status *string `pulumi:"status"`
	// [Output Only] The name of the zone where the node group resides, such as us-central1-a.
	Zone *string `pulumi:"zone"`
}

type NodeGroupState struct {
	// Specifies how autoscaling should behave.
	AutoscalingPolicy NodeGroupAutoscalingPolicyResponsePtrInput
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	Fingerprint pulumi.StringPtrInput
	// [Output Only] The type of the resource. Always compute#nodeGroup for node group.
	Kind pulumi.StringPtrInput
	// An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
	LocationHint pulumi.StringPtrInput
	// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see  Maintenance policies.
	MaintenancePolicy pulumi.StringPtrInput
	MaintenanceWindow NodeGroupMaintenanceWindowResponsePtrInput
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// URL of the node template to create the node group from.
	NodeTemplate pulumi.StringPtrInput
	// [Output Only] Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// [Output Only] The total number of nodes in the node group.
	Size   pulumi.IntPtrInput
	Status pulumi.StringPtrInput
	// [Output Only] The name of the zone where the node group resides, such as us-central1-a.
	Zone pulumi.StringPtrInput
}

func (NodeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeGroupState)(nil)).Elem()
}

type nodeGroupArgs struct {
	// Specifies how autoscaling should behave.
	AutoscalingPolicy *NodeGroupAutoscalingPolicy `pulumi:"autoscalingPolicy"`
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	Fingerprint *string `pulumi:"fingerprint"`
	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	Id               *string `pulumi:"id"`
	InitialNodeCount string  `pulumi:"initialNodeCount"`
	// [Output Only] The type of the resource. Always compute#nodeGroup for node group.
	Kind *string `pulumi:"kind"`
	// An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
	LocationHint *string `pulumi:"locationHint"`
	// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see  Maintenance policies.
	MaintenancePolicy *string                     `pulumi:"maintenancePolicy"`
	MaintenanceWindow *NodeGroupMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// URL of the node template to create the node group from.
	NodeTemplate *string `pulumi:"nodeTemplate"`
	Project      string  `pulumi:"project"`
	RequestId    *string `pulumi:"requestId"`
	// [Output Only] Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// [Output Only] The total number of nodes in the node group.
	Size   *int    `pulumi:"size"`
	Status *string `pulumi:"status"`
	// [Output Only] The name of the zone where the node group resides, such as us-central1-a.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a NodeGroup resource.
type NodeGroupArgs struct {
	// Specifies how autoscaling should behave.
	AutoscalingPolicy NodeGroupAutoscalingPolicyPtrInput
	// [Output Only] Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	Fingerprint pulumi.StringPtrInput
	// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
	Id               pulumi.StringPtrInput
	InitialNodeCount pulumi.StringInput
	// [Output Only] The type of the resource. Always compute#nodeGroup for node group.
	Kind pulumi.StringPtrInput
	// An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
	LocationHint pulumi.StringPtrInput
	// Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see  Maintenance policies.
	MaintenancePolicy pulumi.StringPtrInput
	MaintenanceWindow NodeGroupMaintenanceWindowPtrInput
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// URL of the node template to create the node group from.
	NodeTemplate pulumi.StringPtrInput
	Project      pulumi.StringInput
	RequestId    pulumi.StringPtrInput
	// [Output Only] Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// [Output Only] The total number of nodes in the node group.
	Size   pulumi.IntPtrInput
	Status pulumi.StringPtrInput
	// [Output Only] The name of the zone where the node group resides, such as us-central1-a.
	Zone pulumi.StringInput
}

func (NodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeGroupArgs)(nil)).Elem()
}

type NodeGroupInput interface {
	pulumi.Input

	ToNodeGroupOutput() NodeGroupOutput
	ToNodeGroupOutputWithContext(ctx context.Context) NodeGroupOutput
}

func (*NodeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroup)(nil))
}

func (i *NodeGroup) ToNodeGroupOutput() NodeGroupOutput {
	return i.ToNodeGroupOutputWithContext(context.Background())
}

func (i *NodeGroup) ToNodeGroupOutputWithContext(ctx context.Context) NodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeGroupOutput)
}

type NodeGroupOutput struct {
	*pulumi.OutputState
}

func (NodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroup)(nil))
}

func (o NodeGroupOutput) ToNodeGroupOutput() NodeGroupOutput {
	return o
}

func (o NodeGroupOutput) ToNodeGroupOutputWithContext(ctx context.Context) NodeGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NodeGroupOutput{})
}
