// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns the specified network.
func LookupNetwork(ctx *pulumi.Context, args *LookupNetworkArgs, opts ...pulumi.InvokeOption) (*LookupNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkResult
	err := ctx.Invoke("google-native:compute/v1:getNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupNetworkArgs struct {
	Network string  `pulumi:"network"`
	Project *string `pulumi:"project"`
}

type LookupNetworkResult struct {
	// Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method.
	AutoCreateSubnetworks bool `pulumi:"autoCreateSubnetworks"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this field when you create the resource.
	Description string `pulumi:"description"`
	// Enable ULA internal ipv6 on this network. Enabling this feature will assign a /48 from google defined ULA prefix fd20::/20. .
	EnableUlaInternalIpv6 bool `pulumi:"enableUlaInternalIpv6"`
	// URL of the firewall policy the network is associated with.
	FirewallPolicy string `pulumi:"firewallPolicy"`
	// The gateway address for default routing out of the network, selected by Google Cloud.
	GatewayIPv4 string `pulumi:"gatewayIPv4"`
	// When enabling ula internal ipv6, caller optionally can specify the /48 range they want from the google defined ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will fail if the speficied /48 is already in used by another resource. If the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field. .
	InternalIpv6Range string `pulumi:"internalIpv6Range"`
	// Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
	//
	// Deprecated: Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
	Ipv4Range string `pulumi:"ipv4Range"`
	// Type of the resource. Always compute#network for networks.
	Kind string `pulumi:"kind"`
	// Maximum Transmission Unit in bytes. The minimum value for this field is 1300 and the maximum value is 8896. The suggested value is 1500, which is the default MTU used on the Internet, or 8896 if you want to use Jumbo frames. If unspecified, the value defaults to 1460.
	Mtu int `pulumi:"mtu"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
	Name string `pulumi:"name"`
	// The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
	NetworkFirewallPolicyEnforcementOrder string `pulumi:"networkFirewallPolicyEnforcementOrder"`
	// A list of network peerings for the resource.
	Peerings []NetworkPeeringResponse `pulumi:"peerings"`
	// The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
	RoutingConfig NetworkRoutingConfigResponse `pulumi:"routingConfig"`
	// Server-defined URL for the resource.
	SelfLink string `pulumi:"selfLink"`
	// Server-defined URL for this resource with the resource id.
	SelfLinkWithId string `pulumi:"selfLinkWithId"`
	// Server-defined fully-qualified URLs for all subnetworks in this VPC network.
	Subnetworks []string `pulumi:"subnetworks"`
}

func LookupNetworkOutput(ctx *pulumi.Context, args LookupNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkResult, error) {
			args := v.(LookupNetworkArgs)
			r, err := LookupNetwork(ctx, &args, opts...)
			var s LookupNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkResultOutput)
}

type LookupNetworkOutputArgs struct {
	Network pulumi.StringInput    `pulumi:"network"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkArgs)(nil)).Elem()
}

type LookupNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkResult)(nil)).Elem()
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutput() LookupNetworkResultOutput {
	return o
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutputWithContext(ctx context.Context) LookupNetworkResultOutput {
	return o
}

// Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method.
func (o LookupNetworkResultOutput) AutoCreateSubnetworks() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkResult) bool { return v.AutoCreateSubnetworks }).(pulumi.BoolOutput)
}

// Creation timestamp in RFC3339 text format.
func (o LookupNetworkResultOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this field when you create the resource.
func (o LookupNetworkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Description }).(pulumi.StringOutput)
}

// Enable ULA internal ipv6 on this network. Enabling this feature will assign a /48 from google defined ULA prefix fd20::/20. .
func (o LookupNetworkResultOutput) EnableUlaInternalIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNetworkResult) bool { return v.EnableUlaInternalIpv6 }).(pulumi.BoolOutput)
}

// URL of the firewall policy the network is associated with.
func (o LookupNetworkResultOutput) FirewallPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.FirewallPolicy }).(pulumi.StringOutput)
}

// The gateway address for default routing out of the network, selected by Google Cloud.
func (o LookupNetworkResultOutput) GatewayIPv4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.GatewayIPv4 }).(pulumi.StringOutput)
}

// When enabling ula internal ipv6, caller optionally can specify the /48 range they want from the google defined ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will fail if the speficied /48 is already in used by another resource. If the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field. .
func (o LookupNetworkResultOutput) InternalIpv6Range() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.InternalIpv6Range }).(pulumi.StringOutput)
}

// Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
//
// Deprecated: Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
func (o LookupNetworkResultOutput) Ipv4Range() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Ipv4Range }).(pulumi.StringOutput)
}

// Type of the resource. Always compute#network for networks.
func (o LookupNetworkResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Maximum Transmission Unit in bytes. The minimum value for this field is 1300 and the maximum value is 8896. The suggested value is 1500, which is the default MTU used on the Internet, or 8896 if you want to use Jumbo frames. If unspecified, the value defaults to 1460.
func (o LookupNetworkResultOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkResult) int { return v.Mtu }).(pulumi.IntOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
func (o LookupNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
func (o LookupNetworkResultOutput) NetworkFirewallPolicyEnforcementOrder() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.NetworkFirewallPolicyEnforcementOrder }).(pulumi.StringOutput)
}

// A list of network peerings for the resource.
func (o LookupNetworkResultOutput) Peerings() NetworkPeeringResponseArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []NetworkPeeringResponse { return v.Peerings }).(NetworkPeeringResponseArrayOutput)
}

// The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
func (o LookupNetworkResultOutput) RoutingConfig() NetworkRoutingConfigResponseOutput {
	return o.ApplyT(func(v LookupNetworkResult) NetworkRoutingConfigResponse { return v.RoutingConfig }).(NetworkRoutingConfigResponseOutput)
}

// Server-defined URL for the resource.
func (o LookupNetworkResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource with the resource id.
func (o LookupNetworkResultOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// Server-defined fully-qualified URLs for all subnetworks in this VPC network.
func (o LookupNetworkResultOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []string { return v.Subnetworks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkResultOutput{})
}
