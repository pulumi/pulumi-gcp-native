// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an autoscaler in the specified project using the data included in the request.
type RegionAutoscaler struct {
	pulumi.CustomResourceState

	// The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy AutoscalingPolicyResponseOutput `pulumi:"autoscalingPolicy"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Type of the resource. Always compute#autoscaler for autoscalers.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.
	RecommendedSize pulumi.IntOutput    `pulumi:"recommendedSize"`
	Region          pulumi.StringOutput `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Status information of existing scaling schedules.
	ScalingScheduleStatus ScalingScheduleStatusResponseOutput `pulumi:"scalingScheduleStatus"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
	Status pulumi.StringOutput `pulumi:"status"`
	// Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
	StatusDetails AutoscalerStatusDetailsResponseArrayOutput `pulumi:"statusDetails"`
	// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
	Target pulumi.StringOutput `pulumi:"target"`
	// URL of the zone where the instance group resides (for autoscalers living in zonal scope).
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewRegionAutoscaler registers a new resource with the given unique name, arguments, and options.
func NewRegionAutoscaler(ctx *pulumi.Context,
	name string, args *RegionAutoscalerArgs, opts ...pulumi.ResourceOption) (*RegionAutoscaler, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
		"region",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionAutoscaler
	err := ctx.RegisterResource("google-native:compute/v1:RegionAutoscaler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionAutoscaler gets an existing RegionAutoscaler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionAutoscaler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionAutoscalerState, opts ...pulumi.ResourceOption) (*RegionAutoscaler, error) {
	var resource RegionAutoscaler
	err := ctx.ReadResource("google-native:compute/v1:RegionAutoscaler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionAutoscaler resources.
type regionAutoscalerState struct {
}

type RegionAutoscalerState struct {
}

func (RegionAutoscalerState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionAutoscalerState)(nil)).Elem()
}

type regionAutoscalerArgs struct {
	// The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy *AutoscalingPolicy `pulumi:"autoscalingPolicy"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	Region  string  `pulumi:"region"`
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
	Target *string `pulumi:"target"`
}

// The set of arguments for constructing a RegionAutoscaler resource.
type RegionAutoscalerArgs struct {
	// The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
	AutoscalingPolicy AutoscalingPolicyPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	Region  pulumi.StringInput
	// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
	Target pulumi.StringPtrInput
}

func (RegionAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionAutoscalerArgs)(nil)).Elem()
}

type RegionAutoscalerInput interface {
	pulumi.Input

	ToRegionAutoscalerOutput() RegionAutoscalerOutput
	ToRegionAutoscalerOutputWithContext(ctx context.Context) RegionAutoscalerOutput
}

func (*RegionAutoscaler) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionAutoscaler)(nil)).Elem()
}

func (i *RegionAutoscaler) ToRegionAutoscalerOutput() RegionAutoscalerOutput {
	return i.ToRegionAutoscalerOutputWithContext(context.Background())
}

func (i *RegionAutoscaler) ToRegionAutoscalerOutputWithContext(ctx context.Context) RegionAutoscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionAutoscalerOutput)
}

type RegionAutoscalerOutput struct{ *pulumi.OutputState }

func (RegionAutoscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionAutoscaler)(nil)).Elem()
}

func (o RegionAutoscalerOutput) ToRegionAutoscalerOutput() RegionAutoscalerOutput {
	return o
}

func (o RegionAutoscalerOutput) ToRegionAutoscalerOutputWithContext(ctx context.Context) RegionAutoscalerOutput {
	return o
}

// The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
func (o RegionAutoscalerOutput) AutoscalingPolicy() AutoscalingPolicyResponseOutput {
	return o.ApplyT(func(v *RegionAutoscaler) AutoscalingPolicyResponseOutput { return v.AutoscalingPolicy }).(AutoscalingPolicyResponseOutput)
}

// Creation timestamp in RFC3339 text format.
func (o RegionAutoscalerOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o RegionAutoscalerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Type of the resource. Always compute#autoscaler for autoscalers.
func (o RegionAutoscalerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o RegionAutoscalerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RegionAutoscalerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction.
func (o RegionAutoscalerOutput) RecommendedSize() pulumi.IntOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.IntOutput { return v.RecommendedSize }).(pulumi.IntOutput)
}

func (o RegionAutoscalerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
func (o RegionAutoscalerOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Status information of existing scaling schedules.
func (o RegionAutoscalerOutput) ScalingScheduleStatus() ScalingScheduleStatusResponseOutput {
	return o.ApplyT(func(v *RegionAutoscaler) ScalingScheduleStatusResponseOutput { return v.ScalingScheduleStatus }).(ScalingScheduleStatusResponseOutput)
}

// Server-defined URL for the resource.
func (o RegionAutoscalerOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
func (o RegionAutoscalerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
func (o RegionAutoscalerOutput) StatusDetails() AutoscalerStatusDetailsResponseArrayOutput {
	return o.ApplyT(func(v *RegionAutoscaler) AutoscalerStatusDetailsResponseArrayOutput { return v.StatusDetails }).(AutoscalerStatusDetailsResponseArrayOutput)
}

// URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler.
func (o RegionAutoscalerOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

// URL of the zone where the instance group resides (for autoscalers living in zonal scope).
func (o RegionAutoscalerOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *RegionAutoscaler) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegionAutoscalerInput)(nil)).Elem(), &RegionAutoscaler{})
	pulumi.RegisterOutputType(RegionAutoscalerOutput{})
}
