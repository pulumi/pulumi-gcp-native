// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a specific catalog item.
func LookupCatalogItem(ctx *pulumi.Context, args *LookupCatalogItemArgs, opts ...pulumi.InvokeOption) (*LookupCatalogItemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCatalogItemResult
	err := ctx.Invoke("google-native:recommendationengine/v1beta1:getCatalogItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCatalogItemArgs struct {
	CatalogId     string  `pulumi:"catalogId"`
	CatalogItemId string  `pulumi:"catalogItemId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
}

type LookupCatalogItemResult struct {
	// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
	CategoryHierarchies []GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponse `pulumi:"categoryHierarchies"`
	// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
	Description string `pulumi:"description"`
	// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
	ItemAttributes GoogleCloudRecommendationengineV1beta1FeatureMapResponse `pulumi:"itemAttributes"`
	// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
	ItemGroupId string `pulumi:"itemGroupId"`
	// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	//
	// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	LanguageCode string `pulumi:"languageCode"`
	// Optional. Metadata specific to retail products.
	ProductMetadata GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse `pulumi:"productMetadata"`
	// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
	Tags []string `pulumi:"tags"`
	// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
	Title string `pulumi:"title"`
}

func LookupCatalogItemOutput(ctx *pulumi.Context, args LookupCatalogItemOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogItemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogItemResult, error) {
			args := v.(LookupCatalogItemArgs)
			r, err := LookupCatalogItem(ctx, &args, opts...)
			var s LookupCatalogItemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCatalogItemResultOutput)
}

type LookupCatalogItemOutputArgs struct {
	CatalogId     pulumi.StringInput    `pulumi:"catalogId"`
	CatalogItemId pulumi.StringInput    `pulumi:"catalogItemId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCatalogItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogItemArgs)(nil)).Elem()
}

type LookupCatalogItemResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogItemResult)(nil)).Elem()
}

func (o LookupCatalogItemResultOutput) ToLookupCatalogItemResultOutput() LookupCatalogItemResultOutput {
	return o
}

func (o LookupCatalogItemResultOutput) ToLookupCatalogItemResultOutputWithContext(ctx context.Context) LookupCatalogItemResultOutput {
	return o
}

func (o LookupCatalogItemResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupCatalogItemResult] {
	return pulumix.Output[LookupCatalogItemResult]{
		OutputState: o.OutputState,
	}
}

// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
func (o LookupCatalogItemResultOutput) CategoryHierarchies() GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) []GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponse {
		return v.CategoryHierarchies
	}).(GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput)
}

// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
func (o LookupCatalogItemResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
func (o LookupCatalogItemResultOutput) ItemAttributes() GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) GoogleCloudRecommendationengineV1beta1FeatureMapResponse {
		return v.ItemAttributes
	}).(GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput)
}

// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
func (o LookupCatalogItemResultOutput) ItemGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.ItemGroupId }).(pulumi.StringOutput)
}

// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
//
// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
func (o LookupCatalogItemResultOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Optional. Metadata specific to retail products.
func (o LookupCatalogItemResultOutput) ProductMetadata() GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse {
		return v.ProductMetadata
	}).(GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput)
}

// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
func (o LookupCatalogItemResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
func (o LookupCatalogItemResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogItemResult) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogItemResultOutput{})
}
