// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Register an API key for use with predict method.
type CatalogEventStorePredictionApiKeyRegistration struct {
	pulumi.CustomResourceState
}

// NewCatalogEventStorePredictionApiKeyRegistration registers a new resource with the given unique name, arguments, and options.
func NewCatalogEventStorePredictionApiKeyRegistration(ctx *pulumi.Context,
	name string, args *CatalogEventStorePredictionApiKeyRegistrationArgs, opts ...pulumi.ResourceOption) (*CatalogEventStorePredictionApiKeyRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CatalogsId == nil {
		return nil, errors.New("invalid value for required argument 'CatalogsId'")
	}
	if args.EventStoresId == nil {
		return nil, errors.New("invalid value for required argument 'EventStoresId'")
	}
	if args.LocationsId == nil {
		return nil, errors.New("invalid value for required argument 'LocationsId'")
	}
	if args.PredictionApiKeyRegistrationsId == nil {
		return nil, errors.New("invalid value for required argument 'PredictionApiKeyRegistrationsId'")
	}
	if args.ProjectsId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectsId'")
	}
	var resource CatalogEventStorePredictionApiKeyRegistration
	err := ctx.RegisterResource("google-cloud:recommendationengine/v1beta1:CatalogEventStorePredictionApiKeyRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogEventStorePredictionApiKeyRegistration gets an existing CatalogEventStorePredictionApiKeyRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogEventStorePredictionApiKeyRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogEventStorePredictionApiKeyRegistrationState, opts ...pulumi.ResourceOption) (*CatalogEventStorePredictionApiKeyRegistration, error) {
	var resource CatalogEventStorePredictionApiKeyRegistration
	err := ctx.ReadResource("google-cloud:recommendationengine/v1beta1:CatalogEventStorePredictionApiKeyRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CatalogEventStorePredictionApiKeyRegistration resources.
type catalogEventStorePredictionApiKeyRegistrationState struct {
}

type CatalogEventStorePredictionApiKeyRegistrationState struct {
}

func (CatalogEventStorePredictionApiKeyRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogEventStorePredictionApiKeyRegistrationState)(nil)).Elem()
}

type catalogEventStorePredictionApiKeyRegistrationArgs struct {
	CatalogsId    string `pulumi:"catalogsId"`
	EventStoresId string `pulumi:"eventStoresId"`
	LocationsId   string `pulumi:"locationsId"`
	// Required. The prediction API key registration.
	PredictionApiKeyRegistration    *GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration `pulumi:"predictionApiKeyRegistration"`
	PredictionApiKeyRegistrationsId string                                                              `pulumi:"predictionApiKeyRegistrationsId"`
	ProjectsId                      string                                                              `pulumi:"projectsId"`
}

// The set of arguments for constructing a CatalogEventStorePredictionApiKeyRegistration resource.
type CatalogEventStorePredictionApiKeyRegistrationArgs struct {
	CatalogsId    pulumi.StringInput
	EventStoresId pulumi.StringInput
	LocationsId   pulumi.StringInput
	// Required. The prediction API key registration.
	PredictionApiKeyRegistration    GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistrationPtrInput
	PredictionApiKeyRegistrationsId pulumi.StringInput
	ProjectsId                      pulumi.StringInput
}

func (CatalogEventStorePredictionApiKeyRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogEventStorePredictionApiKeyRegistrationArgs)(nil)).Elem()
}

type CatalogEventStorePredictionApiKeyRegistrationInput interface {
	pulumi.Input

	ToCatalogEventStorePredictionApiKeyRegistrationOutput() CatalogEventStorePredictionApiKeyRegistrationOutput
	ToCatalogEventStorePredictionApiKeyRegistrationOutputWithContext(ctx context.Context) CatalogEventStorePredictionApiKeyRegistrationOutput
}

func (*CatalogEventStorePredictionApiKeyRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEventStorePredictionApiKeyRegistration)(nil))
}

func (i *CatalogEventStorePredictionApiKeyRegistration) ToCatalogEventStorePredictionApiKeyRegistrationOutput() CatalogEventStorePredictionApiKeyRegistrationOutput {
	return i.ToCatalogEventStorePredictionApiKeyRegistrationOutputWithContext(context.Background())
}

func (i *CatalogEventStorePredictionApiKeyRegistration) ToCatalogEventStorePredictionApiKeyRegistrationOutputWithContext(ctx context.Context) CatalogEventStorePredictionApiKeyRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEventStorePredictionApiKeyRegistrationOutput)
}

type CatalogEventStorePredictionApiKeyRegistrationOutput struct {
	*pulumi.OutputState
}

func (CatalogEventStorePredictionApiKeyRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEventStorePredictionApiKeyRegistration)(nil))
}

func (o CatalogEventStorePredictionApiKeyRegistrationOutput) ToCatalogEventStorePredictionApiKeyRegistrationOutput() CatalogEventStorePredictionApiKeyRegistrationOutput {
	return o
}

func (o CatalogEventStorePredictionApiKeyRegistrationOutput) ToCatalogEventStorePredictionApiKeyRegistrationOutputWithContext(ctx context.Context) CatalogEventStorePredictionApiKeyRegistrationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CatalogEventStorePredictionApiKeyRegistrationOutput{})
}
