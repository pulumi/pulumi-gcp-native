// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a catalog item.
// Auto-naming is currently not supported for this resource.
type CatalogItem struct {
	pulumi.CustomResourceState

	CatalogId pulumi.StringOutput `pulumi:"catalogId"`
	// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
	CategoryHierarchies GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput `pulumi:"categoryHierarchies"`
	// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
	ItemAttributes GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput `pulumi:"itemAttributes"`
	// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
	ItemGroupId pulumi.StringOutput `pulumi:"itemGroupId"`
	// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	//
	// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	LanguageCode pulumi.StringOutput `pulumi:"languageCode"`
	Location     pulumi.StringOutput `pulumi:"location"`
	// Optional. Metadata specific to retail products.
	ProductMetadata GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput `pulumi:"productMetadata"`
	Project         pulumi.StringOutput                                                    `pulumi:"project"`
	// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewCatalogItem registers a new resource with the given unique name, arguments, and options.
func NewCatalogItem(ctx *pulumi.Context,
	name string, args *CatalogItemArgs, opts ...pulumi.ResourceOption) (*CatalogItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CatalogId == nil {
		return nil, errors.New("invalid value for required argument 'CatalogId'")
	}
	if args.CategoryHierarchies == nil {
		return nil, errors.New("invalid value for required argument 'CategoryHierarchies'")
	}
	if args.Id == nil {
		return nil, errors.New("invalid value for required argument 'Id'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"catalogId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CatalogItem
	err := ctx.RegisterResource("google-native:recommendationengine/v1beta1:CatalogItem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalogItem gets an existing CatalogItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalogItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogItemState, opts ...pulumi.ResourceOption) (*CatalogItem, error) {
	var resource CatalogItem
	err := ctx.ReadResource("google-native:recommendationengine/v1beta1:CatalogItem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CatalogItem resources.
type catalogItemState struct {
}

type CatalogItemState struct {
}

func (CatalogItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogItemState)(nil)).Elem()
}

type catalogItemArgs struct {
	CatalogId string `pulumi:"catalogId"`
	// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
	CategoryHierarchies []GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy `pulumi:"categoryHierarchies"`
	// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
	Description *string `pulumi:"description"`
	// Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
	Id string `pulumi:"id"`
	// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
	ItemAttributes *GoogleCloudRecommendationengineV1beta1FeatureMap `pulumi:"itemAttributes"`
	// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
	ItemGroupId *string `pulumi:"itemGroupId"`
	// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	//
	// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	LanguageCode *string `pulumi:"languageCode"`
	Location     *string `pulumi:"location"`
	// Optional. Metadata specific to retail products.
	ProductMetadata *GoogleCloudRecommendationengineV1beta1ProductCatalogItem `pulumi:"productMetadata"`
	Project         *string                                                   `pulumi:"project"`
	// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
	Tags []string `pulumi:"tags"`
	// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a CatalogItem resource.
type CatalogItemArgs struct {
	CatalogId pulumi.StringInput
	// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
	CategoryHierarchies GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyArrayInput
	// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
	Description pulumi.StringPtrInput
	// Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
	Id pulumi.StringInput
	// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
	ItemAttributes GoogleCloudRecommendationengineV1beta1FeatureMapPtrInput
	// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
	ItemGroupId pulumi.StringPtrInput
	// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	//
	// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
	LanguageCode pulumi.StringPtrInput
	Location     pulumi.StringPtrInput
	// Optional. Metadata specific to retail products.
	ProductMetadata GoogleCloudRecommendationengineV1beta1ProductCatalogItemPtrInput
	Project         pulumi.StringPtrInput
	// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
	Tags pulumi.StringArrayInput
	// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
	Title pulumi.StringInput
}

func (CatalogItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogItemArgs)(nil)).Elem()
}

type CatalogItemInput interface {
	pulumi.Input

	ToCatalogItemOutput() CatalogItemOutput
	ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput
}

func (*CatalogItem) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogItem)(nil)).Elem()
}

func (i *CatalogItem) ToCatalogItemOutput() CatalogItemOutput {
	return i.ToCatalogItemOutputWithContext(context.Background())
}

func (i *CatalogItem) ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogItemOutput)
}

func (i *CatalogItem) ToOutput(ctx context.Context) pulumix.Output[*CatalogItem] {
	return pulumix.Output[*CatalogItem]{
		OutputState: i.ToCatalogItemOutputWithContext(ctx).OutputState,
	}
}

type CatalogItemOutput struct{ *pulumi.OutputState }

func (CatalogItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogItem)(nil)).Elem()
}

func (o CatalogItemOutput) ToCatalogItemOutput() CatalogItemOutput {
	return o
}

func (o CatalogItemOutput) ToCatalogItemOutputWithContext(ctx context.Context) CatalogItemOutput {
	return o
}

func (o CatalogItemOutput) ToOutput(ctx context.Context) pulumix.Output[*CatalogItem] {
	return pulumix.Output[*CatalogItem]{
		OutputState: o.OutputState,
	}
}

func (o CatalogItemOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.CatalogId }).(pulumi.StringOutput)
}

// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes & Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic Clothing", "Shoes"] } ]
func (o CatalogItemOutput) CategoryHierarchies() GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput {
	return o.ApplyT(func(v *CatalogItem) GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput {
		return v.CategoryHierarchies
	}).(GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponseArrayOutput)
}

// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
func (o CatalogItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
func (o CatalogItemOutput) ItemAttributes() GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput {
	return o.ApplyT(func(v *CatalogItem) GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput {
		return v.ItemAttributes
	}).(GoogleCloudRecommendationengineV1beta1FeatureMapResponseOutput)
}

// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
func (o CatalogItemOutput) ItemGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.ItemGroupId }).(pulumi.StringOutput)
}

// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
//
// Deprecated: Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
func (o CatalogItemOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

func (o CatalogItemOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. Metadata specific to retail products.
func (o CatalogItemOutput) ProductMetadata() GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput {
	return o.ApplyT(func(v *CatalogItem) GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput {
		return v.ProductMetadata
	}).(GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponseOutput)
}

func (o CatalogItemOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
func (o CatalogItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
func (o CatalogItemOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *CatalogItem) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogItemInput)(nil)).Elem(), &CatalogItem{})
	pulumi.RegisterOutputType(CatalogItemOutput{})
}
