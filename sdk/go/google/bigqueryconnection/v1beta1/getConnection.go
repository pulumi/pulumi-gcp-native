// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns specified connection.
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionResult
	err := ctx.Invoke("google-native:bigqueryconnection/v1beta1:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectionArgs struct {
	ConnectionId string  `pulumi:"connectionId"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
}

type LookupConnectionResult struct {
	// Cloud SQL properties.
	CloudSql CloudSqlPropertiesResponse `pulumi:"cloudSql"`
	// The creation timestamp of the connection.
	CreationTime string `pulumi:"creationTime"`
	// User provided description.
	Description string `pulumi:"description"`
	// User provided display name for the connection.
	FriendlyName string `pulumi:"friendlyName"`
	// True, if credential is configured for this connection.
	HasCredential bool `pulumi:"hasCredential"`
	// The last update timestamp of the connection.
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
	Name string `pulumi:"name"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionResult, error) {
			args := v.(LookupConnectionArgs)
			r, err := LookupConnection(ctx, &args, opts...)
			var s LookupConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectionResultOutput)
}

type LookupConnectionOutputArgs struct {
	ConnectionId pulumi.StringInput    `pulumi:"connectionId"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

// Cloud SQL properties.
func (o LookupConnectionResultOutput) CloudSql() CloudSqlPropertiesResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) CloudSqlPropertiesResponse { return v.CloudSql }).(CloudSqlPropertiesResponseOutput)
}

// The creation timestamp of the connection.
func (o LookupConnectionResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// User provided description.
func (o LookupConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

// User provided display name for the connection.
func (o LookupConnectionResultOutput) FriendlyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.FriendlyName }).(pulumi.StringOutput)
}

// True, if credential is configured for this connection.
func (o LookupConnectionResultOutput) HasCredential() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectionResult) bool { return v.HasCredential }).(pulumi.BoolOutput)
}

// The last update timestamp of the connection.
func (o LookupConnectionResultOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
func (o LookupConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
