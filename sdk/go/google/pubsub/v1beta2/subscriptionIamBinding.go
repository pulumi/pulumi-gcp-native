// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	iam "github.com/pulumi/pulumi-google-native/sdk/go/google/iam/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TODO
type SubscriptionIamBinding struct {
	pulumi.CustomResourceState

	// An IAM Condition for a given binding. See https://cloud.google.com/iam/docs/conditions-overview for additional details.
	Condition iam.ConditionPtrOutput `pulumi:"condition"`
	// The etag of the resource's IAM policy.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Identities that will be granted the privilege in role. Each entry can have one of the following values:
	//
	//  * user:{emailid}: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	//  * serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	//  * group:{emailid}: An email address that represents a Google group. For example, admins@example.com.
	//  * domain:{domain}: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The name of the resource to manage IAM policies for.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, a default will be supplied.
	Project pulumi.StringOutput `pulumi:"project"`
	// The role that should be applied. Only one `IamBinding` can be used per role.
	Role pulumi.StringOutput `pulumi:"role"`
}

// NewSubscriptionIamBinding registers a new resource with the given unique name, arguments, and options.
func NewSubscriptionIamBinding(ctx *pulumi.Context,
	name string, args *SubscriptionIamBindingArgs, opts ...pulumi.ResourceOption) (*SubscriptionIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource SubscriptionIamBinding
	err := ctx.RegisterResource("google-native:pubsub/v1beta2:SubscriptionIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriptionIamBinding gets an existing SubscriptionIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriptionIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionIamBindingState, opts ...pulumi.ResourceOption) (*SubscriptionIamBinding, error) {
	var resource SubscriptionIamBinding
	err := ctx.ReadResource("google-native:pubsub/v1beta2:SubscriptionIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubscriptionIamBinding resources.
type subscriptionIamBindingState struct {
}

type SubscriptionIamBindingState struct {
}

func (SubscriptionIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionIamBindingState)(nil)).Elem()
}

type subscriptionIamBindingArgs struct {
	// An IAM Condition for a given binding.
	Condition *iam.Condition `pulumi:"condition"`
	// Identities that will be granted the privilege in role. Each entry can have one of the following values:
	//
	//  * user:{emailid}: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	//  * serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	//  * group:{emailid}: An email address that represents a Google group. For example, admins@example.com.
	//  * domain:{domain}: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members []string `pulumi:"members"`
	// The name of the resource to manage IAM policies for.
	Name string `pulumi:"name"`
	// The role that should be applied. Only one `IamBinding` can be used per role.
	Role string `pulumi:"role"`
}

// The set of arguments for constructing a SubscriptionIamBinding resource.
type SubscriptionIamBindingArgs struct {
	// An IAM Condition for a given binding.
	Condition iam.ConditionPtrInput
	// Identities that will be granted the privilege in role. Each entry can have one of the following values:
	//
	//  * user:{emailid}: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
	//  * serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
	//  * group:{emailid}: An email address that represents a Google group. For example, admins@example.com.
	//  * domain:{domain}: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
	Members pulumi.StringArrayInput
	// The name of the resource to manage IAM policies for.
	Name pulumi.StringInput
	// The role that should be applied. Only one `IamBinding` can be used per role.
	Role pulumi.StringInput
}

func (SubscriptionIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionIamBindingArgs)(nil)).Elem()
}

type SubscriptionIamBindingInput interface {
	pulumi.Input

	ToSubscriptionIamBindingOutput() SubscriptionIamBindingOutput
	ToSubscriptionIamBindingOutputWithContext(ctx context.Context) SubscriptionIamBindingOutput
}

func (*SubscriptionIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIamBinding)(nil)).Elem()
}

func (i *SubscriptionIamBinding) ToSubscriptionIamBindingOutput() SubscriptionIamBindingOutput {
	return i.ToSubscriptionIamBindingOutputWithContext(context.Background())
}

func (i *SubscriptionIamBinding) ToSubscriptionIamBindingOutputWithContext(ctx context.Context) SubscriptionIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriptionIamBindingOutput)
}

type SubscriptionIamBindingOutput struct{ *pulumi.OutputState }

func (SubscriptionIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionIamBinding)(nil)).Elem()
}

func (o SubscriptionIamBindingOutput) ToSubscriptionIamBindingOutput() SubscriptionIamBindingOutput {
	return o
}

func (o SubscriptionIamBindingOutput) ToSubscriptionIamBindingOutputWithContext(ctx context.Context) SubscriptionIamBindingOutput {
	return o
}

// An IAM Condition for a given binding. See https://cloud.google.com/iam/docs/conditions-overview for additional details.
func (o SubscriptionIamBindingOutput) Condition() iam.ConditionPtrOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) iam.ConditionPtrOutput { return v.Condition }).(iam.ConditionPtrOutput)
}

// The etag of the resource's IAM policy.
func (o SubscriptionIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in role. Each entry can have one of the following values:
//
//   - user:{emailid}: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
//   - serviceAccount:{emailid}: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
//   - group:{emailid}: An email address that represents a Google group. For example, admins@example.com.
//   - domain:{domain}: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
func (o SubscriptionIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The name of the resource to manage IAM policies for.
func (o SubscriptionIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it is not provided, a default will be supplied.
func (o SubscriptionIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The role that should be applied. Only one `IamBinding` can be used per role.
func (o SubscriptionIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SubscriptionIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionIamBindingInput)(nil)).Elem(), &SubscriptionIamBinding{})
	pulumi.RegisterOutputType(SubscriptionIamBindingOutput{})
}
