// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates the given topic with the given name. See the [resource name rules] (https://cloud.google.com/pubsub/docs/pubsub-basics#resource_names).
type Topic struct {
	pulumi.CustomResourceState

	// Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
	KmsKeyName pulumi.StringOutput `pulumi:"kmsKeyName"`
	// Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration pulumi.StringOutput `pulumi:"messageRetentionDuration"`
	// Optional. Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
	MessageStoragePolicy MessageStoragePolicyResponseOutput `pulumi:"messageStoragePolicy"`
	// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// Optional. Settings for validating messages published against a schema.
	SchemaSettings SchemaSettingsResponseOutput `pulumi:"schemaSettings"`
	TopicId        pulumi.StringOutput          `pulumi:"topicId"`
}

// NewTopic registers a new resource with the given unique name, arguments, and options.
func NewTopic(ctx *pulumi.Context,
	name string, args *TopicArgs, opts ...pulumi.ResourceOption) (*Topic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TopicId == nil {
		return nil, errors.New("invalid value for required argument 'TopicId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"project",
		"topicId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Topic
	err := ctx.RegisterResource("google-native:pubsub/v1:Topic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopic gets an existing Topic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicState, opts ...pulumi.ResourceOption) (*Topic, error) {
	var resource Topic
	err := ctx.ReadResource("google-native:pubsub/v1:Topic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Topic resources.
type topicState struct {
}

type TopicState struct {
}

func (TopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*topicState)(nil)).Elem()
}

type topicArgs struct {
	// Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
	Labels map[string]string `pulumi:"labels"`
	// Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration *string `pulumi:"messageRetentionDuration"`
	// Optional. Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
	MessageStoragePolicy *MessageStoragePolicy `pulumi:"messageStoragePolicy"`
	// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
	SatisfiesPzs *bool `pulumi:"satisfiesPzs"`
	// Optional. Settings for validating messages published against a schema.
	SchemaSettings *SchemaSettings `pulumi:"schemaSettings"`
	TopicId        string          `pulumi:"topicId"`
}

// The set of arguments for constructing a Topic resource.
type TopicArgs struct {
	// Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
	KmsKeyName pulumi.StringPtrInput
	// Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
	Labels pulumi.StringMapInput
	// Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration pulumi.StringPtrInput
	// Optional. Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
	MessageStoragePolicy MessageStoragePolicyPtrInput
	// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
	SatisfiesPzs pulumi.BoolPtrInput
	// Optional. Settings for validating messages published against a schema.
	SchemaSettings SchemaSettingsPtrInput
	TopicId        pulumi.StringInput
}

func (TopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*topicArgs)(nil)).Elem()
}

type TopicInput interface {
	pulumi.Input

	ToTopicOutput() TopicOutput
	ToTopicOutputWithContext(ctx context.Context) TopicOutput
}

func (*Topic) ElementType() reflect.Type {
	return reflect.TypeOf((**Topic)(nil)).Elem()
}

func (i *Topic) ToTopicOutput() TopicOutput {
	return i.ToTopicOutputWithContext(context.Background())
}

func (i *Topic) ToTopicOutputWithContext(ctx context.Context) TopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicOutput)
}

type TopicOutput struct{ *pulumi.OutputState }

func (TopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Topic)(nil)).Elem()
}

func (o TopicOutput) ToTopicOutput() TopicOutput {
	return o
}

func (o TopicOutput) ToTopicOutputWithContext(ctx context.Context) TopicOutput {
	return o
}

// Optional. The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
func (o TopicOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringOutput { return v.KmsKeyName }).(pulumi.StringOutput)
}

// Optional. See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
func (o TopicOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
func (o TopicOutput) MessageRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringOutput { return v.MessageRetentionDuration }).(pulumi.StringOutput)
}

// Optional. Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
func (o TopicOutput) MessageStoragePolicy() MessageStoragePolicyResponseOutput {
	return o.ApplyT(func(v *Topic) MessageStoragePolicyResponseOutput { return v.MessageStoragePolicy }).(MessageStoragePolicyResponseOutput)
}

// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
func (o TopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TopicOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
func (o TopicOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *Topic) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Optional. Settings for validating messages published against a schema.
func (o TopicOutput) SchemaSettings() SchemaSettingsResponseOutput {
	return o.ApplyT(func(v *Topic) SchemaSettingsResponseOutput { return v.SchemaSettings }).(SchemaSettingsResponseOutput)
}

func (o TopicOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v *Topic) pulumi.StringOutput { return v.TopicId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TopicInput)(nil)).Elem(), &Topic{})
	pulumi.RegisterOutputType(TopicOutput{})
}
