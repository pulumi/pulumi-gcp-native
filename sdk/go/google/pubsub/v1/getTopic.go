// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the configuration of a topic.
func LookupTopic(ctx *pulumi.Context, args *LookupTopicArgs, opts ...pulumi.InvokeOption) (*LookupTopicResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTopicResult
	err := ctx.Invoke("google-native:pubsub/v1:getTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTopicArgs struct {
	Project *string `pulumi:"project"`
	TopicId string  `pulumi:"topicId"`
}

type LookupTopicResult struct {
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
	KmsKeyName string `pulumi:"kmsKeyName"`
	// See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
	Labels map[string]string `pulumi:"labels"`
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration string `pulumi:"messageRetentionDuration"`
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
	MessageStoragePolicy MessageStoragePolicyResponse `pulumi:"messageStoragePolicy"`
	// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
	Name string `pulumi:"name"`
	// Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
	SatisfiesPzs bool `pulumi:"satisfiesPzs"`
	// Settings for validating messages published against a schema.
	SchemaSettings SchemaSettingsResponse `pulumi:"schemaSettings"`
}

func LookupTopicOutput(ctx *pulumi.Context, args LookupTopicOutputArgs, opts ...pulumi.InvokeOption) LookupTopicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTopicResult, error) {
			args := v.(LookupTopicArgs)
			r, err := LookupTopic(ctx, &args, opts...)
			var s LookupTopicResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTopicResultOutput)
}

type LookupTopicOutputArgs struct {
	Project pulumi.StringPtrInput `pulumi:"project"`
	TopicId pulumi.StringInput    `pulumi:"topicId"`
}

func (LookupTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicArgs)(nil)).Elem()
}

type LookupTopicResultOutput struct{ *pulumi.OutputState }

func (LookupTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTopicResult)(nil)).Elem()
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutput() LookupTopicResultOutput {
	return o
}

func (o LookupTopicResultOutput) ToLookupTopicResultOutputWithContext(ctx context.Context) LookupTopicResultOutput {
	return o
}

func (o LookupTopicResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTopicResult] {
	return pulumix.Output[LookupTopicResult]{
		OutputState: o.OutputState,
	}
}

// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
func (o LookupTopicResultOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTopicResult) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

// See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
func (o LookupTopicResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTopicResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
func (o LookupTopicResultOutput) MessageRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTopicResult) string { return v.MessageRetentionDuration }).(pulumi.StringOutput)
}

// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
func (o LookupTopicResultOutput) MessageStoragePolicy() MessageStoragePolicyResponseOutput {
	return o.ApplyT(func(v LookupTopicResult) MessageStoragePolicyResponse { return v.MessageStoragePolicy }).(MessageStoragePolicyResponseOutput)
}

// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
func (o LookupTopicResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTopicResult) string { return v.Name }).(pulumi.StringOutput)
}

// Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
func (o LookupTopicResultOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTopicResult) bool { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Settings for validating messages published against a schema.
func (o LookupTopicResultOutput) SchemaSettings() SchemaSettingsResponseOutput {
	return o.ApplyT(func(v LookupTopicResult) SchemaSettingsResponse { return v.SchemaSettings }).(SchemaSettingsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTopicResultOutput{})
}
