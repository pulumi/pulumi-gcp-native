// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Optional. The dialect of the Cloud Spanner Database.
type DatabaseDatabaseDialect string

const (
	// Default value. This value will create a database with the GOOGLE_STANDARD_SQL dialect.
	DatabaseDatabaseDialectDatabaseDialectUnspecified = DatabaseDatabaseDialect("DATABASE_DIALECT_UNSPECIFIED")
	// Google standard SQL.
	DatabaseDatabaseDialectGoogleStandardSql = DatabaseDatabaseDialect("GOOGLE_STANDARD_SQL")
	// PostgreSQL supported SQL.
	DatabaseDatabaseDialectPostgresql = DatabaseDatabaseDialect("POSTGRESQL")
)

func (DatabaseDatabaseDialect) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDatabaseDialect)(nil)).Elem()
}

func (e DatabaseDatabaseDialect) ToDatabaseDatabaseDialectOutput() DatabaseDatabaseDialectOutput {
	return pulumi.ToOutput(e).(DatabaseDatabaseDialectOutput)
}

func (e DatabaseDatabaseDialect) ToDatabaseDatabaseDialectOutputWithContext(ctx context.Context) DatabaseDatabaseDialectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseDatabaseDialectOutput)
}

func (e DatabaseDatabaseDialect) ToDatabaseDatabaseDialectPtrOutput() DatabaseDatabaseDialectPtrOutput {
	return e.ToDatabaseDatabaseDialectPtrOutputWithContext(context.Background())
}

func (e DatabaseDatabaseDialect) ToDatabaseDatabaseDialectPtrOutputWithContext(ctx context.Context) DatabaseDatabaseDialectPtrOutput {
	return DatabaseDatabaseDialect(e).ToDatabaseDatabaseDialectOutputWithContext(ctx).ToDatabaseDatabaseDialectPtrOutputWithContext(ctx)
}

func (e DatabaseDatabaseDialect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDatabaseDialect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseDatabaseDialect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseDatabaseDialect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseDatabaseDialectOutput struct{ *pulumi.OutputState }

func (DatabaseDatabaseDialectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseDatabaseDialect)(nil)).Elem()
}

func (o DatabaseDatabaseDialectOutput) ToDatabaseDatabaseDialectOutput() DatabaseDatabaseDialectOutput {
	return o
}

func (o DatabaseDatabaseDialectOutput) ToDatabaseDatabaseDialectOutputWithContext(ctx context.Context) DatabaseDatabaseDialectOutput {
	return o
}

func (o DatabaseDatabaseDialectOutput) ToDatabaseDatabaseDialectPtrOutput() DatabaseDatabaseDialectPtrOutput {
	return o.ToDatabaseDatabaseDialectPtrOutputWithContext(context.Background())
}

func (o DatabaseDatabaseDialectOutput) ToDatabaseDatabaseDialectPtrOutputWithContext(ctx context.Context) DatabaseDatabaseDialectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseDatabaseDialect) *DatabaseDatabaseDialect {
		return &v
	}).(DatabaseDatabaseDialectPtrOutput)
}

func (o DatabaseDatabaseDialectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseDatabaseDialectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDatabaseDialect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseDatabaseDialectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDatabaseDialectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseDatabaseDialect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseDatabaseDialectPtrOutput struct{ *pulumi.OutputState }

func (DatabaseDatabaseDialectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseDatabaseDialect)(nil)).Elem()
}

func (o DatabaseDatabaseDialectPtrOutput) ToDatabaseDatabaseDialectPtrOutput() DatabaseDatabaseDialectPtrOutput {
	return o
}

func (o DatabaseDatabaseDialectPtrOutput) ToDatabaseDatabaseDialectPtrOutputWithContext(ctx context.Context) DatabaseDatabaseDialectPtrOutput {
	return o
}

func (o DatabaseDatabaseDialectPtrOutput) Elem() DatabaseDatabaseDialectOutput {
	return o.ApplyT(func(v *DatabaseDatabaseDialect) DatabaseDatabaseDialect {
		if v != nil {
			return *v
		}
		var ret DatabaseDatabaseDialect
		return ret
	}).(DatabaseDatabaseDialectOutput)
}

func (o DatabaseDatabaseDialectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseDatabaseDialectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseDatabaseDialect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatabaseDatabaseDialectInput is an input type that accepts DatabaseDatabaseDialectArgs and DatabaseDatabaseDialectOutput values.
// You can construct a concrete instance of `DatabaseDatabaseDialectInput` via:
//
//          DatabaseDatabaseDialectArgs{...}
type DatabaseDatabaseDialectInput interface {
	pulumi.Input

	ToDatabaseDatabaseDialectOutput() DatabaseDatabaseDialectOutput
	ToDatabaseDatabaseDialectOutputWithContext(context.Context) DatabaseDatabaseDialectOutput
}

var databaseDatabaseDialectPtrType = reflect.TypeOf((**DatabaseDatabaseDialect)(nil)).Elem()

type DatabaseDatabaseDialectPtrInput interface {
	pulumi.Input

	ToDatabaseDatabaseDialectPtrOutput() DatabaseDatabaseDialectPtrOutput
	ToDatabaseDatabaseDialectPtrOutputWithContext(context.Context) DatabaseDatabaseDialectPtrOutput
}

type databaseDatabaseDialectPtr string

func DatabaseDatabaseDialectPtr(v string) DatabaseDatabaseDialectPtrInput {
	return (*databaseDatabaseDialectPtr)(&v)
}

func (*databaseDatabaseDialectPtr) ElementType() reflect.Type {
	return databaseDatabaseDialectPtrType
}

func (in *databaseDatabaseDialectPtr) ToDatabaseDatabaseDialectPtrOutput() DatabaseDatabaseDialectPtrOutput {
	return pulumi.ToOutput(in).(DatabaseDatabaseDialectPtrOutput)
}

func (in *databaseDatabaseDialectPtr) ToDatabaseDatabaseDialectPtrOutputWithContext(ctx context.Context) DatabaseDatabaseDialectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseDatabaseDialectPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDatabaseDialectInput)(nil)).Elem(), DatabaseDatabaseDialect("DATABASE_DIALECT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseDatabaseDialectPtrInput)(nil)).Elem(), DatabaseDatabaseDialect("DATABASE_DIALECT_UNSPECIFIED"))
	pulumi.RegisterOutputType(DatabaseDatabaseDialectOutput{})
	pulumi.RegisterOutputType(DatabaseDatabaseDialectPtrOutput{})
}
