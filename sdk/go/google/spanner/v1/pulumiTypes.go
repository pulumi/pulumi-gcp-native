// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Autoscaling config for an instance.
type AutoscalingConfig struct {
	// Autoscaling limits for an instance.
	AutoscalingLimits AutoscalingLimits `pulumi:"autoscalingLimits"`
	// The autoscaling targets for an instance.
	AutoscalingTargets AutoscalingTargets `pulumi:"autoscalingTargets"`
}

// AutoscalingConfigInput is an input type that accepts AutoscalingConfigArgs and AutoscalingConfigOutput values.
// You can construct a concrete instance of `AutoscalingConfigInput` via:
//
//	AutoscalingConfigArgs{...}
type AutoscalingConfigInput interface {
	pulumi.Input

	ToAutoscalingConfigOutput() AutoscalingConfigOutput
	ToAutoscalingConfigOutputWithContext(context.Context) AutoscalingConfigOutput
}

// Autoscaling config for an instance.
type AutoscalingConfigArgs struct {
	// Autoscaling limits for an instance.
	AutoscalingLimits AutoscalingLimitsInput `pulumi:"autoscalingLimits"`
	// The autoscaling targets for an instance.
	AutoscalingTargets AutoscalingTargetsInput `pulumi:"autoscalingTargets"`
}

func (AutoscalingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfig)(nil)).Elem()
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigOutput() AutoscalingConfigOutput {
	return i.ToAutoscalingConfigOutputWithContext(context.Background())
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigOutputWithContext(ctx context.Context) AutoscalingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigOutput)
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return i.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i AutoscalingConfigArgs) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigOutput).ToAutoscalingConfigPtrOutputWithContext(ctx)
}

// AutoscalingConfigPtrInput is an input type that accepts AutoscalingConfigArgs, AutoscalingConfigPtr and AutoscalingConfigPtrOutput values.
// You can construct a concrete instance of `AutoscalingConfigPtrInput` via:
//
//	        AutoscalingConfigArgs{...}
//
//	or:
//
//	        nil
type AutoscalingConfigPtrInput interface {
	pulumi.Input

	ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput
	ToAutoscalingConfigPtrOutputWithContext(context.Context) AutoscalingConfigPtrOutput
}

type autoscalingConfigPtrType AutoscalingConfigArgs

func AutoscalingConfigPtr(v *AutoscalingConfigArgs) AutoscalingConfigPtrInput {
	return (*autoscalingConfigPtrType)(v)
}

func (*autoscalingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfig)(nil)).Elem()
}

func (i *autoscalingConfigPtrType) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return i.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (i *autoscalingConfigPtrType) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingConfigPtrOutput)
}

// Autoscaling config for an instance.
type AutoscalingConfigOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutput() AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigOutputWithContext(ctx context.Context) AutoscalingConfigOutput {
	return o
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return o.ToAutoscalingConfigPtrOutputWithContext(context.Background())
}

func (o AutoscalingConfigOutput) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingConfig) *AutoscalingConfig {
		return &v
	}).(AutoscalingConfigPtrOutput)
}

// Autoscaling limits for an instance.
func (o AutoscalingConfigOutput) AutoscalingLimits() AutoscalingLimitsOutput {
	return o.ApplyT(func(v AutoscalingConfig) AutoscalingLimits { return v.AutoscalingLimits }).(AutoscalingLimitsOutput)
}

// The autoscaling targets for an instance.
func (o AutoscalingConfigOutput) AutoscalingTargets() AutoscalingTargetsOutput {
	return o.ApplyT(func(v AutoscalingConfig) AutoscalingTargets { return v.AutoscalingTargets }).(AutoscalingTargetsOutput)
}

type AutoscalingConfigPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingConfig)(nil)).Elem()
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutput() AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) ToAutoscalingConfigPtrOutputWithContext(ctx context.Context) AutoscalingConfigPtrOutput {
	return o
}

func (o AutoscalingConfigPtrOutput) Elem() AutoscalingConfigOutput {
	return o.ApplyT(func(v *AutoscalingConfig) AutoscalingConfig {
		if v != nil {
			return *v
		}
		var ret AutoscalingConfig
		return ret
	}).(AutoscalingConfigOutput)
}

// Autoscaling limits for an instance.
func (o AutoscalingConfigPtrOutput) AutoscalingLimits() AutoscalingLimitsPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *AutoscalingLimits {
		if v == nil {
			return nil
		}
		return &v.AutoscalingLimits
	}).(AutoscalingLimitsPtrOutput)
}

// The autoscaling targets for an instance.
func (o AutoscalingConfigPtrOutput) AutoscalingTargets() AutoscalingTargetsPtrOutput {
	return o.ApplyT(func(v *AutoscalingConfig) *AutoscalingTargets {
		if v == nil {
			return nil
		}
		return &v.AutoscalingTargets
	}).(AutoscalingTargetsPtrOutput)
}

// Autoscaling config for an instance.
type AutoscalingConfigResponse struct {
	// Autoscaling limits for an instance.
	AutoscalingLimits AutoscalingLimitsResponse `pulumi:"autoscalingLimits"`
	// The autoscaling targets for an instance.
	AutoscalingTargets AutoscalingTargetsResponse `pulumi:"autoscalingTargets"`
}

// Autoscaling config for an instance.
type AutoscalingConfigResponseOutput struct{ *pulumi.OutputState }

func (AutoscalingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingConfigResponse)(nil)).Elem()
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponseOutput() AutoscalingConfigResponseOutput {
	return o
}

func (o AutoscalingConfigResponseOutput) ToAutoscalingConfigResponseOutputWithContext(ctx context.Context) AutoscalingConfigResponseOutput {
	return o
}

// Autoscaling limits for an instance.
func (o AutoscalingConfigResponseOutput) AutoscalingLimits() AutoscalingLimitsResponseOutput {
	return o.ApplyT(func(v AutoscalingConfigResponse) AutoscalingLimitsResponse { return v.AutoscalingLimits }).(AutoscalingLimitsResponseOutput)
}

// The autoscaling targets for an instance.
func (o AutoscalingConfigResponseOutput) AutoscalingTargets() AutoscalingTargetsResponseOutput {
	return o.ApplyT(func(v AutoscalingConfigResponse) AutoscalingTargetsResponse { return v.AutoscalingTargets }).(AutoscalingTargetsResponseOutput)
}

// The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
type AutoscalingLimits struct {
	// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
	MaxNodes *int `pulumi:"maxNodes"`
	// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
	MaxProcessingUnits *int `pulumi:"maxProcessingUnits"`
	// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
	MinNodes *int `pulumi:"minNodes"`
	// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
	MinProcessingUnits *int `pulumi:"minProcessingUnits"`
}

// AutoscalingLimitsInput is an input type that accepts AutoscalingLimitsArgs and AutoscalingLimitsOutput values.
// You can construct a concrete instance of `AutoscalingLimitsInput` via:
//
//	AutoscalingLimitsArgs{...}
type AutoscalingLimitsInput interface {
	pulumi.Input

	ToAutoscalingLimitsOutput() AutoscalingLimitsOutput
	ToAutoscalingLimitsOutputWithContext(context.Context) AutoscalingLimitsOutput
}

// The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
type AutoscalingLimitsArgs struct {
	// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
	MaxNodes pulumi.IntPtrInput `pulumi:"maxNodes"`
	// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
	MaxProcessingUnits pulumi.IntPtrInput `pulumi:"maxProcessingUnits"`
	// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
	MinNodes pulumi.IntPtrInput `pulumi:"minNodes"`
	// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
	MinProcessingUnits pulumi.IntPtrInput `pulumi:"minProcessingUnits"`
}

func (AutoscalingLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingLimits)(nil)).Elem()
}

func (i AutoscalingLimitsArgs) ToAutoscalingLimitsOutput() AutoscalingLimitsOutput {
	return i.ToAutoscalingLimitsOutputWithContext(context.Background())
}

func (i AutoscalingLimitsArgs) ToAutoscalingLimitsOutputWithContext(ctx context.Context) AutoscalingLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingLimitsOutput)
}

func (i AutoscalingLimitsArgs) ToAutoscalingLimitsPtrOutput() AutoscalingLimitsPtrOutput {
	return i.ToAutoscalingLimitsPtrOutputWithContext(context.Background())
}

func (i AutoscalingLimitsArgs) ToAutoscalingLimitsPtrOutputWithContext(ctx context.Context) AutoscalingLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingLimitsOutput).ToAutoscalingLimitsPtrOutputWithContext(ctx)
}

// AutoscalingLimitsPtrInput is an input type that accepts AutoscalingLimitsArgs, AutoscalingLimitsPtr and AutoscalingLimitsPtrOutput values.
// You can construct a concrete instance of `AutoscalingLimitsPtrInput` via:
//
//	        AutoscalingLimitsArgs{...}
//
//	or:
//
//	        nil
type AutoscalingLimitsPtrInput interface {
	pulumi.Input

	ToAutoscalingLimitsPtrOutput() AutoscalingLimitsPtrOutput
	ToAutoscalingLimitsPtrOutputWithContext(context.Context) AutoscalingLimitsPtrOutput
}

type autoscalingLimitsPtrType AutoscalingLimitsArgs

func AutoscalingLimitsPtr(v *AutoscalingLimitsArgs) AutoscalingLimitsPtrInput {
	return (*autoscalingLimitsPtrType)(v)
}

func (*autoscalingLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingLimits)(nil)).Elem()
}

func (i *autoscalingLimitsPtrType) ToAutoscalingLimitsPtrOutput() AutoscalingLimitsPtrOutput {
	return i.ToAutoscalingLimitsPtrOutputWithContext(context.Background())
}

func (i *autoscalingLimitsPtrType) ToAutoscalingLimitsPtrOutputWithContext(ctx context.Context) AutoscalingLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingLimitsPtrOutput)
}

// The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
type AutoscalingLimitsOutput struct{ *pulumi.OutputState }

func (AutoscalingLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingLimits)(nil)).Elem()
}

func (o AutoscalingLimitsOutput) ToAutoscalingLimitsOutput() AutoscalingLimitsOutput {
	return o
}

func (o AutoscalingLimitsOutput) ToAutoscalingLimitsOutputWithContext(ctx context.Context) AutoscalingLimitsOutput {
	return o
}

func (o AutoscalingLimitsOutput) ToAutoscalingLimitsPtrOutput() AutoscalingLimitsPtrOutput {
	return o.ToAutoscalingLimitsPtrOutputWithContext(context.Background())
}

func (o AutoscalingLimitsOutput) ToAutoscalingLimitsPtrOutputWithContext(ctx context.Context) AutoscalingLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingLimits) *AutoscalingLimits {
		return &v
	}).(AutoscalingLimitsPtrOutput)
}

// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
func (o AutoscalingLimitsOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingLimits) *int { return v.MaxNodes }).(pulumi.IntPtrOutput)
}

// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
func (o AutoscalingLimitsOutput) MaxProcessingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingLimits) *int { return v.MaxProcessingUnits }).(pulumi.IntPtrOutput)
}

// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
func (o AutoscalingLimitsOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingLimits) *int { return v.MinNodes }).(pulumi.IntPtrOutput)
}

// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
func (o AutoscalingLimitsOutput) MinProcessingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingLimits) *int { return v.MinProcessingUnits }).(pulumi.IntPtrOutput)
}

type AutoscalingLimitsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingLimits)(nil)).Elem()
}

func (o AutoscalingLimitsPtrOutput) ToAutoscalingLimitsPtrOutput() AutoscalingLimitsPtrOutput {
	return o
}

func (o AutoscalingLimitsPtrOutput) ToAutoscalingLimitsPtrOutputWithContext(ctx context.Context) AutoscalingLimitsPtrOutput {
	return o
}

func (o AutoscalingLimitsPtrOutput) Elem() AutoscalingLimitsOutput {
	return o.ApplyT(func(v *AutoscalingLimits) AutoscalingLimits {
		if v != nil {
			return *v
		}
		var ret AutoscalingLimits
		return ret
	}).(AutoscalingLimitsOutput)
}

// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
func (o AutoscalingLimitsPtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodes
	}).(pulumi.IntPtrOutput)
}

// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
func (o AutoscalingLimitsPtrOutput) MaxProcessingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MaxProcessingUnits
	}).(pulumi.IntPtrOutput)
}

// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
func (o AutoscalingLimitsPtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MinNodes
	}).(pulumi.IntPtrOutput)
}

// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
func (o AutoscalingLimitsPtrOutput) MinProcessingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingLimits) *int {
		if v == nil {
			return nil
		}
		return v.MinProcessingUnits
	}).(pulumi.IntPtrOutput)
}

// The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
type AutoscalingLimitsResponse struct {
	// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
	MaxNodes int `pulumi:"maxNodes"`
	// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
	MaxProcessingUnits int `pulumi:"maxProcessingUnits"`
	// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
	MinNodes int `pulumi:"minNodes"`
	// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
	MinProcessingUnits int `pulumi:"minProcessingUnits"`
}

// The autoscaling limits for the instance. Users can define the minimum and maximum compute capacity allocated to the instance, and the autoscaler will only scale within that range. Users can either use nodes or processing units to specify the limits, but should use the same unit to set both the min_limit and max_limit.
type AutoscalingLimitsResponseOutput struct{ *pulumi.OutputState }

func (AutoscalingLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingLimitsResponse)(nil)).Elem()
}

func (o AutoscalingLimitsResponseOutput) ToAutoscalingLimitsResponseOutput() AutoscalingLimitsResponseOutput {
	return o
}

func (o AutoscalingLimitsResponseOutput) ToAutoscalingLimitsResponseOutputWithContext(ctx context.Context) AutoscalingLimitsResponseOutput {
	return o
}

// Maximum number of nodes allocated to the instance. If set, this number should be greater than or equal to min_nodes.
func (o AutoscalingLimitsResponseOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingLimitsResponse) int { return v.MaxNodes }).(pulumi.IntOutput)
}

// Maximum number of processing units allocated to the instance. If set, this number should be multiples of 1000 and be greater than or equal to min_processing_units.
func (o AutoscalingLimitsResponseOutput) MaxProcessingUnits() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingLimitsResponse) int { return v.MaxProcessingUnits }).(pulumi.IntOutput)
}

// Minimum number of nodes allocated to the instance. If set, this number should be greater than or equal to 1.
func (o AutoscalingLimitsResponseOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingLimitsResponse) int { return v.MinNodes }).(pulumi.IntOutput)
}

// Minimum number of processing units allocated to the instance. If set, this number should be multiples of 1000.
func (o AutoscalingLimitsResponseOutput) MinProcessingUnits() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingLimitsResponse) int { return v.MinProcessingUnits }).(pulumi.IntOutput)
}

// The autoscaling targets for an instance.
type AutoscalingTargets struct {
	// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
	HighPriorityCpuUtilizationPercent int `pulumi:"highPriorityCpuUtilizationPercent"`
	// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
	StorageUtilizationPercent int `pulumi:"storageUtilizationPercent"`
}

// AutoscalingTargetsInput is an input type that accepts AutoscalingTargetsArgs and AutoscalingTargetsOutput values.
// You can construct a concrete instance of `AutoscalingTargetsInput` via:
//
//	AutoscalingTargetsArgs{...}
type AutoscalingTargetsInput interface {
	pulumi.Input

	ToAutoscalingTargetsOutput() AutoscalingTargetsOutput
	ToAutoscalingTargetsOutputWithContext(context.Context) AutoscalingTargetsOutput
}

// The autoscaling targets for an instance.
type AutoscalingTargetsArgs struct {
	// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
	HighPriorityCpuUtilizationPercent pulumi.IntInput `pulumi:"highPriorityCpuUtilizationPercent"`
	// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
	StorageUtilizationPercent pulumi.IntInput `pulumi:"storageUtilizationPercent"`
}

func (AutoscalingTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingTargets)(nil)).Elem()
}

func (i AutoscalingTargetsArgs) ToAutoscalingTargetsOutput() AutoscalingTargetsOutput {
	return i.ToAutoscalingTargetsOutputWithContext(context.Background())
}

func (i AutoscalingTargetsArgs) ToAutoscalingTargetsOutputWithContext(ctx context.Context) AutoscalingTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingTargetsOutput)
}

func (i AutoscalingTargetsArgs) ToAutoscalingTargetsPtrOutput() AutoscalingTargetsPtrOutput {
	return i.ToAutoscalingTargetsPtrOutputWithContext(context.Background())
}

func (i AutoscalingTargetsArgs) ToAutoscalingTargetsPtrOutputWithContext(ctx context.Context) AutoscalingTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingTargetsOutput).ToAutoscalingTargetsPtrOutputWithContext(ctx)
}

// AutoscalingTargetsPtrInput is an input type that accepts AutoscalingTargetsArgs, AutoscalingTargetsPtr and AutoscalingTargetsPtrOutput values.
// You can construct a concrete instance of `AutoscalingTargetsPtrInput` via:
//
//	        AutoscalingTargetsArgs{...}
//
//	or:
//
//	        nil
type AutoscalingTargetsPtrInput interface {
	pulumi.Input

	ToAutoscalingTargetsPtrOutput() AutoscalingTargetsPtrOutput
	ToAutoscalingTargetsPtrOutputWithContext(context.Context) AutoscalingTargetsPtrOutput
}

type autoscalingTargetsPtrType AutoscalingTargetsArgs

func AutoscalingTargetsPtr(v *AutoscalingTargetsArgs) AutoscalingTargetsPtrInput {
	return (*autoscalingTargetsPtrType)(v)
}

func (*autoscalingTargetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingTargets)(nil)).Elem()
}

func (i *autoscalingTargetsPtrType) ToAutoscalingTargetsPtrOutput() AutoscalingTargetsPtrOutput {
	return i.ToAutoscalingTargetsPtrOutputWithContext(context.Background())
}

func (i *autoscalingTargetsPtrType) ToAutoscalingTargetsPtrOutputWithContext(ctx context.Context) AutoscalingTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingTargetsPtrOutput)
}

// The autoscaling targets for an instance.
type AutoscalingTargetsOutput struct{ *pulumi.OutputState }

func (AutoscalingTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingTargets)(nil)).Elem()
}

func (o AutoscalingTargetsOutput) ToAutoscalingTargetsOutput() AutoscalingTargetsOutput {
	return o
}

func (o AutoscalingTargetsOutput) ToAutoscalingTargetsOutputWithContext(ctx context.Context) AutoscalingTargetsOutput {
	return o
}

func (o AutoscalingTargetsOutput) ToAutoscalingTargetsPtrOutput() AutoscalingTargetsPtrOutput {
	return o.ToAutoscalingTargetsPtrOutputWithContext(context.Background())
}

func (o AutoscalingTargetsOutput) ToAutoscalingTargetsPtrOutputWithContext(ctx context.Context) AutoscalingTargetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalingTargets) *AutoscalingTargets {
		return &v
	}).(AutoscalingTargetsPtrOutput)
}

// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
func (o AutoscalingTargetsOutput) HighPriorityCpuUtilizationPercent() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingTargets) int { return v.HighPriorityCpuUtilizationPercent }).(pulumi.IntOutput)
}

// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
func (o AutoscalingTargetsOutput) StorageUtilizationPercent() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingTargets) int { return v.StorageUtilizationPercent }).(pulumi.IntOutput)
}

type AutoscalingTargetsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingTargetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingTargets)(nil)).Elem()
}

func (o AutoscalingTargetsPtrOutput) ToAutoscalingTargetsPtrOutput() AutoscalingTargetsPtrOutput {
	return o
}

func (o AutoscalingTargetsPtrOutput) ToAutoscalingTargetsPtrOutputWithContext(ctx context.Context) AutoscalingTargetsPtrOutput {
	return o
}

func (o AutoscalingTargetsPtrOutput) Elem() AutoscalingTargetsOutput {
	return o.ApplyT(func(v *AutoscalingTargets) AutoscalingTargets {
		if v != nil {
			return *v
		}
		var ret AutoscalingTargets
		return ret
	}).(AutoscalingTargetsOutput)
}

// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
func (o AutoscalingTargetsPtrOutput) HighPriorityCpuUtilizationPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingTargets) *int {
		if v == nil {
			return nil
		}
		return &v.HighPriorityCpuUtilizationPercent
	}).(pulumi.IntPtrOutput)
}

// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
func (o AutoscalingTargetsPtrOutput) StorageUtilizationPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingTargets) *int {
		if v == nil {
			return nil
		}
		return &v.StorageUtilizationPercent
	}).(pulumi.IntPtrOutput)
}

// The autoscaling targets for an instance.
type AutoscalingTargetsResponse struct {
	// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
	HighPriorityCpuUtilizationPercent int `pulumi:"highPriorityCpuUtilizationPercent"`
	// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
	StorageUtilizationPercent int `pulumi:"storageUtilizationPercent"`
}

// The autoscaling targets for an instance.
type AutoscalingTargetsResponseOutput struct{ *pulumi.OutputState }

func (AutoscalingTargetsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingTargetsResponse)(nil)).Elem()
}

func (o AutoscalingTargetsResponseOutput) ToAutoscalingTargetsResponseOutput() AutoscalingTargetsResponseOutput {
	return o
}

func (o AutoscalingTargetsResponseOutput) ToAutoscalingTargetsResponseOutputWithContext(ctx context.Context) AutoscalingTargetsResponseOutput {
	return o
}

// The target high priority cpu utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 90] inclusive.
func (o AutoscalingTargetsResponseOutput) HighPriorityCpuUtilizationPercent() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingTargetsResponse) int { return v.HighPriorityCpuUtilizationPercent }).(pulumi.IntOutput)
}

// The target storage utilization percentage that the autoscaler should be trying to achieve for the instance. This number is on a scale from 0 (no utilization) to 100 (full utilization). The valid range is [10, 100] inclusive.
func (o AutoscalingTargetsResponseOutput) StorageUtilizationPercent() pulumi.IntOutput {
	return o.ApplyT(func(v AutoscalingTargetsResponse) int { return v.StorageUtilizationPercent }).(pulumi.IntOutput)
}

// Information about a backup.
type BackupInfoResponse struct {
	// Name of the backup.
	Backup string `pulumi:"backup"`
	// The time the CreateBackup request was received.
	CreateTime string `pulumi:"createTime"`
	// Name of the database the backup was created from.
	SourceDatabase string `pulumi:"sourceDatabase"`
	// The backup contains an externally consistent copy of `source_database` at the timestamp specified by `version_time`. If the CreateBackup request did not specify `version_time`, the `version_time` of the backup is equivalent to the `create_time`.
	VersionTime string `pulumi:"versionTime"`
}

// Information about a backup.
type BackupInfoResponseOutput struct{ *pulumi.OutputState }

func (BackupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInfoResponse)(nil)).Elem()
}

func (o BackupInfoResponseOutput) ToBackupInfoResponseOutput() BackupInfoResponseOutput {
	return o
}

func (o BackupInfoResponseOutput) ToBackupInfoResponseOutputWithContext(ctx context.Context) BackupInfoResponseOutput {
	return o
}

// Name of the backup.
func (o BackupInfoResponseOutput) Backup() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInfoResponse) string { return v.Backup }).(pulumi.StringOutput)
}

// The time the CreateBackup request was received.
func (o BackupInfoResponseOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInfoResponse) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Name of the database the backup was created from.
func (o BackupInfoResponseOutput) SourceDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInfoResponse) string { return v.SourceDatabase }).(pulumi.StringOutput)
}

// The backup contains an externally consistent copy of `source_database` at the timestamp specified by `version_time`. If the CreateBackup request did not specify `version_time`, the `version_time` of the backup is equivalent to the `create_time`.
func (o BackupInfoResponseOutput) VersionTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupInfoResponse) string { return v.VersionTime }).(pulumi.StringOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//	BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//	BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// Encryption configuration for a Cloud Spanner database.
type EncryptionConfig struct {
	// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
	KmsKeyName *string `pulumi:"kmsKeyName"`
}

// EncryptionConfigInput is an input type that accepts EncryptionConfigArgs and EncryptionConfigOutput values.
// You can construct a concrete instance of `EncryptionConfigInput` via:
//
//	EncryptionConfigArgs{...}
type EncryptionConfigInput interface {
	pulumi.Input

	ToEncryptionConfigOutput() EncryptionConfigOutput
	ToEncryptionConfigOutputWithContext(context.Context) EncryptionConfigOutput
}

// Encryption configuration for a Cloud Spanner database.
type EncryptionConfigArgs struct {
	// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
	KmsKeyName pulumi.StringPtrInput `pulumi:"kmsKeyName"`
}

func (EncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return i.ToEncryptionConfigOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput)
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionConfigArgs) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigOutput).ToEncryptionConfigPtrOutputWithContext(ctx)
}

// EncryptionConfigPtrInput is an input type that accepts EncryptionConfigArgs, EncryptionConfigPtr and EncryptionConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionConfigPtrInput` via:
//
//	        EncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type EncryptionConfigPtrInput interface {
	pulumi.Input

	ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput
	ToEncryptionConfigPtrOutputWithContext(context.Context) EncryptionConfigPtrOutput
}

type encryptionConfigPtrType EncryptionConfigArgs

func EncryptionConfigPtr(v *EncryptionConfigArgs) EncryptionConfigPtrInput {
	return (*encryptionConfigPtrType)(v)
}

func (*encryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return i.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionConfigPtrType) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionConfigPtrOutput)
}

// Encryption configuration for a Cloud Spanner database.
type EncryptionConfigOutput struct{ *pulumi.OutputState }

func (EncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutput() EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigOutputWithContext(ctx context.Context) EncryptionConfigOutput {
	return o
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o.ToEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionConfigOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionConfig) *EncryptionConfig {
		return &v
	}).(EncryptionConfigPtrOutput)
}

// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
func (o EncryptionConfigOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionConfig) *string { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

type EncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionConfig)(nil)).Elem()
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutput() EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) ToEncryptionConfigPtrOutputWithContext(ctx context.Context) EncryptionConfigPtrOutput {
	return o
}

func (o EncryptionConfigPtrOutput) Elem() EncryptionConfigOutput {
	return o.ApplyT(func(v *EncryptionConfig) EncryptionConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionConfig
		return ret
	}).(EncryptionConfigOutput)
}

// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
func (o EncryptionConfigPtrOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyName
	}).(pulumi.StringPtrOutput)
}

// Encryption configuration for a Cloud Spanner database.
type EncryptionConfigResponse struct {
	// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
	KmsKeyName string `pulumi:"kmsKeyName"`
}

// Encryption configuration for a Cloud Spanner database.
type EncryptionConfigResponseOutput struct{ *pulumi.OutputState }

func (EncryptionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionConfigResponse)(nil)).Elem()
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutput() EncryptionConfigResponseOutput {
	return o
}

func (o EncryptionConfigResponseOutput) ToEncryptionConfigResponseOutputWithContext(ctx context.Context) EncryptionConfigResponseOutput {
	return o
}

// The Cloud KMS key to be used for encrypting and decrypting the database. Values are of the form `projects//locations//keyRings//cryptoKeys/`.
func (o EncryptionConfigResponseOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionConfigResponse) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

// Encryption information for a Cloud Spanner database or backup.
type EncryptionInfoResponse struct {
	// If present, the status of a recent encrypt/decrypt call on underlying data for this database or backup. Regardless of status, data is always encrypted at rest.
	EncryptionStatus StatusResponse `pulumi:"encryptionStatus"`
	// The type of encryption.
	EncryptionType string `pulumi:"encryptionType"`
	// A Cloud KMS key version that is being used to protect the database or backup.
	KmsKeyVersion string `pulumi:"kmsKeyVersion"`
}

// Encryption information for a Cloud Spanner database or backup.
type EncryptionInfoResponseOutput struct{ *pulumi.OutputState }

func (EncryptionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionInfoResponse)(nil)).Elem()
}

func (o EncryptionInfoResponseOutput) ToEncryptionInfoResponseOutput() EncryptionInfoResponseOutput {
	return o
}

func (o EncryptionInfoResponseOutput) ToEncryptionInfoResponseOutputWithContext(ctx context.Context) EncryptionInfoResponseOutput {
	return o
}

// If present, the status of a recent encrypt/decrypt call on underlying data for this database or backup. Regardless of status, data is always encrypted at rest.
func (o EncryptionInfoResponseOutput) EncryptionStatus() StatusResponseOutput {
	return o.ApplyT(func(v EncryptionInfoResponse) StatusResponse { return v.EncryptionStatus }).(StatusResponseOutput)
}

// The type of encryption.
func (o EncryptionInfoResponseOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionInfoResponse) string { return v.EncryptionType }).(pulumi.StringOutput)
}

// A Cloud KMS key version that is being used to protect the database or backup.
func (o EncryptionInfoResponseOutput) KmsKeyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionInfoResponse) string { return v.KmsKeyVersion }).(pulumi.StringOutput)
}

type EncryptionInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (EncryptionInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EncryptionInfoResponse)(nil)).Elem()
}

func (o EncryptionInfoResponseArrayOutput) ToEncryptionInfoResponseArrayOutput() EncryptionInfoResponseArrayOutput {
	return o
}

func (o EncryptionInfoResponseArrayOutput) ToEncryptionInfoResponseArrayOutputWithContext(ctx context.Context) EncryptionInfoResponseArrayOutput {
	return o
}

func (o EncryptionInfoResponseArrayOutput) Index(i pulumi.IntInput) EncryptionInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EncryptionInfoResponse {
		return vs[0].([]EncryptionInfoResponse)[vs[1].(int)]
	}).(EncryptionInfoResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//	ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//	        ExprArgs{...}
//
//	or:
//
//	        nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.
type FreeInstanceMetadata struct {
	// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
	ExpireBehavior *FreeInstanceMetadataExpireBehavior `pulumi:"expireBehavior"`
}

// FreeInstanceMetadataInput is an input type that accepts FreeInstanceMetadataArgs and FreeInstanceMetadataOutput values.
// You can construct a concrete instance of `FreeInstanceMetadataInput` via:
//
//	FreeInstanceMetadataArgs{...}
type FreeInstanceMetadataInput interface {
	pulumi.Input

	ToFreeInstanceMetadataOutput() FreeInstanceMetadataOutput
	ToFreeInstanceMetadataOutputWithContext(context.Context) FreeInstanceMetadataOutput
}

// Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.
type FreeInstanceMetadataArgs struct {
	// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
	ExpireBehavior FreeInstanceMetadataExpireBehaviorPtrInput `pulumi:"expireBehavior"`
}

func (FreeInstanceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FreeInstanceMetadata)(nil)).Elem()
}

func (i FreeInstanceMetadataArgs) ToFreeInstanceMetadataOutput() FreeInstanceMetadataOutput {
	return i.ToFreeInstanceMetadataOutputWithContext(context.Background())
}

func (i FreeInstanceMetadataArgs) ToFreeInstanceMetadataOutputWithContext(ctx context.Context) FreeInstanceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreeInstanceMetadataOutput)
}

func (i FreeInstanceMetadataArgs) ToFreeInstanceMetadataPtrOutput() FreeInstanceMetadataPtrOutput {
	return i.ToFreeInstanceMetadataPtrOutputWithContext(context.Background())
}

func (i FreeInstanceMetadataArgs) ToFreeInstanceMetadataPtrOutputWithContext(ctx context.Context) FreeInstanceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreeInstanceMetadataOutput).ToFreeInstanceMetadataPtrOutputWithContext(ctx)
}

// FreeInstanceMetadataPtrInput is an input type that accepts FreeInstanceMetadataArgs, FreeInstanceMetadataPtr and FreeInstanceMetadataPtrOutput values.
// You can construct a concrete instance of `FreeInstanceMetadataPtrInput` via:
//
//	        FreeInstanceMetadataArgs{...}
//
//	or:
//
//	        nil
type FreeInstanceMetadataPtrInput interface {
	pulumi.Input

	ToFreeInstanceMetadataPtrOutput() FreeInstanceMetadataPtrOutput
	ToFreeInstanceMetadataPtrOutputWithContext(context.Context) FreeInstanceMetadataPtrOutput
}

type freeInstanceMetadataPtrType FreeInstanceMetadataArgs

func FreeInstanceMetadataPtr(v *FreeInstanceMetadataArgs) FreeInstanceMetadataPtrInput {
	return (*freeInstanceMetadataPtrType)(v)
}

func (*freeInstanceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FreeInstanceMetadata)(nil)).Elem()
}

func (i *freeInstanceMetadataPtrType) ToFreeInstanceMetadataPtrOutput() FreeInstanceMetadataPtrOutput {
	return i.ToFreeInstanceMetadataPtrOutputWithContext(context.Background())
}

func (i *freeInstanceMetadataPtrType) ToFreeInstanceMetadataPtrOutputWithContext(ctx context.Context) FreeInstanceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FreeInstanceMetadataPtrOutput)
}

// Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.
type FreeInstanceMetadataOutput struct{ *pulumi.OutputState }

func (FreeInstanceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreeInstanceMetadata)(nil)).Elem()
}

func (o FreeInstanceMetadataOutput) ToFreeInstanceMetadataOutput() FreeInstanceMetadataOutput {
	return o
}

func (o FreeInstanceMetadataOutput) ToFreeInstanceMetadataOutputWithContext(ctx context.Context) FreeInstanceMetadataOutput {
	return o
}

func (o FreeInstanceMetadataOutput) ToFreeInstanceMetadataPtrOutput() FreeInstanceMetadataPtrOutput {
	return o.ToFreeInstanceMetadataPtrOutputWithContext(context.Background())
}

func (o FreeInstanceMetadataOutput) ToFreeInstanceMetadataPtrOutputWithContext(ctx context.Context) FreeInstanceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FreeInstanceMetadata) *FreeInstanceMetadata {
		return &v
	}).(FreeInstanceMetadataPtrOutput)
}

// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
func (o FreeInstanceMetadataOutput) ExpireBehavior() FreeInstanceMetadataExpireBehaviorPtrOutput {
	return o.ApplyT(func(v FreeInstanceMetadata) *FreeInstanceMetadataExpireBehavior { return v.ExpireBehavior }).(FreeInstanceMetadataExpireBehaviorPtrOutput)
}

type FreeInstanceMetadataPtrOutput struct{ *pulumi.OutputState }

func (FreeInstanceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FreeInstanceMetadata)(nil)).Elem()
}

func (o FreeInstanceMetadataPtrOutput) ToFreeInstanceMetadataPtrOutput() FreeInstanceMetadataPtrOutput {
	return o
}

func (o FreeInstanceMetadataPtrOutput) ToFreeInstanceMetadataPtrOutputWithContext(ctx context.Context) FreeInstanceMetadataPtrOutput {
	return o
}

func (o FreeInstanceMetadataPtrOutput) Elem() FreeInstanceMetadataOutput {
	return o.ApplyT(func(v *FreeInstanceMetadata) FreeInstanceMetadata {
		if v != nil {
			return *v
		}
		var ret FreeInstanceMetadata
		return ret
	}).(FreeInstanceMetadataOutput)
}

// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
func (o FreeInstanceMetadataPtrOutput) ExpireBehavior() FreeInstanceMetadataExpireBehaviorPtrOutput {
	return o.ApplyT(func(v *FreeInstanceMetadata) *FreeInstanceMetadataExpireBehavior {
		if v == nil {
			return nil
		}
		return v.ExpireBehavior
	}).(FreeInstanceMetadataExpireBehaviorPtrOutput)
}

// Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.
type FreeInstanceMetadataResponse struct {
	// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
	ExpireBehavior string `pulumi:"expireBehavior"`
	// Timestamp after which the instance will either be upgraded or scheduled for deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling the free instance for deletion. This timestamp is set during the creation of a free instance.
	ExpireTime string `pulumi:"expireTime"`
	// If present, the timestamp at which the free instance was upgraded to a provisioned instance.
	UpgradeTime string `pulumi:"upgradeTime"`
}

// Free instance specific metadata that is kept even after an instance has been upgraded for tracking purposes.
type FreeInstanceMetadataResponseOutput struct{ *pulumi.OutputState }

func (FreeInstanceMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FreeInstanceMetadataResponse)(nil)).Elem()
}

func (o FreeInstanceMetadataResponseOutput) ToFreeInstanceMetadataResponseOutput() FreeInstanceMetadataResponseOutput {
	return o
}

func (o FreeInstanceMetadataResponseOutput) ToFreeInstanceMetadataResponseOutputWithContext(ctx context.Context) FreeInstanceMetadataResponseOutput {
	return o
}

// Specifies the expiration behavior of a free instance. The default of ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during or after creation, and before expiration.
func (o FreeInstanceMetadataResponseOutput) ExpireBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v FreeInstanceMetadataResponse) string { return v.ExpireBehavior }).(pulumi.StringOutput)
}

// Timestamp after which the instance will either be upgraded or scheduled for deletion after a grace period. ExpireBehavior is used to choose between upgrading or scheduling the free instance for deletion. This timestamp is set during the creation of a free instance.
func (o FreeInstanceMetadataResponseOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v FreeInstanceMetadataResponse) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// If present, the timestamp at which the free instance was upgraded to a provisioned instance.
func (o FreeInstanceMetadataResponseOutput) UpgradeTime() pulumi.StringOutput {
	return o.ApplyT(func(v FreeInstanceMetadataResponse) string { return v.UpgradeTime }).(pulumi.StringOutput)
}

type ReplicaInfo struct {
	// If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
	DefaultLeaderLocation *bool `pulumi:"defaultLeaderLocation"`
	// The location of the serving resources, e.g. "us-central1".
	Location *string `pulumi:"location"`
	// The type of replica.
	Type *ReplicaInfoType `pulumi:"type"`
}

// ReplicaInfoInput is an input type that accepts ReplicaInfoArgs and ReplicaInfoOutput values.
// You can construct a concrete instance of `ReplicaInfoInput` via:
//
//	ReplicaInfoArgs{...}
type ReplicaInfoInput interface {
	pulumi.Input

	ToReplicaInfoOutput() ReplicaInfoOutput
	ToReplicaInfoOutputWithContext(context.Context) ReplicaInfoOutput
}

type ReplicaInfoArgs struct {
	// If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
	DefaultLeaderLocation pulumi.BoolPtrInput `pulumi:"defaultLeaderLocation"`
	// The location of the serving resources, e.g. "us-central1".
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The type of replica.
	Type ReplicaInfoTypePtrInput `pulumi:"type"`
}

func (ReplicaInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaInfo)(nil)).Elem()
}

func (i ReplicaInfoArgs) ToReplicaInfoOutput() ReplicaInfoOutput {
	return i.ToReplicaInfoOutputWithContext(context.Background())
}

func (i ReplicaInfoArgs) ToReplicaInfoOutputWithContext(ctx context.Context) ReplicaInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaInfoOutput)
}

// ReplicaInfoArrayInput is an input type that accepts ReplicaInfoArray and ReplicaInfoArrayOutput values.
// You can construct a concrete instance of `ReplicaInfoArrayInput` via:
//
//	ReplicaInfoArray{ ReplicaInfoArgs{...} }
type ReplicaInfoArrayInput interface {
	pulumi.Input

	ToReplicaInfoArrayOutput() ReplicaInfoArrayOutput
	ToReplicaInfoArrayOutputWithContext(context.Context) ReplicaInfoArrayOutput
}

type ReplicaInfoArray []ReplicaInfoInput

func (ReplicaInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaInfo)(nil)).Elem()
}

func (i ReplicaInfoArray) ToReplicaInfoArrayOutput() ReplicaInfoArrayOutput {
	return i.ToReplicaInfoArrayOutputWithContext(context.Background())
}

func (i ReplicaInfoArray) ToReplicaInfoArrayOutputWithContext(ctx context.Context) ReplicaInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaInfoArrayOutput)
}

type ReplicaInfoOutput struct{ *pulumi.OutputState }

func (ReplicaInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaInfo)(nil)).Elem()
}

func (o ReplicaInfoOutput) ToReplicaInfoOutput() ReplicaInfoOutput {
	return o
}

func (o ReplicaInfoOutput) ToReplicaInfoOutputWithContext(ctx context.Context) ReplicaInfoOutput {
	return o
}

// If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
func (o ReplicaInfoOutput) DefaultLeaderLocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicaInfo) *bool { return v.DefaultLeaderLocation }).(pulumi.BoolPtrOutput)
}

// The location of the serving resources, e.g. "us-central1".
func (o ReplicaInfoOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicaInfo) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The type of replica.
func (o ReplicaInfoOutput) Type() ReplicaInfoTypePtrOutput {
	return o.ApplyT(func(v ReplicaInfo) *ReplicaInfoType { return v.Type }).(ReplicaInfoTypePtrOutput)
}

type ReplicaInfoArrayOutput struct{ *pulumi.OutputState }

func (ReplicaInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaInfo)(nil)).Elem()
}

func (o ReplicaInfoArrayOutput) ToReplicaInfoArrayOutput() ReplicaInfoArrayOutput {
	return o
}

func (o ReplicaInfoArrayOutput) ToReplicaInfoArrayOutputWithContext(ctx context.Context) ReplicaInfoArrayOutput {
	return o
}

func (o ReplicaInfoArrayOutput) Index(i pulumi.IntInput) ReplicaInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaInfo {
		return vs[0].([]ReplicaInfo)[vs[1].(int)]
	}).(ReplicaInfoOutput)
}

type ReplicaInfoResponse struct {
	// If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
	DefaultLeaderLocation bool `pulumi:"defaultLeaderLocation"`
	// The location of the serving resources, e.g. "us-central1".
	Location string `pulumi:"location"`
	// The type of replica.
	Type string `pulumi:"type"`
}

type ReplicaInfoResponseOutput struct{ *pulumi.OutputState }

func (ReplicaInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicaInfoResponse)(nil)).Elem()
}

func (o ReplicaInfoResponseOutput) ToReplicaInfoResponseOutput() ReplicaInfoResponseOutput {
	return o
}

func (o ReplicaInfoResponseOutput) ToReplicaInfoResponseOutputWithContext(ctx context.Context) ReplicaInfoResponseOutput {
	return o
}

// If true, this location is designated as the default leader location where leader replicas are placed. See the [region types documentation](https://cloud.google.com/spanner/docs/instances#region_types) for more details.
func (o ReplicaInfoResponseOutput) DefaultLeaderLocation() pulumi.BoolOutput {
	return o.ApplyT(func(v ReplicaInfoResponse) bool { return v.DefaultLeaderLocation }).(pulumi.BoolOutput)
}

// The location of the serving resources, e.g. "us-central1".
func (o ReplicaInfoResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaInfoResponse) string { return v.Location }).(pulumi.StringOutput)
}

// The type of replica.
func (o ReplicaInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicaInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicaInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ReplicaInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicaInfoResponse)(nil)).Elem()
}

func (o ReplicaInfoResponseArrayOutput) ToReplicaInfoResponseArrayOutput() ReplicaInfoResponseArrayOutput {
	return o
}

func (o ReplicaInfoResponseArrayOutput) ToReplicaInfoResponseArrayOutputWithContext(ctx context.Context) ReplicaInfoResponseArrayOutput {
	return o
}

func (o ReplicaInfoResponseArrayOutput) Index(i pulumi.IntInput) ReplicaInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicaInfoResponse {
		return vs[0].([]ReplicaInfoResponse)[vs[1].(int)]
	}).(ReplicaInfoResponseOutput)
}

// Information about the database restore.
type RestoreInfoResponse struct {
	// Information about the backup used to restore the database. The backup may no longer exist.
	BackupInfo BackupInfoResponse `pulumi:"backupInfo"`
	// The type of the restore source.
	SourceType string `pulumi:"sourceType"`
}

// Information about the database restore.
type RestoreInfoResponseOutput struct{ *pulumi.OutputState }

func (RestoreInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreInfoResponse)(nil)).Elem()
}

func (o RestoreInfoResponseOutput) ToRestoreInfoResponseOutput() RestoreInfoResponseOutput {
	return o
}

func (o RestoreInfoResponseOutput) ToRestoreInfoResponseOutputWithContext(ctx context.Context) RestoreInfoResponseOutput {
	return o
}

// Information about the backup used to restore the database. The backup may no longer exist.
func (o RestoreInfoResponseOutput) BackupInfo() BackupInfoResponseOutput {
	return o.ApplyT(func(v RestoreInfoResponse) BackupInfoResponse { return v.BackupInfo }).(BackupInfoResponseOutput)
}

// The type of the restore source.
func (o RestoreInfoResponseOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreInfoResponse) string { return v.SourceType }).(pulumi.StringOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]interface{} `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message string `pulumi:"message"`
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o StatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v StatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o StatusResponseOutput) Details() pulumi.MapArrayOutput {
	return o.ApplyT(func(v StatusResponse) []map[string]interface{} { return v.Details }).(pulumi.MapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o StatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingConfigInput)(nil)).Elem(), AutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingConfigPtrInput)(nil)).Elem(), AutoscalingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingLimitsInput)(nil)).Elem(), AutoscalingLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingLimitsPtrInput)(nil)).Elem(), AutoscalingLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingTargetsInput)(nil)).Elem(), AutoscalingTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalingTargetsPtrInput)(nil)).Elem(), AutoscalingTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionConfigInput)(nil)).Elem(), EncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionConfigPtrInput)(nil)).Elem(), EncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreeInstanceMetadataInput)(nil)).Elem(), FreeInstanceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FreeInstanceMetadataPtrInput)(nil)).Elem(), FreeInstanceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaInfoInput)(nil)).Elem(), ReplicaInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaInfoArrayInput)(nil)).Elem(), ReplicaInfoArray{})
	pulumi.RegisterOutputType(AutoscalingConfigOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingConfigResponseOutput{})
	pulumi.RegisterOutputType(AutoscalingLimitsOutput{})
	pulumi.RegisterOutputType(AutoscalingLimitsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingLimitsResponseOutput{})
	pulumi.RegisterOutputType(AutoscalingTargetsOutput{})
	pulumi.RegisterOutputType(AutoscalingTargetsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalingTargetsResponseOutput{})
	pulumi.RegisterOutputType(BackupInfoResponseOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(EncryptionConfigOutput{})
	pulumi.RegisterOutputType(EncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionConfigResponseOutput{})
	pulumi.RegisterOutputType(EncryptionInfoResponseOutput{})
	pulumi.RegisterOutputType(EncryptionInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(FreeInstanceMetadataOutput{})
	pulumi.RegisterOutputType(FreeInstanceMetadataPtrOutput{})
	pulumi.RegisterOutputType(FreeInstanceMetadataResponseOutput{})
	pulumi.RegisterOutputType(ReplicaInfoOutput{})
	pulumi.RegisterOutputType(ReplicaInfoArrayOutput{})
	pulumi.RegisterOutputType(ReplicaInfoResponseOutput{})
	pulumi.RegisterOutputType(ReplicaInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(RestoreInfoResponseOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
}
