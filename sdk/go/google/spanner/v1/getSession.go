// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a session. Returns `NOT_FOUND` if the session does not exist. This is mainly useful for determining whether a session is still alive.
func LookupSession(ctx *pulumi.Context, args *LookupSessionArgs, opts ...pulumi.InvokeOption) (*LookupSessionResult, error) {
	var rv LookupSessionResult
	err := ctx.Invoke("google-native:spanner/v1:getSession", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSessionArgs struct {
	DatabaseId string  `pulumi:"databaseId"`
	InstanceId string  `pulumi:"instanceId"`
	Project    *string `pulumi:"project"`
	SessionId  string  `pulumi:"sessionId"`
}

type LookupSessionResult struct {
	// The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.
	ApproximateLastUseTime string `pulumi:"approximateLastUseTime"`
	// The timestamp when the session is created.
	CreateTime string `pulumi:"createTime"`
	// The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.
	Labels map[string]string `pulumi:"labels"`
	// The name of the session. This is always system-assigned.
	Name string `pulumi:"name"`
}

func LookupSessionOutput(ctx *pulumi.Context, args LookupSessionOutputArgs, opts ...pulumi.InvokeOption) LookupSessionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSessionResult, error) {
			args := v.(LookupSessionArgs)
			r, err := LookupSession(ctx, &args, opts...)
			var s LookupSessionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSessionResultOutput)
}

type LookupSessionOutputArgs struct {
	DatabaseId pulumi.StringInput    `pulumi:"databaseId"`
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	SessionId  pulumi.StringInput    `pulumi:"sessionId"`
}

func (LookupSessionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionArgs)(nil)).Elem()
}

type LookupSessionResultOutput struct{ *pulumi.OutputState }

func (LookupSessionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSessionResult)(nil)).Elem()
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutput() LookupSessionResultOutput {
	return o
}

func (o LookupSessionResultOutput) ToLookupSessionResultOutputWithContext(ctx context.Context) LookupSessionResultOutput {
	return o
}

// The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.
func (o LookupSessionResultOutput) ApproximateLastUseTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.ApproximateLastUseTime }).(pulumi.StringOutput)
}

// The timestamp when the session is created.
func (o LookupSessionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.
func (o LookupSessionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSessionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the session. This is always system-assigned.
func (o LookupSessionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSessionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSessionResultOutput{})
}
