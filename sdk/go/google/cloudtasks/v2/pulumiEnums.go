// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The HTTP method to use for the request. The default is POST. The app's request handler for the task's target URL must be able to handle HTTP requests with this http_method, otherwise the task attempt fails with error code 405 (Method Not Allowed). See [Writing a push task request handler](https://cloud.google.com/appengine/docs/java/taskqueue/push/creating-handlers#writing_a_push_task_request_handler) and the App Engine documentation for your runtime on [How Requests are Handled](https://cloud.google.com/appengine/docs/standard/python3/how-requests-are-handled).
type AppEngineHttpRequestHttpMethod pulumi.String

const (
	// HTTP method unspecified
	AppEngineHttpRequestHttpMethodHttpMethodUnspecified = AppEngineHttpRequestHttpMethod("HTTP_METHOD_UNSPECIFIED")
	// HTTP POST
	AppEngineHttpRequestHttpMethodPost = AppEngineHttpRequestHttpMethod("POST")
	// HTTP GET
	AppEngineHttpRequestHttpMethodGet = AppEngineHttpRequestHttpMethod("GET")
	// HTTP HEAD
	AppEngineHttpRequestHttpMethodHead = AppEngineHttpRequestHttpMethod("HEAD")
	// HTTP PUT
	AppEngineHttpRequestHttpMethodPut = AppEngineHttpRequestHttpMethod("PUT")
	// HTTP DELETE
	AppEngineHttpRequestHttpMethodDelete = AppEngineHttpRequestHttpMethod("DELETE")
	// HTTP PATCH
	AppEngineHttpRequestHttpMethodPatch = AppEngineHttpRequestHttpMethod("PATCH")
	// HTTP OPTIONS
	AppEngineHttpRequestHttpMethodOptions = AppEngineHttpRequestHttpMethod("OPTIONS")
)

func (AppEngineHttpRequestHttpMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AppEngineHttpRequestHttpMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppEngineHttpRequestHttpMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppEngineHttpRequestHttpMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppEngineHttpRequestHttpMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The HTTP method to use for the request. The default is POST.
type HttpRequestHttpMethod pulumi.String

const (
	// HTTP method unspecified
	HttpRequestHttpMethodHttpMethodUnspecified = HttpRequestHttpMethod("HTTP_METHOD_UNSPECIFIED")
	// HTTP POST
	HttpRequestHttpMethodPost = HttpRequestHttpMethod("POST")
	// HTTP GET
	HttpRequestHttpMethodGet = HttpRequestHttpMethod("GET")
	// HTTP HEAD
	HttpRequestHttpMethodHead = HttpRequestHttpMethod("HEAD")
	// HTTP PUT
	HttpRequestHttpMethodPut = HttpRequestHttpMethod("PUT")
	// HTTP DELETE
	HttpRequestHttpMethodDelete = HttpRequestHttpMethod("DELETE")
	// HTTP PATCH
	HttpRequestHttpMethodPatch = HttpRequestHttpMethod("PATCH")
	// HTTP OPTIONS
	HttpRequestHttpMethodOptions = HttpRequestHttpMethod("OPTIONS")
)

func (HttpRequestHttpMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e HttpRequestHttpMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRequestHttpMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRequestHttpMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HttpRequestHttpMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.
type QueueStateEnum pulumi.String

const (
	// Unspecified state.
	QueueStateEnumStateUnspecified = QueueStateEnum("STATE_UNSPECIFIED")
	// The queue is running. Tasks can be dispatched. If the queue was created using Cloud Tasks and the queue has had no activity (method calls or task dispatches) for 30 days, the queue may take a few minutes to re-activate. Some method calls may return NOT_FOUND and tasks may not be dispatched for a few minutes until the queue has been re-activated.
	QueueStateEnumRunning = QueueStateEnum("RUNNING")
	// Tasks are paused by the user. If the queue is paused then Cloud Tasks will stop delivering tasks from it, but more tasks can still be added to it by the user.
	QueueStateEnumPaused = QueueStateEnum("PAUSED")
	// The queue is disabled. A queue becomes `DISABLED` when [queue.yaml](https://cloud.google.com/appengine/docs/python/config/queueref) or [queue.xml](https://cloud.google.com/appengine/docs/standard/java/config/queueref) is uploaded which does not contain the queue. You cannot directly disable a queue. When a queue is disabled, tasks can still be added to a queue but the tasks are not dispatched. To permanently delete this queue and all of its tasks, call DeleteQueue.
	QueueStateEnumDisabled = QueueStateEnum("DISABLED")
)

func (QueueStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e QueueStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueueStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e QueueStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e QueueStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
type TaskResponseView pulumi.String

const (
	// Unspecified. Defaults to BASIC.
	TaskResponseViewViewUnspecified = TaskResponseView("VIEW_UNSPECIFIED")
	// The basic view omits fields which can be large or can contain sensitive data. This view does not include the body in AppEngineHttpRequest. Bodies are desirable to return only when needed, because they can be large and because of the sensitivity of the data that you choose to store in it.
	TaskResponseViewBasic = TaskResponseView("BASIC")
	// All information is returned. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Queue resource.
	TaskResponseViewFull = TaskResponseView("FULL")
)

func (TaskResponseView) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TaskResponseView) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskResponseView) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskResponseView) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskResponseView) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Output only. The view specifies which subset of the Task has been returned.
type TaskView pulumi.String

const (
	// Unspecified. Defaults to BASIC.
	TaskViewViewUnspecified = TaskView("VIEW_UNSPECIFIED")
	// The basic view omits fields which can be large or can contain sensitive data. This view does not include the body in AppEngineHttpRequest. Bodies are desirable to return only when needed, because they can be large and because of the sensitivity of the data that you choose to store in it.
	TaskViewBasic = TaskView("BASIC")
	// All information is returned. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Queue resource.
	TaskViewFull = TaskView("FULL")
)

func (TaskView) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e TaskView) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskView) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TaskView) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TaskView) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
