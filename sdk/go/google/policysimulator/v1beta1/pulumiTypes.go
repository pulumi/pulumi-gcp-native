// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfig struct {
	// The logs to use as input for the Replay.
	LogSource *GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSource `pulumi:"logSource"`
	// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
	PolicyOverlay map[string]string `pulumi:"policyOverlay"`
}

// GoogleCloudPolicysimulatorV1beta1ReplayConfigInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs and GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayConfigInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs{...}
type GoogleCloudPolicysimulatorV1beta1ReplayConfigInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput
}

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs struct {
	// The logs to use as input for the Replay.
	LogSource GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSourcePtrInput `pulumi:"logSource"`
	// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
	PolicyOverlay pulumi.StringMapInput `pulumi:"policyOverlay"`
}

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayConfig)(nil)).Elem()
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput)
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput).ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(ctx)
}

// GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs, GoogleCloudPolicysimulatorV1beta1ReplayConfigPtr and GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs{...}
//
//  or:
//
//          nil
type GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput
}

type googleCloudPolicysimulatorV1beta1ReplayConfigPtrType GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs

func GoogleCloudPolicysimulatorV1beta1ReplayConfigPtr(v *GoogleCloudPolicysimulatorV1beta1ReplayConfigArgs) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrInput {
	return (*googleCloudPolicysimulatorV1beta1ReplayConfigPtrType)(v)
}

func (*googleCloudPolicysimulatorV1beta1ReplayConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayConfig)(nil)).Elem()
}

func (i *googleCloudPolicysimulatorV1beta1ReplayConfigPtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudPolicysimulatorV1beta1ReplayConfigPtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput)
}

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayConfig)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return o.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudPolicysimulatorV1beta1ReplayConfig) *GoogleCloudPolicysimulatorV1beta1ReplayConfig {
		return &v
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput)
}

// The logs to use as input for the Replay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) LogSource() GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSourcePtrOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayConfig) *GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSource {
		return v.LogSource
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSourcePtrOutput)
}

// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput) PolicyOverlay() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayConfig) map[string]string { return v.PolicyOverlay }).(pulumi.StringMapOutput)
}

type GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayConfig)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) Elem() GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfig) GoogleCloudPolicysimulatorV1beta1ReplayConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudPolicysimulatorV1beta1ReplayConfig
		return ret
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput)
}

// The logs to use as input for the Replay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) LogSource() GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSourcePtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfig) *GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSource {
		if v == nil {
			return nil
		}
		return v.LogSource
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigLogSourcePtrOutput)
}

// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput) PolicyOverlay() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.PolicyOverlay
	}).(pulumi.StringMapOutput)
}

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse struct {
	// The logs to use as input for the Replay.
	LogSource string `pulumi:"logSource"`
	// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
	PolicyOverlay map[string]string `pulumi:"policyOverlay"`
}

// GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs and GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs{...}
type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput
}

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs struct {
	// The logs to use as input for the Replay.
	LogSource pulumi.StringInput `pulumi:"logSource"`
	// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
	PolicyOverlay pulumi.StringMapInput `pulumi:"policyOverlay"`
}

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse)(nil)).Elem()
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput)
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput).ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(ctx)
}

// GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs, GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtr and GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs{...}
//
//  or:
//
//          nil
type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput
}

type googleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrType GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs

func GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtr(v *GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseArgs) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrInput {
	return (*googleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrType)(v)
}

func (*googleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse)(nil)).Elem()
}

func (i *googleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(context.Background())
}

func (i *googleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput)
}

// The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return o.ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(context.Background())
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) *GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse {
		return &v
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput)
}

// The logs to use as input for the Replay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) LogSource() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) string { return v.LogSource }).(pulumi.StringOutput)
}

// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput) PolicyOverlay() pulumi.StringMapOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) map[string]string {
		return v.PolicyOverlay
	}).(pulumi.StringMapOutput)
}

type GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) Elem() GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse {
		if v != nil {
			return *v
		}
		var ret GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse
		return ret
	}).(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput)
}

// The logs to use as input for the Replay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) LogSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LogSource
	}).(pulumi.StringPtrOutput)
}

// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
func (o GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput) PolicyOverlay() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayConfigResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.PolicyOverlay
	}).(pulumi.StringMapOutput)
}

// Summary statistics about the replayed log entries.
type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse struct {
	// The number of replayed log entries with a difference between baseline and simulated policies.
	DifferenceCount int `pulumi:"differenceCount"`
	// The number of log entries that could not be replayed.
	ErrorCount int `pulumi:"errorCount"`
	// The total number of log entries replayed.
	LogCount int `pulumi:"logCount"`
	// The date of the newest log entry replayed.
	NewestDate GoogleTypeDateResponse `pulumi:"newestDate"`
	// The date of the oldest log entry replayed.
	OldestDate GoogleTypeDateResponse `pulumi:"oldestDate"`
	// The number of replayed log entries with no difference between baseline and simulated policies.
	UnchangedCount int `pulumi:"unchangedCount"`
}

// GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs and GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs{...}
type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput
}

// Summary statistics about the replayed log entries.
type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs struct {
	// The number of replayed log entries with a difference between baseline and simulated policies.
	DifferenceCount pulumi.IntInput `pulumi:"differenceCount"`
	// The number of log entries that could not be replayed.
	ErrorCount pulumi.IntInput `pulumi:"errorCount"`
	// The total number of log entries replayed.
	LogCount pulumi.IntInput `pulumi:"logCount"`
	// The date of the newest log entry replayed.
	NewestDate GoogleTypeDateResponseInput `pulumi:"newestDate"`
	// The date of the oldest log entry replayed.
	OldestDate GoogleTypeDateResponseInput `pulumi:"oldestDate"`
	// The number of replayed log entries with no difference between baseline and simulated policies.
	UnchangedCount pulumi.IntInput `pulumi:"unchangedCount"`
}

func (GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse)(nil)).Elem()
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput)
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(context.Background())
}

func (i GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput).ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(ctx)
}

// GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrInput is an input type that accepts GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs, GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtr and GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput values.
// You can construct a concrete instance of `GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrInput` via:
//
//          GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs{...}
//
//  or:
//
//          nil
type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrInput interface {
	pulumi.Input

	ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput
	ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput
}

type googleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrType GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs

func GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtr(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseArgs) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrInput {
	return (*googleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrType)(v)
}

func (*googleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse)(nil)).Elem()
}

func (i *googleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return i.ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(context.Background())
}

func (i *googleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrType) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput)
}

// Summary statistics about the replayed log entries.
type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return o.ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(context.Background())
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse {
		return &v
	}).(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput)
}

// The number of replayed log entries with a difference between baseline and simulated policies.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) DifferenceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) int { return v.DifferenceCount }).(pulumi.IntOutput)
}

// The number of log entries that could not be replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) ErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) int { return v.ErrorCount }).(pulumi.IntOutput)
}

// The total number of log entries replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) LogCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) int { return v.LogCount }).(pulumi.IntOutput)
}

// The date of the newest log entry replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) NewestDate() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) GoogleTypeDateResponse {
		return v.NewestDate
	}).(GoogleTypeDateResponseOutput)
}

// The date of the oldest log entry replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) OldestDate() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) GoogleTypeDateResponse {
		return v.OldestDate
	}).(GoogleTypeDateResponseOutput)
}

// The number of replayed log entries with no difference between baseline and simulated policies.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput) UnchangedCount() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) int { return v.UnchangedCount }).(pulumi.IntOutput)
}

type GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse)(nil)).Elem()
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) ToGoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutputWithContext(ctx context.Context) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput {
	return o
}

func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) Elem() GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse {
		if v != nil {
			return *v
		}
		var ret GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse
		return ret
	}).(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput)
}

// The number of replayed log entries with a difference between baseline and simulated policies.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) DifferenceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DifferenceCount
	}).(pulumi.IntPtrOutput)
}

// The number of log entries that could not be replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) ErrorCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ErrorCount
	}).(pulumi.IntPtrOutput)
}

// The total number of log entries replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) LogCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.LogCount
	}).(pulumi.IntPtrOutput)
}

// The date of the newest log entry replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) NewestDate() GoogleTypeDateResponsePtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *GoogleTypeDateResponse {
		if v == nil {
			return nil
		}
		return &v.NewestDate
	}).(GoogleTypeDateResponsePtrOutput)
}

// The date of the oldest log entry replayed.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) OldestDate() GoogleTypeDateResponsePtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *GoogleTypeDateResponse {
		if v == nil {
			return nil
		}
		return &v.OldestDate
	}).(GoogleTypeDateResponsePtrOutput)
}

// The number of replayed log entries with no difference between baseline and simulated policies.
func (o GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput) UnchangedCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponse) *int {
		if v == nil {
			return nil
		}
		return &v.UnchangedCount
	}).(pulumi.IntPtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponse struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day int `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month int `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year int `pulumi:"year"`
}

// GoogleTypeDateResponseInput is an input type that accepts GoogleTypeDateResponseArgs and GoogleTypeDateResponseOutput values.
// You can construct a concrete instance of `GoogleTypeDateResponseInput` via:
//
//          GoogleTypeDateResponseArgs{...}
type GoogleTypeDateResponseInput interface {
	pulumi.Input

	ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput
	ToGoogleTypeDateResponseOutputWithContext(context.Context) GoogleTypeDateResponseOutput
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponseArgs struct {
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
	Day pulumi.IntInput `pulumi:"day"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month pulumi.IntInput `pulumi:"month"`
	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year pulumi.IntInput `pulumi:"year"`
}

func (GoogleTypeDateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDateResponse)(nil)).Elem()
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput {
	return i.ToGoogleTypeDateResponseOutputWithContext(context.Background())
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponseOutputWithContext(ctx context.Context) GoogleTypeDateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponseOutput)
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return i.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (i GoogleTypeDateResponseArgs) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponseOutput).ToGoogleTypeDateResponsePtrOutputWithContext(ctx)
}

// GoogleTypeDateResponsePtrInput is an input type that accepts GoogleTypeDateResponseArgs, GoogleTypeDateResponsePtr and GoogleTypeDateResponsePtrOutput values.
// You can construct a concrete instance of `GoogleTypeDateResponsePtrInput` via:
//
//          GoogleTypeDateResponseArgs{...}
//
//  or:
//
//          nil
type GoogleTypeDateResponsePtrInput interface {
	pulumi.Input

	ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput
	ToGoogleTypeDateResponsePtrOutputWithContext(context.Context) GoogleTypeDateResponsePtrOutput
}

type googleTypeDateResponsePtrType GoogleTypeDateResponseArgs

func GoogleTypeDateResponsePtr(v *GoogleTypeDateResponseArgs) GoogleTypeDateResponsePtrInput {
	return (*googleTypeDateResponsePtrType)(v)
}

func (*googleTypeDateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDateResponse)(nil)).Elem()
}

func (i *googleTypeDateResponsePtrType) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return i.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (i *googleTypeDateResponsePtrType) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeDateResponsePtrOutput)
}

// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
type GoogleTypeDateResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeDateResponse)(nil)).Elem()
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutput() GoogleTypeDateResponseOutput {
	return o
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponseOutputWithContext(ctx context.Context) GoogleTypeDateResponseOutput {
	return o
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return o.ToGoogleTypeDateResponsePtrOutputWithContext(context.Background())
}

func (o GoogleTypeDateResponseOutput) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeDateResponse) *GoogleTypeDateResponse {
		return &v
	}).(GoogleTypeDateResponsePtrOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateResponseOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Day }).(pulumi.IntOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateResponseOutput) Month() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Month }).(pulumi.IntOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateResponseOutput) Year() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleTypeDateResponse) int { return v.Year }).(pulumi.IntOutput)
}

type GoogleTypeDateResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeDateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeDateResponse)(nil)).Elem()
}

func (o GoogleTypeDateResponsePtrOutput) ToGoogleTypeDateResponsePtrOutput() GoogleTypeDateResponsePtrOutput {
	return o
}

func (o GoogleTypeDateResponsePtrOutput) ToGoogleTypeDateResponsePtrOutputWithContext(ctx context.Context) GoogleTypeDateResponsePtrOutput {
	return o
}

func (o GoogleTypeDateResponsePtrOutput) Elem() GoogleTypeDateResponseOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) GoogleTypeDateResponse {
		if v != nil {
			return *v
		}
		var ret GoogleTypeDateResponse
		return ret
	}).(GoogleTypeDateResponseOutput)
}

// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
func (o GoogleTypeDateResponsePtrOutput) Day() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Day
	}).(pulumi.IntPtrOutput)
}

// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
func (o GoogleTypeDateResponsePtrOutput) Month() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Month
	}).(pulumi.IntPtrOutput)
}

// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
func (o GoogleTypeDateResponsePtrOutput) Year() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GoogleTypeDateResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Year
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudPolicysimulatorV1beta1ReplayResultsSummaryResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateResponseOutput{})
	pulumi.RegisterOutputType(GoogleTypeDateResponsePtrOutput{})
}
