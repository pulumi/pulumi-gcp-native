// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts values of the AuditLogConfigLogType enum
// A concrete instance of `AuditLogConfigLogTypeInput` can be one of the following:
//
//	AuditLogConfigLogTypeLogTypeUnspecified
//	AuditLogConfigLogTypeAdminRead
//	AuditLogConfigLogTypeDataWrite
//	AuditLogConfigLogTypeDataRead
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of endpoint policy. This is primarily used to validate the configuration.
type EndpointPolicyType string

const (
	// Default value. Must not be used.
	EndpointPolicyTypeEndpointPolicyTypeUnspecified = EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED")
	// Represents a proxy deployed as a sidecar.
	EndpointPolicyTypeSidecarProxy = EndpointPolicyType("SIDECAR_PROXY")
	// Represents a proxyless gRPC backend.
	EndpointPolicyTypeGrpcServer = EndpointPolicyType("GRPC_SERVER")
)

func (EndpointPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPolicyType)(nil)).Elem()
}

func (e EndpointPolicyType) ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput {
	return pulumi.ToOutput(e).(EndpointPolicyTypeOutput)
}

func (e EndpointPolicyType) ToEndpointPolicyTypeOutputWithContext(ctx context.Context) EndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointPolicyTypeOutput)
}

func (e EndpointPolicyType) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return e.ToEndpointPolicyTypePtrOutputWithContext(context.Background())
}

func (e EndpointPolicyType) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return EndpointPolicyType(e).ToEndpointPolicyTypeOutputWithContext(ctx).ToEndpointPolicyTypePtrOutputWithContext(ctx)
}

func (e EndpointPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (EndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPolicyType)(nil)).Elem()
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput {
	return o
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypeOutputWithContext(ctx context.Context) EndpointPolicyTypeOutput {
	return o
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return o.ToEndpointPolicyTypePtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPolicyType) *EndpointPolicyType {
		return &v
	}).(EndpointPolicyTypePtrOutput)
}

func (o EndpointPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPolicyType)(nil)).Elem()
}

func (o EndpointPolicyTypePtrOutput) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return o
}

func (o EndpointPolicyTypePtrOutput) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return o
}

func (o EndpointPolicyTypePtrOutput) Elem() EndpointPolicyTypeOutput {
	return o.ApplyT(func(v *EndpointPolicyType) EndpointPolicyType {
		if v != nil {
			return *v
		}
		var ret EndpointPolicyType
		return ret
	}).(EndpointPolicyTypeOutput)
}

func (o EndpointPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointPolicyTypeInput is an input type that accepts values of the EndpointPolicyType enum
// A concrete instance of `EndpointPolicyTypeInput` can be one of the following:
//
//	EndpointPolicyTypeEndpointPolicyTypeUnspecified
//	EndpointPolicyTypeSidecarProxy
//	EndpointPolicyTypeGrpcServer
type EndpointPolicyTypeInput interface {
	pulumi.Input

	ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput
	ToEndpointPolicyTypeOutputWithContext(context.Context) EndpointPolicyTypeOutput
}

var endpointPolicyTypePtrType = reflect.TypeOf((**EndpointPolicyType)(nil)).Elem()

type EndpointPolicyTypePtrInput interface {
	pulumi.Input

	ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput
	ToEndpointPolicyTypePtrOutputWithContext(context.Context) EndpointPolicyTypePtrOutput
}

type endpointPolicyTypePtr string

func EndpointPolicyTypePtr(v string) EndpointPolicyTypePtrInput {
	return (*endpointPolicyTypePtr)(&v)
}

func (*endpointPolicyTypePtr) ElementType() reflect.Type {
	return endpointPolicyTypePtrType
}

func (in *endpointPolicyTypePtr) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(EndpointPolicyTypePtrOutput)
}

func (in *endpointPolicyTypePtr) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointPolicyTypePtrOutput)
}

func (in *endpointPolicyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EndpointPolicyType] {
	return pulumix.Output[*EndpointPolicyType]{
		OutputState: in.ToEndpointPolicyTypePtrOutputWithContext(ctx).OutputState,
	}
}

type ExtensionChainExtensionSupportedEventsItem string

const (
	// Unspecified value. Do not use.
	ExtensionChainExtensionSupportedEventsItemEventTypeUnspecified = ExtensionChainExtensionSupportedEventsItem("EVENT_TYPE_UNSPECIFIED")
	// If included in `supported_events`, the extension is called when the HTTP request headers arrive.
	ExtensionChainExtensionSupportedEventsItemRequestHeaders = ExtensionChainExtensionSupportedEventsItem("REQUEST_HEADERS")
	// If included in `supported_events`, the extension is called when the HTTP request body arrives.
	ExtensionChainExtensionSupportedEventsItemRequestBody = ExtensionChainExtensionSupportedEventsItem("REQUEST_BODY")
	// If included in `supported_events`, the extension is called when the HTTP response headers arrive.
	ExtensionChainExtensionSupportedEventsItemResponseHeaders = ExtensionChainExtensionSupportedEventsItem("RESPONSE_HEADERS")
	// If included in `supported_events`, the extension is called when the HTTP response body arrives.
	ExtensionChainExtensionSupportedEventsItemResponseBody = ExtensionChainExtensionSupportedEventsItem("RESPONSE_BODY")
)

func (ExtensionChainExtensionSupportedEventsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()
}

func (e ExtensionChainExtensionSupportedEventsItem) ToExtensionChainExtensionSupportedEventsItemOutput() ExtensionChainExtensionSupportedEventsItemOutput {
	return pulumi.ToOutput(e).(ExtensionChainExtensionSupportedEventsItemOutput)
}

func (e ExtensionChainExtensionSupportedEventsItem) ToExtensionChainExtensionSupportedEventsItemOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtensionChainExtensionSupportedEventsItemOutput)
}

func (e ExtensionChainExtensionSupportedEventsItem) ToExtensionChainExtensionSupportedEventsItemPtrOutput() ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return e.ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(context.Background())
}

func (e ExtensionChainExtensionSupportedEventsItem) ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return ExtensionChainExtensionSupportedEventsItem(e).ToExtensionChainExtensionSupportedEventsItemOutputWithContext(ctx).ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx)
}

func (e ExtensionChainExtensionSupportedEventsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionChainExtensionSupportedEventsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionChainExtensionSupportedEventsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtensionChainExtensionSupportedEventsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtensionChainExtensionSupportedEventsItemOutput struct{ *pulumi.OutputState }

func (ExtensionChainExtensionSupportedEventsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToExtensionChainExtensionSupportedEventsItemOutput() ExtensionChainExtensionSupportedEventsItemOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToExtensionChainExtensionSupportedEventsItemOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToExtensionChainExtensionSupportedEventsItemPtrOutput() ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return o.ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(context.Background())
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionChainExtensionSupportedEventsItem) *ExtensionChainExtensionSupportedEventsItem {
		return &v
	}).(ExtensionChainExtensionSupportedEventsItemPtrOutput)
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionChainExtensionSupportedEventsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionChainExtensionSupportedEventsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionChainExtensionSupportedEventsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtensionChainExtensionSupportedEventsItemPtrOutput struct{ *pulumi.OutputState }

func (ExtensionChainExtensionSupportedEventsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()
}

func (o ExtensionChainExtensionSupportedEventsItemPtrOutput) ToExtensionChainExtensionSupportedEventsItemPtrOutput() ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemPtrOutput) ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemPtrOutput) Elem() ExtensionChainExtensionSupportedEventsItemOutput {
	return o.ApplyT(func(v *ExtensionChainExtensionSupportedEventsItem) ExtensionChainExtensionSupportedEventsItem {
		if v != nil {
			return *v
		}
		var ret ExtensionChainExtensionSupportedEventsItem
		return ret
	}).(ExtensionChainExtensionSupportedEventsItemOutput)
}

func (o ExtensionChainExtensionSupportedEventsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionChainExtensionSupportedEventsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtensionChainExtensionSupportedEventsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtensionChainExtensionSupportedEventsItemInput is an input type that accepts values of the ExtensionChainExtensionSupportedEventsItem enum
// A concrete instance of `ExtensionChainExtensionSupportedEventsItemInput` can be one of the following:
//
//	ExtensionChainExtensionSupportedEventsItemEventTypeUnspecified
//	ExtensionChainExtensionSupportedEventsItemRequestHeaders
//	ExtensionChainExtensionSupportedEventsItemRequestBody
//	ExtensionChainExtensionSupportedEventsItemResponseHeaders
//	ExtensionChainExtensionSupportedEventsItemResponseBody
type ExtensionChainExtensionSupportedEventsItemInput interface {
	pulumi.Input

	ToExtensionChainExtensionSupportedEventsItemOutput() ExtensionChainExtensionSupportedEventsItemOutput
	ToExtensionChainExtensionSupportedEventsItemOutputWithContext(context.Context) ExtensionChainExtensionSupportedEventsItemOutput
}

var extensionChainExtensionSupportedEventsItemPtrType = reflect.TypeOf((**ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()

type ExtensionChainExtensionSupportedEventsItemPtrInput interface {
	pulumi.Input

	ToExtensionChainExtensionSupportedEventsItemPtrOutput() ExtensionChainExtensionSupportedEventsItemPtrOutput
	ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(context.Context) ExtensionChainExtensionSupportedEventsItemPtrOutput
}

type extensionChainExtensionSupportedEventsItemPtr string

func ExtensionChainExtensionSupportedEventsItemPtr(v string) ExtensionChainExtensionSupportedEventsItemPtrInput {
	return (*extensionChainExtensionSupportedEventsItemPtr)(&v)
}

func (*extensionChainExtensionSupportedEventsItemPtr) ElementType() reflect.Type {
	return extensionChainExtensionSupportedEventsItemPtrType
}

func (in *extensionChainExtensionSupportedEventsItemPtr) ToExtensionChainExtensionSupportedEventsItemPtrOutput() ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return pulumi.ToOutput(in).(ExtensionChainExtensionSupportedEventsItemPtrOutput)
}

func (in *extensionChainExtensionSupportedEventsItemPtr) ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtensionChainExtensionSupportedEventsItemPtrOutput)
}

func (in *extensionChainExtensionSupportedEventsItemPtr) ToOutput(ctx context.Context) pulumix.Output[*ExtensionChainExtensionSupportedEventsItem] {
	return pulumix.Output[*ExtensionChainExtensionSupportedEventsItem]{
		OutputState: in.ToExtensionChainExtensionSupportedEventsItemPtrOutputWithContext(ctx).OutputState,
	}
}

// ExtensionChainExtensionSupportedEventsItemArrayInput is an input type that accepts ExtensionChainExtensionSupportedEventsItemArray and ExtensionChainExtensionSupportedEventsItemArrayOutput values.
// You can construct a concrete instance of `ExtensionChainExtensionSupportedEventsItemArrayInput` via:
//
//	ExtensionChainExtensionSupportedEventsItemArray{ ExtensionChainExtensionSupportedEventsItemArgs{...} }
type ExtensionChainExtensionSupportedEventsItemArrayInput interface {
	pulumi.Input

	ToExtensionChainExtensionSupportedEventsItemArrayOutput() ExtensionChainExtensionSupportedEventsItemArrayOutput
	ToExtensionChainExtensionSupportedEventsItemArrayOutputWithContext(context.Context) ExtensionChainExtensionSupportedEventsItemArrayOutput
}

type ExtensionChainExtensionSupportedEventsItemArray []ExtensionChainExtensionSupportedEventsItem

func (ExtensionChainExtensionSupportedEventsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()
}

func (i ExtensionChainExtensionSupportedEventsItemArray) ToExtensionChainExtensionSupportedEventsItemArrayOutput() ExtensionChainExtensionSupportedEventsItemArrayOutput {
	return i.ToExtensionChainExtensionSupportedEventsItemArrayOutputWithContext(context.Background())
}

func (i ExtensionChainExtensionSupportedEventsItemArray) ToExtensionChainExtensionSupportedEventsItemArrayOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionChainExtensionSupportedEventsItemArrayOutput)
}

type ExtensionChainExtensionSupportedEventsItemArrayOutput struct{ *pulumi.OutputState }

func (ExtensionChainExtensionSupportedEventsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionChainExtensionSupportedEventsItem)(nil)).Elem()
}

func (o ExtensionChainExtensionSupportedEventsItemArrayOutput) ToExtensionChainExtensionSupportedEventsItemArrayOutput() ExtensionChainExtensionSupportedEventsItemArrayOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemArrayOutput) ToExtensionChainExtensionSupportedEventsItemArrayOutputWithContext(ctx context.Context) ExtensionChainExtensionSupportedEventsItemArrayOutput {
	return o
}

func (o ExtensionChainExtensionSupportedEventsItemArrayOutput) Index(i pulumi.IntInput) ExtensionChainExtensionSupportedEventsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionChainExtensionSupportedEventsItem {
		return vs[0].([]ExtensionChainExtensionSupportedEventsItem)[vs[1].(int)]
	}).(ExtensionChainExtensionSupportedEventsItemOutput)
}

// Immutable. The type of the customer managed gateway. This field is required. If unspecified, an error is returned.
type GatewayType string

const (
	// The type of the customer managed gateway is unspecified.
	GatewayTypeTypeUnspecified = GatewayType("TYPE_UNSPECIFIED")
	// The type of the customer managed gateway is TrafficDirector Open Mesh.
	GatewayTypeOpenMesh = GatewayType("OPEN_MESH")
	// The type of the customer managed gateway is SecureWebGateway (SWG).
	GatewayTypeSecureWebGateway = GatewayType("SECURE_WEB_GATEWAY")
)

func (GatewayType) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (e GatewayType) ToGatewayTypeOutput() GatewayTypeOutput {
	return pulumi.ToOutput(e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return e.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (e GatewayType) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return GatewayType(e).ToGatewayTypeOutputWithContext(ctx).ToGatewayTypePtrOutputWithContext(ctx)
}

func (e GatewayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GatewayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GatewayTypeOutput struct{ *pulumi.OutputState }

func (GatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (o GatewayTypeOutput) ToGatewayTypeOutput() GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayType) *GatewayType {
		return &v
	}).(GatewayTypePtrOutput)
}

func (o GatewayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayTypePtrOutput struct{ *pulumi.OutputState }

func (GatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayType)(nil)).Elem()
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) Elem() GatewayTypeOutput {
	return o.ApplyT(func(v *GatewayType) GatewayType {
		if v != nil {
			return *v
		}
		var ret GatewayType
		return ret
	}).(GatewayTypeOutput)
}

func (o GatewayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GatewayTypeInput is an input type that accepts values of the GatewayType enum
// A concrete instance of `GatewayTypeInput` can be one of the following:
//
//	GatewayTypeTypeUnspecified
//	GatewayTypeOpenMesh
//	GatewayTypeSecureWebGateway
type GatewayTypeInput interface {
	pulumi.Input

	ToGatewayTypeOutput() GatewayTypeOutput
	ToGatewayTypeOutputWithContext(context.Context) GatewayTypeOutput
}

var gatewayTypePtrType = reflect.TypeOf((**GatewayType)(nil)).Elem()

type GatewayTypePtrInput interface {
	pulumi.Input

	ToGatewayTypePtrOutput() GatewayTypePtrOutput
	ToGatewayTypePtrOutputWithContext(context.Context) GatewayTypePtrOutput
}

type gatewayTypePtr string

func GatewayTypePtr(v string) GatewayTypePtrInput {
	return (*gatewayTypePtr)(&v)
}

func (*gatewayTypePtr) ElementType() reflect.Type {
	return gatewayTypePtrType
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return pulumi.ToOutput(in).(GatewayTypePtrOutput)
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GatewayTypePtrOutput)
}

func (in *gatewayTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GatewayType] {
	return pulumix.Output[*GatewayType]{
		OutputState: in.ToGatewayTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.
type GrpcRouteHeaderMatchType string

const (
	// Unspecified.
	GrpcRouteHeaderMatchTypeTypeUnspecified = GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED")
	// Will only match the exact value provided.
	GrpcRouteHeaderMatchTypeExact = GrpcRouteHeaderMatchType("EXACT")
	// Will match paths conforming to the prefix specified by value. RE2 syntax is supported.
	GrpcRouteHeaderMatchTypeRegularExpression = GrpcRouteHeaderMatchType("REGULAR_EXPRESSION")
)

func (GrpcRouteHeaderMatchType) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput {
	return pulumi.ToOutput(e).(GrpcRouteHeaderMatchTypeOutput)
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GrpcRouteHeaderMatchTypeOutput)
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return e.ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Background())
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return GrpcRouteHeaderMatchType(e).ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx).ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx)
}

func (e GrpcRouteHeaderMatchType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteHeaderMatchType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteHeaderMatchType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GrpcRouteHeaderMatchType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GrpcRouteHeaderMatchTypeOutput struct{ *pulumi.OutputState }

func (GrpcRouteHeaderMatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypeOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return o.ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrpcRouteHeaderMatchType) *GrpcRouteHeaderMatchType {
		return &v
	}).(GrpcRouteHeaderMatchTypePtrOutput)
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteHeaderMatchType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteHeaderMatchType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GrpcRouteHeaderMatchTypePtrOutput struct{ *pulumi.OutputState }

func (GrpcRouteHeaderMatchTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypePtrOutput) Elem() GrpcRouteHeaderMatchTypeOutput {
	return o.ApplyT(func(v *GrpcRouteHeaderMatchType) GrpcRouteHeaderMatchType {
		if v != nil {
			return *v
		}
		var ret GrpcRouteHeaderMatchType
		return ret
	}).(GrpcRouteHeaderMatchTypeOutput)
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GrpcRouteHeaderMatchType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GrpcRouteHeaderMatchTypeInput is an input type that accepts values of the GrpcRouteHeaderMatchType enum
// A concrete instance of `GrpcRouteHeaderMatchTypeInput` can be one of the following:
//
//	GrpcRouteHeaderMatchTypeTypeUnspecified
//	GrpcRouteHeaderMatchTypeExact
//	GrpcRouteHeaderMatchTypeRegularExpression
type GrpcRouteHeaderMatchTypeInput interface {
	pulumi.Input

	ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput
	ToGrpcRouteHeaderMatchTypeOutputWithContext(context.Context) GrpcRouteHeaderMatchTypeOutput
}

var grpcRouteHeaderMatchTypePtrType = reflect.TypeOf((**GrpcRouteHeaderMatchType)(nil)).Elem()

type GrpcRouteHeaderMatchTypePtrInput interface {
	pulumi.Input

	ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput
	ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Context) GrpcRouteHeaderMatchTypePtrOutput
}

type grpcRouteHeaderMatchTypePtr string

func GrpcRouteHeaderMatchTypePtr(v string) GrpcRouteHeaderMatchTypePtrInput {
	return (*grpcRouteHeaderMatchTypePtr)(&v)
}

func (*grpcRouteHeaderMatchTypePtr) ElementType() reflect.Type {
	return grpcRouteHeaderMatchTypePtrType
}

func (in *grpcRouteHeaderMatchTypePtr) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return pulumi.ToOutput(in).(GrpcRouteHeaderMatchTypePtrOutput)
}

func (in *grpcRouteHeaderMatchTypePtr) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GrpcRouteHeaderMatchTypePtrOutput)
}

func (in *grpcRouteHeaderMatchTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GrpcRouteHeaderMatchType] {
	return pulumix.Output[*GrpcRouteHeaderMatchType]{
		OutputState: in.ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
type GrpcRouteMethodMatchType string

const (
	// Unspecified.
	GrpcRouteMethodMatchTypeTypeUnspecified = GrpcRouteMethodMatchType("TYPE_UNSPECIFIED")
	// Will only match the exact name provided.
	GrpcRouteMethodMatchTypeExact = GrpcRouteMethodMatchType("EXACT")
	// Will interpret grpc_method and grpc_service as regexes. RE2 syntax is supported.
	GrpcRouteMethodMatchTypeRegularExpression = GrpcRouteMethodMatchType("REGULAR_EXPRESSION")
)

func (GrpcRouteMethodMatchType) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteMethodMatchType)(nil)).Elem()
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput {
	return pulumi.ToOutput(e).(GrpcRouteMethodMatchTypeOutput)
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypeOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GrpcRouteMethodMatchTypeOutput)
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return e.ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Background())
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return GrpcRouteMethodMatchType(e).ToGrpcRouteMethodMatchTypeOutputWithContext(ctx).ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx)
}

func (e GrpcRouteMethodMatchType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteMethodMatchType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteMethodMatchType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GrpcRouteMethodMatchType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GrpcRouteMethodMatchTypeOutput struct{ *pulumi.OutputState }

func (GrpcRouteMethodMatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteMethodMatchType)(nil)).Elem()
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput {
	return o
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypeOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypeOutput {
	return o
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return o.ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrpcRouteMethodMatchType) *GrpcRouteMethodMatchType {
		return &v
	}).(GrpcRouteMethodMatchTypePtrOutput)
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteMethodMatchType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteMethodMatchType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GrpcRouteMethodMatchTypePtrOutput struct{ *pulumi.OutputState }

func (GrpcRouteMethodMatchTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrpcRouteMethodMatchType)(nil)).Elem()
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return o
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return o
}

func (o GrpcRouteMethodMatchTypePtrOutput) Elem() GrpcRouteMethodMatchTypeOutput {
	return o.ApplyT(func(v *GrpcRouteMethodMatchType) GrpcRouteMethodMatchType {
		if v != nil {
			return *v
		}
		var ret GrpcRouteMethodMatchType
		return ret
	}).(GrpcRouteMethodMatchTypeOutput)
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GrpcRouteMethodMatchType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GrpcRouteMethodMatchTypeInput is an input type that accepts values of the GrpcRouteMethodMatchType enum
// A concrete instance of `GrpcRouteMethodMatchTypeInput` can be one of the following:
//
//	GrpcRouteMethodMatchTypeTypeUnspecified
//	GrpcRouteMethodMatchTypeExact
//	GrpcRouteMethodMatchTypeRegularExpression
type GrpcRouteMethodMatchTypeInput interface {
	pulumi.Input

	ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput
	ToGrpcRouteMethodMatchTypeOutputWithContext(context.Context) GrpcRouteMethodMatchTypeOutput
}

var grpcRouteMethodMatchTypePtrType = reflect.TypeOf((**GrpcRouteMethodMatchType)(nil)).Elem()

type GrpcRouteMethodMatchTypePtrInput interface {
	pulumi.Input

	ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput
	ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Context) GrpcRouteMethodMatchTypePtrOutput
}

type grpcRouteMethodMatchTypePtr string

func GrpcRouteMethodMatchTypePtr(v string) GrpcRouteMethodMatchTypePtrInput {
	return (*grpcRouteMethodMatchTypePtr)(&v)
}

func (*grpcRouteMethodMatchTypePtr) ElementType() reflect.Type {
	return grpcRouteMethodMatchTypePtrType
}

func (in *grpcRouteMethodMatchTypePtr) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return pulumi.ToOutput(in).(GrpcRouteMethodMatchTypePtrOutput)
}

func (in *grpcRouteMethodMatchTypePtr) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GrpcRouteMethodMatchTypePtrOutput)
}

func (in *grpcRouteMethodMatchTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GrpcRouteMethodMatchType] {
	return pulumix.Output[*GrpcRouteMethodMatchType]{
		OutputState: in.ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The HTTP Status code to use for the redirect.
type HttpRouteRedirectResponseCode string

const (
	// Default value
	HttpRouteRedirectResponseCodeResponseCodeUnspecified = HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED")
	// Corresponds to 301.
	HttpRouteRedirectResponseCodeMovedPermanentlyDefault = HttpRouteRedirectResponseCode("MOVED_PERMANENTLY_DEFAULT")
	// Corresponds to 302.
	HttpRouteRedirectResponseCodeFound = HttpRouteRedirectResponseCode("FOUND")
	// Corresponds to 303.
	HttpRouteRedirectResponseCodeSeeOther = HttpRouteRedirectResponseCode("SEE_OTHER")
	// Corresponds to 307. In this case, the request method will be retained.
	HttpRouteRedirectResponseCodeTemporaryRedirect = HttpRouteRedirectResponseCode("TEMPORARY_REDIRECT")
	// Corresponds to 308. In this case, the request method will be retained.
	HttpRouteRedirectResponseCodePermanentRedirect = HttpRouteRedirectResponseCode("PERMANENT_REDIRECT")
)

func (HttpRouteRedirectResponseCode) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput {
	return pulumi.ToOutput(e).(HttpRouteRedirectResponseCodeOutput)
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HttpRouteRedirectResponseCodeOutput)
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return e.ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return HttpRouteRedirectResponseCode(e).ToHttpRouteRedirectResponseCodeOutputWithContext(ctx).ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx)
}

func (e HttpRouteRedirectResponseCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRouteRedirectResponseCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRouteRedirectResponseCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HttpRouteRedirectResponseCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HttpRouteRedirectResponseCodeOutput struct{ *pulumi.OutputState }

func (HttpRouteRedirectResponseCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput {
	return o
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodeOutput {
	return o
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return o.ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpRouteRedirectResponseCode) *HttpRouteRedirectResponseCode {
		return &v
	}).(HttpRouteRedirectResponseCodePtrOutput)
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRouteRedirectResponseCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRouteRedirectResponseCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HttpRouteRedirectResponseCodePtrOutput struct{ *pulumi.OutputState }

func (HttpRouteRedirectResponseCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRouteRedirectResponseCodePtrOutput) Elem() HttpRouteRedirectResponseCodeOutput {
	return o.ApplyT(func(v *HttpRouteRedirectResponseCode) HttpRouteRedirectResponseCode {
		if v != nil {
			return *v
		}
		var ret HttpRouteRedirectResponseCode
		return ret
	}).(HttpRouteRedirectResponseCodeOutput)
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HttpRouteRedirectResponseCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HttpRouteRedirectResponseCodeInput is an input type that accepts values of the HttpRouteRedirectResponseCode enum
// A concrete instance of `HttpRouteRedirectResponseCodeInput` can be one of the following:
//
//	HttpRouteRedirectResponseCodeResponseCodeUnspecified
//	HttpRouteRedirectResponseCodeMovedPermanentlyDefault
//	HttpRouteRedirectResponseCodeFound
//	HttpRouteRedirectResponseCodeSeeOther
//	HttpRouteRedirectResponseCodeTemporaryRedirect
//	HttpRouteRedirectResponseCodePermanentRedirect
type HttpRouteRedirectResponseCodeInput interface {
	pulumi.Input

	ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput
	ToHttpRouteRedirectResponseCodeOutputWithContext(context.Context) HttpRouteRedirectResponseCodeOutput
}

var httpRouteRedirectResponseCodePtrType = reflect.TypeOf((**HttpRouteRedirectResponseCode)(nil)).Elem()

type HttpRouteRedirectResponseCodePtrInput interface {
	pulumi.Input

	ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput
	ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Context) HttpRouteRedirectResponseCodePtrOutput
}

type httpRouteRedirectResponseCodePtr string

func HttpRouteRedirectResponseCodePtr(v string) HttpRouteRedirectResponseCodePtrInput {
	return (*httpRouteRedirectResponseCodePtr)(&v)
}

func (*httpRouteRedirectResponseCodePtr) ElementType() reflect.Type {
	return httpRouteRedirectResponseCodePtrType
}

func (in *httpRouteRedirectResponseCodePtr) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return pulumi.ToOutput(in).(HttpRouteRedirectResponseCodePtrOutput)
}

func (in *httpRouteRedirectResponseCodePtr) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HttpRouteRedirectResponseCodePtrOutput)
}

func (in *httpRouteRedirectResponseCodePtr) ToOutput(ctx context.Context) pulumix.Output[*HttpRouteRedirectResponseCode] {
	return pulumix.Output[*HttpRouteRedirectResponseCode]{
		OutputState: in.ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
type LbRouteExtensionLoadBalancingScheme string

const (
	// Default value. Do not use.
	LbRouteExtensionLoadBalancingSchemeLoadBalancingSchemeUnspecified = LbRouteExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED")
	// Signifies that this is used for Internal HTTP(S) Load Balancing.
	LbRouteExtensionLoadBalancingSchemeInternalManaged = LbRouteExtensionLoadBalancingScheme("INTERNAL_MANAGED")
	// Signifies that this is used for External Managed HTTP(S) Load Balancing.
	LbRouteExtensionLoadBalancingSchemeExternalManaged = LbRouteExtensionLoadBalancingScheme("EXTERNAL_MANAGED")
)

func (LbRouteExtensionLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*LbRouteExtensionLoadBalancingScheme)(nil)).Elem()
}

func (e LbRouteExtensionLoadBalancingScheme) ToLbRouteExtensionLoadBalancingSchemeOutput() LbRouteExtensionLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(LbRouteExtensionLoadBalancingSchemeOutput)
}

func (e LbRouteExtensionLoadBalancingScheme) ToLbRouteExtensionLoadBalancingSchemeOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LbRouteExtensionLoadBalancingSchemeOutput)
}

func (e LbRouteExtensionLoadBalancingScheme) ToLbRouteExtensionLoadBalancingSchemePtrOutput() LbRouteExtensionLoadBalancingSchemePtrOutput {
	return e.ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e LbRouteExtensionLoadBalancingScheme) ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemePtrOutput {
	return LbRouteExtensionLoadBalancingScheme(e).ToLbRouteExtensionLoadBalancingSchemeOutputWithContext(ctx).ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e LbRouteExtensionLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LbRouteExtensionLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LbRouteExtensionLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LbRouteExtensionLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LbRouteExtensionLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (LbRouteExtensionLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbRouteExtensionLoadBalancingScheme)(nil)).Elem()
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToLbRouteExtensionLoadBalancingSchemeOutput() LbRouteExtensionLoadBalancingSchemeOutput {
	return o
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToLbRouteExtensionLoadBalancingSchemeOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemeOutput {
	return o
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToLbRouteExtensionLoadBalancingSchemePtrOutput() LbRouteExtensionLoadBalancingSchemePtrOutput {
	return o.ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LbRouteExtensionLoadBalancingScheme) *LbRouteExtensionLoadBalancingScheme {
		return &v
	}).(LbRouteExtensionLoadBalancingSchemePtrOutput)
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LbRouteExtensionLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LbRouteExtensionLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LbRouteExtensionLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LbRouteExtensionLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (LbRouteExtensionLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbRouteExtensionLoadBalancingScheme)(nil)).Elem()
}

func (o LbRouteExtensionLoadBalancingSchemePtrOutput) ToLbRouteExtensionLoadBalancingSchemePtrOutput() LbRouteExtensionLoadBalancingSchemePtrOutput {
	return o
}

func (o LbRouteExtensionLoadBalancingSchemePtrOutput) ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemePtrOutput {
	return o
}

func (o LbRouteExtensionLoadBalancingSchemePtrOutput) Elem() LbRouteExtensionLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *LbRouteExtensionLoadBalancingScheme) LbRouteExtensionLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret LbRouteExtensionLoadBalancingScheme
		return ret
	}).(LbRouteExtensionLoadBalancingSchemeOutput)
}

func (o LbRouteExtensionLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LbRouteExtensionLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LbRouteExtensionLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LbRouteExtensionLoadBalancingSchemeInput is an input type that accepts values of the LbRouteExtensionLoadBalancingScheme enum
// A concrete instance of `LbRouteExtensionLoadBalancingSchemeInput` can be one of the following:
//
//	LbRouteExtensionLoadBalancingSchemeLoadBalancingSchemeUnspecified
//	LbRouteExtensionLoadBalancingSchemeInternalManaged
//	LbRouteExtensionLoadBalancingSchemeExternalManaged
type LbRouteExtensionLoadBalancingSchemeInput interface {
	pulumi.Input

	ToLbRouteExtensionLoadBalancingSchemeOutput() LbRouteExtensionLoadBalancingSchemeOutput
	ToLbRouteExtensionLoadBalancingSchemeOutputWithContext(context.Context) LbRouteExtensionLoadBalancingSchemeOutput
}

var lbRouteExtensionLoadBalancingSchemePtrType = reflect.TypeOf((**LbRouteExtensionLoadBalancingScheme)(nil)).Elem()

type LbRouteExtensionLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToLbRouteExtensionLoadBalancingSchemePtrOutput() LbRouteExtensionLoadBalancingSchemePtrOutput
	ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(context.Context) LbRouteExtensionLoadBalancingSchemePtrOutput
}

type lbRouteExtensionLoadBalancingSchemePtr string

func LbRouteExtensionLoadBalancingSchemePtr(v string) LbRouteExtensionLoadBalancingSchemePtrInput {
	return (*lbRouteExtensionLoadBalancingSchemePtr)(&v)
}

func (*lbRouteExtensionLoadBalancingSchemePtr) ElementType() reflect.Type {
	return lbRouteExtensionLoadBalancingSchemePtrType
}

func (in *lbRouteExtensionLoadBalancingSchemePtr) ToLbRouteExtensionLoadBalancingSchemePtrOutput() LbRouteExtensionLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(LbRouteExtensionLoadBalancingSchemePtrOutput)
}

func (in *lbRouteExtensionLoadBalancingSchemePtr) ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbRouteExtensionLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LbRouteExtensionLoadBalancingSchemePtrOutput)
}

func (in *lbRouteExtensionLoadBalancingSchemePtr) ToOutput(ctx context.Context) pulumix.Output[*LbRouteExtensionLoadBalancingScheme] {
	return pulumix.Output[*LbRouteExtensionLoadBalancingScheme]{
		OutputState: in.ToLbRouteExtensionLoadBalancingSchemePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
type LbTrafficExtensionLoadBalancingScheme string

const (
	// Default value. Do not use.
	LbTrafficExtensionLoadBalancingSchemeLoadBalancingSchemeUnspecified = LbTrafficExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED")
	// Signifies that this is used for Internal HTTP(S) Load Balancing.
	LbTrafficExtensionLoadBalancingSchemeInternalManaged = LbTrafficExtensionLoadBalancingScheme("INTERNAL_MANAGED")
	// Signifies that this is used for External Managed HTTP(S) Load Balancing.
	LbTrafficExtensionLoadBalancingSchemeExternalManaged = LbTrafficExtensionLoadBalancingScheme("EXTERNAL_MANAGED")
)

func (LbTrafficExtensionLoadBalancingScheme) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTrafficExtensionLoadBalancingScheme)(nil)).Elem()
}

func (e LbTrafficExtensionLoadBalancingScheme) ToLbTrafficExtensionLoadBalancingSchemeOutput() LbTrafficExtensionLoadBalancingSchemeOutput {
	return pulumi.ToOutput(e).(LbTrafficExtensionLoadBalancingSchemeOutput)
}

func (e LbTrafficExtensionLoadBalancingScheme) ToLbTrafficExtensionLoadBalancingSchemeOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LbTrafficExtensionLoadBalancingSchemeOutput)
}

func (e LbTrafficExtensionLoadBalancingScheme) ToLbTrafficExtensionLoadBalancingSchemePtrOutput() LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return e.ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (e LbTrafficExtensionLoadBalancingScheme) ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return LbTrafficExtensionLoadBalancingScheme(e).ToLbTrafficExtensionLoadBalancingSchemeOutputWithContext(ctx).ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx)
}

func (e LbTrafficExtensionLoadBalancingScheme) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LbTrafficExtensionLoadBalancingScheme) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LbTrafficExtensionLoadBalancingScheme) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LbTrafficExtensionLoadBalancingScheme) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LbTrafficExtensionLoadBalancingSchemeOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionLoadBalancingSchemeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTrafficExtensionLoadBalancingScheme)(nil)).Elem()
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToLbTrafficExtensionLoadBalancingSchemeOutput() LbTrafficExtensionLoadBalancingSchemeOutput {
	return o
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToLbTrafficExtensionLoadBalancingSchemeOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemeOutput {
	return o
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToLbTrafficExtensionLoadBalancingSchemePtrOutput() LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return o.ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(context.Background())
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LbTrafficExtensionLoadBalancingScheme) *LbTrafficExtensionLoadBalancingScheme {
		return &v
	}).(LbTrafficExtensionLoadBalancingSchemePtrOutput)
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LbTrafficExtensionLoadBalancingScheme) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LbTrafficExtensionLoadBalancingSchemeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LbTrafficExtensionLoadBalancingScheme) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LbTrafficExtensionLoadBalancingSchemePtrOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionLoadBalancingSchemePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbTrafficExtensionLoadBalancingScheme)(nil)).Elem()
}

func (o LbTrafficExtensionLoadBalancingSchemePtrOutput) ToLbTrafficExtensionLoadBalancingSchemePtrOutput() LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return o
}

func (o LbTrafficExtensionLoadBalancingSchemePtrOutput) ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return o
}

func (o LbTrafficExtensionLoadBalancingSchemePtrOutput) Elem() LbTrafficExtensionLoadBalancingSchemeOutput {
	return o.ApplyT(func(v *LbTrafficExtensionLoadBalancingScheme) LbTrafficExtensionLoadBalancingScheme {
		if v != nil {
			return *v
		}
		var ret LbTrafficExtensionLoadBalancingScheme
		return ret
	}).(LbTrafficExtensionLoadBalancingSchemeOutput)
}

func (o LbTrafficExtensionLoadBalancingSchemePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LbTrafficExtensionLoadBalancingSchemePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LbTrafficExtensionLoadBalancingScheme) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LbTrafficExtensionLoadBalancingSchemeInput is an input type that accepts values of the LbTrafficExtensionLoadBalancingScheme enum
// A concrete instance of `LbTrafficExtensionLoadBalancingSchemeInput` can be one of the following:
//
//	LbTrafficExtensionLoadBalancingSchemeLoadBalancingSchemeUnspecified
//	LbTrafficExtensionLoadBalancingSchemeInternalManaged
//	LbTrafficExtensionLoadBalancingSchemeExternalManaged
type LbTrafficExtensionLoadBalancingSchemeInput interface {
	pulumi.Input

	ToLbTrafficExtensionLoadBalancingSchemeOutput() LbTrafficExtensionLoadBalancingSchemeOutput
	ToLbTrafficExtensionLoadBalancingSchemeOutputWithContext(context.Context) LbTrafficExtensionLoadBalancingSchemeOutput
}

var lbTrafficExtensionLoadBalancingSchemePtrType = reflect.TypeOf((**LbTrafficExtensionLoadBalancingScheme)(nil)).Elem()

type LbTrafficExtensionLoadBalancingSchemePtrInput interface {
	pulumi.Input

	ToLbTrafficExtensionLoadBalancingSchemePtrOutput() LbTrafficExtensionLoadBalancingSchemePtrOutput
	ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(context.Context) LbTrafficExtensionLoadBalancingSchemePtrOutput
}

type lbTrafficExtensionLoadBalancingSchemePtr string

func LbTrafficExtensionLoadBalancingSchemePtr(v string) LbTrafficExtensionLoadBalancingSchemePtrInput {
	return (*lbTrafficExtensionLoadBalancingSchemePtr)(&v)
}

func (*lbTrafficExtensionLoadBalancingSchemePtr) ElementType() reflect.Type {
	return lbTrafficExtensionLoadBalancingSchemePtrType
}

func (in *lbTrafficExtensionLoadBalancingSchemePtr) ToLbTrafficExtensionLoadBalancingSchemePtrOutput() LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return pulumi.ToOutput(in).(LbTrafficExtensionLoadBalancingSchemePtrOutput)
}

func (in *lbTrafficExtensionLoadBalancingSchemePtr) ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx context.Context) LbTrafficExtensionLoadBalancingSchemePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LbTrafficExtensionLoadBalancingSchemePtrOutput)
}

func (in *lbTrafficExtensionLoadBalancingSchemePtr) ToOutput(ctx context.Context) pulumix.Output[*LbTrafficExtensionLoadBalancingScheme] {
	return pulumix.Output[*LbTrafficExtensionLoadBalancingScheme]{
		OutputState: in.ToLbTrafficExtensionLoadBalancingSchemePtrOutputWithContext(ctx).OutputState,
	}
}

// Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointPolicy resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.
type MetadataLabelMatcherMetadataLabelMatchCriteria string

const (
	// Default value. Should not be used.
	MetadataLabelMatcherMetadataLabelMatchCriteriaMetadataLabelMatchCriteriaUnspecified = MetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED")
	// At least one of the Labels specified in the matcher should match the metadata presented by xDS client.
	MetadataLabelMatcherMetadataLabelMatchCriteriaMatchAny = MetadataLabelMatcherMetadataLabelMatchCriteria("MATCH_ANY")
	// The metadata presented by the xDS client should contain all of the labels specified here.
	MetadataLabelMatcherMetadataLabelMatchCriteriaMatchAll = MetadataLabelMatcherMetadataLabelMatchCriteria("MATCH_ALL")
)

func (MetadataLabelMatcherMetadataLabelMatchCriteria) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return pulumi.ToOutput(e).(MetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return e.ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Background())
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return MetadataLabelMatcherMetadataLabelMatchCriteria(e).ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx).ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx)
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MetadataLabelMatcherMetadataLabelMatchCriteria) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MetadataLabelMatcherMetadataLabelMatchCriteriaOutput struct{ *pulumi.OutputState }

func (MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o.ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Background())
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataLabelMatcherMetadataLabelMatchCriteria) *MetadataLabelMatcherMetadataLabelMatchCriteria {
		return &v
	}).(MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetadataLabelMatcherMetadataLabelMatchCriteria) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MetadataLabelMatcherMetadataLabelMatchCriteria) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput struct{ *pulumi.OutputState }

func (MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) Elem() MetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o.ApplyT(func(v *MetadataLabelMatcherMetadataLabelMatchCriteria) MetadataLabelMatcherMetadataLabelMatchCriteria {
		if v != nil {
			return *v
		}
		var ret MetadataLabelMatcherMetadataLabelMatchCriteria
		return ret
	}).(MetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MetadataLabelMatcherMetadataLabelMatchCriteria) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MetadataLabelMatcherMetadataLabelMatchCriteriaInput is an input type that accepts values of the MetadataLabelMatcherMetadataLabelMatchCriteria enum
// A concrete instance of `MetadataLabelMatcherMetadataLabelMatchCriteriaInput` can be one of the following:
//
//	MetadataLabelMatcherMetadataLabelMatchCriteriaMetadataLabelMatchCriteriaUnspecified
//	MetadataLabelMatcherMetadataLabelMatchCriteriaMatchAny
//	MetadataLabelMatcherMetadataLabelMatchCriteriaMatchAll
type MetadataLabelMatcherMetadataLabelMatchCriteriaInput interface {
	pulumi.Input

	ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaOutput
	ToMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaOutput
}

var metadataLabelMatcherMetadataLabelMatchCriteriaPtrType = reflect.TypeOf((**MetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()

type MetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput interface {
	pulumi.Input

	ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput
	ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput
}

type metadataLabelMatcherMetadataLabelMatchCriteriaPtr string

func MetadataLabelMatcherMetadataLabelMatchCriteriaPtr(v string) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput {
	return (*metadataLabelMatcherMetadataLabelMatchCriteriaPtr)(&v)
}

func (*metadataLabelMatcherMetadataLabelMatchCriteriaPtr) ElementType() reflect.Type {
	return metadataLabelMatcherMetadataLabelMatchCriteriaPtrType
}

func (in *metadataLabelMatcherMetadataLabelMatchCriteriaPtr) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return pulumi.ToOutput(in).(MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

func (in *metadataLabelMatcherMetadataLabelMatchCriteriaPtr) ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

func (in *metadataLabelMatcherMetadataLabelMatchCriteriaPtr) ToOutput(ctx context.Context) pulumix.Output[*MetadataLabelMatcherMetadataLabelMatchCriteria] {
	return pulumix.Output[*MetadataLabelMatcherMetadataLabelMatchCriteria]{
		OutputState: in.ToMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION.
type ServiceLbPolicyLoadBalancingAlgorithm string

const (
	// The type of the loadbalancing algorithm is unspecified.
	ServiceLbPolicyLoadBalancingAlgorithmLoadBalancingAlgorithmUnspecified = ServiceLbPolicyLoadBalancingAlgorithm("LOAD_BALANCING_ALGORITHM_UNSPECIFIED")
	// Balance traffic across all backends across the world proportionally based on capacity.
	ServiceLbPolicyLoadBalancingAlgorithmSprayToWorld = ServiceLbPolicyLoadBalancingAlgorithm("SPRAY_TO_WORLD")
	// Direct traffic to the nearest region with endpoints and capacity before spilling over to other regions and spread the traffic from each client to all the MIGs/NEGs in a region.
	ServiceLbPolicyLoadBalancingAlgorithmSprayToRegion = ServiceLbPolicyLoadBalancingAlgorithm("SPRAY_TO_REGION")
	// Direct traffic to the nearest region with endpoints and capacity before spilling over to other regions. All MIGs/NEGs within a region are evenly loaded but each client might not spread the traffic to all the MIGs/NEGs in the region.
	ServiceLbPolicyLoadBalancingAlgorithmWaterfallByRegion = ServiceLbPolicyLoadBalancingAlgorithm("WATERFALL_BY_REGION")
	// Attempt to keep traffic in a single zone closest to the client, before spilling over to other zones.
	ServiceLbPolicyLoadBalancingAlgorithmWaterfallByZone = ServiceLbPolicyLoadBalancingAlgorithm("WATERFALL_BY_ZONE")
)

func (ServiceLbPolicyLoadBalancingAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLbPolicyLoadBalancingAlgorithm)(nil)).Elem()
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToServiceLbPolicyLoadBalancingAlgorithmOutput() ServiceLbPolicyLoadBalancingAlgorithmOutput {
	return pulumi.ToOutput(e).(ServiceLbPolicyLoadBalancingAlgorithmOutput)
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToServiceLbPolicyLoadBalancingAlgorithmOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceLbPolicyLoadBalancingAlgorithmOutput)
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutput() ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return e.ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(context.Background())
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return ServiceLbPolicyLoadBalancingAlgorithm(e).ToServiceLbPolicyLoadBalancingAlgorithmOutputWithContext(ctx).ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx)
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceLbPolicyLoadBalancingAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceLbPolicyLoadBalancingAlgorithmOutput struct{ *pulumi.OutputState }

func (ServiceLbPolicyLoadBalancingAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLbPolicyLoadBalancingAlgorithm)(nil)).Elem()
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToServiceLbPolicyLoadBalancingAlgorithmOutput() ServiceLbPolicyLoadBalancingAlgorithmOutput {
	return o
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToServiceLbPolicyLoadBalancingAlgorithmOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmOutput {
	return o
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutput() ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return o.ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(context.Background())
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLbPolicyLoadBalancingAlgorithm) *ServiceLbPolicyLoadBalancingAlgorithm {
		return &v
	}).(ServiceLbPolicyLoadBalancingAlgorithmPtrOutput)
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLbPolicyLoadBalancingAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLbPolicyLoadBalancingAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceLbPolicyLoadBalancingAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceLbPolicyLoadBalancingAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLbPolicyLoadBalancingAlgorithm)(nil)).Elem()
}

func (o ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutput() ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return o
}

func (o ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return o
}

func (o ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) Elem() ServiceLbPolicyLoadBalancingAlgorithmOutput {
	return o.ApplyT(func(v *ServiceLbPolicyLoadBalancingAlgorithm) ServiceLbPolicyLoadBalancingAlgorithm {
		if v != nil {
			return *v
		}
		var ret ServiceLbPolicyLoadBalancingAlgorithm
		return ret
	}).(ServiceLbPolicyLoadBalancingAlgorithmOutput)
}

func (o ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceLbPolicyLoadBalancingAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceLbPolicyLoadBalancingAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServiceLbPolicyLoadBalancingAlgorithmInput is an input type that accepts values of the ServiceLbPolicyLoadBalancingAlgorithm enum
// A concrete instance of `ServiceLbPolicyLoadBalancingAlgorithmInput` can be one of the following:
//
//	ServiceLbPolicyLoadBalancingAlgorithmLoadBalancingAlgorithmUnspecified
//	ServiceLbPolicyLoadBalancingAlgorithmSprayToWorld
//	ServiceLbPolicyLoadBalancingAlgorithmSprayToRegion
//	ServiceLbPolicyLoadBalancingAlgorithmWaterfallByRegion
//	ServiceLbPolicyLoadBalancingAlgorithmWaterfallByZone
type ServiceLbPolicyLoadBalancingAlgorithmInput interface {
	pulumi.Input

	ToServiceLbPolicyLoadBalancingAlgorithmOutput() ServiceLbPolicyLoadBalancingAlgorithmOutput
	ToServiceLbPolicyLoadBalancingAlgorithmOutputWithContext(context.Context) ServiceLbPolicyLoadBalancingAlgorithmOutput
}

var serviceLbPolicyLoadBalancingAlgorithmPtrType = reflect.TypeOf((**ServiceLbPolicyLoadBalancingAlgorithm)(nil)).Elem()

type ServiceLbPolicyLoadBalancingAlgorithmPtrInput interface {
	pulumi.Input

	ToServiceLbPolicyLoadBalancingAlgorithmPtrOutput() ServiceLbPolicyLoadBalancingAlgorithmPtrOutput
	ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(context.Context) ServiceLbPolicyLoadBalancingAlgorithmPtrOutput
}

type serviceLbPolicyLoadBalancingAlgorithmPtr string

func ServiceLbPolicyLoadBalancingAlgorithmPtr(v string) ServiceLbPolicyLoadBalancingAlgorithmPtrInput {
	return (*serviceLbPolicyLoadBalancingAlgorithmPtr)(&v)
}

func (*serviceLbPolicyLoadBalancingAlgorithmPtr) ElementType() reflect.Type {
	return serviceLbPolicyLoadBalancingAlgorithmPtrType
}

func (in *serviceLbPolicyLoadBalancingAlgorithmPtr) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutput() ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(ServiceLbPolicyLoadBalancingAlgorithmPtrOutput)
}

func (in *serviceLbPolicyLoadBalancingAlgorithmPtr) ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx context.Context) ServiceLbPolicyLoadBalancingAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceLbPolicyLoadBalancingAlgorithmPtrOutput)
}

func (in *serviceLbPolicyLoadBalancingAlgorithmPtr) ToOutput(ctx context.Context) pulumix.Output[*ServiceLbPolicyLoadBalancingAlgorithm] {
	return pulumix.Output[*ServiceLbPolicyLoadBalancingAlgorithm]{
		OutputState: in.ToServiceLbPolicyLoadBalancingAlgorithmPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPolicyTypeInput)(nil)).Elem(), EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPolicyTypePtrInput)(nil)).Elem(), EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionChainExtensionSupportedEventsItemInput)(nil)).Elem(), ExtensionChainExtensionSupportedEventsItem("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionChainExtensionSupportedEventsItemPtrInput)(nil)).Elem(), ExtensionChainExtensionSupportedEventsItem("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionChainExtensionSupportedEventsItemArrayInput)(nil)).Elem(), ExtensionChainExtensionSupportedEventsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypeInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypePtrInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteHeaderMatchTypeInput)(nil)).Elem(), GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteHeaderMatchTypePtrInput)(nil)).Elem(), GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteMethodMatchTypeInput)(nil)).Elem(), GrpcRouteMethodMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteMethodMatchTypePtrInput)(nil)).Elem(), GrpcRouteMethodMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRouteRedirectResponseCodeInput)(nil)).Elem(), HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRouteRedirectResponseCodePtrInput)(nil)).Elem(), HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LbRouteExtensionLoadBalancingSchemeInput)(nil)).Elem(), LbRouteExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LbRouteExtensionLoadBalancingSchemePtrInput)(nil)).Elem(), LbRouteExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionLoadBalancingSchemeInput)(nil)).Elem(), LbTrafficExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionLoadBalancingSchemePtrInput)(nil)).Elem(), LbTrafficExtensionLoadBalancingScheme("LOAD_BALANCING_SCHEME_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataLabelMatcherMetadataLabelMatchCriteriaInput)(nil)).Elem(), MetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput)(nil)).Elem(), MetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLbPolicyLoadBalancingAlgorithmInput)(nil)).Elem(), ServiceLbPolicyLoadBalancingAlgorithm("LOAD_BALANCING_ALGORITHM_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLbPolicyLoadBalancingAlgorithmPtrInput)(nil)).Elem(), ServiceLbPolicyLoadBalancingAlgorithm("LOAD_BALANCING_ALGORITHM_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(EndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(EndpointPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(ExtensionChainExtensionSupportedEventsItemOutput{})
	pulumi.RegisterOutputType(ExtensionChainExtensionSupportedEventsItemPtrOutput{})
	pulumi.RegisterOutputType(ExtensionChainExtensionSupportedEventsItemArrayOutput{})
	pulumi.RegisterOutputType(GatewayTypeOutput{})
	pulumi.RegisterOutputType(GatewayTypePtrOutput{})
	pulumi.RegisterOutputType(GrpcRouteHeaderMatchTypeOutput{})
	pulumi.RegisterOutputType(GrpcRouteHeaderMatchTypePtrOutput{})
	pulumi.RegisterOutputType(GrpcRouteMethodMatchTypeOutput{})
	pulumi.RegisterOutputType(GrpcRouteMethodMatchTypePtrOutput{})
	pulumi.RegisterOutputType(HttpRouteRedirectResponseCodeOutput{})
	pulumi.RegisterOutputType(HttpRouteRedirectResponseCodePtrOutput{})
	pulumi.RegisterOutputType(LbRouteExtensionLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(LbRouteExtensionLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(LbTrafficExtensionLoadBalancingSchemeOutput{})
	pulumi.RegisterOutputType(LbTrafficExtensionLoadBalancingSchemePtrOutput{})
	pulumi.RegisterOutputType(MetadataLabelMatcherMetadataLabelMatchCriteriaOutput{})
	pulumi.RegisterOutputType(MetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput{})
	pulumi.RegisterOutputType(ServiceLbPolicyLoadBalancingAlgorithmOutput{})
	pulumi.RegisterOutputType(ServiceLbPolicyLoadBalancingAlgorithmPtrOutput{})
}
