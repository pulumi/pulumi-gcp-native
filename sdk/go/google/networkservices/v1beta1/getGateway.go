// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Gateway.
func LookupGateway(ctx *pulumi.Context, args *LookupGatewayArgs, opts ...pulumi.InvokeOption) (*LookupGatewayResult, error) {
	var rv LookupGatewayResult
	err := ctx.Invoke("google-native:networkservices/v1beta1:getGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayArgs struct {
	GatewayId string  `pulumi:"gatewayId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
}

type LookupGatewayResult struct {
	// The timestamp when the resource was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. A free-text description of the resource. Max length 1024 characters.
	Description string `pulumi:"description"`
	// Optional. Set of label tags associated with the Gateway resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Gateway resource. It matches pattern `projects/*/locations/global/gateways/`.
	Name string `pulumi:"name"`
	// One or more ports that the Gateway must receive traffic on. The proxy binds to the ports specified. Gateway listen on 0.0.0.0 on the ports specified below.
	Ports []int `pulumi:"ports"`
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope string `pulumi:"scope"`
	// Server-defined URL of this resource
	SelfLink string `pulumi:"selfLink"`
	// Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.
	ServerTlsPolicy string `pulumi:"serverTlsPolicy"`
	// Immutable. The type of the customer managed gateway.
	Type string `pulumi:"type"`
	// The timestamp when the resource was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupGatewayOutput(ctx *pulumi.Context, args LookupGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayResult, error) {
			args := v.(LookupGatewayArgs)
			r, err := LookupGateway(ctx, &args, opts...)
			var s LookupGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayResultOutput)
}

type LookupGatewayOutputArgs struct {
	GatewayId pulumi.StringInput    `pulumi:"gatewayId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayArgs)(nil)).Elem()
}

type LookupGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayResult)(nil)).Elem()
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutput() LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutputWithContext(ctx context.Context) LookupGatewayResultOutput {
	return o
}

// The timestamp when the resource was created.
func (o LookupGatewayResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A free-text description of the resource. Max length 1024 characters.
func (o LookupGatewayResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Set of label tags associated with the Gateway resource.
func (o LookupGatewayResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGatewayResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Gateway resource. It matches pattern `projects/*/locations/global/gateways/`.
func (o LookupGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// One or more ports that the Gateway must receive traffic on. The proxy binds to the ports specified. Gateway listen on 0.0.0.0 on the ports specified below.
func (o LookupGatewayResultOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
func (o LookupGatewayResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Scope }).(pulumi.StringOutput)
}

// Server-defined URL of this resource
func (o LookupGatewayResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.
func (o LookupGatewayResultOutput) ServerTlsPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.ServerTlsPolicy }).(pulumi.StringOutput)
}

// Immutable. The type of the customer managed gateway.
func (o LookupGatewayResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Type }).(pulumi.StringOutput)
}

// The timestamp when the resource was updated.
func (o LookupGatewayResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayResultOutput{})
}
