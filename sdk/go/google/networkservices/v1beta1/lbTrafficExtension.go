// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new `LbTrafficExtension` resource in a given project and location.
type LbTrafficExtension struct {
	pulumi.CustomResourceState

	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. A human-readable description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	ExtensionChains ExtensionChainResponseArrayOutput `pulumi:"extensionChains"`
	// A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LBTrafficExtension` resource per forwarding rule.
	ForwardingRules pulumi.StringArrayOutput `pulumi:"forwardingRules"`
	// Optional. Set of labels associated with the `LbTrafficExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Required. User-provided ID of the `LbTrafficExtension` resource to be created.
	LbTrafficExtensionId pulumi.StringOutput `pulumi:"lbTrafficExtensionId"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
	LoadBalancingScheme pulumi.StringOutput `pulumi:"loadBalancingScheme"`
	Location            pulumi.StringOutput `pulumi:"location"`
	// Name of the `LbTrafficExtension` resource in the following format: `projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewLbTrafficExtension registers a new resource with the given unique name, arguments, and options.
func NewLbTrafficExtension(ctx *pulumi.Context,
	name string, args *LbTrafficExtensionArgs, opts ...pulumi.ResourceOption) (*LbTrafficExtension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtensionChains == nil {
		return nil, errors.New("invalid value for required argument 'ExtensionChains'")
	}
	if args.ForwardingRules == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRules'")
	}
	if args.LbTrafficExtensionId == nil {
		return nil, errors.New("invalid value for required argument 'LbTrafficExtensionId'")
	}
	if args.LoadBalancingScheme == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancingScheme'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"lbTrafficExtensionId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LbTrafficExtension
	err := ctx.RegisterResource("google-native:networkservices/v1beta1:LbTrafficExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbTrafficExtension gets an existing LbTrafficExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbTrafficExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbTrafficExtensionState, opts ...pulumi.ResourceOption) (*LbTrafficExtension, error) {
	var resource LbTrafficExtension
	err := ctx.ReadResource("google-native:networkservices/v1beta1:LbTrafficExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbTrafficExtension resources.
type lbTrafficExtensionState struct {
}

type LbTrafficExtensionState struct {
}

func (LbTrafficExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTrafficExtensionState)(nil)).Elem()
}

type lbTrafficExtensionArgs struct {
	// Optional. A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	ExtensionChains []ExtensionChain `pulumi:"extensionChains"`
	// A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LBTrafficExtension` resource per forwarding rule.
	ForwardingRules []string `pulumi:"forwardingRules"`
	// Optional. Set of labels associated with the `LbTrafficExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
	Labels map[string]string `pulumi:"labels"`
	// Required. User-provided ID of the `LbTrafficExtension` resource to be created.
	LbTrafficExtensionId string `pulumi:"lbTrafficExtensionId"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
	LoadBalancingScheme LbTrafficExtensionLoadBalancingScheme `pulumi:"loadBalancingScheme"`
	Location            *string                               `pulumi:"location"`
	// Name of the `LbTrafficExtension` resource in the following format: `projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}`.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a LbTrafficExtension resource.
type LbTrafficExtensionArgs struct {
	// Optional. A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
	ExtensionChains ExtensionChainArrayInput
	// A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LBTrafficExtension` resource per forwarding rule.
	ForwardingRules pulumi.StringArrayInput
	// Optional. Set of labels associated with the `LbTrafficExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
	Labels pulumi.StringMapInput
	// Required. User-provided ID of the `LbTrafficExtension` resource to be created.
	LbTrafficExtensionId pulumi.StringInput
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
	LoadBalancingScheme LbTrafficExtensionLoadBalancingSchemeInput
	Location            pulumi.StringPtrInput
	// Name of the `LbTrafficExtension` resource in the following format: `projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}`.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (LbTrafficExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTrafficExtensionArgs)(nil)).Elem()
}

type LbTrafficExtensionInput interface {
	pulumi.Input

	ToLbTrafficExtensionOutput() LbTrafficExtensionOutput
	ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput
}

func (*LbTrafficExtension) ElementType() reflect.Type {
	return reflect.TypeOf((**LbTrafficExtension)(nil)).Elem()
}

func (i *LbTrafficExtension) ToLbTrafficExtensionOutput() LbTrafficExtensionOutput {
	return i.ToLbTrafficExtensionOutputWithContext(context.Background())
}

func (i *LbTrafficExtension) ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTrafficExtensionOutput)
}

type LbTrafficExtensionOutput struct{ *pulumi.OutputState }

func (LbTrafficExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LbTrafficExtension)(nil)).Elem()
}

func (o LbTrafficExtensionOutput) ToLbTrafficExtensionOutput() LbTrafficExtensionOutput {
	return o
}

func (o LbTrafficExtensionOutput) ToLbTrafficExtensionOutputWithContext(ctx context.Context) LbTrafficExtensionOutput {
	return o
}

// The timestamp when the resource was created.
func (o LbTrafficExtensionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A human-readable description of the resource.
func (o LbTrafficExtensionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
func (o LbTrafficExtensionOutput) ExtensionChains() ExtensionChainResponseArrayOutput {
	return o.ApplyT(func(v *LbTrafficExtension) ExtensionChainResponseArrayOutput { return v.ExtensionChains }).(ExtensionChainResponseArrayOutput)
}

// A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LBTrafficExtension` resource per forwarding rule.
func (o LbTrafficExtensionOutput) ForwardingRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringArrayOutput { return v.ForwardingRules }).(pulumi.StringArrayOutput)
}

// Optional. Set of labels associated with the `LbTrafficExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
func (o LbTrafficExtensionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Required. User-provided ID of the `LbTrafficExtension` resource to be created.
func (o LbTrafficExtensionOutput) LbTrafficExtensionId() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.LbTrafficExtensionId }).(pulumi.StringOutput)
}

// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
func (o LbTrafficExtensionOutput) LoadBalancingScheme() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.LoadBalancingScheme }).(pulumi.StringOutput)
}

func (o LbTrafficExtensionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the `LbTrafficExtension` resource in the following format: `projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}`.
func (o LbTrafficExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LbTrafficExtensionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o LbTrafficExtensionOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The timestamp when the resource was updated.
func (o LbTrafficExtensionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LbTrafficExtension) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LbTrafficExtensionInput)(nil)).Elem(), &LbTrafficExtension{})
	pulumi.RegisterOutputType(LbTrafficExtensionOutput{})
}
