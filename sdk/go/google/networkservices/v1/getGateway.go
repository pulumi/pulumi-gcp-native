// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Gateway.
func LookupGateway(ctx *pulumi.Context, args *LookupGatewayArgs, opts ...pulumi.InvokeOption) (*LookupGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayResult
	err := ctx.Invoke("google-native:networkservices/v1:getGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayArgs struct {
	GatewayId string  `pulumi:"gatewayId"`
	Location  string  `pulumi:"location"`
	Project   *string `pulumi:"project"`
}

type LookupGatewayResult struct {
	// Optional. Zero or one IPv4 or IPv6 address on which the Gateway will receive the traffic. When no address is provided, an IP from the subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 for IPv4 and :: for IPv6.
	Addresses []string `pulumi:"addresses"`
	// Optional. A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls []string `pulumi:"certificateUrls"`
	// The timestamp when the resource was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. A free-text description of the resource. Max length 1024 characters.
	Description string `pulumi:"description"`
	// Optional. A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM to Proxy) initiated connections. For example: `projects/*/locations/*/gatewaySecurityPolicies/swg-policy`. This policy is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy string `pulumi:"gatewaySecurityPolicy"`
	// Optional. Set of label tags associated with the Gateway resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Gateway resource. It matches pattern `projects/*/locations/*/gateways/`.
	Name string `pulumi:"name"`
	// Optional. The relative resource name identifying the VPC network that is using this configuration. For example: `projects/*/global/networks/network-1`. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network string `pulumi:"network"`
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports. Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 for IPv4 and :: for IPv6 and support multiple ports.
	Ports []int `pulumi:"ports"`
	// Optional. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope string `pulumi:"scope"`
	// Server-defined URL of this resource
	SelfLink string `pulumi:"selfLink"`
	// Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.
	ServerTlsPolicy string `pulumi:"serverTlsPolicy"`
	// Optional. The relative resource name identifying the subnetwork in which this SWG is allocated. For example: `projects/*/regions/us-central1/subnetworks/network-1` Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY".
	Subnetwork string `pulumi:"subnetwork"`
	// Immutable. The type of the customer managed gateway. This field is required. If unspecified, an error is returned.
	Type string `pulumi:"type"`
	// The timestamp when the resource was updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupGatewayOutput(ctx *pulumi.Context, args LookupGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayResult, error) {
			args := v.(LookupGatewayArgs)
			r, err := LookupGateway(ctx, &args, opts...)
			var s LookupGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayResultOutput)
}

type LookupGatewayOutputArgs struct {
	GatewayId pulumi.StringInput    `pulumi:"gatewayId"`
	Location  pulumi.StringInput    `pulumi:"location"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayArgs)(nil)).Elem()
}

type LookupGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayResult)(nil)).Elem()
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutput() LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutputWithContext(ctx context.Context) LookupGatewayResultOutput {
	return o
}

// Optional. Zero or one IPv4 or IPv6 address on which the Gateway will receive the traffic. When no address is provided, an IP from the subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 for IPv4 and :: for IPv6.
func (o LookupGatewayResultOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Optional. A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
func (o LookupGatewayResultOutput) CertificateUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []string { return v.CertificateUrls }).(pulumi.StringArrayOutput)
}

// The timestamp when the resource was created.
func (o LookupGatewayResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. A free-text description of the resource. Max length 1024 characters.
func (o LookupGatewayResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM to Proxy) initiated connections. For example: `projects/*/locations/*/gatewaySecurityPolicies/swg-policy`. This policy is specific to gateways of type 'SECURE_WEB_GATEWAY'.
func (o LookupGatewayResultOutput) GatewaySecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.GatewaySecurityPolicy }).(pulumi.StringOutput)
}

// Optional. Set of label tags associated with the Gateway resource.
func (o LookupGatewayResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupGatewayResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Gateway resource. It matches pattern `projects/*/locations/*/gateways/`.
func (o LookupGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. The relative resource name identifying the VPC network that is using this configuration. For example: `projects/*/global/networks/network-1`. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
func (o LookupGatewayResultOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Network }).(pulumi.StringOutput)
}

// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports. Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 for IPv4 and :: for IPv6 and support multiple ports.
func (o LookupGatewayResultOutput) Ports() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []int { return v.Ports }).(pulumi.IntArrayOutput)
}

// Optional. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
func (o LookupGatewayResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Scope }).(pulumi.StringOutput)
}

// Server-defined URL of this resource
func (o LookupGatewayResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.
func (o LookupGatewayResultOutput) ServerTlsPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.ServerTlsPolicy }).(pulumi.StringOutput)
}

// Optional. The relative resource name identifying the subnetwork in which this SWG is allocated. For example: `projects/*/regions/us-central1/subnetworks/network-1` Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY".
func (o LookupGatewayResultOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Subnetwork }).(pulumi.StringOutput)
}

// Immutable. The type of the customer managed gateway. This field is required. If unspecified, an error is returned.
func (o LookupGatewayResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.Type }).(pulumi.StringOutput)
}

// The timestamp when the resource was updated.
func (o LookupGatewayResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayResultOutput{})
}
