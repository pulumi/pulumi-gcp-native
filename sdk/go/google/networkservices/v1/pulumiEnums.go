// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//          AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

// Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointPolicy resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.
type EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria string

const (
	// Default value. Should not be used.
	EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaMetadataLabelMatchCriteriaUnspecified = EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED")
	// At least one of the Labels specified in the matcher should match the metadata presented by xDS client.
	EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaMatchAny = EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria("MATCH_ANY")
	// The metadata presented by the xDS client should contain all of the labels specified here.
	EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaMatchAll = EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria("MATCH_ALL")
)

func (EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return pulumi.ToOutput(e).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return e.ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Background())
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria(e).ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx).ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx)
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput struct{ *pulumi.OutputState }

func (EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o.ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Background())
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) *EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria {
		return &v
	}).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput struct{ *pulumi.OutputState }

func (EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return o
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) Elem() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput {
	return o.ApplyT(func(v *EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria {
		if v != nil {
			return *v
		}
		var ret EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria
		return ret
	}).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput)
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaInput is an input type that accepts EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaArgs and EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput values.
// You can construct a concrete instance of `EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaInput` via:
//
//          EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaArgs{...}
type EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaInput interface {
	pulumi.Input

	ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput
	ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutputWithContext(context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput
}

var endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrType = reflect.TypeOf((**EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria)(nil)).Elem()

type EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput interface {
	pulumi.Input

	ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput
	ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput
}

type endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr string

func EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr(v string) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput {
	return (*endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr)(&v)
}

func (*endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr) ElementType() reflect.Type {
	return endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrType
}

func (in *endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput() EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return pulumi.ToOutput(in).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

func (in *endpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtr) ToEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutputWithContext(ctx context.Context) EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput)
}

// Required. The type of endpoint policy. This is primarily used to validate the configuration.
type EndpointPolicyType string

const (
	// Default value. Must not be used.
	EndpointPolicyTypeEndpointPolicyTypeUnspecified = EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED")
	// Represents a proxy deployed as a sidecar.
	EndpointPolicyTypeSidecarProxy = EndpointPolicyType("SIDECAR_PROXY")
	// Represents a proxyless gRPC backend.
	EndpointPolicyTypeGrpcServer = EndpointPolicyType("GRPC_SERVER")
)

func (EndpointPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPolicyType)(nil)).Elem()
}

func (e EndpointPolicyType) ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput {
	return pulumi.ToOutput(e).(EndpointPolicyTypeOutput)
}

func (e EndpointPolicyType) ToEndpointPolicyTypeOutputWithContext(ctx context.Context) EndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointPolicyTypeOutput)
}

func (e EndpointPolicyType) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return e.ToEndpointPolicyTypePtrOutputWithContext(context.Background())
}

func (e EndpointPolicyType) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return EndpointPolicyType(e).ToEndpointPolicyTypeOutputWithContext(ctx).ToEndpointPolicyTypePtrOutputWithContext(ctx)
}

func (e EndpointPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (EndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPolicyType)(nil)).Elem()
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput {
	return o
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypeOutputWithContext(ctx context.Context) EndpointPolicyTypeOutput {
	return o
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return o.ToEndpointPolicyTypePtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointPolicyType) *EndpointPolicyType {
		return &v
	}).(EndpointPolicyTypePtrOutput)
}

func (o EndpointPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointPolicyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPolicyType)(nil)).Elem()
}

func (o EndpointPolicyTypePtrOutput) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return o
}

func (o EndpointPolicyTypePtrOutput) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return o
}

func (o EndpointPolicyTypePtrOutput) Elem() EndpointPolicyTypeOutput {
	return o.ApplyT(func(v *EndpointPolicyType) EndpointPolicyType {
		if v != nil {
			return *v
		}
		var ret EndpointPolicyType
		return ret
	}).(EndpointPolicyTypeOutput)
}

func (o EndpointPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointPolicyTypeInput is an input type that accepts EndpointPolicyTypeArgs and EndpointPolicyTypeOutput values.
// You can construct a concrete instance of `EndpointPolicyTypeInput` via:
//
//          EndpointPolicyTypeArgs{...}
type EndpointPolicyTypeInput interface {
	pulumi.Input

	ToEndpointPolicyTypeOutput() EndpointPolicyTypeOutput
	ToEndpointPolicyTypeOutputWithContext(context.Context) EndpointPolicyTypeOutput
}

var endpointPolicyTypePtrType = reflect.TypeOf((**EndpointPolicyType)(nil)).Elem()

type EndpointPolicyTypePtrInput interface {
	pulumi.Input

	ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput
	ToEndpointPolicyTypePtrOutputWithContext(context.Context) EndpointPolicyTypePtrOutput
}

type endpointPolicyTypePtr string

func EndpointPolicyTypePtr(v string) EndpointPolicyTypePtrInput {
	return (*endpointPolicyTypePtr)(&v)
}

func (*endpointPolicyTypePtr) ElementType() reflect.Type {
	return endpointPolicyTypePtrType
}

func (in *endpointPolicyTypePtr) ToEndpointPolicyTypePtrOutput() EndpointPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(EndpointPolicyTypePtrOutput)
}

func (in *endpointPolicyTypePtr) ToEndpointPolicyTypePtrOutputWithContext(ctx context.Context) EndpointPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointPolicyTypePtrOutput)
}

// Immutable. The type of the customer managed gateway.
type GatewayType string

const (
	// The type of the customer managed gateway is unspecified.
	GatewayTypeTypeUnspecified = GatewayType("TYPE_UNSPECIFIED")
	// The type of the customer managed gateway is TrafficDirector Open Mesh.
	GatewayTypeOpenMesh = GatewayType("OPEN_MESH")
	// The type of the customer managed gateway is SecureWebGateway (SWG).
	GatewayTypeSecureWebGateway = GatewayType("SECURE_WEB_GATEWAY")
)

func (GatewayType) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (e GatewayType) ToGatewayTypeOutput() GatewayTypeOutput {
	return pulumi.ToOutput(e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return e.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (e GatewayType) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return GatewayType(e).ToGatewayTypeOutputWithContext(ctx).ToGatewayTypePtrOutputWithContext(ctx)
}

func (e GatewayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GatewayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GatewayTypeOutput struct{ *pulumi.OutputState }

func (GatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (o GatewayTypeOutput) ToGatewayTypeOutput() GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayType) *GatewayType {
		return &v
	}).(GatewayTypePtrOutput)
}

func (o GatewayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayTypePtrOutput struct{ *pulumi.OutputState }

func (GatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayType)(nil)).Elem()
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) Elem() GatewayTypeOutput {
	return o.ApplyT(func(v *GatewayType) GatewayType {
		if v != nil {
			return *v
		}
		var ret GatewayType
		return ret
	}).(GatewayTypeOutput)
}

func (o GatewayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GatewayTypeInput is an input type that accepts GatewayTypeArgs and GatewayTypeOutput values.
// You can construct a concrete instance of `GatewayTypeInput` via:
//
//          GatewayTypeArgs{...}
type GatewayTypeInput interface {
	pulumi.Input

	ToGatewayTypeOutput() GatewayTypeOutput
	ToGatewayTypeOutputWithContext(context.Context) GatewayTypeOutput
}

var gatewayTypePtrType = reflect.TypeOf((**GatewayType)(nil)).Elem()

type GatewayTypePtrInput interface {
	pulumi.Input

	ToGatewayTypePtrOutput() GatewayTypePtrOutput
	ToGatewayTypePtrOutputWithContext(context.Context) GatewayTypePtrOutput
}

type gatewayTypePtr string

func GatewayTypePtr(v string) GatewayTypePtrInput {
	return (*gatewayTypePtr)(&v)
}

func (*gatewayTypePtr) ElementType() reflect.Type {
	return gatewayTypePtrType
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return pulumi.ToOutput(in).(GatewayTypePtrOutput)
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GatewayTypePtrOutput)
}

// Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.
type GrpcRouteHeaderMatchType string

const (
	// Unspecified.
	GrpcRouteHeaderMatchTypeTypeUnspecified = GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED")
	// Will only match the exact value provided.
	GrpcRouteHeaderMatchTypeExact = GrpcRouteHeaderMatchType("EXACT")
	// Will match paths conforming to the prefix specified by value. RE2 syntax is supported.
	GrpcRouteHeaderMatchTypeRegularExpression = GrpcRouteHeaderMatchType("REGULAR_EXPRESSION")
)

func (GrpcRouteHeaderMatchType) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput {
	return pulumi.ToOutput(e).(GrpcRouteHeaderMatchTypeOutput)
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GrpcRouteHeaderMatchTypeOutput)
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return e.ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Background())
}

func (e GrpcRouteHeaderMatchType) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return GrpcRouteHeaderMatchType(e).ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx).ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx)
}

func (e GrpcRouteHeaderMatchType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteHeaderMatchType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteHeaderMatchType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GrpcRouteHeaderMatchType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GrpcRouteHeaderMatchTypeOutput struct{ *pulumi.OutputState }

func (GrpcRouteHeaderMatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypeOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypeOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return o.ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrpcRouteHeaderMatchType) *GrpcRouteHeaderMatchType {
		return &v
	}).(GrpcRouteHeaderMatchTypePtrOutput)
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteHeaderMatchType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteHeaderMatchType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GrpcRouteHeaderMatchTypePtrOutput struct{ *pulumi.OutputState }

func (GrpcRouteHeaderMatchTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrpcRouteHeaderMatchType)(nil)).Elem()
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return o
}

func (o GrpcRouteHeaderMatchTypePtrOutput) Elem() GrpcRouteHeaderMatchTypeOutput {
	return o.ApplyT(func(v *GrpcRouteHeaderMatchType) GrpcRouteHeaderMatchType {
		if v != nil {
			return *v
		}
		var ret GrpcRouteHeaderMatchType
		return ret
	}).(GrpcRouteHeaderMatchTypeOutput)
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteHeaderMatchTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GrpcRouteHeaderMatchType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GrpcRouteHeaderMatchTypeInput is an input type that accepts GrpcRouteHeaderMatchTypeArgs and GrpcRouteHeaderMatchTypeOutput values.
// You can construct a concrete instance of `GrpcRouteHeaderMatchTypeInput` via:
//
//          GrpcRouteHeaderMatchTypeArgs{...}
type GrpcRouteHeaderMatchTypeInput interface {
	pulumi.Input

	ToGrpcRouteHeaderMatchTypeOutput() GrpcRouteHeaderMatchTypeOutput
	ToGrpcRouteHeaderMatchTypeOutputWithContext(context.Context) GrpcRouteHeaderMatchTypeOutput
}

var grpcRouteHeaderMatchTypePtrType = reflect.TypeOf((**GrpcRouteHeaderMatchType)(nil)).Elem()

type GrpcRouteHeaderMatchTypePtrInput interface {
	pulumi.Input

	ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput
	ToGrpcRouteHeaderMatchTypePtrOutputWithContext(context.Context) GrpcRouteHeaderMatchTypePtrOutput
}

type grpcRouteHeaderMatchTypePtr string

func GrpcRouteHeaderMatchTypePtr(v string) GrpcRouteHeaderMatchTypePtrInput {
	return (*grpcRouteHeaderMatchTypePtr)(&v)
}

func (*grpcRouteHeaderMatchTypePtr) ElementType() reflect.Type {
	return grpcRouteHeaderMatchTypePtrType
}

func (in *grpcRouteHeaderMatchTypePtr) ToGrpcRouteHeaderMatchTypePtrOutput() GrpcRouteHeaderMatchTypePtrOutput {
	return pulumi.ToOutput(in).(GrpcRouteHeaderMatchTypePtrOutput)
}

func (in *grpcRouteHeaderMatchTypePtr) ToGrpcRouteHeaderMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteHeaderMatchTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GrpcRouteHeaderMatchTypePtrOutput)
}

// Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
type GrpcRouteMethodMatchType string

const (
	// Unspecified.
	GrpcRouteMethodMatchTypeTypeUnspecified = GrpcRouteMethodMatchType("TYPE_UNSPECIFIED")
	// Will only match the exact name provided.
	GrpcRouteMethodMatchTypeExact = GrpcRouteMethodMatchType("EXACT")
	// Will interpret grpc_method and grpc_service as regexes. RE2 syntax is supported.
	GrpcRouteMethodMatchTypeRegularExpression = GrpcRouteMethodMatchType("REGULAR_EXPRESSION")
)

func (GrpcRouteMethodMatchType) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteMethodMatchType)(nil)).Elem()
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput {
	return pulumi.ToOutput(e).(GrpcRouteMethodMatchTypeOutput)
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypeOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GrpcRouteMethodMatchTypeOutput)
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return e.ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Background())
}

func (e GrpcRouteMethodMatchType) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return GrpcRouteMethodMatchType(e).ToGrpcRouteMethodMatchTypeOutputWithContext(ctx).ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx)
}

func (e GrpcRouteMethodMatchType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteMethodMatchType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GrpcRouteMethodMatchType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GrpcRouteMethodMatchType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GrpcRouteMethodMatchTypeOutput struct{ *pulumi.OutputState }

func (GrpcRouteMethodMatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrpcRouteMethodMatchType)(nil)).Elem()
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput {
	return o
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypeOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypeOutput {
	return o
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return o.ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GrpcRouteMethodMatchType) *GrpcRouteMethodMatchType {
		return &v
	}).(GrpcRouteMethodMatchTypePtrOutput)
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteMethodMatchType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GrpcRouteMethodMatchType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GrpcRouteMethodMatchTypePtrOutput struct{ *pulumi.OutputState }

func (GrpcRouteMethodMatchTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrpcRouteMethodMatchType)(nil)).Elem()
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return o
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return o
}

func (o GrpcRouteMethodMatchTypePtrOutput) Elem() GrpcRouteMethodMatchTypeOutput {
	return o.ApplyT(func(v *GrpcRouteMethodMatchType) GrpcRouteMethodMatchType {
		if v != nil {
			return *v
		}
		var ret GrpcRouteMethodMatchType
		return ret
	}).(GrpcRouteMethodMatchTypeOutput)
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GrpcRouteMethodMatchTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GrpcRouteMethodMatchType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GrpcRouteMethodMatchTypeInput is an input type that accepts GrpcRouteMethodMatchTypeArgs and GrpcRouteMethodMatchTypeOutput values.
// You can construct a concrete instance of `GrpcRouteMethodMatchTypeInput` via:
//
//          GrpcRouteMethodMatchTypeArgs{...}
type GrpcRouteMethodMatchTypeInput interface {
	pulumi.Input

	ToGrpcRouteMethodMatchTypeOutput() GrpcRouteMethodMatchTypeOutput
	ToGrpcRouteMethodMatchTypeOutputWithContext(context.Context) GrpcRouteMethodMatchTypeOutput
}

var grpcRouteMethodMatchTypePtrType = reflect.TypeOf((**GrpcRouteMethodMatchType)(nil)).Elem()

type GrpcRouteMethodMatchTypePtrInput interface {
	pulumi.Input

	ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput
	ToGrpcRouteMethodMatchTypePtrOutputWithContext(context.Context) GrpcRouteMethodMatchTypePtrOutput
}

type grpcRouteMethodMatchTypePtr string

func GrpcRouteMethodMatchTypePtr(v string) GrpcRouteMethodMatchTypePtrInput {
	return (*grpcRouteMethodMatchTypePtr)(&v)
}

func (*grpcRouteMethodMatchTypePtr) ElementType() reflect.Type {
	return grpcRouteMethodMatchTypePtrType
}

func (in *grpcRouteMethodMatchTypePtr) ToGrpcRouteMethodMatchTypePtrOutput() GrpcRouteMethodMatchTypePtrOutput {
	return pulumi.ToOutput(in).(GrpcRouteMethodMatchTypePtrOutput)
}

func (in *grpcRouteMethodMatchTypePtr) ToGrpcRouteMethodMatchTypePtrOutputWithContext(ctx context.Context) GrpcRouteMethodMatchTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GrpcRouteMethodMatchTypePtrOutput)
}

// The HTTP Status code to use for the redirect.
type HttpRouteRedirectResponseCode string

const (
	// Default value
	HttpRouteRedirectResponseCodeResponseCodeUnspecified = HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED")
	// Corresponds to 301.
	HttpRouteRedirectResponseCodeMovedPermanentlyDefault = HttpRouteRedirectResponseCode("MOVED_PERMANENTLY_DEFAULT")
	// Corresponds to 302.
	HttpRouteRedirectResponseCodeFound = HttpRouteRedirectResponseCode("FOUND")
	// Corresponds to 303.
	HttpRouteRedirectResponseCodeSeeOther = HttpRouteRedirectResponseCode("SEE_OTHER")
	// Corresponds to 307. In this case, the request method will be retained.
	HttpRouteRedirectResponseCodeTemporaryRedirect = HttpRouteRedirectResponseCode("TEMPORARY_REDIRECT")
	// Corresponds to 308. In this case, the request method will be retained.
	HttpRouteRedirectResponseCodePermanentRedirect = HttpRouteRedirectResponseCode("PERMANENT_REDIRECT")
)

func (HttpRouteRedirectResponseCode) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput {
	return pulumi.ToOutput(e).(HttpRouteRedirectResponseCodeOutput)
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HttpRouteRedirectResponseCodeOutput)
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return e.ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (e HttpRouteRedirectResponseCode) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return HttpRouteRedirectResponseCode(e).ToHttpRouteRedirectResponseCodeOutputWithContext(ctx).ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx)
}

func (e HttpRouteRedirectResponseCode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRouteRedirectResponseCode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HttpRouteRedirectResponseCode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HttpRouteRedirectResponseCode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HttpRouteRedirectResponseCodeOutput struct{ *pulumi.OutputState }

func (HttpRouteRedirectResponseCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput {
	return o
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodeOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodeOutput {
	return o
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return o.ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpRouteRedirectResponseCode) *HttpRouteRedirectResponseCode {
		return &v
	}).(HttpRouteRedirectResponseCodePtrOutput)
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRouteRedirectResponseCode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HttpRouteRedirectResponseCode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HttpRouteRedirectResponseCodePtrOutput struct{ *pulumi.OutputState }

func (HttpRouteRedirectResponseCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpRouteRedirectResponseCode)(nil)).Elem()
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return o
}

func (o HttpRouteRedirectResponseCodePtrOutput) Elem() HttpRouteRedirectResponseCodeOutput {
	return o.ApplyT(func(v *HttpRouteRedirectResponseCode) HttpRouteRedirectResponseCode {
		if v != nil {
			return *v
		}
		var ret HttpRouteRedirectResponseCode
		return ret
	}).(HttpRouteRedirectResponseCodeOutput)
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HttpRouteRedirectResponseCodePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HttpRouteRedirectResponseCode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HttpRouteRedirectResponseCodeInput is an input type that accepts HttpRouteRedirectResponseCodeArgs and HttpRouteRedirectResponseCodeOutput values.
// You can construct a concrete instance of `HttpRouteRedirectResponseCodeInput` via:
//
//          HttpRouteRedirectResponseCodeArgs{...}
type HttpRouteRedirectResponseCodeInput interface {
	pulumi.Input

	ToHttpRouteRedirectResponseCodeOutput() HttpRouteRedirectResponseCodeOutput
	ToHttpRouteRedirectResponseCodeOutputWithContext(context.Context) HttpRouteRedirectResponseCodeOutput
}

var httpRouteRedirectResponseCodePtrType = reflect.TypeOf((**HttpRouteRedirectResponseCode)(nil)).Elem()

type HttpRouteRedirectResponseCodePtrInput interface {
	pulumi.Input

	ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput
	ToHttpRouteRedirectResponseCodePtrOutputWithContext(context.Context) HttpRouteRedirectResponseCodePtrOutput
}

type httpRouteRedirectResponseCodePtr string

func HttpRouteRedirectResponseCodePtr(v string) HttpRouteRedirectResponseCodePtrInput {
	return (*httpRouteRedirectResponseCodePtr)(&v)
}

func (*httpRouteRedirectResponseCodePtr) ElementType() reflect.Type {
	return httpRouteRedirectResponseCodePtrType
}

func (in *httpRouteRedirectResponseCodePtr) ToHttpRouteRedirectResponseCodePtrOutput() HttpRouteRedirectResponseCodePtrOutput {
	return pulumi.ToOutput(in).(HttpRouteRedirectResponseCodePtrOutput)
}

func (in *httpRouteRedirectResponseCodePtr) ToHttpRouteRedirectResponseCodePtrOutputWithContext(ctx context.Context) HttpRouteRedirectResponseCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HttpRouteRedirectResponseCodePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaInput)(nil)).Elem(), EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrInput)(nil)).Elem(), EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria("METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPolicyTypeInput)(nil)).Elem(), EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPolicyTypePtrInput)(nil)).Elem(), EndpointPolicyType("ENDPOINT_POLICY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypeInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypePtrInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteHeaderMatchTypeInput)(nil)).Elem(), GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteHeaderMatchTypePtrInput)(nil)).Elem(), GrpcRouteHeaderMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteMethodMatchTypeInput)(nil)).Elem(), GrpcRouteMethodMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GrpcRouteMethodMatchTypePtrInput)(nil)).Elem(), GrpcRouteMethodMatchType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRouteRedirectResponseCodeInput)(nil)).Elem(), HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*HttpRouteRedirectResponseCodePtrInput)(nil)).Elem(), HttpRouteRedirectResponseCode("RESPONSE_CODE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaOutput{})
	pulumi.RegisterOutputType(EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaPtrOutput{})
	pulumi.RegisterOutputType(EndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(EndpointPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(GatewayTypeOutput{})
	pulumi.RegisterOutputType(GatewayTypePtrOutput{})
	pulumi.RegisterOutputType(GrpcRouteHeaderMatchTypeOutput{})
	pulumi.RegisterOutputType(GrpcRouteHeaderMatchTypePtrOutput{})
	pulumi.RegisterOutputType(GrpcRouteMethodMatchTypeOutput{})
	pulumi.RegisterOutputType(GrpcRouteMethodMatchTypePtrOutput{})
	pulumi.RegisterOutputType(HttpRouteRedirectResponseCodeOutput{})
	pulumi.RegisterOutputType(HttpRouteRedirectResponseCodePtrOutput{})
}
