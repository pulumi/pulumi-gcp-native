// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Connection.
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConnectionResult
	err := ctx.Invoke("google-native:connectors/v1:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectionArgs struct {
	ConnectionId string  `pulumi:"connectionId"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
	View         *string `pulumi:"view"`
}

type LookupConnectionResult struct {
	// Optional. Configuration for establishing the connection's authentication with an external system.
	AuthConfig AuthConfigResponse `pulumi:"authConfig"`
	// Optional. Configuration for configuring the connection with an external system.
	ConfigVariables []ConfigVariableResponse `pulumi:"configVariables"`
	// Connection revision. This field is only updated when the connection is created or updated by User.
	ConnectionRevision string `pulumi:"connectionRevision"`
	// Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.
	ConnectorVersion string `pulumi:"connectorVersion"`
	// Infra configs supported by Connector Version.
	ConnectorVersionInfraConfig ConnectorVersionInfraConfigResponse `pulumi:"connectorVersionInfraConfig"`
	// Flag to mark the version indicating the launch stage.
	ConnectorVersionLaunchStage string `pulumi:"connectorVersionLaunchStage"`
	// Created time.
	CreateTime string `pulumi:"createTime"`
	// Optional. Description of the resource.
	Description string `pulumi:"description"`
	// Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
	DestinationConfigs []DestinationConfigResponse `pulumi:"destinationConfigs"`
	// GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}
	EnvoyImageLocation string `pulumi:"envoyImageLocation"`
	// Optional. Eventing config of a connection
	EventingConfig EventingConfigResponse `pulumi:"eventingConfig"`
	// Optional. Eventing enablement type. Will be nil if eventing is not enabled.
	EventingEnablementType string `pulumi:"eventingEnablementType"`
	// Eventing Runtime Data.
	EventingRuntimeData EventingRuntimeDataResponse `pulumi:"eventingRuntimeData"`
	// GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}
	ImageLocation string `pulumi:"imageLocation"`
	// Is trusted tester program enabled for the project.
	IsTrustedTester bool `pulumi:"isTrustedTester"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Optional. Configuration that indicates whether or not the Connection can be edited.
	LockConfig LockConfigResponse `pulumi:"lockConfig"`
	// Optional. Log configuration for the connection.
	LogConfig ConnectorsLogConfigResponse `pulumi:"logConfig"`
	// Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}
	Name string `pulumi:"name"`
	// Optional. Node configuration for the connection.
	NodeConfig NodeConfigResponse `pulumi:"nodeConfig"`
	// Optional. Service account needed for runtime plane to access Google Cloud resources.
	ServiceAccount string `pulumi:"serviceAccount"`
	// The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
	ServiceDirectory string `pulumi:"serviceDirectory"`
	// Optional. Ssl config of a connection
	SslConfig SslConfigResponse `pulumi:"sslConfig"`
	// Current status of the connection.
	Status ConnectionStatusResponse `pulumi:"status"`
	// This subscription type enum states the subscription type of the project.
	SubscriptionType string `pulumi:"subscriptionType"`
	// Optional. Suspended indicates if a user has suspended a connection or not.
	Suspended bool `pulumi:"suspended"`
	// Updated time.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionResult, error) {
			args := v.(LookupConnectionArgs)
			r, err := LookupConnection(ctx, &args, opts...)
			var s LookupConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectionResultOutput)
}

type LookupConnectionOutputArgs struct {
	ConnectionId pulumi.StringInput    `pulumi:"connectionId"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
	View         pulumi.StringPtrInput `pulumi:"view"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

// Optional. Configuration for establishing the connection's authentication with an external system.
func (o LookupConnectionResultOutput) AuthConfig() AuthConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) AuthConfigResponse { return v.AuthConfig }).(AuthConfigResponseOutput)
}

// Optional. Configuration for configuring the connection with an external system.
func (o LookupConnectionResultOutput) ConfigVariables() ConfigVariableResponseArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []ConfigVariableResponse { return v.ConfigVariables }).(ConfigVariableResponseArrayOutput)
}

// Connection revision. This field is only updated when the connection is created or updated by User.
func (o LookupConnectionResultOutput) ConnectionRevision() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectionRevision }).(pulumi.StringOutput)
}

// Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.
func (o LookupConnectionResultOutput) ConnectorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectorVersion }).(pulumi.StringOutput)
}

// Infra configs supported by Connector Version.
func (o LookupConnectionResultOutput) ConnectorVersionInfraConfig() ConnectorVersionInfraConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) ConnectorVersionInfraConfigResponse {
		return v.ConnectorVersionInfraConfig
	}).(ConnectorVersionInfraConfigResponseOutput)
}

// Flag to mark the version indicating the launch stage.
func (o LookupConnectionResultOutput) ConnectorVersionLaunchStage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectorVersionLaunchStage }).(pulumi.StringOutput)
}

// Created time.
func (o LookupConnectionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the resource.
func (o LookupConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
func (o LookupConnectionResultOutput) DestinationConfigs() DestinationConfigResponseArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []DestinationConfigResponse { return v.DestinationConfigs }).(DestinationConfigResponseArrayOutput)
}

// GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}
func (o LookupConnectionResultOutput) EnvoyImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.EnvoyImageLocation }).(pulumi.StringOutput)
}

// Optional. Eventing config of a connection
func (o LookupConnectionResultOutput) EventingConfig() EventingConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) EventingConfigResponse { return v.EventingConfig }).(EventingConfigResponseOutput)
}

// Optional. Eventing enablement type. Will be nil if eventing is not enabled.
func (o LookupConnectionResultOutput) EventingEnablementType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.EventingEnablementType }).(pulumi.StringOutput)
}

// Eventing Runtime Data.
func (o LookupConnectionResultOutput) EventingRuntimeData() EventingRuntimeDataResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) EventingRuntimeDataResponse { return v.EventingRuntimeData }).(EventingRuntimeDataResponseOutput)
}

// GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}
func (o LookupConnectionResultOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ImageLocation }).(pulumi.StringOutput)
}

// Is trusted tester program enabled for the project.
func (o LookupConnectionResultOutput) IsTrustedTester() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectionResult) bool { return v.IsTrustedTester }).(pulumi.BoolOutput)
}

// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
func (o LookupConnectionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Optional. Configuration that indicates whether or not the Connection can be edited.
func (o LookupConnectionResultOutput) LockConfig() LockConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) LockConfigResponse { return v.LockConfig }).(LockConfigResponseOutput)
}

// Optional. Log configuration for the connection.
func (o LookupConnectionResultOutput) LogConfig() ConnectorsLogConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) ConnectorsLogConfigResponse { return v.LogConfig }).(ConnectorsLogConfigResponseOutput)
}

// Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}
func (o LookupConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Node configuration for the connection.
func (o LookupConnectionResultOutput) NodeConfig() NodeConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) NodeConfigResponse { return v.NodeConfig }).(NodeConfigResponseOutput)
}

// Optional. Service account needed for runtime plane to access Google Cloud resources.
func (o LookupConnectionResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
func (o LookupConnectionResultOutput) ServiceDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ServiceDirectory }).(pulumi.StringOutput)
}

// Optional. Ssl config of a connection
func (o LookupConnectionResultOutput) SslConfig() SslConfigResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) SslConfigResponse { return v.SslConfig }).(SslConfigResponseOutput)
}

// Current status of the connection.
func (o LookupConnectionResultOutput) Status() ConnectionStatusResponseOutput {
	return o.ApplyT(func(v LookupConnectionResult) ConnectionStatusResponse { return v.Status }).(ConnectionStatusResponseOutput)
}

// This subscription type enum states the subscription type of the project.
func (o LookupConnectionResultOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SubscriptionType }).(pulumi.StringOutput)
}

// Optional. Suspended indicates if a user has suspended a connection or not.
func (o LookupConnectionResultOutput) Suspended() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectionResult) bool { return v.Suspended }).(pulumi.BoolOutput)
}

// Updated time.
func (o LookupConnectionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
