// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new CustomConnector in a given project and location.
// Auto-naming is currently not supported for this resource.
type CustomConnector struct {
	pulumi.CustomResourceState

	// Created time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the parent resource.
	CustomConnectorId pulumi.StringOutput `pulumi:"customConnectorId"`
	// Type of the custom connector.
	CustomConnectorType pulumi.StringOutput `pulumi:"customConnectorType"`
	// Optional. Description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Launch stage.
	LaunchStage pulumi.StringOutput `pulumi:"launchStage"`
	// Optional. Logo of the resource.
	Logo pulumi.StringOutput `pulumi:"logo"`
	// Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Updated time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomConnector registers a new resource with the given unique name, arguments, and options.
func NewCustomConnector(ctx *pulumi.Context,
	name string, args *CustomConnectorArgs, opts ...pulumi.ResourceOption) (*CustomConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'CustomConnectorId'")
	}
	if args.CustomConnectorType == nil {
		return nil, errors.New("invalid value for required argument 'CustomConnectorType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"customConnectorId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomConnector
	err := ctx.RegisterResource("google-native:connectors/v1:CustomConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomConnector gets an existing CustomConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomConnectorState, opts ...pulumi.ResourceOption) (*CustomConnector, error) {
	var resource CustomConnector
	err := ctx.ReadResource("google-native:connectors/v1:CustomConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomConnector resources.
type customConnectorState struct {
}

type CustomConnectorState struct {
}

func (CustomConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*customConnectorState)(nil)).Elem()
}

type customConnectorArgs struct {
	// Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the parent resource.
	CustomConnectorId string `pulumi:"customConnectorId"`
	// Type of the custom connector.
	CustomConnectorType CustomConnectorCustomConnectorType `pulumi:"customConnectorType"`
	// Optional. Description of the resource.
	Description *string `pulumi:"description"`
	// Optional. Display name.
	DisplayName *string `pulumi:"displayName"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Optional. Logo of the resource.
	Logo *string `pulumi:"logo"`
	// Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a CustomConnector resource.
type CustomConnectorArgs struct {
	// Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the parent resource.
	CustomConnectorId pulumi.StringInput
	// Type of the custom connector.
	CustomConnectorType CustomConnectorCustomConnectorTypeInput
	// Optional. Description of the resource.
	Description pulumi.StringPtrInput
	// Optional. Display name.
	DisplayName pulumi.StringPtrInput
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapInput
	// Optional. Logo of the resource.
	Logo pulumi.StringPtrInput
	// Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (CustomConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customConnectorArgs)(nil)).Elem()
}

type CustomConnectorInput interface {
	pulumi.Input

	ToCustomConnectorOutput() CustomConnectorOutput
	ToCustomConnectorOutputWithContext(ctx context.Context) CustomConnectorOutput
}

func (*CustomConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomConnector)(nil)).Elem()
}

func (i *CustomConnector) ToCustomConnectorOutput() CustomConnectorOutput {
	return i.ToCustomConnectorOutputWithContext(context.Background())
}

func (i *CustomConnector) ToCustomConnectorOutputWithContext(ctx context.Context) CustomConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomConnectorOutput)
}

func (i *CustomConnector) ToOutput(ctx context.Context) pulumix.Output[*CustomConnector] {
	return pulumix.Output[*CustomConnector]{
		OutputState: i.ToCustomConnectorOutputWithContext(ctx).OutputState,
	}
}

type CustomConnectorOutput struct{ *pulumi.OutputState }

func (CustomConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomConnector)(nil)).Elem()
}

func (o CustomConnectorOutput) ToCustomConnectorOutput() CustomConnectorOutput {
	return o
}

func (o CustomConnectorOutput) ToCustomConnectorOutputWithContext(ctx context.Context) CustomConnectorOutput {
	return o
}

func (o CustomConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[*CustomConnector] {
	return pulumix.Output[*CustomConnector]{
		OutputState: o.OutputState,
	}
}

// Created time.
func (o CustomConnectorOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the parent resource.
func (o CustomConnectorOutput) CustomConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.CustomConnectorId }).(pulumi.StringOutput)
}

// Type of the custom connector.
func (o CustomConnectorOutput) CustomConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.CustomConnectorType }).(pulumi.StringOutput)
}

// Optional. Description of the resource.
func (o CustomConnectorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Display name.
func (o CustomConnectorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
func (o CustomConnectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Launch stage.
func (o CustomConnectorOutput) LaunchStage() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.LaunchStage }).(pulumi.StringOutput)
}

// Optional. Logo of the resource.
func (o CustomConnectorOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.Logo }).(pulumi.StringOutput)
}

// Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
func (o CustomConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CustomConnectorOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Updated time.
func (o CustomConnectorOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnector) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomConnectorInput)(nil)).Elem(), &CustomConnector{})
	pulumi.RegisterOutputType(CustomConnectorOutput{})
}
