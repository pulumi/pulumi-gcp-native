// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new ManagedZone in a given project and location.
// Auto-naming is currently not supported for this resource.
type ManagedZone struct {
	pulumi.CustomResourceState

	// Created time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// DNS Name of the resource
	Dns pulumi.StringOutput `pulumi:"dns"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
	ManagedZoneId pulumi.StringOutput `pulumi:"managedZoneId"`
	// Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the Target Project
	TargetProject pulumi.StringOutput `pulumi:"targetProject"`
	// The name of the Target Project VPC Network
	TargetVpc pulumi.StringOutput `pulumi:"targetVpc"`
	// Updated time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewManagedZone registers a new resource with the given unique name, arguments, and options.
func NewManagedZone(ctx *pulumi.Context,
	name string, args *ManagedZoneArgs, opts ...pulumi.ResourceOption) (*ManagedZone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dns == nil {
		return nil, errors.New("invalid value for required argument 'Dns'")
	}
	if args.ManagedZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedZoneId'")
	}
	if args.TargetProject == nil {
		return nil, errors.New("invalid value for required argument 'TargetProject'")
	}
	if args.TargetVpc == nil {
		return nil, errors.New("invalid value for required argument 'TargetVpc'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"managedZoneId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedZone
	err := ctx.RegisterResource("google-native:connectors/v1:ManagedZone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedZone gets an existing ManagedZone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedZoneState, opts ...pulumi.ResourceOption) (*ManagedZone, error) {
	var resource ManagedZone
	err := ctx.ReadResource("google-native:connectors/v1:ManagedZone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedZone resources.
type managedZoneState struct {
}

type ManagedZoneState struct {
}

func (ManagedZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedZoneState)(nil)).Elem()
}

type managedZoneArgs struct {
	// Optional. Description of the resource.
	Description *string `pulumi:"description"`
	// DNS Name of the resource
	Dns string `pulumi:"dns"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels map[string]string `pulumi:"labels"`
	// Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
	ManagedZoneId string  `pulumi:"managedZoneId"`
	Project       *string `pulumi:"project"`
	// The name of the Target Project
	TargetProject string `pulumi:"targetProject"`
	// The name of the Target Project VPC Network
	TargetVpc string `pulumi:"targetVpc"`
}

// The set of arguments for constructing a ManagedZone resource.
type ManagedZoneArgs struct {
	// Optional. Description of the resource.
	Description pulumi.StringPtrInput
	// DNS Name of the resource
	Dns pulumi.StringInput
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapInput
	// Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
	ManagedZoneId pulumi.StringInput
	Project       pulumi.StringPtrInput
	// The name of the Target Project
	TargetProject pulumi.StringInput
	// The name of the Target Project VPC Network
	TargetVpc pulumi.StringInput
}

func (ManagedZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedZoneArgs)(nil)).Elem()
}

type ManagedZoneInput interface {
	pulumi.Input

	ToManagedZoneOutput() ManagedZoneOutput
	ToManagedZoneOutputWithContext(ctx context.Context) ManagedZoneOutput
}

func (*ManagedZone) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZone)(nil)).Elem()
}

func (i *ManagedZone) ToManagedZoneOutput() ManagedZoneOutput {
	return i.ToManagedZoneOutputWithContext(context.Background())
}

func (i *ManagedZone) ToManagedZoneOutputWithContext(ctx context.Context) ManagedZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedZoneOutput)
}

func (i *ManagedZone) ToOutput(ctx context.Context) pulumix.Output[*ManagedZone] {
	return pulumix.Output[*ManagedZone]{
		OutputState: i.ToManagedZoneOutputWithContext(ctx).OutputState,
	}
}

type ManagedZoneOutput struct{ *pulumi.OutputState }

func (ManagedZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedZone)(nil)).Elem()
}

func (o ManagedZoneOutput) ToManagedZoneOutput() ManagedZoneOutput {
	return o
}

func (o ManagedZoneOutput) ToManagedZoneOutputWithContext(ctx context.Context) ManagedZoneOutput {
	return o
}

func (o ManagedZoneOutput) ToOutput(ctx context.Context) pulumix.Output[*ManagedZone] {
	return pulumix.Output[*ManagedZone]{
		OutputState: o.OutputState,
	}
}

// Created time.
func (o ManagedZoneOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Description of the resource.
func (o ManagedZoneOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// DNS Name of the resource
func (o ManagedZoneOutput) Dns() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.Dns }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
func (o ManagedZoneOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
func (o ManagedZoneOutput) ManagedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.ManagedZoneId }).(pulumi.StringOutput)
}

// Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}
func (o ManagedZoneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ManagedZoneOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the Target Project
func (o ManagedZoneOutput) TargetProject() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.TargetProject }).(pulumi.StringOutput)
}

// The name of the Target Project VPC Network
func (o ManagedZoneOutput) TargetVpc() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.TargetVpc }).(pulumi.StringOutput)
}

// Updated time.
func (o ManagedZoneOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedZone) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedZoneInput)(nil)).Elem(), &ManagedZone{})
	pulumi.RegisterOutputType(ManagedZoneOutput{})
}
