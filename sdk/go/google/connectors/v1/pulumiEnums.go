// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts values of the AuditLogConfigLogType enum
// A concrete instance of `AuditLogConfigLogTypeInput` can be one of the following:
//
//	AuditLogConfigLogTypeLogTypeUnspecified
//	AuditLogConfigLogTypeAdminRead
//	AuditLogConfigLogTypeDataWrite
//	AuditLogConfigLogTypeDataRead
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The type of authentication configured.
type AuthConfigAuthType string

const (
	// Authentication type not specified.
	AuthConfigAuthTypeAuthTypeUnspecified = AuthConfigAuthType("AUTH_TYPE_UNSPECIFIED")
	// Username and Password Authentication.
	AuthConfigAuthTypeUserPassword = AuthConfigAuthType("USER_PASSWORD")
	// JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication
	AuthConfigAuthTypeOauth2JwtBearer = AuthConfigAuthType("OAUTH2_JWT_BEARER")
	// Oauth 2.0 Client Credentials Grant Authentication
	AuthConfigAuthTypeOauth2ClientCredentials = AuthConfigAuthType("OAUTH2_CLIENT_CREDENTIALS")
	// SSH Public Key Authentication
	AuthConfigAuthTypeSshPublicKey = AuthConfigAuthType("SSH_PUBLIC_KEY")
	// Oauth 2.0 Authorization Code Flow
	AuthConfigAuthTypeOauth2AuthCodeFlow = AuthConfigAuthType("OAUTH2_AUTH_CODE_FLOW")
	// Google authentication
	AuthConfigAuthTypeGoogleAuthentication = AuthConfigAuthType("GOOGLE_AUTHENTICATION")
)

func (AuthConfigAuthType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfigAuthType)(nil)).Elem()
}

func (e AuthConfigAuthType) ToAuthConfigAuthTypeOutput() AuthConfigAuthTypeOutput {
	return pulumi.ToOutput(e).(AuthConfigAuthTypeOutput)
}

func (e AuthConfigAuthType) ToAuthConfigAuthTypeOutputWithContext(ctx context.Context) AuthConfigAuthTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthConfigAuthTypeOutput)
}

func (e AuthConfigAuthType) ToAuthConfigAuthTypePtrOutput() AuthConfigAuthTypePtrOutput {
	return e.ToAuthConfigAuthTypePtrOutputWithContext(context.Background())
}

func (e AuthConfigAuthType) ToAuthConfigAuthTypePtrOutputWithContext(ctx context.Context) AuthConfigAuthTypePtrOutput {
	return AuthConfigAuthType(e).ToAuthConfigAuthTypeOutputWithContext(ctx).ToAuthConfigAuthTypePtrOutputWithContext(ctx)
}

func (e AuthConfigAuthType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthConfigAuthType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthConfigAuthType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthConfigAuthType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthConfigAuthTypeOutput struct{ *pulumi.OutputState }

func (AuthConfigAuthTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfigAuthType)(nil)).Elem()
}

func (o AuthConfigAuthTypeOutput) ToAuthConfigAuthTypeOutput() AuthConfigAuthTypeOutput {
	return o
}

func (o AuthConfigAuthTypeOutput) ToAuthConfigAuthTypeOutputWithContext(ctx context.Context) AuthConfigAuthTypeOutput {
	return o
}

func (o AuthConfigAuthTypeOutput) ToAuthConfigAuthTypePtrOutput() AuthConfigAuthTypePtrOutput {
	return o.ToAuthConfigAuthTypePtrOutputWithContext(context.Background())
}

func (o AuthConfigAuthTypeOutput) ToAuthConfigAuthTypePtrOutputWithContext(ctx context.Context) AuthConfigAuthTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthConfigAuthType) *AuthConfigAuthType {
		return &v
	}).(AuthConfigAuthTypePtrOutput)
}

func (o AuthConfigAuthTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthConfigAuthTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthConfigAuthType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthConfigAuthTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthConfigAuthTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthConfigAuthType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthConfigAuthTypePtrOutput struct{ *pulumi.OutputState }

func (AuthConfigAuthTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthConfigAuthType)(nil)).Elem()
}

func (o AuthConfigAuthTypePtrOutput) ToAuthConfigAuthTypePtrOutput() AuthConfigAuthTypePtrOutput {
	return o
}

func (o AuthConfigAuthTypePtrOutput) ToAuthConfigAuthTypePtrOutputWithContext(ctx context.Context) AuthConfigAuthTypePtrOutput {
	return o
}

func (o AuthConfigAuthTypePtrOutput) Elem() AuthConfigAuthTypeOutput {
	return o.ApplyT(func(v *AuthConfigAuthType) AuthConfigAuthType {
		if v != nil {
			return *v
		}
		var ret AuthConfigAuthType
		return ret
	}).(AuthConfigAuthTypeOutput)
}

func (o AuthConfigAuthTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthConfigAuthTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthConfigAuthType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuthConfigAuthTypeInput is an input type that accepts values of the AuthConfigAuthType enum
// A concrete instance of `AuthConfigAuthTypeInput` can be one of the following:
//
//	AuthConfigAuthTypeAuthTypeUnspecified
//	AuthConfigAuthTypeUserPassword
//	AuthConfigAuthTypeOauth2JwtBearer
//	AuthConfigAuthTypeOauth2ClientCredentials
//	AuthConfigAuthTypeSshPublicKey
//	AuthConfigAuthTypeOauth2AuthCodeFlow
//	AuthConfigAuthTypeGoogleAuthentication
type AuthConfigAuthTypeInput interface {
	pulumi.Input

	ToAuthConfigAuthTypeOutput() AuthConfigAuthTypeOutput
	ToAuthConfigAuthTypeOutputWithContext(context.Context) AuthConfigAuthTypeOutput
}

var authConfigAuthTypePtrType = reflect.TypeOf((**AuthConfigAuthType)(nil)).Elem()

type AuthConfigAuthTypePtrInput interface {
	pulumi.Input

	ToAuthConfigAuthTypePtrOutput() AuthConfigAuthTypePtrOutput
	ToAuthConfigAuthTypePtrOutputWithContext(context.Context) AuthConfigAuthTypePtrOutput
}

type authConfigAuthTypePtr string

func AuthConfigAuthTypePtr(v string) AuthConfigAuthTypePtrInput {
	return (*authConfigAuthTypePtr)(&v)
}

func (*authConfigAuthTypePtr) ElementType() reflect.Type {
	return authConfigAuthTypePtrType
}

func (in *authConfigAuthTypePtr) ToAuthConfigAuthTypePtrOutput() AuthConfigAuthTypePtrOutput {
	return pulumi.ToOutput(in).(AuthConfigAuthTypePtrOutput)
}

func (in *authConfigAuthTypePtr) ToAuthConfigAuthTypePtrOutputWithContext(ctx context.Context) AuthConfigAuthTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthConfigAuthTypePtrOutput)
}

func (in *authConfigAuthTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuthConfigAuthType] {
	return pulumix.Output[*AuthConfigAuthType]{
		OutputState: in.ToAuthConfigAuthTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. enum source denotes the source of api to fill the enum options
type ConfigVariableTemplateEnumSource string

const (
	// Api type unspecified.
	ConfigVariableTemplateEnumSourceEnumSourceUnspecified = ConfigVariableTemplateEnumSource("ENUM_SOURCE_UNSPECIFIED")
	// list event types.
	ConfigVariableTemplateEnumSourceEventTypesApi = ConfigVariableTemplateEnumSource("EVENT_TYPES_API")
)

func (ConfigVariableTemplateEnumSource) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateEnumSource)(nil)).Elem()
}

func (e ConfigVariableTemplateEnumSource) ToConfigVariableTemplateEnumSourceOutput() ConfigVariableTemplateEnumSourceOutput {
	return pulumi.ToOutput(e).(ConfigVariableTemplateEnumSourceOutput)
}

func (e ConfigVariableTemplateEnumSource) ToConfigVariableTemplateEnumSourceOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigVariableTemplateEnumSourceOutput)
}

func (e ConfigVariableTemplateEnumSource) ToConfigVariableTemplateEnumSourcePtrOutput() ConfigVariableTemplateEnumSourcePtrOutput {
	return e.ToConfigVariableTemplateEnumSourcePtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateEnumSource) ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourcePtrOutput {
	return ConfigVariableTemplateEnumSource(e).ToConfigVariableTemplateEnumSourceOutputWithContext(ctx).ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx)
}

func (e ConfigVariableTemplateEnumSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateEnumSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateEnumSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateEnumSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigVariableTemplateEnumSourceOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateEnumSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateEnumSource)(nil)).Elem()
}

func (o ConfigVariableTemplateEnumSourceOutput) ToConfigVariableTemplateEnumSourceOutput() ConfigVariableTemplateEnumSourceOutput {
	return o
}

func (o ConfigVariableTemplateEnumSourceOutput) ToConfigVariableTemplateEnumSourceOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourceOutput {
	return o
}

func (o ConfigVariableTemplateEnumSourceOutput) ToConfigVariableTemplateEnumSourcePtrOutput() ConfigVariableTemplateEnumSourcePtrOutput {
	return o.ToConfigVariableTemplateEnumSourcePtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateEnumSourceOutput) ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigVariableTemplateEnumSource) *ConfigVariableTemplateEnumSource {
		return &v
	}).(ConfigVariableTemplateEnumSourcePtrOutput)
}

func (o ConfigVariableTemplateEnumSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateEnumSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateEnumSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigVariableTemplateEnumSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateEnumSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateEnumSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigVariableTemplateEnumSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateEnumSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigVariableTemplateEnumSource)(nil)).Elem()
}

func (o ConfigVariableTemplateEnumSourcePtrOutput) ToConfigVariableTemplateEnumSourcePtrOutput() ConfigVariableTemplateEnumSourcePtrOutput {
	return o
}

func (o ConfigVariableTemplateEnumSourcePtrOutput) ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourcePtrOutput {
	return o
}

func (o ConfigVariableTemplateEnumSourcePtrOutput) Elem() ConfigVariableTemplateEnumSourceOutput {
	return o.ApplyT(func(v *ConfigVariableTemplateEnumSource) ConfigVariableTemplateEnumSource {
		if v != nil {
			return *v
		}
		var ret ConfigVariableTemplateEnumSource
		return ret
	}).(ConfigVariableTemplateEnumSourceOutput)
}

func (o ConfigVariableTemplateEnumSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateEnumSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigVariableTemplateEnumSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigVariableTemplateEnumSourceInput is an input type that accepts values of the ConfigVariableTemplateEnumSource enum
// A concrete instance of `ConfigVariableTemplateEnumSourceInput` can be one of the following:
//
//	ConfigVariableTemplateEnumSourceEnumSourceUnspecified
//	ConfigVariableTemplateEnumSourceEventTypesApi
type ConfigVariableTemplateEnumSourceInput interface {
	pulumi.Input

	ToConfigVariableTemplateEnumSourceOutput() ConfigVariableTemplateEnumSourceOutput
	ToConfigVariableTemplateEnumSourceOutputWithContext(context.Context) ConfigVariableTemplateEnumSourceOutput
}

var configVariableTemplateEnumSourcePtrType = reflect.TypeOf((**ConfigVariableTemplateEnumSource)(nil)).Elem()

type ConfigVariableTemplateEnumSourcePtrInput interface {
	pulumi.Input

	ToConfigVariableTemplateEnumSourcePtrOutput() ConfigVariableTemplateEnumSourcePtrOutput
	ToConfigVariableTemplateEnumSourcePtrOutputWithContext(context.Context) ConfigVariableTemplateEnumSourcePtrOutput
}

type configVariableTemplateEnumSourcePtr string

func ConfigVariableTemplateEnumSourcePtr(v string) ConfigVariableTemplateEnumSourcePtrInput {
	return (*configVariableTemplateEnumSourcePtr)(&v)
}

func (*configVariableTemplateEnumSourcePtr) ElementType() reflect.Type {
	return configVariableTemplateEnumSourcePtrType
}

func (in *configVariableTemplateEnumSourcePtr) ToConfigVariableTemplateEnumSourcePtrOutput() ConfigVariableTemplateEnumSourcePtrOutput {
	return pulumi.ToOutput(in).(ConfigVariableTemplateEnumSourcePtrOutput)
}

func (in *configVariableTemplateEnumSourcePtr) ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateEnumSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigVariableTemplateEnumSourcePtrOutput)
}

func (in *configVariableTemplateEnumSourcePtr) ToOutput(ctx context.Context) pulumix.Output[*ConfigVariableTemplateEnumSource] {
	return pulumix.Output[*ConfigVariableTemplateEnumSource]{
		OutputState: in.ToConfigVariableTemplateEnumSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Location Tyep denotes where this value should be sent in BYOC connections.
type ConfigVariableTemplateLocationType string

const (
	// Location type unspecified.
	ConfigVariableTemplateLocationTypeLocationTypeUnspecified = ConfigVariableTemplateLocationType("LOCATION_TYPE_UNSPECIFIED")
	// Request header.
	ConfigVariableTemplateLocationTypeHeader = ConfigVariableTemplateLocationType("HEADER")
	// Request Payload.
	ConfigVariableTemplateLocationTypePayload = ConfigVariableTemplateLocationType("PAYLOAD")
	// Request query param.
	ConfigVariableTemplateLocationTypeQueryParam = ConfigVariableTemplateLocationType("QUERY_PARAM")
	// Request path param.
	ConfigVariableTemplateLocationTypePathParam = ConfigVariableTemplateLocationType("PATH_PARAM")
)

func (ConfigVariableTemplateLocationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateLocationType)(nil)).Elem()
}

func (e ConfigVariableTemplateLocationType) ToConfigVariableTemplateLocationTypeOutput() ConfigVariableTemplateLocationTypeOutput {
	return pulumi.ToOutput(e).(ConfigVariableTemplateLocationTypeOutput)
}

func (e ConfigVariableTemplateLocationType) ToConfigVariableTemplateLocationTypeOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigVariableTemplateLocationTypeOutput)
}

func (e ConfigVariableTemplateLocationType) ToConfigVariableTemplateLocationTypePtrOutput() ConfigVariableTemplateLocationTypePtrOutput {
	return e.ToConfigVariableTemplateLocationTypePtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateLocationType) ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypePtrOutput {
	return ConfigVariableTemplateLocationType(e).ToConfigVariableTemplateLocationTypeOutputWithContext(ctx).ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx)
}

func (e ConfigVariableTemplateLocationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateLocationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateLocationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateLocationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigVariableTemplateLocationTypeOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateLocationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateLocationType)(nil)).Elem()
}

func (o ConfigVariableTemplateLocationTypeOutput) ToConfigVariableTemplateLocationTypeOutput() ConfigVariableTemplateLocationTypeOutput {
	return o
}

func (o ConfigVariableTemplateLocationTypeOutput) ToConfigVariableTemplateLocationTypeOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypeOutput {
	return o
}

func (o ConfigVariableTemplateLocationTypeOutput) ToConfigVariableTemplateLocationTypePtrOutput() ConfigVariableTemplateLocationTypePtrOutput {
	return o.ToConfigVariableTemplateLocationTypePtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateLocationTypeOutput) ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigVariableTemplateLocationType) *ConfigVariableTemplateLocationType {
		return &v
	}).(ConfigVariableTemplateLocationTypePtrOutput)
}

func (o ConfigVariableTemplateLocationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateLocationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateLocationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigVariableTemplateLocationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateLocationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateLocationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigVariableTemplateLocationTypePtrOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateLocationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigVariableTemplateLocationType)(nil)).Elem()
}

func (o ConfigVariableTemplateLocationTypePtrOutput) ToConfigVariableTemplateLocationTypePtrOutput() ConfigVariableTemplateLocationTypePtrOutput {
	return o
}

func (o ConfigVariableTemplateLocationTypePtrOutput) ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypePtrOutput {
	return o
}

func (o ConfigVariableTemplateLocationTypePtrOutput) Elem() ConfigVariableTemplateLocationTypeOutput {
	return o.ApplyT(func(v *ConfigVariableTemplateLocationType) ConfigVariableTemplateLocationType {
		if v != nil {
			return *v
		}
		var ret ConfigVariableTemplateLocationType
		return ret
	}).(ConfigVariableTemplateLocationTypeOutput)
}

func (o ConfigVariableTemplateLocationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateLocationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigVariableTemplateLocationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigVariableTemplateLocationTypeInput is an input type that accepts values of the ConfigVariableTemplateLocationType enum
// A concrete instance of `ConfigVariableTemplateLocationTypeInput` can be one of the following:
//
//	ConfigVariableTemplateLocationTypeLocationTypeUnspecified
//	ConfigVariableTemplateLocationTypeHeader
//	ConfigVariableTemplateLocationTypePayload
//	ConfigVariableTemplateLocationTypeQueryParam
//	ConfigVariableTemplateLocationTypePathParam
type ConfigVariableTemplateLocationTypeInput interface {
	pulumi.Input

	ToConfigVariableTemplateLocationTypeOutput() ConfigVariableTemplateLocationTypeOutput
	ToConfigVariableTemplateLocationTypeOutputWithContext(context.Context) ConfigVariableTemplateLocationTypeOutput
}

var configVariableTemplateLocationTypePtrType = reflect.TypeOf((**ConfigVariableTemplateLocationType)(nil)).Elem()

type ConfigVariableTemplateLocationTypePtrInput interface {
	pulumi.Input

	ToConfigVariableTemplateLocationTypePtrOutput() ConfigVariableTemplateLocationTypePtrOutput
	ToConfigVariableTemplateLocationTypePtrOutputWithContext(context.Context) ConfigVariableTemplateLocationTypePtrOutput
}

type configVariableTemplateLocationTypePtr string

func ConfigVariableTemplateLocationTypePtr(v string) ConfigVariableTemplateLocationTypePtrInput {
	return (*configVariableTemplateLocationTypePtr)(&v)
}

func (*configVariableTemplateLocationTypePtr) ElementType() reflect.Type {
	return configVariableTemplateLocationTypePtrType
}

func (in *configVariableTemplateLocationTypePtr) ToConfigVariableTemplateLocationTypePtrOutput() ConfigVariableTemplateLocationTypePtrOutput {
	return pulumi.ToOutput(in).(ConfigVariableTemplateLocationTypePtrOutput)
}

func (in *configVariableTemplateLocationTypePtr) ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateLocationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigVariableTemplateLocationTypePtrOutput)
}

func (in *configVariableTemplateLocationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConfigVariableTemplateLocationType] {
	return pulumix.Output[*ConfigVariableTemplateLocationType]{
		OutputState: in.ToConfigVariableTemplateLocationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// State of the config variable.
type ConfigVariableTemplateState string

const (
	// Status is unspecified.
	ConfigVariableTemplateStateStateUnspecified = ConfigVariableTemplateState("STATE_UNSPECIFIED")
	// Config variable is active
	ConfigVariableTemplateStateActive = ConfigVariableTemplateState("ACTIVE")
	// Config variable is deprecated.
	ConfigVariableTemplateStateDeprecated = ConfigVariableTemplateState("DEPRECATED")
)

func (ConfigVariableTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateState)(nil)).Elem()
}

func (e ConfigVariableTemplateState) ToConfigVariableTemplateStateOutput() ConfigVariableTemplateStateOutput {
	return pulumi.ToOutput(e).(ConfigVariableTemplateStateOutput)
}

func (e ConfigVariableTemplateState) ToConfigVariableTemplateStateOutputWithContext(ctx context.Context) ConfigVariableTemplateStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigVariableTemplateStateOutput)
}

func (e ConfigVariableTemplateState) ToConfigVariableTemplateStatePtrOutput() ConfigVariableTemplateStatePtrOutput {
	return e.ToConfigVariableTemplateStatePtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateState) ToConfigVariableTemplateStatePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateStatePtrOutput {
	return ConfigVariableTemplateState(e).ToConfigVariableTemplateStateOutputWithContext(ctx).ToConfigVariableTemplateStatePtrOutputWithContext(ctx)
}

func (e ConfigVariableTemplateState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigVariableTemplateStateOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateState)(nil)).Elem()
}

func (o ConfigVariableTemplateStateOutput) ToConfigVariableTemplateStateOutput() ConfigVariableTemplateStateOutput {
	return o
}

func (o ConfigVariableTemplateStateOutput) ToConfigVariableTemplateStateOutputWithContext(ctx context.Context) ConfigVariableTemplateStateOutput {
	return o
}

func (o ConfigVariableTemplateStateOutput) ToConfigVariableTemplateStatePtrOutput() ConfigVariableTemplateStatePtrOutput {
	return o.ToConfigVariableTemplateStatePtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateStateOutput) ToConfigVariableTemplateStatePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigVariableTemplateState) *ConfigVariableTemplateState {
		return &v
	}).(ConfigVariableTemplateStatePtrOutput)
}

func (o ConfigVariableTemplateStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigVariableTemplateStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigVariableTemplateStatePtrOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigVariableTemplateState)(nil)).Elem()
}

func (o ConfigVariableTemplateStatePtrOutput) ToConfigVariableTemplateStatePtrOutput() ConfigVariableTemplateStatePtrOutput {
	return o
}

func (o ConfigVariableTemplateStatePtrOutput) ToConfigVariableTemplateStatePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateStatePtrOutput {
	return o
}

func (o ConfigVariableTemplateStatePtrOutput) Elem() ConfigVariableTemplateStateOutput {
	return o.ApplyT(func(v *ConfigVariableTemplateState) ConfigVariableTemplateState {
		if v != nil {
			return *v
		}
		var ret ConfigVariableTemplateState
		return ret
	}).(ConfigVariableTemplateStateOutput)
}

func (o ConfigVariableTemplateStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigVariableTemplateState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigVariableTemplateStateInput is an input type that accepts values of the ConfigVariableTemplateState enum
// A concrete instance of `ConfigVariableTemplateStateInput` can be one of the following:
//
//	ConfigVariableTemplateStateStateUnspecified
//	ConfigVariableTemplateStateActive
//	ConfigVariableTemplateStateDeprecated
type ConfigVariableTemplateStateInput interface {
	pulumi.Input

	ToConfigVariableTemplateStateOutput() ConfigVariableTemplateStateOutput
	ToConfigVariableTemplateStateOutputWithContext(context.Context) ConfigVariableTemplateStateOutput
}

var configVariableTemplateStatePtrType = reflect.TypeOf((**ConfigVariableTemplateState)(nil)).Elem()

type ConfigVariableTemplateStatePtrInput interface {
	pulumi.Input

	ToConfigVariableTemplateStatePtrOutput() ConfigVariableTemplateStatePtrOutput
	ToConfigVariableTemplateStatePtrOutputWithContext(context.Context) ConfigVariableTemplateStatePtrOutput
}

type configVariableTemplateStatePtr string

func ConfigVariableTemplateStatePtr(v string) ConfigVariableTemplateStatePtrInput {
	return (*configVariableTemplateStatePtr)(&v)
}

func (*configVariableTemplateStatePtr) ElementType() reflect.Type {
	return configVariableTemplateStatePtrType
}

func (in *configVariableTemplateStatePtr) ToConfigVariableTemplateStatePtrOutput() ConfigVariableTemplateStatePtrOutput {
	return pulumi.ToOutput(in).(ConfigVariableTemplateStatePtrOutput)
}

func (in *configVariableTemplateStatePtr) ToConfigVariableTemplateStatePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigVariableTemplateStatePtrOutput)
}

func (in *configVariableTemplateStatePtr) ToOutput(ctx context.Context) pulumix.Output[*ConfigVariableTemplateState] {
	return pulumix.Output[*ConfigVariableTemplateState]{
		OutputState: in.ToConfigVariableTemplateStatePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.
type ConfigVariableTemplateValueType string

const (
	// Value type is not specified.
	ConfigVariableTemplateValueTypeValueTypeUnspecified = ConfigVariableTemplateValueType("VALUE_TYPE_UNSPECIFIED")
	// Value type is string.
	ConfigVariableTemplateValueTypeString = ConfigVariableTemplateValueType("STRING")
	// Value type is integer.
	ConfigVariableTemplateValueTypeInt = ConfigVariableTemplateValueType("INT")
	// Value type is boolean.
	ConfigVariableTemplateValueTypeBool = ConfigVariableTemplateValueType("BOOL")
	// Value type is secret.
	ConfigVariableTemplateValueTypeSecret = ConfigVariableTemplateValueType("SECRET")
	// Value type is enum.
	ConfigVariableTemplateValueTypeEnum = ConfigVariableTemplateValueType("ENUM")
	// Value type is authorization code.
	ConfigVariableTemplateValueTypeAuthorizationCode = ConfigVariableTemplateValueType("AUTHORIZATION_CODE")
	// Encryption Key.
	ConfigVariableTemplateValueTypeEncryptionKey = ConfigVariableTemplateValueType("ENCRYPTION_KEY")
)

func (ConfigVariableTemplateValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateValueType)(nil)).Elem()
}

func (e ConfigVariableTemplateValueType) ToConfigVariableTemplateValueTypeOutput() ConfigVariableTemplateValueTypeOutput {
	return pulumi.ToOutput(e).(ConfigVariableTemplateValueTypeOutput)
}

func (e ConfigVariableTemplateValueType) ToConfigVariableTemplateValueTypeOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConfigVariableTemplateValueTypeOutput)
}

func (e ConfigVariableTemplateValueType) ToConfigVariableTemplateValueTypePtrOutput() ConfigVariableTemplateValueTypePtrOutput {
	return e.ToConfigVariableTemplateValueTypePtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateValueType) ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypePtrOutput {
	return ConfigVariableTemplateValueType(e).ToConfigVariableTemplateValueTypeOutputWithContext(ctx).ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx)
}

func (e ConfigVariableTemplateValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConfigVariableTemplateValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConfigVariableTemplateValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConfigVariableTemplateValueTypeOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigVariableTemplateValueType)(nil)).Elem()
}

func (o ConfigVariableTemplateValueTypeOutput) ToConfigVariableTemplateValueTypeOutput() ConfigVariableTemplateValueTypeOutput {
	return o
}

func (o ConfigVariableTemplateValueTypeOutput) ToConfigVariableTemplateValueTypeOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypeOutput {
	return o
}

func (o ConfigVariableTemplateValueTypeOutput) ToConfigVariableTemplateValueTypePtrOutput() ConfigVariableTemplateValueTypePtrOutput {
	return o.ToConfigVariableTemplateValueTypePtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateValueTypeOutput) ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigVariableTemplateValueType) *ConfigVariableTemplateValueType {
		return &v
	}).(ConfigVariableTemplateValueTypePtrOutput)
}

func (o ConfigVariableTemplateValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConfigVariableTemplateValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConfigVariableTemplateValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConfigVariableTemplateValueTypePtrOutput struct{ *pulumi.OutputState }

func (ConfigVariableTemplateValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigVariableTemplateValueType)(nil)).Elem()
}

func (o ConfigVariableTemplateValueTypePtrOutput) ToConfigVariableTemplateValueTypePtrOutput() ConfigVariableTemplateValueTypePtrOutput {
	return o
}

func (o ConfigVariableTemplateValueTypePtrOutput) ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypePtrOutput {
	return o
}

func (o ConfigVariableTemplateValueTypePtrOutput) Elem() ConfigVariableTemplateValueTypeOutput {
	return o.ApplyT(func(v *ConfigVariableTemplateValueType) ConfigVariableTemplateValueType {
		if v != nil {
			return *v
		}
		var ret ConfigVariableTemplateValueType
		return ret
	}).(ConfigVariableTemplateValueTypeOutput)
}

func (o ConfigVariableTemplateValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConfigVariableTemplateValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConfigVariableTemplateValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConfigVariableTemplateValueTypeInput is an input type that accepts values of the ConfigVariableTemplateValueType enum
// A concrete instance of `ConfigVariableTemplateValueTypeInput` can be one of the following:
//
//	ConfigVariableTemplateValueTypeValueTypeUnspecified
//	ConfigVariableTemplateValueTypeString
//	ConfigVariableTemplateValueTypeInt
//	ConfigVariableTemplateValueTypeBool
//	ConfigVariableTemplateValueTypeSecret
//	ConfigVariableTemplateValueTypeEnum
//	ConfigVariableTemplateValueTypeAuthorizationCode
//	ConfigVariableTemplateValueTypeEncryptionKey
type ConfigVariableTemplateValueTypeInput interface {
	pulumi.Input

	ToConfigVariableTemplateValueTypeOutput() ConfigVariableTemplateValueTypeOutput
	ToConfigVariableTemplateValueTypeOutputWithContext(context.Context) ConfigVariableTemplateValueTypeOutput
}

var configVariableTemplateValueTypePtrType = reflect.TypeOf((**ConfigVariableTemplateValueType)(nil)).Elem()

type ConfigVariableTemplateValueTypePtrInput interface {
	pulumi.Input

	ToConfigVariableTemplateValueTypePtrOutput() ConfigVariableTemplateValueTypePtrOutput
	ToConfigVariableTemplateValueTypePtrOutputWithContext(context.Context) ConfigVariableTemplateValueTypePtrOutput
}

type configVariableTemplateValueTypePtr string

func ConfigVariableTemplateValueTypePtr(v string) ConfigVariableTemplateValueTypePtrInput {
	return (*configVariableTemplateValueTypePtr)(&v)
}

func (*configVariableTemplateValueTypePtr) ElementType() reflect.Type {
	return configVariableTemplateValueTypePtrType
}

func (in *configVariableTemplateValueTypePtr) ToConfigVariableTemplateValueTypePtrOutput() ConfigVariableTemplateValueTypePtrOutput {
	return pulumi.ToOutput(in).(ConfigVariableTemplateValueTypePtrOutput)
}

func (in *configVariableTemplateValueTypePtr) ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx context.Context) ConfigVariableTemplateValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConfigVariableTemplateValueTypePtrOutput)
}

func (in *configVariableTemplateValueTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConfigVariableTemplateValueType] {
	return pulumix.Output[*ConfigVariableTemplateValueType]{
		OutputState: in.ToConfigVariableTemplateValueTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Eventing enablement type. Will be nil if eventing is not enabled.
type ConnectionEventingEnablementType string

const (
	// Eventing Enablement Type Unspecifeied.
	ConnectionEventingEnablementTypeEventingEnablementTypeUnspecified = ConnectionEventingEnablementType("EVENTING_ENABLEMENT_TYPE_UNSPECIFIED")
	// Both connection and eventing.
	ConnectionEventingEnablementTypeEventingAndConnection = ConnectionEventingEnablementType("EVENTING_AND_CONNECTION")
	// Only Eventing.
	ConnectionEventingEnablementTypeOnlyEventing = ConnectionEventingEnablementType("ONLY_EVENTING")
)

func (ConnectionEventingEnablementType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingEnablementType)(nil)).Elem()
}

func (e ConnectionEventingEnablementType) ToConnectionEventingEnablementTypeOutput() ConnectionEventingEnablementTypeOutput {
	return pulumi.ToOutput(e).(ConnectionEventingEnablementTypeOutput)
}

func (e ConnectionEventingEnablementType) ToConnectionEventingEnablementTypeOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionEventingEnablementTypeOutput)
}

func (e ConnectionEventingEnablementType) ToConnectionEventingEnablementTypePtrOutput() ConnectionEventingEnablementTypePtrOutput {
	return e.ToConnectionEventingEnablementTypePtrOutputWithContext(context.Background())
}

func (e ConnectionEventingEnablementType) ToConnectionEventingEnablementTypePtrOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypePtrOutput {
	return ConnectionEventingEnablementType(e).ToConnectionEventingEnablementTypeOutputWithContext(ctx).ToConnectionEventingEnablementTypePtrOutputWithContext(ctx)
}

func (e ConnectionEventingEnablementType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionEventingEnablementType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionEventingEnablementType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionEventingEnablementType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionEventingEnablementTypeOutput struct{ *pulumi.OutputState }

func (ConnectionEventingEnablementTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionEventingEnablementType)(nil)).Elem()
}

func (o ConnectionEventingEnablementTypeOutput) ToConnectionEventingEnablementTypeOutput() ConnectionEventingEnablementTypeOutput {
	return o
}

func (o ConnectionEventingEnablementTypeOutput) ToConnectionEventingEnablementTypeOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypeOutput {
	return o
}

func (o ConnectionEventingEnablementTypeOutput) ToConnectionEventingEnablementTypePtrOutput() ConnectionEventingEnablementTypePtrOutput {
	return o.ToConnectionEventingEnablementTypePtrOutputWithContext(context.Background())
}

func (o ConnectionEventingEnablementTypeOutput) ToConnectionEventingEnablementTypePtrOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionEventingEnablementType) *ConnectionEventingEnablementType {
		return &v
	}).(ConnectionEventingEnablementTypePtrOutput)
}

func (o ConnectionEventingEnablementTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionEventingEnablementTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionEventingEnablementType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionEventingEnablementTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingEnablementTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionEventingEnablementType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionEventingEnablementTypePtrOutput struct{ *pulumi.OutputState }

func (ConnectionEventingEnablementTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionEventingEnablementType)(nil)).Elem()
}

func (o ConnectionEventingEnablementTypePtrOutput) ToConnectionEventingEnablementTypePtrOutput() ConnectionEventingEnablementTypePtrOutput {
	return o
}

func (o ConnectionEventingEnablementTypePtrOutput) ToConnectionEventingEnablementTypePtrOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypePtrOutput {
	return o
}

func (o ConnectionEventingEnablementTypePtrOutput) Elem() ConnectionEventingEnablementTypeOutput {
	return o.ApplyT(func(v *ConnectionEventingEnablementType) ConnectionEventingEnablementType {
		if v != nil {
			return *v
		}
		var ret ConnectionEventingEnablementType
		return ret
	}).(ConnectionEventingEnablementTypeOutput)
}

func (o ConnectionEventingEnablementTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionEventingEnablementTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionEventingEnablementType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionEventingEnablementTypeInput is an input type that accepts values of the ConnectionEventingEnablementType enum
// A concrete instance of `ConnectionEventingEnablementTypeInput` can be one of the following:
//
//	ConnectionEventingEnablementTypeEventingEnablementTypeUnspecified
//	ConnectionEventingEnablementTypeEventingAndConnection
//	ConnectionEventingEnablementTypeOnlyEventing
type ConnectionEventingEnablementTypeInput interface {
	pulumi.Input

	ToConnectionEventingEnablementTypeOutput() ConnectionEventingEnablementTypeOutput
	ToConnectionEventingEnablementTypeOutputWithContext(context.Context) ConnectionEventingEnablementTypeOutput
}

var connectionEventingEnablementTypePtrType = reflect.TypeOf((**ConnectionEventingEnablementType)(nil)).Elem()

type ConnectionEventingEnablementTypePtrInput interface {
	pulumi.Input

	ToConnectionEventingEnablementTypePtrOutput() ConnectionEventingEnablementTypePtrOutput
	ToConnectionEventingEnablementTypePtrOutputWithContext(context.Context) ConnectionEventingEnablementTypePtrOutput
}

type connectionEventingEnablementTypePtr string

func ConnectionEventingEnablementTypePtr(v string) ConnectionEventingEnablementTypePtrInput {
	return (*connectionEventingEnablementTypePtr)(&v)
}

func (*connectionEventingEnablementTypePtr) ElementType() reflect.Type {
	return connectionEventingEnablementTypePtrType
}

func (in *connectionEventingEnablementTypePtr) ToConnectionEventingEnablementTypePtrOutput() ConnectionEventingEnablementTypePtrOutput {
	return pulumi.ToOutput(in).(ConnectionEventingEnablementTypePtrOutput)
}

func (in *connectionEventingEnablementTypePtr) ToConnectionEventingEnablementTypePtrOutputWithContext(ctx context.Context) ConnectionEventingEnablementTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionEventingEnablementTypePtrOutput)
}

func (in *connectionEventingEnablementTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConnectionEventingEnablementType] {
	return pulumix.Output[*ConnectionEventingEnablementType]{
		OutputState: in.ToConnectionEventingEnablementTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Type of the custom connector.
type CustomConnectorCustomConnectorType string

const (
	// Connector type is not specified.
	CustomConnectorCustomConnectorTypeCustomConnectorTypeUnspecified = CustomConnectorCustomConnectorType("CUSTOM_CONNECTOR_TYPE_UNSPECIFIED")
	// OpenAPI connector.
	CustomConnectorCustomConnectorTypeOpenApi = CustomConnectorCustomConnectorType("OPEN_API")
	// Proto connector.
	CustomConnectorCustomConnectorTypeProto = CustomConnectorCustomConnectorType("PROTO")
)

func (CustomConnectorCustomConnectorType) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomConnectorCustomConnectorType)(nil)).Elem()
}

func (e CustomConnectorCustomConnectorType) ToCustomConnectorCustomConnectorTypeOutput() CustomConnectorCustomConnectorTypeOutput {
	return pulumi.ToOutput(e).(CustomConnectorCustomConnectorTypeOutput)
}

func (e CustomConnectorCustomConnectorType) ToCustomConnectorCustomConnectorTypeOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CustomConnectorCustomConnectorTypeOutput)
}

func (e CustomConnectorCustomConnectorType) ToCustomConnectorCustomConnectorTypePtrOutput() CustomConnectorCustomConnectorTypePtrOutput {
	return e.ToCustomConnectorCustomConnectorTypePtrOutputWithContext(context.Background())
}

func (e CustomConnectorCustomConnectorType) ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypePtrOutput {
	return CustomConnectorCustomConnectorType(e).ToCustomConnectorCustomConnectorTypeOutputWithContext(ctx).ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx)
}

func (e CustomConnectorCustomConnectorType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomConnectorCustomConnectorType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CustomConnectorCustomConnectorType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CustomConnectorCustomConnectorType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CustomConnectorCustomConnectorTypeOutput struct{ *pulumi.OutputState }

func (CustomConnectorCustomConnectorTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomConnectorCustomConnectorType)(nil)).Elem()
}

func (o CustomConnectorCustomConnectorTypeOutput) ToCustomConnectorCustomConnectorTypeOutput() CustomConnectorCustomConnectorTypeOutput {
	return o
}

func (o CustomConnectorCustomConnectorTypeOutput) ToCustomConnectorCustomConnectorTypeOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypeOutput {
	return o
}

func (o CustomConnectorCustomConnectorTypeOutput) ToCustomConnectorCustomConnectorTypePtrOutput() CustomConnectorCustomConnectorTypePtrOutput {
	return o.ToCustomConnectorCustomConnectorTypePtrOutputWithContext(context.Background())
}

func (o CustomConnectorCustomConnectorTypeOutput) ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomConnectorCustomConnectorType) *CustomConnectorCustomConnectorType {
		return &v
	}).(CustomConnectorCustomConnectorTypePtrOutput)
}

func (o CustomConnectorCustomConnectorTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CustomConnectorCustomConnectorTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomConnectorCustomConnectorType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CustomConnectorCustomConnectorTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomConnectorCustomConnectorTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CustomConnectorCustomConnectorType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CustomConnectorCustomConnectorTypePtrOutput struct{ *pulumi.OutputState }

func (CustomConnectorCustomConnectorTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomConnectorCustomConnectorType)(nil)).Elem()
}

func (o CustomConnectorCustomConnectorTypePtrOutput) ToCustomConnectorCustomConnectorTypePtrOutput() CustomConnectorCustomConnectorTypePtrOutput {
	return o
}

func (o CustomConnectorCustomConnectorTypePtrOutput) ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypePtrOutput {
	return o
}

func (o CustomConnectorCustomConnectorTypePtrOutput) Elem() CustomConnectorCustomConnectorTypeOutput {
	return o.ApplyT(func(v *CustomConnectorCustomConnectorType) CustomConnectorCustomConnectorType {
		if v != nil {
			return *v
		}
		var ret CustomConnectorCustomConnectorType
		return ret
	}).(CustomConnectorCustomConnectorTypeOutput)
}

func (o CustomConnectorCustomConnectorTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CustomConnectorCustomConnectorTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CustomConnectorCustomConnectorType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CustomConnectorCustomConnectorTypeInput is an input type that accepts values of the CustomConnectorCustomConnectorType enum
// A concrete instance of `CustomConnectorCustomConnectorTypeInput` can be one of the following:
//
//	CustomConnectorCustomConnectorTypeCustomConnectorTypeUnspecified
//	CustomConnectorCustomConnectorTypeOpenApi
//	CustomConnectorCustomConnectorTypeProto
type CustomConnectorCustomConnectorTypeInput interface {
	pulumi.Input

	ToCustomConnectorCustomConnectorTypeOutput() CustomConnectorCustomConnectorTypeOutput
	ToCustomConnectorCustomConnectorTypeOutputWithContext(context.Context) CustomConnectorCustomConnectorTypeOutput
}

var customConnectorCustomConnectorTypePtrType = reflect.TypeOf((**CustomConnectorCustomConnectorType)(nil)).Elem()

type CustomConnectorCustomConnectorTypePtrInput interface {
	pulumi.Input

	ToCustomConnectorCustomConnectorTypePtrOutput() CustomConnectorCustomConnectorTypePtrOutput
	ToCustomConnectorCustomConnectorTypePtrOutputWithContext(context.Context) CustomConnectorCustomConnectorTypePtrOutput
}

type customConnectorCustomConnectorTypePtr string

func CustomConnectorCustomConnectorTypePtr(v string) CustomConnectorCustomConnectorTypePtrInput {
	return (*customConnectorCustomConnectorTypePtr)(&v)
}

func (*customConnectorCustomConnectorTypePtr) ElementType() reflect.Type {
	return customConnectorCustomConnectorTypePtrType
}

func (in *customConnectorCustomConnectorTypePtr) ToCustomConnectorCustomConnectorTypePtrOutput() CustomConnectorCustomConnectorTypePtrOutput {
	return pulumi.ToOutput(in).(CustomConnectorCustomConnectorTypePtrOutput)
}

func (in *customConnectorCustomConnectorTypePtr) ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx context.Context) CustomConnectorCustomConnectorTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CustomConnectorCustomConnectorTypePtrOutput)
}

func (in *customConnectorCustomConnectorTypePtr) ToOutput(ctx context.Context) pulumix.Output[*CustomConnectorCustomConnectorType] {
	return pulumix.Output[*CustomConnectorCustomConnectorType]{
		OutputState: in.ToCustomConnectorCustomConnectorTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type.
type EncryptionKeyType string

const (
	// Value type is not specified.
	EncryptionKeyTypeTypeUnspecified = EncryptionKeyType("TYPE_UNSPECIFIED")
	// Google Managed.
	EncryptionKeyTypeGoogleManaged = EncryptionKeyType("GOOGLE_MANAGED")
	// Customer Managed.
	EncryptionKeyTypeCustomerManaged = EncryptionKeyType("CUSTOMER_MANAGED")
)

func (EncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyType)(nil)).Elem()
}

func (e EncryptionKeyType) ToEncryptionKeyTypeOutput() EncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(EncryptionKeyTypeOutput)
}

func (e EncryptionKeyType) ToEncryptionKeyTypeOutputWithContext(ctx context.Context) EncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EncryptionKeyTypeOutput)
}

func (e EncryptionKeyType) ToEncryptionKeyTypePtrOutput() EncryptionKeyTypePtrOutput {
	return e.ToEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e EncryptionKeyType) ToEncryptionKeyTypePtrOutputWithContext(ctx context.Context) EncryptionKeyTypePtrOutput {
	return EncryptionKeyType(e).ToEncryptionKeyTypeOutputWithContext(ctx).ToEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e EncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (EncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyType)(nil)).Elem()
}

func (o EncryptionKeyTypeOutput) ToEncryptionKeyTypeOutput() EncryptionKeyTypeOutput {
	return o
}

func (o EncryptionKeyTypeOutput) ToEncryptionKeyTypeOutputWithContext(ctx context.Context) EncryptionKeyTypeOutput {
	return o
}

func (o EncryptionKeyTypeOutput) ToEncryptionKeyTypePtrOutput() EncryptionKeyTypePtrOutput {
	return o.ToEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o EncryptionKeyTypeOutput) ToEncryptionKeyTypePtrOutputWithContext(ctx context.Context) EncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeyType) *EncryptionKeyType {
		return &v
	}).(EncryptionKeyTypePtrOutput)
}

func (o EncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyType)(nil)).Elem()
}

func (o EncryptionKeyTypePtrOutput) ToEncryptionKeyTypePtrOutput() EncryptionKeyTypePtrOutput {
	return o
}

func (o EncryptionKeyTypePtrOutput) ToEncryptionKeyTypePtrOutputWithContext(ctx context.Context) EncryptionKeyTypePtrOutput {
	return o
}

func (o EncryptionKeyTypePtrOutput) Elem() EncryptionKeyTypeOutput {
	return o.ApplyT(func(v *EncryptionKeyType) EncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyType
		return ret
	}).(EncryptionKeyTypeOutput)
}

func (o EncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EncryptionKeyTypeInput is an input type that accepts values of the EncryptionKeyType enum
// A concrete instance of `EncryptionKeyTypeInput` can be one of the following:
//
//	EncryptionKeyTypeTypeUnspecified
//	EncryptionKeyTypeGoogleManaged
//	EncryptionKeyTypeCustomerManaged
type EncryptionKeyTypeInput interface {
	pulumi.Input

	ToEncryptionKeyTypeOutput() EncryptionKeyTypeOutput
	ToEncryptionKeyTypeOutputWithContext(context.Context) EncryptionKeyTypeOutput
}

var encryptionKeyTypePtrType = reflect.TypeOf((**EncryptionKeyType)(nil)).Elem()

type EncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToEncryptionKeyTypePtrOutput() EncryptionKeyTypePtrOutput
	ToEncryptionKeyTypePtrOutputWithContext(context.Context) EncryptionKeyTypePtrOutput
}

type encryptionKeyTypePtr string

func EncryptionKeyTypePtr(v string) EncryptionKeyTypePtrInput {
	return (*encryptionKeyTypePtr)(&v)
}

func (*encryptionKeyTypePtr) ElementType() reflect.Type {
	return encryptionKeyTypePtrType
}

func (in *encryptionKeyTypePtr) ToEncryptionKeyTypePtrOutput() EncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(EncryptionKeyTypePtrOutput)
}

func (in *encryptionKeyTypePtr) ToEncryptionKeyTypePtrOutputWithContext(ctx context.Context) EncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EncryptionKeyTypePtrOutput)
}

func (in *encryptionKeyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EncryptionKeyType] {
	return pulumix.Output[*EncryptionKeyType]{
		OutputState: in.ToEncryptionKeyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// type of the destination
type EventSubscriptionDestinationType string

const (
	// Default state.
	EventSubscriptionDestinationTypeTypeUnspecified = EventSubscriptionDestinationType("TYPE_UNSPECIFIED")
	// Endpoint - Hit the value of endpoint when event is received
	EventSubscriptionDestinationTypeEndpoint = EventSubscriptionDestinationType("ENDPOINT")
)

func (EventSubscriptionDestinationType) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionDestinationType)(nil)).Elem()
}

func (e EventSubscriptionDestinationType) ToEventSubscriptionDestinationTypeOutput() EventSubscriptionDestinationTypeOutput {
	return pulumi.ToOutput(e).(EventSubscriptionDestinationTypeOutput)
}

func (e EventSubscriptionDestinationType) ToEventSubscriptionDestinationTypeOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EventSubscriptionDestinationTypeOutput)
}

func (e EventSubscriptionDestinationType) ToEventSubscriptionDestinationTypePtrOutput() EventSubscriptionDestinationTypePtrOutput {
	return e.ToEventSubscriptionDestinationTypePtrOutputWithContext(context.Background())
}

func (e EventSubscriptionDestinationType) ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypePtrOutput {
	return EventSubscriptionDestinationType(e).ToEventSubscriptionDestinationTypeOutputWithContext(ctx).ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx)
}

func (e EventSubscriptionDestinationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSubscriptionDestinationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EventSubscriptionDestinationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EventSubscriptionDestinationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EventSubscriptionDestinationTypeOutput struct{ *pulumi.OutputState }

func (EventSubscriptionDestinationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionDestinationType)(nil)).Elem()
}

func (o EventSubscriptionDestinationTypeOutput) ToEventSubscriptionDestinationTypeOutput() EventSubscriptionDestinationTypeOutput {
	return o
}

func (o EventSubscriptionDestinationTypeOutput) ToEventSubscriptionDestinationTypeOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypeOutput {
	return o
}

func (o EventSubscriptionDestinationTypeOutput) ToEventSubscriptionDestinationTypePtrOutput() EventSubscriptionDestinationTypePtrOutput {
	return o.ToEventSubscriptionDestinationTypePtrOutputWithContext(context.Background())
}

func (o EventSubscriptionDestinationTypeOutput) ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventSubscriptionDestinationType) *EventSubscriptionDestinationType {
		return &v
	}).(EventSubscriptionDestinationTypePtrOutput)
}

func (o EventSubscriptionDestinationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EventSubscriptionDestinationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSubscriptionDestinationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EventSubscriptionDestinationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSubscriptionDestinationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EventSubscriptionDestinationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EventSubscriptionDestinationTypePtrOutput struct{ *pulumi.OutputState }

func (EventSubscriptionDestinationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventSubscriptionDestinationType)(nil)).Elem()
}

func (o EventSubscriptionDestinationTypePtrOutput) ToEventSubscriptionDestinationTypePtrOutput() EventSubscriptionDestinationTypePtrOutput {
	return o
}

func (o EventSubscriptionDestinationTypePtrOutput) ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypePtrOutput {
	return o
}

func (o EventSubscriptionDestinationTypePtrOutput) Elem() EventSubscriptionDestinationTypeOutput {
	return o.ApplyT(func(v *EventSubscriptionDestinationType) EventSubscriptionDestinationType {
		if v != nil {
			return *v
		}
		var ret EventSubscriptionDestinationType
		return ret
	}).(EventSubscriptionDestinationTypeOutput)
}

func (o EventSubscriptionDestinationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EventSubscriptionDestinationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EventSubscriptionDestinationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EventSubscriptionDestinationTypeInput is an input type that accepts values of the EventSubscriptionDestinationType enum
// A concrete instance of `EventSubscriptionDestinationTypeInput` can be one of the following:
//
//	EventSubscriptionDestinationTypeTypeUnspecified
//	EventSubscriptionDestinationTypeEndpoint
type EventSubscriptionDestinationTypeInput interface {
	pulumi.Input

	ToEventSubscriptionDestinationTypeOutput() EventSubscriptionDestinationTypeOutput
	ToEventSubscriptionDestinationTypeOutputWithContext(context.Context) EventSubscriptionDestinationTypeOutput
}

var eventSubscriptionDestinationTypePtrType = reflect.TypeOf((**EventSubscriptionDestinationType)(nil)).Elem()

type EventSubscriptionDestinationTypePtrInput interface {
	pulumi.Input

	ToEventSubscriptionDestinationTypePtrOutput() EventSubscriptionDestinationTypePtrOutput
	ToEventSubscriptionDestinationTypePtrOutputWithContext(context.Context) EventSubscriptionDestinationTypePtrOutput
}

type eventSubscriptionDestinationTypePtr string

func EventSubscriptionDestinationTypePtr(v string) EventSubscriptionDestinationTypePtrInput {
	return (*eventSubscriptionDestinationTypePtr)(&v)
}

func (*eventSubscriptionDestinationTypePtr) ElementType() reflect.Type {
	return eventSubscriptionDestinationTypePtrType
}

func (in *eventSubscriptionDestinationTypePtr) ToEventSubscriptionDestinationTypePtrOutput() EventSubscriptionDestinationTypePtrOutput {
	return pulumi.ToOutput(in).(EventSubscriptionDestinationTypePtrOutput)
}

func (in *eventSubscriptionDestinationTypePtr) ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx context.Context) EventSubscriptionDestinationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EventSubscriptionDestinationTypePtrOutput)
}

func (in *eventSubscriptionDestinationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*EventSubscriptionDestinationType] {
	return pulumix.Output[*EventSubscriptionDestinationType]{
		OutputState: in.ToEventSubscriptionDestinationTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Comparator to use for comparing the field value.
type FieldComparisonComparator string

const (
	// The default value.
	FieldComparisonComparatorComparatorUnspecified = FieldComparisonComparator("COMPARATOR_UNSPECIFIED")
	// The field value must be equal to the specified value.
	FieldComparisonComparatorEquals = FieldComparisonComparator("EQUALS")
	// The field value must not be equal to the specified value.
	FieldComparisonComparatorNotEquals = FieldComparisonComparator("NOT_EQUALS")
)

func (FieldComparisonComparator) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldComparisonComparator)(nil)).Elem()
}

func (e FieldComparisonComparator) ToFieldComparisonComparatorOutput() FieldComparisonComparatorOutput {
	return pulumi.ToOutput(e).(FieldComparisonComparatorOutput)
}

func (e FieldComparisonComparator) ToFieldComparisonComparatorOutputWithContext(ctx context.Context) FieldComparisonComparatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FieldComparisonComparatorOutput)
}

func (e FieldComparisonComparator) ToFieldComparisonComparatorPtrOutput() FieldComparisonComparatorPtrOutput {
	return e.ToFieldComparisonComparatorPtrOutputWithContext(context.Background())
}

func (e FieldComparisonComparator) ToFieldComparisonComparatorPtrOutputWithContext(ctx context.Context) FieldComparisonComparatorPtrOutput {
	return FieldComparisonComparator(e).ToFieldComparisonComparatorOutputWithContext(ctx).ToFieldComparisonComparatorPtrOutputWithContext(ctx)
}

func (e FieldComparisonComparator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FieldComparisonComparator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FieldComparisonComparator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FieldComparisonComparator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FieldComparisonComparatorOutput struct{ *pulumi.OutputState }

func (FieldComparisonComparatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FieldComparisonComparator)(nil)).Elem()
}

func (o FieldComparisonComparatorOutput) ToFieldComparisonComparatorOutput() FieldComparisonComparatorOutput {
	return o
}

func (o FieldComparisonComparatorOutput) ToFieldComparisonComparatorOutputWithContext(ctx context.Context) FieldComparisonComparatorOutput {
	return o
}

func (o FieldComparisonComparatorOutput) ToFieldComparisonComparatorPtrOutput() FieldComparisonComparatorPtrOutput {
	return o.ToFieldComparisonComparatorPtrOutputWithContext(context.Background())
}

func (o FieldComparisonComparatorOutput) ToFieldComparisonComparatorPtrOutputWithContext(ctx context.Context) FieldComparisonComparatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FieldComparisonComparator) *FieldComparisonComparator {
		return &v
	}).(FieldComparisonComparatorPtrOutput)
}

func (o FieldComparisonComparatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FieldComparisonComparatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FieldComparisonComparator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FieldComparisonComparatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FieldComparisonComparatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FieldComparisonComparator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FieldComparisonComparatorPtrOutput struct{ *pulumi.OutputState }

func (FieldComparisonComparatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FieldComparisonComparator)(nil)).Elem()
}

func (o FieldComparisonComparatorPtrOutput) ToFieldComparisonComparatorPtrOutput() FieldComparisonComparatorPtrOutput {
	return o
}

func (o FieldComparisonComparatorPtrOutput) ToFieldComparisonComparatorPtrOutputWithContext(ctx context.Context) FieldComparisonComparatorPtrOutput {
	return o
}

func (o FieldComparisonComparatorPtrOutput) Elem() FieldComparisonComparatorOutput {
	return o.ApplyT(func(v *FieldComparisonComparator) FieldComparisonComparator {
		if v != nil {
			return *v
		}
		var ret FieldComparisonComparator
		return ret
	}).(FieldComparisonComparatorOutput)
}

func (o FieldComparisonComparatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FieldComparisonComparatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FieldComparisonComparator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FieldComparisonComparatorInput is an input type that accepts values of the FieldComparisonComparator enum
// A concrete instance of `FieldComparisonComparatorInput` can be one of the following:
//
//	FieldComparisonComparatorComparatorUnspecified
//	FieldComparisonComparatorEquals
//	FieldComparisonComparatorNotEquals
type FieldComparisonComparatorInput interface {
	pulumi.Input

	ToFieldComparisonComparatorOutput() FieldComparisonComparatorOutput
	ToFieldComparisonComparatorOutputWithContext(context.Context) FieldComparisonComparatorOutput
}

var fieldComparisonComparatorPtrType = reflect.TypeOf((**FieldComparisonComparator)(nil)).Elem()

type FieldComparisonComparatorPtrInput interface {
	pulumi.Input

	ToFieldComparisonComparatorPtrOutput() FieldComparisonComparatorPtrOutput
	ToFieldComparisonComparatorPtrOutputWithContext(context.Context) FieldComparisonComparatorPtrOutput
}

type fieldComparisonComparatorPtr string

func FieldComparisonComparatorPtr(v string) FieldComparisonComparatorPtrInput {
	return (*fieldComparisonComparatorPtr)(&v)
}

func (*fieldComparisonComparatorPtr) ElementType() reflect.Type {
	return fieldComparisonComparatorPtrType
}

func (in *fieldComparisonComparatorPtr) ToFieldComparisonComparatorPtrOutput() FieldComparisonComparatorPtrOutput {
	return pulumi.ToOutput(in).(FieldComparisonComparatorPtrOutput)
}

func (in *fieldComparisonComparatorPtr) ToFieldComparisonComparatorPtrOutputWithContext(ctx context.Context) FieldComparisonComparatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FieldComparisonComparatorPtrOutput)
}

func (in *fieldComparisonComparatorPtr) ToOutput(ctx context.Context) pulumix.Output[*FieldComparisonComparator] {
	return pulumix.Output[*FieldComparisonComparator]{
		OutputState: in.ToFieldComparisonComparatorPtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Type of the JMS Source. i.e. Queue or Topic
type JMSType string

const (
	// Default state.
	JMSTypeTypeUnspecified = JMSType("TYPE_UNSPECIFIED")
	// JMS Queue.
	JMSTypeQueue = JMSType("QUEUE")
	// JMS Topic.
	JMSTypeTopic = JMSType("TOPIC")
)

func (JMSType) ElementType() reflect.Type {
	return reflect.TypeOf((*JMSType)(nil)).Elem()
}

func (e JMSType) ToJMSTypeOutput() JMSTypeOutput {
	return pulumi.ToOutput(e).(JMSTypeOutput)
}

func (e JMSType) ToJMSTypeOutputWithContext(ctx context.Context) JMSTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JMSTypeOutput)
}

func (e JMSType) ToJMSTypePtrOutput() JMSTypePtrOutput {
	return e.ToJMSTypePtrOutputWithContext(context.Background())
}

func (e JMSType) ToJMSTypePtrOutputWithContext(ctx context.Context) JMSTypePtrOutput {
	return JMSType(e).ToJMSTypeOutputWithContext(ctx).ToJMSTypePtrOutputWithContext(ctx)
}

func (e JMSType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JMSType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JMSType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JMSType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JMSTypeOutput struct{ *pulumi.OutputState }

func (JMSTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JMSType)(nil)).Elem()
}

func (o JMSTypeOutput) ToJMSTypeOutput() JMSTypeOutput {
	return o
}

func (o JMSTypeOutput) ToJMSTypeOutputWithContext(ctx context.Context) JMSTypeOutput {
	return o
}

func (o JMSTypeOutput) ToJMSTypePtrOutput() JMSTypePtrOutput {
	return o.ToJMSTypePtrOutputWithContext(context.Background())
}

func (o JMSTypeOutput) ToJMSTypePtrOutputWithContext(ctx context.Context) JMSTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JMSType) *JMSType {
		return &v
	}).(JMSTypePtrOutput)
}

func (o JMSTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JMSTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JMSType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JMSTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JMSTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JMSType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JMSTypePtrOutput struct{ *pulumi.OutputState }

func (JMSTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JMSType)(nil)).Elem()
}

func (o JMSTypePtrOutput) ToJMSTypePtrOutput() JMSTypePtrOutput {
	return o
}

func (o JMSTypePtrOutput) ToJMSTypePtrOutputWithContext(ctx context.Context) JMSTypePtrOutput {
	return o
}

func (o JMSTypePtrOutput) Elem() JMSTypeOutput {
	return o.ApplyT(func(v *JMSType) JMSType {
		if v != nil {
			return *v
		}
		var ret JMSType
		return ret
	}).(JMSTypeOutput)
}

func (o JMSTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JMSTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JMSType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JMSTypeInput is an input type that accepts values of the JMSType enum
// A concrete instance of `JMSTypeInput` can be one of the following:
//
//	JMSTypeTypeUnspecified
//	JMSTypeQueue
//	JMSTypeTopic
type JMSTypeInput interface {
	pulumi.Input

	ToJMSTypeOutput() JMSTypeOutput
	ToJMSTypeOutputWithContext(context.Context) JMSTypeOutput
}

var jmstypePtrType = reflect.TypeOf((**JMSType)(nil)).Elem()

type JMSTypePtrInput interface {
	pulumi.Input

	ToJMSTypePtrOutput() JMSTypePtrOutput
	ToJMSTypePtrOutputWithContext(context.Context) JMSTypePtrOutput
}

type jmstypePtr string

func JMSTypePtr(v string) JMSTypePtrInput {
	return (*jmstypePtr)(&v)
}

func (*jmstypePtr) ElementType() reflect.Type {
	return jmstypePtrType
}

func (in *jmstypePtr) ToJMSTypePtrOutput() JMSTypePtrOutput {
	return pulumi.ToOutput(in).(JMSTypePtrOutput)
}

func (in *jmstypePtr) ToJMSTypePtrOutputWithContext(ctx context.Context) JMSTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JMSTypePtrOutput)
}

func (in *jmstypePtr) ToOutput(ctx context.Context) pulumix.Output[*JMSType] {
	return pulumix.Output[*JMSType]{
		OutputState: in.ToJMSTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The logical operator to use between the fields and conditions.
type LogicalExpressionLogicalOperator string

const (
	// The default value.
	LogicalExpressionLogicalOperatorOperatorUnspecified = LogicalExpressionLogicalOperator("OPERATOR_UNSPECIFIED")
	// AND operator; The conditions must all be true.
	LogicalExpressionLogicalOperatorAnd = LogicalExpressionLogicalOperator("AND")
	// OR operator; At least one of the conditions must be true.
	LogicalExpressionLogicalOperatorOr = LogicalExpressionLogicalOperator("OR")
)

func (LogicalExpressionLogicalOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalExpressionLogicalOperator)(nil)).Elem()
}

func (e LogicalExpressionLogicalOperator) ToLogicalExpressionLogicalOperatorOutput() LogicalExpressionLogicalOperatorOutput {
	return pulumi.ToOutput(e).(LogicalExpressionLogicalOperatorOutput)
}

func (e LogicalExpressionLogicalOperator) ToLogicalExpressionLogicalOperatorOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LogicalExpressionLogicalOperatorOutput)
}

func (e LogicalExpressionLogicalOperator) ToLogicalExpressionLogicalOperatorPtrOutput() LogicalExpressionLogicalOperatorPtrOutput {
	return e.ToLogicalExpressionLogicalOperatorPtrOutputWithContext(context.Background())
}

func (e LogicalExpressionLogicalOperator) ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorPtrOutput {
	return LogicalExpressionLogicalOperator(e).ToLogicalExpressionLogicalOperatorOutputWithContext(ctx).ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx)
}

func (e LogicalExpressionLogicalOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogicalExpressionLogicalOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LogicalExpressionLogicalOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LogicalExpressionLogicalOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LogicalExpressionLogicalOperatorOutput struct{ *pulumi.OutputState }

func (LogicalExpressionLogicalOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogicalExpressionLogicalOperator)(nil)).Elem()
}

func (o LogicalExpressionLogicalOperatorOutput) ToLogicalExpressionLogicalOperatorOutput() LogicalExpressionLogicalOperatorOutput {
	return o
}

func (o LogicalExpressionLogicalOperatorOutput) ToLogicalExpressionLogicalOperatorOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorOutput {
	return o
}

func (o LogicalExpressionLogicalOperatorOutput) ToLogicalExpressionLogicalOperatorPtrOutput() LogicalExpressionLogicalOperatorPtrOutput {
	return o.ToLogicalExpressionLogicalOperatorPtrOutputWithContext(context.Background())
}

func (o LogicalExpressionLogicalOperatorOutput) ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogicalExpressionLogicalOperator) *LogicalExpressionLogicalOperator {
		return &v
	}).(LogicalExpressionLogicalOperatorPtrOutput)
}

func (o LogicalExpressionLogicalOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LogicalExpressionLogicalOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogicalExpressionLogicalOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LogicalExpressionLogicalOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogicalExpressionLogicalOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LogicalExpressionLogicalOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LogicalExpressionLogicalOperatorPtrOutput struct{ *pulumi.OutputState }

func (LogicalExpressionLogicalOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogicalExpressionLogicalOperator)(nil)).Elem()
}

func (o LogicalExpressionLogicalOperatorPtrOutput) ToLogicalExpressionLogicalOperatorPtrOutput() LogicalExpressionLogicalOperatorPtrOutput {
	return o
}

func (o LogicalExpressionLogicalOperatorPtrOutput) ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorPtrOutput {
	return o
}

func (o LogicalExpressionLogicalOperatorPtrOutput) Elem() LogicalExpressionLogicalOperatorOutput {
	return o.ApplyT(func(v *LogicalExpressionLogicalOperator) LogicalExpressionLogicalOperator {
		if v != nil {
			return *v
		}
		var ret LogicalExpressionLogicalOperator
		return ret
	}).(LogicalExpressionLogicalOperatorOutput)
}

func (o LogicalExpressionLogicalOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LogicalExpressionLogicalOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LogicalExpressionLogicalOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LogicalExpressionLogicalOperatorInput is an input type that accepts values of the LogicalExpressionLogicalOperator enum
// A concrete instance of `LogicalExpressionLogicalOperatorInput` can be one of the following:
//
//	LogicalExpressionLogicalOperatorOperatorUnspecified
//	LogicalExpressionLogicalOperatorAnd
//	LogicalExpressionLogicalOperatorOr
type LogicalExpressionLogicalOperatorInput interface {
	pulumi.Input

	ToLogicalExpressionLogicalOperatorOutput() LogicalExpressionLogicalOperatorOutput
	ToLogicalExpressionLogicalOperatorOutputWithContext(context.Context) LogicalExpressionLogicalOperatorOutput
}

var logicalExpressionLogicalOperatorPtrType = reflect.TypeOf((**LogicalExpressionLogicalOperator)(nil)).Elem()

type LogicalExpressionLogicalOperatorPtrInput interface {
	pulumi.Input

	ToLogicalExpressionLogicalOperatorPtrOutput() LogicalExpressionLogicalOperatorPtrOutput
	ToLogicalExpressionLogicalOperatorPtrOutputWithContext(context.Context) LogicalExpressionLogicalOperatorPtrOutput
}

type logicalExpressionLogicalOperatorPtr string

func LogicalExpressionLogicalOperatorPtr(v string) LogicalExpressionLogicalOperatorPtrInput {
	return (*logicalExpressionLogicalOperatorPtr)(&v)
}

func (*logicalExpressionLogicalOperatorPtr) ElementType() reflect.Type {
	return logicalExpressionLogicalOperatorPtrType
}

func (in *logicalExpressionLogicalOperatorPtr) ToLogicalExpressionLogicalOperatorPtrOutput() LogicalExpressionLogicalOperatorPtrOutput {
	return pulumi.ToOutput(in).(LogicalExpressionLogicalOperatorPtrOutput)
}

func (in *logicalExpressionLogicalOperatorPtr) ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx context.Context) LogicalExpressionLogicalOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LogicalExpressionLogicalOperatorPtrOutput)
}

func (in *logicalExpressionLogicalOperatorPtr) ToOutput(ctx context.Context) pulumix.Output[*LogicalExpressionLogicalOperator] {
	return pulumix.Output[*LogicalExpressionLogicalOperator]{
		OutputState: in.ToLogicalExpressionLogicalOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// Different types of resource supported.
type ResourceType string

const (
	// Value type is not specified.
	ResourceTypeTypeUnspecified = ResourceType("TYPE_UNSPECIFIED")
	// Google Cloud Project Resource.
	ResourceTypeGcpProject = ResourceType("GCP_PROJECT")
	// Any Google Cloud Resource which is identified uniquely by IAM.
	ResourceTypeGcpResource = ResourceType("GCP_RESOURCE")
	// Google Cloud Secret Resource.
	ResourceTypeGcpSecretmanagerSecret = ResourceType("GCP_SECRETMANAGER_SECRET")
	// Google Cloud Secret Version Resource.
	ResourceTypeGcpSecretmanagerSecretVersion = ResourceType("GCP_SECRETMANAGER_SECRET_VERSION")
)

func (ResourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceType)(nil)).Elem()
}

func (e ResourceType) ToResourceTypeOutput() ResourceTypeOutput {
	return pulumi.ToOutput(e).(ResourceTypeOutput)
}

func (e ResourceType) ToResourceTypeOutputWithContext(ctx context.Context) ResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceTypeOutput)
}

func (e ResourceType) ToResourceTypePtrOutput() ResourceTypePtrOutput {
	return e.ToResourceTypePtrOutputWithContext(context.Background())
}

func (e ResourceType) ToResourceTypePtrOutputWithContext(ctx context.Context) ResourceTypePtrOutput {
	return ResourceType(e).ToResourceTypeOutputWithContext(ctx).ToResourceTypePtrOutputWithContext(ctx)
}

func (e ResourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceTypeOutput struct{ *pulumi.OutputState }

func (ResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceType)(nil)).Elem()
}

func (o ResourceTypeOutput) ToResourceTypeOutput() ResourceTypeOutput {
	return o
}

func (o ResourceTypeOutput) ToResourceTypeOutputWithContext(ctx context.Context) ResourceTypeOutput {
	return o
}

func (o ResourceTypeOutput) ToResourceTypePtrOutput() ResourceTypePtrOutput {
	return o.ToResourceTypePtrOutputWithContext(context.Background())
}

func (o ResourceTypeOutput) ToResourceTypePtrOutputWithContext(ctx context.Context) ResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceType) *ResourceType {
		return &v
	}).(ResourceTypePtrOutput)
}

func (o ResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceType)(nil)).Elem()
}

func (o ResourceTypePtrOutput) ToResourceTypePtrOutput() ResourceTypePtrOutput {
	return o
}

func (o ResourceTypePtrOutput) ToResourceTypePtrOutputWithContext(ctx context.Context) ResourceTypePtrOutput {
	return o
}

func (o ResourceTypePtrOutput) Elem() ResourceTypeOutput {
	return o.ApplyT(func(v *ResourceType) ResourceType {
		if v != nil {
			return *v
		}
		var ret ResourceType
		return ret
	}).(ResourceTypeOutput)
}

func (o ResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceTypeInput is an input type that accepts values of the ResourceType enum
// A concrete instance of `ResourceTypeInput` can be one of the following:
//
//	ResourceTypeTypeUnspecified
//	ResourceTypeGcpProject
//	ResourceTypeGcpResource
//	ResourceTypeGcpSecretmanagerSecret
//	ResourceTypeGcpSecretmanagerSecretVersion
type ResourceTypeInput interface {
	pulumi.Input

	ToResourceTypeOutput() ResourceTypeOutput
	ToResourceTypeOutputWithContext(context.Context) ResourceTypeOutput
}

var resourceTypePtrType = reflect.TypeOf((**ResourceType)(nil)).Elem()

type ResourceTypePtrInput interface {
	pulumi.Input

	ToResourceTypePtrOutput() ResourceTypePtrOutput
	ToResourceTypePtrOutputWithContext(context.Context) ResourceTypePtrOutput
}

type resourceTypePtr string

func ResourceTypePtr(v string) ResourceTypePtrInput {
	return (*resourceTypePtr)(&v)
}

func (*resourceTypePtr) ElementType() reflect.Type {
	return resourceTypePtrType
}

func (in *resourceTypePtr) ToResourceTypePtrOutput() ResourceTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceTypePtrOutput)
}

func (in *resourceTypePtr) ToResourceTypePtrOutputWithContext(ctx context.Context) ResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceTypePtrOutput)
}

func (in *resourceTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceType] {
	return pulumix.Output[*ResourceType]{
		OutputState: in.ToResourceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Prinicipal/Identity for whom the role need to assigned.
type RoleGrantPrincipal string

const (
	// Value type is not specified.
	RoleGrantPrincipalPrincipalUnspecified = RoleGrantPrincipal("PRINCIPAL_UNSPECIFIED")
	// Service Account used for Connector workload identity This is either the default service account if unspecified or Service Account provided by Customers through BYOSA.
	RoleGrantPrincipalConnectorSa = RoleGrantPrincipal("CONNECTOR_SA")
)

func (RoleGrantPrincipal) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleGrantPrincipal)(nil)).Elem()
}

func (e RoleGrantPrincipal) ToRoleGrantPrincipalOutput() RoleGrantPrincipalOutput {
	return pulumi.ToOutput(e).(RoleGrantPrincipalOutput)
}

func (e RoleGrantPrincipal) ToRoleGrantPrincipalOutputWithContext(ctx context.Context) RoleGrantPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoleGrantPrincipalOutput)
}

func (e RoleGrantPrincipal) ToRoleGrantPrincipalPtrOutput() RoleGrantPrincipalPtrOutput {
	return e.ToRoleGrantPrincipalPtrOutputWithContext(context.Background())
}

func (e RoleGrantPrincipal) ToRoleGrantPrincipalPtrOutputWithContext(ctx context.Context) RoleGrantPrincipalPtrOutput {
	return RoleGrantPrincipal(e).ToRoleGrantPrincipalOutputWithContext(ctx).ToRoleGrantPrincipalPtrOutputWithContext(ctx)
}

func (e RoleGrantPrincipal) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoleGrantPrincipal) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoleGrantPrincipal) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoleGrantPrincipal) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoleGrantPrincipalOutput struct{ *pulumi.OutputState }

func (RoleGrantPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleGrantPrincipal)(nil)).Elem()
}

func (o RoleGrantPrincipalOutput) ToRoleGrantPrincipalOutput() RoleGrantPrincipalOutput {
	return o
}

func (o RoleGrantPrincipalOutput) ToRoleGrantPrincipalOutputWithContext(ctx context.Context) RoleGrantPrincipalOutput {
	return o
}

func (o RoleGrantPrincipalOutput) ToRoleGrantPrincipalPtrOutput() RoleGrantPrincipalPtrOutput {
	return o.ToRoleGrantPrincipalPtrOutputWithContext(context.Background())
}

func (o RoleGrantPrincipalOutput) ToRoleGrantPrincipalPtrOutputWithContext(ctx context.Context) RoleGrantPrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleGrantPrincipal) *RoleGrantPrincipal {
		return &v
	}).(RoleGrantPrincipalPtrOutput)
}

func (o RoleGrantPrincipalOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoleGrantPrincipalOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoleGrantPrincipal) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoleGrantPrincipalOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleGrantPrincipalOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoleGrantPrincipal) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoleGrantPrincipalPtrOutput struct{ *pulumi.OutputState }

func (RoleGrantPrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleGrantPrincipal)(nil)).Elem()
}

func (o RoleGrantPrincipalPtrOutput) ToRoleGrantPrincipalPtrOutput() RoleGrantPrincipalPtrOutput {
	return o
}

func (o RoleGrantPrincipalPtrOutput) ToRoleGrantPrincipalPtrOutputWithContext(ctx context.Context) RoleGrantPrincipalPtrOutput {
	return o
}

func (o RoleGrantPrincipalPtrOutput) Elem() RoleGrantPrincipalOutput {
	return o.ApplyT(func(v *RoleGrantPrincipal) RoleGrantPrincipal {
		if v != nil {
			return *v
		}
		var ret RoleGrantPrincipal
		return ret
	}).(RoleGrantPrincipalOutput)
}

func (o RoleGrantPrincipalPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleGrantPrincipalPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoleGrantPrincipal) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoleGrantPrincipalInput is an input type that accepts values of the RoleGrantPrincipal enum
// A concrete instance of `RoleGrantPrincipalInput` can be one of the following:
//
//	RoleGrantPrincipalPrincipalUnspecified
//	RoleGrantPrincipalConnectorSa
type RoleGrantPrincipalInput interface {
	pulumi.Input

	ToRoleGrantPrincipalOutput() RoleGrantPrincipalOutput
	ToRoleGrantPrincipalOutputWithContext(context.Context) RoleGrantPrincipalOutput
}

var roleGrantPrincipalPtrType = reflect.TypeOf((**RoleGrantPrincipal)(nil)).Elem()

type RoleGrantPrincipalPtrInput interface {
	pulumi.Input

	ToRoleGrantPrincipalPtrOutput() RoleGrantPrincipalPtrOutput
	ToRoleGrantPrincipalPtrOutputWithContext(context.Context) RoleGrantPrincipalPtrOutput
}

type roleGrantPrincipalPtr string

func RoleGrantPrincipalPtr(v string) RoleGrantPrincipalPtrInput {
	return (*roleGrantPrincipalPtr)(&v)
}

func (*roleGrantPrincipalPtr) ElementType() reflect.Type {
	return roleGrantPrincipalPtrType
}

func (in *roleGrantPrincipalPtr) ToRoleGrantPrincipalPtrOutput() RoleGrantPrincipalPtrOutput {
	return pulumi.ToOutput(in).(RoleGrantPrincipalPtrOutput)
}

func (in *roleGrantPrincipalPtr) ToRoleGrantPrincipalPtrOutputWithContext(ctx context.Context) RoleGrantPrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoleGrantPrincipalPtrOutput)
}

func (in *roleGrantPrincipalPtr) ToOutput(ctx context.Context) pulumix.Output[*RoleGrantPrincipal] {
	return pulumix.Output[*RoleGrantPrincipal]{
		OutputState: in.ToRoleGrantPrincipalPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of Client Cert (PEM/JKS/.. etc.)
type SslConfigClientCertType string

const (
	// Cert type unspecified.
	SslConfigClientCertTypeCertTypeUnspecified = SslConfigClientCertType("CERT_TYPE_UNSPECIFIED")
	// Privacy Enhanced Mail (PEM) Type
	SslConfigClientCertTypePem = SslConfigClientCertType("PEM")
)

func (SslConfigClientCertType) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigClientCertType)(nil)).Elem()
}

func (e SslConfigClientCertType) ToSslConfigClientCertTypeOutput() SslConfigClientCertTypeOutput {
	return pulumi.ToOutput(e).(SslConfigClientCertTypeOutput)
}

func (e SslConfigClientCertType) ToSslConfigClientCertTypeOutputWithContext(ctx context.Context) SslConfigClientCertTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigClientCertTypeOutput)
}

func (e SslConfigClientCertType) ToSslConfigClientCertTypePtrOutput() SslConfigClientCertTypePtrOutput {
	return e.ToSslConfigClientCertTypePtrOutputWithContext(context.Background())
}

func (e SslConfigClientCertType) ToSslConfigClientCertTypePtrOutputWithContext(ctx context.Context) SslConfigClientCertTypePtrOutput {
	return SslConfigClientCertType(e).ToSslConfigClientCertTypeOutputWithContext(ctx).ToSslConfigClientCertTypePtrOutputWithContext(ctx)
}

func (e SslConfigClientCertType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigClientCertType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigClientCertType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigClientCertType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigClientCertTypeOutput struct{ *pulumi.OutputState }

func (SslConfigClientCertTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigClientCertType)(nil)).Elem()
}

func (o SslConfigClientCertTypeOutput) ToSslConfigClientCertTypeOutput() SslConfigClientCertTypeOutput {
	return o
}

func (o SslConfigClientCertTypeOutput) ToSslConfigClientCertTypeOutputWithContext(ctx context.Context) SslConfigClientCertTypeOutput {
	return o
}

func (o SslConfigClientCertTypeOutput) ToSslConfigClientCertTypePtrOutput() SslConfigClientCertTypePtrOutput {
	return o.ToSslConfigClientCertTypePtrOutputWithContext(context.Background())
}

func (o SslConfigClientCertTypeOutput) ToSslConfigClientCertTypePtrOutputWithContext(ctx context.Context) SslConfigClientCertTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigClientCertType) *SslConfigClientCertType {
		return &v
	}).(SslConfigClientCertTypePtrOutput)
}

func (o SslConfigClientCertTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigClientCertTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigClientCertType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigClientCertTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigClientCertTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigClientCertType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigClientCertTypePtrOutput struct{ *pulumi.OutputState }

func (SslConfigClientCertTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigClientCertType)(nil)).Elem()
}

func (o SslConfigClientCertTypePtrOutput) ToSslConfigClientCertTypePtrOutput() SslConfigClientCertTypePtrOutput {
	return o
}

func (o SslConfigClientCertTypePtrOutput) ToSslConfigClientCertTypePtrOutputWithContext(ctx context.Context) SslConfigClientCertTypePtrOutput {
	return o
}

func (o SslConfigClientCertTypePtrOutput) Elem() SslConfigClientCertTypeOutput {
	return o.ApplyT(func(v *SslConfigClientCertType) SslConfigClientCertType {
		if v != nil {
			return *v
		}
		var ret SslConfigClientCertType
		return ret
	}).(SslConfigClientCertTypeOutput)
}

func (o SslConfigClientCertTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigClientCertTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigClientCertType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigClientCertTypeInput is an input type that accepts values of the SslConfigClientCertType enum
// A concrete instance of `SslConfigClientCertTypeInput` can be one of the following:
//
//	SslConfigClientCertTypeCertTypeUnspecified
//	SslConfigClientCertTypePem
type SslConfigClientCertTypeInput interface {
	pulumi.Input

	ToSslConfigClientCertTypeOutput() SslConfigClientCertTypeOutput
	ToSslConfigClientCertTypeOutputWithContext(context.Context) SslConfigClientCertTypeOutput
}

var sslConfigClientCertTypePtrType = reflect.TypeOf((**SslConfigClientCertType)(nil)).Elem()

type SslConfigClientCertTypePtrInput interface {
	pulumi.Input

	ToSslConfigClientCertTypePtrOutput() SslConfigClientCertTypePtrOutput
	ToSslConfigClientCertTypePtrOutputWithContext(context.Context) SslConfigClientCertTypePtrOutput
}

type sslConfigClientCertTypePtr string

func SslConfigClientCertTypePtr(v string) SslConfigClientCertTypePtrInput {
	return (*sslConfigClientCertTypePtr)(&v)
}

func (*sslConfigClientCertTypePtr) ElementType() reflect.Type {
	return sslConfigClientCertTypePtrType
}

func (in *sslConfigClientCertTypePtr) ToSslConfigClientCertTypePtrOutput() SslConfigClientCertTypePtrOutput {
	return pulumi.ToOutput(in).(SslConfigClientCertTypePtrOutput)
}

func (in *sslConfigClientCertTypePtr) ToSslConfigClientCertTypePtrOutputWithContext(ctx context.Context) SslConfigClientCertTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigClientCertTypePtrOutput)
}

func (in *sslConfigClientCertTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigClientCertType] {
	return pulumix.Output[*SslConfigClientCertType]{
		OutputState: in.ToSslConfigClientCertTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Type of Server Cert (PEM/JKS/.. etc.)
type SslConfigServerCertType string

const (
	// Cert type unspecified.
	SslConfigServerCertTypeCertTypeUnspecified = SslConfigServerCertType("CERT_TYPE_UNSPECIFIED")
	// Privacy Enhanced Mail (PEM) Type
	SslConfigServerCertTypePem = SslConfigServerCertType("PEM")
)

func (SslConfigServerCertType) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigServerCertType)(nil)).Elem()
}

func (e SslConfigServerCertType) ToSslConfigServerCertTypeOutput() SslConfigServerCertTypeOutput {
	return pulumi.ToOutput(e).(SslConfigServerCertTypeOutput)
}

func (e SslConfigServerCertType) ToSslConfigServerCertTypeOutputWithContext(ctx context.Context) SslConfigServerCertTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigServerCertTypeOutput)
}

func (e SslConfigServerCertType) ToSslConfigServerCertTypePtrOutput() SslConfigServerCertTypePtrOutput {
	return e.ToSslConfigServerCertTypePtrOutputWithContext(context.Background())
}

func (e SslConfigServerCertType) ToSslConfigServerCertTypePtrOutputWithContext(ctx context.Context) SslConfigServerCertTypePtrOutput {
	return SslConfigServerCertType(e).ToSslConfigServerCertTypeOutputWithContext(ctx).ToSslConfigServerCertTypePtrOutputWithContext(ctx)
}

func (e SslConfigServerCertType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigServerCertType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigServerCertType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigServerCertType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigServerCertTypeOutput struct{ *pulumi.OutputState }

func (SslConfigServerCertTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigServerCertType)(nil)).Elem()
}

func (o SslConfigServerCertTypeOutput) ToSslConfigServerCertTypeOutput() SslConfigServerCertTypeOutput {
	return o
}

func (o SslConfigServerCertTypeOutput) ToSslConfigServerCertTypeOutputWithContext(ctx context.Context) SslConfigServerCertTypeOutput {
	return o
}

func (o SslConfigServerCertTypeOutput) ToSslConfigServerCertTypePtrOutput() SslConfigServerCertTypePtrOutput {
	return o.ToSslConfigServerCertTypePtrOutputWithContext(context.Background())
}

func (o SslConfigServerCertTypeOutput) ToSslConfigServerCertTypePtrOutputWithContext(ctx context.Context) SslConfigServerCertTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigServerCertType) *SslConfigServerCertType {
		return &v
	}).(SslConfigServerCertTypePtrOutput)
}

func (o SslConfigServerCertTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigServerCertTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigServerCertType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigServerCertTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigServerCertTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigServerCertType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigServerCertTypePtrOutput struct{ *pulumi.OutputState }

func (SslConfigServerCertTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigServerCertType)(nil)).Elem()
}

func (o SslConfigServerCertTypePtrOutput) ToSslConfigServerCertTypePtrOutput() SslConfigServerCertTypePtrOutput {
	return o
}

func (o SslConfigServerCertTypePtrOutput) ToSslConfigServerCertTypePtrOutputWithContext(ctx context.Context) SslConfigServerCertTypePtrOutput {
	return o
}

func (o SslConfigServerCertTypePtrOutput) Elem() SslConfigServerCertTypeOutput {
	return o.ApplyT(func(v *SslConfigServerCertType) SslConfigServerCertType {
		if v != nil {
			return *v
		}
		var ret SslConfigServerCertType
		return ret
	}).(SslConfigServerCertTypeOutput)
}

func (o SslConfigServerCertTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigServerCertTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigServerCertType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigServerCertTypeInput is an input type that accepts values of the SslConfigServerCertType enum
// A concrete instance of `SslConfigServerCertTypeInput` can be one of the following:
//
//	SslConfigServerCertTypeCertTypeUnspecified
//	SslConfigServerCertTypePem
type SslConfigServerCertTypeInput interface {
	pulumi.Input

	ToSslConfigServerCertTypeOutput() SslConfigServerCertTypeOutput
	ToSslConfigServerCertTypeOutputWithContext(context.Context) SslConfigServerCertTypeOutput
}

var sslConfigServerCertTypePtrType = reflect.TypeOf((**SslConfigServerCertType)(nil)).Elem()

type SslConfigServerCertTypePtrInput interface {
	pulumi.Input

	ToSslConfigServerCertTypePtrOutput() SslConfigServerCertTypePtrOutput
	ToSslConfigServerCertTypePtrOutputWithContext(context.Context) SslConfigServerCertTypePtrOutput
}

type sslConfigServerCertTypePtr string

func SslConfigServerCertTypePtr(v string) SslConfigServerCertTypePtrInput {
	return (*sslConfigServerCertTypePtr)(&v)
}

func (*sslConfigServerCertTypePtr) ElementType() reflect.Type {
	return sslConfigServerCertTypePtrType
}

func (in *sslConfigServerCertTypePtr) ToSslConfigServerCertTypePtrOutput() SslConfigServerCertTypePtrOutput {
	return pulumi.ToOutput(in).(SslConfigServerCertTypePtrOutput)
}

func (in *sslConfigServerCertTypePtr) ToSslConfigServerCertTypePtrOutputWithContext(ctx context.Context) SslConfigServerCertTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigServerCertTypePtrOutput)
}

func (in *sslConfigServerCertTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigServerCertType] {
	return pulumix.Output[*SslConfigServerCertType]{
		OutputState: in.ToSslConfigServerCertTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Trust Model of the SSL connection
type SslConfigTrustModel string

const (
	// Public Trust Model. Takes the Default Java trust store.
	SslConfigTrustModelPublic = SslConfigTrustModel("PUBLIC")
	// Private Trust Model. Takes custom/private trust store.
	SslConfigTrustModelPrivate = SslConfigTrustModel("PRIVATE")
	// Insecure Trust Model. Accept all certificates.
	SslConfigTrustModelInsecure = SslConfigTrustModel("INSECURE")
)

func (SslConfigTrustModel) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigTrustModel)(nil)).Elem()
}

func (e SslConfigTrustModel) ToSslConfigTrustModelOutput() SslConfigTrustModelOutput {
	return pulumi.ToOutput(e).(SslConfigTrustModelOutput)
}

func (e SslConfigTrustModel) ToSslConfigTrustModelOutputWithContext(ctx context.Context) SslConfigTrustModelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigTrustModelOutput)
}

func (e SslConfigTrustModel) ToSslConfigTrustModelPtrOutput() SslConfigTrustModelPtrOutput {
	return e.ToSslConfigTrustModelPtrOutputWithContext(context.Background())
}

func (e SslConfigTrustModel) ToSslConfigTrustModelPtrOutputWithContext(ctx context.Context) SslConfigTrustModelPtrOutput {
	return SslConfigTrustModel(e).ToSslConfigTrustModelOutputWithContext(ctx).ToSslConfigTrustModelPtrOutputWithContext(ctx)
}

func (e SslConfigTrustModel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigTrustModel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigTrustModel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigTrustModel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigTrustModelOutput struct{ *pulumi.OutputState }

func (SslConfigTrustModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigTrustModel)(nil)).Elem()
}

func (o SslConfigTrustModelOutput) ToSslConfigTrustModelOutput() SslConfigTrustModelOutput {
	return o
}

func (o SslConfigTrustModelOutput) ToSslConfigTrustModelOutputWithContext(ctx context.Context) SslConfigTrustModelOutput {
	return o
}

func (o SslConfigTrustModelOutput) ToSslConfigTrustModelPtrOutput() SslConfigTrustModelPtrOutput {
	return o.ToSslConfigTrustModelPtrOutputWithContext(context.Background())
}

func (o SslConfigTrustModelOutput) ToSslConfigTrustModelPtrOutputWithContext(ctx context.Context) SslConfigTrustModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigTrustModel) *SslConfigTrustModel {
		return &v
	}).(SslConfigTrustModelPtrOutput)
}

func (o SslConfigTrustModelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigTrustModelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigTrustModel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigTrustModelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigTrustModelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigTrustModel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigTrustModelPtrOutput struct{ *pulumi.OutputState }

func (SslConfigTrustModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigTrustModel)(nil)).Elem()
}

func (o SslConfigTrustModelPtrOutput) ToSslConfigTrustModelPtrOutput() SslConfigTrustModelPtrOutput {
	return o
}

func (o SslConfigTrustModelPtrOutput) ToSslConfigTrustModelPtrOutputWithContext(ctx context.Context) SslConfigTrustModelPtrOutput {
	return o
}

func (o SslConfigTrustModelPtrOutput) Elem() SslConfigTrustModelOutput {
	return o.ApplyT(func(v *SslConfigTrustModel) SslConfigTrustModel {
		if v != nil {
			return *v
		}
		var ret SslConfigTrustModel
		return ret
	}).(SslConfigTrustModelOutput)
}

func (o SslConfigTrustModelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigTrustModelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigTrustModel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigTrustModelInput is an input type that accepts values of the SslConfigTrustModel enum
// A concrete instance of `SslConfigTrustModelInput` can be one of the following:
//
//	SslConfigTrustModelPublic
//	SslConfigTrustModelPrivate
//	SslConfigTrustModelInsecure
type SslConfigTrustModelInput interface {
	pulumi.Input

	ToSslConfigTrustModelOutput() SslConfigTrustModelOutput
	ToSslConfigTrustModelOutputWithContext(context.Context) SslConfigTrustModelOutput
}

var sslConfigTrustModelPtrType = reflect.TypeOf((**SslConfigTrustModel)(nil)).Elem()

type SslConfigTrustModelPtrInput interface {
	pulumi.Input

	ToSslConfigTrustModelPtrOutput() SslConfigTrustModelPtrOutput
	ToSslConfigTrustModelPtrOutputWithContext(context.Context) SslConfigTrustModelPtrOutput
}

type sslConfigTrustModelPtr string

func SslConfigTrustModelPtr(v string) SslConfigTrustModelPtrInput {
	return (*sslConfigTrustModelPtr)(&v)
}

func (*sslConfigTrustModelPtr) ElementType() reflect.Type {
	return sslConfigTrustModelPtrType
}

func (in *sslConfigTrustModelPtr) ToSslConfigTrustModelPtrOutput() SslConfigTrustModelPtrOutput {
	return pulumi.ToOutput(in).(SslConfigTrustModelPtrOutput)
}

func (in *sslConfigTrustModelPtr) ToSslConfigTrustModelPtrOutputWithContext(ctx context.Context) SslConfigTrustModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigTrustModelPtrOutput)
}

func (in *sslConfigTrustModelPtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigTrustModel] {
	return pulumix.Output[*SslConfigTrustModel]{
		OutputState: in.ToSslConfigTrustModelPtrOutputWithContext(ctx).OutputState,
	}
}

// Controls the ssl type for the given connector version.
type SslConfigType string

const (
	// No SSL configuration required.
	SslConfigTypeSslTypeUnspecified = SslConfigType("SSL_TYPE_UNSPECIFIED")
	// TLS Handshake
	SslConfigTypeTls = SslConfigType("TLS")
	// mutual TLS (MTLS) Handshake
	SslConfigTypeMtls = SslConfigType("MTLS")
)

func (SslConfigType) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigType)(nil)).Elem()
}

func (e SslConfigType) ToSslConfigTypeOutput() SslConfigTypeOutput {
	return pulumi.ToOutput(e).(SslConfigTypeOutput)
}

func (e SslConfigType) ToSslConfigTypeOutputWithContext(ctx context.Context) SslConfigTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigTypeOutput)
}

func (e SslConfigType) ToSslConfigTypePtrOutput() SslConfigTypePtrOutput {
	return e.ToSslConfigTypePtrOutputWithContext(context.Background())
}

func (e SslConfigType) ToSslConfigTypePtrOutputWithContext(ctx context.Context) SslConfigTypePtrOutput {
	return SslConfigType(e).ToSslConfigTypeOutputWithContext(ctx).ToSslConfigTypePtrOutputWithContext(ctx)
}

func (e SslConfigType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigTypeOutput struct{ *pulumi.OutputState }

func (SslConfigTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigType)(nil)).Elem()
}

func (o SslConfigTypeOutput) ToSslConfigTypeOutput() SslConfigTypeOutput {
	return o
}

func (o SslConfigTypeOutput) ToSslConfigTypeOutputWithContext(ctx context.Context) SslConfigTypeOutput {
	return o
}

func (o SslConfigTypeOutput) ToSslConfigTypePtrOutput() SslConfigTypePtrOutput {
	return o.ToSslConfigTypePtrOutputWithContext(context.Background())
}

func (o SslConfigTypeOutput) ToSslConfigTypePtrOutputWithContext(ctx context.Context) SslConfigTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigType) *SslConfigType {
		return &v
	}).(SslConfigTypePtrOutput)
}

func (o SslConfigTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigTypePtrOutput struct{ *pulumi.OutputState }

func (SslConfigTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigType)(nil)).Elem()
}

func (o SslConfigTypePtrOutput) ToSslConfigTypePtrOutput() SslConfigTypePtrOutput {
	return o
}

func (o SslConfigTypePtrOutput) ToSslConfigTypePtrOutputWithContext(ctx context.Context) SslConfigTypePtrOutput {
	return o
}

func (o SslConfigTypePtrOutput) Elem() SslConfigTypeOutput {
	return o.ApplyT(func(v *SslConfigType) SslConfigType {
		if v != nil {
			return *v
		}
		var ret SslConfigType
		return ret
	}).(SslConfigTypeOutput)
}

func (o SslConfigTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigTypeInput is an input type that accepts values of the SslConfigType enum
// A concrete instance of `SslConfigTypeInput` can be one of the following:
//
//	SslConfigTypeSslTypeUnspecified
//	SslConfigTypeTls
//	SslConfigTypeMtls
type SslConfigTypeInput interface {
	pulumi.Input

	ToSslConfigTypeOutput() SslConfigTypeOutput
	ToSslConfigTypeOutputWithContext(context.Context) SslConfigTypeOutput
}

var sslConfigTypePtrType = reflect.TypeOf((**SslConfigType)(nil)).Elem()

type SslConfigTypePtrInput interface {
	pulumi.Input

	ToSslConfigTypePtrOutput() SslConfigTypePtrOutput
	ToSslConfigTypePtrOutputWithContext(context.Context) SslConfigTypePtrOutput
}

type sslConfigTypePtr string

func SslConfigTypePtr(v string) SslConfigTypePtrInput {
	return (*sslConfigTypePtr)(&v)
}

func (*sslConfigTypePtr) ElementType() reflect.Type {
	return sslConfigTypePtrType
}

func (in *sslConfigTypePtr) ToSslConfigTypePtrOutput() SslConfigTypePtrOutput {
	return pulumi.ToOutput(in).(SslConfigTypePtrOutput)
}

func (in *sslConfigTypePtr) ToSslConfigTypePtrOutputWithContext(ctx context.Context) SslConfigTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigTypePtrOutput)
}

func (in *sslConfigTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigType] {
	return pulumix.Output[*SslConfigType]{
		OutputState: in.ToSslConfigTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthConfigAuthTypeInput)(nil)).Elem(), AuthConfigAuthType("AUTH_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuthConfigAuthTypePtrInput)(nil)).Elem(), AuthConfigAuthType("AUTH_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateEnumSourceInput)(nil)).Elem(), ConfigVariableTemplateEnumSource("ENUM_SOURCE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateEnumSourcePtrInput)(nil)).Elem(), ConfigVariableTemplateEnumSource("ENUM_SOURCE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateLocationTypeInput)(nil)).Elem(), ConfigVariableTemplateLocationType("LOCATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateLocationTypePtrInput)(nil)).Elem(), ConfigVariableTemplateLocationType("LOCATION_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateStateInput)(nil)).Elem(), ConfigVariableTemplateState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateStatePtrInput)(nil)).Elem(), ConfigVariableTemplateState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateValueTypeInput)(nil)).Elem(), ConfigVariableTemplateValueType("VALUE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigVariableTemplateValueTypePtrInput)(nil)).Elem(), ConfigVariableTemplateValueType("VALUE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingEnablementTypeInput)(nil)).Elem(), ConnectionEventingEnablementType("EVENTING_ENABLEMENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionEventingEnablementTypePtrInput)(nil)).Elem(), ConnectionEventingEnablementType("EVENTING_ENABLEMENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CustomConnectorCustomConnectorTypeInput)(nil)).Elem(), CustomConnectorCustomConnectorType("CUSTOM_CONNECTOR_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*CustomConnectorCustomConnectorTypePtrInput)(nil)).Elem(), CustomConnectorCustomConnectorType("CUSTOM_CONNECTOR_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionKeyTypeInput)(nil)).Elem(), EncryptionKeyType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionKeyTypePtrInput)(nil)).Elem(), EncryptionKeyType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventSubscriptionDestinationTypeInput)(nil)).Elem(), EventSubscriptionDestinationType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*EventSubscriptionDestinationTypePtrInput)(nil)).Elem(), EventSubscriptionDestinationType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FieldComparisonComparatorInput)(nil)).Elem(), FieldComparisonComparator("COMPARATOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FieldComparisonComparatorPtrInput)(nil)).Elem(), FieldComparisonComparator("COMPARATOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*JMSTypeInput)(nil)).Elem(), JMSType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*JMSTypePtrInput)(nil)).Elem(), JMSType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogicalExpressionLogicalOperatorInput)(nil)).Elem(), LogicalExpressionLogicalOperator("OPERATOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*LogicalExpressionLogicalOperatorPtrInput)(nil)).Elem(), LogicalExpressionLogicalOperator("OPERATOR_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceTypeInput)(nil)).Elem(), ResourceType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceTypePtrInput)(nil)).Elem(), ResourceType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoleGrantPrincipalInput)(nil)).Elem(), RoleGrantPrincipal("PRINCIPAL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*RoleGrantPrincipalPtrInput)(nil)).Elem(), RoleGrantPrincipal("PRINCIPAL_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigClientCertTypeInput)(nil)).Elem(), SslConfigClientCertType("CERT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigClientCertTypePtrInput)(nil)).Elem(), SslConfigClientCertType("CERT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigServerCertTypeInput)(nil)).Elem(), SslConfigServerCertType("CERT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigServerCertTypePtrInput)(nil)).Elem(), SslConfigServerCertType("CERT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigTrustModelInput)(nil)).Elem(), SslConfigTrustModel("PUBLIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigTrustModelPtrInput)(nil)).Elem(), SslConfigTrustModel("PUBLIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigTypeInput)(nil)).Elem(), SslConfigType("SSL_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigTypePtrInput)(nil)).Elem(), SslConfigType("SSL_TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(AuthConfigAuthTypeOutput{})
	pulumi.RegisterOutputType(AuthConfigAuthTypePtrOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateEnumSourceOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateEnumSourcePtrOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateLocationTypeOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateLocationTypePtrOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateStateOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateStatePtrOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateValueTypeOutput{})
	pulumi.RegisterOutputType(ConfigVariableTemplateValueTypePtrOutput{})
	pulumi.RegisterOutputType(ConnectionEventingEnablementTypeOutput{})
	pulumi.RegisterOutputType(ConnectionEventingEnablementTypePtrOutput{})
	pulumi.RegisterOutputType(CustomConnectorCustomConnectorTypeOutput{})
	pulumi.RegisterOutputType(CustomConnectorCustomConnectorTypePtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(EncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(EventSubscriptionDestinationTypeOutput{})
	pulumi.RegisterOutputType(EventSubscriptionDestinationTypePtrOutput{})
	pulumi.RegisterOutputType(FieldComparisonComparatorOutput{})
	pulumi.RegisterOutputType(FieldComparisonComparatorPtrOutput{})
	pulumi.RegisterOutputType(JMSTypeOutput{})
	pulumi.RegisterOutputType(JMSTypePtrOutput{})
	pulumi.RegisterOutputType(LogicalExpressionLogicalOperatorOutput{})
	pulumi.RegisterOutputType(LogicalExpressionLogicalOperatorPtrOutput{})
	pulumi.RegisterOutputType(ResourceTypeOutput{})
	pulumi.RegisterOutputType(ResourceTypePtrOutput{})
	pulumi.RegisterOutputType(RoleGrantPrincipalOutput{})
	pulumi.RegisterOutputType(RoleGrantPrincipalPtrOutput{})
	pulumi.RegisterOutputType(SslConfigClientCertTypeOutput{})
	pulumi.RegisterOutputType(SslConfigClientCertTypePtrOutput{})
	pulumi.RegisterOutputType(SslConfigServerCertTypeOutput{})
	pulumi.RegisterOutputType(SslConfigServerCertTypePtrOutput{})
	pulumi.RegisterOutputType(SslConfigTrustModelOutput{})
	pulumi.RegisterOutputType(SslConfigTrustModelPtrOutput{})
	pulumi.RegisterOutputType(SslConfigTypeOutput{})
	pulumi.RegisterOutputType(SslConfigTypePtrOutput{})
}
