// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new CustomConnectorVersion in a given project and location.
// Auto-naming is currently not supported for this resource.
type CustomConnectorVersion struct {
	pulumi.CustomResourceState

	// Configuration for establishing the authentication to the connector destination.
	AuthConfig AuthConfigResponseOutput `pulumi:"authConfig"`
	// Created time.
	CreateTime        pulumi.StringOutput `pulumi:"createTime"`
	CustomConnectorId pulumi.StringOutput `pulumi:"customConnectorId"`
	// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
	CustomConnectorVersionId pulumi.StringOutput `pulumi:"customConnectorVersionId"`
	// Configuration of the customConnector's destination.
	DestinationConfig DestinationConfigResponseOutput `pulumi:"destinationConfig"`
	// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
	EnableBackendDestinationConfig pulumi.BoolOutput `pulumi:"enableBackendDestinationConfig"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Service account needed for runtime plane to access Custom Connector secrets.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Optional. Location of the custom connector spec.
	SpecLocation pulumi.StringOutput `pulumi:"specLocation"`
	// Updated time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomConnectorVersion registers a new resource with the given unique name, arguments, and options.
func NewCustomConnectorVersion(ctx *pulumi.Context,
	name string, args *CustomConnectorVersionArgs, opts ...pulumi.ResourceOption) (*CustomConnectorVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthConfig == nil {
		return nil, errors.New("invalid value for required argument 'AuthConfig'")
	}
	if args.CustomConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'CustomConnectorId'")
	}
	if args.CustomConnectorVersionId == nil {
		return nil, errors.New("invalid value for required argument 'CustomConnectorVersionId'")
	}
	if args.DestinationConfig == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfig'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"customConnectorId",
		"customConnectorVersionId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomConnectorVersion
	err := ctx.RegisterResource("google-native:connectors/v1:CustomConnectorVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomConnectorVersion gets an existing CustomConnectorVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomConnectorVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomConnectorVersionState, opts ...pulumi.ResourceOption) (*CustomConnectorVersion, error) {
	var resource CustomConnectorVersion
	err := ctx.ReadResource("google-native:connectors/v1:CustomConnectorVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomConnectorVersion resources.
type customConnectorVersionState struct {
}

type CustomConnectorVersionState struct {
}

func (CustomConnectorVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*customConnectorVersionState)(nil)).Elem()
}

type customConnectorVersionArgs struct {
	// Configuration for establishing the authentication to the connector destination.
	AuthConfig        AuthConfig `pulumi:"authConfig"`
	CustomConnectorId string     `pulumi:"customConnectorId"`
	// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
	CustomConnectorVersionId string `pulumi:"customConnectorVersionId"`
	// Configuration of the customConnector's destination.
	DestinationConfig DestinationConfig `pulumi:"destinationConfig"`
	// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
	EnableBackendDestinationConfig *bool `pulumi:"enableBackendDestinationConfig"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels  map[string]string `pulumi:"labels"`
	Project *string           `pulumi:"project"`
	// Service account needed for runtime plane to access Custom Connector secrets.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Optional. Location of the custom connector spec.
	SpecLocation *string `pulumi:"specLocation"`
}

// The set of arguments for constructing a CustomConnectorVersion resource.
type CustomConnectorVersionArgs struct {
	// Configuration for establishing the authentication to the connector destination.
	AuthConfig        AuthConfigInput
	CustomConnectorId pulumi.StringInput
	// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
	CustomConnectorVersionId pulumi.StringInput
	// Configuration of the customConnector's destination.
	DestinationConfig DestinationConfigInput
	// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
	EnableBackendDestinationConfig pulumi.BoolPtrInput
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels  pulumi.StringMapInput
	Project pulumi.StringPtrInput
	// Service account needed for runtime plane to access Custom Connector secrets.
	ServiceAccount pulumi.StringInput
	// Optional. Location of the custom connector spec.
	SpecLocation pulumi.StringPtrInput
}

func (CustomConnectorVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customConnectorVersionArgs)(nil)).Elem()
}

type CustomConnectorVersionInput interface {
	pulumi.Input

	ToCustomConnectorVersionOutput() CustomConnectorVersionOutput
	ToCustomConnectorVersionOutputWithContext(ctx context.Context) CustomConnectorVersionOutput
}

func (*CustomConnectorVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomConnectorVersion)(nil)).Elem()
}

func (i *CustomConnectorVersion) ToCustomConnectorVersionOutput() CustomConnectorVersionOutput {
	return i.ToCustomConnectorVersionOutputWithContext(context.Background())
}

func (i *CustomConnectorVersion) ToCustomConnectorVersionOutputWithContext(ctx context.Context) CustomConnectorVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomConnectorVersionOutput)
}

type CustomConnectorVersionOutput struct{ *pulumi.OutputState }

func (CustomConnectorVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomConnectorVersion)(nil)).Elem()
}

func (o CustomConnectorVersionOutput) ToCustomConnectorVersionOutput() CustomConnectorVersionOutput {
	return o
}

func (o CustomConnectorVersionOutput) ToCustomConnectorVersionOutputWithContext(ctx context.Context) CustomConnectorVersionOutput {
	return o
}

// Configuration for establishing the authentication to the connector destination.
func (o CustomConnectorVersionOutput) AuthConfig() AuthConfigResponseOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) AuthConfigResponseOutput { return v.AuthConfig }).(AuthConfigResponseOutput)
}

// Created time.
func (o CustomConnectorVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o CustomConnectorVersionOutput) CustomConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.CustomConnectorId }).(pulumi.StringOutput)
}

// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
func (o CustomConnectorVersionOutput) CustomConnectorVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.CustomConnectorVersionId }).(pulumi.StringOutput)
}

// Configuration of the customConnector's destination.
func (o CustomConnectorVersionOutput) DestinationConfig() DestinationConfigResponseOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) DestinationConfigResponseOutput { return v.DestinationConfig }).(DestinationConfigResponseOutput)
}

// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
func (o CustomConnectorVersionOutput) EnableBackendDestinationConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.BoolOutput { return v.EnableBackendDestinationConfig }).(pulumi.BoolOutput)
}

// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
func (o CustomConnectorVersionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
func (o CustomConnectorVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CustomConnectorVersionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Service account needed for runtime plane to access Custom Connector secrets.
func (o CustomConnectorVersionOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Optional. Location of the custom connector spec.
func (o CustomConnectorVersionOutput) SpecLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.SpecLocation }).(pulumi.StringOutput)
}

// Updated time.
func (o CustomConnectorVersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomConnectorVersion) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomConnectorVersionInput)(nil)).Elem(), &CustomConnectorVersion{})
	pulumi.RegisterOutputType(CustomConnectorVersionOutput{})
}
