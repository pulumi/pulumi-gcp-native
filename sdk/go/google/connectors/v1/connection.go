// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new Connection in a given project and location.
// Auto-naming is currently not supported for this resource.
type Connection struct {
	pulumi.CustomResourceState

	// Optional. Configuration for establishing the connection's authentication with an external system.
	AuthConfig AuthConfigResponseOutput `pulumi:"authConfig"`
	// Optional. Configuration for configuring the connection with an external system.
	ConfigVariables ConfigVariableResponseArrayOutput `pulumi:"configVariables"`
	// Connector version on which the connection is created. The format is: projects/*/locations/global/providers/*/connectors/*/versions/*
	ConnectorVersion pulumi.StringOutput `pulumi:"connectorVersion"`
	// Created time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Description of the resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Outbound domains/hosts needs to be allowlisted.
	EgressBackends pulumi.StringArrayOutput `pulumi:"egressBackends"`
	// GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}
	EnvoyImageLocation pulumi.StringOutput `pulumi:"envoyImageLocation"`
	// GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}
	ImageLocation pulumi.StringOutput `pulumi:"imageLocation"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Optional. Configuration that indicates whether or not the Connection can be edited.
	LockConfig LockConfigResponseOutput `pulumi:"lockConfig"`
	// Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional. Service account needed for runtime plane to access GCP resources.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
	ServiceDirectory pulumi.StringOutput `pulumi:"serviceDirectory"`
	// Current status of the connection.
	Status ConnectionStatusResponseOutput `pulumi:"status"`
	// Optional. Suspended indicates if a user has suspended a connection or not.
	Suspended pulumi.BoolOutput `pulumi:"suspended"`
	// Updated time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.ConnectorVersion == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorVersion'")
	}
	var resource Connection
	err := ctx.RegisterResource("google-native:connectors/v1:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("google-native:connectors/v1:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
}

type ConnectionState struct {
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// Optional. Configuration for establishing the connection's authentication with an external system.
	AuthConfig *AuthConfig `pulumi:"authConfig"`
	// Optional. Configuration for configuring the connection with an external system.
	ConfigVariables []ConfigVariable `pulumi:"configVariables"`
	// Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.
	ConnectionId string `pulumi:"connectionId"`
	// Connector version on which the connection is created. The format is: projects/*/locations/global/providers/*/connectors/*/versions/*
	ConnectorVersion string `pulumi:"connectorVersion"`
	// Optional. Description of the resource.
	Description *string `pulumi:"description"`
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Optional. Configuration that indicates whether or not the Connection can be edited.
	LockConfig *LockConfig `pulumi:"lockConfig"`
	Project    *string     `pulumi:"project"`
	// Optional. Service account needed for runtime plane to access GCP resources.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Optional. Suspended indicates if a user has suspended a connection or not.
	Suspended *bool `pulumi:"suspended"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// Optional. Configuration for establishing the connection's authentication with an external system.
	AuthConfig AuthConfigPtrInput
	// Optional. Configuration for configuring the connection with an external system.
	ConfigVariables ConfigVariableArrayInput
	// Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.
	ConnectionId pulumi.StringInput
	// Connector version on which the connection is created. The format is: projects/*/locations/global/providers/*/connectors/*/versions/*
	ConnectorVersion pulumi.StringInput
	// Optional. Description of the resource.
	Description pulumi.StringPtrInput
	// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Optional. Configuration that indicates whether or not the Connection can be edited.
	LockConfig LockConfigPtrInput
	Project    pulumi.StringPtrInput
	// Optional. Service account needed for runtime plane to access GCP resources.
	ServiceAccount pulumi.StringPtrInput
	// Optional. Suspended indicates if a user has suspended a connection or not.
	Suspended pulumi.BoolPtrInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionInput interface {
	pulumi.Input

	ToConnectionOutput() ConnectionOutput
	ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput
}

func (*Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (i *Connection) ToConnectionOutput() ConnectionOutput {
	return i.ToConnectionOutputWithContext(context.Background())
}

func (i *Connection) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOutput)
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionInput)(nil)).Elem(), &Connection{})
	pulumi.RegisterOutputType(ConnectionOutput{})
}
