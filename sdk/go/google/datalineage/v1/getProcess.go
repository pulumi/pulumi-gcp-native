// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of the specified process.
func LookupProcess(ctx *pulumi.Context, args *LookupProcessArgs, opts ...pulumi.InvokeOption) (*LookupProcessResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProcessResult
	err := ctx.Invoke("google-native:datalineage/v1:getProcess", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProcessArgs struct {
	Location  string  `pulumi:"location"`
	ProcessId string  `pulumi:"processId"`
	Project   *string `pulumi:"project"`
}

type LookupProcessResult struct {
	// Optional. The attributes of the process. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the process). Up to 100 attributes are allowed.
	Attributes map[string]interface{} `pulumi:"attributes"`
	// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 200 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
	DisplayName string `pulumi:"displayName"`
	// Immutable. The resource name of the lineage process. Format: `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned. {process} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
	Name string `pulumi:"name"`
	// Optional. The origin of this process and its runs and lineage events.
	Origin GoogleCloudDatacatalogLineageV1OriginResponse `pulumi:"origin"`
}

func LookupProcessOutput(ctx *pulumi.Context, args LookupProcessOutputArgs, opts ...pulumi.InvokeOption) LookupProcessResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProcessResult, error) {
			args := v.(LookupProcessArgs)
			r, err := LookupProcess(ctx, &args, opts...)
			var s LookupProcessResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProcessResultOutput)
}

type LookupProcessOutputArgs struct {
	Location  pulumi.StringInput    `pulumi:"location"`
	ProcessId pulumi.StringInput    `pulumi:"processId"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupProcessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessArgs)(nil)).Elem()
}

type LookupProcessResultOutput struct{ *pulumi.OutputState }

func (LookupProcessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProcessResult)(nil)).Elem()
}

func (o LookupProcessResultOutput) ToLookupProcessResultOutput() LookupProcessResultOutput {
	return o
}

func (o LookupProcessResultOutput) ToLookupProcessResultOutputWithContext(ctx context.Context) LookupProcessResultOutput {
	return o
}

// Optional. The attributes of the process. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the process). Up to 100 attributes are allowed.
func (o LookupProcessResultOutput) Attributes() pulumi.MapOutput {
	return o.ApplyT(func(v LookupProcessResult) map[string]interface{} { return v.Attributes }).(pulumi.MapOutput)
}

// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 200 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
func (o LookupProcessResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Immutable. The resource name of the lineage process. Format: `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned. {process} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
func (o LookupProcessResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProcessResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. The origin of this process and its runs and lineage events.
func (o LookupProcessResultOutput) Origin() GoogleCloudDatacatalogLineageV1OriginResponseOutput {
	return o.ApplyT(func(v LookupProcessResult) GoogleCloudDatacatalogLineageV1OriginResponse { return v.Origin }).(GoogleCloudDatacatalogLineageV1OriginResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProcessResultOutput{})
}
