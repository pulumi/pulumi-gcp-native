// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new run.
type Run struct {
	pulumi.CustomResourceState

	// Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
	Attributes pulumi.MapOutput `pulumi:"attributes"`
	// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. The timestamp of the end of the run.
	EndTime  pulumi.StringOutput `pulumi:"endTime"`
	Location pulumi.StringOutput `pulumi:"location"`
	// Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
	Name      pulumi.StringOutput `pulumi:"name"`
	ProcessId pulumi.StringOutput `pulumi:"processId"`
	Project   pulumi.StringOutput `pulumi:"project"`
	// A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The timestamp of the start of the run.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The state of the run.
	State pulumi.StringOutput `pulumi:"state"`
}

// NewRun registers a new resource with the given unique name, arguments, and options.
func NewRun(ctx *pulumi.Context,
	name string, args *RunArgs, opts ...pulumi.ResourceOption) (*Run, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProcessId == nil {
		return nil, errors.New("invalid value for required argument 'ProcessId'")
	}
	if args.StartTime == nil {
		return nil, errors.New("invalid value for required argument 'StartTime'")
	}
	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"processId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Run
	err := ctx.RegisterResource("google-native:datalineage/v1:Run", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRun gets an existing Run resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRun(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunState, opts ...pulumi.ResourceOption) (*Run, error) {
	var resource Run
	err := ctx.ReadResource("google-native:datalineage/v1:Run", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Run resources.
type runState struct {
}

type RunState struct {
}

func (RunState) ElementType() reflect.Type {
	return reflect.TypeOf((*runState)(nil)).Elem()
}

type runArgs struct {
	// Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
	Attributes map[string]interface{} `pulumi:"attributes"`
	// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
	DisplayName *string `pulumi:"displayName"`
	// Optional. The timestamp of the end of the run.
	EndTime  *string `pulumi:"endTime"`
	Location *string `pulumi:"location"`
	// Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
	Name      *string `pulumi:"name"`
	ProcessId string  `pulumi:"processId"`
	Project   *string `pulumi:"project"`
	// A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
	RequestId *string `pulumi:"requestId"`
	// The timestamp of the start of the run.
	StartTime string `pulumi:"startTime"`
	// The state of the run.
	State RunStateEnum `pulumi:"state"`
}

// The set of arguments for constructing a Run resource.
type RunArgs struct {
	// Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
	Attributes pulumi.MapInput
	// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
	DisplayName pulumi.StringPtrInput
	// Optional. The timestamp of the end of the run.
	EndTime  pulumi.StringPtrInput
	Location pulumi.StringPtrInput
	// Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
	Name      pulumi.StringPtrInput
	ProcessId pulumi.StringInput
	Project   pulumi.StringPtrInput
	// A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
	RequestId pulumi.StringPtrInput
	// The timestamp of the start of the run.
	StartTime pulumi.StringInput
	// The state of the run.
	State RunStateEnumInput
}

func (RunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runArgs)(nil)).Elem()
}

type RunInput interface {
	pulumi.Input

	ToRunOutput() RunOutput
	ToRunOutputWithContext(ctx context.Context) RunOutput
}

func (*Run) ElementType() reflect.Type {
	return reflect.TypeOf((**Run)(nil)).Elem()
}

func (i *Run) ToRunOutput() RunOutput {
	return i.ToRunOutputWithContext(context.Background())
}

func (i *Run) ToRunOutputWithContext(ctx context.Context) RunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunOutput)
}

type RunOutput struct{ *pulumi.OutputState }

func (RunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Run)(nil)).Elem()
}

func (o RunOutput) ToRunOutput() RunOutput {
	return o
}

func (o RunOutput) ToRunOutputWithContext(ctx context.Context) RunOutput {
	return o
}

// Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
func (o RunOutput) Attributes() pulumi.MapOutput {
	return o.ApplyT(func(v *Run) pulumi.MapOutput { return v.Attributes }).(pulumi.MapOutput)
}

// Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
func (o RunOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. The timestamp of the end of the run.
func (o RunOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

func (o RunOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
func (o RunOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RunOutput) ProcessId() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.ProcessId }).(pulumi.StringOutput)
}

func (o RunOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
func (o RunOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Run) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The timestamp of the start of the run.
func (o RunOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The state of the run.
func (o RunOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Run) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RunInput)(nil)).Elem(), &Run{})
	pulumi.RegisterOutputType(RunOutput{})
}
