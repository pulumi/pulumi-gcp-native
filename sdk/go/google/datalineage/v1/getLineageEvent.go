// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a specified lineage event.
func LookupLineageEvent(ctx *pulumi.Context, args *LookupLineageEventArgs, opts ...pulumi.InvokeOption) (*LookupLineageEventResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLineageEventResult
	err := ctx.Invoke("google-native:datalineage/v1:getLineageEvent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLineageEventArgs struct {
	LineageEventId string  `pulumi:"lineageEventId"`
	Location       string  `pulumi:"location"`
	ProcessId      string  `pulumi:"processId"`
	Project        *string `pulumi:"project"`
	RunId          string  `pulumi:"runId"`
}

type LookupLineageEventResult struct {
	// Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.
	EndTime string `pulumi:"endTime"`
	// Optional. List of source-target pairs. Can't contain more than 100 tuples.
	Links []GoogleCloudDatacatalogLineageV1EventLinkResponse `pulumi:"links"`
	// Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
	Name string `pulumi:"name"`
	// The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.
	StartTime string `pulumi:"startTime"`
}

func LookupLineageEventOutput(ctx *pulumi.Context, args LookupLineageEventOutputArgs, opts ...pulumi.InvokeOption) LookupLineageEventResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLineageEventResult, error) {
			args := v.(LookupLineageEventArgs)
			r, err := LookupLineageEvent(ctx, &args, opts...)
			var s LookupLineageEventResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLineageEventResultOutput)
}

type LookupLineageEventOutputArgs struct {
	LineageEventId pulumi.StringInput    `pulumi:"lineageEventId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	ProcessId      pulumi.StringInput    `pulumi:"processId"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
	RunId          pulumi.StringInput    `pulumi:"runId"`
}

func (LookupLineageEventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLineageEventArgs)(nil)).Elem()
}

type LookupLineageEventResultOutput struct{ *pulumi.OutputState }

func (LookupLineageEventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLineageEventResult)(nil)).Elem()
}

func (o LookupLineageEventResultOutput) ToLookupLineageEventResultOutput() LookupLineageEventResultOutput {
	return o
}

func (o LookupLineageEventResultOutput) ToLookupLineageEventResultOutputWithContext(ctx context.Context) LookupLineageEventResultOutput {
	return o
}

func (o LookupLineageEventResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLineageEventResult] {
	return pulumix.Output[LookupLineageEventResult]{
		OutputState: o.OutputState,
	}
}

// Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.
func (o LookupLineageEventResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLineageEventResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// Optional. List of source-target pairs. Can't contain more than 100 tuples.
func (o LookupLineageEventResultOutput) Links() GoogleCloudDatacatalogLineageV1EventLinkResponseArrayOutput {
	return o.ApplyT(func(v LookupLineageEventResult) []GoogleCloudDatacatalogLineageV1EventLinkResponse { return v.Links }).(GoogleCloudDatacatalogLineageV1EventLinkResponseArrayOutput)
}

// Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
func (o LookupLineageEventResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLineageEventResult) string { return v.Name }).(pulumi.StringOutput)
}

// The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.
func (o LookupLineageEventResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLineageEventResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLineageEventResultOutput{})
}
