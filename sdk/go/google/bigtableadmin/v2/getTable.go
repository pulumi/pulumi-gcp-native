// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets metadata information about the specified table.
func LookupTable(ctx *pulumi.Context, args *LookupTableArgs, opts ...pulumi.InvokeOption) (*LookupTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTableResult
	err := ctx.Invoke("google-native:bigtableadmin/v2:getTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTableArgs struct {
	InstanceId string  `pulumi:"instanceId"`
	Project    *string `pulumi:"project"`
	TableId    string  `pulumi:"tableId"`
	View       *string `pulumi:"view"`
}

type LookupTableResult struct {
	// If specified, enable the change stream on this table. Otherwise, the change stream is disabled and the change stream is not retained.
	ChangeStreamConfig ChangeStreamConfigResponse `pulumi:"changeStreamConfig"`
	// Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
	ClusterStates ClusterStateResponse `pulumi:"clusterStates"`
	// The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
	ColumnFamilies ColumnFamilyResponse `pulumi:"columnFamilies"`
	// Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
	Granularity string `pulumi:"granularity"`
	// The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
	Name string `pulumi:"name"`
	// If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.
	RestoreInfo RestoreInfoResponse `pulumi:"restoreInfo"`
	// Only available with STATS_VIEW, this includes summary statistics about the entire table contents. For statistics about a specific column family, see ColumnFamilyStats in the mapped ColumnFamily collection above.
	Stats TableStatsResponse `pulumi:"stats"`
}

func LookupTableOutput(ctx *pulumi.Context, args LookupTableOutputArgs, opts ...pulumi.InvokeOption) LookupTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTableResult, error) {
			args := v.(LookupTableArgs)
			r, err := LookupTable(ctx, &args, opts...)
			var s LookupTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTableResultOutput)
}

type LookupTableOutputArgs struct {
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	TableId    pulumi.StringInput    `pulumi:"tableId"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (LookupTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableArgs)(nil)).Elem()
}

type LookupTableResultOutput struct{ *pulumi.OutputState }

func (LookupTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableResult)(nil)).Elem()
}

func (o LookupTableResultOutput) ToLookupTableResultOutput() LookupTableResultOutput {
	return o
}

func (o LookupTableResultOutput) ToLookupTableResultOutputWithContext(ctx context.Context) LookupTableResultOutput {
	return o
}

// If specified, enable the change stream on this table. Otherwise, the change stream is disabled and the change stream is not retained.
func (o LookupTableResultOutput) ChangeStreamConfig() ChangeStreamConfigResponseOutput {
	return o.ApplyT(func(v LookupTableResult) ChangeStreamConfigResponse { return v.ChangeStreamConfig }).(ChangeStreamConfigResponseOutput)
}

// Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
func (o LookupTableResultOutput) ClusterStates() ClusterStateResponseOutput {
	return o.ApplyT(func(v LookupTableResult) ClusterStateResponse { return v.ClusterStates }).(ClusterStateResponseOutput)
}

// The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`
func (o LookupTableResultOutput) ColumnFamilies() ColumnFamilyResponseOutput {
	return o.ApplyT(func(v LookupTableResult) ColumnFamilyResponse { return v.ColumnFamilies }).(ColumnFamilyResponseOutput)
}

// Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: * The table. * The column families in the table. * The instance containing the table. Note one can still delete the data stored in the table through Data APIs.
func (o LookupTableResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTableResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.
func (o LookupTableResultOutput) Granularity() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.Granularity }).(pulumi.StringOutput)
}

// The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`
func (o LookupTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.Name }).(pulumi.StringOutput)
}

// If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.
func (o LookupTableResultOutput) RestoreInfo() RestoreInfoResponseOutput {
	return o.ApplyT(func(v LookupTableResult) RestoreInfoResponse { return v.RestoreInfo }).(RestoreInfoResponseOutput)
}

// Only available with STATS_VIEW, this includes summary statistics about the entire table contents. For statistics about a specific column family, see ColumnFamilyStats in the mapped ColumnFamily collection above.
func (o LookupTableResultOutput) Stats() TableStatsResponseOutput {
	return o.ApplyT(func(v LookupTableResult) TableStatsResponse { return v.Stats }).(TableStatsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTableResultOutput{})
}
