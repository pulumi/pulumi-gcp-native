// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
type ComputeEnginePreferencesLicenseType string

const (
	// Unspecified (default value).
	ComputeEnginePreferencesLicenseTypeLicenseTypeUnspecified = ComputeEnginePreferencesLicenseType("LICENSE_TYPE_UNSPECIFIED")
	// Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.
	ComputeEnginePreferencesLicenseTypeLicenseTypeDefault = ComputeEnginePreferencesLicenseType("LICENSE_TYPE_DEFAULT")
	// Bring-your-own-license (BYOL) plan. User provides the OS license.
	ComputeEnginePreferencesLicenseTypeLicenseTypeBringYourOwnLicense = ComputeEnginePreferencesLicenseType("LICENSE_TYPE_BRING_YOUR_OWN_LICENSE")
)

func (ComputeEnginePreferencesLicenseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnginePreferencesLicenseType)(nil)).Elem()
}

func (e ComputeEnginePreferencesLicenseType) ToComputeEnginePreferencesLicenseTypeOutput() ComputeEnginePreferencesLicenseTypeOutput {
	return pulumi.ToOutput(e).(ComputeEnginePreferencesLicenseTypeOutput)
}

func (e ComputeEnginePreferencesLicenseType) ToComputeEnginePreferencesLicenseTypeOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeEnginePreferencesLicenseTypeOutput)
}

func (e ComputeEnginePreferencesLicenseType) ToComputeEnginePreferencesLicenseTypePtrOutput() ComputeEnginePreferencesLicenseTypePtrOutput {
	return e.ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(context.Background())
}

func (e ComputeEnginePreferencesLicenseType) ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypePtrOutput {
	return ComputeEnginePreferencesLicenseType(e).ToComputeEnginePreferencesLicenseTypeOutputWithContext(ctx).ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(ctx)
}

func (e ComputeEnginePreferencesLicenseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeEnginePreferencesLicenseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeEnginePreferencesLicenseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeEnginePreferencesLicenseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeEnginePreferencesLicenseTypeOutput struct{ *pulumi.OutputState }

func (ComputeEnginePreferencesLicenseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnginePreferencesLicenseType)(nil)).Elem()
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToComputeEnginePreferencesLicenseTypeOutput() ComputeEnginePreferencesLicenseTypeOutput {
	return o
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToComputeEnginePreferencesLicenseTypeOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypeOutput {
	return o
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToComputeEnginePreferencesLicenseTypePtrOutput() ComputeEnginePreferencesLicenseTypePtrOutput {
	return o.ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnginePreferencesLicenseType) *ComputeEnginePreferencesLicenseType {
		return &v
	}).(ComputeEnginePreferencesLicenseTypePtrOutput)
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeEnginePreferencesLicenseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesLicenseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeEnginePreferencesLicenseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeEnginePreferencesLicenseTypePtrOutput struct{ *pulumi.OutputState }

func (ComputeEnginePreferencesLicenseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnginePreferencesLicenseType)(nil)).Elem()
}

func (o ComputeEnginePreferencesLicenseTypePtrOutput) ToComputeEnginePreferencesLicenseTypePtrOutput() ComputeEnginePreferencesLicenseTypePtrOutput {
	return o
}

func (o ComputeEnginePreferencesLicenseTypePtrOutput) ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypePtrOutput {
	return o
}

func (o ComputeEnginePreferencesLicenseTypePtrOutput) Elem() ComputeEnginePreferencesLicenseTypeOutput {
	return o.ApplyT(func(v *ComputeEnginePreferencesLicenseType) ComputeEnginePreferencesLicenseType {
		if v != nil {
			return *v
		}
		var ret ComputeEnginePreferencesLicenseType
		return ret
	}).(ComputeEnginePreferencesLicenseTypeOutput)
}

func (o ComputeEnginePreferencesLicenseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesLicenseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeEnginePreferencesLicenseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeEnginePreferencesLicenseTypeInput is an input type that accepts ComputeEnginePreferencesLicenseTypeArgs and ComputeEnginePreferencesLicenseTypeOutput values.
// You can construct a concrete instance of `ComputeEnginePreferencesLicenseTypeInput` via:
//
//	ComputeEnginePreferencesLicenseTypeArgs{...}
type ComputeEnginePreferencesLicenseTypeInput interface {
	pulumi.Input

	ToComputeEnginePreferencesLicenseTypeOutput() ComputeEnginePreferencesLicenseTypeOutput
	ToComputeEnginePreferencesLicenseTypeOutputWithContext(context.Context) ComputeEnginePreferencesLicenseTypeOutput
}

var computeEnginePreferencesLicenseTypePtrType = reflect.TypeOf((**ComputeEnginePreferencesLicenseType)(nil)).Elem()

type ComputeEnginePreferencesLicenseTypePtrInput interface {
	pulumi.Input

	ToComputeEnginePreferencesLicenseTypePtrOutput() ComputeEnginePreferencesLicenseTypePtrOutput
	ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(context.Context) ComputeEnginePreferencesLicenseTypePtrOutput
}

type computeEnginePreferencesLicenseTypePtr string

func ComputeEnginePreferencesLicenseTypePtr(v string) ComputeEnginePreferencesLicenseTypePtrInput {
	return (*computeEnginePreferencesLicenseTypePtr)(&v)
}

func (*computeEnginePreferencesLicenseTypePtr) ElementType() reflect.Type {
	return computeEnginePreferencesLicenseTypePtrType
}

func (in *computeEnginePreferencesLicenseTypePtr) ToComputeEnginePreferencesLicenseTypePtrOutput() ComputeEnginePreferencesLicenseTypePtrOutput {
	return pulumi.ToOutput(in).(ComputeEnginePreferencesLicenseTypePtrOutput)
}

func (in *computeEnginePreferencesLicenseTypePtr) ToComputeEnginePreferencesLicenseTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesLicenseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeEnginePreferencesLicenseTypePtrOutput)
}

// Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
type ComputeEnginePreferencesPersistentDiskType string

const (
	// Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
	ComputeEnginePreferencesPersistentDiskTypePersistentDiskTypeUnspecified = ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_UNSPECIFIED")
	// Standard HDD Persistent Disk.
	ComputeEnginePreferencesPersistentDiskTypePersistentDiskTypeStandard = ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_STANDARD")
	// Balanced Persistent Disk.
	ComputeEnginePreferencesPersistentDiskTypePersistentDiskTypeBalanced = ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_BALANCED")
	// SSD Persistent Disk.
	ComputeEnginePreferencesPersistentDiskTypePersistentDiskTypeSsd = ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_SSD")
)

func (ComputeEnginePreferencesPersistentDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnginePreferencesPersistentDiskType)(nil)).Elem()
}

func (e ComputeEnginePreferencesPersistentDiskType) ToComputeEnginePreferencesPersistentDiskTypeOutput() ComputeEnginePreferencesPersistentDiskTypeOutput {
	return pulumi.ToOutput(e).(ComputeEnginePreferencesPersistentDiskTypeOutput)
}

func (e ComputeEnginePreferencesPersistentDiskType) ToComputeEnginePreferencesPersistentDiskTypeOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeEnginePreferencesPersistentDiskTypeOutput)
}

func (e ComputeEnginePreferencesPersistentDiskType) ToComputeEnginePreferencesPersistentDiskTypePtrOutput() ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return e.ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(context.Background())
}

func (e ComputeEnginePreferencesPersistentDiskType) ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return ComputeEnginePreferencesPersistentDiskType(e).ToComputeEnginePreferencesPersistentDiskTypeOutputWithContext(ctx).ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(ctx)
}

func (e ComputeEnginePreferencesPersistentDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeEnginePreferencesPersistentDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeEnginePreferencesPersistentDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeEnginePreferencesPersistentDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeEnginePreferencesPersistentDiskTypeOutput struct{ *pulumi.OutputState }

func (ComputeEnginePreferencesPersistentDiskTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeEnginePreferencesPersistentDiskType)(nil)).Elem()
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToComputeEnginePreferencesPersistentDiskTypeOutput() ComputeEnginePreferencesPersistentDiskTypeOutput {
	return o
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToComputeEnginePreferencesPersistentDiskTypeOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypeOutput {
	return o
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToComputeEnginePreferencesPersistentDiskTypePtrOutput() ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return o.ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeEnginePreferencesPersistentDiskType) *ComputeEnginePreferencesPersistentDiskType {
		return &v
	}).(ComputeEnginePreferencesPersistentDiskTypePtrOutput)
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeEnginePreferencesPersistentDiskType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesPersistentDiskTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeEnginePreferencesPersistentDiskType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeEnginePreferencesPersistentDiskTypePtrOutput struct{ *pulumi.OutputState }

func (ComputeEnginePreferencesPersistentDiskTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeEnginePreferencesPersistentDiskType)(nil)).Elem()
}

func (o ComputeEnginePreferencesPersistentDiskTypePtrOutput) ToComputeEnginePreferencesPersistentDiskTypePtrOutput() ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return o
}

func (o ComputeEnginePreferencesPersistentDiskTypePtrOutput) ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return o
}

func (o ComputeEnginePreferencesPersistentDiskTypePtrOutput) Elem() ComputeEnginePreferencesPersistentDiskTypeOutput {
	return o.ApplyT(func(v *ComputeEnginePreferencesPersistentDiskType) ComputeEnginePreferencesPersistentDiskType {
		if v != nil {
			return *v
		}
		var ret ComputeEnginePreferencesPersistentDiskType
		return ret
	}).(ComputeEnginePreferencesPersistentDiskTypeOutput)
}

func (o ComputeEnginePreferencesPersistentDiskTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeEnginePreferencesPersistentDiskTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeEnginePreferencesPersistentDiskType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeEnginePreferencesPersistentDiskTypeInput is an input type that accepts ComputeEnginePreferencesPersistentDiskTypeArgs and ComputeEnginePreferencesPersistentDiskTypeOutput values.
// You can construct a concrete instance of `ComputeEnginePreferencesPersistentDiskTypeInput` via:
//
//	ComputeEnginePreferencesPersistentDiskTypeArgs{...}
type ComputeEnginePreferencesPersistentDiskTypeInput interface {
	pulumi.Input

	ToComputeEnginePreferencesPersistentDiskTypeOutput() ComputeEnginePreferencesPersistentDiskTypeOutput
	ToComputeEnginePreferencesPersistentDiskTypeOutputWithContext(context.Context) ComputeEnginePreferencesPersistentDiskTypeOutput
}

var computeEnginePreferencesPersistentDiskTypePtrType = reflect.TypeOf((**ComputeEnginePreferencesPersistentDiskType)(nil)).Elem()

type ComputeEnginePreferencesPersistentDiskTypePtrInput interface {
	pulumi.Input

	ToComputeEnginePreferencesPersistentDiskTypePtrOutput() ComputeEnginePreferencesPersistentDiskTypePtrOutput
	ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(context.Context) ComputeEnginePreferencesPersistentDiskTypePtrOutput
}

type computeEnginePreferencesPersistentDiskTypePtr string

func ComputeEnginePreferencesPersistentDiskTypePtr(v string) ComputeEnginePreferencesPersistentDiskTypePtrInput {
	return (*computeEnginePreferencesPersistentDiskTypePtr)(&v)
}

func (*computeEnginePreferencesPersistentDiskTypePtr) ElementType() reflect.Type {
	return computeEnginePreferencesPersistentDiskTypePtrType
}

func (in *computeEnginePreferencesPersistentDiskTypePtr) ToComputeEnginePreferencesPersistentDiskTypePtrOutput() ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return pulumi.ToOutput(in).(ComputeEnginePreferencesPersistentDiskTypePtrOutput)
}

func (in *computeEnginePreferencesPersistentDiskTypePtr) ToComputeEnginePreferencesPersistentDiskTypePtrOutputWithContext(ctx context.Context) ComputeEnginePreferencesPersistentDiskTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeEnginePreferencesPersistentDiskTypePtrOutput)
}

// The import job format.
type GCSPayloadInfoFormat string

const (
	// Default value.
	GCSPayloadInfoFormatImportJobFormatUnspecified = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED")
	// Configuration management DB format.
	GCSPayloadInfoFormatImportJobFormatCmdb = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_CMDB")
	// RVTools format (XLSX).
	GCSPayloadInfoFormatImportJobFormatRvtoolsXlsx = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_RVTOOLS_XLSX")
	// RVTools format (CSV).
	GCSPayloadInfoFormatImportJobFormatRvtoolsCsv = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_RVTOOLS_CSV")
	// CSV format exported from AWS using the AWS collection script.
	GCSPayloadInfoFormatImportJobFormatExportedAwsCsv = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV")
	// CSV format exported from Azure using the Azure collection script.
	GCSPayloadInfoFormatImportJobFormatExportedAzureCsv = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV")
	// CSV format created manually. For more information, see Manually create and upload data tables.
	GCSPayloadInfoFormatImportJobFormatManualCsv = GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_MANUAL_CSV")
)

func (GCSPayloadInfoFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*GCSPayloadInfoFormat)(nil)).Elem()
}

func (e GCSPayloadInfoFormat) ToGCSPayloadInfoFormatOutput() GCSPayloadInfoFormatOutput {
	return pulumi.ToOutput(e).(GCSPayloadInfoFormatOutput)
}

func (e GCSPayloadInfoFormat) ToGCSPayloadInfoFormatOutputWithContext(ctx context.Context) GCSPayloadInfoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GCSPayloadInfoFormatOutput)
}

func (e GCSPayloadInfoFormat) ToGCSPayloadInfoFormatPtrOutput() GCSPayloadInfoFormatPtrOutput {
	return e.ToGCSPayloadInfoFormatPtrOutputWithContext(context.Background())
}

func (e GCSPayloadInfoFormat) ToGCSPayloadInfoFormatPtrOutputWithContext(ctx context.Context) GCSPayloadInfoFormatPtrOutput {
	return GCSPayloadInfoFormat(e).ToGCSPayloadInfoFormatOutputWithContext(ctx).ToGCSPayloadInfoFormatPtrOutputWithContext(ctx)
}

func (e GCSPayloadInfoFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GCSPayloadInfoFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GCSPayloadInfoFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GCSPayloadInfoFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GCSPayloadInfoFormatOutput struct{ *pulumi.OutputState }

func (GCSPayloadInfoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GCSPayloadInfoFormat)(nil)).Elem()
}

func (o GCSPayloadInfoFormatOutput) ToGCSPayloadInfoFormatOutput() GCSPayloadInfoFormatOutput {
	return o
}

func (o GCSPayloadInfoFormatOutput) ToGCSPayloadInfoFormatOutputWithContext(ctx context.Context) GCSPayloadInfoFormatOutput {
	return o
}

func (o GCSPayloadInfoFormatOutput) ToGCSPayloadInfoFormatPtrOutput() GCSPayloadInfoFormatPtrOutput {
	return o.ToGCSPayloadInfoFormatPtrOutputWithContext(context.Background())
}

func (o GCSPayloadInfoFormatOutput) ToGCSPayloadInfoFormatPtrOutputWithContext(ctx context.Context) GCSPayloadInfoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GCSPayloadInfoFormat) *GCSPayloadInfoFormat {
		return &v
	}).(GCSPayloadInfoFormatPtrOutput)
}

func (o GCSPayloadInfoFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GCSPayloadInfoFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GCSPayloadInfoFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GCSPayloadInfoFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GCSPayloadInfoFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GCSPayloadInfoFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GCSPayloadInfoFormatPtrOutput struct{ *pulumi.OutputState }

func (GCSPayloadInfoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCSPayloadInfoFormat)(nil)).Elem()
}

func (o GCSPayloadInfoFormatPtrOutput) ToGCSPayloadInfoFormatPtrOutput() GCSPayloadInfoFormatPtrOutput {
	return o
}

func (o GCSPayloadInfoFormatPtrOutput) ToGCSPayloadInfoFormatPtrOutputWithContext(ctx context.Context) GCSPayloadInfoFormatPtrOutput {
	return o
}

func (o GCSPayloadInfoFormatPtrOutput) Elem() GCSPayloadInfoFormatOutput {
	return o.ApplyT(func(v *GCSPayloadInfoFormat) GCSPayloadInfoFormat {
		if v != nil {
			return *v
		}
		var ret GCSPayloadInfoFormat
		return ret
	}).(GCSPayloadInfoFormatOutput)
}

func (o GCSPayloadInfoFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GCSPayloadInfoFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GCSPayloadInfoFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GCSPayloadInfoFormatInput is an input type that accepts GCSPayloadInfoFormatArgs and GCSPayloadInfoFormatOutput values.
// You can construct a concrete instance of `GCSPayloadInfoFormatInput` via:
//
//	GCSPayloadInfoFormatArgs{...}
type GCSPayloadInfoFormatInput interface {
	pulumi.Input

	ToGCSPayloadInfoFormatOutput() GCSPayloadInfoFormatOutput
	ToGCSPayloadInfoFormatOutputWithContext(context.Context) GCSPayloadInfoFormatOutput
}

var gcspayloadInfoFormatPtrType = reflect.TypeOf((**GCSPayloadInfoFormat)(nil)).Elem()

type GCSPayloadInfoFormatPtrInput interface {
	pulumi.Input

	ToGCSPayloadInfoFormatPtrOutput() GCSPayloadInfoFormatPtrOutput
	ToGCSPayloadInfoFormatPtrOutputWithContext(context.Context) GCSPayloadInfoFormatPtrOutput
}

type gcspayloadInfoFormatPtr string

func GCSPayloadInfoFormatPtr(v string) GCSPayloadInfoFormatPtrInput {
	return (*gcspayloadInfoFormatPtr)(&v)
}

func (*gcspayloadInfoFormatPtr) ElementType() reflect.Type {
	return gcspayloadInfoFormatPtrType
}

func (in *gcspayloadInfoFormatPtr) ToGCSPayloadInfoFormatPtrOutput() GCSPayloadInfoFormatPtrOutput {
	return pulumi.ToOutput(in).(GCSPayloadInfoFormatPtrOutput)
}

func (in *gcspayloadInfoFormatPtr) ToGCSPayloadInfoFormatPtrOutputWithContext(ctx context.Context) GCSPayloadInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GCSPayloadInfoFormatPtrOutput)
}

// Required. The payload format.
type ImportDataFileFormat string

const (
	// Default value.
	ImportDataFileFormatImportJobFormatUnspecified = ImportDataFileFormat("IMPORT_JOB_FORMAT_UNSPECIFIED")
	// Configuration management DB format.
	ImportDataFileFormatImportJobFormatCmdb = ImportDataFileFormat("IMPORT_JOB_FORMAT_CMDB")
	// RVTools format (XLSX).
	ImportDataFileFormatImportJobFormatRvtoolsXlsx = ImportDataFileFormat("IMPORT_JOB_FORMAT_RVTOOLS_XLSX")
	// RVTools format (CSV).
	ImportDataFileFormatImportJobFormatRvtoolsCsv = ImportDataFileFormat("IMPORT_JOB_FORMAT_RVTOOLS_CSV")
	// CSV format exported from AWS using the AWS collection script.
	ImportDataFileFormatImportJobFormatExportedAwsCsv = ImportDataFileFormat("IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV")
	// CSV format exported from Azure using the Azure collection script.
	ImportDataFileFormatImportJobFormatExportedAzureCsv = ImportDataFileFormat("IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV")
	// CSV format created manually. For more information, see Manually create and upload data tables.
	ImportDataFileFormatImportJobFormatManualCsv = ImportDataFileFormat("IMPORT_JOB_FORMAT_MANUAL_CSV")
)

func (ImportDataFileFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportDataFileFormat)(nil)).Elem()
}

func (e ImportDataFileFormat) ToImportDataFileFormatOutput() ImportDataFileFormatOutput {
	return pulumi.ToOutput(e).(ImportDataFileFormatOutput)
}

func (e ImportDataFileFormat) ToImportDataFileFormatOutputWithContext(ctx context.Context) ImportDataFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImportDataFileFormatOutput)
}

func (e ImportDataFileFormat) ToImportDataFileFormatPtrOutput() ImportDataFileFormatPtrOutput {
	return e.ToImportDataFileFormatPtrOutputWithContext(context.Background())
}

func (e ImportDataFileFormat) ToImportDataFileFormatPtrOutputWithContext(ctx context.Context) ImportDataFileFormatPtrOutput {
	return ImportDataFileFormat(e).ToImportDataFileFormatOutputWithContext(ctx).ToImportDataFileFormatPtrOutputWithContext(ctx)
}

func (e ImportDataFileFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImportDataFileFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImportDataFileFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImportDataFileFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImportDataFileFormatOutput struct{ *pulumi.OutputState }

func (ImportDataFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImportDataFileFormat)(nil)).Elem()
}

func (o ImportDataFileFormatOutput) ToImportDataFileFormatOutput() ImportDataFileFormatOutput {
	return o
}

func (o ImportDataFileFormatOutput) ToImportDataFileFormatOutputWithContext(ctx context.Context) ImportDataFileFormatOutput {
	return o
}

func (o ImportDataFileFormatOutput) ToImportDataFileFormatPtrOutput() ImportDataFileFormatPtrOutput {
	return o.ToImportDataFileFormatPtrOutputWithContext(context.Background())
}

func (o ImportDataFileFormatOutput) ToImportDataFileFormatPtrOutputWithContext(ctx context.Context) ImportDataFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImportDataFileFormat) *ImportDataFileFormat {
		return &v
	}).(ImportDataFileFormatPtrOutput)
}

func (o ImportDataFileFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImportDataFileFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImportDataFileFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImportDataFileFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImportDataFileFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImportDataFileFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImportDataFileFormatPtrOutput struct{ *pulumi.OutputState }

func (ImportDataFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImportDataFileFormat)(nil)).Elem()
}

func (o ImportDataFileFormatPtrOutput) ToImportDataFileFormatPtrOutput() ImportDataFileFormatPtrOutput {
	return o
}

func (o ImportDataFileFormatPtrOutput) ToImportDataFileFormatPtrOutputWithContext(ctx context.Context) ImportDataFileFormatPtrOutput {
	return o
}

func (o ImportDataFileFormatPtrOutput) Elem() ImportDataFileFormatOutput {
	return o.ApplyT(func(v *ImportDataFileFormat) ImportDataFileFormat {
		if v != nil {
			return *v
		}
		var ret ImportDataFileFormat
		return ret
	}).(ImportDataFileFormatOutput)
}

func (o ImportDataFileFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImportDataFileFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImportDataFileFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImportDataFileFormatInput is an input type that accepts ImportDataFileFormatArgs and ImportDataFileFormatOutput values.
// You can construct a concrete instance of `ImportDataFileFormatInput` via:
//
//	ImportDataFileFormatArgs{...}
type ImportDataFileFormatInput interface {
	pulumi.Input

	ToImportDataFileFormatOutput() ImportDataFileFormatOutput
	ToImportDataFileFormatOutputWithContext(context.Context) ImportDataFileFormatOutput
}

var importDataFileFormatPtrType = reflect.TypeOf((**ImportDataFileFormat)(nil)).Elem()

type ImportDataFileFormatPtrInput interface {
	pulumi.Input

	ToImportDataFileFormatPtrOutput() ImportDataFileFormatPtrOutput
	ToImportDataFileFormatPtrOutputWithContext(context.Context) ImportDataFileFormatPtrOutput
}

type importDataFileFormatPtr string

func ImportDataFileFormatPtr(v string) ImportDataFileFormatPtrInput {
	return (*importDataFileFormatPtr)(&v)
}

func (*importDataFileFormatPtr) ElementType() reflect.Type {
	return importDataFileFormatPtrType
}

func (in *importDataFileFormatPtr) ToImportDataFileFormatPtrOutput() ImportDataFileFormatPtrOutput {
	return pulumi.ToOutput(in).(ImportDataFileFormatPtrOutput)
}

func (in *importDataFileFormatPtr) ToImportDataFileFormatPtrOutputWithContext(ctx context.Context) ImportDataFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImportDataFileFormatPtrOutput)
}

// The import job format.
type InlinePayloadInfoFormat string

const (
	// Default value.
	InlinePayloadInfoFormatImportJobFormatUnspecified = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED")
	// Configuration management DB format.
	InlinePayloadInfoFormatImportJobFormatCmdb = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_CMDB")
	// RVTools format (XLSX).
	InlinePayloadInfoFormatImportJobFormatRvtoolsXlsx = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_RVTOOLS_XLSX")
	// RVTools format (CSV).
	InlinePayloadInfoFormatImportJobFormatRvtoolsCsv = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_RVTOOLS_CSV")
	// CSV format exported from AWS using the AWS collection script.
	InlinePayloadInfoFormatImportJobFormatExportedAwsCsv = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV")
	// CSV format exported from Azure using the Azure collection script.
	InlinePayloadInfoFormatImportJobFormatExportedAzureCsv = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV")
	// CSV format created manually. For more information, see Manually create and upload data tables.
	InlinePayloadInfoFormatImportJobFormatManualCsv = InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_MANUAL_CSV")
)

func (InlinePayloadInfoFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*InlinePayloadInfoFormat)(nil)).Elem()
}

func (e InlinePayloadInfoFormat) ToInlinePayloadInfoFormatOutput() InlinePayloadInfoFormatOutput {
	return pulumi.ToOutput(e).(InlinePayloadInfoFormatOutput)
}

func (e InlinePayloadInfoFormat) ToInlinePayloadInfoFormatOutputWithContext(ctx context.Context) InlinePayloadInfoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InlinePayloadInfoFormatOutput)
}

func (e InlinePayloadInfoFormat) ToInlinePayloadInfoFormatPtrOutput() InlinePayloadInfoFormatPtrOutput {
	return e.ToInlinePayloadInfoFormatPtrOutputWithContext(context.Background())
}

func (e InlinePayloadInfoFormat) ToInlinePayloadInfoFormatPtrOutputWithContext(ctx context.Context) InlinePayloadInfoFormatPtrOutput {
	return InlinePayloadInfoFormat(e).ToInlinePayloadInfoFormatOutputWithContext(ctx).ToInlinePayloadInfoFormatPtrOutputWithContext(ctx)
}

func (e InlinePayloadInfoFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InlinePayloadInfoFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InlinePayloadInfoFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InlinePayloadInfoFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InlinePayloadInfoFormatOutput struct{ *pulumi.OutputState }

func (InlinePayloadInfoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InlinePayloadInfoFormat)(nil)).Elem()
}

func (o InlinePayloadInfoFormatOutput) ToInlinePayloadInfoFormatOutput() InlinePayloadInfoFormatOutput {
	return o
}

func (o InlinePayloadInfoFormatOutput) ToInlinePayloadInfoFormatOutputWithContext(ctx context.Context) InlinePayloadInfoFormatOutput {
	return o
}

func (o InlinePayloadInfoFormatOutput) ToInlinePayloadInfoFormatPtrOutput() InlinePayloadInfoFormatPtrOutput {
	return o.ToInlinePayloadInfoFormatPtrOutputWithContext(context.Background())
}

func (o InlinePayloadInfoFormatOutput) ToInlinePayloadInfoFormatPtrOutputWithContext(ctx context.Context) InlinePayloadInfoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InlinePayloadInfoFormat) *InlinePayloadInfoFormat {
		return &v
	}).(InlinePayloadInfoFormatPtrOutput)
}

func (o InlinePayloadInfoFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InlinePayloadInfoFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InlinePayloadInfoFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InlinePayloadInfoFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InlinePayloadInfoFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InlinePayloadInfoFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InlinePayloadInfoFormatPtrOutput struct{ *pulumi.OutputState }

func (InlinePayloadInfoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InlinePayloadInfoFormat)(nil)).Elem()
}

func (o InlinePayloadInfoFormatPtrOutput) ToInlinePayloadInfoFormatPtrOutput() InlinePayloadInfoFormatPtrOutput {
	return o
}

func (o InlinePayloadInfoFormatPtrOutput) ToInlinePayloadInfoFormatPtrOutputWithContext(ctx context.Context) InlinePayloadInfoFormatPtrOutput {
	return o
}

func (o InlinePayloadInfoFormatPtrOutput) Elem() InlinePayloadInfoFormatOutput {
	return o.ApplyT(func(v *InlinePayloadInfoFormat) InlinePayloadInfoFormat {
		if v != nil {
			return *v
		}
		var ret InlinePayloadInfoFormat
		return ret
	}).(InlinePayloadInfoFormatOutput)
}

func (o InlinePayloadInfoFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InlinePayloadInfoFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InlinePayloadInfoFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InlinePayloadInfoFormatInput is an input type that accepts InlinePayloadInfoFormatArgs and InlinePayloadInfoFormatOutput values.
// You can construct a concrete instance of `InlinePayloadInfoFormatInput` via:
//
//	InlinePayloadInfoFormatArgs{...}
type InlinePayloadInfoFormatInput interface {
	pulumi.Input

	ToInlinePayloadInfoFormatOutput() InlinePayloadInfoFormatOutput
	ToInlinePayloadInfoFormatOutputWithContext(context.Context) InlinePayloadInfoFormatOutput
}

var inlinePayloadInfoFormatPtrType = reflect.TypeOf((**InlinePayloadInfoFormat)(nil)).Elem()

type InlinePayloadInfoFormatPtrInput interface {
	pulumi.Input

	ToInlinePayloadInfoFormatPtrOutput() InlinePayloadInfoFormatPtrOutput
	ToInlinePayloadInfoFormatPtrOutputWithContext(context.Context) InlinePayloadInfoFormatPtrOutput
}

type inlinePayloadInfoFormatPtr string

func InlinePayloadInfoFormatPtr(v string) InlinePayloadInfoFormatPtrInput {
	return (*inlinePayloadInfoFormatPtr)(&v)
}

func (*inlinePayloadInfoFormatPtr) ElementType() reflect.Type {
	return inlinePayloadInfoFormatPtrType
}

func (in *inlinePayloadInfoFormatPtr) ToInlinePayloadInfoFormatPtrOutput() InlinePayloadInfoFormatPtrOutput {
	return pulumi.ToOutput(in).(InlinePayloadInfoFormatPtrOutput)
}

func (in *inlinePayloadInfoFormatPtr) ToInlinePayloadInfoFormatPtrOutputWithContext(ctx context.Context) InlinePayloadInfoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InlinePayloadInfoFormatPtrOutput)
}

// Report creation state.
type ReportStateEnum string

const (
	// Default Report creation state.
	ReportStateEnumStateUnspecified = ReportStateEnum("STATE_UNSPECIFIED")
	// Creating Report.
	ReportStateEnumPending = ReportStateEnum("PENDING")
	// Successfully created Report.
	ReportStateEnumSucceeded = ReportStateEnum("SUCCEEDED")
	// Failed to create Report.
	ReportStateEnumFailed = ReportStateEnum("FAILED")
)

func (ReportStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportStateEnum)(nil)).Elem()
}

func (e ReportStateEnum) ToReportStateEnumOutput() ReportStateEnumOutput {
	return pulumi.ToOutput(e).(ReportStateEnumOutput)
}

func (e ReportStateEnum) ToReportStateEnumOutputWithContext(ctx context.Context) ReportStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReportStateEnumOutput)
}

func (e ReportStateEnum) ToReportStateEnumPtrOutput() ReportStateEnumPtrOutput {
	return e.ToReportStateEnumPtrOutputWithContext(context.Background())
}

func (e ReportStateEnum) ToReportStateEnumPtrOutputWithContext(ctx context.Context) ReportStateEnumPtrOutput {
	return ReportStateEnum(e).ToReportStateEnumOutputWithContext(ctx).ToReportStateEnumPtrOutputWithContext(ctx)
}

func (e ReportStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReportStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReportStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReportStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReportStateEnumOutput struct{ *pulumi.OutputState }

func (ReportStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportStateEnum)(nil)).Elem()
}

func (o ReportStateEnumOutput) ToReportStateEnumOutput() ReportStateEnumOutput {
	return o
}

func (o ReportStateEnumOutput) ToReportStateEnumOutputWithContext(ctx context.Context) ReportStateEnumOutput {
	return o
}

func (o ReportStateEnumOutput) ToReportStateEnumPtrOutput() ReportStateEnumPtrOutput {
	return o.ToReportStateEnumPtrOutputWithContext(context.Background())
}

func (o ReportStateEnumOutput) ToReportStateEnumPtrOutputWithContext(ctx context.Context) ReportStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportStateEnum) *ReportStateEnum {
		return &v
	}).(ReportStateEnumPtrOutput)
}

func (o ReportStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReportStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReportStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReportStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReportStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReportStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReportStateEnumPtrOutput struct{ *pulumi.OutputState }

func (ReportStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportStateEnum)(nil)).Elem()
}

func (o ReportStateEnumPtrOutput) ToReportStateEnumPtrOutput() ReportStateEnumPtrOutput {
	return o
}

func (o ReportStateEnumPtrOutput) ToReportStateEnumPtrOutputWithContext(ctx context.Context) ReportStateEnumPtrOutput {
	return o
}

func (o ReportStateEnumPtrOutput) Elem() ReportStateEnumOutput {
	return o.ApplyT(func(v *ReportStateEnum) ReportStateEnum {
		if v != nil {
			return *v
		}
		var ret ReportStateEnum
		return ret
	}).(ReportStateEnumOutput)
}

func (o ReportStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReportStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReportStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReportStateEnumInput is an input type that accepts ReportStateEnumArgs and ReportStateEnumOutput values.
// You can construct a concrete instance of `ReportStateEnumInput` via:
//
//	ReportStateEnumArgs{...}
type ReportStateEnumInput interface {
	pulumi.Input

	ToReportStateEnumOutput() ReportStateEnumOutput
	ToReportStateEnumOutputWithContext(context.Context) ReportStateEnumOutput
}

var reportStateEnumPtrType = reflect.TypeOf((**ReportStateEnum)(nil)).Elem()

type ReportStateEnumPtrInput interface {
	pulumi.Input

	ToReportStateEnumPtrOutput() ReportStateEnumPtrOutput
	ToReportStateEnumPtrOutputWithContext(context.Context) ReportStateEnumPtrOutput
}

type reportStateEnumPtr string

func ReportStateEnumPtr(v string) ReportStateEnumPtrInput {
	return (*reportStateEnumPtr)(&v)
}

func (*reportStateEnumPtr) ElementType() reflect.Type {
	return reportStateEnumPtrType
}

func (in *reportStateEnumPtr) ToReportStateEnumPtrOutput() ReportStateEnumPtrOutput {
	return pulumi.ToOutput(in).(ReportStateEnumPtrOutput)
}

func (in *reportStateEnumPtr) ToReportStateEnumPtrOutputWithContext(ctx context.Context) ReportStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReportStateEnumPtrOutput)
}

// Report type.
type ReportType string

const (
	// Default Report type.
	ReportTypeTypeUnspecified = ReportType("TYPE_UNSPECIFIED")
	// Total cost of ownership Report type.
	ReportTypeTotalCostOfOwnership = ReportType("TOTAL_COST_OF_OWNERSHIP")
)

func (ReportType) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportType)(nil)).Elem()
}

func (e ReportType) ToReportTypeOutput() ReportTypeOutput {
	return pulumi.ToOutput(e).(ReportTypeOutput)
}

func (e ReportType) ToReportTypeOutputWithContext(ctx context.Context) ReportTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ReportTypeOutput)
}

func (e ReportType) ToReportTypePtrOutput() ReportTypePtrOutput {
	return e.ToReportTypePtrOutputWithContext(context.Background())
}

func (e ReportType) ToReportTypePtrOutputWithContext(ctx context.Context) ReportTypePtrOutput {
	return ReportType(e).ToReportTypeOutputWithContext(ctx).ToReportTypePtrOutputWithContext(ctx)
}

func (e ReportType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReportType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ReportType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ReportType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ReportTypeOutput struct{ *pulumi.OutputState }

func (ReportTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportType)(nil)).Elem()
}

func (o ReportTypeOutput) ToReportTypeOutput() ReportTypeOutput {
	return o
}

func (o ReportTypeOutput) ToReportTypeOutputWithContext(ctx context.Context) ReportTypeOutput {
	return o
}

func (o ReportTypeOutput) ToReportTypePtrOutput() ReportTypePtrOutput {
	return o.ToReportTypePtrOutputWithContext(context.Background())
}

func (o ReportTypeOutput) ToReportTypePtrOutputWithContext(ctx context.Context) ReportTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportType) *ReportType {
		return &v
	}).(ReportTypePtrOutput)
}

func (o ReportTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ReportTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReportType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ReportTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReportTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ReportType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ReportTypePtrOutput struct{ *pulumi.OutputState }

func (ReportTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportType)(nil)).Elem()
}

func (o ReportTypePtrOutput) ToReportTypePtrOutput() ReportTypePtrOutput {
	return o
}

func (o ReportTypePtrOutput) ToReportTypePtrOutputWithContext(ctx context.Context) ReportTypePtrOutput {
	return o
}

func (o ReportTypePtrOutput) Elem() ReportTypeOutput {
	return o.ApplyT(func(v *ReportType) ReportType {
		if v != nil {
			return *v
		}
		var ret ReportType
		return ret
	}).(ReportTypeOutput)
}

func (o ReportTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ReportTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ReportType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ReportTypeInput is an input type that accepts ReportTypeArgs and ReportTypeOutput values.
// You can construct a concrete instance of `ReportTypeInput` via:
//
//	ReportTypeArgs{...}
type ReportTypeInput interface {
	pulumi.Input

	ToReportTypeOutput() ReportTypeOutput
	ToReportTypeOutputWithContext(context.Context) ReportTypeOutput
}

var reportTypePtrType = reflect.TypeOf((**ReportType)(nil)).Elem()

type ReportTypePtrInput interface {
	pulumi.Input

	ToReportTypePtrOutput() ReportTypePtrOutput
	ToReportTypePtrOutputWithContext(context.Context) ReportTypePtrOutput
}

type reportTypePtr string

func ReportTypePtr(v string) ReportTypePtrInput {
	return (*reportTypePtr)(&v)
}

func (*reportTypePtr) ElementType() reflect.Type {
	return reportTypePtrType
}

func (in *reportTypePtr) ToReportTypePtrOutput() ReportTypePtrOutput {
	return pulumi.ToOutput(in).(ReportTypePtrOutput)
}

func (in *reportTypePtr) ToReportTypePtrOutputWithContext(ctx context.Context) ReportTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ReportTypePtrOutput)
}

// Data source type.
type SourceType string

const (
	// Unspecified
	SourceTypeSourceTypeUnknown = SourceType("SOURCE_TYPE_UNKNOWN")
	// Manually uploaded file (e.g. CSV)
	SourceTypeSourceTypeUpload = SourceType("SOURCE_TYPE_UPLOAD")
	// Guest-level info
	SourceTypeSourceTypeGuestOsScan = SourceType("SOURCE_TYPE_GUEST_OS_SCAN")
	// Inventory-level scan
	SourceTypeSourceTypeInventoryScan = SourceType("SOURCE_TYPE_INVENTORY_SCAN")
	// Third-party owned sources.
	SourceTypeSourceTypeCustom = SourceType("SOURCE_TYPE_CUSTOM")
)

func (SourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceType)(nil)).Elem()
}

func (e SourceType) ToSourceTypeOutput() SourceTypeOutput {
	return pulumi.ToOutput(e).(SourceTypeOutput)
}

func (e SourceType) ToSourceTypeOutputWithContext(ctx context.Context) SourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceTypeOutput)
}

func (e SourceType) ToSourceTypePtrOutput() SourceTypePtrOutput {
	return e.ToSourceTypePtrOutputWithContext(context.Background())
}

func (e SourceType) ToSourceTypePtrOutputWithContext(ctx context.Context) SourceTypePtrOutput {
	return SourceType(e).ToSourceTypeOutputWithContext(ctx).ToSourceTypePtrOutputWithContext(ctx)
}

func (e SourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceTypeOutput struct{ *pulumi.OutputState }

func (SourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceType)(nil)).Elem()
}

func (o SourceTypeOutput) ToSourceTypeOutput() SourceTypeOutput {
	return o
}

func (o SourceTypeOutput) ToSourceTypeOutputWithContext(ctx context.Context) SourceTypeOutput {
	return o
}

func (o SourceTypeOutput) ToSourceTypePtrOutput() SourceTypePtrOutput {
	return o.ToSourceTypePtrOutputWithContext(context.Background())
}

func (o SourceTypeOutput) ToSourceTypePtrOutputWithContext(ctx context.Context) SourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceType) *SourceType {
		return &v
	}).(SourceTypePtrOutput)
}

func (o SourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceTypePtrOutput struct{ *pulumi.OutputState }

func (SourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceType)(nil)).Elem()
}

func (o SourceTypePtrOutput) ToSourceTypePtrOutput() SourceTypePtrOutput {
	return o
}

func (o SourceTypePtrOutput) ToSourceTypePtrOutputWithContext(ctx context.Context) SourceTypePtrOutput {
	return o
}

func (o SourceTypePtrOutput) Elem() SourceTypeOutput {
	return o.ApplyT(func(v *SourceType) SourceType {
		if v != nil {
			return *v
		}
		var ret SourceType
		return ret
	}).(SourceTypeOutput)
}

func (o SourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceTypeInput is an input type that accepts SourceTypeArgs and SourceTypeOutput values.
// You can construct a concrete instance of `SourceTypeInput` via:
//
//	SourceTypeArgs{...}
type SourceTypeInput interface {
	pulumi.Input

	ToSourceTypeOutput() SourceTypeOutput
	ToSourceTypeOutputWithContext(context.Context) SourceTypeOutput
}

var sourceTypePtrType = reflect.TypeOf((**SourceType)(nil)).Elem()

type SourceTypePtrInput interface {
	pulumi.Input

	ToSourceTypePtrOutput() SourceTypePtrOutput
	ToSourceTypePtrOutputWithContext(context.Context) SourceTypePtrOutput
}

type sourceTypePtr string

func SourceTypePtr(v string) SourceTypePtrInput {
	return (*sourceTypePtr)(&v)
}

func (*sourceTypePtr) ElementType() reflect.Type {
	return sourceTypePtrType
}

func (in *sourceTypePtr) ToSourceTypePtrOutput() SourceTypePtrOutput {
	return pulumi.ToOutput(in).(SourceTypePtrOutput)
}

func (in *sourceTypePtr) ToSourceTypePtrOutputWithContext(ctx context.Context) SourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceTypePtrOutput)
}

// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
type VirtualMachinePreferencesCommitmentPlan string

const (
	// Unspecified commitment plan.
	VirtualMachinePreferencesCommitmentPlanCommitmentPlanUnspecified = VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED")
	// No commitment plan.
	VirtualMachinePreferencesCommitmentPlanCommitmentPlanNone = VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_NONE")
	// 1 year commitment.
	VirtualMachinePreferencesCommitmentPlanCommitmentPlanOneYear = VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_ONE_YEAR")
	// 3 years commitment.
	VirtualMachinePreferencesCommitmentPlanCommitmentPlanThreeYears = VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_THREE_YEARS")
)

func (VirtualMachinePreferencesCommitmentPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePreferencesCommitmentPlan)(nil)).Elem()
}

func (e VirtualMachinePreferencesCommitmentPlan) ToVirtualMachinePreferencesCommitmentPlanOutput() VirtualMachinePreferencesCommitmentPlanOutput {
	return pulumi.ToOutput(e).(VirtualMachinePreferencesCommitmentPlanOutput)
}

func (e VirtualMachinePreferencesCommitmentPlan) ToVirtualMachinePreferencesCommitmentPlanOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VirtualMachinePreferencesCommitmentPlanOutput)
}

func (e VirtualMachinePreferencesCommitmentPlan) ToVirtualMachinePreferencesCommitmentPlanPtrOutput() VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return e.ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(context.Background())
}

func (e VirtualMachinePreferencesCommitmentPlan) ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return VirtualMachinePreferencesCommitmentPlan(e).ToVirtualMachinePreferencesCommitmentPlanOutputWithContext(ctx).ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(ctx)
}

func (e VirtualMachinePreferencesCommitmentPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachinePreferencesCommitmentPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachinePreferencesCommitmentPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VirtualMachinePreferencesCommitmentPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VirtualMachinePreferencesCommitmentPlanOutput struct{ *pulumi.OutputState }

func (VirtualMachinePreferencesCommitmentPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePreferencesCommitmentPlan)(nil)).Elem()
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToVirtualMachinePreferencesCommitmentPlanOutput() VirtualMachinePreferencesCommitmentPlanOutput {
	return o
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToVirtualMachinePreferencesCommitmentPlanOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanOutput {
	return o
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToVirtualMachinePreferencesCommitmentPlanPtrOutput() VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return o.ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachinePreferencesCommitmentPlan) *VirtualMachinePreferencesCommitmentPlan {
		return &v
	}).(VirtualMachinePreferencesCommitmentPlanPtrOutput)
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachinePreferencesCommitmentPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesCommitmentPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachinePreferencesCommitmentPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VirtualMachinePreferencesCommitmentPlanPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePreferencesCommitmentPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachinePreferencesCommitmentPlan)(nil)).Elem()
}

func (o VirtualMachinePreferencesCommitmentPlanPtrOutput) ToVirtualMachinePreferencesCommitmentPlanPtrOutput() VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return o
}

func (o VirtualMachinePreferencesCommitmentPlanPtrOutput) ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return o
}

func (o VirtualMachinePreferencesCommitmentPlanPtrOutput) Elem() VirtualMachinePreferencesCommitmentPlanOutput {
	return o.ApplyT(func(v *VirtualMachinePreferencesCommitmentPlan) VirtualMachinePreferencesCommitmentPlan {
		if v != nil {
			return *v
		}
		var ret VirtualMachinePreferencesCommitmentPlan
		return ret
	}).(VirtualMachinePreferencesCommitmentPlanOutput)
}

func (o VirtualMachinePreferencesCommitmentPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesCommitmentPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VirtualMachinePreferencesCommitmentPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VirtualMachinePreferencesCommitmentPlanInput is an input type that accepts VirtualMachinePreferencesCommitmentPlanArgs and VirtualMachinePreferencesCommitmentPlanOutput values.
// You can construct a concrete instance of `VirtualMachinePreferencesCommitmentPlanInput` via:
//
//	VirtualMachinePreferencesCommitmentPlanArgs{...}
type VirtualMachinePreferencesCommitmentPlanInput interface {
	pulumi.Input

	ToVirtualMachinePreferencesCommitmentPlanOutput() VirtualMachinePreferencesCommitmentPlanOutput
	ToVirtualMachinePreferencesCommitmentPlanOutputWithContext(context.Context) VirtualMachinePreferencesCommitmentPlanOutput
}

var virtualMachinePreferencesCommitmentPlanPtrType = reflect.TypeOf((**VirtualMachinePreferencesCommitmentPlan)(nil)).Elem()

type VirtualMachinePreferencesCommitmentPlanPtrInput interface {
	pulumi.Input

	ToVirtualMachinePreferencesCommitmentPlanPtrOutput() VirtualMachinePreferencesCommitmentPlanPtrOutput
	ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(context.Context) VirtualMachinePreferencesCommitmentPlanPtrOutput
}

type virtualMachinePreferencesCommitmentPlanPtr string

func VirtualMachinePreferencesCommitmentPlanPtr(v string) VirtualMachinePreferencesCommitmentPlanPtrInput {
	return (*virtualMachinePreferencesCommitmentPlanPtr)(&v)
}

func (*virtualMachinePreferencesCommitmentPlanPtr) ElementType() reflect.Type {
	return virtualMachinePreferencesCommitmentPlanPtrType
}

func (in *virtualMachinePreferencesCommitmentPlanPtr) ToVirtualMachinePreferencesCommitmentPlanPtrOutput() VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return pulumi.ToOutput(in).(VirtualMachinePreferencesCommitmentPlanPtrOutput)
}

func (in *virtualMachinePreferencesCommitmentPlanPtr) ToVirtualMachinePreferencesCommitmentPlanPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesCommitmentPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VirtualMachinePreferencesCommitmentPlanPtrOutput)
}

// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
type VirtualMachinePreferencesSizingOptimizationStrategy string

const (
	// Unspecified (default value).
	VirtualMachinePreferencesSizingOptimizationStrategySizingOptimizationStrategyUnspecified = VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED")
	// No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.
	VirtualMachinePreferencesSizingOptimizationStrategySizingOptimizationStrategySameAsSource = VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE")
	// Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.
	VirtualMachinePreferencesSizingOptimizationStrategySizingOptimizationStrategyModerate = VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_MODERATE")
	// Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.
	VirtualMachinePreferencesSizingOptimizationStrategySizingOptimizationStrategyAggressive = VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE")
)

func (VirtualMachinePreferencesSizingOptimizationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePreferencesSizingOptimizationStrategy)(nil)).Elem()
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToVirtualMachinePreferencesSizingOptimizationStrategyOutput() VirtualMachinePreferencesSizingOptimizationStrategyOutput {
	return pulumi.ToOutput(e).(VirtualMachinePreferencesSizingOptimizationStrategyOutput)
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToVirtualMachinePreferencesSizingOptimizationStrategyOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VirtualMachinePreferencesSizingOptimizationStrategyOutput)
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutput() VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return e.ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(context.Background())
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return VirtualMachinePreferencesSizingOptimizationStrategy(e).ToVirtualMachinePreferencesSizingOptimizationStrategyOutputWithContext(ctx).ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(ctx)
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VirtualMachinePreferencesSizingOptimizationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VirtualMachinePreferencesSizingOptimizationStrategyOutput struct{ *pulumi.OutputState }

func (VirtualMachinePreferencesSizingOptimizationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachinePreferencesSizingOptimizationStrategy)(nil)).Elem()
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyOutput() VirtualMachinePreferencesSizingOptimizationStrategyOutput {
	return o
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyOutput {
	return o
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutput() VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return o.ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachinePreferencesSizingOptimizationStrategy) *VirtualMachinePreferencesSizingOptimizationStrategy {
		return &v
	}).(VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput)
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachinePreferencesSizingOptimizationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VirtualMachinePreferencesSizingOptimizationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachinePreferencesSizingOptimizationStrategy)(nil)).Elem()
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutput() VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return o
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return o
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) Elem() VirtualMachinePreferencesSizingOptimizationStrategyOutput {
	return o.ApplyT(func(v *VirtualMachinePreferencesSizingOptimizationStrategy) VirtualMachinePreferencesSizingOptimizationStrategy {
		if v != nil {
			return *v
		}
		var ret VirtualMachinePreferencesSizingOptimizationStrategy
		return ret
	}).(VirtualMachinePreferencesSizingOptimizationStrategyOutput)
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VirtualMachinePreferencesSizingOptimizationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VirtualMachinePreferencesSizingOptimizationStrategyInput is an input type that accepts VirtualMachinePreferencesSizingOptimizationStrategyArgs and VirtualMachinePreferencesSizingOptimizationStrategyOutput values.
// You can construct a concrete instance of `VirtualMachinePreferencesSizingOptimizationStrategyInput` via:
//
//	VirtualMachinePreferencesSizingOptimizationStrategyArgs{...}
type VirtualMachinePreferencesSizingOptimizationStrategyInput interface {
	pulumi.Input

	ToVirtualMachinePreferencesSizingOptimizationStrategyOutput() VirtualMachinePreferencesSizingOptimizationStrategyOutput
	ToVirtualMachinePreferencesSizingOptimizationStrategyOutputWithContext(context.Context) VirtualMachinePreferencesSizingOptimizationStrategyOutput
}

var virtualMachinePreferencesSizingOptimizationStrategyPtrType = reflect.TypeOf((**VirtualMachinePreferencesSizingOptimizationStrategy)(nil)).Elem()

type VirtualMachinePreferencesSizingOptimizationStrategyPtrInput interface {
	pulumi.Input

	ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutput() VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput
	ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(context.Context) VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput
}

type virtualMachinePreferencesSizingOptimizationStrategyPtr string

func VirtualMachinePreferencesSizingOptimizationStrategyPtr(v string) VirtualMachinePreferencesSizingOptimizationStrategyPtrInput {
	return (*virtualMachinePreferencesSizingOptimizationStrategyPtr)(&v)
}

func (*virtualMachinePreferencesSizingOptimizationStrategyPtr) ElementType() reflect.Type {
	return virtualMachinePreferencesSizingOptimizationStrategyPtrType
}

func (in *virtualMachinePreferencesSizingOptimizationStrategyPtr) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutput() VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return pulumi.ToOutput(in).(VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput)
}

func (in *virtualMachinePreferencesSizingOptimizationStrategyPtr) ToVirtualMachinePreferencesSizingOptimizationStrategyPtrOutputWithContext(ctx context.Context) VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnginePreferencesLicenseTypeInput)(nil)).Elem(), ComputeEnginePreferencesLicenseType("LICENSE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnginePreferencesLicenseTypePtrInput)(nil)).Elem(), ComputeEnginePreferencesLicenseType("LICENSE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnginePreferencesPersistentDiskTypeInput)(nil)).Elem(), ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeEnginePreferencesPersistentDiskTypePtrInput)(nil)).Elem(), ComputeEnginePreferencesPersistentDiskType("PERSISTENT_DISK_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GCSPayloadInfoFormatInput)(nil)).Elem(), GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GCSPayloadInfoFormatPtrInput)(nil)).Elem(), GCSPayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImportDataFileFormatInput)(nil)).Elem(), ImportDataFileFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImportDataFileFormatPtrInput)(nil)).Elem(), ImportDataFileFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InlinePayloadInfoFormatInput)(nil)).Elem(), InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InlinePayloadInfoFormatPtrInput)(nil)).Elem(), InlinePayloadInfoFormat("IMPORT_JOB_FORMAT_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStateEnumInput)(nil)).Elem(), ReportStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReportStateEnumPtrInput)(nil)).Elem(), ReportStateEnum("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReportTypeInput)(nil)).Elem(), ReportType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ReportTypePtrInput)(nil)).Elem(), ReportType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTypeInput)(nil)).Elem(), SourceType("SOURCE_TYPE_UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTypePtrInput)(nil)).Elem(), SourceType("SOURCE_TYPE_UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachinePreferencesCommitmentPlanInput)(nil)).Elem(), VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachinePreferencesCommitmentPlanPtrInput)(nil)).Elem(), VirtualMachinePreferencesCommitmentPlan("COMMITMENT_PLAN_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachinePreferencesSizingOptimizationStrategyInput)(nil)).Elem(), VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachinePreferencesSizingOptimizationStrategyPtrInput)(nil)).Elem(), VirtualMachinePreferencesSizingOptimizationStrategy("SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED"))
	pulumi.RegisterOutputType(ComputeEnginePreferencesLicenseTypeOutput{})
	pulumi.RegisterOutputType(ComputeEnginePreferencesLicenseTypePtrOutput{})
	pulumi.RegisterOutputType(ComputeEnginePreferencesPersistentDiskTypeOutput{})
	pulumi.RegisterOutputType(ComputeEnginePreferencesPersistentDiskTypePtrOutput{})
	pulumi.RegisterOutputType(GCSPayloadInfoFormatOutput{})
	pulumi.RegisterOutputType(GCSPayloadInfoFormatPtrOutput{})
	pulumi.RegisterOutputType(ImportDataFileFormatOutput{})
	pulumi.RegisterOutputType(ImportDataFileFormatPtrOutput{})
	pulumi.RegisterOutputType(InlinePayloadInfoFormatOutput{})
	pulumi.RegisterOutputType(InlinePayloadInfoFormatPtrOutput{})
	pulumi.RegisterOutputType(ReportStateEnumOutput{})
	pulumi.RegisterOutputType(ReportStateEnumPtrOutput{})
	pulumi.RegisterOutputType(ReportTypeOutput{})
	pulumi.RegisterOutputType(ReportTypePtrOutput{})
	pulumi.RegisterOutputType(SourceTypeOutput{})
	pulumi.RegisterOutputType(SourceTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachinePreferencesCommitmentPlanOutput{})
	pulumi.RegisterOutputType(VirtualMachinePreferencesCommitmentPlanPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachinePreferencesSizingOptimizationStrategyOutput{})
	pulumi.RegisterOutputType(VirtualMachinePreferencesSizingOptimizationStrategyPtrOutput{})
}
