// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new preference set in a given project and location.
// Auto-naming is currently not supported for this resource.
type PreferenceSet struct {
	pulumi.CustomResourceState

	// The timestamp when the preference set was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of the preference set.
	Description pulumi.StringOutput `pulumi:"description"`
	// User-friendly display name. Maximum length is 63 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	Location    pulumi.StringOutput `pulumi:"location"`
	// Name of the preference set.
	Name            pulumi.StringOutput    `pulumi:"name"`
	PreferenceSetId pulumi.StringPtrOutput `pulumi:"preferenceSetId"`
	Project         pulumi.StringOutput    `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The timestamp when the preference set was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// A set of preferences that applies to all virtual machines in the context.
	VirtualMachinePreferences VirtualMachinePreferencesResponseOutput `pulumi:"virtualMachinePreferences"`
}

// NewPreferenceSet registers a new resource with the given unique name, arguments, and options.
func NewPreferenceSet(ctx *pulumi.Context,
	name string, args *PreferenceSetArgs, opts ...pulumi.ResourceOption) (*PreferenceSet, error) {
	if args == nil {
		args = &PreferenceSetArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PreferenceSet
	err := ctx.RegisterResource("google-native:migrationcenter/v1alpha1:PreferenceSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreferenceSet gets an existing PreferenceSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreferenceSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreferenceSetState, opts ...pulumi.ResourceOption) (*PreferenceSet, error) {
	var resource PreferenceSet
	err := ctx.ReadResource("google-native:migrationcenter/v1alpha1:PreferenceSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PreferenceSet resources.
type preferenceSetState struct {
}

type PreferenceSetState struct {
}

func (PreferenceSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*preferenceSetState)(nil)).Elem()
}

type preferenceSetArgs struct {
	// A description of the preference set.
	Description *string `pulumi:"description"`
	// User-friendly display name. Maximum length is 63 characters.
	DisplayName     *string `pulumi:"displayName"`
	Location        *string `pulumi:"location"`
	PreferenceSetId *string `pulumi:"preferenceSetId"`
	Project         *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// A set of preferences that applies to all virtual machines in the context.
	VirtualMachinePreferences *VirtualMachinePreferences `pulumi:"virtualMachinePreferences"`
}

// The set of arguments for constructing a PreferenceSet resource.
type PreferenceSetArgs struct {
	// A description of the preference set.
	Description pulumi.StringPtrInput
	// User-friendly display name. Maximum length is 63 characters.
	DisplayName     pulumi.StringPtrInput
	Location        pulumi.StringPtrInput
	PreferenceSetId pulumi.StringPtrInput
	Project         pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// A set of preferences that applies to all virtual machines in the context.
	VirtualMachinePreferences VirtualMachinePreferencesPtrInput
}

func (PreferenceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preferenceSetArgs)(nil)).Elem()
}

type PreferenceSetInput interface {
	pulumi.Input

	ToPreferenceSetOutput() PreferenceSetOutput
	ToPreferenceSetOutputWithContext(ctx context.Context) PreferenceSetOutput
}

func (*PreferenceSet) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSet)(nil)).Elem()
}

func (i *PreferenceSet) ToPreferenceSetOutput() PreferenceSetOutput {
	return i.ToPreferenceSetOutputWithContext(context.Background())
}

func (i *PreferenceSet) ToPreferenceSetOutputWithContext(ctx context.Context) PreferenceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferenceSetOutput)
}

func (i *PreferenceSet) ToOutput(ctx context.Context) pulumix.Output[*PreferenceSet] {
	return pulumix.Output[*PreferenceSet]{
		OutputState: i.ToPreferenceSetOutputWithContext(ctx).OutputState,
	}
}

type PreferenceSetOutput struct{ *pulumi.OutputState }

func (PreferenceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferenceSet)(nil)).Elem()
}

func (o PreferenceSetOutput) ToPreferenceSetOutput() PreferenceSetOutput {
	return o
}

func (o PreferenceSetOutput) ToPreferenceSetOutputWithContext(ctx context.Context) PreferenceSetOutput {
	return o
}

func (o PreferenceSetOutput) ToOutput(ctx context.Context) pulumix.Output[*PreferenceSet] {
	return pulumix.Output[*PreferenceSet]{
		OutputState: o.OutputState,
	}
}

// The timestamp when the preference set was created.
func (o PreferenceSetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of the preference set.
func (o PreferenceSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// User-friendly display name. Maximum length is 63 characters.
func (o PreferenceSetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o PreferenceSetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the preference set.
func (o PreferenceSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PreferenceSetOutput) PreferenceSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringPtrOutput { return v.PreferenceSetId }).(pulumi.StringPtrOutput)
}

func (o PreferenceSetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o PreferenceSetOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The timestamp when the preference set was last updated.
func (o PreferenceSetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PreferenceSet) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// A set of preferences that applies to all virtual machines in the context.
func (o PreferenceSetOutput) VirtualMachinePreferences() VirtualMachinePreferencesResponseOutput {
	return o.ApplyT(func(v *PreferenceSet) VirtualMachinePreferencesResponseOutput { return v.VirtualMachinePreferences }).(VirtualMachinePreferencesResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PreferenceSetInput)(nil)).Elem(), &PreferenceSet{})
	pulumi.RegisterOutputType(PreferenceSetOutput{})
}
