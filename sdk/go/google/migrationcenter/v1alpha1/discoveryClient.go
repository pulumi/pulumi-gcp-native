// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new discovery client.
// Auto-naming is currently not supported for this resource.
type DiscoveryClient struct {
	pulumi.CustomResourceState

	// Time when the discovery client was first created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Free text description. Maximum length is 1000 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
	DiscoveryClientId pulumi.StringOutput `pulumi:"discoveryClientId"`
	// Optional. Free text display name. Maximum length is 63 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Errors affecting client functionality.
	Errors StatusResponseArrayOutput `pulumi:"errors"`
	// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).
	HeartbeatTime pulumi.StringOutput `pulumi:"heartbeatTime"`
	// Optional. Labels as key value pairs.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Identifier. Full name of this discovery client.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Service account used by the discovery client for various operation.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// This field is intended for internal use.
	SignalsEndpoint pulumi.StringOutput `pulumi:"signalsEndpoint"`
	// Full name of the source object associated with this discovery client.
	Source pulumi.StringOutput `pulumi:"source"`
	// Current state of the discovery client.
	State pulumi.StringOutput `pulumi:"state"`
	// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
	Ttl pulumi.StringOutput `pulumi:"ttl"`
	// Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Client version, as reported in recent heartbeat.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewDiscoveryClient registers a new resource with the given unique name, arguments, and options.
func NewDiscoveryClient(ctx *pulumi.Context,
	name string, args *DiscoveryClientArgs, opts ...pulumi.ResourceOption) (*DiscoveryClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiscoveryClientId == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveryClientId'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"discoveryClientId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiscoveryClient
	err := ctx.RegisterResource("google-native:migrationcenter/v1alpha1:DiscoveryClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveryClient gets an existing DiscoveryClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveryClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveryClientState, opts ...pulumi.ResourceOption) (*DiscoveryClient, error) {
	var resource DiscoveryClient
	err := ctx.ReadResource("google-native:migrationcenter/v1alpha1:DiscoveryClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveryClient resources.
type discoveryClientState struct {
}

type DiscoveryClientState struct {
}

func (DiscoveryClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryClientState)(nil)).Elem()
}

type discoveryClientArgs struct {
	// Optional. Free text description. Maximum length is 1000 characters.
	Description *string `pulumi:"description"`
	// Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
	DiscoveryClientId string `pulumi:"discoveryClientId"`
	// Optional. Free text display name. Maximum length is 63 characters.
	DisplayName *string `pulumi:"displayName"`
	// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
	ExpireTime *string `pulumi:"expireTime"`
	// Optional. Labels as key value pairs.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Service account used by the discovery client for various operation.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Full name of the source object associated with this discovery client.
	Source string `pulumi:"source"`
	// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
	Ttl *string `pulumi:"ttl"`
}

// The set of arguments for constructing a DiscoveryClient resource.
type DiscoveryClientArgs struct {
	// Optional. Free text description. Maximum length is 1000 characters.
	Description pulumi.StringPtrInput
	// Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
	DiscoveryClientId pulumi.StringInput
	// Optional. Free text display name. Maximum length is 63 characters.
	DisplayName pulumi.StringPtrInput
	// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
	ExpireTime pulumi.StringPtrInput
	// Optional. Labels as key value pairs.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Service account used by the discovery client for various operation.
	ServiceAccount pulumi.StringInput
	// Full name of the source object associated with this discovery client.
	Source pulumi.StringInput
	// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
	Ttl pulumi.StringPtrInput
}

func (DiscoveryClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryClientArgs)(nil)).Elem()
}

type DiscoveryClientInput interface {
	pulumi.Input

	ToDiscoveryClientOutput() DiscoveryClientOutput
	ToDiscoveryClientOutputWithContext(ctx context.Context) DiscoveryClientOutput
}

func (*DiscoveryClient) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryClient)(nil)).Elem()
}

func (i *DiscoveryClient) ToDiscoveryClientOutput() DiscoveryClientOutput {
	return i.ToDiscoveryClientOutputWithContext(context.Background())
}

func (i *DiscoveryClient) ToDiscoveryClientOutputWithContext(ctx context.Context) DiscoveryClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryClientOutput)
}

type DiscoveryClientOutput struct{ *pulumi.OutputState }

func (DiscoveryClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryClient)(nil)).Elem()
}

func (o DiscoveryClientOutput) ToDiscoveryClientOutput() DiscoveryClientOutput {
	return o
}

func (o DiscoveryClientOutput) ToDiscoveryClientOutputWithContext(ctx context.Context) DiscoveryClientOutput {
	return o
}

// Time when the discovery client was first created.
func (o DiscoveryClientOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Free text description. Maximum length is 1000 characters.
func (o DiscoveryClientOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
func (o DiscoveryClientOutput) DiscoveryClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.DiscoveryClientId }).(pulumi.StringOutput)
}

// Optional. Free text display name. Maximum length is 63 characters.
func (o DiscoveryClientOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Errors affecting client functionality.
func (o DiscoveryClientOutput) Errors() StatusResponseArrayOutput {
	return o.ApplyT(func(v *DiscoveryClient) StatusResponseArrayOutput { return v.Errors }).(StatusResponseArrayOutput)
}

// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
func (o DiscoveryClientOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).
func (o DiscoveryClientOutput) HeartbeatTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.HeartbeatTime }).(pulumi.StringOutput)
}

// Optional. Labels as key value pairs.
func (o DiscoveryClientOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o DiscoveryClientOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. Full name of this discovery client.
func (o DiscoveryClientOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DiscoveryClientOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o DiscoveryClientOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Service account used by the discovery client for various operation.
func (o DiscoveryClientOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// This field is intended for internal use.
func (o DiscoveryClientOutput) SignalsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.SignalsEndpoint }).(pulumi.StringOutput)
}

// Full name of the source object associated with this discovery client.
func (o DiscoveryClientOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Current state of the discovery client.
func (o DiscoveryClientOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
func (o DiscoveryClientOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Ttl }).(pulumi.StringOutput)
}

// Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.
func (o DiscoveryClientOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Client version, as reported in recent heartbeat.
func (o DiscoveryClientOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryClient) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryClientInput)(nil)).Elem(), &DiscoveryClient{})
	pulumi.RegisterOutputType(DiscoveryClientOutput{})
}
