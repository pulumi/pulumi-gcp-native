// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the details of a discovery client.
func LookupDiscoveryClient(ctx *pulumi.Context, args *LookupDiscoveryClientArgs, opts ...pulumi.InvokeOption) (*LookupDiscoveryClientResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiscoveryClientResult
	err := ctx.Invoke("google-native:migrationcenter/v1:getDiscoveryClient", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiscoveryClientArgs struct {
	DiscoveryClientId string  `pulumi:"discoveryClientId"`
	Location          string  `pulumi:"location"`
	Project           *string `pulumi:"project"`
}

type LookupDiscoveryClientResult struct {
	// Time when the discovery client was first created.
	CreateTime string `pulumi:"createTime"`
	// Optional. Free text description. Maximum length is 1000 characters.
	Description string `pulumi:"description"`
	// Optional. Free text display name. Maximum length is 63 characters.
	DisplayName string `pulumi:"displayName"`
	// Errors affecting client functionality.
	Errors []StatusResponse `pulumi:"errors"`
	// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
	ExpireTime string `pulumi:"expireTime"`
	// Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).
	HeartbeatTime string `pulumi:"heartbeatTime"`
	// Optional. Labels as key value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Identifier. Full name of this discovery client.
	Name string `pulumi:"name"`
	// Service account used by the discovery client for various operation.
	ServiceAccount string `pulumi:"serviceAccount"`
	// This field is intended for internal use.
	SignalsEndpoint string `pulumi:"signalsEndpoint"`
	// Immutable. Full name of the source object associated with this discovery client.
	Source string `pulumi:"source"`
	// Current state of the discovery client.
	State string `pulumi:"state"`
	// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
	Ttl string `pulumi:"ttl"`
	// Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.
	UpdateTime string `pulumi:"updateTime"`
	// Client version, as reported in recent heartbeat.
	Version string `pulumi:"version"`
}

func LookupDiscoveryClientOutput(ctx *pulumi.Context, args LookupDiscoveryClientOutputArgs, opts ...pulumi.InvokeOption) LookupDiscoveryClientResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDiscoveryClientResult, error) {
			args := v.(LookupDiscoveryClientArgs)
			r, err := LookupDiscoveryClient(ctx, &args, opts...)
			var s LookupDiscoveryClientResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDiscoveryClientResultOutput)
}

type LookupDiscoveryClientOutputArgs struct {
	DiscoveryClientId pulumi.StringInput    `pulumi:"discoveryClientId"`
	Location          pulumi.StringInput    `pulumi:"location"`
	Project           pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupDiscoveryClientOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryClientArgs)(nil)).Elem()
}

type LookupDiscoveryClientResultOutput struct{ *pulumi.OutputState }

func (LookupDiscoveryClientResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiscoveryClientResult)(nil)).Elem()
}

func (o LookupDiscoveryClientResultOutput) ToLookupDiscoveryClientResultOutput() LookupDiscoveryClientResultOutput {
	return o
}

func (o LookupDiscoveryClientResultOutput) ToLookupDiscoveryClientResultOutputWithContext(ctx context.Context) LookupDiscoveryClientResultOutput {
	return o
}

// Time when the discovery client was first created.
func (o LookupDiscoveryClientResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Free text description. Maximum length is 1000 characters.
func (o LookupDiscoveryClientResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.Description }).(pulumi.StringOutput)
}

// Optional. Free text display name. Maximum length is 63 characters.
func (o LookupDiscoveryClientResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Errors affecting client functionality.
func (o LookupDiscoveryClientResultOutput) Errors() StatusResponseArrayOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) []StatusResponse { return v.Errors }).(StatusResponseArrayOutput)
}

// Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
func (o LookupDiscoveryClientResultOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).
func (o LookupDiscoveryClientResultOutput) HeartbeatTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.HeartbeatTime }).(pulumi.StringOutput)
}

// Optional. Labels as key value pairs.
func (o LookupDiscoveryClientResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Identifier. Full name of this discovery client.
func (o LookupDiscoveryClientResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.Name }).(pulumi.StringOutput)
}

// Service account used by the discovery client for various operation.
func (o LookupDiscoveryClientResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// This field is intended for internal use.
func (o LookupDiscoveryClientResultOutput) SignalsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.SignalsEndpoint }).(pulumi.StringOutput)
}

// Immutable. Full name of the source object associated with this discovery client.
func (o LookupDiscoveryClientResultOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.Source }).(pulumi.StringOutput)
}

// Current state of the discovery client.
func (o LookupDiscoveryClientResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.State }).(pulumi.StringOutput)
}

// Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
func (o LookupDiscoveryClientResultOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.Ttl }).(pulumi.StringOutput)
}

// Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.
func (o LookupDiscoveryClientResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// Client version, as reported in recent heartbeat.
func (o LookupDiscoveryClientResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDiscoveryClientResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiscoveryClientResultOutput{})
}
