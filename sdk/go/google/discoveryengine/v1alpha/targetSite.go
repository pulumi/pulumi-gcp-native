// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a TargetSite.
// Auto-naming is currently not supported for this resource.
type TargetSite struct {
	pulumi.CustomResourceState

	CollectionId pulumi.StringOutput `pulumi:"collectionId"`
	DataStoreId  pulumi.StringOutput `pulumi:"dataStoreId"`
	// Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
	ExactMatch pulumi.BoolOutput `pulumi:"exactMatch"`
	// Failure reason.
	FailureReason GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonResponseOutput `pulumi:"failureReason"`
	// This is system-generated based on the provided_uri_pattern.
	GeneratedUriPattern pulumi.StringOutput `pulumi:"generatedUriPattern"`
	// Indexing status.
	IndexingStatus pulumi.StringOutput `pulumi:"indexingStatus"`
	Location       pulumi.StringOutput `pulumi:"location"`
	// The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
	ProvidedUriPattern pulumi.StringOutput `pulumi:"providedUriPattern"`
	// Site ownership and validity verification status.
	SiteVerificationInfo GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoResponseOutput `pulumi:"siteVerificationInfo"`
	// The type of the target site, e.g., whether the site is to be included or excluded.
	Type pulumi.StringOutput `pulumi:"type"`
	// The target site's last updated time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewTargetSite registers a new resource with the given unique name, arguments, and options.
func NewTargetSite(ctx *pulumi.Context,
	name string, args *TargetSiteArgs, opts ...pulumi.ResourceOption) (*TargetSite, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectionId == nil {
		return nil, errors.New("invalid value for required argument 'CollectionId'")
	}
	if args.DataStoreId == nil {
		return nil, errors.New("invalid value for required argument 'DataStoreId'")
	}
	if args.ProvidedUriPattern == nil {
		return nil, errors.New("invalid value for required argument 'ProvidedUriPattern'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"collectionId",
		"dataStoreId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TargetSite
	err := ctx.RegisterResource("google-native:discoveryengine/v1alpha:TargetSite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetSite gets an existing TargetSite resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetSite(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetSiteState, opts ...pulumi.ResourceOption) (*TargetSite, error) {
	var resource TargetSite
	err := ctx.ReadResource("google-native:discoveryengine/v1alpha:TargetSite", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetSite resources.
type targetSiteState struct {
}

type TargetSiteState struct {
}

func (TargetSiteState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetSiteState)(nil)).Elem()
}

type targetSiteArgs struct {
	CollectionId string `pulumi:"collectionId"`
	DataStoreId  string `pulumi:"dataStoreId"`
	// Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
	ExactMatch *bool   `pulumi:"exactMatch"`
	Location   *string `pulumi:"location"`
	Project    *string `pulumi:"project"`
	// Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
	ProvidedUriPattern string `pulumi:"providedUriPattern"`
	// The type of the target site, e.g., whether the site is to be included or excluded.
	Type *TargetSiteType `pulumi:"type"`
}

// The set of arguments for constructing a TargetSite resource.
type TargetSiteArgs struct {
	CollectionId pulumi.StringInput
	DataStoreId  pulumi.StringInput
	// Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
	ExactMatch pulumi.BoolPtrInput
	Location   pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
	// Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
	ProvidedUriPattern pulumi.StringInput
	// The type of the target site, e.g., whether the site is to be included or excluded.
	Type TargetSiteTypePtrInput
}

func (TargetSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetSiteArgs)(nil)).Elem()
}

type TargetSiteInput interface {
	pulumi.Input

	ToTargetSiteOutput() TargetSiteOutput
	ToTargetSiteOutputWithContext(ctx context.Context) TargetSiteOutput
}

func (*TargetSite) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetSite)(nil)).Elem()
}

func (i *TargetSite) ToTargetSiteOutput() TargetSiteOutput {
	return i.ToTargetSiteOutputWithContext(context.Background())
}

func (i *TargetSite) ToTargetSiteOutputWithContext(ctx context.Context) TargetSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetSiteOutput)
}

type TargetSiteOutput struct{ *pulumi.OutputState }

func (TargetSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetSite)(nil)).Elem()
}

func (o TargetSiteOutput) ToTargetSiteOutput() TargetSiteOutput {
	return o
}

func (o TargetSiteOutput) ToTargetSiteOutputWithContext(ctx context.Context) TargetSiteOutput {
	return o
}

func (o TargetSiteOutput) CollectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.CollectionId }).(pulumi.StringOutput)
}

func (o TargetSiteOutput) DataStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.DataStoreId }).(pulumi.StringOutput)
}

// Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
func (o TargetSiteOutput) ExactMatch() pulumi.BoolOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.BoolOutput { return v.ExactMatch }).(pulumi.BoolOutput)
}

// Failure reason.
func (o TargetSiteOutput) FailureReason() GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonResponseOutput {
	return o.ApplyT(func(v *TargetSite) GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonResponseOutput {
		return v.FailureReason
	}).(GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonResponseOutput)
}

// This is system-generated based on the provided_uri_pattern.
func (o TargetSiteOutput) GeneratedUriPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.GeneratedUriPattern }).(pulumi.StringOutput)
}

// Indexing status.
func (o TargetSiteOutput) IndexingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.IndexingStatus }).(pulumi.StringOutput)
}

func (o TargetSiteOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
func (o TargetSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TargetSiteOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
func (o TargetSiteOutput) ProvidedUriPattern() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.ProvidedUriPattern }).(pulumi.StringOutput)
}

// Site ownership and validity verification status.
func (o TargetSiteOutput) SiteVerificationInfo() GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoResponseOutput {
	return o.ApplyT(func(v *TargetSite) GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoResponseOutput {
		return v.SiteVerificationInfo
	}).(GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoResponseOutput)
}

// The type of the target site, e.g., whether the site is to be included or excluded.
func (o TargetSiteOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The target site's last updated time.
func (o TargetSiteOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TargetSite) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TargetSiteInput)(nil)).Elem(), &TargetSite{})
	pulumi.RegisterOutputType(TargetSiteOutput{})
}
