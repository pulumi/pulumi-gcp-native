// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy for a billing account. Replaces any existing policy. The caller must have the `billing.accounts.setIamPolicy` permission on the account, which is often given to billing account [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
type BillingAccountIamPolicy struct {
	pulumi.CustomResourceState
}

// NewBillingAccountIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBillingAccountIamPolicy(ctx *pulumi.Context,
	name string, args *BillingAccountIamPolicyArgs, opts ...pulumi.ResourceOption) (*BillingAccountIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountsId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountsId'")
	}
	var resource BillingAccountIamPolicy
	err := ctx.RegisterResource("google-cloud:cloudbilling/v1:BillingAccountIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingAccountIamPolicy gets an existing BillingAccountIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingAccountIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingAccountIamPolicyState, opts ...pulumi.ResourceOption) (*BillingAccountIamPolicy, error) {
	var resource BillingAccountIamPolicy
	err := ctx.ReadResource("google-cloud:cloudbilling/v1:BillingAccountIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingAccountIamPolicy resources.
type billingAccountIamPolicyState struct {
}

type BillingAccountIamPolicyState struct {
}

func (BillingAccountIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingAccountIamPolicyState)(nil)).Elem()
}

type billingAccountIamPolicyArgs struct {
	BillingAccountsId string `pulumi:"billingAccountsId"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy *Policy `pulumi:"policy"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a BillingAccountIamPolicy resource.
type BillingAccountIamPolicyArgs struct {
	BillingAccountsId pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy PolicyPtrInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (BillingAccountIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingAccountIamPolicyArgs)(nil)).Elem()
}

type BillingAccountIamPolicyInput interface {
	pulumi.Input

	ToBillingAccountIamPolicyOutput() BillingAccountIamPolicyOutput
	ToBillingAccountIamPolicyOutputWithContext(ctx context.Context) BillingAccountIamPolicyOutput
}

func (*BillingAccountIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountIamPolicy)(nil))
}

func (i *BillingAccountIamPolicy) ToBillingAccountIamPolicyOutput() BillingAccountIamPolicyOutput {
	return i.ToBillingAccountIamPolicyOutputWithContext(context.Background())
}

func (i *BillingAccountIamPolicy) ToBillingAccountIamPolicyOutputWithContext(ctx context.Context) BillingAccountIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingAccountIamPolicyOutput)
}

type BillingAccountIamPolicyOutput struct {
	*pulumi.OutputState
}

func (BillingAccountIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingAccountIamPolicy)(nil))
}

func (o BillingAccountIamPolicyOutput) ToBillingAccountIamPolicyOutput() BillingAccountIamPolicyOutput {
	return o
}

func (o BillingAccountIamPolicyOutput) ToBillingAccountIamPolicyOutputWithContext(ctx context.Context) BillingAccountIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BillingAccountIamPolicyOutput{})
}
