// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Backup.
func LookupBackup(ctx *pulumi.Context, args *LookupBackupArgs, opts ...pulumi.InvokeOption) (*LookupBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupResult
	err := ctx.Invoke("google-native:alloydb/v1beta:getBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBackupArgs struct {
	BackupId string  `pulumi:"backupId"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
}

type LookupBackupResult struct {
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
	Annotations map[string]string `pulumi:"annotations"`
	// The full resource name of the backup source cluster (e.g., projects/{project}/locations/{region}/clusters/{cluster_id}).
	ClusterName string `pulumi:"clusterName"`
	// The system-generated UID of the cluster which was used to create this resource.
	ClusterUid string `pulumi:"clusterUid"`
	// Create time stamp
	CreateTime string `pulumi:"createTime"`
	// The database engine major version of the cluster this backup was created from. Any restored cluster created from this backup will have the same database version.
	DatabaseVersion string `pulumi:"databaseVersion"`
	// Delete time stamp
	DeleteTime string `pulumi:"deleteTime"`
	// User-provided description of the backup.
	Description string `pulumi:"description"`
	// User-settable and human-readable display name for the Backup.
	DisplayName string `pulumi:"displayName"`
	// Optional. The encryption config can be specified to encrypt the backup with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
	EncryptionConfig EncryptionConfigResponse `pulumi:"encryptionConfig"`
	// The encryption information for the backup.
	EncryptionInfo EncryptionInfoResponse `pulumi:"encryptionInfo"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag string `pulumi:"etag"`
	// The QuantityBasedExpiry of the backup, specified by the backup's retention policy. Once the expiry quantity is over retention, the backup is eligible to be garbage collected.
	ExpiryQuantity QuantityBasedExpiryResponse `pulumi:"expiryQuantity"`
	// The time at which after the backup is eligible to be garbage collected. It is the duration specified by the backup's retention policy, added to the backup's create_time.
	ExpiryTime string `pulumi:"expiryTime"`
	// Labels as key value pairs
	Labels map[string]string `pulumi:"labels"`
	// The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id} where the cluster and backup ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the backup resource name is the name of the parent resource: * projects/{project}/locations/{region}
	Name string `pulumi:"name"`
	// Reconciling (https://google.aip.dev/128#reconciliation), if true, indicates that the service is actively updating the resource. This can happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling bool `pulumi:"reconciling"`
	// The size of the backup in bytes.
	SizeBytes string `pulumi:"sizeBytes"`
	// The current state of the backup.
	State string `pulumi:"state"`
	// The backup type, which suggests the trigger for the backup.
	Type string `pulumi:"type"`
	// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
	Uid string `pulumi:"uid"`
	// Update time stamp
	UpdateTime string `pulumi:"updateTime"`
}

func LookupBackupOutput(ctx *pulumi.Context, args LookupBackupOutputArgs, opts ...pulumi.InvokeOption) LookupBackupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupResult, error) {
			args := v.(LookupBackupArgs)
			r, err := LookupBackup(ctx, &args, opts...)
			var s LookupBackupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackupResultOutput)
}

type LookupBackupOutputArgs struct {
	BackupId pulumi.StringInput    `pulumi:"backupId"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupArgs)(nil)).Elem()
}

type LookupBackupResultOutput struct{ *pulumi.OutputState }

func (LookupBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupResult)(nil)).Elem()
}

func (o LookupBackupResultOutput) ToLookupBackupResultOutput() LookupBackupResultOutput {
	return o
}

func (o LookupBackupResultOutput) ToLookupBackupResultOutputWithContext(ctx context.Context) LookupBackupResultOutput {
	return o
}

// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
func (o LookupBackupResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// The full resource name of the backup source cluster (e.g., projects/{project}/locations/{region}/clusters/{cluster_id}).
func (o LookupBackupResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The system-generated UID of the cluster which was used to create this resource.
func (o LookupBackupResultOutput) ClusterUid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.ClusterUid }).(pulumi.StringOutput)
}

// Create time stamp
func (o LookupBackupResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The database engine major version of the cluster this backup was created from. Any restored cluster created from this backup will have the same database version.
func (o LookupBackupResultOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// Delete time stamp
func (o LookupBackupResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// User-provided description of the backup.
func (o LookupBackupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Description }).(pulumi.StringOutput)
}

// User-settable and human-readable display name for the Backup.
func (o LookupBackupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. The encryption config can be specified to encrypt the backup with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
func (o LookupBackupResultOutput) EncryptionConfig() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v LookupBackupResult) EncryptionConfigResponse { return v.EncryptionConfig }).(EncryptionConfigResponseOutput)
}

// The encryption information for the backup.
func (o LookupBackupResultOutput) EncryptionInfo() EncryptionInfoResponseOutput {
	return o.ApplyT(func(v LookupBackupResult) EncryptionInfoResponse { return v.EncryptionInfo }).(EncryptionInfoResponseOutput)
}

// For Resource freshness validation (https://google.aip.dev/154)
func (o LookupBackupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The QuantityBasedExpiry of the backup, specified by the backup's retention policy. Once the expiry quantity is over retention, the backup is eligible to be garbage collected.
func (o LookupBackupResultOutput) ExpiryQuantity() QuantityBasedExpiryResponseOutput {
	return o.ApplyT(func(v LookupBackupResult) QuantityBasedExpiryResponse { return v.ExpiryQuantity }).(QuantityBasedExpiryResponseOutput)
}

// The time at which after the backup is eligible to be garbage collected. It is the duration specified by the backup's retention policy, added to the backup's create_time.
func (o LookupBackupResultOutput) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.ExpiryTime }).(pulumi.StringOutput)
}

// Labels as key value pairs
func (o LookupBackupResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backup_id} where the cluster and backup ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the backup resource name is the name of the parent resource: * projects/{project}/locations/{region}
func (o LookupBackupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Name }).(pulumi.StringOutput)
}

// Reconciling (https://google.aip.dev/128#reconciliation), if true, indicates that the service is actively updating the resource. This can happen due to user-triggered updates or system actions like failover or maintenance.
func (o LookupBackupResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBackupResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

// The size of the backup in bytes.
func (o LookupBackupResultOutput) SizeBytes() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.SizeBytes }).(pulumi.StringOutput)
}

// The current state of the backup.
func (o LookupBackupResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.State }).(pulumi.StringOutput)
}

// The backup type, which suggests the trigger for the backup.
func (o LookupBackupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Type }).(pulumi.StringOutput)
}

// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
func (o LookupBackupResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Update time stamp
func (o LookupBackupResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupResultOutput{})
}
