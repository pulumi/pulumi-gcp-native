// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new Cluster in a given project and location.
// Auto-naming is currently not supported for this resource.
type Cluster struct {
	pulumi.CustomResourceState

	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
	AutomatedBackupPolicy AutomatedBackupPolicyResponseOutput `pulumi:"automatedBackupPolicy"`
	// Cluster created from backup.
	BackupSource BackupSourceResponseOutput `pulumi:"backupSource"`
	// Required. ID of the requesting object.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The type of the cluster. This is an output-only field and it's populated at the Cluster creation time or the Cluster promotion time. The cluster type is determined by which RPC was used to create the cluster (i.e. `CreateCluster` vs. `CreateSecondaryCluster`
	ClusterType pulumi.StringOutput `pulumi:"clusterType"`
	// Optional. Continuous backup configuration for this cluster.
	ContinuousBackupConfig ContinuousBackupConfigResponseOutput `pulumi:"continuousBackupConfig"`
	// Continuous backup properties for this cluster.
	ContinuousBackupInfo ContinuousBackupInfoResponseOutput `pulumi:"continuousBackupInfo"`
	// Create time stamp
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// Delete time stamp
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// User-settable and human-readable display name for the Cluster.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
	EncryptionConfig EncryptionConfigResponseOutput `pulumi:"encryptionConfig"`
	// The encryption information for the cluster.
	EncryptionInfo EncryptionInfoResponseOutput `pulumi:"encryptionInfo"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
	InitialUser UserPasswordResponseOutput `pulumi:"initialUser"`
	// Labels as key value pairs
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Cluster created via DMS migration.
	MigrationSource MigrationSourceResponseOutput `pulumi:"migrationSource"`
	// The name of the cluster resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id} where the cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The prefix of the cluster resource name is the name of the parent resource: * projects/{project}/locations/{region}
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	//
	// Deprecated: Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	Network       pulumi.StringOutput         `pulumi:"network"`
	NetworkConfig NetworkConfigResponseOutput `pulumi:"networkConfig"`
	// Cross Region replication config specific to PRIMARY cluster.
	PrimaryConfig PrimaryConfigResponseOutput `pulumi:"primaryConfig"`
	Project       pulumi.StringOutput         `pulumi:"project"`
	// Optional. The configuration for Private Service Connect (PSC) for the cluster.
	PscConfig PscConfigResponseOutput `pulumi:"pscConfig"`
	// Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// Cross Region replication config specific to SECONDARY cluster.
	SecondaryConfig SecondaryConfigResponseOutput `pulumi:"secondaryConfig"`
	// SSL configuration for this AlloyDB cluster.
	SslConfig SslConfigResponseOutput `pulumi:"sslConfig"`
	// The current serving state of the cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Update time stamp
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"clusterId",
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("google-native:alloydb/v1alpha:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("google-native:alloydb/v1alpha:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
}

type ClusterState struct {
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
	Annotations map[string]string `pulumi:"annotations"`
	// The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
	AutomatedBackupPolicy *AutomatedBackupPolicy `pulumi:"automatedBackupPolicy"`
	// Required. ID of the requesting object.
	ClusterId string `pulumi:"clusterId"`
	// Optional. Continuous backup configuration for this cluster.
	ContinuousBackupConfig *ContinuousBackupConfig `pulumi:"continuousBackupConfig"`
	// Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
	DatabaseVersion *ClusterDatabaseVersion `pulumi:"databaseVersion"`
	// User-settable and human-readable display name for the Cluster.
	DisplayName *string `pulumi:"displayName"`
	// Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
	EncryptionConfig *EncryptionConfig `pulumi:"encryptionConfig"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag *string `pulumi:"etag"`
	// Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
	InitialUser *UserPassword `pulumi:"initialUser"`
	// Labels as key value pairs
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	//
	// Deprecated: Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	Network       string         `pulumi:"network"`
	NetworkConfig *NetworkConfig `pulumi:"networkConfig"`
	Project       *string        `pulumi:"project"`
	// Optional. The configuration for Private Service Connect (PSC) for the cluster.
	PscConfig *PscConfig `pulumi:"pscConfig"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Cross Region replication config specific to SECONDARY cluster.
	SecondaryConfig *SecondaryConfig `pulumi:"secondaryConfig"`
	// SSL configuration for this AlloyDB cluster.
	SslConfig *SslConfig `pulumi:"sslConfig"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
	Annotations pulumi.StringMapInput
	// The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
	AutomatedBackupPolicy AutomatedBackupPolicyPtrInput
	// Required. ID of the requesting object.
	ClusterId pulumi.StringInput
	// Optional. Continuous backup configuration for this cluster.
	ContinuousBackupConfig ContinuousBackupConfigPtrInput
	// Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
	DatabaseVersion ClusterDatabaseVersionPtrInput
	// User-settable and human-readable display name for the Cluster.
	DisplayName pulumi.StringPtrInput
	// Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
	EncryptionConfig EncryptionConfigPtrInput
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringPtrInput
	// Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
	InitialUser UserPasswordPtrInput
	// Labels as key value pairs
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	//
	// Deprecated: Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
	Network       pulumi.StringInput
	NetworkConfig NetworkConfigPtrInput
	Project       pulumi.StringPtrInput
	// Optional. The configuration for Private Service Connect (PSC) for the cluster.
	PscConfig PscConfigPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Cross Region replication config specific to SECONDARY cluster.
	SecondaryConfig SecondaryConfigPtrInput
	// SSL configuration for this AlloyDB cluster.
	SslConfig SslConfigPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

func (i *Cluster) ToOutput(ctx context.Context) pulumix.Output[*Cluster] {
	return pulumix.Output[*Cluster]{
		OutputState: i.ToClusterOutputWithContext(ctx).OutputState,
	}
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ToOutput(ctx context.Context) pulumix.Output[*Cluster] {
	return pulumix.Output[*Cluster]{
		OutputState: o.OutputState,
	}
}

// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
func (o ClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
func (o ClusterOutput) AutomatedBackupPolicy() AutomatedBackupPolicyResponseOutput {
	return o.ApplyT(func(v *Cluster) AutomatedBackupPolicyResponseOutput { return v.AutomatedBackupPolicy }).(AutomatedBackupPolicyResponseOutput)
}

// Cluster created from backup.
func (o ClusterOutput) BackupSource() BackupSourceResponseOutput {
	return o.ApplyT(func(v *Cluster) BackupSourceResponseOutput { return v.BackupSource }).(BackupSourceResponseOutput)
}

// Required. ID of the requesting object.
func (o ClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The type of the cluster. This is an output-only field and it's populated at the Cluster creation time or the Cluster promotion time. The cluster type is determined by which RPC was used to create the cluster (i.e. `CreateCluster` vs. `CreateSecondaryCluster`
func (o ClusterOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterType }).(pulumi.StringOutput)
}

// Optional. Continuous backup configuration for this cluster.
func (o ClusterOutput) ContinuousBackupConfig() ContinuousBackupConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) ContinuousBackupConfigResponseOutput { return v.ContinuousBackupConfig }).(ContinuousBackupConfigResponseOutput)
}

// Continuous backup properties for this cluster.
func (o ClusterOutput) ContinuousBackupInfo() ContinuousBackupInfoResponseOutput {
	return o.ApplyT(func(v *Cluster) ContinuousBackupInfoResponseOutput { return v.ContinuousBackupInfo }).(ContinuousBackupInfoResponseOutput)
}

// Create time stamp
func (o ClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
func (o ClusterOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// Delete time stamp
func (o ClusterOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// User-settable and human-readable display name for the Cluster.
func (o ClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
func (o ClusterOutput) EncryptionConfig() EncryptionConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) EncryptionConfigResponseOutput { return v.EncryptionConfig }).(EncryptionConfigResponseOutput)
}

// The encryption information for the cluster.
func (o ClusterOutput) EncryptionInfo() EncryptionInfoResponseOutput {
	return o.ApplyT(func(v *Cluster) EncryptionInfoResponseOutput { return v.EncryptionInfo }).(EncryptionInfoResponseOutput)
}

// For Resource freshness validation (https://google.aip.dev/154)
func (o ClusterOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
func (o ClusterOutput) InitialUser() UserPasswordResponseOutput {
	return o.ApplyT(func(v *Cluster) UserPasswordResponseOutput { return v.InitialUser }).(UserPasswordResponseOutput)
}

// Labels as key value pairs
func (o ClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Cluster created via DMS migration.
func (o ClusterOutput) MigrationSource() MigrationSourceResponseOutput {
	return o.ApplyT(func(v *Cluster) MigrationSourceResponseOutput { return v.MigrationSource }).(MigrationSourceResponseOutput)
}

// The name of the cluster resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id} where the cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The prefix of the cluster resource name is the name of the parent resource: * projects/{project}/locations/{region}
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
//
// Deprecated: Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
func (o ClusterOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o ClusterOutput) NetworkConfig() NetworkConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) NetworkConfigResponseOutput { return v.NetworkConfig }).(NetworkConfigResponseOutput)
}

// Cross Region replication config specific to PRIMARY cluster.
func (o ClusterOutput) PrimaryConfig() PrimaryConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) PrimaryConfigResponseOutput { return v.PrimaryConfig }).(PrimaryConfigResponseOutput)
}

func (o ClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. The configuration for Private Service Connect (PSC) for the cluster.
func (o ClusterOutput) PscConfig() PscConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) PscConfigResponseOutput { return v.PscConfig }).(PscConfigResponseOutput)
}

// Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
func (o ClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ClusterOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o ClusterOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// Cross Region replication config specific to SECONDARY cluster.
func (o ClusterOutput) SecondaryConfig() SecondaryConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) SecondaryConfigResponseOutput { return v.SecondaryConfig }).(SecondaryConfigResponseOutput)
}

// SSL configuration for this AlloyDB cluster.
func (o ClusterOutput) SslConfig() SslConfigResponseOutput {
	return o.ApplyT(func(v *Cluster) SslConfigResponseOutput { return v.SslConfig }).(SslConfigResponseOutput)
}

// The current serving state of the cluster.
func (o ClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
func (o ClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Update time stamp
func (o ClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterOutputType(ClusterOutput{})
}
