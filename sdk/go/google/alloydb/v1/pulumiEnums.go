// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The backup type, which suggests the trigger for the backup.
type BackupType string

const (
	// Backup Type is unknown.
	BackupTypeTypeUnspecified = BackupType("TYPE_UNSPECIFIED")
	// ON_DEMAND backups that were triggered by the customer (e.g., not AUTOMATED).
	BackupTypeOnDemand = BackupType("ON_DEMAND")
	// AUTOMATED backups triggered by the automated backups scheduler pursuant to an automated backup policy.
	BackupTypeAutomated = BackupType("AUTOMATED")
	// CONTINUOUS backups triggered by the automated backups scheduler due to a continuous backup policy.
	BackupTypeContinuous = BackupType("CONTINUOUS")
)

func (BackupType) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (e BackupType) ToBackupTypeOutput() BackupTypeOutput {
	return pulumi.ToOutput(e).(BackupTypeOutput)
}

func (e BackupType) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupTypeOutput)
}

func (e BackupType) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return e.ToBackupTypePtrOutputWithContext(context.Background())
}

func (e BackupType) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return BackupType(e).ToBackupTypeOutputWithContext(ctx).ToBackupTypePtrOutputWithContext(ctx)
}

func (e BackupType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupTypeOutput struct{ *pulumi.OutputState }

func (BackupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupType)(nil)).Elem()
}

func (o BackupTypeOutput) ToBackupTypeOutput() BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ToBackupTypeOutputWithContext(ctx context.Context) BackupTypeOutput {
	return o
}

func (o BackupTypeOutput) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return o.ToBackupTypePtrOutputWithContext(context.Background())
}

func (o BackupTypeOutput) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupType) *BackupType {
		return &v
	}).(BackupTypePtrOutput)
}

func (o BackupTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupTypePtrOutput struct{ *pulumi.OutputState }

func (BackupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupType)(nil)).Elem()
}

func (o BackupTypePtrOutput) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return o
}

func (o BackupTypePtrOutput) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return o
}

func (o BackupTypePtrOutput) Elem() BackupTypeOutput {
	return o.ApplyT(func(v *BackupType) BackupType {
		if v != nil {
			return *v
		}
		var ret BackupType
		return ret
	}).(BackupTypeOutput)
}

func (o BackupTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BackupTypeInput is an input type that accepts values of the BackupType enum
// A concrete instance of `BackupTypeInput` can be one of the following:
//
//	BackupTypeTypeUnspecified
//	BackupTypeOnDemand
//	BackupTypeAutomated
//	BackupTypeContinuous
type BackupTypeInput interface {
	pulumi.Input

	ToBackupTypeOutput() BackupTypeOutput
	ToBackupTypeOutputWithContext(context.Context) BackupTypeOutput
}

var backupTypePtrType = reflect.TypeOf((**BackupType)(nil)).Elem()

type BackupTypePtrInput interface {
	pulumi.Input

	ToBackupTypePtrOutput() BackupTypePtrOutput
	ToBackupTypePtrOutputWithContext(context.Context) BackupTypePtrOutput
}

type backupTypePtr string

func BackupTypePtr(v string) BackupTypePtrInput {
	return (*backupTypePtr)(&v)
}

func (*backupTypePtr) ElementType() reflect.Type {
	return backupTypePtrType
}

func (in *backupTypePtr) ToBackupTypePtrOutput() BackupTypePtrOutput {
	return pulumi.ToOutput(in).(BackupTypePtrOutput)
}

func (in *backupTypePtr) ToBackupTypePtrOutputWithContext(ctx context.Context) BackupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupTypePtrOutput)
}

func (in *backupTypePtr) ToOutput(ctx context.Context) pulumix.Output[*BackupType] {
	return pulumix.Output[*BackupType]{
		OutputState: in.ToBackupTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
type ClusterDatabaseVersion string

const (
	// This is an unknown database version.
	ClusterDatabaseVersionDatabaseVersionUnspecified = ClusterDatabaseVersion("DATABASE_VERSION_UNSPECIFIED")
	// DEPRECATED - The database version is Postgres 13.
	ClusterDatabaseVersionPostgres13 = ClusterDatabaseVersion("POSTGRES_13")
	// The database version is Postgres 14.
	ClusterDatabaseVersionPostgres14 = ClusterDatabaseVersion("POSTGRES_14")
	// The database version is Postgres 15.
	ClusterDatabaseVersionPostgres15 = ClusterDatabaseVersion("POSTGRES_15")
)

func (ClusterDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseVersion)(nil)).Elem()
}

func (e ClusterDatabaseVersion) ToClusterDatabaseVersionOutput() ClusterDatabaseVersionOutput {
	return pulumi.ToOutput(e).(ClusterDatabaseVersionOutput)
}

func (e ClusterDatabaseVersion) ToClusterDatabaseVersionOutputWithContext(ctx context.Context) ClusterDatabaseVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ClusterDatabaseVersionOutput)
}

func (e ClusterDatabaseVersion) ToClusterDatabaseVersionPtrOutput() ClusterDatabaseVersionPtrOutput {
	return e.ToClusterDatabaseVersionPtrOutputWithContext(context.Background())
}

func (e ClusterDatabaseVersion) ToClusterDatabaseVersionPtrOutputWithContext(ctx context.Context) ClusterDatabaseVersionPtrOutput {
	return ClusterDatabaseVersion(e).ToClusterDatabaseVersionOutputWithContext(ctx).ToClusterDatabaseVersionPtrOutputWithContext(ctx)
}

func (e ClusterDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ClusterDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ClusterDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ClusterDatabaseVersionOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDatabaseVersion)(nil)).Elem()
}

func (o ClusterDatabaseVersionOutput) ToClusterDatabaseVersionOutput() ClusterDatabaseVersionOutput {
	return o
}

func (o ClusterDatabaseVersionOutput) ToClusterDatabaseVersionOutputWithContext(ctx context.Context) ClusterDatabaseVersionOutput {
	return o
}

func (o ClusterDatabaseVersionOutput) ToClusterDatabaseVersionPtrOutput() ClusterDatabaseVersionPtrOutput {
	return o.ToClusterDatabaseVersionPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseVersionOutput) ToClusterDatabaseVersionPtrOutputWithContext(ctx context.Context) ClusterDatabaseVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterDatabaseVersion) *ClusterDatabaseVersion {
		return &v
	}).(ClusterDatabaseVersionPtrOutput)
}

func (o ClusterDatabaseVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ClusterDatabaseVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterDatabaseVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ClusterDatabaseVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ClusterDatabaseVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ClusterDatabaseVersionPtrOutput struct{ *pulumi.OutputState }

func (ClusterDatabaseVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDatabaseVersion)(nil)).Elem()
}

func (o ClusterDatabaseVersionPtrOutput) ToClusterDatabaseVersionPtrOutput() ClusterDatabaseVersionPtrOutput {
	return o
}

func (o ClusterDatabaseVersionPtrOutput) ToClusterDatabaseVersionPtrOutputWithContext(ctx context.Context) ClusterDatabaseVersionPtrOutput {
	return o
}

func (o ClusterDatabaseVersionPtrOutput) Elem() ClusterDatabaseVersionOutput {
	return o.ApplyT(func(v *ClusterDatabaseVersion) ClusterDatabaseVersion {
		if v != nil {
			return *v
		}
		var ret ClusterDatabaseVersion
		return ret
	}).(ClusterDatabaseVersionOutput)
}

func (o ClusterDatabaseVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ClusterDatabaseVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ClusterDatabaseVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ClusterDatabaseVersionInput is an input type that accepts values of the ClusterDatabaseVersion enum
// A concrete instance of `ClusterDatabaseVersionInput` can be one of the following:
//
//	ClusterDatabaseVersionDatabaseVersionUnspecified
//	ClusterDatabaseVersionPostgres13
//	ClusterDatabaseVersionPostgres14
//	ClusterDatabaseVersionPostgres15
type ClusterDatabaseVersionInput interface {
	pulumi.Input

	ToClusterDatabaseVersionOutput() ClusterDatabaseVersionOutput
	ToClusterDatabaseVersionOutputWithContext(context.Context) ClusterDatabaseVersionOutput
}

var clusterDatabaseVersionPtrType = reflect.TypeOf((**ClusterDatabaseVersion)(nil)).Elem()

type ClusterDatabaseVersionPtrInput interface {
	pulumi.Input

	ToClusterDatabaseVersionPtrOutput() ClusterDatabaseVersionPtrOutput
	ToClusterDatabaseVersionPtrOutputWithContext(context.Context) ClusterDatabaseVersionPtrOutput
}

type clusterDatabaseVersionPtr string

func ClusterDatabaseVersionPtr(v string) ClusterDatabaseVersionPtrInput {
	return (*clusterDatabaseVersionPtr)(&v)
}

func (*clusterDatabaseVersionPtr) ElementType() reflect.Type {
	return clusterDatabaseVersionPtrType
}

func (in *clusterDatabaseVersionPtr) ToClusterDatabaseVersionPtrOutput() ClusterDatabaseVersionPtrOutput {
	return pulumi.ToOutput(in).(ClusterDatabaseVersionPtrOutput)
}

func (in *clusterDatabaseVersionPtr) ToClusterDatabaseVersionPtrOutputWithContext(ctx context.Context) ClusterDatabaseVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ClusterDatabaseVersionPtrOutput)
}

func (in *clusterDatabaseVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*ClusterDatabaseVersion] {
	return pulumix.Output[*ClusterDatabaseVersion]{
		OutputState: in.ToClusterDatabaseVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly distributed across available zones within the region (i.e. read pools with more than one node will have a node in at least two zones).
type InstanceAvailabilityType string

const (
	// This is an unknown Availability type.
	InstanceAvailabilityTypeAvailabilityTypeUnspecified = InstanceAvailabilityType("AVAILABILITY_TYPE_UNSPECIFIED")
	// Zonal available instance.
	InstanceAvailabilityTypeZonal = InstanceAvailabilityType("ZONAL")
	// Regional (or Highly) available instance.
	InstanceAvailabilityTypeRegional = InstanceAvailabilityType("REGIONAL")
)

func (InstanceAvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAvailabilityType)(nil)).Elem()
}

func (e InstanceAvailabilityType) ToInstanceAvailabilityTypeOutput() InstanceAvailabilityTypeOutput {
	return pulumi.ToOutput(e).(InstanceAvailabilityTypeOutput)
}

func (e InstanceAvailabilityType) ToInstanceAvailabilityTypeOutputWithContext(ctx context.Context) InstanceAvailabilityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceAvailabilityTypeOutput)
}

func (e InstanceAvailabilityType) ToInstanceAvailabilityTypePtrOutput() InstanceAvailabilityTypePtrOutput {
	return e.ToInstanceAvailabilityTypePtrOutputWithContext(context.Background())
}

func (e InstanceAvailabilityType) ToInstanceAvailabilityTypePtrOutputWithContext(ctx context.Context) InstanceAvailabilityTypePtrOutput {
	return InstanceAvailabilityType(e).ToInstanceAvailabilityTypeOutputWithContext(ctx).ToInstanceAvailabilityTypePtrOutputWithContext(ctx)
}

func (e InstanceAvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceAvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceAvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceAvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceAvailabilityTypeOutput struct{ *pulumi.OutputState }

func (InstanceAvailabilityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAvailabilityType)(nil)).Elem()
}

func (o InstanceAvailabilityTypeOutput) ToInstanceAvailabilityTypeOutput() InstanceAvailabilityTypeOutput {
	return o
}

func (o InstanceAvailabilityTypeOutput) ToInstanceAvailabilityTypeOutputWithContext(ctx context.Context) InstanceAvailabilityTypeOutput {
	return o
}

func (o InstanceAvailabilityTypeOutput) ToInstanceAvailabilityTypePtrOutput() InstanceAvailabilityTypePtrOutput {
	return o.ToInstanceAvailabilityTypePtrOutputWithContext(context.Background())
}

func (o InstanceAvailabilityTypeOutput) ToInstanceAvailabilityTypePtrOutputWithContext(ctx context.Context) InstanceAvailabilityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAvailabilityType) *InstanceAvailabilityType {
		return &v
	}).(InstanceAvailabilityTypePtrOutput)
}

func (o InstanceAvailabilityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceAvailabilityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceAvailabilityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceAvailabilityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceAvailabilityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceAvailabilityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceAvailabilityTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceAvailabilityTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAvailabilityType)(nil)).Elem()
}

func (o InstanceAvailabilityTypePtrOutput) ToInstanceAvailabilityTypePtrOutput() InstanceAvailabilityTypePtrOutput {
	return o
}

func (o InstanceAvailabilityTypePtrOutput) ToInstanceAvailabilityTypePtrOutputWithContext(ctx context.Context) InstanceAvailabilityTypePtrOutput {
	return o
}

func (o InstanceAvailabilityTypePtrOutput) Elem() InstanceAvailabilityTypeOutput {
	return o.ApplyT(func(v *InstanceAvailabilityType) InstanceAvailabilityType {
		if v != nil {
			return *v
		}
		var ret InstanceAvailabilityType
		return ret
	}).(InstanceAvailabilityTypeOutput)
}

func (o InstanceAvailabilityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceAvailabilityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceAvailabilityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceAvailabilityTypeInput is an input type that accepts values of the InstanceAvailabilityType enum
// A concrete instance of `InstanceAvailabilityTypeInput` can be one of the following:
//
//	InstanceAvailabilityTypeAvailabilityTypeUnspecified
//	InstanceAvailabilityTypeZonal
//	InstanceAvailabilityTypeRegional
type InstanceAvailabilityTypeInput interface {
	pulumi.Input

	ToInstanceAvailabilityTypeOutput() InstanceAvailabilityTypeOutput
	ToInstanceAvailabilityTypeOutputWithContext(context.Context) InstanceAvailabilityTypeOutput
}

var instanceAvailabilityTypePtrType = reflect.TypeOf((**InstanceAvailabilityType)(nil)).Elem()

type InstanceAvailabilityTypePtrInput interface {
	pulumi.Input

	ToInstanceAvailabilityTypePtrOutput() InstanceAvailabilityTypePtrOutput
	ToInstanceAvailabilityTypePtrOutputWithContext(context.Context) InstanceAvailabilityTypePtrOutput
}

type instanceAvailabilityTypePtr string

func InstanceAvailabilityTypePtr(v string) InstanceAvailabilityTypePtrInput {
	return (*instanceAvailabilityTypePtr)(&v)
}

func (*instanceAvailabilityTypePtr) ElementType() reflect.Type {
	return instanceAvailabilityTypePtrType
}

func (in *instanceAvailabilityTypePtr) ToInstanceAvailabilityTypePtrOutput() InstanceAvailabilityTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceAvailabilityTypePtrOutput)
}

func (in *instanceAvailabilityTypePtr) ToInstanceAvailabilityTypePtrOutputWithContext(ctx context.Context) InstanceAvailabilityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceAvailabilityTypePtrOutput)
}

func (in *instanceAvailabilityTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceAvailabilityType] {
	return pulumix.Output[*InstanceAvailabilityType]{
		OutputState: in.ToInstanceAvailabilityTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of the instance. Specified at creation time.
type InstanceInstanceType string

const (
	// The type of the instance is unknown.
	InstanceInstanceTypeInstanceTypeUnspecified = InstanceInstanceType("INSTANCE_TYPE_UNSPECIFIED")
	// PRIMARY instances support read and write operations.
	InstanceInstanceTypePrimary = InstanceInstanceType("PRIMARY")
	// READ POOL instances support read operations only. Each read pool instance consists of one or more homogeneous nodes. * Read pool of size 1 can only have zonal availability. * Read pools with node count of 2 or more can have regional availability (nodes are present in 2 or more zones in a region).
	InstanceInstanceTypeReadPool = InstanceInstanceType("READ_POOL")
	// SECONDARY instances support read operations only. SECONDARY instance is a cross-region read replica
	InstanceInstanceTypeSecondary = InstanceInstanceType("SECONDARY")
)

func (InstanceInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceType)(nil)).Elem()
}

func (e InstanceInstanceType) ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput {
	return pulumi.ToOutput(e).(InstanceInstanceTypeOutput)
}

func (e InstanceInstanceType) ToInstanceInstanceTypeOutputWithContext(ctx context.Context) InstanceInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InstanceInstanceTypeOutput)
}

func (e InstanceInstanceType) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return e.ToInstanceInstanceTypePtrOutputWithContext(context.Background())
}

func (e InstanceInstanceType) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return InstanceInstanceType(e).ToInstanceInstanceTypeOutputWithContext(ctx).ToInstanceInstanceTypePtrOutputWithContext(ctx)
}

func (e InstanceInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceInstanceTypeOutput struct{ *pulumi.OutputState }

func (InstanceInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceInstanceType)(nil)).Elem()
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput {
	return o
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypeOutputWithContext(ctx context.Context) InstanceInstanceTypeOutput {
	return o
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return o.ToInstanceInstanceTypePtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceInstanceType) *InstanceInstanceType {
		return &v
	}).(InstanceInstanceTypePtrOutput)
}

func (o InstanceInstanceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceInstanceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InstanceInstanceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InstanceInstanceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InstanceInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceInstanceType)(nil)).Elem()
}

func (o InstanceInstanceTypePtrOutput) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return o
}

func (o InstanceInstanceTypePtrOutput) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return o
}

func (o InstanceInstanceTypePtrOutput) Elem() InstanceInstanceTypeOutput {
	return o.ApplyT(func(v *InstanceInstanceType) InstanceInstanceType {
		if v != nil {
			return *v
		}
		var ret InstanceInstanceType
		return ret
	}).(InstanceInstanceTypeOutput)
}

func (o InstanceInstanceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InstanceInstanceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InstanceInstanceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InstanceInstanceTypeInput is an input type that accepts values of the InstanceInstanceType enum
// A concrete instance of `InstanceInstanceTypeInput` can be one of the following:
//
//	InstanceInstanceTypeInstanceTypeUnspecified
//	InstanceInstanceTypePrimary
//	InstanceInstanceTypeReadPool
//	InstanceInstanceTypeSecondary
type InstanceInstanceTypeInput interface {
	pulumi.Input

	ToInstanceInstanceTypeOutput() InstanceInstanceTypeOutput
	ToInstanceInstanceTypeOutputWithContext(context.Context) InstanceInstanceTypeOutput
}

var instanceInstanceTypePtrType = reflect.TypeOf((**InstanceInstanceType)(nil)).Elem()

type InstanceInstanceTypePtrInput interface {
	pulumi.Input

	ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput
	ToInstanceInstanceTypePtrOutputWithContext(context.Context) InstanceInstanceTypePtrOutput
}

type instanceInstanceTypePtr string

func InstanceInstanceTypePtr(v string) InstanceInstanceTypePtrInput {
	return (*instanceInstanceTypePtr)(&v)
}

func (*instanceInstanceTypePtr) ElementType() reflect.Type {
	return instanceInstanceTypePtrType
}

func (in *instanceInstanceTypePtr) ToInstanceInstanceTypePtrOutput() InstanceInstanceTypePtrOutput {
	return pulumi.ToOutput(in).(InstanceInstanceTypePtrOutput)
}

func (in *instanceInstanceTypePtr) ToInstanceInstanceTypePtrOutputWithContext(ctx context.Context) InstanceInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InstanceInstanceTypePtrOutput)
}

func (in *instanceInstanceTypePtr) ToOutput(ctx context.Context) pulumix.Output[*InstanceInstanceType] {
	return pulumix.Output[*InstanceInstanceType]{
		OutputState: in.ToInstanceInstanceTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Certificate Authority (CA) source. Only CA_SOURCE_MANAGED is supported currently, and is the default value.
type SslConfigCaSource string

const (
	// Certificate Authority (CA) source not specified. Defaults to CA_SOURCE_MANAGED.
	SslConfigCaSourceCaSourceUnspecified = SslConfigCaSource("CA_SOURCE_UNSPECIFIED")
	// Certificate Authority (CA) managed by the AlloyDB Cluster.
	SslConfigCaSourceCaSourceManaged = SslConfigCaSource("CA_SOURCE_MANAGED")
)

func (SslConfigCaSource) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigCaSource)(nil)).Elem()
}

func (e SslConfigCaSource) ToSslConfigCaSourceOutput() SslConfigCaSourceOutput {
	return pulumi.ToOutput(e).(SslConfigCaSourceOutput)
}

func (e SslConfigCaSource) ToSslConfigCaSourceOutputWithContext(ctx context.Context) SslConfigCaSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigCaSourceOutput)
}

func (e SslConfigCaSource) ToSslConfigCaSourcePtrOutput() SslConfigCaSourcePtrOutput {
	return e.ToSslConfigCaSourcePtrOutputWithContext(context.Background())
}

func (e SslConfigCaSource) ToSslConfigCaSourcePtrOutputWithContext(ctx context.Context) SslConfigCaSourcePtrOutput {
	return SslConfigCaSource(e).ToSslConfigCaSourceOutputWithContext(ctx).ToSslConfigCaSourcePtrOutputWithContext(ctx)
}

func (e SslConfigCaSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigCaSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigCaSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigCaSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigCaSourceOutput struct{ *pulumi.OutputState }

func (SslConfigCaSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigCaSource)(nil)).Elem()
}

func (o SslConfigCaSourceOutput) ToSslConfigCaSourceOutput() SslConfigCaSourceOutput {
	return o
}

func (o SslConfigCaSourceOutput) ToSslConfigCaSourceOutputWithContext(ctx context.Context) SslConfigCaSourceOutput {
	return o
}

func (o SslConfigCaSourceOutput) ToSslConfigCaSourcePtrOutput() SslConfigCaSourcePtrOutput {
	return o.ToSslConfigCaSourcePtrOutputWithContext(context.Background())
}

func (o SslConfigCaSourceOutput) ToSslConfigCaSourcePtrOutputWithContext(ctx context.Context) SslConfigCaSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigCaSource) *SslConfigCaSource {
		return &v
	}).(SslConfigCaSourcePtrOutput)
}

func (o SslConfigCaSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigCaSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigCaSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigCaSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigCaSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigCaSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigCaSourcePtrOutput struct{ *pulumi.OutputState }

func (SslConfigCaSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigCaSource)(nil)).Elem()
}

func (o SslConfigCaSourcePtrOutput) ToSslConfigCaSourcePtrOutput() SslConfigCaSourcePtrOutput {
	return o
}

func (o SslConfigCaSourcePtrOutput) ToSslConfigCaSourcePtrOutputWithContext(ctx context.Context) SslConfigCaSourcePtrOutput {
	return o
}

func (o SslConfigCaSourcePtrOutput) Elem() SslConfigCaSourceOutput {
	return o.ApplyT(func(v *SslConfigCaSource) SslConfigCaSource {
		if v != nil {
			return *v
		}
		var ret SslConfigCaSource
		return ret
	}).(SslConfigCaSourceOutput)
}

func (o SslConfigCaSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigCaSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigCaSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigCaSourceInput is an input type that accepts values of the SslConfigCaSource enum
// A concrete instance of `SslConfigCaSourceInput` can be one of the following:
//
//	SslConfigCaSourceCaSourceUnspecified
//	SslConfigCaSourceCaSourceManaged
type SslConfigCaSourceInput interface {
	pulumi.Input

	ToSslConfigCaSourceOutput() SslConfigCaSourceOutput
	ToSslConfigCaSourceOutputWithContext(context.Context) SslConfigCaSourceOutput
}

var sslConfigCaSourcePtrType = reflect.TypeOf((**SslConfigCaSource)(nil)).Elem()

type SslConfigCaSourcePtrInput interface {
	pulumi.Input

	ToSslConfigCaSourcePtrOutput() SslConfigCaSourcePtrOutput
	ToSslConfigCaSourcePtrOutputWithContext(context.Context) SslConfigCaSourcePtrOutput
}

type sslConfigCaSourcePtr string

func SslConfigCaSourcePtr(v string) SslConfigCaSourcePtrInput {
	return (*sslConfigCaSourcePtr)(&v)
}

func (*sslConfigCaSourcePtr) ElementType() reflect.Type {
	return sslConfigCaSourcePtrType
}

func (in *sslConfigCaSourcePtr) ToSslConfigCaSourcePtrOutput() SslConfigCaSourcePtrOutput {
	return pulumi.ToOutput(in).(SslConfigCaSourcePtrOutput)
}

func (in *sslConfigCaSourcePtr) ToSslConfigCaSourcePtrOutputWithContext(ctx context.Context) SslConfigCaSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigCaSourcePtrOutput)
}

func (in *sslConfigCaSourcePtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigCaSource] {
	return pulumix.Output[*SslConfigCaSource]{
		OutputState: in.ToSslConfigCaSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. SSL mode. Specifies client-server SSL/TLS connection behavior.
type SslConfigSslMode string

const (
	// SSL mode not specified. Defaults to ENCRYPTED_ONLY.
	SslConfigSslModeSslModeUnspecified = SslConfigSslMode("SSL_MODE_UNSPECIFIED")
	// SSL connections are optional. CA verification not enforced.
	SslConfigSslModeSslModeAllow = SslConfigSslMode("SSL_MODE_ALLOW")
	// SSL connections are required. CA verification not enforced. Clients may use locally self-signed certificates (default psql client behavior).
	SslConfigSslModeSslModeRequire = SslConfigSslMode("SSL_MODE_REQUIRE")
	// SSL connections are required. CA verification enforced. Clients must have certificates signed by a Cluster CA, e.g. via GenerateClientCertificate.
	SslConfigSslModeSslModeVerifyCa = SslConfigSslMode("SSL_MODE_VERIFY_CA")
	// SSL connections are optional. CA verification not enforced.
	SslConfigSslModeAllowUnencryptedAndEncrypted = SslConfigSslMode("ALLOW_UNENCRYPTED_AND_ENCRYPTED")
	// SSL connections are required. CA verification not enforced.
	SslConfigSslModeEncryptedOnly = SslConfigSslMode("ENCRYPTED_ONLY")
)

func (SslConfigSslMode) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigSslMode)(nil)).Elem()
}

func (e SslConfigSslMode) ToSslConfigSslModeOutput() SslConfigSslModeOutput {
	return pulumi.ToOutput(e).(SslConfigSslModeOutput)
}

func (e SslConfigSslMode) ToSslConfigSslModeOutputWithContext(ctx context.Context) SslConfigSslModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SslConfigSslModeOutput)
}

func (e SslConfigSslMode) ToSslConfigSslModePtrOutput() SslConfigSslModePtrOutput {
	return e.ToSslConfigSslModePtrOutputWithContext(context.Background())
}

func (e SslConfigSslMode) ToSslConfigSslModePtrOutputWithContext(ctx context.Context) SslConfigSslModePtrOutput {
	return SslConfigSslMode(e).ToSslConfigSslModeOutputWithContext(ctx).ToSslConfigSslModePtrOutputWithContext(ctx)
}

func (e SslConfigSslMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigSslMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SslConfigSslMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SslConfigSslMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SslConfigSslModeOutput struct{ *pulumi.OutputState }

func (SslConfigSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SslConfigSslMode)(nil)).Elem()
}

func (o SslConfigSslModeOutput) ToSslConfigSslModeOutput() SslConfigSslModeOutput {
	return o
}

func (o SslConfigSslModeOutput) ToSslConfigSslModeOutputWithContext(ctx context.Context) SslConfigSslModeOutput {
	return o
}

func (o SslConfigSslModeOutput) ToSslConfigSslModePtrOutput() SslConfigSslModePtrOutput {
	return o.ToSslConfigSslModePtrOutputWithContext(context.Background())
}

func (o SslConfigSslModeOutput) ToSslConfigSslModePtrOutputWithContext(ctx context.Context) SslConfigSslModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SslConfigSslMode) *SslConfigSslMode {
		return &v
	}).(SslConfigSslModePtrOutput)
}

func (o SslConfigSslModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SslConfigSslModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigSslMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SslConfigSslModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigSslModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SslConfigSslMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SslConfigSslModePtrOutput struct{ *pulumi.OutputState }

func (SslConfigSslModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SslConfigSslMode)(nil)).Elem()
}

func (o SslConfigSslModePtrOutput) ToSslConfigSslModePtrOutput() SslConfigSslModePtrOutput {
	return o
}

func (o SslConfigSslModePtrOutput) ToSslConfigSslModePtrOutputWithContext(ctx context.Context) SslConfigSslModePtrOutput {
	return o
}

func (o SslConfigSslModePtrOutput) Elem() SslConfigSslModeOutput {
	return o.ApplyT(func(v *SslConfigSslMode) SslConfigSslMode {
		if v != nil {
			return *v
		}
		var ret SslConfigSslMode
		return ret
	}).(SslConfigSslModeOutput)
}

func (o SslConfigSslModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SslConfigSslModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SslConfigSslMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SslConfigSslModeInput is an input type that accepts values of the SslConfigSslMode enum
// A concrete instance of `SslConfigSslModeInput` can be one of the following:
//
//	SslConfigSslModeSslModeUnspecified
//	SslConfigSslModeSslModeAllow
//	SslConfigSslModeSslModeRequire
//	SslConfigSslModeSslModeVerifyCa
//	SslConfigSslModeAllowUnencryptedAndEncrypted
//	SslConfigSslModeEncryptedOnly
type SslConfigSslModeInput interface {
	pulumi.Input

	ToSslConfigSslModeOutput() SslConfigSslModeOutput
	ToSslConfigSslModeOutputWithContext(context.Context) SslConfigSslModeOutput
}

var sslConfigSslModePtrType = reflect.TypeOf((**SslConfigSslMode)(nil)).Elem()

type SslConfigSslModePtrInput interface {
	pulumi.Input

	ToSslConfigSslModePtrOutput() SslConfigSslModePtrOutput
	ToSslConfigSslModePtrOutputWithContext(context.Context) SslConfigSslModePtrOutput
}

type sslConfigSslModePtr string

func SslConfigSslModePtr(v string) SslConfigSslModePtrInput {
	return (*sslConfigSslModePtr)(&v)
}

func (*sslConfigSslModePtr) ElementType() reflect.Type {
	return sslConfigSslModePtrType
}

func (in *sslConfigSslModePtr) ToSslConfigSslModePtrOutput() SslConfigSslModePtrOutput {
	return pulumi.ToOutput(in).(SslConfigSslModePtrOutput)
}

func (in *sslConfigSslModePtr) ToSslConfigSslModePtrOutputWithContext(ctx context.Context) SslConfigSslModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SslConfigSslModePtrOutput)
}

func (in *sslConfigSslModePtr) ToOutput(ctx context.Context) pulumix.Output[*SslConfigSslMode] {
	return pulumix.Output[*SslConfigSslMode]{
		OutputState: in.ToSslConfigSslModePtrOutputWithContext(ctx).OutputState,
	}
}

// Optional. Type of this user.
type UserUserType string

const (
	// Unspecified user type.
	UserUserTypeUserTypeUnspecified = UserUserType("USER_TYPE_UNSPECIFIED")
	// The default user type that authenticates via password-based authentication.
	UserUserTypeAlloydbBuiltIn = UserUserType("ALLOYDB_BUILT_IN")
	// Database user that can authenticate via IAM-Based authentication.
	UserUserTypeAlloydbIamUser = UserUserType("ALLOYDB_IAM_USER")
)

func (UserUserType) ElementType() reflect.Type {
	return reflect.TypeOf((*UserUserType)(nil)).Elem()
}

func (e UserUserType) ToUserUserTypeOutput() UserUserTypeOutput {
	return pulumi.ToOutput(e).(UserUserTypeOutput)
}

func (e UserUserType) ToUserUserTypeOutputWithContext(ctx context.Context) UserUserTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserUserTypeOutput)
}

func (e UserUserType) ToUserUserTypePtrOutput() UserUserTypePtrOutput {
	return e.ToUserUserTypePtrOutputWithContext(context.Background())
}

func (e UserUserType) ToUserUserTypePtrOutputWithContext(ctx context.Context) UserUserTypePtrOutput {
	return UserUserType(e).ToUserUserTypeOutputWithContext(ctx).ToUserUserTypePtrOutputWithContext(ctx)
}

func (e UserUserType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserUserType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserUserType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserUserType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserUserTypeOutput struct{ *pulumi.OutputState }

func (UserUserTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserUserType)(nil)).Elem()
}

func (o UserUserTypeOutput) ToUserUserTypeOutput() UserUserTypeOutput {
	return o
}

func (o UserUserTypeOutput) ToUserUserTypeOutputWithContext(ctx context.Context) UserUserTypeOutput {
	return o
}

func (o UserUserTypeOutput) ToUserUserTypePtrOutput() UserUserTypePtrOutput {
	return o.ToUserUserTypePtrOutputWithContext(context.Background())
}

func (o UserUserTypeOutput) ToUserUserTypePtrOutputWithContext(ctx context.Context) UserUserTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserUserType) *UserUserType {
		return &v
	}).(UserUserTypePtrOutput)
}

func (o UserUserTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserUserTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserUserType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserUserTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserUserTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserUserType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserUserTypePtrOutput struct{ *pulumi.OutputState }

func (UserUserTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserUserType)(nil)).Elem()
}

func (o UserUserTypePtrOutput) ToUserUserTypePtrOutput() UserUserTypePtrOutput {
	return o
}

func (o UserUserTypePtrOutput) ToUserUserTypePtrOutputWithContext(ctx context.Context) UserUserTypePtrOutput {
	return o
}

func (o UserUserTypePtrOutput) Elem() UserUserTypeOutput {
	return o.ApplyT(func(v *UserUserType) UserUserType {
		if v != nil {
			return *v
		}
		var ret UserUserType
		return ret
	}).(UserUserTypeOutput)
}

func (o UserUserTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserUserTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserUserType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserUserTypeInput is an input type that accepts values of the UserUserType enum
// A concrete instance of `UserUserTypeInput` can be one of the following:
//
//	UserUserTypeUserTypeUnspecified
//	UserUserTypeAlloydbBuiltIn
//	UserUserTypeAlloydbIamUser
type UserUserTypeInput interface {
	pulumi.Input

	ToUserUserTypeOutput() UserUserTypeOutput
	ToUserUserTypeOutputWithContext(context.Context) UserUserTypeOutput
}

var userUserTypePtrType = reflect.TypeOf((**UserUserType)(nil)).Elem()

type UserUserTypePtrInput interface {
	pulumi.Input

	ToUserUserTypePtrOutput() UserUserTypePtrOutput
	ToUserUserTypePtrOutputWithContext(context.Context) UserUserTypePtrOutput
}

type userUserTypePtr string

func UserUserTypePtr(v string) UserUserTypePtrInput {
	return (*userUserTypePtr)(&v)
}

func (*userUserTypePtr) ElementType() reflect.Type {
	return userUserTypePtrType
}

func (in *userUserTypePtr) ToUserUserTypePtrOutput() UserUserTypePtrOutput {
	return pulumi.ToOutput(in).(UserUserTypePtrOutput)
}

func (in *userUserTypePtr) ToUserUserTypePtrOutputWithContext(ctx context.Context) UserUserTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserUserTypePtrOutput)
}

func (in *userUserTypePtr) ToOutput(ctx context.Context) pulumix.Output[*UserUserType] {
	return pulumix.Output[*UserUserType]{
		OutputState: in.ToUserUserTypePtrOutputWithContext(ctx).OutputState,
	}
}

type WeeklyScheduleDaysOfWeekItem string

const (
	// The day of the week is unspecified.
	WeeklyScheduleDaysOfWeekItemDayOfWeekUnspecified = WeeklyScheduleDaysOfWeekItem("DAY_OF_WEEK_UNSPECIFIED")
	// Monday
	WeeklyScheduleDaysOfWeekItemMonday = WeeklyScheduleDaysOfWeekItem("MONDAY")
	// Tuesday
	WeeklyScheduleDaysOfWeekItemTuesday = WeeklyScheduleDaysOfWeekItem("TUESDAY")
	// Wednesday
	WeeklyScheduleDaysOfWeekItemWednesday = WeeklyScheduleDaysOfWeekItem("WEDNESDAY")
	// Thursday
	WeeklyScheduleDaysOfWeekItemThursday = WeeklyScheduleDaysOfWeekItem("THURSDAY")
	// Friday
	WeeklyScheduleDaysOfWeekItemFriday = WeeklyScheduleDaysOfWeekItem("FRIDAY")
	// Saturday
	WeeklyScheduleDaysOfWeekItemSaturday = WeeklyScheduleDaysOfWeekItem("SATURDAY")
	// Sunday
	WeeklyScheduleDaysOfWeekItemSunday = WeeklyScheduleDaysOfWeekItem("SUNDAY")
)

func (WeeklyScheduleDaysOfWeekItem) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyScheduleDaysOfWeekItem)(nil)).Elem()
}

func (e WeeklyScheduleDaysOfWeekItem) ToWeeklyScheduleDaysOfWeekItemOutput() WeeklyScheduleDaysOfWeekItemOutput {
	return pulumi.ToOutput(e).(WeeklyScheduleDaysOfWeekItemOutput)
}

func (e WeeklyScheduleDaysOfWeekItem) ToWeeklyScheduleDaysOfWeekItemOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WeeklyScheduleDaysOfWeekItemOutput)
}

func (e WeeklyScheduleDaysOfWeekItem) ToWeeklyScheduleDaysOfWeekItemPtrOutput() WeeklyScheduleDaysOfWeekItemPtrOutput {
	return e.ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(context.Background())
}

func (e WeeklyScheduleDaysOfWeekItem) ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemPtrOutput {
	return WeeklyScheduleDaysOfWeekItem(e).ToWeeklyScheduleDaysOfWeekItemOutputWithContext(ctx).ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx)
}

func (e WeeklyScheduleDaysOfWeekItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyScheduleDaysOfWeekItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WeeklyScheduleDaysOfWeekItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WeeklyScheduleDaysOfWeekItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WeeklyScheduleDaysOfWeekItemOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleDaysOfWeekItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WeeklyScheduleDaysOfWeekItem)(nil)).Elem()
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToWeeklyScheduleDaysOfWeekItemOutput() WeeklyScheduleDaysOfWeekItemOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToWeeklyScheduleDaysOfWeekItemOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToWeeklyScheduleDaysOfWeekItemPtrOutput() WeeklyScheduleDaysOfWeekItemPtrOutput {
	return o.ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(context.Background())
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WeeklyScheduleDaysOfWeekItem) *WeeklyScheduleDaysOfWeekItem {
		return &v
	}).(WeeklyScheduleDaysOfWeekItemPtrOutput)
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeeklyScheduleDaysOfWeekItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeeklyScheduleDaysOfWeekItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WeeklyScheduleDaysOfWeekItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WeeklyScheduleDaysOfWeekItemPtrOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleDaysOfWeekItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WeeklyScheduleDaysOfWeekItem)(nil)).Elem()
}

func (o WeeklyScheduleDaysOfWeekItemPtrOutput) ToWeeklyScheduleDaysOfWeekItemPtrOutput() WeeklyScheduleDaysOfWeekItemPtrOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemPtrOutput) ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemPtrOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemPtrOutput) Elem() WeeklyScheduleDaysOfWeekItemOutput {
	return o.ApplyT(func(v *WeeklyScheduleDaysOfWeekItem) WeeklyScheduleDaysOfWeekItem {
		if v != nil {
			return *v
		}
		var ret WeeklyScheduleDaysOfWeekItem
		return ret
	}).(WeeklyScheduleDaysOfWeekItemOutput)
}

func (o WeeklyScheduleDaysOfWeekItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WeeklyScheduleDaysOfWeekItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WeeklyScheduleDaysOfWeekItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WeeklyScheduleDaysOfWeekItemInput is an input type that accepts values of the WeeklyScheduleDaysOfWeekItem enum
// A concrete instance of `WeeklyScheduleDaysOfWeekItemInput` can be one of the following:
//
//	WeeklyScheduleDaysOfWeekItemDayOfWeekUnspecified
//	WeeklyScheduleDaysOfWeekItemMonday
//	WeeklyScheduleDaysOfWeekItemTuesday
//	WeeklyScheduleDaysOfWeekItemWednesday
//	WeeklyScheduleDaysOfWeekItemThursday
//	WeeklyScheduleDaysOfWeekItemFriday
//	WeeklyScheduleDaysOfWeekItemSaturday
//	WeeklyScheduleDaysOfWeekItemSunday
type WeeklyScheduleDaysOfWeekItemInput interface {
	pulumi.Input

	ToWeeklyScheduleDaysOfWeekItemOutput() WeeklyScheduleDaysOfWeekItemOutput
	ToWeeklyScheduleDaysOfWeekItemOutputWithContext(context.Context) WeeklyScheduleDaysOfWeekItemOutput
}

var weeklyScheduleDaysOfWeekItemPtrType = reflect.TypeOf((**WeeklyScheduleDaysOfWeekItem)(nil)).Elem()

type WeeklyScheduleDaysOfWeekItemPtrInput interface {
	pulumi.Input

	ToWeeklyScheduleDaysOfWeekItemPtrOutput() WeeklyScheduleDaysOfWeekItemPtrOutput
	ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(context.Context) WeeklyScheduleDaysOfWeekItemPtrOutput
}

type weeklyScheduleDaysOfWeekItemPtr string

func WeeklyScheduleDaysOfWeekItemPtr(v string) WeeklyScheduleDaysOfWeekItemPtrInput {
	return (*weeklyScheduleDaysOfWeekItemPtr)(&v)
}

func (*weeklyScheduleDaysOfWeekItemPtr) ElementType() reflect.Type {
	return weeklyScheduleDaysOfWeekItemPtrType
}

func (in *weeklyScheduleDaysOfWeekItemPtr) ToWeeklyScheduleDaysOfWeekItemPtrOutput() WeeklyScheduleDaysOfWeekItemPtrOutput {
	return pulumi.ToOutput(in).(WeeklyScheduleDaysOfWeekItemPtrOutput)
}

func (in *weeklyScheduleDaysOfWeekItemPtr) ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WeeklyScheduleDaysOfWeekItemPtrOutput)
}

func (in *weeklyScheduleDaysOfWeekItemPtr) ToOutput(ctx context.Context) pulumix.Output[*WeeklyScheduleDaysOfWeekItem] {
	return pulumix.Output[*WeeklyScheduleDaysOfWeekItem]{
		OutputState: in.ToWeeklyScheduleDaysOfWeekItemPtrOutputWithContext(ctx).OutputState,
	}
}

// WeeklyScheduleDaysOfWeekItemArrayInput is an input type that accepts WeeklyScheduleDaysOfWeekItemArray and WeeklyScheduleDaysOfWeekItemArrayOutput values.
// You can construct a concrete instance of `WeeklyScheduleDaysOfWeekItemArrayInput` via:
//
//	WeeklyScheduleDaysOfWeekItemArray{ WeeklyScheduleDaysOfWeekItemArgs{...} }
type WeeklyScheduleDaysOfWeekItemArrayInput interface {
	pulumi.Input

	ToWeeklyScheduleDaysOfWeekItemArrayOutput() WeeklyScheduleDaysOfWeekItemArrayOutput
	ToWeeklyScheduleDaysOfWeekItemArrayOutputWithContext(context.Context) WeeklyScheduleDaysOfWeekItemArrayOutput
}

type WeeklyScheduleDaysOfWeekItemArray []WeeklyScheduleDaysOfWeekItem

func (WeeklyScheduleDaysOfWeekItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeeklyScheduleDaysOfWeekItem)(nil)).Elem()
}

func (i WeeklyScheduleDaysOfWeekItemArray) ToWeeklyScheduleDaysOfWeekItemArrayOutput() WeeklyScheduleDaysOfWeekItemArrayOutput {
	return i.ToWeeklyScheduleDaysOfWeekItemArrayOutputWithContext(context.Background())
}

func (i WeeklyScheduleDaysOfWeekItemArray) ToWeeklyScheduleDaysOfWeekItemArrayOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WeeklyScheduleDaysOfWeekItemArrayOutput)
}

type WeeklyScheduleDaysOfWeekItemArrayOutput struct{ *pulumi.OutputState }

func (WeeklyScheduleDaysOfWeekItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WeeklyScheduleDaysOfWeekItem)(nil)).Elem()
}

func (o WeeklyScheduleDaysOfWeekItemArrayOutput) ToWeeklyScheduleDaysOfWeekItemArrayOutput() WeeklyScheduleDaysOfWeekItemArrayOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemArrayOutput) ToWeeklyScheduleDaysOfWeekItemArrayOutputWithContext(ctx context.Context) WeeklyScheduleDaysOfWeekItemArrayOutput {
	return o
}

func (o WeeklyScheduleDaysOfWeekItemArrayOutput) Index(i pulumi.IntInput) WeeklyScheduleDaysOfWeekItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WeeklyScheduleDaysOfWeekItem {
		return vs[0].([]WeeklyScheduleDaysOfWeekItem)[vs[1].(int)]
	}).(WeeklyScheduleDaysOfWeekItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupTypeInput)(nil)).Elem(), BackupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BackupTypePtrInput)(nil)).Elem(), BackupType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDatabaseVersionInput)(nil)).Elem(), ClusterDatabaseVersion("DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterDatabaseVersionPtrInput)(nil)).Elem(), ClusterDatabaseVersion("DATABASE_VERSION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAvailabilityTypeInput)(nil)).Elem(), InstanceAvailabilityType("AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAvailabilityTypePtrInput)(nil)).Elem(), InstanceAvailabilityType("AVAILABILITY_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInstanceTypeInput)(nil)).Elem(), InstanceInstanceType("INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInstanceTypePtrInput)(nil)).Elem(), InstanceInstanceType("INSTANCE_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigCaSourceInput)(nil)).Elem(), SslConfigCaSource("CA_SOURCE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigCaSourcePtrInput)(nil)).Elem(), SslConfigCaSource("CA_SOURCE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigSslModeInput)(nil)).Elem(), SslConfigSslMode("SSL_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SslConfigSslModePtrInput)(nil)).Elem(), SslConfigSslMode("SSL_MODE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserUserTypeInput)(nil)).Elem(), UserUserType("USER_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*UserUserTypePtrInput)(nil)).Elem(), UserUserType("USER_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WeeklyScheduleDaysOfWeekItemInput)(nil)).Elem(), WeeklyScheduleDaysOfWeekItem("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WeeklyScheduleDaysOfWeekItemPtrInput)(nil)).Elem(), WeeklyScheduleDaysOfWeekItem("DAY_OF_WEEK_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WeeklyScheduleDaysOfWeekItemArrayInput)(nil)).Elem(), WeeklyScheduleDaysOfWeekItemArray{})
	pulumi.RegisterOutputType(BackupTypeOutput{})
	pulumi.RegisterOutputType(BackupTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseVersionOutput{})
	pulumi.RegisterOutputType(ClusterDatabaseVersionPtrOutput{})
	pulumi.RegisterOutputType(InstanceAvailabilityTypeOutput{})
	pulumi.RegisterOutputType(InstanceAvailabilityTypePtrOutput{})
	pulumi.RegisterOutputType(InstanceInstanceTypeOutput{})
	pulumi.RegisterOutputType(InstanceInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(SslConfigCaSourceOutput{})
	pulumi.RegisterOutputType(SslConfigCaSourcePtrOutput{})
	pulumi.RegisterOutputType(SslConfigSslModeOutput{})
	pulumi.RegisterOutputType(SslConfigSslModePtrOutput{})
	pulumi.RegisterOutputType(UserUserTypeOutput{})
	pulumi.RegisterOutputType(UserUserTypePtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleDaysOfWeekItemOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleDaysOfWeekItemPtrOutput{})
	pulumi.RegisterOutputType(WeeklyScheduleDaysOfWeekItemArrayOutput{})
}
