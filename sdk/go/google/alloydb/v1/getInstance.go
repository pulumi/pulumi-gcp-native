// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Instance.
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("google-native:alloydb/v1:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInstanceArgs struct {
	ClusterId  string  `pulumi:"clusterId"`
	InstanceId string  `pulumi:"instanceId"`
	Location   string  `pulumi:"location"`
	Project    *string `pulumi:"project"`
	View       *string `pulumi:"view"`
}

type LookupInstanceResult struct {
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
	Annotations map[string]string `pulumi:"annotations"`
	// Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly distributed across available zones within the region (i.e. read pools with more than one node will have a node in at least two zones).
	AvailabilityType string `pulumi:"availabilityType"`
	// Optional. Client connection specific configurations
	ClientConnectionConfig ClientConnectionConfigResponse `pulumi:"clientConnectionConfig"`
	// Create time stamp
	CreateTime string `pulumi:"createTime"`
	// Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary. This is a list of "key": "value" pairs. "key": The name of the flag. These flags are passed at instance setup time, so include both server options and system variables for Postgres. Flags are specified with underscores, not hyphens. "value": The value of the flag. Booleans are set to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a value.
	DatabaseFlags map[string]string `pulumi:"databaseFlags"`
	// Delete time stamp
	DeleteTime string `pulumi:"deleteTime"`
	// User-settable and human-readable display name for the Instance.
	DisplayName string `pulumi:"displayName"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag string `pulumi:"etag"`
	// The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.
	GceZone string `pulumi:"gceZone"`
	// The type of the instance. Specified at creation time.
	InstanceType string `pulumi:"instanceType"`
	// The IP address for the Instance. This is the connection endpoint for an end-user application.
	IpAddress string `pulumi:"ipAddress"`
	// Labels as key value pairs
	Labels map[string]string `pulumi:"labels"`
	// Configurations for the machines that host the underlying database engine.
	MachineConfig MachineConfigResponse `pulumi:"machineConfig"`
	// The name of the instance resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the cluster and instance ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
	Name string `pulumi:"name"`
	// List of available read-only VMs in this instance, including the standby for a PRIMARY instance.
	Nodes []NodeResponse `pulumi:"nodes"`
	// Configuration for query insights.
	QueryInsightsConfig QueryInsightsInstanceConfigResponse `pulumi:"queryInsightsConfig"`
	// Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
	ReadPoolConfig ReadPoolConfigResponse `pulumi:"readPoolConfig"`
	// Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling bool `pulumi:"reconciling"`
	// The current serving state of the instance.
	State string `pulumi:"state"`
	// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
	Uid string `pulumi:"uid"`
	// Update time stamp
	UpdateTime string `pulumi:"updateTime"`
	// This is set for the read-write VM of the PRIMARY instance only.
	WritableNode NodeResponse `pulumi:"writableNode"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

type LookupInstanceOutputArgs struct {
	ClusterId  pulumi.StringInput    `pulumi:"clusterId"`
	InstanceId pulumi.StringInput    `pulumi:"instanceId"`
	Location   pulumi.StringInput    `pulumi:"location"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
func (o LookupInstanceResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// Availability type of an Instance. If empty, defaults to REGIONAL for primary instances. For read pools, availability_type is always UNSPECIFIED. Instances in the read pools are evenly distributed across available zones within the region (i.e. read pools with more than one node will have a node in at least two zones).
func (o LookupInstanceResultOutput) AvailabilityType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.AvailabilityType }).(pulumi.StringOutput)
}

// Optional. Client connection specific configurations
func (o LookupInstanceResultOutput) ClientConnectionConfig() ClientConnectionConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) ClientConnectionConfigResponse { return v.ClientConnectionConfig }).(ClientConnectionConfigResponseOutput)
}

// Create time stamp
func (o LookupInstanceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary. This is a list of "key": "value" pairs. "key": The name of the flag. These flags are passed at instance setup time, so include both server options and system variables for Postgres. Flags are specified with underscores, not hyphens. "value": The value of the flag. Booleans are set to **on** for true and **off** for false. This field must be omitted if the flag doesn't take a value.
func (o LookupInstanceResultOutput) DatabaseFlags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.DatabaseFlags }).(pulumi.StringMapOutput)
}

// Delete time stamp
func (o LookupInstanceResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// User-settable and human-readable display name for the Instance.
func (o LookupInstanceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// For Resource freshness validation (https://google.aip.dev/154)
func (o LookupInstanceResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.
func (o LookupInstanceResultOutput) GceZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.GceZone }).(pulumi.StringOutput)
}

// The type of the instance. Specified at creation time.
func (o LookupInstanceResultOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IP address for the Instance. This is the connection endpoint for an end-user application.
func (o LookupInstanceResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Labels as key value pairs
func (o LookupInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Configurations for the machines that host the underlying database engine.
func (o LookupInstanceResultOutput) MachineConfig() MachineConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) MachineConfigResponse { return v.MachineConfig }).(MachineConfigResponseOutput)
}

// The name of the instance resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id}/instances/{instance_id} where the cluster and instance ID segments should satisfy the regex expression `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`, e.g. 1-63 characters of lowercase letters, numbers, and dashes, starting with a letter, and ending with a letter or number. For more details see https://google.aip.dev/122. The prefix of the instance resource name is the name of the parent resource: * projects/{project}/locations/{region}/clusters/{cluster_id}
func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of available read-only VMs in this instance, including the standby for a PRIMARY instance.
func (o LookupInstanceResultOutput) Nodes() NodeResponseArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []NodeResponse { return v.Nodes }).(NodeResponseArrayOutput)
}

// Configuration for query insights.
func (o LookupInstanceResultOutput) QueryInsightsConfig() QueryInsightsInstanceConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) QueryInsightsInstanceConfigResponse { return v.QueryInsightsConfig }).(QueryInsightsInstanceConfigResponseOutput)
}

// Read pool instance configuration. This is required if the value of instanceType is READ_POOL.
func (o LookupInstanceResultOutput) ReadPoolConfig() ReadPoolConfigResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) ReadPoolConfigResponse { return v.ReadPoolConfig }).(ReadPoolConfigResponseOutput)
}

// Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
func (o LookupInstanceResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

// The current serving state of the instance.
func (o LookupInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

// The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
func (o LookupInstanceResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Update time stamp
func (o LookupInstanceResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// This is set for the read-write VM of the PRIMARY instance only.
func (o LookupInstanceResultOutput) WritableNode() NodeResponseOutput {
	return o.ApplyT(func(v LookupInstanceResult) NodeResponse { return v.WritableNode }).(NodeResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
