// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets Item resource by item name. This API requires an admin or service account to execute. The service account used is the one whitelisted in the corresponding data source.
func LookupItem(ctx *pulumi.Context, args *LookupItemArgs, opts ...pulumi.InvokeOption) (*LookupItemResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupItemResult
	err := ctx.Invoke("google-native:cloudsearch/v1:getItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupItemArgs struct {
	ConnectorName               *string `pulumi:"connectorName"`
	DatasourceId                string  `pulumi:"datasourceId"`
	DebugOptionsEnableDebugging *bool   `pulumi:"debugOptionsEnableDebugging"`
	ItemId                      string  `pulumi:"itemId"`
}

type LookupItemResult struct {
	// Access control list for this item.
	Acl ItemAclResponse `pulumi:"acl"`
	// Item content to be indexed and made text searchable.
	Content ItemContentResponse `pulumi:"content"`
	// The type for this item.
	ItemType string `pulumi:"itemType"`
	// The metadata information.
	Metadata ItemMetadataResponse `pulumi:"metadata"`
	// The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The maximum length is 1536 characters.
	Name string `pulumi:"name"`
	// Additional state connector can store for this item. The maximum length is 10000 bytes.
	Payload string `pulumi:"payload"`
	// Queue this item belongs to. The maximum length is 100 characters.
	Queue string `pulumi:"queue"`
	// Status of the item. Output only field.
	Status ItemStatusResponse `pulumi:"status"`
	// The structured data for the item that should conform to a registered object definition in the schema for the data source.
	StructuredData ItemStructuredDataResponse `pulumi:"structuredData"`
	// The indexing system stores the version from the datasource as a byte string and compares the Item version in the index to the version of the queued Item using lexical ordering. Cloud Search Indexing won't index or delete any queued item with a version value that is less than or equal to the version of the currently indexed item. The maximum length for this field is 1024 bytes. For information on how item version affects the deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com/cloud-search/docs/guides/operations).
	Version string `pulumi:"version"`
}

func LookupItemOutput(ctx *pulumi.Context, args LookupItemOutputArgs, opts ...pulumi.InvokeOption) LookupItemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupItemResult, error) {
			args := v.(LookupItemArgs)
			r, err := LookupItem(ctx, &args, opts...)
			var s LookupItemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupItemResultOutput)
}

type LookupItemOutputArgs struct {
	ConnectorName               pulumi.StringPtrInput `pulumi:"connectorName"`
	DatasourceId                pulumi.StringInput    `pulumi:"datasourceId"`
	DebugOptionsEnableDebugging pulumi.BoolPtrInput   `pulumi:"debugOptionsEnableDebugging"`
	ItemId                      pulumi.StringInput    `pulumi:"itemId"`
}

func (LookupItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupItemArgs)(nil)).Elem()
}

type LookupItemResultOutput struct{ *pulumi.OutputState }

func (LookupItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupItemResult)(nil)).Elem()
}

func (o LookupItemResultOutput) ToLookupItemResultOutput() LookupItemResultOutput {
	return o
}

func (o LookupItemResultOutput) ToLookupItemResultOutputWithContext(ctx context.Context) LookupItemResultOutput {
	return o
}

// Access control list for this item.
func (o LookupItemResultOutput) Acl() ItemAclResponseOutput {
	return o.ApplyT(func(v LookupItemResult) ItemAclResponse { return v.Acl }).(ItemAclResponseOutput)
}

// Item content to be indexed and made text searchable.
func (o LookupItemResultOutput) Content() ItemContentResponseOutput {
	return o.ApplyT(func(v LookupItemResult) ItemContentResponse { return v.Content }).(ItemContentResponseOutput)
}

// The type for this item.
func (o LookupItemResultOutput) ItemType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupItemResult) string { return v.ItemType }).(pulumi.StringOutput)
}

// The metadata information.
func (o LookupItemResultOutput) Metadata() ItemMetadataResponseOutput {
	return o.ApplyT(func(v LookupItemResult) ItemMetadataResponse { return v.Metadata }).(ItemMetadataResponseOutput)
}

// The name of the Item. Format: datasources/{source_id}/items/{item_id} This is a required field. The maximum length is 1536 characters.
func (o LookupItemResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupItemResult) string { return v.Name }).(pulumi.StringOutput)
}

// Additional state connector can store for this item. The maximum length is 10000 bytes.
func (o LookupItemResultOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v LookupItemResult) string { return v.Payload }).(pulumi.StringOutput)
}

// Queue this item belongs to. The maximum length is 100 characters.
func (o LookupItemResultOutput) Queue() pulumi.StringOutput {
	return o.ApplyT(func(v LookupItemResult) string { return v.Queue }).(pulumi.StringOutput)
}

// Status of the item. Output only field.
func (o LookupItemResultOutput) Status() ItemStatusResponseOutput {
	return o.ApplyT(func(v LookupItemResult) ItemStatusResponse { return v.Status }).(ItemStatusResponseOutput)
}

// The structured data for the item that should conform to a registered object definition in the schema for the data source.
func (o LookupItemResultOutput) StructuredData() ItemStructuredDataResponseOutput {
	return o.ApplyT(func(v LookupItemResult) ItemStructuredDataResponse { return v.StructuredData }).(ItemStructuredDataResponseOutput)
}

// The indexing system stores the version from the datasource as a byte string and compares the Item version in the index to the version of the queued Item using lexical ordering. Cloud Search Indexing won't index or delete any queued item with a version value that is less than or equal to the version of the currently indexed item. The maximum length for this field is 1024 bytes. For information on how item version affects the deletion process, refer to [Handle revisions after manual deletes](https://developers.google.com/cloud-search/docs/guides/operations).
func (o LookupItemResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupItemResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupItemResultOutput{})
}
