// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The logic operator of the sub filter.
type CompositeFilterLogicOperator string

const (
	// Logical operators, which can only be applied to sub filters.
	CompositeFilterLogicOperatorAnd = CompositeFilterLogicOperator("AND")
	CompositeFilterLogicOperatorOr  = CompositeFilterLogicOperator("OR")
	// NOT can only be applied on a single sub filter.
	CompositeFilterLogicOperatorNot = CompositeFilterLogicOperator("NOT")
)

func (CompositeFilterLogicOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositeFilterLogicOperator)(nil)).Elem()
}

func (e CompositeFilterLogicOperator) ToCompositeFilterLogicOperatorOutput() CompositeFilterLogicOperatorOutput {
	return pulumi.ToOutput(e).(CompositeFilterLogicOperatorOutput)
}

func (e CompositeFilterLogicOperator) ToCompositeFilterLogicOperatorOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CompositeFilterLogicOperatorOutput)
}

func (e CompositeFilterLogicOperator) ToCompositeFilterLogicOperatorPtrOutput() CompositeFilterLogicOperatorPtrOutput {
	return e.ToCompositeFilterLogicOperatorPtrOutputWithContext(context.Background())
}

func (e CompositeFilterLogicOperator) ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorPtrOutput {
	return CompositeFilterLogicOperator(e).ToCompositeFilterLogicOperatorOutputWithContext(ctx).ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx)
}

func (e CompositeFilterLogicOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeFilterLogicOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeFilterLogicOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CompositeFilterLogicOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CompositeFilterLogicOperatorOutput struct{ *pulumi.OutputState }

func (CompositeFilterLogicOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositeFilterLogicOperator)(nil)).Elem()
}

func (o CompositeFilterLogicOperatorOutput) ToCompositeFilterLogicOperatorOutput() CompositeFilterLogicOperatorOutput {
	return o
}

func (o CompositeFilterLogicOperatorOutput) ToCompositeFilterLogicOperatorOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorOutput {
	return o
}

func (o CompositeFilterLogicOperatorOutput) ToCompositeFilterLogicOperatorPtrOutput() CompositeFilterLogicOperatorPtrOutput {
	return o.ToCompositeFilterLogicOperatorPtrOutputWithContext(context.Background())
}

func (o CompositeFilterLogicOperatorOutput) ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompositeFilterLogicOperator) *CompositeFilterLogicOperator {
		return &v
	}).(CompositeFilterLogicOperatorPtrOutput)
}

func (o CompositeFilterLogicOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CompositeFilterLogicOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CompositeFilterLogicOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CompositeFilterLogicOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompositeFilterLogicOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CompositeFilterLogicOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CompositeFilterLogicOperatorPtrOutput struct{ *pulumi.OutputState }

func (CompositeFilterLogicOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompositeFilterLogicOperator)(nil)).Elem()
}

func (o CompositeFilterLogicOperatorPtrOutput) ToCompositeFilterLogicOperatorPtrOutput() CompositeFilterLogicOperatorPtrOutput {
	return o
}

func (o CompositeFilterLogicOperatorPtrOutput) ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorPtrOutput {
	return o
}

func (o CompositeFilterLogicOperatorPtrOutput) Elem() CompositeFilterLogicOperatorOutput {
	return o.ApplyT(func(v *CompositeFilterLogicOperator) CompositeFilterLogicOperator {
		if v != nil {
			return *v
		}
		var ret CompositeFilterLogicOperator
		return ret
	}).(CompositeFilterLogicOperatorOutput)
}

func (o CompositeFilterLogicOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompositeFilterLogicOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CompositeFilterLogicOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CompositeFilterLogicOperatorInput is an input type that accepts CompositeFilterLogicOperatorArgs and CompositeFilterLogicOperatorOutput values.
// You can construct a concrete instance of `CompositeFilterLogicOperatorInput` via:
//
//	CompositeFilterLogicOperatorArgs{...}
type CompositeFilterLogicOperatorInput interface {
	pulumi.Input

	ToCompositeFilterLogicOperatorOutput() CompositeFilterLogicOperatorOutput
	ToCompositeFilterLogicOperatorOutputWithContext(context.Context) CompositeFilterLogicOperatorOutput
}

var compositeFilterLogicOperatorPtrType = reflect.TypeOf((**CompositeFilterLogicOperator)(nil)).Elem()

type CompositeFilterLogicOperatorPtrInput interface {
	pulumi.Input

	ToCompositeFilterLogicOperatorPtrOutput() CompositeFilterLogicOperatorPtrOutput
	ToCompositeFilterLogicOperatorPtrOutputWithContext(context.Context) CompositeFilterLogicOperatorPtrOutput
}

type compositeFilterLogicOperatorPtr string

func CompositeFilterLogicOperatorPtr(v string) CompositeFilterLogicOperatorPtrInput {
	return (*compositeFilterLogicOperatorPtr)(&v)
}

func (*compositeFilterLogicOperatorPtr) ElementType() reflect.Type {
	return compositeFilterLogicOperatorPtrType
}

func (in *compositeFilterLogicOperatorPtr) ToCompositeFilterLogicOperatorPtrOutput() CompositeFilterLogicOperatorPtrOutput {
	return pulumi.ToOutput(in).(CompositeFilterLogicOperatorPtrOutput)
}

func (in *compositeFilterLogicOperatorPtr) ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx context.Context) CompositeFilterLogicOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CompositeFilterLogicOperatorPtrOutput)
}

func (in *compositeFilterLogicOperatorPtr) ToOutput(ctx context.Context) pulumix.Output[*CompositeFilterLogicOperator] {
	return pulumix.Output[*CompositeFilterLogicOperator]{
		OutputState: in.ToCompositeFilterLogicOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// Ascending is the default sort order
type SortOptionsSortOrder string

const (
	SortOptionsSortOrderAscending  = SortOptionsSortOrder("ASCENDING")
	SortOptionsSortOrderDescending = SortOptionsSortOrder("DESCENDING")
)

func (SortOptionsSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*SortOptionsSortOrder)(nil)).Elem()
}

func (e SortOptionsSortOrder) ToSortOptionsSortOrderOutput() SortOptionsSortOrderOutput {
	return pulumi.ToOutput(e).(SortOptionsSortOrderOutput)
}

func (e SortOptionsSortOrder) ToSortOptionsSortOrderOutputWithContext(ctx context.Context) SortOptionsSortOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SortOptionsSortOrderOutput)
}

func (e SortOptionsSortOrder) ToSortOptionsSortOrderPtrOutput() SortOptionsSortOrderPtrOutput {
	return e.ToSortOptionsSortOrderPtrOutputWithContext(context.Background())
}

func (e SortOptionsSortOrder) ToSortOptionsSortOrderPtrOutputWithContext(ctx context.Context) SortOptionsSortOrderPtrOutput {
	return SortOptionsSortOrder(e).ToSortOptionsSortOrderOutputWithContext(ctx).ToSortOptionsSortOrderPtrOutputWithContext(ctx)
}

func (e SortOptionsSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SortOptionsSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SortOptionsSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SortOptionsSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SortOptionsSortOrderOutput struct{ *pulumi.OutputState }

func (SortOptionsSortOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SortOptionsSortOrder)(nil)).Elem()
}

func (o SortOptionsSortOrderOutput) ToSortOptionsSortOrderOutput() SortOptionsSortOrderOutput {
	return o
}

func (o SortOptionsSortOrderOutput) ToSortOptionsSortOrderOutputWithContext(ctx context.Context) SortOptionsSortOrderOutput {
	return o
}

func (o SortOptionsSortOrderOutput) ToSortOptionsSortOrderPtrOutput() SortOptionsSortOrderPtrOutput {
	return o.ToSortOptionsSortOrderPtrOutputWithContext(context.Background())
}

func (o SortOptionsSortOrderOutput) ToSortOptionsSortOrderPtrOutputWithContext(ctx context.Context) SortOptionsSortOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SortOptionsSortOrder) *SortOptionsSortOrder {
		return &v
	}).(SortOptionsSortOrderPtrOutput)
}

func (o SortOptionsSortOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SortOptionsSortOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SortOptionsSortOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SortOptionsSortOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SortOptionsSortOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SortOptionsSortOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SortOptionsSortOrderPtrOutput struct{ *pulumi.OutputState }

func (SortOptionsSortOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SortOptionsSortOrder)(nil)).Elem()
}

func (o SortOptionsSortOrderPtrOutput) ToSortOptionsSortOrderPtrOutput() SortOptionsSortOrderPtrOutput {
	return o
}

func (o SortOptionsSortOrderPtrOutput) ToSortOptionsSortOrderPtrOutputWithContext(ctx context.Context) SortOptionsSortOrderPtrOutput {
	return o
}

func (o SortOptionsSortOrderPtrOutput) Elem() SortOptionsSortOrderOutput {
	return o.ApplyT(func(v *SortOptionsSortOrder) SortOptionsSortOrder {
		if v != nil {
			return *v
		}
		var ret SortOptionsSortOrder
		return ret
	}).(SortOptionsSortOrderOutput)
}

func (o SortOptionsSortOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SortOptionsSortOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SortOptionsSortOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SortOptionsSortOrderInput is an input type that accepts SortOptionsSortOrderArgs and SortOptionsSortOrderOutput values.
// You can construct a concrete instance of `SortOptionsSortOrderInput` via:
//
//	SortOptionsSortOrderArgs{...}
type SortOptionsSortOrderInput interface {
	pulumi.Input

	ToSortOptionsSortOrderOutput() SortOptionsSortOrderOutput
	ToSortOptionsSortOrderOutputWithContext(context.Context) SortOptionsSortOrderOutput
}

var sortOptionsSortOrderPtrType = reflect.TypeOf((**SortOptionsSortOrder)(nil)).Elem()

type SortOptionsSortOrderPtrInput interface {
	pulumi.Input

	ToSortOptionsSortOrderPtrOutput() SortOptionsSortOrderPtrOutput
	ToSortOptionsSortOrderPtrOutputWithContext(context.Context) SortOptionsSortOrderPtrOutput
}

type sortOptionsSortOrderPtr string

func SortOptionsSortOrderPtr(v string) SortOptionsSortOrderPtrInput {
	return (*sortOptionsSortOrderPtr)(&v)
}

func (*sortOptionsSortOrderPtr) ElementType() reflect.Type {
	return sortOptionsSortOrderPtrType
}

func (in *sortOptionsSortOrderPtr) ToSortOptionsSortOrderPtrOutput() SortOptionsSortOrderPtrOutput {
	return pulumi.ToOutput(in).(SortOptionsSortOrderPtrOutput)
}

func (in *sortOptionsSortOrderPtr) ToSortOptionsSortOrderPtrOutputWithContext(ctx context.Context) SortOptionsSortOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SortOptionsSortOrderPtrOutput)
}

func (in *sortOptionsSortOrderPtr) ToOutput(ctx context.Context) pulumix.Output[*SortOptionsSortOrder] {
	return pulumix.Output[*SortOptionsSortOrder]{
		OutputState: in.ToSortOptionsSortOrderPtrOutputWithContext(ctx).OutputState,
	}
}

// Predefined content source for Google Apps.
type SourcePredefinedSource string

const (
	SourcePredefinedSourceNone = SourcePredefinedSource("NONE")
	// Suggests queries issued by the user in the past. Only valid when used with the suggest API. Ignored when used in the query API.
	SourcePredefinedSourceQueryHistory = SourcePredefinedSource("QUERY_HISTORY")
	// Suggests people in the organization. Only valid when used with the suggest API. Results in an error when used in the query API.
	SourcePredefinedSourcePerson         = SourcePredefinedSource("PERSON")
	SourcePredefinedSourceGoogleDrive    = SourcePredefinedSource("GOOGLE_DRIVE")
	SourcePredefinedSourceGoogleGmail    = SourcePredefinedSource("GOOGLE_GMAIL")
	SourcePredefinedSourceGoogleSites    = SourcePredefinedSource("GOOGLE_SITES")
	SourcePredefinedSourceGoogleGroups   = SourcePredefinedSource("GOOGLE_GROUPS")
	SourcePredefinedSourceGoogleCalendar = SourcePredefinedSource("GOOGLE_CALENDAR")
	SourcePredefinedSourceGoogleKeep     = SourcePredefinedSource("GOOGLE_KEEP")
)

func (SourcePredefinedSource) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePredefinedSource)(nil)).Elem()
}

func (e SourcePredefinedSource) ToSourcePredefinedSourceOutput() SourcePredefinedSourceOutput {
	return pulumi.ToOutput(e).(SourcePredefinedSourceOutput)
}

func (e SourcePredefinedSource) ToSourcePredefinedSourceOutputWithContext(ctx context.Context) SourcePredefinedSourceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourcePredefinedSourceOutput)
}

func (e SourcePredefinedSource) ToSourcePredefinedSourcePtrOutput() SourcePredefinedSourcePtrOutput {
	return e.ToSourcePredefinedSourcePtrOutputWithContext(context.Background())
}

func (e SourcePredefinedSource) ToSourcePredefinedSourcePtrOutputWithContext(ctx context.Context) SourcePredefinedSourcePtrOutput {
	return SourcePredefinedSource(e).ToSourcePredefinedSourceOutputWithContext(ctx).ToSourcePredefinedSourcePtrOutputWithContext(ctx)
}

func (e SourcePredefinedSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourcePredefinedSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourcePredefinedSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourcePredefinedSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourcePredefinedSourceOutput struct{ *pulumi.OutputState }

func (SourcePredefinedSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourcePredefinedSource)(nil)).Elem()
}

func (o SourcePredefinedSourceOutput) ToSourcePredefinedSourceOutput() SourcePredefinedSourceOutput {
	return o
}

func (o SourcePredefinedSourceOutput) ToSourcePredefinedSourceOutputWithContext(ctx context.Context) SourcePredefinedSourceOutput {
	return o
}

func (o SourcePredefinedSourceOutput) ToSourcePredefinedSourcePtrOutput() SourcePredefinedSourcePtrOutput {
	return o.ToSourcePredefinedSourcePtrOutputWithContext(context.Background())
}

func (o SourcePredefinedSourceOutput) ToSourcePredefinedSourcePtrOutputWithContext(ctx context.Context) SourcePredefinedSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourcePredefinedSource) *SourcePredefinedSource {
		return &v
	}).(SourcePredefinedSourcePtrOutput)
}

func (o SourcePredefinedSourceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourcePredefinedSourceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourcePredefinedSource) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourcePredefinedSourceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourcePredefinedSourceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourcePredefinedSource) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourcePredefinedSourcePtrOutput struct{ *pulumi.OutputState }

func (SourcePredefinedSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePredefinedSource)(nil)).Elem()
}

func (o SourcePredefinedSourcePtrOutput) ToSourcePredefinedSourcePtrOutput() SourcePredefinedSourcePtrOutput {
	return o
}

func (o SourcePredefinedSourcePtrOutput) ToSourcePredefinedSourcePtrOutputWithContext(ctx context.Context) SourcePredefinedSourcePtrOutput {
	return o
}

func (o SourcePredefinedSourcePtrOutput) Elem() SourcePredefinedSourceOutput {
	return o.ApplyT(func(v *SourcePredefinedSource) SourcePredefinedSource {
		if v != nil {
			return *v
		}
		var ret SourcePredefinedSource
		return ret
	}).(SourcePredefinedSourceOutput)
}

func (o SourcePredefinedSourcePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourcePredefinedSourcePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourcePredefinedSource) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourcePredefinedSourceInput is an input type that accepts SourcePredefinedSourceArgs and SourcePredefinedSourceOutput values.
// You can construct a concrete instance of `SourcePredefinedSourceInput` via:
//
//	SourcePredefinedSourceArgs{...}
type SourcePredefinedSourceInput interface {
	pulumi.Input

	ToSourcePredefinedSourceOutput() SourcePredefinedSourceOutput
	ToSourcePredefinedSourceOutputWithContext(context.Context) SourcePredefinedSourceOutput
}

var sourcePredefinedSourcePtrType = reflect.TypeOf((**SourcePredefinedSource)(nil)).Elem()

type SourcePredefinedSourcePtrInput interface {
	pulumi.Input

	ToSourcePredefinedSourcePtrOutput() SourcePredefinedSourcePtrOutput
	ToSourcePredefinedSourcePtrOutputWithContext(context.Context) SourcePredefinedSourcePtrOutput
}

type sourcePredefinedSourcePtr string

func SourcePredefinedSourcePtr(v string) SourcePredefinedSourcePtrInput {
	return (*sourcePredefinedSourcePtr)(&v)
}

func (*sourcePredefinedSourcePtr) ElementType() reflect.Type {
	return sourcePredefinedSourcePtrType
}

func (in *sourcePredefinedSourcePtr) ToSourcePredefinedSourcePtrOutput() SourcePredefinedSourcePtrOutput {
	return pulumi.ToOutput(in).(SourcePredefinedSourcePtrOutput)
}

func (in *sourcePredefinedSourcePtr) ToSourcePredefinedSourcePtrOutputWithContext(ctx context.Context) SourcePredefinedSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourcePredefinedSourcePtrOutput)
}

func (in *sourcePredefinedSourcePtr) ToOutput(ctx context.Context) pulumix.Output[*SourcePredefinedSource] {
	return pulumix.Output[*SourcePredefinedSource]{
		OutputState: in.ToSourcePredefinedSourcePtrOutputWithContext(ctx).OutputState,
	}
}

// Importance of the source.
type SourceScoringConfigSourceImportance string

const (
	SourceScoringConfigSourceImportanceDefault = SourceScoringConfigSourceImportance("DEFAULT")
	SourceScoringConfigSourceImportanceLow     = SourceScoringConfigSourceImportance("LOW")
	SourceScoringConfigSourceImportanceHigh    = SourceScoringConfigSourceImportance("HIGH")
)

func (SourceScoringConfigSourceImportance) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceScoringConfigSourceImportance)(nil)).Elem()
}

func (e SourceScoringConfigSourceImportance) ToSourceScoringConfigSourceImportanceOutput() SourceScoringConfigSourceImportanceOutput {
	return pulumi.ToOutput(e).(SourceScoringConfigSourceImportanceOutput)
}

func (e SourceScoringConfigSourceImportance) ToSourceScoringConfigSourceImportanceOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportanceOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SourceScoringConfigSourceImportanceOutput)
}

func (e SourceScoringConfigSourceImportance) ToSourceScoringConfigSourceImportancePtrOutput() SourceScoringConfigSourceImportancePtrOutput {
	return e.ToSourceScoringConfigSourceImportancePtrOutputWithContext(context.Background())
}

func (e SourceScoringConfigSourceImportance) ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportancePtrOutput {
	return SourceScoringConfigSourceImportance(e).ToSourceScoringConfigSourceImportanceOutputWithContext(ctx).ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx)
}

func (e SourceScoringConfigSourceImportance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceScoringConfigSourceImportance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceScoringConfigSourceImportance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceScoringConfigSourceImportance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SourceScoringConfigSourceImportanceOutput struct{ *pulumi.OutputState }

func (SourceScoringConfigSourceImportanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceScoringConfigSourceImportance)(nil)).Elem()
}

func (o SourceScoringConfigSourceImportanceOutput) ToSourceScoringConfigSourceImportanceOutput() SourceScoringConfigSourceImportanceOutput {
	return o
}

func (o SourceScoringConfigSourceImportanceOutput) ToSourceScoringConfigSourceImportanceOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportanceOutput {
	return o
}

func (o SourceScoringConfigSourceImportanceOutput) ToSourceScoringConfigSourceImportancePtrOutput() SourceScoringConfigSourceImportancePtrOutput {
	return o.ToSourceScoringConfigSourceImportancePtrOutputWithContext(context.Background())
}

func (o SourceScoringConfigSourceImportanceOutput) ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceScoringConfigSourceImportance) *SourceScoringConfigSourceImportance {
		return &v
	}).(SourceScoringConfigSourceImportancePtrOutput)
}

func (o SourceScoringConfigSourceImportanceOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SourceScoringConfigSourceImportanceOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceScoringConfigSourceImportance) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SourceScoringConfigSourceImportanceOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceScoringConfigSourceImportanceOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SourceScoringConfigSourceImportance) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SourceScoringConfigSourceImportancePtrOutput struct{ *pulumi.OutputState }

func (SourceScoringConfigSourceImportancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceScoringConfigSourceImportance)(nil)).Elem()
}

func (o SourceScoringConfigSourceImportancePtrOutput) ToSourceScoringConfigSourceImportancePtrOutput() SourceScoringConfigSourceImportancePtrOutput {
	return o
}

func (o SourceScoringConfigSourceImportancePtrOutput) ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportancePtrOutput {
	return o
}

func (o SourceScoringConfigSourceImportancePtrOutput) Elem() SourceScoringConfigSourceImportanceOutput {
	return o.ApplyT(func(v *SourceScoringConfigSourceImportance) SourceScoringConfigSourceImportance {
		if v != nil {
			return *v
		}
		var ret SourceScoringConfigSourceImportance
		return ret
	}).(SourceScoringConfigSourceImportanceOutput)
}

func (o SourceScoringConfigSourceImportancePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SourceScoringConfigSourceImportancePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SourceScoringConfigSourceImportance) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SourceScoringConfigSourceImportanceInput is an input type that accepts SourceScoringConfigSourceImportanceArgs and SourceScoringConfigSourceImportanceOutput values.
// You can construct a concrete instance of `SourceScoringConfigSourceImportanceInput` via:
//
//	SourceScoringConfigSourceImportanceArgs{...}
type SourceScoringConfigSourceImportanceInput interface {
	pulumi.Input

	ToSourceScoringConfigSourceImportanceOutput() SourceScoringConfigSourceImportanceOutput
	ToSourceScoringConfigSourceImportanceOutputWithContext(context.Context) SourceScoringConfigSourceImportanceOutput
}

var sourceScoringConfigSourceImportancePtrType = reflect.TypeOf((**SourceScoringConfigSourceImportance)(nil)).Elem()

type SourceScoringConfigSourceImportancePtrInput interface {
	pulumi.Input

	ToSourceScoringConfigSourceImportancePtrOutput() SourceScoringConfigSourceImportancePtrOutput
	ToSourceScoringConfigSourceImportancePtrOutputWithContext(context.Context) SourceScoringConfigSourceImportancePtrOutput
}

type sourceScoringConfigSourceImportancePtr string

func SourceScoringConfigSourceImportancePtr(v string) SourceScoringConfigSourceImportancePtrInput {
	return (*sourceScoringConfigSourceImportancePtr)(&v)
}

func (*sourceScoringConfigSourceImportancePtr) ElementType() reflect.Type {
	return sourceScoringConfigSourceImportancePtrType
}

func (in *sourceScoringConfigSourceImportancePtr) ToSourceScoringConfigSourceImportancePtrOutput() SourceScoringConfigSourceImportancePtrOutput {
	return pulumi.ToOutput(in).(SourceScoringConfigSourceImportancePtrOutput)
}

func (in *sourceScoringConfigSourceImportancePtr) ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx context.Context) SourceScoringConfigSourceImportancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SourceScoringConfigSourceImportancePtrOutput)
}

func (in *sourceScoringConfigSourceImportancePtr) ToOutput(ctx context.Context) pulumix.Output[*SourceScoringConfigSourceImportance] {
	return pulumix.Output[*SourceScoringConfigSourceImportance]{
		OutputState: in.ToSourceScoringConfigSourceImportancePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompositeFilterLogicOperatorInput)(nil)).Elem(), CompositeFilterLogicOperator("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*CompositeFilterLogicOperatorPtrInput)(nil)).Elem(), CompositeFilterLogicOperator("AND"))
	pulumi.RegisterInputType(reflect.TypeOf((*SortOptionsSortOrderInput)(nil)).Elem(), SortOptionsSortOrder("ASCENDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*SortOptionsSortOrderPtrInput)(nil)).Elem(), SortOptionsSortOrder("ASCENDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePredefinedSourceInput)(nil)).Elem(), SourcePredefinedSource("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePredefinedSourcePtrInput)(nil)).Elem(), SourcePredefinedSource("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceScoringConfigSourceImportanceInput)(nil)).Elem(), SourceScoringConfigSourceImportance("DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*SourceScoringConfigSourceImportancePtrInput)(nil)).Elem(), SourceScoringConfigSourceImportance("DEFAULT"))
	pulumi.RegisterOutputType(CompositeFilterLogicOperatorOutput{})
	pulumi.RegisterOutputType(CompositeFilterLogicOperatorPtrOutput{})
	pulumi.RegisterOutputType(SortOptionsSortOrderOutput{})
	pulumi.RegisterOutputType(SortOptionsSortOrderPtrOutput{})
	pulumi.RegisterOutputType(SourcePredefinedSourceOutput{})
	pulumi.RegisterOutputType(SourcePredefinedSourcePtrOutput{})
	pulumi.RegisterOutputType(SourceScoringConfigSourceImportanceOutput{})
	pulumi.RegisterOutputType(SourceScoringConfigSourceImportancePtrOutput{})
}
