// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The logic operator of the sub filter.
type CompositeFilterLogicOperator pulumi.String

const (
	// Logical operators, which can only be applied to sub filters.
	CompositeFilterLogicOperatorAnd = CompositeFilterLogicOperator("AND")
	CompositeFilterLogicOperatorOr  = CompositeFilterLogicOperator("OR")
	// NOT can only be applied on a single sub filter.
	CompositeFilterLogicOperatorNot = CompositeFilterLogicOperator("NOT")
)

func (CompositeFilterLogicOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CompositeFilterLogicOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeFilterLogicOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositeFilterLogicOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CompositeFilterLogicOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Ascending is the default sort order
type SortOptionsSortOrder pulumi.String

const (
	SortOptionsSortOrderAscending  = SortOptionsSortOrder("ASCENDING")
	SortOptionsSortOrderDescending = SortOptionsSortOrder("DESCENDING")
)

func (SortOptionsSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SortOptionsSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SortOptionsSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SortOptionsSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SortOptionsSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Predefined content source for Google Apps.
type SourcePredefinedSource pulumi.String

const (
	SourcePredefinedSourceNone = SourcePredefinedSource("NONE")
	// Suggests queries issued by the user in the past. Only valid when used with the suggest API. Ignored when used in the query API.
	SourcePredefinedSourceQueryHistory = SourcePredefinedSource("QUERY_HISTORY")
	// Suggests people in the organization. Only valid when used with the suggest API. Results in an error when used in the query API.
	SourcePredefinedSourcePerson         = SourcePredefinedSource("PERSON")
	SourcePredefinedSourceGoogleDrive    = SourcePredefinedSource("GOOGLE_DRIVE")
	SourcePredefinedSourceGoogleGmail    = SourcePredefinedSource("GOOGLE_GMAIL")
	SourcePredefinedSourceGoogleSites    = SourcePredefinedSource("GOOGLE_SITES")
	SourcePredefinedSourceGoogleGroups   = SourcePredefinedSource("GOOGLE_GROUPS")
	SourcePredefinedSourceGoogleCalendar = SourcePredefinedSource("GOOGLE_CALENDAR")
	SourcePredefinedSourceGoogleKeep     = SourcePredefinedSource("GOOGLE_KEEP")
)

func (SourcePredefinedSource) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SourcePredefinedSource) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourcePredefinedSource) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourcePredefinedSource) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourcePredefinedSource) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Importance of the source.
type SourceScoringConfigSourceImportance pulumi.String

const (
	SourceScoringConfigSourceImportanceDefault = SourceScoringConfigSourceImportance("DEFAULT")
	SourceScoringConfigSourceImportanceLow     = SourceScoringConfigSourceImportance("LOW")
	SourceScoringConfigSourceImportanceHigh    = SourceScoringConfigSourceImportance("HIGH")
)

func (SourceScoringConfigSourceImportance) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SourceScoringConfigSourceImportance) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceScoringConfigSourceImportance) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SourceScoringConfigSourceImportance) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SourceScoringConfigSourceImportance) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
