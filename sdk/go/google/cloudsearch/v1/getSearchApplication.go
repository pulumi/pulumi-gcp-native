// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the specified search application. **Note:** This API requires an admin account to execute.
func LookupSearchApplication(ctx *pulumi.Context, args *LookupSearchApplicationArgs, opts ...pulumi.InvokeOption) (*LookupSearchApplicationResult, error) {
	var rv LookupSearchApplicationResult
	err := ctx.Invoke("google-native:cloudsearch/v1:getSearchApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSearchApplicationArgs struct {
	DebugOptionsEnableDebugging *string `pulumi:"debugOptionsEnableDebugging"`
	SearchapplicationId         string  `pulumi:"searchapplicationId"`
}

type LookupSearchApplicationResult struct {
	// Retrictions applied to the configurations. The maximum number of elements is 10.
	DataSourceRestrictions []DataSourceRestrictionResponse `pulumi:"dataSourceRestrictions"`
	// The default fields for returning facet results. The sources specified here also have been included in data_source_restrictions above.
	DefaultFacetOptions []FacetOptionsResponse `pulumi:"defaultFacetOptions"`
	// The default options for sorting the search results
	DefaultSortOptions SortOptionsResponse `pulumi:"defaultSortOptions"`
	// Display name of the Search Application. The maximum length is 300 characters.
	DisplayName string `pulumi:"displayName"`
	// Indicates whether audit logging is on/off for requests made for the search application in query APIs.
	EnableAuditLog bool `pulumi:"enableAuditLog"`
	// Name of the Search Application. Format: searchapplications/{application_id}.
	Name string `pulumi:"name"`
	// IDs of the Long Running Operations (LROs) currently running for this schema. Output only field.
	OperationIds []string `pulumi:"operationIds"`
	// Configuration for ranking results.
	ScoringConfig ScoringConfigResponse `pulumi:"scoringConfig"`
	// Configuration for a sources specified in data_source_restrictions.
	SourceConfig []SourceConfigResponse `pulumi:"sourceConfig"`
}
