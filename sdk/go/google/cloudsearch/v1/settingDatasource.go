// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a datasource. **Note:** This API requires an admin account to execute.
type SettingDatasource struct {
	pulumi.CustomResourceState

	// If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
	DisableModifications pulumi.BoolOutput `pulumi:"disableModifications"`
	// Disable serving any search or assist results.
	DisableServing pulumi.BoolOutput `pulumi:"disableServing"`
	// Required. Display name of the datasource The maximum length is 300 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// List of service accounts that have indexing access.
	IndexingServiceAccounts pulumi.StringArrayOutput `pulumi:"indexingServiceAccounts"`
	// This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
	ItemsVisibility GSuitePrincipalResponseArrayOutput `pulumi:"itemsVisibility"`
	// Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
	Name pulumi.StringOutput `pulumi:"name"`
	// IDs of the Long Running Operations (LROs) currently running for this schema.
	OperationIds pulumi.StringArrayOutput `pulumi:"operationIds"`
	// A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
	ShortName pulumi.StringOutput `pulumi:"shortName"`
}

// NewSettingDatasource registers a new resource with the given unique name, arguments, and options.
func NewSettingDatasource(ctx *pulumi.Context,
	name string, args *SettingDatasourceArgs, opts ...pulumi.ResourceOption) (*SettingDatasource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasourcesId == nil {
		return nil, errors.New("invalid value for required argument 'DatasourcesId'")
	}
	var resource SettingDatasource
	err := ctx.RegisterResource("google-cloud:cloudsearch/v1:SettingDatasource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettingDatasource gets an existing SettingDatasource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettingDatasource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingDatasourceState, opts ...pulumi.ResourceOption) (*SettingDatasource, error) {
	var resource SettingDatasource
	err := ctx.ReadResource("google-cloud:cloudsearch/v1:SettingDatasource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SettingDatasource resources.
type settingDatasourceState struct {
	// If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
	DisableModifications *bool `pulumi:"disableModifications"`
	// Disable serving any search or assist results.
	DisableServing *bool `pulumi:"disableServing"`
	// Required. Display name of the datasource The maximum length is 300 characters.
	DisplayName *string `pulumi:"displayName"`
	// List of service accounts that have indexing access.
	IndexingServiceAccounts []string `pulumi:"indexingServiceAccounts"`
	// This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
	ItemsVisibility []GSuitePrincipalResponse `pulumi:"itemsVisibility"`
	// Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
	Name *string `pulumi:"name"`
	// IDs of the Long Running Operations (LROs) currently running for this schema.
	OperationIds []string `pulumi:"operationIds"`
	// A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
	ShortName *string `pulumi:"shortName"`
}

type SettingDatasourceState struct {
	// If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
	DisableModifications pulumi.BoolPtrInput
	// Disable serving any search or assist results.
	DisableServing pulumi.BoolPtrInput
	// Required. Display name of the datasource The maximum length is 300 characters.
	DisplayName pulumi.StringPtrInput
	// List of service accounts that have indexing access.
	IndexingServiceAccounts pulumi.StringArrayInput
	// This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
	ItemsVisibility GSuitePrincipalResponseArrayInput
	// Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
	Name pulumi.StringPtrInput
	// IDs of the Long Running Operations (LROs) currently running for this schema.
	OperationIds pulumi.StringArrayInput
	// A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
	ShortName pulumi.StringPtrInput
}

func (SettingDatasourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*settingDatasourceState)(nil)).Elem()
}

type settingDatasourceArgs struct {
	DatasourcesId string `pulumi:"datasourcesId"`
	// If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
	DisableModifications *bool `pulumi:"disableModifications"`
	// Disable serving any search or assist results.
	DisableServing *bool `pulumi:"disableServing"`
	// Required. Display name of the datasource The maximum length is 300 characters.
	DisplayName *string `pulumi:"displayName"`
	// List of service accounts that have indexing access.
	IndexingServiceAccounts []string `pulumi:"indexingServiceAccounts"`
	// This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
	ItemsVisibility []GSuitePrincipal `pulumi:"itemsVisibility"`
	// Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
	Name *string `pulumi:"name"`
	// IDs of the Long Running Operations (LROs) currently running for this schema.
	OperationIds []string `pulumi:"operationIds"`
	// A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
	ShortName *string `pulumi:"shortName"`
}

// The set of arguments for constructing a SettingDatasource resource.
type SettingDatasourceArgs struct {
	DatasourcesId pulumi.StringInput
	// If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
	DisableModifications pulumi.BoolPtrInput
	// Disable serving any search or assist results.
	DisableServing pulumi.BoolPtrInput
	// Required. Display name of the datasource The maximum length is 300 characters.
	DisplayName pulumi.StringPtrInput
	// List of service accounts that have indexing access.
	IndexingServiceAccounts pulumi.StringArrayInput
	// This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
	ItemsVisibility GSuitePrincipalArrayInput
	// Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
	Name pulumi.StringPtrInput
	// IDs of the Long Running Operations (LROs) currently running for this schema.
	OperationIds pulumi.StringArrayInput
	// A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
	ShortName pulumi.StringPtrInput
}

func (SettingDatasourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*settingDatasourceArgs)(nil)).Elem()
}

type SettingDatasourceInput interface {
	pulumi.Input

	ToSettingDatasourceOutput() SettingDatasourceOutput
	ToSettingDatasourceOutputWithContext(ctx context.Context) SettingDatasourceOutput
}

func (*SettingDatasource) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingDatasource)(nil))
}

func (i *SettingDatasource) ToSettingDatasourceOutput() SettingDatasourceOutput {
	return i.ToSettingDatasourceOutputWithContext(context.Background())
}

func (i *SettingDatasource) ToSettingDatasourceOutputWithContext(ctx context.Context) SettingDatasourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingDatasourceOutput)
}

type SettingDatasourceOutput struct {
	*pulumi.OutputState
}

func (SettingDatasourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingDatasource)(nil))
}

func (o SettingDatasourceOutput) ToSettingDatasourceOutput() SettingDatasourceOutput {
	return o
}

func (o SettingDatasourceOutput) ToSettingDatasourceOutputWithContext(ctx context.Context) SettingDatasourceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SettingDatasourceOutput{})
}
