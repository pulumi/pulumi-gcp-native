// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Allocated connection of the AppGateway.
type AllocatedConnectionResponse struct {
	// The ingress port of an allocated connection
	IngressPort int `pulumi:"ingressPort"`
	// The PSC uri of an allocated connection
	PscUri string `pulumi:"pscUri"`
}

// Allocated connection of the AppGateway.
type AllocatedConnectionResponseOutput struct{ *pulumi.OutputState }

func (AllocatedConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllocatedConnectionResponse)(nil)).Elem()
}

func (o AllocatedConnectionResponseOutput) ToAllocatedConnectionResponseOutput() AllocatedConnectionResponseOutput {
	return o
}

func (o AllocatedConnectionResponseOutput) ToAllocatedConnectionResponseOutputWithContext(ctx context.Context) AllocatedConnectionResponseOutput {
	return o
}

// The ingress port of an allocated connection
func (o AllocatedConnectionResponseOutput) IngressPort() pulumi.IntOutput {
	return o.ApplyT(func(v AllocatedConnectionResponse) int { return v.IngressPort }).(pulumi.IntOutput)
}

// The PSC uri of an allocated connection
func (o AllocatedConnectionResponseOutput) PscUri() pulumi.StringOutput {
	return o.ApplyT(func(v AllocatedConnectionResponse) string { return v.PscUri }).(pulumi.StringOutput)
}

type AllocatedConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AllocatedConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllocatedConnectionResponse)(nil)).Elem()
}

func (o AllocatedConnectionResponseArrayOutput) ToAllocatedConnectionResponseArrayOutput() AllocatedConnectionResponseArrayOutput {
	return o
}

func (o AllocatedConnectionResponseArrayOutput) ToAllocatedConnectionResponseArrayOutputWithContext(ctx context.Context) AllocatedConnectionResponseArrayOutput {
	return o
}

func (o AllocatedConnectionResponseArrayOutput) Index(i pulumi.IntInput) AllocatedConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllocatedConnectionResponse {
		return vs[0].([]AllocatedConnectionResponse)[vs[1].(int)]
	}).(AllocatedConnectionResponseOutput)
}

// ApplicationEndpoint represents a remote application endpoint.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint struct {
	// Hostname or IP address of the remote application endpoint.
	Host string `pulumi:"host"`
	// Port of the remote application endpoint.
	Port int `pulumi:"port"`
}

// GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointInput is an input type that accepts GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs and GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointInput` via:
//
//	GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs{...}
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput
	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput
}

// ApplicationEndpoint represents a remote application endpoint.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs struct {
	// Hostname or IP address of the remote application endpoint.
	Host pulumi.StringInput `pulumi:"host"`
	// Port of the remote application endpoint.
	Port pulumi.IntInput `pulumi:"port"`
}

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput)
}

// ApplicationEndpoint represents a remote application endpoint.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput {
	return o
}

// Hostname or IP address of the remote application endpoint.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint) string { return v.Host }).(pulumi.StringOutput)
}

// Port of the remote application endpoint.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpoint) int { return v.Port }).(pulumi.IntOutput)
}

// ApplicationEndpoint represents a remote application endpoint.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponse struct {
	// Hostname or IP address of the remote application endpoint.
	Host string `pulumi:"host"`
	// Port of the remote application endpoint.
	Port int `pulumi:"port"`
}

// ApplicationEndpoint represents a remote application endpoint.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput {
	return o
}

// Hostname or IP address of the remote application endpoint.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponse) string {
		return v.Host
	}).(pulumi.StringOutput)
}

// Port of the remote application endpoint.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponse) int {
		return v.Port
	}).(pulumi.IntOutput)
}

// Gateway represents a user facing component that serves as an entrance to enable connectivity.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway struct {
	// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
	AppGateway string `pulumi:"appGateway"`
	// The type of hosting used by the gateway.
	Type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType `pulumi:"type"`
}

// GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayInput is an input type that accepts GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs and GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayInput` via:
//
//	GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs{...}
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput
	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput
}

// Gateway represents a user facing component that serves as an entrance to enable connectivity.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs struct {
	// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
	AppGateway pulumi.StringInput `pulumi:"appGateway"`
	// The type of hosting used by the gateway.
	Type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayTypeInput `pulumi:"type"`
}

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput)
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput).ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(ctx)
}

// GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrInput is an input type that accepts GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs, GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtr and GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrInput` via:
//
//	        GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput
	ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput
}

type googleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrType GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs

func GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtr(v *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrInput {
	return (*googleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrType)(v)
}

func (*googleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway)(nil)).Elem()
}

func (i *googleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrType) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(context.Background())
}

func (i *googleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrType) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput)
}

// Gateway represents a user facing component that serves as an entrance to enable connectivity.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return o.ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway {
		return &v
	}).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput)
}

// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) AppGateway() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) string { return v.AppGateway }).(pulumi.StringOutput)
}

// The type of hosting used by the gateway.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput) Type() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayTypeOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType {
		return v.Type
	}).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayTypeOutput)
}

type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) Elem() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway
		return ret
	}).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput)
}

// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) AppGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) *string {
		if v == nil {
			return nil
		}
		return &v.AppGateway
	}).(pulumi.StringPtrOutput)
}

// The type of hosting used by the gateway.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput) Type() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayTypePtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGateway) *GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayTypePtrOutput)
}

// Gateway represents a user facing component that serves as an entrance to enable connectivity.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse struct {
	// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
	AppGateway string `pulumi:"appGateway"`
	// Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
	IngressPort int `pulumi:"ingressPort"`
	// L7 private service connection for this resource.
	L7psc string `pulumi:"l7psc"`
	// The type of hosting used by the gateway.
	Type string `pulumi:"type"`
	// Server-defined URI for this resource.
	Uri string `pulumi:"uri"`
}

// Gateway represents a user facing component that serves as an entrance to enable connectivity.
type GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput() GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) ToGoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput {
	return o
}

// AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) AppGateway() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse) string { return v.AppGateway }).(pulumi.StringOutput)
}

// Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) IngressPort() pulumi.IntOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse) int { return v.IngressPort }).(pulumi.IntOutput)
}

// L7 private service connection for this resource.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) L7psc() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse) string { return v.L7psc }).(pulumi.StringOutput)
}

// The type of hosting used by the gateway.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Server-defined URI for this resource.
func (o GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// PrincipalInfo represents an Identity oneof.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo struct {
	// A GCP service account.
	ServiceAccount *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount `pulumi:"serviceAccount"`
}

// GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs and GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoInput` via:
//
//	GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs{...}
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput
}

// PrincipalInfo represents an Identity oneof.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs struct {
	// A GCP service account.
	ServiceAccount GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput `pulumi:"serviceAccount"`
}

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput)
}

// PrincipalInfo represents an Identity oneof.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput {
	return o
}

// A GCP service account.
func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput) ServiceAccount() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfo) *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount {
		return v.ServiceAccount
	}).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput)
}

// PrincipalInfo represents an Identity oneof.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponse struct {
	// A GCP service account.
	ServiceAccount GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponse `pulumi:"serviceAccount"`
}

// PrincipalInfo represents an Identity oneof.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput {
	return o
}

// A GCP service account.
func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput) ServiceAccount() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponse) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponse {
		return v.ServiceAccount
	}).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput)
}

// ServiceAccount represents a GCP service account.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount struct {
	// Email address of the service account.
	Email *string `pulumi:"email"`
}

// GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs and GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountInput` via:
//
//	GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs{...}
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput
}

// ServiceAccount represents a GCP service account.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs struct {
	// Email address of the service account.
	Email pulumi.StringPtrInput `pulumi:"email"`
}

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput)
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput).ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(ctx)
}

// GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs, GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtr and GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput` via:
//
//	        GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput
}

type googleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrType GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs

func GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtr(v *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput {
	return (*googleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrType)(v)
}

func (*googleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount)(nil)).Elem()
}

func (i *googleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrType) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(context.Background())
}

func (i *googleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrType) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput)
}

// ServiceAccount represents a GCP service account.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return o.ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount) *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount {
		return &v
	}).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput)
}

// Email address of the service account.
func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount) *string {
		return v.Email
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput) Elem() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount
		return ret
	}).(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput)
}

// Email address of the service account.
func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// ServiceAccount represents a GCP service account.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponse struct {
	// Email address of the service account.
	Email string `pulumi:"email"`
}

// ServiceAccount represents a GCP service account.
type GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput() GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput {
	return o
}

// Email address of the service account.
func (o GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponse) string {
		return v.Email
	}).(pulumi.StringOutput)
}

// ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo struct {
	// Unique Id for the resource.
	Id string `pulumi:"id"`
	// Specific details for the resource. This is for internal use only.
	Resource map[string]interface{} `pulumi:"resource"`
	// Overall health status. Overall status is derived based on the status of each sub level resources.
	Status *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus `pulumi:"status"`
	// List of Info for the sub level resources.
	Sub []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo `pulumi:"sub"`
	// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
	Time *string `pulumi:"time"`
}

// GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs and GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoInput` via:
//
//	GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs{...}
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput
}

// ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs struct {
	// Unique Id for the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Specific details for the resource. This is for internal use only.
	Resource pulumi.MapInput `pulumi:"resource"`
	// Overall health status. Overall status is derived based on the status of each sub level resources.
	Status GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatusPtrInput `pulumi:"status"`
	// List of Info for the sub level resources.
	Sub GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayInput `pulumi:"sub"`
	// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
	Time pulumi.StringPtrInput `pulumi:"time"`
}

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput)
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput).ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(ctx)
}

// GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs, GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtr and GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrInput` via:
//
//	        GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput
}

type googleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrType GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs

func GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtr(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrInput {
	return (*googleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrType)(v)
}

func (*googleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (i *googleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrType) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(context.Background())
}

func (i *googleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrType) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput)
}

// GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray and GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayInput` via:
//
//	GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray{ GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs{...} }
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput
}

type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoInput

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return i.ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutputWithContext(context.Background())
}

func (i GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput)
}

// ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return o.ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo {
		return &v
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput)
}

// Unique Id for the resource.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) string { return v.Id }).(pulumi.StringOutput)
}

// Specific details for the resource. This is for internal use only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) Resource() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) map[string]interface{} { return v.Resource }).(pulumi.MapOutput)
}

// Overall health status. Overall status is derived based on the status of each sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) Status() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatusPtrOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus {
		return v.Status
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatusPtrOutput)
}

// List of Info for the sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) Sub() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo {
		return v.Sub
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput)
}

// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *string { return v.Time }).(pulumi.StringPtrOutput)
}

type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Elem() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo
		return ret
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput)
}

// Unique Id for the resource.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Specific details for the resource. This is for internal use only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Resource() pulumi.MapOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.MapOutput)
}

// Overall health status. Overall status is derived based on the status of each sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Status() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatusPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatusPtrOutput)
}

// List of Info for the sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Sub() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo {
		if v == nil {
			return nil
		}
		return v.Sub
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput)
}

// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo) *string {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput) Index(i pulumi.IntInput) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo {
		return vs[0].([]GoogleCloudBeyondcorpAppconnectorsV1ResourceInfo)[vs[1].(int)]
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput)
}

// ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse struct {
	// Specific details for the resource. This is for internal use only.
	Resource map[string]interface{} `pulumi:"resource"`
	// Overall health status. Overall status is derived based on the status of each sub level resources.
	Status string `pulumi:"status"`
	// List of Info for the sub level resources.
	Sub []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse `pulumi:"sub"`
	// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
	Time string `pulumi:"time"`
}

// ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput {
	return o
}

// Specific details for the resource. This is for internal use only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) Resource() pulumi.MapOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse) map[string]interface{} {
		return v.Resource
	}).(pulumi.MapOutput)
}

// Overall health status. Overall status is derived based on the status of each sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse) string { return v.Status }).(pulumi.StringOutput)
}

// List of Info for the sub level resources.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) Sub() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse) []GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse {
		return v.Sub
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput)
}

// The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse) string { return v.Time }).(pulumi.StringOutput)
}

type GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput() GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput) ToGoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse {
		return vs[0].([]GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponse)[vs[1].(int)]
	}).(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// GoogleIamV1AuditConfigInput is an input type that accepts GoogleIamV1AuditConfigArgs and GoogleIamV1AuditConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigInput` via:
//
//	GoogleIamV1AuditConfigArgs{...}
type GoogleIamV1AuditConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput
	ToGoogleIamV1AuditConfigOutputWithContext(context.Context) GoogleIamV1AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs GoogleIamV1AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (GoogleIamV1AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return i.ToGoogleIamV1AuditConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArgs) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigOutput)
}

// GoogleIamV1AuditConfigArrayInput is an input type that accepts GoogleIamV1AuditConfigArray and GoogleIamV1AuditConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditConfigArrayInput` via:
//
//	GoogleIamV1AuditConfigArray{ GoogleIamV1AuditConfigArgs{...} }
type GoogleIamV1AuditConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput
	ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditConfigArrayOutput
}

type GoogleIamV1AuditConfigArray []GoogleIamV1AuditConfigInput

func (GoogleIamV1AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return i.ToGoogleIamV1AuditConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditConfigArray) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutput() GoogleIamV1AuditConfigOutput {
	return o
}

func (o GoogleIamV1AuditConfigOutput) ToGoogleIamV1AuditConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) []GoogleIamV1AuditLogConfig { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GoogleIamV1AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type GoogleIamV1AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutput() GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) ToGoogleIamV1AuditConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfig {
		return vs[0].([]GoogleIamV1AuditConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []GoogleIamV1AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type GoogleIamV1AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutput() GoogleIamV1AuditConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseOutput) ToGoogleIamV1AuditConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o GoogleIamV1AuditConfigResponseOutput) AuditLogConfigs() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) []GoogleIamV1AuditLogConfigResponse { return v.AuditLogConfigs }).(GoogleIamV1AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o GoogleIamV1AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type GoogleIamV1AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutput() GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) ToGoogleIamV1AuditConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditConfigResponse {
		return vs[0].([]GoogleIamV1AuditConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *GoogleIamV1AuditLogConfigLogType `pulumi:"logType"`
}

// GoogleIamV1AuditLogConfigInput is an input type that accepts GoogleIamV1AuditLogConfigArgs and GoogleIamV1AuditLogConfigOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigInput` via:
//
//	GoogleIamV1AuditLogConfigArgs{...}
type GoogleIamV1AuditLogConfigInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput
	ToGoogleIamV1AuditLogConfigOutputWithContext(context.Context) GoogleIamV1AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType GoogleIamV1AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (GoogleIamV1AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return i.ToGoogleIamV1AuditLogConfigOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArgs) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigOutput)
}

// GoogleIamV1AuditLogConfigArrayInput is an input type that accepts GoogleIamV1AuditLogConfigArray and GoogleIamV1AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigArrayInput` via:
//
//	GoogleIamV1AuditLogConfigArray{ GoogleIamV1AuditLogConfigArgs{...} }
type GoogleIamV1AuditLogConfigArrayInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput
	ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Context) GoogleIamV1AuditLogConfigArrayOutput
}

type GoogleIamV1AuditLogConfigArray []GoogleIamV1AuditLogConfigInput

func (GoogleIamV1AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return i.ToGoogleIamV1AuditLogConfigArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1AuditLogConfigArray) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutput() GoogleIamV1AuditLogConfigOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigOutput) ToGoogleIamV1AuditLogConfigOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigOutput) LogType() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfig) *GoogleIamV1AuditLogConfigLogType { return v.LogType }).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

type GoogleIamV1AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfig)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutput() GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) ToGoogleIamV1AuditLogConfigArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfig {
		return vs[0].([]GoogleIamV1AuditLogConfig)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type GoogleIamV1AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutput() GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseOutput) ToGoogleIamV1AuditLogConfigResponseOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o GoogleIamV1AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o GoogleIamV1AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type GoogleIamV1AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1AuditLogConfigResponse)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutput() GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) ToGoogleIamV1AuditLogConfigResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigResponseArrayOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1AuditLogConfigResponse {
		return vs[0].([]GoogleIamV1AuditLogConfigResponse)[vs[1].(int)]
	}).(GoogleIamV1AuditLogConfigResponseOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *GoogleTypeExpr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// GoogleIamV1BindingInput is an input type that accepts GoogleIamV1BindingArgs and GoogleIamV1BindingOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingInput` via:
//
//	GoogleIamV1BindingArgs{...}
type GoogleIamV1BindingInput interface {
	pulumi.Input

	ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput
	ToGoogleIamV1BindingOutputWithContext(context.Context) GoogleIamV1BindingOutput
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (GoogleIamV1BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return i.ToGoogleIamV1BindingOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArgs) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingOutput)
}

// GoogleIamV1BindingArrayInput is an input type that accepts GoogleIamV1BindingArray and GoogleIamV1BindingArrayOutput values.
// You can construct a concrete instance of `GoogleIamV1BindingArrayInput` via:
//
//	GoogleIamV1BindingArray{ GoogleIamV1BindingArgs{...} }
type GoogleIamV1BindingArrayInput interface {
	pulumi.Input

	ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput
	ToGoogleIamV1BindingArrayOutputWithContext(context.Context) GoogleIamV1BindingArrayOutput
}

type GoogleIamV1BindingArray []GoogleIamV1BindingInput

func (GoogleIamV1BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return i.ToGoogleIamV1BindingArrayOutputWithContext(context.Background())
}

func (i GoogleIamV1BindingArray) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleIamV1BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutput() GoogleIamV1BindingOutput {
	return o
}

func (o GoogleIamV1BindingOutput) ToGoogleIamV1BindingOutputWithContext(ctx context.Context) GoogleIamV1BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingOutput) Condition() GoogleTypeExprPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *GoogleTypeExpr { return v.Condition }).(GoogleTypeExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o GoogleIamV1BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o GoogleIamV1BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleIamV1Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type GoogleIamV1BindingArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1Binding)(nil)).Elem()
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutput() GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) ToGoogleIamV1BindingArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingArrayOutput {
	return o
}

func (o GoogleIamV1BindingArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1Binding {
		return vs[0].([]GoogleIamV1Binding)[vs[1].(int)]
	}).(GoogleIamV1BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition GoogleTypeExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type GoogleIamV1BindingResponseOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutput() GoogleIamV1BindingResponseOutput {
	return o
}

func (o GoogleIamV1BindingResponseOutput) ToGoogleIamV1BindingResponseOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o GoogleIamV1BindingResponseOutput) Condition() GoogleTypeExprResponseOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) GoogleTypeExprResponse { return v.Condition }).(GoogleTypeExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o GoogleIamV1BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o GoogleIamV1BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleIamV1BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type GoogleIamV1BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleIamV1BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleIamV1BindingResponse)(nil)).Elem()
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutput() GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) ToGoogleIamV1BindingResponseArrayOutputWithContext(ctx context.Context) GoogleIamV1BindingResponseArrayOutput {
	return o
}

func (o GoogleIamV1BindingResponseArrayOutput) Index(i pulumi.IntInput) GoogleIamV1BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleIamV1BindingResponse {
		return vs[0].([]GoogleIamV1BindingResponse)[vs[1].(int)]
	}).(GoogleIamV1BindingResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExpr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// GoogleTypeExprInput is an input type that accepts GoogleTypeExprArgs and GoogleTypeExprOutput values.
// You can construct a concrete instance of `GoogleTypeExprInput` via:
//
//	GoogleTypeExprArgs{...}
type GoogleTypeExprInput interface {
	pulumi.Input

	ToGoogleTypeExprOutput() GoogleTypeExprOutput
	ToGoogleTypeExprOutputWithContext(context.Context) GoogleTypeExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (GoogleTypeExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return i.ToGoogleTypeExprOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput)
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i GoogleTypeExprArgs) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprOutput).ToGoogleTypeExprPtrOutputWithContext(ctx)
}

// GoogleTypeExprPtrInput is an input type that accepts GoogleTypeExprArgs, GoogleTypeExprPtr and GoogleTypeExprPtrOutput values.
// You can construct a concrete instance of `GoogleTypeExprPtrInput` via:
//
//	        GoogleTypeExprArgs{...}
//
//	or:
//
//	        nil
type GoogleTypeExprPtrInput interface {
	pulumi.Input

	ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput
	ToGoogleTypeExprPtrOutputWithContext(context.Context) GoogleTypeExprPtrOutput
}

type googleTypeExprPtrType GoogleTypeExprArgs

func GoogleTypeExprPtr(v *GoogleTypeExprArgs) GoogleTypeExprPtrInput {
	return (*googleTypeExprPtrType)(v)
}

func (*googleTypeExprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return i.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (i *googleTypeExprPtrType) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleTypeExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutput() GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprOutputWithContext(ctx context.Context) GoogleTypeExprOutput {
	return o
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o.ToGoogleTypeExprPtrOutputWithContext(context.Background())
}

func (o GoogleTypeExprOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleTypeExpr) *GoogleTypeExpr {
		return &v
	}).(GoogleTypeExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleTypeExpr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type GoogleTypeExprPtrOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleTypeExpr)(nil)).Elem()
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutput() GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) ToGoogleTypeExprPtrOutputWithContext(ctx context.Context) GoogleTypeExprPtrOutput {
	return o
}

func (o GoogleTypeExprPtrOutput) Elem() GoogleTypeExprOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) GoogleTypeExpr {
		if v != nil {
			return *v
		}
		var ret GoogleTypeExpr
		return ret
	}).(GoogleTypeExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleTypeExpr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type GoogleTypeExprResponseOutput struct{ *pulumi.OutputState }

func (GoogleTypeExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleTypeExprResponse)(nil)).Elem()
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutput() GoogleTypeExprResponseOutput {
	return o
}

func (o GoogleTypeExprResponseOutput) ToGoogleTypeExprResponseOutputWithContext(ctx context.Context) GoogleTypeExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o GoogleTypeExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o GoogleTypeExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o GoogleTypeExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o GoogleTypeExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleTypeExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigInput)(nil)).Elem(), GoogleIamV1AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigArrayInput)(nil)).Elem(), GoogleIamV1AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingInput)(nil)).Elem(), GoogleIamV1BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1BindingArrayInput)(nil)).Elem(), GoogleIamV1BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleTypeExprPtrInput)(nil)).Elem(), GoogleTypeExprArgs{})
	pulumi.RegisterOutputType(AllocatedConnectionResponseOutput{})
	pulumi.RegisterOutputType(AllocatedConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingArrayOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseOutput{})
	pulumi.RegisterOutputType(GoogleIamV1BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprPtrOutput{})
	pulumi.RegisterOutputType(GoogleTypeExprResponseOutput{})
}
