// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new BeyondCorp Enterprise tenant in a given organization and can only be called by onboarded BeyondCorp Enterprise partner.
// Auto-naming is currently not supported for this resource.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type Tenant struct {
	pulumi.CustomResourceState

	// Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. An arbitrary caller-provided name for the Tenant. Cannot exceed 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. Google group email to which the Tenant is enabled.
	GoogleGroupEmail pulumi.StringOutput `pulumi:"googleGroupEmail"`
	// Optional. Google group ID to which the Tenant is enabled.
	GoogleGroupId pulumi.StringOutput `pulumi:"googleGroupId"`
	// Unique resource name of the Tenant. The name is ignored when creating Tenant.
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Optional. Metadata provided by the Partner associated with Tenant.
	PartnerMetadata GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput `pulumi:"partnerMetadata"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewTenant registers a new resource with the given unique name, arguments, and options.
func NewTenant(ctx *pulumi.Context,
	name string, args *TenantArgs, opts ...pulumi.ResourceOption) (*Tenant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	var resource Tenant
	err := ctx.RegisterResource("google-native:beyondcorp/v1alpha:Tenant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTenant gets an existing Tenant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTenant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TenantState, opts ...pulumi.ResourceOption) (*Tenant, error) {
	var resource Tenant
	err := ctx.ReadResource("google-native:beyondcorp/v1alpha:Tenant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Tenant resources.
type tenantState struct {
}

type TenantState struct {
}

func (TenantState) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantState)(nil)).Elem()
}

type tenantArgs struct {
	// Optional. An arbitrary caller-provided name for the Tenant. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Optional. Google group email to which the Tenant is enabled.
	GoogleGroupEmail *string `pulumi:"googleGroupEmail"`
	// Optional. Google group ID to which the Tenant is enabled.
	GoogleGroupId  *string `pulumi:"googleGroupId"`
	OrganizationId string  `pulumi:"organizationId"`
	// Optional. Metadata provided by the Partner associated with Tenant.
	PartnerMetadata *GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata `pulumi:"partnerMetadata"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a Tenant resource.
type TenantArgs struct {
	// Optional. An arbitrary caller-provided name for the Tenant. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Optional. Google group email to which the Tenant is enabled.
	GoogleGroupEmail pulumi.StringPtrInput
	// Optional. Google group ID to which the Tenant is enabled.
	GoogleGroupId  pulumi.StringPtrInput
	OrganizationId pulumi.StringInput
	// Optional. Metadata provided by the Partner associated with Tenant.
	PartnerMetadata GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (TenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tenantArgs)(nil)).Elem()
}

type TenantInput interface {
	pulumi.Input

	ToTenantOutput() TenantOutput
	ToTenantOutputWithContext(ctx context.Context) TenantOutput
}

func (*Tenant) ElementType() reflect.Type {
	return reflect.TypeOf((**Tenant)(nil)).Elem()
}

func (i *Tenant) ToTenantOutput() TenantOutput {
	return i.ToTenantOutputWithContext(context.Background())
}

func (i *Tenant) ToTenantOutputWithContext(ctx context.Context) TenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantOutput)
}

type TenantOutput struct{ *pulumi.OutputState }

func (TenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tenant)(nil)).Elem()
}

func (o TenantOutput) ToTenantOutput() TenantOutput {
	return o
}

func (o TenantOutput) ToTenantOutputWithContext(ctx context.Context) TenantOutput {
	return o
}

// Timestamp when the resource was created.
func (o TenantOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary caller-provided name for the Tenant. Cannot exceed 64 characters.
func (o TenantOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Google group email to which the Tenant is enabled.
func (o TenantOutput) GoogleGroupEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.GoogleGroupEmail }).(pulumi.StringOutput)
}

// Optional. Google group ID to which the Tenant is enabled.
func (o TenantOutput) GoogleGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.GoogleGroupId }).(pulumi.StringOutput)
}

// Unique resource name of the Tenant. The name is ignored when creating Tenant.
func (o TenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TenantOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Optional. Metadata provided by the Partner associated with Tenant.
func (o TenantOutput) PartnerMetadata() GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput {
	return o.ApplyT(func(v *Tenant) GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput {
		return v.PartnerMetadata
	}).(GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o TenantOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Timestamp when the resource was last modified.
func (o TenantOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Tenant) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TenantInput)(nil)).Elem(), &Tenant{})
	pulumi.RegisterOutputType(TenantOutput{})
}
