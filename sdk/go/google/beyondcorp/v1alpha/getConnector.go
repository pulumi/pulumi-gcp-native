// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single Connector.
func LookupConnector(ctx *pulumi.Context, args *LookupConnectorArgs, opts ...pulumi.InvokeOption) (*LookupConnectorResult, error) {
	var rv LookupConnectorResult
	err := ctx.Invoke("google-native:beyondcorp/v1alpha:getConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectorArgs struct {
	ConnectorId string  `pulumi:"connectorId"`
	Location    string  `pulumi:"location"`
	Project     *string `pulumi:"project"`
}

type LookupConnectorResult struct {
	// Timestamp when the resource was created.
	CreateTime string `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the connector. Cannot exceed 64 characters.
	DisplayName string `pulumi:"displayName"`
	// Optional. Resource labels to represent user provided metadata.
	Labels map[string]string `pulumi:"labels"`
	// Unique resource name of the connector. The name is ignored when creating a connector.
	Name string `pulumi:"name"`
	// Principal information about the Identity of the connector.
	PrincipalInfo PrincipalInfoResponse `pulumi:"principalInfo"`
	// Optional. Resource info of the connector.
	ResourceInfo ResourceInfoResponse `pulumi:"resourceInfo"`
	// The current state of the connector.
	State string `pulumi:"state"`
	// A unique identifier for the instance generated by the system.
	Uid string `pulumi:"uid"`
	// Timestamp when the resource was last modified.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupConnectorOutput(ctx *pulumi.Context, args LookupConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectorResult, error) {
			args := v.(LookupConnectorArgs)
			r, err := LookupConnector(ctx, &args, opts...)
			var s LookupConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectorResultOutput)
}

type LookupConnectorOutputArgs struct {
	ConnectorId pulumi.StringInput    `pulumi:"connectorId"`
	Location    pulumi.StringInput    `pulumi:"location"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorArgs)(nil)).Elem()
}

type LookupConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorResult)(nil)).Elem()
}

func (o LookupConnectorResultOutput) ToLookupConnectorResultOutput() LookupConnectorResultOutput {
	return o
}

func (o LookupConnectorResultOutput) ToLookupConnectorResultOutputWithContext(ctx context.Context) LookupConnectorResultOutput {
	return o
}

// Timestamp when the resource was created.
func (o LookupConnectorResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary user-provided name for the connector. Cannot exceed 64 characters.
func (o LookupConnectorResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user provided metadata.
func (o LookupConnectorResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupConnectorResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Unique resource name of the connector. The name is ignored when creating a connector.
func (o LookupConnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Principal information about the Identity of the connector.
func (o LookupConnectorResultOutput) PrincipalInfo() PrincipalInfoResponseOutput {
	return o.ApplyT(func(v LookupConnectorResult) PrincipalInfoResponse { return v.PrincipalInfo }).(PrincipalInfoResponseOutput)
}

// Optional. Resource info of the connector.
func (o LookupConnectorResultOutput) ResourceInfo() ResourceInfoResponseOutput {
	return o.ApplyT(func(v LookupConnectorResult) ResourceInfoResponse { return v.ResourceInfo }).(ResourceInfoResponseOutput)
}

// The current state of the connector.
func (o LookupConnectorResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.State }).(pulumi.StringOutput)
}

// A unique identifier for the instance generated by the system.
func (o LookupConnectorResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Timestamp when the resource was last modified.
func (o LookupConnectorResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectorResultOutput{})
}
