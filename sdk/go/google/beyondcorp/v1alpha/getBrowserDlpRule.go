// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details of a single BrowserDlpRule.
func LookupBrowserDlpRule(ctx *pulumi.Context, args *LookupBrowserDlpRuleArgs, opts ...pulumi.InvokeOption) (*LookupBrowserDlpRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBrowserDlpRuleResult
	err := ctx.Invoke("google-native:beyondcorp/v1alpha:getBrowserDlpRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBrowserDlpRuleArgs struct {
	BrowserDlpRuleId string `pulumi:"browserDlpRuleId"`
	OrganizationId   string `pulumi:"organizationId"`
	PartnerTenantId  string `pulumi:"partnerTenantId"`
}

type LookupBrowserDlpRuleResult struct {
	// The group to which this Rule should be applied to.
	Group GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponse `pulumi:"group"`
	// Unique resource name. The name is ignored when creating BrowserDlpRule.
	Name string `pulumi:"name"`
	// The policy settings to apply.
	RuleSetting GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingResponse `pulumi:"ruleSetting"`
}

func LookupBrowserDlpRuleOutput(ctx *pulumi.Context, args LookupBrowserDlpRuleOutputArgs, opts ...pulumi.InvokeOption) LookupBrowserDlpRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBrowserDlpRuleResult, error) {
			args := v.(LookupBrowserDlpRuleArgs)
			r, err := LookupBrowserDlpRule(ctx, &args, opts...)
			var s LookupBrowserDlpRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBrowserDlpRuleResultOutput)
}

type LookupBrowserDlpRuleOutputArgs struct {
	BrowserDlpRuleId pulumi.StringInput `pulumi:"browserDlpRuleId"`
	OrganizationId   pulumi.StringInput `pulumi:"organizationId"`
	PartnerTenantId  pulumi.StringInput `pulumi:"partnerTenantId"`
}

func (LookupBrowserDlpRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrowserDlpRuleArgs)(nil)).Elem()
}

type LookupBrowserDlpRuleResultOutput struct{ *pulumi.OutputState }

func (LookupBrowserDlpRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrowserDlpRuleResult)(nil)).Elem()
}

func (o LookupBrowserDlpRuleResultOutput) ToLookupBrowserDlpRuleResultOutput() LookupBrowserDlpRuleResultOutput {
	return o
}

func (o LookupBrowserDlpRuleResultOutput) ToLookupBrowserDlpRuleResultOutputWithContext(ctx context.Context) LookupBrowserDlpRuleResultOutput {
	return o
}

func (o LookupBrowserDlpRuleResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupBrowserDlpRuleResult] {
	return pulumix.Output[LookupBrowserDlpRuleResult]{
		OutputState: o.OutputState,
	}
}

// The group to which this Rule should be applied to.
func (o LookupBrowserDlpRuleResultOutput) Group() GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput {
	return o.ApplyT(func(v LookupBrowserDlpRuleResult) GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponse {
		return v.Group
	}).(GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput)
}

// Unique resource name. The name is ignored when creating BrowserDlpRule.
func (o LookupBrowserDlpRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrowserDlpRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The policy settings to apply.
func (o LookupBrowserDlpRuleResultOutput) RuleSetting() GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingResponseOutput {
	return o.ApplyT(func(v LookupBrowserDlpRuleResult) GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingResponse {
		return v.RuleSetting
	}).(GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBrowserDlpRuleResultOutput{})
}
