// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Required. The type of network connectivity used by the AppConnection.
type AppConnectionType string

const (
	// Default value. This value is unused.
	AppConnectionTypeTypeUnspecified = AppConnectionType("TYPE_UNSPECIFIED")
	// TCP Proxy based BeyondCorp AppConnection. API will default to this if unset.
	AppConnectionTypeTcpProxy = AppConnectionType("TCP_PROXY")
)

func (AppConnectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionType)(nil)).Elem()
}

func (e AppConnectionType) ToAppConnectionTypeOutput() AppConnectionTypeOutput {
	return pulumi.ToOutput(e).(AppConnectionTypeOutput)
}

func (e AppConnectionType) ToAppConnectionTypeOutputWithContext(ctx context.Context) AppConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppConnectionTypeOutput)
}

func (e AppConnectionType) ToAppConnectionTypePtrOutput() AppConnectionTypePtrOutput {
	return e.ToAppConnectionTypePtrOutputWithContext(context.Background())
}

func (e AppConnectionType) ToAppConnectionTypePtrOutputWithContext(ctx context.Context) AppConnectionTypePtrOutput {
	return AppConnectionType(e).ToAppConnectionTypeOutputWithContext(ctx).ToAppConnectionTypePtrOutputWithContext(ctx)
}

func (e AppConnectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppConnectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppConnectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppConnectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppConnectionTypeOutput struct{ *pulumi.OutputState }

func (AppConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionType)(nil)).Elem()
}

func (o AppConnectionTypeOutput) ToAppConnectionTypeOutput() AppConnectionTypeOutput {
	return o
}

func (o AppConnectionTypeOutput) ToAppConnectionTypeOutputWithContext(ctx context.Context) AppConnectionTypeOutput {
	return o
}

func (o AppConnectionTypeOutput) ToAppConnectionTypePtrOutput() AppConnectionTypePtrOutput {
	return o.ToAppConnectionTypePtrOutputWithContext(context.Background())
}

func (o AppConnectionTypeOutput) ToAppConnectionTypePtrOutputWithContext(ctx context.Context) AppConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionType) *AppConnectionType {
		return &v
	}).(AppConnectionTypePtrOutput)
}

func (o AppConnectionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AppConnectionType] {
	return pulumix.Output[AppConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o AppConnectionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppConnectionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppConnectionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppConnectionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppConnectionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppConnectionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (AppConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionType)(nil)).Elem()
}

func (o AppConnectionTypePtrOutput) ToAppConnectionTypePtrOutput() AppConnectionTypePtrOutput {
	return o
}

func (o AppConnectionTypePtrOutput) ToAppConnectionTypePtrOutputWithContext(ctx context.Context) AppConnectionTypePtrOutput {
	return o
}

func (o AppConnectionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppConnectionType] {
	return pulumix.Output[*AppConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o AppConnectionTypePtrOutput) Elem() AppConnectionTypeOutput {
	return o.ApplyT(func(v *AppConnectionType) AppConnectionType {
		if v != nil {
			return *v
		}
		var ret AppConnectionType
		return ret
	}).(AppConnectionTypeOutput)
}

func (o AppConnectionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppConnectionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppConnectionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppConnectionTypeInput is an input type that accepts AppConnectionTypeArgs and AppConnectionTypeOutput values.
// You can construct a concrete instance of `AppConnectionTypeInput` via:
//
//	AppConnectionTypeArgs{...}
type AppConnectionTypeInput interface {
	pulumi.Input

	ToAppConnectionTypeOutput() AppConnectionTypeOutput
	ToAppConnectionTypeOutputWithContext(context.Context) AppConnectionTypeOutput
}

var appConnectionTypePtrType = reflect.TypeOf((**AppConnectionType)(nil)).Elem()

type AppConnectionTypePtrInput interface {
	pulumi.Input

	ToAppConnectionTypePtrOutput() AppConnectionTypePtrOutput
	ToAppConnectionTypePtrOutputWithContext(context.Context) AppConnectionTypePtrOutput
}

type appConnectionTypePtr string

func AppConnectionTypePtr(v string) AppConnectionTypePtrInput {
	return (*appConnectionTypePtr)(&v)
}

func (*appConnectionTypePtr) ElementType() reflect.Type {
	return appConnectionTypePtrType
}

func (in *appConnectionTypePtr) ToAppConnectionTypePtrOutput() AppConnectionTypePtrOutput {
	return pulumi.ToOutput(in).(AppConnectionTypePtrOutput)
}

func (in *appConnectionTypePtr) ToAppConnectionTypePtrOutputWithContext(ctx context.Context) AppConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppConnectionTypePtrOutput)
}

func (in *appConnectionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AppConnectionType] {
	return pulumix.Output[*AppConnectionType]{
		OutputState: in.ToAppConnectionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of hosting used by the AppGateway.
type AppGatewayHostType string

const (
	// Default value. This value is unused.
	AppGatewayHostTypeHostTypeUnspecified = AppGatewayHostType("HOST_TYPE_UNSPECIFIED")
	// AppGateway hosted in a GCP regional managed instance group.
	AppGatewayHostTypeGcpRegionalMig = AppGatewayHostType("GCP_REGIONAL_MIG")
)

func (AppGatewayHostType) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGatewayHostType)(nil)).Elem()
}

func (e AppGatewayHostType) ToAppGatewayHostTypeOutput() AppGatewayHostTypeOutput {
	return pulumi.ToOutput(e).(AppGatewayHostTypeOutput)
}

func (e AppGatewayHostType) ToAppGatewayHostTypeOutputWithContext(ctx context.Context) AppGatewayHostTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppGatewayHostTypeOutput)
}

func (e AppGatewayHostType) ToAppGatewayHostTypePtrOutput() AppGatewayHostTypePtrOutput {
	return e.ToAppGatewayHostTypePtrOutputWithContext(context.Background())
}

func (e AppGatewayHostType) ToAppGatewayHostTypePtrOutputWithContext(ctx context.Context) AppGatewayHostTypePtrOutput {
	return AppGatewayHostType(e).ToAppGatewayHostTypeOutputWithContext(ctx).ToAppGatewayHostTypePtrOutputWithContext(ctx)
}

func (e AppGatewayHostType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppGatewayHostType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppGatewayHostType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppGatewayHostType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppGatewayHostTypeOutput struct{ *pulumi.OutputState }

func (AppGatewayHostTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGatewayHostType)(nil)).Elem()
}

func (o AppGatewayHostTypeOutput) ToAppGatewayHostTypeOutput() AppGatewayHostTypeOutput {
	return o
}

func (o AppGatewayHostTypeOutput) ToAppGatewayHostTypeOutputWithContext(ctx context.Context) AppGatewayHostTypeOutput {
	return o
}

func (o AppGatewayHostTypeOutput) ToAppGatewayHostTypePtrOutput() AppGatewayHostTypePtrOutput {
	return o.ToAppGatewayHostTypePtrOutputWithContext(context.Background())
}

func (o AppGatewayHostTypeOutput) ToAppGatewayHostTypePtrOutputWithContext(ctx context.Context) AppGatewayHostTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppGatewayHostType) *AppGatewayHostType {
		return &v
	}).(AppGatewayHostTypePtrOutput)
}

func (o AppGatewayHostTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AppGatewayHostType] {
	return pulumix.Output[AppGatewayHostType]{
		OutputState: o.OutputState,
	}
}

func (o AppGatewayHostTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppGatewayHostTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppGatewayHostType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppGatewayHostTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppGatewayHostTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppGatewayHostType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppGatewayHostTypePtrOutput struct{ *pulumi.OutputState }

func (AppGatewayHostTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGatewayHostType)(nil)).Elem()
}

func (o AppGatewayHostTypePtrOutput) ToAppGatewayHostTypePtrOutput() AppGatewayHostTypePtrOutput {
	return o
}

func (o AppGatewayHostTypePtrOutput) ToAppGatewayHostTypePtrOutputWithContext(ctx context.Context) AppGatewayHostTypePtrOutput {
	return o
}

func (o AppGatewayHostTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppGatewayHostType] {
	return pulumix.Output[*AppGatewayHostType]{
		OutputState: o.OutputState,
	}
}

func (o AppGatewayHostTypePtrOutput) Elem() AppGatewayHostTypeOutput {
	return o.ApplyT(func(v *AppGatewayHostType) AppGatewayHostType {
		if v != nil {
			return *v
		}
		var ret AppGatewayHostType
		return ret
	}).(AppGatewayHostTypeOutput)
}

func (o AppGatewayHostTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppGatewayHostTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppGatewayHostType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppGatewayHostTypeInput is an input type that accepts AppGatewayHostTypeArgs and AppGatewayHostTypeOutput values.
// You can construct a concrete instance of `AppGatewayHostTypeInput` via:
//
//	AppGatewayHostTypeArgs{...}
type AppGatewayHostTypeInput interface {
	pulumi.Input

	ToAppGatewayHostTypeOutput() AppGatewayHostTypeOutput
	ToAppGatewayHostTypeOutputWithContext(context.Context) AppGatewayHostTypeOutput
}

var appGatewayHostTypePtrType = reflect.TypeOf((**AppGatewayHostType)(nil)).Elem()

type AppGatewayHostTypePtrInput interface {
	pulumi.Input

	ToAppGatewayHostTypePtrOutput() AppGatewayHostTypePtrOutput
	ToAppGatewayHostTypePtrOutputWithContext(context.Context) AppGatewayHostTypePtrOutput
}

type appGatewayHostTypePtr string

func AppGatewayHostTypePtr(v string) AppGatewayHostTypePtrInput {
	return (*appGatewayHostTypePtr)(&v)
}

func (*appGatewayHostTypePtr) ElementType() reflect.Type {
	return appGatewayHostTypePtrType
}

func (in *appGatewayHostTypePtr) ToAppGatewayHostTypePtrOutput() AppGatewayHostTypePtrOutput {
	return pulumi.ToOutput(in).(AppGatewayHostTypePtrOutput)
}

func (in *appGatewayHostTypePtr) ToAppGatewayHostTypePtrOutputWithContext(ctx context.Context) AppGatewayHostTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppGatewayHostTypePtrOutput)
}

func (in *appGatewayHostTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AppGatewayHostType] {
	return pulumix.Output[*AppGatewayHostType]{
		OutputState: in.ToAppGatewayHostTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of network connectivity used by the AppGateway.
type AppGatewayType string

const (
	// Default value. This value is unused.
	AppGatewayTypeTypeUnspecified = AppGatewayType("TYPE_UNSPECIFIED")
	// TCP Proxy based BeyondCorp Connection. API will default to this if unset.
	AppGatewayTypeTcpProxy = AppGatewayType("TCP_PROXY")
)

func (AppGatewayType) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGatewayType)(nil)).Elem()
}

func (e AppGatewayType) ToAppGatewayTypeOutput() AppGatewayTypeOutput {
	return pulumi.ToOutput(e).(AppGatewayTypeOutput)
}

func (e AppGatewayType) ToAppGatewayTypeOutputWithContext(ctx context.Context) AppGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AppGatewayTypeOutput)
}

func (e AppGatewayType) ToAppGatewayTypePtrOutput() AppGatewayTypePtrOutput {
	return e.ToAppGatewayTypePtrOutputWithContext(context.Background())
}

func (e AppGatewayType) ToAppGatewayTypePtrOutputWithContext(ctx context.Context) AppGatewayTypePtrOutput {
	return AppGatewayType(e).ToAppGatewayTypeOutputWithContext(ctx).ToAppGatewayTypePtrOutputWithContext(ctx)
}

func (e AppGatewayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppGatewayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AppGatewayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AppGatewayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AppGatewayTypeOutput struct{ *pulumi.OutputState }

func (AppGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppGatewayType)(nil)).Elem()
}

func (o AppGatewayTypeOutput) ToAppGatewayTypeOutput() AppGatewayTypeOutput {
	return o
}

func (o AppGatewayTypeOutput) ToAppGatewayTypeOutputWithContext(ctx context.Context) AppGatewayTypeOutput {
	return o
}

func (o AppGatewayTypeOutput) ToAppGatewayTypePtrOutput() AppGatewayTypePtrOutput {
	return o.ToAppGatewayTypePtrOutputWithContext(context.Background())
}

func (o AppGatewayTypeOutput) ToAppGatewayTypePtrOutputWithContext(ctx context.Context) AppGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppGatewayType) *AppGatewayType {
		return &v
	}).(AppGatewayTypePtrOutput)
}

func (o AppGatewayTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AppGatewayType] {
	return pulumix.Output[AppGatewayType]{
		OutputState: o.OutputState,
	}
}

func (o AppGatewayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AppGatewayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppGatewayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AppGatewayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppGatewayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AppGatewayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AppGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (AppGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGatewayType)(nil)).Elem()
}

func (o AppGatewayTypePtrOutput) ToAppGatewayTypePtrOutput() AppGatewayTypePtrOutput {
	return o
}

func (o AppGatewayTypePtrOutput) ToAppGatewayTypePtrOutputWithContext(ctx context.Context) AppGatewayTypePtrOutput {
	return o
}

func (o AppGatewayTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AppGatewayType] {
	return pulumix.Output[*AppGatewayType]{
		OutputState: o.OutputState,
	}
}

func (o AppGatewayTypePtrOutput) Elem() AppGatewayTypeOutput {
	return o.ApplyT(func(v *AppGatewayType) AppGatewayType {
		if v != nil {
			return *v
		}
		var ret AppGatewayType
		return ret
	}).(AppGatewayTypeOutput)
}

func (o AppGatewayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AppGatewayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AppGatewayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AppGatewayTypeInput is an input type that accepts AppGatewayTypeArgs and AppGatewayTypeOutput values.
// You can construct a concrete instance of `AppGatewayTypeInput` via:
//
//	AppGatewayTypeArgs{...}
type AppGatewayTypeInput interface {
	pulumi.Input

	ToAppGatewayTypeOutput() AppGatewayTypeOutput
	ToAppGatewayTypeOutputWithContext(context.Context) AppGatewayTypeOutput
}

var appGatewayTypePtrType = reflect.TypeOf((**AppGatewayType)(nil)).Elem()

type AppGatewayTypePtrInput interface {
	pulumi.Input

	ToAppGatewayTypePtrOutput() AppGatewayTypePtrOutput
	ToAppGatewayTypePtrOutputWithContext(context.Context) AppGatewayTypePtrOutput
}

type appGatewayTypePtr string

func AppGatewayTypePtr(v string) AppGatewayTypePtrInput {
	return (*appGatewayTypePtr)(&v)
}

func (*appGatewayTypePtr) ElementType() reflect.Type {
	return appGatewayTypePtrType
}

func (in *appGatewayTypePtr) ToAppGatewayTypePtrOutput() AppGatewayTypePtrOutput {
	return pulumi.ToOutput(in).(AppGatewayTypePtrOutput)
}

func (in *appGatewayTypePtr) ToAppGatewayTypePtrOutputWithContext(ctx context.Context) AppGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AppGatewayTypePtrOutput)
}

func (in *appGatewayTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AppGatewayType] {
	return pulumix.Output[*AppGatewayType]{
		OutputState: in.ToAppGatewayTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of network connectivity used by the connection.
type ConnectionType string

const (
	// Default value. This value is unused.
	ConnectionTypeTypeUnspecified = ConnectionType("TYPE_UNSPECIFIED")
	// TCP Proxy based BeyondCorp Connection. API will default to this if unset.
	ConnectionTypeTcpProxy = ConnectionType("TCP_PROXY")
)

func (ConnectionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionType)(nil)).Elem()
}

func (e ConnectionType) ToConnectionTypeOutput() ConnectionTypeOutput {
	return pulumi.ToOutput(e).(ConnectionTypeOutput)
}

func (e ConnectionType) ToConnectionTypeOutputWithContext(ctx context.Context) ConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionTypeOutput)
}

func (e ConnectionType) ToConnectionTypePtrOutput() ConnectionTypePtrOutput {
	return e.ToConnectionTypePtrOutputWithContext(context.Background())
}

func (e ConnectionType) ToConnectionTypePtrOutputWithContext(ctx context.Context) ConnectionTypePtrOutput {
	return ConnectionType(e).ToConnectionTypeOutputWithContext(ctx).ToConnectionTypePtrOutputWithContext(ctx)
}

func (e ConnectionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionTypeOutput struct{ *pulumi.OutputState }

func (ConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionType)(nil)).Elem()
}

func (o ConnectionTypeOutput) ToConnectionTypeOutput() ConnectionTypeOutput {
	return o
}

func (o ConnectionTypeOutput) ToConnectionTypeOutputWithContext(ctx context.Context) ConnectionTypeOutput {
	return o
}

func (o ConnectionTypeOutput) ToConnectionTypePtrOutput() ConnectionTypePtrOutput {
	return o.ToConnectionTypePtrOutputWithContext(context.Background())
}

func (o ConnectionTypeOutput) ToConnectionTypePtrOutputWithContext(ctx context.Context) ConnectionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionType) *ConnectionType {
		return &v
	}).(ConnectionTypePtrOutput)
}

func (o ConnectionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionType] {
	return pulumix.Output[ConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionTypePtrOutput struct{ *pulumi.OutputState }

func (ConnectionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionType)(nil)).Elem()
}

func (o ConnectionTypePtrOutput) ToConnectionTypePtrOutput() ConnectionTypePtrOutput {
	return o
}

func (o ConnectionTypePtrOutput) ToConnectionTypePtrOutputWithContext(ctx context.Context) ConnectionTypePtrOutput {
	return o
}

func (o ConnectionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionType] {
	return pulumix.Output[*ConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionTypePtrOutput) Elem() ConnectionTypeOutput {
	return o.ApplyT(func(v *ConnectionType) ConnectionType {
		if v != nil {
			return *v
		}
		var ret ConnectionType
		return ret
	}).(ConnectionTypeOutput)
}

func (o ConnectionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionTypeInput is an input type that accepts ConnectionTypeArgs and ConnectionTypeOutput values.
// You can construct a concrete instance of `ConnectionTypeInput` via:
//
//	ConnectionTypeArgs{...}
type ConnectionTypeInput interface {
	pulumi.Input

	ToConnectionTypeOutput() ConnectionTypeOutput
	ToConnectionTypeOutputWithContext(context.Context) ConnectionTypeOutput
}

var connectionTypePtrType = reflect.TypeOf((**ConnectionType)(nil)).Elem()

type ConnectionTypePtrInput interface {
	pulumi.Input

	ToConnectionTypePtrOutput() ConnectionTypePtrOutput
	ToConnectionTypePtrOutputWithContext(context.Context) ConnectionTypePtrOutput
}

type connectionTypePtr string

func ConnectionTypePtr(v string) ConnectionTypePtrInput {
	return (*connectionTypePtr)(&v)
}

func (*connectionTypePtr) ElementType() reflect.Type {
	return connectionTypePtrType
}

func (in *connectionTypePtr) ToConnectionTypePtrOutput() ConnectionTypePtrOutput {
	return pulumi.ToOutput(in).(ConnectionTypePtrOutput)
}

func (in *connectionTypePtr) ToConnectionTypePtrOutputWithContext(ctx context.Context) ConnectionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionTypePtrOutput)
}

func (in *connectionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*ConnectionType] {
	return pulumix.Output[*ConnectionType]{
		OutputState: in.ToConnectionTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of hosting used by the gateway.
type GatewayType string

const (
	// Default value. This value is unused.
	GatewayTypeTypeUnspecified = GatewayType("TYPE_UNSPECIFIED")
	// Gateway hosted in a GCP regional managed instance group.
	GatewayTypeGcpRegionalMig = GatewayType("GCP_REGIONAL_MIG")
)

func (GatewayType) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (e GatewayType) ToGatewayTypeOutput() GatewayTypeOutput {
	return pulumi.ToOutput(e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GatewayTypeOutput)
}

func (e GatewayType) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return e.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (e GatewayType) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return GatewayType(e).ToGatewayTypeOutputWithContext(ctx).ToGatewayTypePtrOutputWithContext(ctx)
}

func (e GatewayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GatewayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GatewayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GatewayTypeOutput struct{ *pulumi.OutputState }

func (GatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayType)(nil)).Elem()
}

func (o GatewayTypeOutput) ToGatewayTypeOutput() GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypeOutputWithContext(ctx context.Context) GatewayTypeOutput {
	return o
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o.ToGatewayTypePtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayType) *GatewayType {
		return &v
	}).(GatewayTypePtrOutput)
}

func (o GatewayTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GatewayType] {
	return pulumix.Output[GatewayType]{
		OutputState: o.OutputState,
	}
}

func (o GatewayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayTypePtrOutput struct{ *pulumi.OutputState }

func (GatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayType)(nil)).Elem()
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return o
}

func (o GatewayTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GatewayType] {
	return pulumix.Output[*GatewayType]{
		OutputState: o.OutputState,
	}
}

func (o GatewayTypePtrOutput) Elem() GatewayTypeOutput {
	return o.ApplyT(func(v *GatewayType) GatewayType {
		if v != nil {
			return *v
		}
		var ret GatewayType
		return ret
	}).(GatewayTypeOutput)
}

func (o GatewayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GatewayTypeInput is an input type that accepts GatewayTypeArgs and GatewayTypeOutput values.
// You can construct a concrete instance of `GatewayTypeInput` via:
//
//	GatewayTypeArgs{...}
type GatewayTypeInput interface {
	pulumi.Input

	ToGatewayTypeOutput() GatewayTypeOutput
	ToGatewayTypeOutputWithContext(context.Context) GatewayTypeOutput
}

var gatewayTypePtrType = reflect.TypeOf((**GatewayType)(nil)).Elem()

type GatewayTypePtrInput interface {
	pulumi.Input

	ToGatewayTypePtrOutput() GatewayTypePtrOutput
	ToGatewayTypePtrOutputWithContext(context.Context) GatewayTypePtrOutput
}

type gatewayTypePtr string

func GatewayTypePtr(v string) GatewayTypePtrInput {
	return (*gatewayTypePtr)(&v)
}

func (*gatewayTypePtr) ElementType() reflect.Type {
	return gatewayTypePtrType
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutput() GatewayTypePtrOutput {
	return pulumi.ToOutput(in).(GatewayTypePtrOutput)
}

func (in *gatewayTypePtr) ToGatewayTypePtrOutputWithContext(ctx context.Context) GatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GatewayTypePtrOutput)
}

func (in *gatewayTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GatewayType] {
	return pulumix.Output[*GatewayType]{
		OutputState: in.ToGatewayTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Required. The type of hosting used by the gateway.
type GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType string

const (
	// Default value. This value is unused.
	GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeTypeUnspecified = GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType("TYPE_UNSPECIFIED")
	// Gateway hosted in a GCP regional managed instance group.
	GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeGcpRegionalMig = GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType("GCP_REGIONAL_MIG")
)

func (GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType)(nil)).Elem()
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput {
	return pulumi.ToOutput(e).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput)
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput)
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return e.ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(context.Background())
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType(e).ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutputWithContext(ctx).ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx)
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return o.ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) *GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType {
		return &v
	}).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput)
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType] {
	return pulumix.Output[GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType] {
	return pulumix.Output[*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) Elem() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType
		return ret
	}).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput)
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeInput is an input type that accepts GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeArgs and GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeInput` via:
//
//	GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeArgs{...}
type GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput
	ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput
}

var googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrType = reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType)(nil)).Elem()

type GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput
	ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput
}

type googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr string

func GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr(v string) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrInput {
	return (*googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr)(&v)
}

func (*googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr) ElementType() reflect.Type {
	return googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrType
}

func (in *googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput() GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return pulumi.ToOutput(in).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput)
}

func (in *googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr) ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput)
}

func (in *googleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType] {
	return pulumix.Output[*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType]{
		OutputState: in.ToGoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Overall health status. Overall status is derived based on the status of each sub level resources.
type GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus string

const (
	// Health status is unknown: not initialized or failed to retrieve.
	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusHealthStatusUnspecified = GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED")
	// The resource is healthy.
	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusHealthy = GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("HEALTHY")
	// The resource is unhealthy.
	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusUnhealthy = GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("UNHEALTHY")
	// The resource is unresponsive.
	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusUnresponsive = GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("UNRESPONSIVE")
	// Some sub-resources are UNHEALTHY.
	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusDegraded = GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("DEGRADED")
)

func (GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus)(nil)).Elem()
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput {
	return pulumi.ToOutput(e).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput)
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput)
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return e.ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(context.Background())
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus(e).ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutputWithContext(ctx).ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx)
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return o.ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) *GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus {
		return &v
	}).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput)
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus] {
	return pulumix.Output[GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus]{
		OutputState: o.OutputState,
	}
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus)(nil)).Elem()
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return o
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus] {
	return pulumix.Output[*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus]{
		OutputState: o.OutputState,
	}
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) Elem() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput {
	return o.ApplyT(func(v *GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus {
		if v != nil {
			return *v
		}
		var ret GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus
		return ret
	}).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput)
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusInput is an input type that accepts GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusArgs and GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput values.
// You can construct a concrete instance of `GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusInput` via:
//
//	GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusArgs{...}
type GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput
}

var googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrType = reflect.TypeOf((**GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus)(nil)).Elem()

type GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrInput interface {
	pulumi.Input

	ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput
	ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput
}

type googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr string

func GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr(v string) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrInput {
	return (*googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr)(&v)
}

func (*googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr) ElementType() reflect.Type {
	return googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrType
}

func (in *googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput() GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return pulumi.ToOutput(in).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput)
}

func (in *googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr) ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx context.Context) GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput)
}

func (in *googleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus] {
	return pulumix.Output[*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus]{
		OutputState: in.ToGoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// The log type that this config enables.
type GoogleIamV1AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	GoogleIamV1AuditLogConfigLogTypeLogTypeUnspecified = GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	GoogleIamV1AuditLogConfigLogTypeAdminRead = GoogleIamV1AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	GoogleIamV1AuditLogConfigLogTypeDataWrite = GoogleIamV1AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	GoogleIamV1AuditLogConfigLogTypeDataRead = GoogleIamV1AuditLogConfigLogType("DATA_READ")
)

func (GoogleIamV1AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return e.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e GoogleIamV1AuditLogConfigLogType) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return GoogleIamV1AuditLogConfigLogType(e).ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx).ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GoogleIamV1AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GoogleIamV1AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypeOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleIamV1AuditLogConfigLogType) *GoogleIamV1AuditLogConfigLogType {
		return &v
	}).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[GoogleIamV1AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleIamV1AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GoogleIamV1AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GoogleIamV1AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (GoogleIamV1AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleIamV1AuditLogConfigLogType)(nil)).Elem()
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return o
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[*GoogleIamV1AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) Elem() GoogleIamV1AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *GoogleIamV1AuditLogConfigLogType) GoogleIamV1AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret GoogleIamV1AuditLogConfigLogType
		return ret
	}).(GoogleIamV1AuditLogConfigLogTypeOutput)
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GoogleIamV1AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GoogleIamV1AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GoogleIamV1AuditLogConfigLogTypeInput is an input type that accepts GoogleIamV1AuditLogConfigLogTypeArgs and GoogleIamV1AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `GoogleIamV1AuditLogConfigLogTypeInput` via:
//
//	GoogleIamV1AuditLogConfigLogTypeArgs{...}
type GoogleIamV1AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigLogTypeOutput() GoogleIamV1AuditLogConfigLogTypeOutput
	ToGoogleIamV1AuditLogConfigLogTypeOutputWithContext(context.Context) GoogleIamV1AuditLogConfigLogTypeOutput
}

var googleIamV1AuditLogConfigLogTypePtrType = reflect.TypeOf((**GoogleIamV1AuditLogConfigLogType)(nil)).Elem()

type GoogleIamV1AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput
	ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput
}

type googleIamV1AuditLogConfigLogTypePtr string

func GoogleIamV1AuditLogConfigLogTypePtr(v string) GoogleIamV1AuditLogConfigLogTypePtrInput {
	return (*googleIamV1AuditLogConfigLogTypePtr)(&v)
}

func (*googleIamV1AuditLogConfigLogTypePtr) ElementType() reflect.Type {
	return googleIamV1AuditLogConfigLogTypePtrType
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToGoogleIamV1AuditLogConfigLogTypePtrOutput() GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) GoogleIamV1AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GoogleIamV1AuditLogConfigLogTypePtrOutput)
}

func (in *googleIamV1AuditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*GoogleIamV1AuditLogConfigLogType] {
	return pulumix.Output[*GoogleIamV1AuditLogConfigLogType]{
		OutputState: in.ToGoogleIamV1AuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Overall health status. Overall status is derived based on the status of each sub level resources.
type ResourceInfoStatus string

const (
	// Health status is unknown: not initialized or failed to retrieve.
	ResourceInfoStatusHealthStatusUnspecified = ResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED")
	// The resource is healthy.
	ResourceInfoStatusHealthy = ResourceInfoStatus("HEALTHY")
	// The resource is unhealthy.
	ResourceInfoStatusUnhealthy = ResourceInfoStatus("UNHEALTHY")
	// The resource is unresponsive.
	ResourceInfoStatusUnresponsive = ResourceInfoStatus("UNRESPONSIVE")
	// Some sub-resources are UNHEALTHY.
	ResourceInfoStatusDegraded = ResourceInfoStatus("DEGRADED")
)

func (ResourceInfoStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceInfoStatus)(nil)).Elem()
}

func (e ResourceInfoStatus) ToResourceInfoStatusOutput() ResourceInfoStatusOutput {
	return pulumi.ToOutput(e).(ResourceInfoStatusOutput)
}

func (e ResourceInfoStatus) ToResourceInfoStatusOutputWithContext(ctx context.Context) ResourceInfoStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceInfoStatusOutput)
}

func (e ResourceInfoStatus) ToResourceInfoStatusPtrOutput() ResourceInfoStatusPtrOutput {
	return e.ToResourceInfoStatusPtrOutputWithContext(context.Background())
}

func (e ResourceInfoStatus) ToResourceInfoStatusPtrOutputWithContext(ctx context.Context) ResourceInfoStatusPtrOutput {
	return ResourceInfoStatus(e).ToResourceInfoStatusOutputWithContext(ctx).ToResourceInfoStatusPtrOutputWithContext(ctx)
}

func (e ResourceInfoStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceInfoStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceInfoStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceInfoStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceInfoStatusOutput struct{ *pulumi.OutputState }

func (ResourceInfoStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceInfoStatus)(nil)).Elem()
}

func (o ResourceInfoStatusOutput) ToResourceInfoStatusOutput() ResourceInfoStatusOutput {
	return o
}

func (o ResourceInfoStatusOutput) ToResourceInfoStatusOutputWithContext(ctx context.Context) ResourceInfoStatusOutput {
	return o
}

func (o ResourceInfoStatusOutput) ToResourceInfoStatusPtrOutput() ResourceInfoStatusPtrOutput {
	return o.ToResourceInfoStatusPtrOutputWithContext(context.Background())
}

func (o ResourceInfoStatusOutput) ToResourceInfoStatusPtrOutputWithContext(ctx context.Context) ResourceInfoStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceInfoStatus) *ResourceInfoStatus {
		return &v
	}).(ResourceInfoStatusPtrOutput)
}

func (o ResourceInfoStatusOutput) ToOutput(ctx context.Context) pulumix.Output[ResourceInfoStatus] {
	return pulumix.Output[ResourceInfoStatus]{
		OutputState: o.OutputState,
	}
}

func (o ResourceInfoStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceInfoStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceInfoStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceInfoStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceInfoStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceInfoStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceInfoStatusPtrOutput struct{ *pulumi.OutputState }

func (ResourceInfoStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceInfoStatus)(nil)).Elem()
}

func (o ResourceInfoStatusPtrOutput) ToResourceInfoStatusPtrOutput() ResourceInfoStatusPtrOutput {
	return o
}

func (o ResourceInfoStatusPtrOutput) ToResourceInfoStatusPtrOutputWithContext(ctx context.Context) ResourceInfoStatusPtrOutput {
	return o
}

func (o ResourceInfoStatusPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ResourceInfoStatus] {
	return pulumix.Output[*ResourceInfoStatus]{
		OutputState: o.OutputState,
	}
}

func (o ResourceInfoStatusPtrOutput) Elem() ResourceInfoStatusOutput {
	return o.ApplyT(func(v *ResourceInfoStatus) ResourceInfoStatus {
		if v != nil {
			return *v
		}
		var ret ResourceInfoStatus
		return ret
	}).(ResourceInfoStatusOutput)
}

func (o ResourceInfoStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceInfoStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceInfoStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceInfoStatusInput is an input type that accepts ResourceInfoStatusArgs and ResourceInfoStatusOutput values.
// You can construct a concrete instance of `ResourceInfoStatusInput` via:
//
//	ResourceInfoStatusArgs{...}
type ResourceInfoStatusInput interface {
	pulumi.Input

	ToResourceInfoStatusOutput() ResourceInfoStatusOutput
	ToResourceInfoStatusOutputWithContext(context.Context) ResourceInfoStatusOutput
}

var resourceInfoStatusPtrType = reflect.TypeOf((**ResourceInfoStatus)(nil)).Elem()

type ResourceInfoStatusPtrInput interface {
	pulumi.Input

	ToResourceInfoStatusPtrOutput() ResourceInfoStatusPtrOutput
	ToResourceInfoStatusPtrOutputWithContext(context.Context) ResourceInfoStatusPtrOutput
}

type resourceInfoStatusPtr string

func ResourceInfoStatusPtr(v string) ResourceInfoStatusPtrInput {
	return (*resourceInfoStatusPtr)(&v)
}

func (*resourceInfoStatusPtr) ElementType() reflect.Type {
	return resourceInfoStatusPtrType
}

func (in *resourceInfoStatusPtr) ToResourceInfoStatusPtrOutput() ResourceInfoStatusPtrOutput {
	return pulumi.ToOutput(in).(ResourceInfoStatusPtrOutput)
}

func (in *resourceInfoStatusPtr) ToResourceInfoStatusPtrOutputWithContext(ctx context.Context) ResourceInfoStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceInfoStatusPtrOutput)
}

func (in *resourceInfoStatusPtr) ToOutput(ctx context.Context) pulumix.Output[*ResourceInfoStatus] {
	return pulumix.Output[*ResourceInfoStatus]{
		OutputState: in.ToResourceInfoStatusPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. SKU of subscription.
type SubscriptionSku string

const (
	// Default value. This value is unused.
	SubscriptionSkuSkuUnspecified = SubscriptionSku("SKU_UNSPECIFIED")
	// Represents BeyondCorp Standard SKU.
	SubscriptionSkuBceStandardSku = SubscriptionSku("BCE_STANDARD_SKU")
)

func (SubscriptionSku) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSku)(nil)).Elem()
}

func (e SubscriptionSku) ToSubscriptionSkuOutput() SubscriptionSkuOutput {
	return pulumi.ToOutput(e).(SubscriptionSkuOutput)
}

func (e SubscriptionSku) ToSubscriptionSkuOutputWithContext(ctx context.Context) SubscriptionSkuOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionSkuOutput)
}

func (e SubscriptionSku) ToSubscriptionSkuPtrOutput() SubscriptionSkuPtrOutput {
	return e.ToSubscriptionSkuPtrOutputWithContext(context.Background())
}

func (e SubscriptionSku) ToSubscriptionSkuPtrOutputWithContext(ctx context.Context) SubscriptionSkuPtrOutput {
	return SubscriptionSku(e).ToSubscriptionSkuOutputWithContext(ctx).ToSubscriptionSkuPtrOutputWithContext(ctx)
}

func (e SubscriptionSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionSkuOutput struct{ *pulumi.OutputState }

func (SubscriptionSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionSku)(nil)).Elem()
}

func (o SubscriptionSkuOutput) ToSubscriptionSkuOutput() SubscriptionSkuOutput {
	return o
}

func (o SubscriptionSkuOutput) ToSubscriptionSkuOutputWithContext(ctx context.Context) SubscriptionSkuOutput {
	return o
}

func (o SubscriptionSkuOutput) ToSubscriptionSkuPtrOutput() SubscriptionSkuPtrOutput {
	return o.ToSubscriptionSkuPtrOutputWithContext(context.Background())
}

func (o SubscriptionSkuOutput) ToSubscriptionSkuPtrOutputWithContext(ctx context.Context) SubscriptionSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionSku) *SubscriptionSku {
		return &v
	}).(SubscriptionSkuPtrOutput)
}

func (o SubscriptionSkuOutput) ToOutput(ctx context.Context) pulumix.Output[SubscriptionSku] {
	return pulumix.Output[SubscriptionSku]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionSkuOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionSkuOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionSku) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionSkuOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionSkuOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionSku) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionSkuPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionSku)(nil)).Elem()
}

func (o SubscriptionSkuPtrOutput) ToSubscriptionSkuPtrOutput() SubscriptionSkuPtrOutput {
	return o
}

func (o SubscriptionSkuPtrOutput) ToSubscriptionSkuPtrOutputWithContext(ctx context.Context) SubscriptionSkuPtrOutput {
	return o
}

func (o SubscriptionSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionSku] {
	return pulumix.Output[*SubscriptionSku]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionSkuPtrOutput) Elem() SubscriptionSkuOutput {
	return o.ApplyT(func(v *SubscriptionSku) SubscriptionSku {
		if v != nil {
			return *v
		}
		var ret SubscriptionSku
		return ret
	}).(SubscriptionSkuOutput)
}

func (o SubscriptionSkuPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionSkuPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionSku) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionSkuInput is an input type that accepts SubscriptionSkuArgs and SubscriptionSkuOutput values.
// You can construct a concrete instance of `SubscriptionSkuInput` via:
//
//	SubscriptionSkuArgs{...}
type SubscriptionSkuInput interface {
	pulumi.Input

	ToSubscriptionSkuOutput() SubscriptionSkuOutput
	ToSubscriptionSkuOutputWithContext(context.Context) SubscriptionSkuOutput
}

var subscriptionSkuPtrType = reflect.TypeOf((**SubscriptionSku)(nil)).Elem()

type SubscriptionSkuPtrInput interface {
	pulumi.Input

	ToSubscriptionSkuPtrOutput() SubscriptionSkuPtrOutput
	ToSubscriptionSkuPtrOutputWithContext(context.Context) SubscriptionSkuPtrOutput
}

type subscriptionSkuPtr string

func SubscriptionSkuPtr(v string) SubscriptionSkuPtrInput {
	return (*subscriptionSkuPtr)(&v)
}

func (*subscriptionSkuPtr) ElementType() reflect.Type {
	return subscriptionSkuPtrType
}

func (in *subscriptionSkuPtr) ToSubscriptionSkuPtrOutput() SubscriptionSkuPtrOutput {
	return pulumi.ToOutput(in).(SubscriptionSkuPtrOutput)
}

func (in *subscriptionSkuPtr) ToSubscriptionSkuPtrOutputWithContext(ctx context.Context) SubscriptionSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionSkuPtrOutput)
}

func (in *subscriptionSkuPtr) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionSku] {
	return pulumix.Output[*SubscriptionSku]{
		OutputState: in.ToSubscriptionSkuPtrOutputWithContext(ctx).OutputState,
	}
}

// Required. Type of subscription.
type SubscriptionType string

const (
	// Default value. This value is unused.
	SubscriptionTypeTypeUnspecified = SubscriptionType("TYPE_UNSPECIFIED")
	// Represents a trial subscription.
	SubscriptionTypeTrial = SubscriptionType("TRIAL")
	// Represents a paid subscription.
	SubscriptionTypePaid = SubscriptionType("PAID")
	// Reresents an allowlisted subscription.
	SubscriptionTypeAllowlist = SubscriptionType("ALLOWLIST")
)

func (SubscriptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (e SubscriptionType) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return pulumi.ToOutput(e).(SubscriptionTypeOutput)
}

func (e SubscriptionType) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionTypeOutput)
}

func (e SubscriptionType) ToSubscriptionTypePtrOutput() SubscriptionTypePtrOutput {
	return e.ToSubscriptionTypePtrOutputWithContext(context.Background())
}

func (e SubscriptionType) ToSubscriptionTypePtrOutputWithContext(ctx context.Context) SubscriptionTypePtrOutput {
	return SubscriptionType(e).ToSubscriptionTypeOutputWithContext(ctx).ToSubscriptionTypePtrOutputWithContext(ctx)
}

func (e SubscriptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionTypeOutput struct{ *pulumi.OutputState }

func (SubscriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionType)(nil)).Elem()
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutput() SubscriptionTypeOutput {
	return o
}

func (o SubscriptionTypeOutput) ToSubscriptionTypeOutputWithContext(ctx context.Context) SubscriptionTypeOutput {
	return o
}

func (o SubscriptionTypeOutput) ToSubscriptionTypePtrOutput() SubscriptionTypePtrOutput {
	return o.ToSubscriptionTypePtrOutputWithContext(context.Background())
}

func (o SubscriptionTypeOutput) ToSubscriptionTypePtrOutputWithContext(ctx context.Context) SubscriptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionType) *SubscriptionType {
		return &v
	}).(SubscriptionTypePtrOutput)
}

func (o SubscriptionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[SubscriptionType] {
	return pulumix.Output[SubscriptionType]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionTypePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionType)(nil)).Elem()
}

func (o SubscriptionTypePtrOutput) ToSubscriptionTypePtrOutput() SubscriptionTypePtrOutput {
	return o
}

func (o SubscriptionTypePtrOutput) ToSubscriptionTypePtrOutputWithContext(ctx context.Context) SubscriptionTypePtrOutput {
	return o
}

func (o SubscriptionTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionType] {
	return pulumix.Output[*SubscriptionType]{
		OutputState: o.OutputState,
	}
}

func (o SubscriptionTypePtrOutput) Elem() SubscriptionTypeOutput {
	return o.ApplyT(func(v *SubscriptionType) SubscriptionType {
		if v != nil {
			return *v
		}
		var ret SubscriptionType
		return ret
	}).(SubscriptionTypeOutput)
}

func (o SubscriptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionTypeInput is an input type that accepts SubscriptionTypeArgs and SubscriptionTypeOutput values.
// You can construct a concrete instance of `SubscriptionTypeInput` via:
//
//	SubscriptionTypeArgs{...}
type SubscriptionTypeInput interface {
	pulumi.Input

	ToSubscriptionTypeOutput() SubscriptionTypeOutput
	ToSubscriptionTypeOutputWithContext(context.Context) SubscriptionTypeOutput
}

var subscriptionTypePtrType = reflect.TypeOf((**SubscriptionType)(nil)).Elem()

type SubscriptionTypePtrInput interface {
	pulumi.Input

	ToSubscriptionTypePtrOutput() SubscriptionTypePtrOutput
	ToSubscriptionTypePtrOutputWithContext(context.Context) SubscriptionTypePtrOutput
}

type subscriptionTypePtr string

func SubscriptionTypePtr(v string) SubscriptionTypePtrInput {
	return (*subscriptionTypePtr)(&v)
}

func (*subscriptionTypePtr) ElementType() reflect.Type {
	return subscriptionTypePtrType
}

func (in *subscriptionTypePtr) ToSubscriptionTypePtrOutput() SubscriptionTypePtrOutput {
	return pulumi.ToOutput(in).(SubscriptionTypePtrOutput)
}

func (in *subscriptionTypePtr) ToSubscriptionTypePtrOutputWithContext(ctx context.Context) SubscriptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionTypePtrOutput)
}

func (in *subscriptionTypePtr) ToOutput(ctx context.Context) pulumix.Output[*SubscriptionType] {
	return pulumix.Output[*SubscriptionType]{
		OutputState: in.ToSubscriptionTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionTypeInput)(nil)).Elem(), AppConnectionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionTypePtrInput)(nil)).Elem(), AppConnectionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayHostTypeInput)(nil)).Elem(), AppGatewayHostType("HOST_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayHostTypePtrInput)(nil)).Elem(), AppGatewayHostType("HOST_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayTypeInput)(nil)).Elem(), AppGatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayTypePtrInput)(nil)).Elem(), AppGatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTypeInput)(nil)).Elem(), ConnectionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTypePtrInput)(nil)).Elem(), ConnectionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypeInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTypePtrInput)(nil)).Elem(), GatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrInput)(nil)).Elem(), GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigLogTypeInput)(nil)).Elem(), GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleIamV1AuditLogConfigLogTypePtrInput)(nil)).Elem(), GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInfoStatusInput)(nil)).Elem(), ResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInfoStatusPtrInput)(nil)).Elem(), ResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSkuInput)(nil)).Elem(), SubscriptionSku("SKU_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionSkuPtrInput)(nil)).Elem(), SubscriptionSku("SKU_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTypeInput)(nil)).Elem(), SubscriptionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriptionTypePtrInput)(nil)).Elem(), SubscriptionType("TYPE_UNSPECIFIED"))
	pulumi.RegisterOutputType(AppConnectionTypeOutput{})
	pulumi.RegisterOutputType(AppConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(AppGatewayHostTypeOutput{})
	pulumi.RegisterOutputType(AppGatewayHostTypePtrOutput{})
	pulumi.RegisterOutputType(AppGatewayTypeOutput{})
	pulumi.RegisterOutputType(AppGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(ConnectionTypeOutput{})
	pulumi.RegisterOutputType(ConnectionTypePtrOutput{})
	pulumi.RegisterOutputType(GatewayTypeOutput{})
	pulumi.RegisterOutputType(GatewayTypePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypeOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectionsV1alphaAppConnectionGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusOutput{})
	pulumi.RegisterOutputType(GoogleCloudBeyondcorpAppconnectorsV1alphaResourceInfoStatusPtrOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(GoogleIamV1AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(ResourceInfoStatusOutput{})
	pulumi.RegisterOutputType(ResourceInfoStatusPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionSkuOutput{})
	pulumi.RegisterOutputType(SubscriptionSkuPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTypeOutput{})
	pulumi.RegisterOutputType(SubscriptionTypePtrOutput{})
}
