// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new NetConnection in a given project and location.
type NetConnection struct {
	pulumi.CustomResourceState

	// Optional. List of [google.cloud.beyondcorp.v1main.AppConnector.name] that are authorized to be associated with this NetConnection. e.g. projects/{project}/locations/{location}/appConnectors/{app_connector}
	Connectors pulumi.StringArrayOutput `pulumi:"connectors"`
	// Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// CIDRs for the remote networks to connect to. e.g. IPv4: 198.51.100.14/24 IPv6: 2001:db8::/48
	DestinationCidrs pulumi.StringArrayOutput `pulumi:"destinationCidrs"`
	// Optional. An arbitrary user-provided name for the NetConnection. Cannot exceed 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Unique resource name of the NetConnection. The name is ignored when creating a NetConnection.
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional. User-settable NetConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	NetConnectionId pulumi.StringPtrOutput `pulumi:"netConnectionId"`
	// The full name of the VPC network connected to the applications. Client Connector will send traffic here.
	NetworkVpc pulumi.StringOutput `pulumi:"networkVpc"`
	Project    pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The current state of the NetConnection.
	State pulumi.StringOutput `pulumi:"state"`
	// A unique identifier for the instance generated by the system.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly pulumi.BoolPtrOutput `pulumi:"validateOnly"`
}

// NewNetConnection registers a new resource with the given unique name, arguments, and options.
func NewNetConnection(ctx *pulumi.Context,
	name string, args *NetConnectionArgs, opts ...pulumi.ResourceOption) (*NetConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationCidrs == nil {
		return nil, errors.New("invalid value for required argument 'DestinationCidrs'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource NetConnection
	err := ctx.RegisterResource("google-native:beyondcorp/v1alpha:NetConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetConnection gets an existing NetConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetConnectionState, opts ...pulumi.ResourceOption) (*NetConnection, error) {
	var resource NetConnection
	err := ctx.ReadResource("google-native:beyondcorp/v1alpha:NetConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetConnection resources.
type netConnectionState struct {
}

type NetConnectionState struct {
}

func (NetConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*netConnectionState)(nil)).Elem()
}

type netConnectionArgs struct {
	// Optional. List of [google.cloud.beyondcorp.v1main.AppConnector.name] that are authorized to be associated with this NetConnection. e.g. projects/{project}/locations/{location}/appConnectors/{app_connector}
	Connectors []string `pulumi:"connectors"`
	// CIDRs for the remote networks to connect to. e.g. IPv4: 198.51.100.14/24 IPv6: 2001:db8::/48
	DestinationCidrs []string `pulumi:"destinationCidrs"`
	// Optional. An arbitrary user-provided name for the NetConnection. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Optional. Resource labels to represent user provided metadata.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Unique resource name of the NetConnection. The name is ignored when creating a NetConnection.
	Name *string `pulumi:"name"`
	// Optional. User-settable NetConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	NetConnectionId *string `pulumi:"netConnectionId"`
	Project         *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly *bool `pulumi:"validateOnly"`
}

// The set of arguments for constructing a NetConnection resource.
type NetConnectionArgs struct {
	// Optional. List of [google.cloud.beyondcorp.v1main.AppConnector.name] that are authorized to be associated with this NetConnection. e.g. projects/{project}/locations/{location}/appConnectors/{app_connector}
	Connectors pulumi.StringArrayInput
	// CIDRs for the remote networks to connect to. e.g. IPv4: 198.51.100.14/24 IPv6: 2001:db8::/48
	DestinationCidrs pulumi.StringArrayInput
	// Optional. An arbitrary user-provided name for the NetConnection. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Optional. Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Unique resource name of the NetConnection. The name is ignored when creating a NetConnection.
	Name pulumi.StringPtrInput
	// Optional. User-settable NetConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	NetConnectionId pulumi.StringPtrInput
	Project         pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly pulumi.BoolPtrInput
}

func (NetConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*netConnectionArgs)(nil)).Elem()
}

type NetConnectionInput interface {
	pulumi.Input

	ToNetConnectionOutput() NetConnectionOutput
	ToNetConnectionOutputWithContext(ctx context.Context) NetConnectionOutput
}

func (*NetConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**NetConnection)(nil)).Elem()
}

func (i *NetConnection) ToNetConnectionOutput() NetConnectionOutput {
	return i.ToNetConnectionOutputWithContext(context.Background())
}

func (i *NetConnection) ToNetConnectionOutputWithContext(ctx context.Context) NetConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetConnectionOutput)
}

type NetConnectionOutput struct{ *pulumi.OutputState }

func (NetConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetConnection)(nil)).Elem()
}

func (o NetConnectionOutput) ToNetConnectionOutput() NetConnectionOutput {
	return o
}

func (o NetConnectionOutput) ToNetConnectionOutputWithContext(ctx context.Context) NetConnectionOutput {
	return o
}

// Optional. List of [google.cloud.beyondcorp.v1main.AppConnector.name] that are authorized to be associated with this NetConnection. e.g. projects/{project}/locations/{location}/appConnectors/{app_connector}
func (o NetConnectionOutput) Connectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringArrayOutput { return v.Connectors }).(pulumi.StringArrayOutput)
}

// Timestamp when the resource was created.
func (o NetConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// CIDRs for the remote networks to connect to. e.g. IPv4: 198.51.100.14/24 IPv6: 2001:db8::/48
func (o NetConnectionOutput) DestinationCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringArrayOutput { return v.DestinationCidrs }).(pulumi.StringArrayOutput)
}

// Optional. An arbitrary user-provided name for the NetConnection. Cannot exceed 64 characters.
func (o NetConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user provided metadata.
func (o NetConnectionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NetConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Unique resource name of the NetConnection. The name is ignored when creating a NetConnection.
func (o NetConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional. User-settable NetConnection resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
func (o NetConnectionOutput) NetConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringPtrOutput { return v.NetConnectionId }).(pulumi.StringPtrOutput)
}

// The full name of the VPC network connected to the applications. Client Connector will send traffic here.
func (o NetConnectionOutput) NetworkVpc() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.NetworkVpc }).(pulumi.StringOutput)
}

func (o NetConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o NetConnectionOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The current state of the NetConnection.
func (o NetConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// A unique identifier for the instance generated by the system.
func (o NetConnectionOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Timestamp when the resource was last modified.
func (o NetConnectionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
func (o NetConnectionOutput) ValidateOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetConnection) pulumi.BoolPtrOutput { return v.ValidateOnly }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetConnectionInput)(nil)).Elem(), &NetConnection{})
	pulumi.RegisterOutputType(NetConnectionOutput{})
}
