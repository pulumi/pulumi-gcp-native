// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new BeyondCorp Enterprise partnerTenant in a given organization and can only be called by onboarded BeyondCorp Enterprise partner.
// Auto-naming is currently not supported for this resource.
type PartnerTenant struct {
	pulumi.CustomResourceState

	// Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Optional. Group information for the users enabled to use the partnerTenant. If the group information is not provided then the partnerTenant will be enabled for all users.
	Group GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput `pulumi:"group"`
	// Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant.
	Name           pulumi.StringOutput `pulumi:"name"`
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Optional. Metadata provided by the Partner associated with PartnerTenant.
	PartnerMetadata GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput `pulumi:"partnerMetadata"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewPartnerTenant registers a new resource with the given unique name, arguments, and options.
func NewPartnerTenant(ctx *pulumi.Context,
	name string, args *PartnerTenantArgs, opts ...pulumi.ResourceOption) (*PartnerTenant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"organizationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PartnerTenant
	err := ctx.RegisterResource("google-native:beyondcorp/v1alpha:PartnerTenant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPartnerTenant gets an existing PartnerTenant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPartnerTenant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PartnerTenantState, opts ...pulumi.ResourceOption) (*PartnerTenant, error) {
	var resource PartnerTenant
	err := ctx.ReadResource("google-native:beyondcorp/v1alpha:PartnerTenant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PartnerTenant resources.
type partnerTenantState struct {
}

type PartnerTenantState struct {
}

func (PartnerTenantState) ElementType() reflect.Type {
	return reflect.TypeOf((*partnerTenantState)(nil)).Elem()
}

type partnerTenantArgs struct {
	// Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Optional. Group information for the users enabled to use the partnerTenant. If the group information is not provided then the partnerTenant will be enabled for all users.
	Group          *GoogleCloudBeyondcorpPartnerservicesV1alphaGroup `pulumi:"group"`
	OrganizationId string                                            `pulumi:"organizationId"`
	// Optional. Metadata provided by the Partner associated with PartnerTenant.
	PartnerMetadata *GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadata `pulumi:"partnerMetadata"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a PartnerTenant resource.
type PartnerTenantArgs struct {
	// Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Optional. Group information for the users enabled to use the partnerTenant. If the group information is not provided then the partnerTenant will be enabled for all users.
	Group          GoogleCloudBeyondcorpPartnerservicesV1alphaGroupPtrInput
	OrganizationId pulumi.StringInput
	// Optional. Metadata provided by the Partner associated with PartnerTenant.
	PartnerMetadata GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (PartnerTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*partnerTenantArgs)(nil)).Elem()
}

type PartnerTenantInput interface {
	pulumi.Input

	ToPartnerTenantOutput() PartnerTenantOutput
	ToPartnerTenantOutputWithContext(ctx context.Context) PartnerTenantOutput
}

func (*PartnerTenant) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerTenant)(nil)).Elem()
}

func (i *PartnerTenant) ToPartnerTenantOutput() PartnerTenantOutput {
	return i.ToPartnerTenantOutputWithContext(context.Background())
}

func (i *PartnerTenant) ToPartnerTenantOutputWithContext(ctx context.Context) PartnerTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartnerTenantOutput)
}

func (i *PartnerTenant) ToOutput(ctx context.Context) pulumix.Output[*PartnerTenant] {
	return pulumix.Output[*PartnerTenant]{
		OutputState: i.ToPartnerTenantOutputWithContext(ctx).OutputState,
	}
}

type PartnerTenantOutput struct{ *pulumi.OutputState }

func (PartnerTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PartnerTenant)(nil)).Elem()
}

func (o PartnerTenantOutput) ToPartnerTenantOutput() PartnerTenantOutput {
	return o
}

func (o PartnerTenantOutput) ToPartnerTenantOutputWithContext(ctx context.Context) PartnerTenantOutput {
	return o
}

func (o PartnerTenantOutput) ToOutput(ctx context.Context) pulumix.Output[*PartnerTenant] {
	return pulumix.Output[*PartnerTenant]{
		OutputState: o.OutputState,
	}
}

// Timestamp when the resource was created.
func (o PartnerTenantOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary caller-provided name for the PartnerTenant. Cannot exceed 64 characters.
func (o PartnerTenantOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Optional. Group information for the users enabled to use the partnerTenant. If the group information is not provided then the partnerTenant will be enabled for all users.
func (o PartnerTenantOutput) Group() GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput {
	return o.ApplyT(func(v *PartnerTenant) GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput { return v.Group }).(GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponseOutput)
}

// Unique resource name of the PartnerTenant. The name is ignored when creating PartnerTenant.
func (o PartnerTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PartnerTenantOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Optional. Metadata provided by the Partner associated with PartnerTenant.
func (o PartnerTenantOutput) PartnerMetadata() GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput {
	return o.ApplyT(func(v *PartnerTenant) GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput {
		return v.PartnerMetadata
	}).(GoogleCloudBeyondcorpPartnerservicesV1alphaPartnerMetadataResponseOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o PartnerTenantOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// Timestamp when the resource was last modified.
func (o PartnerTenantOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PartnerTenant) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PartnerTenantInput)(nil)).Elem(), &PartnerTenant{})
	pulumi.RegisterOutputType(PartnerTenantOutput{})
}
