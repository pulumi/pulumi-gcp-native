// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new AppGateway in a given project and location.
type AppGateway struct {
	pulumi.CustomResourceState

	// A list of connections allocated for the Gateway
	AllocatedConnections AllocatedConnectionResponseArrayOutput `pulumi:"allocatedConnections"`
	// Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	AppGatewayId pulumi.StringPtrOutput `pulumi:"appGatewayId"`
	// Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The type of hosting used by the AppGateway.
	HostType pulumi.StringOutput `pulumi:"hostType"`
	// Optional. Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The current state of the AppGateway.
	State pulumi.StringOutput `pulumi:"state"`
	// The type of network connectivity used by the AppGateway.
	Type pulumi.StringOutput `pulumi:"type"`
	// A unique identifier for the instance generated by the system.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Server-defined URI for this resource.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly pulumi.BoolPtrOutput `pulumi:"validateOnly"`
}

// NewAppGateway registers a new resource with the given unique name, arguments, and options.
func NewAppGateway(ctx *pulumi.Context,
	name string, args *AppGatewayArgs, opts ...pulumi.ResourceOption) (*AppGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostType == nil {
		return nil, errors.New("invalid value for required argument 'HostType'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource AppGateway
	err := ctx.RegisterResource("google-native:beyondcorp/v1alpha:AppGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppGateway gets an existing AppGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppGatewayState, opts ...pulumi.ResourceOption) (*AppGateway, error) {
	var resource AppGateway
	err := ctx.ReadResource("google-native:beyondcorp/v1alpha:AppGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppGateway resources.
type appGatewayState struct {
}

type AppGatewayState struct {
}

func (AppGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*appGatewayState)(nil)).Elem()
}

type appGatewayArgs struct {
	// Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	AppGatewayId *string `pulumi:"appGatewayId"`
	// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// The type of hosting used by the AppGateway.
	HostType AppGatewayHostType `pulumi:"hostType"`
	// Optional. Resource labels to represent user provided metadata.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// The type of network connectivity used by the AppGateway.
	Type AppGatewayType `pulumi:"type"`
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly *bool `pulumi:"validateOnly"`
}

// The set of arguments for constructing a AppGateway resource.
type AppGatewayArgs struct {
	// Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
	AppGatewayId pulumi.StringPtrInput
	// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// The type of hosting used by the AppGateway.
	HostType AppGatewayHostTypeInput
	// Optional. Resource labels to represent user provided metadata.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// The type of network connectivity used by the AppGateway.
	Type AppGatewayTypeInput
	// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
	ValidateOnly pulumi.BoolPtrInput
}

func (AppGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appGatewayArgs)(nil)).Elem()
}

type AppGatewayInput interface {
	pulumi.Input

	ToAppGatewayOutput() AppGatewayOutput
	ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput
}

func (*AppGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGateway)(nil)).Elem()
}

func (i *AppGateway) ToAppGatewayOutput() AppGatewayOutput {
	return i.ToAppGatewayOutputWithContext(context.Background())
}

func (i *AppGateway) ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppGatewayOutput)
}

type AppGatewayOutput struct{ *pulumi.OutputState }

func (AppGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppGateway)(nil)).Elem()
}

func (o AppGatewayOutput) ToAppGatewayOutput() AppGatewayOutput {
	return o
}

func (o AppGatewayOutput) ToAppGatewayOutputWithContext(ctx context.Context) AppGatewayOutput {
	return o
}

// A list of connections allocated for the Gateway
func (o AppGatewayOutput) AllocatedConnections() AllocatedConnectionResponseArrayOutput {
	return o.ApplyT(func(v *AppGateway) AllocatedConnectionResponseArrayOutput { return v.AllocatedConnections }).(AllocatedConnectionResponseArrayOutput)
}

// Optional. User-settable AppGateway resource ID. * Must start with a letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end with a number or a letter.
func (o AppGatewayOutput) AppGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.AppGatewayId }).(pulumi.StringPtrOutput)
}

// Timestamp when the resource was created.
func (o AppGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
func (o AppGatewayOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The type of hosting used by the AppGateway.
func (o AppGatewayOutput) HostType() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.HostType }).(pulumi.StringOutput)
}

// Optional. Resource labels to represent user provided metadata.
func (o AppGatewayOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AppGatewayOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
func (o AppGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AppGatewayOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o AppGatewayOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The current state of the AppGateway.
func (o AppGatewayOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The type of network connectivity used by the AppGateway.
func (o AppGatewayOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// A unique identifier for the instance generated by the system.
func (o AppGatewayOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Timestamp when the resource was last modified.
func (o AppGatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Server-defined URI for this resource.
func (o AppGatewayOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// Optional. If set, validates request by executing a dry-run which would not alter the resource in any way.
func (o AppGatewayOutput) ValidateOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppGateway) pulumi.BoolPtrOutput { return v.ValidateOnly }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppGatewayInput)(nil)).Elem(), &AppGateway{})
	pulumi.RegisterOutputType(AppGatewayOutput{})
}
