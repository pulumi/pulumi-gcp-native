// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets details of a single CertificateMap.
func LookupCertificateMap(ctx *pulumi.Context, args *LookupCertificateMapArgs, opts ...pulumi.InvokeOption) (*LookupCertificateMapResult, error) {
	var rv LookupCertificateMapResult
	err := ctx.Invoke("google-native:certificatemanager/v1:getCertificateMap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCertificateMapArgs struct {
	CertificateMapId string  `pulumi:"certificateMapId"`
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
}

type LookupCertificateMapResult struct {
	// The creation timestamp of a Certificate Map.
	CreateTime string `pulumi:"createTime"`
	// One or more paragraphs of text description of a certificate map.
	Description string `pulumi:"description"`
	// A list of GCLB targets which use this Certificate Map.
	GclbTargets []GclbTargetResponse `pulumi:"gclbTargets"`
	// Set of labels associated with a Certificate Map.
	Labels map[string]string `pulumi:"labels"`
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.
	Name string `pulumi:"name"`
	// The update timestamp of a Certificate Map.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupCertificateMapOutput(ctx *pulumi.Context, args LookupCertificateMapOutputArgs, opts ...pulumi.InvokeOption) LookupCertificateMapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCertificateMapResult, error) {
			args := v.(LookupCertificateMapArgs)
			r, err := LookupCertificateMap(ctx, &args, opts...)
			return *r, err
		}).(LookupCertificateMapResultOutput)
}

type LookupCertificateMapOutputArgs struct {
	CertificateMapId pulumi.StringInput    `pulumi:"certificateMapId"`
	Location         pulumi.StringInput    `pulumi:"location"`
	Project          pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCertificateMapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateMapArgs)(nil)).Elem()
}

type LookupCertificateMapResultOutput struct{ *pulumi.OutputState }

func (LookupCertificateMapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateMapResult)(nil)).Elem()
}

func (o LookupCertificateMapResultOutput) ToLookupCertificateMapResultOutput() LookupCertificateMapResultOutput {
	return o
}

func (o LookupCertificateMapResultOutput) ToLookupCertificateMapResultOutputWithContext(ctx context.Context) LookupCertificateMapResultOutput {
	return o
}

// The creation timestamp of a Certificate Map.
func (o LookupCertificateMapResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// One or more paragraphs of text description of a certificate map.
func (o LookupCertificateMapResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) string { return v.Description }).(pulumi.StringOutput)
}

// A list of GCLB targets which use this Certificate Map.
func (o LookupCertificateMapResultOutput) GclbTargets() GclbTargetResponseArrayOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) []GclbTargetResponse { return v.GclbTargets }).(GclbTargetResponseArrayOutput)
}

// Set of labels associated with a Certificate Map.
func (o LookupCertificateMapResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.
func (o LookupCertificateMapResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) string { return v.Name }).(pulumi.StringOutput)
}

// The update timestamp of a Certificate Map.
func (o LookupCertificateMapResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateMapResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCertificateMapResultOutput{})
}
