// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a big query export.
// Auto-naming is currently not supported for this resource.
type FolderBigQueryExport struct {
	pulumi.CustomResourceState

	// The time at which the big query export was created. This field is set by the server and will be ignored if provided on export on creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringOutput `pulumi:"dataset"`
	// The description of the export (max of 1024 characters).
	Description pulumi.StringOutput `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. Please see the proto documentation in the finding (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/finding.proto) and in the ListFindingsRequest for valid filter syntax. (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/securitycenter_service.proto).
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Email address of the user who last edited the big query export. This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringOutput `pulumi:"mostRecentEditor"`
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service account that needs permission to create table, upload data to the big query dataset.
	Principal pulumi.StringOutput `pulumi:"principal"`
	// The most recent time at which the big export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFolderBigQueryExport registers a new resource with the given unique name, arguments, and options.
func NewFolderBigQueryExport(ctx *pulumi.Context,
	name string, args *FolderBigQueryExportArgs, opts ...pulumi.ResourceOption) (*FolderBigQueryExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigQueryExportId == nil {
		return nil, errors.New("invalid value for required argument 'BigQueryExportId'")
	}
	if args.FolderId == nil {
		return nil, errors.New("invalid value for required argument 'FolderId'")
	}
	var resource FolderBigQueryExport
	err := ctx.RegisterResource("google-native:securitycenter/v1:FolderBigQueryExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderBigQueryExport gets an existing FolderBigQueryExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderBigQueryExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderBigQueryExportState, opts ...pulumi.ResourceOption) (*FolderBigQueryExport, error) {
	var resource FolderBigQueryExport
	err := ctx.ReadResource("google-native:securitycenter/v1:FolderBigQueryExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderBigQueryExport resources.
type folderBigQueryExportState struct {
}

type FolderBigQueryExportState struct {
}

func (FolderBigQueryExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderBigQueryExportState)(nil)).Elem()
}

type folderBigQueryExportArgs struct {
	// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
	BigQueryExportId string `pulumi:"bigQueryExportId"`
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the export (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. Please see the proto documentation in the finding (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/finding.proto) and in the ListFindingsRequest for valid filter syntax. (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/securitycenter_service.proto).
	Filter   *string `pulumi:"filter"`
	FolderId string  `pulumi:"folderId"`
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a FolderBigQueryExport resource.
type FolderBigQueryExportArgs struct {
	// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
	BigQueryExportId pulumi.StringInput
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the export (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. Please see the proto documentation in the finding (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/finding.proto) and in the ListFindingsRequest for valid filter syntax. (https://source.corp.google.com/piper///depot/google3/google/cloud/securitycenter/v1/securitycenter_service.proto).
	Filter   pulumi.StringPtrInput
	FolderId pulumi.StringInput
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringPtrInput
}

func (FolderBigQueryExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderBigQueryExportArgs)(nil)).Elem()
}

type FolderBigQueryExportInput interface {
	pulumi.Input

	ToFolderBigQueryExportOutput() FolderBigQueryExportOutput
	ToFolderBigQueryExportOutputWithContext(ctx context.Context) FolderBigQueryExportOutput
}

func (*FolderBigQueryExport) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBigQueryExport)(nil)).Elem()
}

func (i *FolderBigQueryExport) ToFolderBigQueryExportOutput() FolderBigQueryExportOutput {
	return i.ToFolderBigQueryExportOutputWithContext(context.Background())
}

func (i *FolderBigQueryExport) ToFolderBigQueryExportOutputWithContext(ctx context.Context) FolderBigQueryExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderBigQueryExportOutput)
}

type FolderBigQueryExportOutput struct{ *pulumi.OutputState }

func (FolderBigQueryExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderBigQueryExport)(nil)).Elem()
}

func (o FolderBigQueryExportOutput) ToFolderBigQueryExportOutput() FolderBigQueryExportOutput {
	return o
}

func (o FolderBigQueryExportOutput) ToFolderBigQueryExportOutputWithContext(ctx context.Context) FolderBigQueryExportOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FolderBigQueryExportInput)(nil)).Elem(), &FolderBigQueryExport{})
	pulumi.RegisterOutputType(FolderBigQueryExportOutput{})
}
