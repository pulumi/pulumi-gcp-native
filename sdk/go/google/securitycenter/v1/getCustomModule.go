// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a SecurityHealthAnalyticsCustomModule.
func LookupCustomModule(ctx *pulumi.Context, args *LookupCustomModuleArgs, opts ...pulumi.InvokeOption) (*LookupCustomModuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomModuleResult
	err := ctx.Invoke("google-native:securitycenter/v1:getCustomModule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomModuleArgs struct {
	CustomModuleId string  `pulumi:"customModuleId"`
	Project        *string `pulumi:"project"`
}

type LookupCustomModuleResult struct {
	// If empty, indicates that the custom module was created in the organization, folder, or project in which you are viewing the custom module. Otherwise, `ancestor_module` specifies the organization or folder from which the custom module is inherited.
	AncestorModule string `pulumi:"ancestorModule"`
	// The user specified custom configuration for the module.
	CustomConfig GoogleCloudSecuritycenterV1CustomConfigResponse `pulumi:"customConfig"`
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName string `pulumi:"displayName"`
	// The enablement state of the custom module.
	EnablementState string `pulumi:"enablementState"`
	// The editor that last updated the custom module.
	LastEditor string `pulumi:"lastEditor"`
	// Immutable. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}" The id {customModule} is server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
	Name string `pulumi:"name"`
	// The time at which the custom module was last updated.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupCustomModuleOutput(ctx *pulumi.Context, args LookupCustomModuleOutputArgs, opts ...pulumi.InvokeOption) LookupCustomModuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomModuleResult, error) {
			args := v.(LookupCustomModuleArgs)
			r, err := LookupCustomModule(ctx, &args, opts...)
			var s LookupCustomModuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomModuleResultOutput)
}

type LookupCustomModuleOutputArgs struct {
	CustomModuleId pulumi.StringInput    `pulumi:"customModuleId"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCustomModuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomModuleArgs)(nil)).Elem()
}

type LookupCustomModuleResultOutput struct{ *pulumi.OutputState }

func (LookupCustomModuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomModuleResult)(nil)).Elem()
}

func (o LookupCustomModuleResultOutput) ToLookupCustomModuleResultOutput() LookupCustomModuleResultOutput {
	return o
}

func (o LookupCustomModuleResultOutput) ToLookupCustomModuleResultOutputWithContext(ctx context.Context) LookupCustomModuleResultOutput {
	return o
}

// If empty, indicates that the custom module was created in the organization, folder, or project in which you are viewing the custom module. Otherwise, `ancestor_module` specifies the organization or folder from which the custom module is inherited.
func (o LookupCustomModuleResultOutput) AncestorModule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.AncestorModule }).(pulumi.StringOutput)
}

// The user specified custom configuration for the module.
func (o LookupCustomModuleResultOutput) CustomConfig() GoogleCloudSecuritycenterV1CustomConfigResponseOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) GoogleCloudSecuritycenterV1CustomConfigResponse {
		return v.CustomConfig
	}).(GoogleCloudSecuritycenterV1CustomConfigResponseOutput)
}

// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.
func (o LookupCustomModuleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The enablement state of the custom module.
func (o LookupCustomModuleResultOutput) EnablementState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.EnablementState }).(pulumi.StringOutput)
}

// The editor that last updated the custom module.
func (o LookupCustomModuleResultOutput) LastEditor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.LastEditor }).(pulumi.StringOutput)
}

// Immutable. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}" The id {customModule} is server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
func (o LookupCustomModuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The time at which the custom module was last updated.
func (o LookupCustomModuleResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomModuleResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomModuleResultOutput{})
}
