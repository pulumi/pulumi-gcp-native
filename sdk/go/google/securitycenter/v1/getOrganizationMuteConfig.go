// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a mute config.
func LookupOrganizationMuteConfig(ctx *pulumi.Context, args *LookupOrganizationMuteConfigArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationMuteConfigResult, error) {
	var rv LookupOrganizationMuteConfigResult
	err := ctx.Invoke("google-native:securitycenter/v1:getOrganizationMuteConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupOrganizationMuteConfigArgs struct {
	MuteConfigId   string `pulumi:"muteConfigId"`
	OrganizationId string `pulumi:"organizationId"`
}

type LookupOrganizationMuteConfigResult struct {
	// The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.
	CreateTime string `pulumi:"createTime"`
	// A description of the mute config.
	Description string `pulumi:"description"`
	// The human readable name to be displayed for the mute config.
	DisplayName string `pulumi:"displayName"`
	// An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
	Filter string `pulumi:"filter"`
	// Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.
	MostRecentEditor string `pulumi:"mostRecentEditor"`
	// This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
	Name string `pulumi:"name"`
	// The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupOrganizationMuteConfigOutput(ctx *pulumi.Context, args LookupOrganizationMuteConfigOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationMuteConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrganizationMuteConfigResult, error) {
			args := v.(LookupOrganizationMuteConfigArgs)
			r, err := LookupOrganizationMuteConfig(ctx, &args, opts...)
			var s LookupOrganizationMuteConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrganizationMuteConfigResultOutput)
}

type LookupOrganizationMuteConfigOutputArgs struct {
	MuteConfigId   pulumi.StringInput `pulumi:"muteConfigId"`
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (LookupOrganizationMuteConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationMuteConfigArgs)(nil)).Elem()
}

type LookupOrganizationMuteConfigResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationMuteConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationMuteConfigResult)(nil)).Elem()
}

func (o LookupOrganizationMuteConfigResultOutput) ToLookupOrganizationMuteConfigResultOutput() LookupOrganizationMuteConfigResultOutput {
	return o
}

func (o LookupOrganizationMuteConfigResultOutput) ToLookupOrganizationMuteConfigResultOutputWithContext(ctx context.Context) LookupOrganizationMuteConfigResultOutput {
	return o
}

// The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.
func (o LookupOrganizationMuteConfigResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of the mute config.
func (o LookupOrganizationMuteConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// The human readable name to be displayed for the mute config.
func (o LookupOrganizationMuteConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
func (o LookupOrganizationMuteConfigResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.Filter }).(pulumi.StringOutput)
}

// Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.
func (o LookupOrganizationMuteConfigResultOutput) MostRecentEditor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.MostRecentEditor }).(pulumi.StringOutput)
}

// This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}"
func (o LookupOrganizationMuteConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.
func (o LookupOrganizationMuteConfigResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationMuteConfigResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationMuteConfigResultOutput{})
}
