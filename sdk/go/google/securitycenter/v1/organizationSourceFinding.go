// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a finding. The corresponding source must exist for finding creation to succeed.
type OrganizationSourceFinding struct {
	pulumi.CustomResourceState
}

// NewOrganizationSourceFinding registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSourceFinding(ctx *pulumi.Context,
	name string, args *OrganizationSourceFindingArgs, opts ...pulumi.ResourceOption) (*OrganizationSourceFinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.SourcesId == nil {
		return nil, errors.New("invalid value for required argument 'SourcesId'")
	}
	var resource OrganizationSourceFinding
	err := ctx.RegisterResource("google-cloud:securitycenter/v1:OrganizationSourceFinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSourceFinding gets an existing OrganizationSourceFinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSourceFinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSourceFindingState, opts ...pulumi.ResourceOption) (*OrganizationSourceFinding, error) {
	var resource OrganizationSourceFinding
	err := ctx.ReadResource("google-cloud:securitycenter/v1:OrganizationSourceFinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSourceFinding resources.
type organizationSourceFindingState struct {
}

type OrganizationSourceFindingState struct {
}

func (OrganizationSourceFindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSourceFindingState)(nil)).Elem()
}

type organizationSourceFindingArgs struct {
	// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
	CanonicalName *string `pulumi:"canonicalName"`
	// The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
	Category *string `pulumi:"category"`
	// The time at which the finding was created in Security Command Center.
	CreateTime *string `pulumi:"createTime"`
	// The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.
	EventTime *string `pulumi:"eventTime"`
	// The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
	ExternalUri *string `pulumi:"externalUri"`
	// The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
	Name            *string `pulumi:"name"`
	OrganizationsId string  `pulumi:"organizationsId"`
	// The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
	Parent *string `pulumi:"parent"`
	// For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
	ResourceName *string `pulumi:"resourceName"`
	// The severity of the finding. This field is managed by the source that writes the finding.
	Severity *string `pulumi:"severity"`
	// Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
	SourceProperties map[string]string `pulumi:"sourceProperties"`
	SourcesId        string            `pulumi:"sourcesId"`
	// The state of the finding.
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a OrganizationSourceFinding resource.
type OrganizationSourceFindingArgs struct {
	// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
	CanonicalName pulumi.StringPtrInput
	// The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
	Category pulumi.StringPtrInput
	// The time at which the finding was created in Security Command Center.
	CreateTime pulumi.StringPtrInput
	// The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.
	EventTime pulumi.StringPtrInput
	// The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
	ExternalUri pulumi.StringPtrInput
	// The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
	Name            pulumi.StringPtrInput
	OrganizationsId pulumi.StringInput
	// The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
	Parent pulumi.StringPtrInput
	// For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
	ResourceName pulumi.StringPtrInput
	// The severity of the finding. This field is managed by the source that writes the finding.
	Severity pulumi.StringPtrInput
	// Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
	SourceProperties pulumi.StringMapInput
	SourcesId        pulumi.StringInput
	// The state of the finding.
	State pulumi.StringPtrInput
}

func (OrganizationSourceFindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSourceFindingArgs)(nil)).Elem()
}

type OrganizationSourceFindingInput interface {
	pulumi.Input

	ToOrganizationSourceFindingOutput() OrganizationSourceFindingOutput
	ToOrganizationSourceFindingOutputWithContext(ctx context.Context) OrganizationSourceFindingOutput
}

func (*OrganizationSourceFinding) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSourceFinding)(nil))
}

func (i *OrganizationSourceFinding) ToOrganizationSourceFindingOutput() OrganizationSourceFindingOutput {
	return i.ToOrganizationSourceFindingOutputWithContext(context.Background())
}

func (i *OrganizationSourceFinding) ToOrganizationSourceFindingOutputWithContext(ctx context.Context) OrganizationSourceFindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSourceFindingOutput)
}

type OrganizationSourceFindingOutput struct {
	*pulumi.OutputState
}

func (OrganizationSourceFindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSourceFinding)(nil))
}

func (o OrganizationSourceFindingOutput) ToOrganizationSourceFindingOutput() OrganizationSourceFindingOutput {
	return o
}

func (o OrganizationSourceFindingOutput) ToOrganizationSourceFindingOutputWithContext(ctx context.Context) OrganizationSourceFindingOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationSourceFindingOutput{})
}
