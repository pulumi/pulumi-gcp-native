// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//	AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//	AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//	AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//	AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//	BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//	BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//	ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//	        ExprArgs{...}
//
//	or:
//
//	        nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
type GoogleCloudSecuritycenterV1CustomConfig struct {
	// Custom output properties.
	CustomOutput *GoogleCloudSecuritycenterV1CustomOutputSpec `pulumi:"customOutput"`
	// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
	Description *string `pulumi:"description"`
	// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
	Predicate *Expr `pulumi:"predicate"`
	// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
	Recommendation *string `pulumi:"recommendation"`
	// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
	ResourceSelector *GoogleCloudSecuritycenterV1ResourceSelector `pulumi:"resourceSelector"`
	// The severity to assign to findings generated by the module.
	Severity *GoogleCloudSecuritycenterV1CustomConfigSeverity `pulumi:"severity"`
}

// GoogleCloudSecuritycenterV1CustomConfigInput is an input type that accepts GoogleCloudSecuritycenterV1CustomConfigArgs and GoogleCloudSecuritycenterV1CustomConfigOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1CustomConfigInput` via:
//
//	GoogleCloudSecuritycenterV1CustomConfigArgs{...}
type GoogleCloudSecuritycenterV1CustomConfigInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1CustomConfigOutput() GoogleCloudSecuritycenterV1CustomConfigOutput
	ToGoogleCloudSecuritycenterV1CustomConfigOutputWithContext(context.Context) GoogleCloudSecuritycenterV1CustomConfigOutput
}

// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
type GoogleCloudSecuritycenterV1CustomConfigArgs struct {
	// Custom output properties.
	CustomOutput GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput `pulumi:"customOutput"`
	// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
	Predicate ExprPtrInput `pulumi:"predicate"`
	// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
	Recommendation pulumi.StringPtrInput `pulumi:"recommendation"`
	// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
	ResourceSelector GoogleCloudSecuritycenterV1ResourceSelectorPtrInput `pulumi:"resourceSelector"`
	// The severity to assign to findings generated by the module.
	Severity GoogleCloudSecuritycenterV1CustomConfigSeverityPtrInput `pulumi:"severity"`
}

func (GoogleCloudSecuritycenterV1CustomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomConfig)(nil)).Elem()
}

func (i GoogleCloudSecuritycenterV1CustomConfigArgs) ToGoogleCloudSecuritycenterV1CustomConfigOutput() GoogleCloudSecuritycenterV1CustomConfigOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomConfigOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1CustomConfigArgs) ToGoogleCloudSecuritycenterV1CustomConfigOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomConfigOutput)
}

func (i GoogleCloudSecuritycenterV1CustomConfigArgs) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutput() GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1CustomConfigArgs) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomConfigOutput).ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(ctx)
}

// GoogleCloudSecuritycenterV1CustomConfigPtrInput is an input type that accepts GoogleCloudSecuritycenterV1CustomConfigArgs, GoogleCloudSecuritycenterV1CustomConfigPtr and GoogleCloudSecuritycenterV1CustomConfigPtrOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1CustomConfigPtrInput` via:
//
//	        GoogleCloudSecuritycenterV1CustomConfigArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudSecuritycenterV1CustomConfigPtrInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1CustomConfigPtrOutput() GoogleCloudSecuritycenterV1CustomConfigPtrOutput
	ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(context.Context) GoogleCloudSecuritycenterV1CustomConfigPtrOutput
}

type googleCloudSecuritycenterV1CustomConfigPtrType GoogleCloudSecuritycenterV1CustomConfigArgs

func GoogleCloudSecuritycenterV1CustomConfigPtr(v *GoogleCloudSecuritycenterV1CustomConfigArgs) GoogleCloudSecuritycenterV1CustomConfigPtrInput {
	return (*googleCloudSecuritycenterV1CustomConfigPtrType)(v)
}

func (*googleCloudSecuritycenterV1CustomConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1CustomConfig)(nil)).Elem()
}

func (i *googleCloudSecuritycenterV1CustomConfigPtrType) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutput() GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(context.Background())
}

func (i *googleCloudSecuritycenterV1CustomConfigPtrType) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomConfigPtrOutput)
}

// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
type GoogleCloudSecuritycenterV1CustomConfigOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomConfig)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomConfigOutput) ToGoogleCloudSecuritycenterV1CustomConfigOutput() GoogleCloudSecuritycenterV1CustomConfigOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomConfigOutput) ToGoogleCloudSecuritycenterV1CustomConfigOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomConfigOutput) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutput() GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return o.ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(context.Background())
}

func (o GoogleCloudSecuritycenterV1CustomConfigOutput) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1CustomConfig {
		return &v
	}).(GoogleCloudSecuritycenterV1CustomConfigPtrOutput)
}

// Custom output properties.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) CustomOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1CustomOutputSpec {
		return v.CustomOutput
	}).(GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput)
}

// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) Predicate() ExprPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *Expr { return v.Predicate }).(ExprPtrOutput)
}

// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *string { return v.Recommendation }).(pulumi.StringPtrOutput)
}

// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) ResourceSelector() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1ResourceSelector {
		return v.ResourceSelector
	}).(GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput)
}

// The severity to assign to findings generated by the module.
func (o GoogleCloudSecuritycenterV1CustomConfigOutput) Severity() GoogleCloudSecuritycenterV1CustomConfigSeverityPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1CustomConfigSeverity {
		return v.Severity
	}).(GoogleCloudSecuritycenterV1CustomConfigSeverityPtrOutput)
}

type GoogleCloudSecuritycenterV1CustomConfigPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1CustomConfig)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutput() GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) ToGoogleCloudSecuritycenterV1CustomConfigPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) Elem() GoogleCloudSecuritycenterV1CustomConfigOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) GoogleCloudSecuritycenterV1CustomConfig {
		if v != nil {
			return *v
		}
		var ret GoogleCloudSecuritycenterV1CustomConfig
		return ret
	}).(GoogleCloudSecuritycenterV1CustomConfigOutput)
}

// Custom output properties.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) CustomOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1CustomOutputSpec {
		if v == nil {
			return nil
		}
		return v.CustomOutput
	}).(GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput)
}

// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) Predicate() ExprPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *Expr {
		if v == nil {
			return nil
		}
		return v.Predicate
	}).(ExprPtrOutput)
}

// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) Recommendation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *string {
		if v == nil {
			return nil
		}
		return v.Recommendation
	}).(pulumi.StringPtrOutput)
}

// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) ResourceSelector() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1ResourceSelector {
		if v == nil {
			return nil
		}
		return v.ResourceSelector
	}).(GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput)
}

// The severity to assign to findings generated by the module.
func (o GoogleCloudSecuritycenterV1CustomConfigPtrOutput) Severity() GoogleCloudSecuritycenterV1CustomConfigSeverityPtrOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomConfig) *GoogleCloudSecuritycenterV1CustomConfigSeverity {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(GoogleCloudSecuritycenterV1CustomConfigSeverityPtrOutput)
}

// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
type GoogleCloudSecuritycenterV1CustomConfigResponse struct {
	// Custom output properties.
	CustomOutput GoogleCloudSecuritycenterV1CustomOutputSpecResponse `pulumi:"customOutput"`
	// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
	Description string `pulumi:"description"`
	// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
	Predicate ExprResponse `pulumi:"predicate"`
	// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
	Recommendation string `pulumi:"recommendation"`
	// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
	ResourceSelector GoogleCloudSecuritycenterV1ResourceSelectorResponse `pulumi:"resourceSelector"`
	// The severity to assign to findings generated by the module.
	Severity string `pulumi:"severity"`
}

// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
type GoogleCloudSecuritycenterV1CustomConfigResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomConfigResponse)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) ToGoogleCloudSecuritycenterV1CustomConfigResponseOutput() GoogleCloudSecuritycenterV1CustomConfigResponseOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) ToGoogleCloudSecuritycenterV1CustomConfigResponseOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomConfigResponseOutput {
	return o
}

// Custom output properties.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) CustomOutput() GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) GoogleCloudSecuritycenterV1CustomOutputSpecResponse {
		return v.CustomOutput
	}).(GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput)
}

// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The CEL expression to evaluate to produce findings. When the expression evaluates to true against a resource, a finding is generated.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) Predicate() ExprResponseOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) ExprResponse { return v.Predicate }).(ExprResponseOutput)
}

// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) Recommendation() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) string { return v.Recommendation }).(pulumi.StringOutput)
}

// The resource types that the custom module operates on. Each custom module can specify up to 5 resource types.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) ResourceSelector() GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) GoogleCloudSecuritycenterV1ResourceSelectorResponse {
		return v.ResourceSelector
	}).(GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput)
}

// The severity to assign to findings generated by the module.
func (o GoogleCloudSecuritycenterV1CustomConfigResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomConfigResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
type GoogleCloudSecuritycenterV1CustomOutputSpec struct {
	// A list of custom output properties to add to the finding.
	Properties []GoogleCloudSecuritycenterV1Property `pulumi:"properties"`
}

// GoogleCloudSecuritycenterV1CustomOutputSpecInput is an input type that accepts GoogleCloudSecuritycenterV1CustomOutputSpecArgs and GoogleCloudSecuritycenterV1CustomOutputSpecOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1CustomOutputSpecInput` via:
//
//	GoogleCloudSecuritycenterV1CustomOutputSpecArgs{...}
type GoogleCloudSecuritycenterV1CustomOutputSpecInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1CustomOutputSpecOutput() GoogleCloudSecuritycenterV1CustomOutputSpecOutput
	ToGoogleCloudSecuritycenterV1CustomOutputSpecOutputWithContext(context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecOutput
}

// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
type GoogleCloudSecuritycenterV1CustomOutputSpecArgs struct {
	// A list of custom output properties to add to the finding.
	Properties GoogleCloudSecuritycenterV1PropertyArrayInput `pulumi:"properties"`
}

func (GoogleCloudSecuritycenterV1CustomOutputSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomOutputSpec)(nil)).Elem()
}

func (i GoogleCloudSecuritycenterV1CustomOutputSpecArgs) ToGoogleCloudSecuritycenterV1CustomOutputSpecOutput() GoogleCloudSecuritycenterV1CustomOutputSpecOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomOutputSpecOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1CustomOutputSpecArgs) ToGoogleCloudSecuritycenterV1CustomOutputSpecOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomOutputSpecOutput)
}

func (i GoogleCloudSecuritycenterV1CustomOutputSpecArgs) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1CustomOutputSpecArgs) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomOutputSpecOutput).ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(ctx)
}

// GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput is an input type that accepts GoogleCloudSecuritycenterV1CustomOutputSpecArgs, GoogleCloudSecuritycenterV1CustomOutputSpecPtr and GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput` via:
//
//	        GoogleCloudSecuritycenterV1CustomOutputSpecArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput
	ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput
}

type googleCloudSecuritycenterV1CustomOutputSpecPtrType GoogleCloudSecuritycenterV1CustomOutputSpecArgs

func GoogleCloudSecuritycenterV1CustomOutputSpecPtr(v *GoogleCloudSecuritycenterV1CustomOutputSpecArgs) GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput {
	return (*googleCloudSecuritycenterV1CustomOutputSpecPtrType)(v)
}

func (*googleCloudSecuritycenterV1CustomOutputSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1CustomOutputSpec)(nil)).Elem()
}

func (i *googleCloudSecuritycenterV1CustomOutputSpecPtrType) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(context.Background())
}

func (i *googleCloudSecuritycenterV1CustomOutputSpecPtrType) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput)
}

// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
type GoogleCloudSecuritycenterV1CustomOutputSpecOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomOutputSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomOutputSpec)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecOutput() GoogleCloudSecuritycenterV1CustomOutputSpecOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o.ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(context.Background())
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudSecuritycenterV1CustomOutputSpec) *GoogleCloudSecuritycenterV1CustomOutputSpec {
		return &v
	}).(GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput)
}

// A list of custom output properties to add to the finding.
func (o GoogleCloudSecuritycenterV1CustomOutputSpecOutput) Properties() GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomOutputSpec) []GoogleCloudSecuritycenterV1Property {
		return v.Properties
	}).(GoogleCloudSecuritycenterV1PropertyArrayOutput)
}

type GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1CustomOutputSpec)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput() GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput) Elem() GoogleCloudSecuritycenterV1CustomOutputSpecOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomOutputSpec) GoogleCloudSecuritycenterV1CustomOutputSpec {
		if v != nil {
			return *v
		}
		var ret GoogleCloudSecuritycenterV1CustomOutputSpec
		return ret
	}).(GoogleCloudSecuritycenterV1CustomOutputSpecOutput)
}

// A list of custom output properties to add to the finding.
func (o GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput) Properties() GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1CustomOutputSpec) []GoogleCloudSecuritycenterV1Property {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(GoogleCloudSecuritycenterV1PropertyArrayOutput)
}

// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
type GoogleCloudSecuritycenterV1CustomOutputSpecResponse struct {
	// A list of custom output properties to add to the finding.
	Properties []GoogleCloudSecuritycenterV1PropertyResponse `pulumi:"properties"`
}

// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
type GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomOutputSpecResponse)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput() GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput) ToGoogleCloudSecuritycenterV1CustomOutputSpecResponseOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput {
	return o
}

// A list of custom output properties to add to the finding.
func (o GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput) Properties() GoogleCloudSecuritycenterV1PropertyResponseArrayOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1CustomOutputSpecResponse) []GoogleCloudSecuritycenterV1PropertyResponse {
		return v.Properties
	}).(GoogleCloudSecuritycenterV1PropertyResponseArrayOutput)
}

// An individual name-value pair that defines a custom source property.
type GoogleCloudSecuritycenterV1Property struct {
	// Name of the property for the custom output.
	Name *string `pulumi:"name"`
	// The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.
	ValueExpression *Expr `pulumi:"valueExpression"`
}

// GoogleCloudSecuritycenterV1PropertyInput is an input type that accepts GoogleCloudSecuritycenterV1PropertyArgs and GoogleCloudSecuritycenterV1PropertyOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1PropertyInput` via:
//
//	GoogleCloudSecuritycenterV1PropertyArgs{...}
type GoogleCloudSecuritycenterV1PropertyInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1PropertyOutput() GoogleCloudSecuritycenterV1PropertyOutput
	ToGoogleCloudSecuritycenterV1PropertyOutputWithContext(context.Context) GoogleCloudSecuritycenterV1PropertyOutput
}

// An individual name-value pair that defines a custom source property.
type GoogleCloudSecuritycenterV1PropertyArgs struct {
	// Name of the property for the custom output.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.
	ValueExpression ExprPtrInput `pulumi:"valueExpression"`
}

func (GoogleCloudSecuritycenterV1PropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1Property)(nil)).Elem()
}

func (i GoogleCloudSecuritycenterV1PropertyArgs) ToGoogleCloudSecuritycenterV1PropertyOutput() GoogleCloudSecuritycenterV1PropertyOutput {
	return i.ToGoogleCloudSecuritycenterV1PropertyOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1PropertyArgs) ToGoogleCloudSecuritycenterV1PropertyOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1PropertyOutput)
}

// GoogleCloudSecuritycenterV1PropertyArrayInput is an input type that accepts GoogleCloudSecuritycenterV1PropertyArray and GoogleCloudSecuritycenterV1PropertyArrayOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1PropertyArrayInput` via:
//
//	GoogleCloudSecuritycenterV1PropertyArray{ GoogleCloudSecuritycenterV1PropertyArgs{...} }
type GoogleCloudSecuritycenterV1PropertyArrayInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1PropertyArrayOutput() GoogleCloudSecuritycenterV1PropertyArrayOutput
	ToGoogleCloudSecuritycenterV1PropertyArrayOutputWithContext(context.Context) GoogleCloudSecuritycenterV1PropertyArrayOutput
}

type GoogleCloudSecuritycenterV1PropertyArray []GoogleCloudSecuritycenterV1PropertyInput

func (GoogleCloudSecuritycenterV1PropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudSecuritycenterV1Property)(nil)).Elem()
}

func (i GoogleCloudSecuritycenterV1PropertyArray) ToGoogleCloudSecuritycenterV1PropertyArrayOutput() GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return i.ToGoogleCloudSecuritycenterV1PropertyArrayOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1PropertyArray) ToGoogleCloudSecuritycenterV1PropertyArrayOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1PropertyArrayOutput)
}

// An individual name-value pair that defines a custom source property.
type GoogleCloudSecuritycenterV1PropertyOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1PropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1Property)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1PropertyOutput) ToGoogleCloudSecuritycenterV1PropertyOutput() GoogleCloudSecuritycenterV1PropertyOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyOutput) ToGoogleCloudSecuritycenterV1PropertyOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyOutput {
	return o
}

// Name of the property for the custom output.
func (o GoogleCloudSecuritycenterV1PropertyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1Property) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.
func (o GoogleCloudSecuritycenterV1PropertyOutput) ValueExpression() ExprPtrOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1Property) *Expr { return v.ValueExpression }).(ExprPtrOutput)
}

type GoogleCloudSecuritycenterV1PropertyArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1PropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudSecuritycenterV1Property)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1PropertyArrayOutput) ToGoogleCloudSecuritycenterV1PropertyArrayOutput() GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyArrayOutput) ToGoogleCloudSecuritycenterV1PropertyArrayOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyArrayOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyArrayOutput) Index(i pulumi.IntInput) GoogleCloudSecuritycenterV1PropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudSecuritycenterV1Property {
		return vs[0].([]GoogleCloudSecuritycenterV1Property)[vs[1].(int)]
	}).(GoogleCloudSecuritycenterV1PropertyOutput)
}

// An individual name-value pair that defines a custom source property.
type GoogleCloudSecuritycenterV1PropertyResponse struct {
	// Name of the property for the custom output.
	Name string `pulumi:"name"`
	// The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.
	ValueExpression ExprResponse `pulumi:"valueExpression"`
}

// An individual name-value pair that defines a custom source property.
type GoogleCloudSecuritycenterV1PropertyResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1PropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1PropertyResponse)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1PropertyResponseOutput) ToGoogleCloudSecuritycenterV1PropertyResponseOutput() GoogleCloudSecuritycenterV1PropertyResponseOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyResponseOutput) ToGoogleCloudSecuritycenterV1PropertyResponseOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyResponseOutput {
	return o
}

// Name of the property for the custom output.
func (o GoogleCloudSecuritycenterV1PropertyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1PropertyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The CEL expression for the custom output. A resource property can be specified to return the value of the property or a text string enclosed in quotation marks.
func (o GoogleCloudSecuritycenterV1PropertyResponseOutput) ValueExpression() ExprResponseOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1PropertyResponse) ExprResponse { return v.ValueExpression }).(ExprResponseOutput)
}

type GoogleCloudSecuritycenterV1PropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1PropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GoogleCloudSecuritycenterV1PropertyResponse)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1PropertyResponseArrayOutput) ToGoogleCloudSecuritycenterV1PropertyResponseArrayOutput() GoogleCloudSecuritycenterV1PropertyResponseArrayOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyResponseArrayOutput) ToGoogleCloudSecuritycenterV1PropertyResponseArrayOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1PropertyResponseArrayOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1PropertyResponseArrayOutput) Index(i pulumi.IntInput) GoogleCloudSecuritycenterV1PropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GoogleCloudSecuritycenterV1PropertyResponse {
		return vs[0].([]GoogleCloudSecuritycenterV1PropertyResponse)[vs[1].(int)]
	}).(GoogleCloudSecuritycenterV1PropertyResponseOutput)
}

// Resource for selecting resource type.
type GoogleCloudSecuritycenterV1ResourceSelector struct {
	// The resource types to run the detector on.
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// GoogleCloudSecuritycenterV1ResourceSelectorInput is an input type that accepts GoogleCloudSecuritycenterV1ResourceSelectorArgs and GoogleCloudSecuritycenterV1ResourceSelectorOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1ResourceSelectorInput` via:
//
//	GoogleCloudSecuritycenterV1ResourceSelectorArgs{...}
type GoogleCloudSecuritycenterV1ResourceSelectorInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1ResourceSelectorOutput() GoogleCloudSecuritycenterV1ResourceSelectorOutput
	ToGoogleCloudSecuritycenterV1ResourceSelectorOutputWithContext(context.Context) GoogleCloudSecuritycenterV1ResourceSelectorOutput
}

// Resource for selecting resource type.
type GoogleCloudSecuritycenterV1ResourceSelectorArgs struct {
	// The resource types to run the detector on.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (GoogleCloudSecuritycenterV1ResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1ResourceSelector)(nil)).Elem()
}

func (i GoogleCloudSecuritycenterV1ResourceSelectorArgs) ToGoogleCloudSecuritycenterV1ResourceSelectorOutput() GoogleCloudSecuritycenterV1ResourceSelectorOutput {
	return i.ToGoogleCloudSecuritycenterV1ResourceSelectorOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1ResourceSelectorArgs) ToGoogleCloudSecuritycenterV1ResourceSelectorOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1ResourceSelectorOutput)
}

func (i GoogleCloudSecuritycenterV1ResourceSelectorArgs) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutput() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(context.Background())
}

func (i GoogleCloudSecuritycenterV1ResourceSelectorArgs) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1ResourceSelectorOutput).ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(ctx)
}

// GoogleCloudSecuritycenterV1ResourceSelectorPtrInput is an input type that accepts GoogleCloudSecuritycenterV1ResourceSelectorArgs, GoogleCloudSecuritycenterV1ResourceSelectorPtr and GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput values.
// You can construct a concrete instance of `GoogleCloudSecuritycenterV1ResourceSelectorPtrInput` via:
//
//	        GoogleCloudSecuritycenterV1ResourceSelectorArgs{...}
//
//	or:
//
//	        nil
type GoogleCloudSecuritycenterV1ResourceSelectorPtrInput interface {
	pulumi.Input

	ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutput() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput
	ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(context.Context) GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput
}

type googleCloudSecuritycenterV1ResourceSelectorPtrType GoogleCloudSecuritycenterV1ResourceSelectorArgs

func GoogleCloudSecuritycenterV1ResourceSelectorPtr(v *GoogleCloudSecuritycenterV1ResourceSelectorArgs) GoogleCloudSecuritycenterV1ResourceSelectorPtrInput {
	return (*googleCloudSecuritycenterV1ResourceSelectorPtrType)(v)
}

func (*googleCloudSecuritycenterV1ResourceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1ResourceSelector)(nil)).Elem()
}

func (i *googleCloudSecuritycenterV1ResourceSelectorPtrType) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutput() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return i.ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(context.Background())
}

func (i *googleCloudSecuritycenterV1ResourceSelectorPtrType) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput)
}

// Resource for selecting resource type.
type GoogleCloudSecuritycenterV1ResourceSelectorOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1ResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1ResourceSelector)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorOutput() GoogleCloudSecuritycenterV1ResourceSelectorOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutput() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o.ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(context.Background())
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GoogleCloudSecuritycenterV1ResourceSelector) *GoogleCloudSecuritycenterV1ResourceSelector {
		return &v
	}).(GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput)
}

// The resource types to run the detector on.
func (o GoogleCloudSecuritycenterV1ResourceSelectorOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1ResourceSelector) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleCloudSecuritycenterV1ResourceSelector)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutput() GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorPtrOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput) Elem() GoogleCloudSecuritycenterV1ResourceSelectorOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1ResourceSelector) GoogleCloudSecuritycenterV1ResourceSelector {
		if v != nil {
			return *v
		}
		var ret GoogleCloudSecuritycenterV1ResourceSelector
		return ret
	}).(GoogleCloudSecuritycenterV1ResourceSelectorOutput)
}

// The resource types to run the detector on.
func (o GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GoogleCloudSecuritycenterV1ResourceSelector) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

// Resource for selecting resource type.
type GoogleCloudSecuritycenterV1ResourceSelectorResponse struct {
	// The resource types to run the detector on.
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// Resource for selecting resource type.
type GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput struct{ *pulumi.OutputState }

func (GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleCloudSecuritycenterV1ResourceSelectorResponse)(nil)).Elem()
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorResponseOutput() GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput {
	return o
}

func (o GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput) ToGoogleCloudSecuritycenterV1ResourceSelectorResponseOutputWithContext(ctx context.Context) GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput {
	return o
}

// The resource types to run the detector on.
func (o GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GoogleCloudSecuritycenterV1ResourceSelectorResponse) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// The config for streaming-based notifications, which send each event as soon as it is detected.
type StreamingConfig struct {
	// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter *string `pulumi:"filter"`
}

// StreamingConfigInput is an input type that accepts StreamingConfigArgs and StreamingConfigOutput values.
// You can construct a concrete instance of `StreamingConfigInput` via:
//
//	StreamingConfigArgs{...}
type StreamingConfigInput interface {
	pulumi.Input

	ToStreamingConfigOutput() StreamingConfigOutput
	ToStreamingConfigOutputWithContext(context.Context) StreamingConfigOutput
}

// The config for streaming-based notifications, which send each event as soon as it is detected.
type StreamingConfigArgs struct {
	// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
}

func (StreamingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingConfig)(nil)).Elem()
}

func (i StreamingConfigArgs) ToStreamingConfigOutput() StreamingConfigOutput {
	return i.ToStreamingConfigOutputWithContext(context.Background())
}

func (i StreamingConfigArgs) ToStreamingConfigOutputWithContext(ctx context.Context) StreamingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingConfigOutput)
}

func (i StreamingConfigArgs) ToStreamingConfigPtrOutput() StreamingConfigPtrOutput {
	return i.ToStreamingConfigPtrOutputWithContext(context.Background())
}

func (i StreamingConfigArgs) ToStreamingConfigPtrOutputWithContext(ctx context.Context) StreamingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingConfigOutput).ToStreamingConfigPtrOutputWithContext(ctx)
}

// StreamingConfigPtrInput is an input type that accepts StreamingConfigArgs, StreamingConfigPtr and StreamingConfigPtrOutput values.
// You can construct a concrete instance of `StreamingConfigPtrInput` via:
//
//	        StreamingConfigArgs{...}
//
//	or:
//
//	        nil
type StreamingConfigPtrInput interface {
	pulumi.Input

	ToStreamingConfigPtrOutput() StreamingConfigPtrOutput
	ToStreamingConfigPtrOutputWithContext(context.Context) StreamingConfigPtrOutput
}

type streamingConfigPtrType StreamingConfigArgs

func StreamingConfigPtr(v *StreamingConfigArgs) StreamingConfigPtrInput {
	return (*streamingConfigPtrType)(v)
}

func (*streamingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingConfig)(nil)).Elem()
}

func (i *streamingConfigPtrType) ToStreamingConfigPtrOutput() StreamingConfigPtrOutput {
	return i.ToStreamingConfigPtrOutputWithContext(context.Background())
}

func (i *streamingConfigPtrType) ToStreamingConfigPtrOutputWithContext(ctx context.Context) StreamingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingConfigPtrOutput)
}

// The config for streaming-based notifications, which send each event as soon as it is detected.
type StreamingConfigOutput struct{ *pulumi.OutputState }

func (StreamingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingConfig)(nil)).Elem()
}

func (o StreamingConfigOutput) ToStreamingConfigOutput() StreamingConfigOutput {
	return o
}

func (o StreamingConfigOutput) ToStreamingConfigOutputWithContext(ctx context.Context) StreamingConfigOutput {
	return o
}

func (o StreamingConfigOutput) ToStreamingConfigPtrOutput() StreamingConfigPtrOutput {
	return o.ToStreamingConfigPtrOutputWithContext(context.Background())
}

func (o StreamingConfigOutput) ToStreamingConfigPtrOutputWithContext(ctx context.Context) StreamingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamingConfig) *StreamingConfig {
		return &v
	}).(StreamingConfigPtrOutput)
}

// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
func (o StreamingConfigOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingConfig) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

type StreamingConfigPtrOutput struct{ *pulumi.OutputState }

func (StreamingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingConfig)(nil)).Elem()
}

func (o StreamingConfigPtrOutput) ToStreamingConfigPtrOutput() StreamingConfigPtrOutput {
	return o
}

func (o StreamingConfigPtrOutput) ToStreamingConfigPtrOutputWithContext(ctx context.Context) StreamingConfigPtrOutput {
	return o
}

func (o StreamingConfigPtrOutput) Elem() StreamingConfigOutput {
	return o.ApplyT(func(v *StreamingConfig) StreamingConfig {
		if v != nil {
			return *v
		}
		var ret StreamingConfig
		return ret
	}).(StreamingConfigOutput)
}

// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
func (o StreamingConfigPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingConfig) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

// The config for streaming-based notifications, which send each event as soon as it is detected.
type StreamingConfigResponse struct {
	// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter string `pulumi:"filter"`
}

// The config for streaming-based notifications, which send each event as soon as it is detected.
type StreamingConfigResponseOutput struct{ *pulumi.OutputState }

func (StreamingConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingConfigResponse)(nil)).Elem()
}

func (o StreamingConfigResponseOutput) ToStreamingConfigResponseOutput() StreamingConfigResponseOutput {
	return o
}

func (o StreamingConfigResponseOutput) ToStreamingConfigResponseOutputWithContext(ctx context.Context) StreamingConfigResponseOutput {
	return o
}

// Expression that defines the filter to apply across create/update events of assets or findings as specified by the event type. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
func (o StreamingConfigResponseOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingConfigResponse) string { return v.Filter }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigInput)(nil)).Elem(), AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigArrayInput)(nil)).Elem(), AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigInput)(nil)).Elem(), AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigArrayInput)(nil)).Elem(), AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomConfigInput)(nil)).Elem(), GoogleCloudSecuritycenterV1CustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomConfigPtrInput)(nil)).Elem(), GoogleCloudSecuritycenterV1CustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomOutputSpecInput)(nil)).Elem(), GoogleCloudSecuritycenterV1CustomOutputSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1CustomOutputSpecPtrInput)(nil)).Elem(), GoogleCloudSecuritycenterV1CustomOutputSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1PropertyInput)(nil)).Elem(), GoogleCloudSecuritycenterV1PropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1PropertyArrayInput)(nil)).Elem(), GoogleCloudSecuritycenterV1PropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1ResourceSelectorInput)(nil)).Elem(), GoogleCloudSecuritycenterV1ResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GoogleCloudSecuritycenterV1ResourceSelectorPtrInput)(nil)).Elem(), GoogleCloudSecuritycenterV1ResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingConfigInput)(nil)).Elem(), StreamingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingConfigPtrInput)(nil)).Elem(), StreamingConfigArgs{})
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomConfigOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomConfigPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomConfigResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomOutputSpecOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomOutputSpecPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1CustomOutputSpecResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1PropertyOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1PropertyArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1PropertyResponseOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1PropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1ResourceSelectorOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1ResourceSelectorPtrOutput{})
	pulumi.RegisterOutputType(GoogleCloudSecuritycenterV1ResourceSelectorResponseOutput{})
	pulumi.RegisterOutputType(StreamingConfigOutput{})
	pulumi.RegisterOutputType(StreamingConfigPtrOutput{})
	pulumi.RegisterOutputType(StreamingConfigResponseOutput{})
}
