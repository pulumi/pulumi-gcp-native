// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets a source.
func LookupSource(ctx *pulumi.Context, args *LookupSourceArgs, opts ...pulumi.InvokeOption) (*LookupSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceResult
	err := ctx.Invoke("google-native:securitycenter/v1:getSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSourceArgs struct {
	OrganizationId string `pulumi:"organizationId"`
	SourceId       string `pulumi:"sourceId"`
}

type LookupSourceResult struct {
	// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}", "folders/{folder_id}/sources/{source_id}" or "projects/{project_number}/sources/{source_id}", depending on the closest CRM ancestor of the resource associated with the finding.
	CanonicalName string `pulumi:"canonicalName"`
	// The description of the source (max of 1024 characters). Example: "Web Security Scanner is a web security scanner for common vulnerabilities in App Engine applications. It can automatically scan and detect four common vulnerabilities, including cross-site-scripting (XSS), Flash injection, mixed content (HTTP in HTTPS), and outdated or insecure libraries."
	Description string `pulumi:"description"`
	// The source's display name. A source's display name must be unique amongst its siblings, for example, two sources with the same parent can't share the same display name. The display name must have a length between 1 and 64 characters (inclusive).
	DisplayName string `pulumi:"displayName"`
	// The relative resource name of this source. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}"
	Name string `pulumi:"name"`
}

func LookupSourceOutput(ctx *pulumi.Context, args LookupSourceOutputArgs, opts ...pulumi.InvokeOption) LookupSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceResult, error) {
			args := v.(LookupSourceArgs)
			r, err := LookupSource(ctx, &args, opts...)
			var s LookupSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceResultOutput)
}

type LookupSourceOutputArgs struct {
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	SourceId       pulumi.StringInput `pulumi:"sourceId"`
}

func (LookupSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceArgs)(nil)).Elem()
}

type LookupSourceResultOutput struct{ *pulumi.OutputState }

func (LookupSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceResult)(nil)).Elem()
}

func (o LookupSourceResultOutput) ToLookupSourceResultOutput() LookupSourceResultOutput {
	return o
}

func (o LookupSourceResultOutput) ToLookupSourceResultOutputWithContext(ctx context.Context) LookupSourceResultOutput {
	return o
}

// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}", "folders/{folder_id}/sources/{source_id}" or "projects/{project_number}/sources/{source_id}", depending on the closest CRM ancestor of the resource associated with the finding.
func (o LookupSourceResultOutput) CanonicalName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceResult) string { return v.CanonicalName }).(pulumi.StringOutput)
}

// The description of the source (max of 1024 characters). Example: "Web Security Scanner is a web security scanner for common vulnerabilities in App Engine applications. It can automatically scan and detect four common vulnerabilities, including cross-site-scripting (XSS), Flash injection, mixed content (HTTP in HTTPS), and outdated or insecure libraries."
func (o LookupSourceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The source's display name. A source's display name must be unique amongst its siblings, for example, two sources with the same parent can't share the same display name. The display name must have a length between 1 and 64 characters (inclusive).
func (o LookupSourceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The relative resource name of this source. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}"
func (o LookupSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceResultOutput{})
}
