// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a BigQuery export.
// Auto-naming is currently not supported for this resource.
type ProjectBigQueryExport struct {
	pulumi.CustomResourceState

	// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
	BigQueryExportId pulumi.StringOutput `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringOutput `pulumi:"dataset"`
	// The description of the export (max of 1024 characters).
	Description pulumi.StringOutput `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if provided on export creation or update.
	MostRecentEditor pulumi.StringOutput `pulumi:"mostRecentEditor"`
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal pulumi.StringOutput `pulumi:"principal"`
	Project   pulumi.StringOutput `pulumi:"project"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewProjectBigQueryExport registers a new resource with the given unique name, arguments, and options.
func NewProjectBigQueryExport(ctx *pulumi.Context,
	name string, args *ProjectBigQueryExportArgs, opts ...pulumi.ResourceOption) (*ProjectBigQueryExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigQueryExportId == nil {
		return nil, errors.New("invalid value for required argument 'BigQueryExportId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"bigQueryExportId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	var resource ProjectBigQueryExport
	err := ctx.RegisterResource("google-native:securitycenter/v1:ProjectBigQueryExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectBigQueryExport gets an existing ProjectBigQueryExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectBigQueryExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectBigQueryExportState, opts ...pulumi.ResourceOption) (*ProjectBigQueryExport, error) {
	var resource ProjectBigQueryExport
	err := ctx.ReadResource("google-native:securitycenter/v1:ProjectBigQueryExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectBigQueryExport resources.
type projectBigQueryExportState struct {
}

type ProjectBigQueryExportState struct {
}

func (ProjectBigQueryExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectBigQueryExportState)(nil)).Elem()
}

type projectBigQueryExportArgs struct {
	// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
	BigQueryExportId string `pulumi:"bigQueryExportId"`
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the export (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter *string `pulumi:"filter"`
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// The set of arguments for constructing a ProjectBigQueryExport resource.
type ProjectBigQueryExportArgs struct {
	// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
	BigQueryExportId pulumi.StringInput
	// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the export (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
	Filter pulumi.StringPtrInput
	// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
}

func (ProjectBigQueryExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectBigQueryExportArgs)(nil)).Elem()
}

type ProjectBigQueryExportInput interface {
	pulumi.Input

	ToProjectBigQueryExportOutput() ProjectBigQueryExportOutput
	ToProjectBigQueryExportOutputWithContext(ctx context.Context) ProjectBigQueryExportOutput
}

func (*ProjectBigQueryExport) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBigQueryExport)(nil)).Elem()
}

func (i *ProjectBigQueryExport) ToProjectBigQueryExportOutput() ProjectBigQueryExportOutput {
	return i.ToProjectBigQueryExportOutputWithContext(context.Background())
}

func (i *ProjectBigQueryExport) ToProjectBigQueryExportOutputWithContext(ctx context.Context) ProjectBigQueryExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBigQueryExportOutput)
}

type ProjectBigQueryExportOutput struct{ *pulumi.OutputState }

func (ProjectBigQueryExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBigQueryExport)(nil)).Elem()
}

func (o ProjectBigQueryExportOutput) ToProjectBigQueryExportOutput() ProjectBigQueryExportOutput {
	return o
}

func (o ProjectBigQueryExportOutput) ToProjectBigQueryExportOutputWithContext(ctx context.Context) ProjectBigQueryExportOutput {
	return o
}

// Required. Unique identifier provided by the client within the parent scope. It must consist of lower case letters, numbers, and hyphen, with the first character a letter, the last a letter or a number, and a 63 character maximum.
func (o ProjectBigQueryExportOutput) BigQueryExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.BigQueryExportId }).(pulumi.StringOutput)
}

// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
func (o ProjectBigQueryExportOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
func (o ProjectBigQueryExportOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

// The description of the export (max of 1024 characters).
func (o ProjectBigQueryExportOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
func (o ProjectBigQueryExportOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if provided on export creation or update.
func (o ProjectBigQueryExportOutput) MostRecentEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.MostRecentEditor }).(pulumi.StringOutput)
}

// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
func (o ProjectBigQueryExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service account that needs permission to create table and upload data to the BigQuery dataset.
func (o ProjectBigQueryExportOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

func (o ProjectBigQueryExportOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
func (o ProjectBigQueryExportOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectBigQueryExport) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBigQueryExportInput)(nil)).Elem(), &ProjectBigQueryExport{})
	pulumi.RegisterOutputType(ProjectBigQueryExportOutput{})
}
