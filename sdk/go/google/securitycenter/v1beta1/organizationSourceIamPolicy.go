// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Sets the access control policy on the specified Source.
type OrganizationSourceIamPolicy struct {
	pulumi.CustomResourceState
}

// NewOrganizationSourceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewOrganizationSourceIamPolicy(ctx *pulumi.Context,
	name string, args *OrganizationSourceIamPolicyArgs, opts ...pulumi.ResourceOption) (*OrganizationSourceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationsId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationsId'")
	}
	if args.SourcesId == nil {
		return nil, errors.New("invalid value for required argument 'SourcesId'")
	}
	var resource OrganizationSourceIamPolicy
	err := ctx.RegisterResource("google-cloud:securitycenter/v1beta1:OrganizationSourceIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationSourceIamPolicy gets an existing OrganizationSourceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationSourceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationSourceIamPolicyState, opts ...pulumi.ResourceOption) (*OrganizationSourceIamPolicy, error) {
	var resource OrganizationSourceIamPolicy
	err := ctx.ReadResource("google-cloud:securitycenter/v1beta1:OrganizationSourceIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationSourceIamPolicy resources.
type organizationSourceIamPolicyState struct {
}

type OrganizationSourceIamPolicyState struct {
}

func (OrganizationSourceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSourceIamPolicyState)(nil)).Elem()
}

type organizationSourceIamPolicyArgs struct {
	OrganizationsId string `pulumi:"organizationsId"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy    *Policy `pulumi:"policy"`
	SourcesId string  `pulumi:"sourcesId"`
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask *string `pulumi:"updateMask"`
}

// The set of arguments for constructing a OrganizationSourceIamPolicy resource.
type OrganizationSourceIamPolicyArgs struct {
	OrganizationsId pulumi.StringInput
	// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
	Policy    PolicyPtrInput
	SourcesId pulumi.StringInput
	// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
	UpdateMask pulumi.StringPtrInput
}

func (OrganizationSourceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationSourceIamPolicyArgs)(nil)).Elem()
}

type OrganizationSourceIamPolicyInput interface {
	pulumi.Input

	ToOrganizationSourceIamPolicyOutput() OrganizationSourceIamPolicyOutput
	ToOrganizationSourceIamPolicyOutputWithContext(ctx context.Context) OrganizationSourceIamPolicyOutput
}

func (*OrganizationSourceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSourceIamPolicy)(nil))
}

func (i *OrganizationSourceIamPolicy) ToOrganizationSourceIamPolicyOutput() OrganizationSourceIamPolicyOutput {
	return i.ToOrganizationSourceIamPolicyOutputWithContext(context.Background())
}

func (i *OrganizationSourceIamPolicy) ToOrganizationSourceIamPolicyOutputWithContext(ctx context.Context) OrganizationSourceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationSourceIamPolicyOutput)
}

type OrganizationSourceIamPolicyOutput struct {
	*pulumi.OutputState
}

func (OrganizationSourceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationSourceIamPolicy)(nil))
}

func (o OrganizationSourceIamPolicyOutput) ToOrganizationSourceIamPolicyOutput() OrganizationSourceIamPolicyOutput {
	return o
}

func (o OrganizationSourceIamPolicyOutput) ToOrganizationSourceIamPolicyOutputWithContext(ctx context.Context) OrganizationSourceIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationSourceIamPolicyOutput{})
}
