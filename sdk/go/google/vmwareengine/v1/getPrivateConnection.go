// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a `PrivateConnection` resource by its resource name. The resource contains details of the private connection, such as connected network, routing mode and state.
func LookupPrivateConnection(ctx *pulumi.Context, args *LookupPrivateConnectionArgs, opts ...pulumi.InvokeOption) (*LookupPrivateConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPrivateConnectionResult
	err := ctx.Invoke("google-native:vmwareengine/v1:getPrivateConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPrivateConnectionArgs struct {
	Location            string  `pulumi:"location"`
	PrivateConnectionId string  `pulumi:"privateConnectionId"`
	Project             *string `pulumi:"project"`
}

type LookupPrivateConnectionResult struct {
	// Creation time of this resource.
	CreateTime string `pulumi:"createTime"`
	// Optional. User-provided description for this private connection.
	Description string `pulumi:"description"`
	// The resource name of the private connection. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/privateConnections/my-connection`
	Name string `pulumi:"name"`
	// VPC network peering id between given network VPC and VMwareEngineNetwork.
	PeeringId string `pulumi:"peeringId"`
	// Peering state between service network and VMware Engine network.
	PeeringState string `pulumi:"peeringState"`
	// Optional. Routing Mode. Default value is set to GLOBAL. For type = PRIVATE_SERVICE_ACCESS, this field can be set to GLOBAL or REGIONAL, for other types only GLOBAL is supported.
	RoutingMode string `pulumi:"routingMode"`
	// Service network to create private connection. Specify the name in the following form: `projects/{project}/global/networks/{network_id}` For type = PRIVATE_SERVICE_ACCESS, this field represents servicenetworking VPC, e.g. projects/project-tp/global/networks/servicenetworking. For type = NETAPP_CLOUD_VOLUME, this field represents NetApp service VPC, e.g. projects/project-tp/global/networks/netapp-tenant-vpc. For type = DELL_POWERSCALE, this field represent Dell service VPC, e.g. projects/project-tp/global/networks/dell-tenant-vpc. For type= THIRD_PARTY_SERVICE, this field could represent a consumer VPC or any other producer VPC to which the VMware Engine Network needs to be connected, e.g. projects/project/global/networks/vpc.
	ServiceNetwork string `pulumi:"serviceNetwork"`
	// State of the private connection.
	State string `pulumi:"state"`
	// Private connection type.
	Type string `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid string `pulumi:"uid"`
	// Last update time of this resource.
	UpdateTime string `pulumi:"updateTime"`
	// The relative resource name of Legacy VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}`, `{location}` will be same as specified in private connection resource name and `{vmware_engine_network_id}` will be in the form of `{location}`-default e.g. projects/project/locations/us-central1/vmwareEngineNetworks/us-central1-default.
	VmwareEngineNetwork string `pulumi:"vmwareEngineNetwork"`
	// The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
	VmwareEngineNetworkCanonical string `pulumi:"vmwareEngineNetworkCanonical"`
}

func LookupPrivateConnectionOutput(ctx *pulumi.Context, args LookupPrivateConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupPrivateConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPrivateConnectionResult, error) {
			args := v.(LookupPrivateConnectionArgs)
			r, err := LookupPrivateConnection(ctx, &args, opts...)
			var s LookupPrivateConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPrivateConnectionResultOutput)
}

type LookupPrivateConnectionOutputArgs struct {
	Location            pulumi.StringInput    `pulumi:"location"`
	PrivateConnectionId pulumi.StringInput    `pulumi:"privateConnectionId"`
	Project             pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPrivateConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateConnectionArgs)(nil)).Elem()
}

type LookupPrivateConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupPrivateConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPrivateConnectionResult)(nil)).Elem()
}

func (o LookupPrivateConnectionResultOutput) ToLookupPrivateConnectionResultOutput() LookupPrivateConnectionResultOutput {
	return o
}

func (o LookupPrivateConnectionResultOutput) ToLookupPrivateConnectionResultOutputWithContext(ctx context.Context) LookupPrivateConnectionResultOutput {
	return o
}

// Creation time of this resource.
func (o LookupPrivateConnectionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. User-provided description for this private connection.
func (o LookupPrivateConnectionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The resource name of the private connection. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/privateConnections/my-connection`
func (o LookupPrivateConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// VPC network peering id between given network VPC and VMwareEngineNetwork.
func (o LookupPrivateConnectionResultOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.PeeringId }).(pulumi.StringOutput)
}

// Peering state between service network and VMware Engine network.
func (o LookupPrivateConnectionResultOutput) PeeringState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.PeeringState }).(pulumi.StringOutput)
}

// Optional. Routing Mode. Default value is set to GLOBAL. For type = PRIVATE_SERVICE_ACCESS, this field can be set to GLOBAL or REGIONAL, for other types only GLOBAL is supported.
func (o LookupPrivateConnectionResultOutput) RoutingMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.RoutingMode }).(pulumi.StringOutput)
}

// Service network to create private connection. Specify the name in the following form: `projects/{project}/global/networks/{network_id}` For type = PRIVATE_SERVICE_ACCESS, this field represents servicenetworking VPC, e.g. projects/project-tp/global/networks/servicenetworking. For type = NETAPP_CLOUD_VOLUME, this field represents NetApp service VPC, e.g. projects/project-tp/global/networks/netapp-tenant-vpc. For type = DELL_POWERSCALE, this field represent Dell service VPC, e.g. projects/project-tp/global/networks/dell-tenant-vpc. For type= THIRD_PARTY_SERVICE, this field could represent a consumer VPC or any other producer VPC to which the VMware Engine Network needs to be connected, e.g. projects/project/global/networks/vpc.
func (o LookupPrivateConnectionResultOutput) ServiceNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.ServiceNetwork }).(pulumi.StringOutput)
}

// State of the private connection.
func (o LookupPrivateConnectionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.State }).(pulumi.StringOutput)
}

// Private connection type.
func (o LookupPrivateConnectionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.Type }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o LookupPrivateConnectionResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Last update time of this resource.
func (o LookupPrivateConnectionResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The relative resource name of Legacy VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}`, `{location}` will be same as specified in private connection resource name and `{vmware_engine_network_id}` will be in the form of `{location}`-default e.g. projects/project/locations/us-central1/vmwareEngineNetworks/us-central1-default.
func (o LookupPrivateConnectionResultOutput) VmwareEngineNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.VmwareEngineNetwork }).(pulumi.StringOutput)
}

// The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
func (o LookupPrivateConnectionResultOutput) VmwareEngineNetworkCanonical() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPrivateConnectionResult) string { return v.VmwareEngineNetworkCanonical }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPrivateConnectionResultOutput{})
}
