// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new external access rule in a given network policy.
// Auto-naming is currently not supported for this resource.
type ExternalAccessRule struct {
	pulumi.CustomResourceState

	// The action that the external access rule performs.
	Action pulumi.StringOutput `pulumi:"action"`
	// Creation time of this resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-provided description for this external access rule.
	Description pulumi.StringOutput `pulumi:"description"`
	// If destination ranges are specified, the external access rule applies only to the traffic that has a destination IP address in these ranges. The specified IP addresses must have reserved external IP addresses in the scope of the parent network policy. To match all external IP addresses in the scope of the parent network policy, specify `0.0.0.0/0`. To match a specific external IP address, specify it using the `IpRange.external_address` property.
	DestinationIpRanges IpRangeResponseArrayOutput `pulumi:"destinationIpRanges"`
	// A list of destination ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all destination ports, specify `["0-65535"]`.
	DestinationPorts pulumi.StringArrayOutput `pulumi:"destinationPorts"`
	// Required. The user-provided identifier of the `ExternalAccessRule` to be created. This identifier must be unique among `ExternalAccessRule` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAccessRuleId pulumi.StringOutput `pulumi:"externalAccessRuleId"`
	// The IP protocol to which the external access rule applies. This value can be one of the following three protocol strings (not case-sensitive): `tcp`, `udp`, or `icmp`.
	IpProtocol pulumi.StringOutput `pulumi:"ipProtocol"`
	Location   pulumi.StringOutput `pulumi:"location"`
	// The resource name of this external access rule. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
	Name            pulumi.StringOutput `pulumi:"name"`
	NetworkPolicyId pulumi.StringOutput `pulumi:"networkPolicyId"`
	// External access rule priority, which determines the external access rule to use when multiple rules apply. If multiple rules have the same priority, their ordering is non-deterministic. If specific ordering is required, assign unique priorities to enforce such ordering. The external access rule priority is an integer from 100 to 4096, both inclusive. Lower integers indicate higher precedence. For example, a rule with priority `100` has higher precedence than a rule with priority `101`.
	Priority pulumi.IntOutput    `pulumi:"priority"`
	Project  pulumi.StringOutput `pulumi:"project"`
	// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// If source ranges are specified, the external access rule applies only to traffic that has a source IP address in these ranges. These ranges can either be expressed in the CIDR format or as an IP address. As only inbound rules are supported, `ExternalAddress` resources cannot be the source IP addresses of an external access rule. To match all source addresses, specify `0.0.0.0/0`.
	SourceIpRanges IpRangeResponseArrayOutput `pulumi:"sourceIpRanges"`
	// A list of source ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all source ports, specify `["0-65535"]`.
	SourcePorts pulumi.StringArrayOutput `pulumi:"sourcePorts"`
	// The state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last update time of this resource.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewExternalAccessRule registers a new resource with the given unique name, arguments, and options.
func NewExternalAccessRule(ctx *pulumi.Context,
	name string, args *ExternalAccessRuleArgs, opts ...pulumi.ResourceOption) (*ExternalAccessRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalAccessRuleId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalAccessRuleId'")
	}
	if args.NetworkPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkPolicyId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"externalAccessRuleId",
		"location",
		"networkPolicyId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalAccessRule
	err := ctx.RegisterResource("google-native:vmwareengine/v1:ExternalAccessRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalAccessRule gets an existing ExternalAccessRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalAccessRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalAccessRuleState, opts ...pulumi.ResourceOption) (*ExternalAccessRule, error) {
	var resource ExternalAccessRule
	err := ctx.ReadResource("google-native:vmwareengine/v1:ExternalAccessRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalAccessRule resources.
type externalAccessRuleState struct {
}

type ExternalAccessRuleState struct {
}

func (ExternalAccessRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAccessRuleState)(nil)).Elem()
}

type externalAccessRuleArgs struct {
	// The action that the external access rule performs.
	Action *ExternalAccessRuleAction `pulumi:"action"`
	// User-provided description for this external access rule.
	Description *string `pulumi:"description"`
	// If destination ranges are specified, the external access rule applies only to the traffic that has a destination IP address in these ranges. The specified IP addresses must have reserved external IP addresses in the scope of the parent network policy. To match all external IP addresses in the scope of the parent network policy, specify `0.0.0.0/0`. To match a specific external IP address, specify it using the `IpRange.external_address` property.
	DestinationIpRanges []IpRange `pulumi:"destinationIpRanges"`
	// A list of destination ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all destination ports, specify `["0-65535"]`.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Required. The user-provided identifier of the `ExternalAccessRule` to be created. This identifier must be unique among `ExternalAccessRule` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAccessRuleId string `pulumi:"externalAccessRuleId"`
	// The IP protocol to which the external access rule applies. This value can be one of the following three protocol strings (not case-sensitive): `tcp`, `udp`, or `icmp`.
	IpProtocol      *string `pulumi:"ipProtocol"`
	Location        *string `pulumi:"location"`
	NetworkPolicyId string  `pulumi:"networkPolicyId"`
	// External access rule priority, which determines the external access rule to use when multiple rules apply. If multiple rules have the same priority, their ordering is non-deterministic. If specific ordering is required, assign unique priorities to enforce such ordering. The external access rule priority is an integer from 100 to 4096, both inclusive. Lower integers indicate higher precedence. For example, a rule with priority `100` has higher precedence than a rule with priority `101`.
	Priority *int    `pulumi:"priority"`
	Project  *string `pulumi:"project"`
	// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// If source ranges are specified, the external access rule applies only to traffic that has a source IP address in these ranges. These ranges can either be expressed in the CIDR format or as an IP address. As only inbound rules are supported, `ExternalAddress` resources cannot be the source IP addresses of an external access rule. To match all source addresses, specify `0.0.0.0/0`.
	SourceIpRanges []IpRange `pulumi:"sourceIpRanges"`
	// A list of source ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all source ports, specify `["0-65535"]`.
	SourcePorts []string `pulumi:"sourcePorts"`
}

// The set of arguments for constructing a ExternalAccessRule resource.
type ExternalAccessRuleArgs struct {
	// The action that the external access rule performs.
	Action ExternalAccessRuleActionPtrInput
	// User-provided description for this external access rule.
	Description pulumi.StringPtrInput
	// If destination ranges are specified, the external access rule applies only to the traffic that has a destination IP address in these ranges. The specified IP addresses must have reserved external IP addresses in the scope of the parent network policy. To match all external IP addresses in the scope of the parent network policy, specify `0.0.0.0/0`. To match a specific external IP address, specify it using the `IpRange.external_address` property.
	DestinationIpRanges IpRangeArrayInput
	// A list of destination ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all destination ports, specify `["0-65535"]`.
	DestinationPorts pulumi.StringArrayInput
	// Required. The user-provided identifier of the `ExternalAccessRule` to be created. This identifier must be unique among `ExternalAccessRule` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAccessRuleId pulumi.StringInput
	// The IP protocol to which the external access rule applies. This value can be one of the following three protocol strings (not case-sensitive): `tcp`, `udp`, or `icmp`.
	IpProtocol      pulumi.StringPtrInput
	Location        pulumi.StringPtrInput
	NetworkPolicyId pulumi.StringInput
	// External access rule priority, which determines the external access rule to use when multiple rules apply. If multiple rules have the same priority, their ordering is non-deterministic. If specific ordering is required, assign unique priorities to enforce such ordering. The external access rule priority is an integer from 100 to 4096, both inclusive. Lower integers indicate higher precedence. For example, a rule with priority `100` has higher precedence than a rule with priority `101`.
	Priority pulumi.IntPtrInput
	Project  pulumi.StringPtrInput
	// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// If source ranges are specified, the external access rule applies only to traffic that has a source IP address in these ranges. These ranges can either be expressed in the CIDR format or as an IP address. As only inbound rules are supported, `ExternalAddress` resources cannot be the source IP addresses of an external access rule. To match all source addresses, specify `0.0.0.0/0`.
	SourceIpRanges IpRangeArrayInput
	// A list of source ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all source ports, specify `["0-65535"]`.
	SourcePorts pulumi.StringArrayInput
}

func (ExternalAccessRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAccessRuleArgs)(nil)).Elem()
}

type ExternalAccessRuleInput interface {
	pulumi.Input

	ToExternalAccessRuleOutput() ExternalAccessRuleOutput
	ToExternalAccessRuleOutputWithContext(ctx context.Context) ExternalAccessRuleOutput
}

func (*ExternalAccessRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAccessRule)(nil)).Elem()
}

func (i *ExternalAccessRule) ToExternalAccessRuleOutput() ExternalAccessRuleOutput {
	return i.ToExternalAccessRuleOutputWithContext(context.Background())
}

func (i *ExternalAccessRule) ToExternalAccessRuleOutputWithContext(ctx context.Context) ExternalAccessRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalAccessRuleOutput)
}

func (i *ExternalAccessRule) ToOutput(ctx context.Context) pulumix.Output[*ExternalAccessRule] {
	return pulumix.Output[*ExternalAccessRule]{
		OutputState: i.ToExternalAccessRuleOutputWithContext(ctx).OutputState,
	}
}

type ExternalAccessRuleOutput struct{ *pulumi.OutputState }

func (ExternalAccessRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAccessRule)(nil)).Elem()
}

func (o ExternalAccessRuleOutput) ToExternalAccessRuleOutput() ExternalAccessRuleOutput {
	return o
}

func (o ExternalAccessRuleOutput) ToExternalAccessRuleOutputWithContext(ctx context.Context) ExternalAccessRuleOutput {
	return o
}

func (o ExternalAccessRuleOutput) ToOutput(ctx context.Context) pulumix.Output[*ExternalAccessRule] {
	return pulumix.Output[*ExternalAccessRule]{
		OutputState: o.OutputState,
	}
}

// The action that the external access rule performs.
func (o ExternalAccessRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Creation time of this resource.
func (o ExternalAccessRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-provided description for this external access rule.
func (o ExternalAccessRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// If destination ranges are specified, the external access rule applies only to the traffic that has a destination IP address in these ranges. The specified IP addresses must have reserved external IP addresses in the scope of the parent network policy. To match all external IP addresses in the scope of the parent network policy, specify `0.0.0.0/0`. To match a specific external IP address, specify it using the `IpRange.external_address` property.
func (o ExternalAccessRuleOutput) DestinationIpRanges() IpRangeResponseArrayOutput {
	return o.ApplyT(func(v *ExternalAccessRule) IpRangeResponseArrayOutput { return v.DestinationIpRanges }).(IpRangeResponseArrayOutput)
}

// A list of destination ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all destination ports, specify `["0-65535"]`.
func (o ExternalAccessRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringArrayOutput { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Required. The user-provided identifier of the `ExternalAccessRule` to be created. This identifier must be unique among `ExternalAccessRule` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
func (o ExternalAccessRuleOutput) ExternalAccessRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.ExternalAccessRuleId }).(pulumi.StringOutput)
}

// The IP protocol to which the external access rule applies. This value can be one of the following three protocol strings (not case-sensitive): `tcp`, `udp`, or `icmp`.
func (o ExternalAccessRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.IpProtocol }).(pulumi.StringOutput)
}

func (o ExternalAccessRuleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of this external access rule. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
func (o ExternalAccessRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExternalAccessRuleOutput) NetworkPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.NetworkPolicyId }).(pulumi.StringOutput)
}

// External access rule priority, which determines the external access rule to use when multiple rules apply. If multiple rules have the same priority, their ordering is non-deterministic. If specific ordering is required, assign unique priorities to enforce such ordering. The external access rule priority is an integer from 100 to 4096, both inclusive. Lower integers indicate higher precedence. For example, a rule with priority `100` has higher precedence than a rule with priority `101`.
func (o ExternalAccessRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

func (o ExternalAccessRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ExternalAccessRuleOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// If source ranges are specified, the external access rule applies only to traffic that has a source IP address in these ranges. These ranges can either be expressed in the CIDR format or as an IP address. As only inbound rules are supported, `ExternalAddress` resources cannot be the source IP addresses of an external access rule. To match all source addresses, specify `0.0.0.0/0`.
func (o ExternalAccessRuleOutput) SourceIpRanges() IpRangeResponseArrayOutput {
	return o.ApplyT(func(v *ExternalAccessRule) IpRangeResponseArrayOutput { return v.SourceIpRanges }).(IpRangeResponseArrayOutput)
}

// A list of source ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all source ports, specify `["0-65535"]`.
func (o ExternalAccessRuleOutput) SourcePorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringArrayOutput { return v.SourcePorts }).(pulumi.StringArrayOutput)
}

// The state of the resource.
func (o ExternalAccessRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o ExternalAccessRuleOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last update time of this resource.
func (o ExternalAccessRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAccessRule) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalAccessRuleInput)(nil)).Elem(), &ExternalAccessRule{})
	pulumi.RegisterOutputType(ExternalAccessRuleOutput{})
}
