// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new `ExternalAddress` resource in a given private cloud. The network policy that corresponds to the private cloud must have the external IP address network service enabled (`NetworkPolicy.external_ip`).
// Auto-naming is currently not supported for this resource.
type ExternalAddress struct {
	pulumi.CustomResourceState

	// Creation time of this resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-provided description for this resource.
	Description pulumi.StringOutput `pulumi:"description"`
	// Required. The user-provided identifier of the `ExternalAddress` to be created. This identifier must be unique among `ExternalAddress` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAddressId pulumi.StringOutput `pulumi:"externalAddressId"`
	// The external IP address of a workload VM.
	ExternalIp pulumi.StringOutput `pulumi:"externalIp"`
	// The internal IP address of a workload VM.
	InternalIp pulumi.StringOutput `pulumi:"internalIp"`
	Location   pulumi.StringOutput `pulumi:"location"`
	// The resource name of this external IP address. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-address`
	Name           pulumi.StringOutput `pulumi:"name"`
	PrivateCloudId pulumi.StringOutput `pulumi:"privateCloudId"`
	Project        pulumi.StringOutput `pulumi:"project"`
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// The state of the resource.
	State pulumi.StringOutput `pulumi:"state"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last update time of this resource.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewExternalAddress registers a new resource with the given unique name, arguments, and options.
func NewExternalAddress(ctx *pulumi.Context,
	name string, args *ExternalAddressArgs, opts ...pulumi.ResourceOption) (*ExternalAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalAddressId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalAddressId'")
	}
	if args.PrivateCloudId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateCloudId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"externalAddressId",
		"location",
		"privateCloudId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalAddress
	err := ctx.RegisterResource("google-native:vmwareengine/v1:ExternalAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalAddress gets an existing ExternalAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalAddressState, opts ...pulumi.ResourceOption) (*ExternalAddress, error) {
	var resource ExternalAddress
	err := ctx.ReadResource("google-native:vmwareengine/v1:ExternalAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalAddress resources.
type externalAddressState struct {
}

type ExternalAddressState struct {
}

func (ExternalAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAddressState)(nil)).Elem()
}

type externalAddressArgs struct {
	// User-provided description for this resource.
	Description *string `pulumi:"description"`
	// Required. The user-provided identifier of the `ExternalAddress` to be created. This identifier must be unique among `ExternalAddress` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAddressId string `pulumi:"externalAddressId"`
	// The internal IP address of a workload VM.
	InternalIp     *string `pulumi:"internalIp"`
	Location       *string `pulumi:"location"`
	PrivateCloudId string  `pulumi:"privateCloudId"`
	Project        *string `pulumi:"project"`
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
}

// The set of arguments for constructing a ExternalAddress resource.
type ExternalAddressArgs struct {
	// User-provided description for this resource.
	Description pulumi.StringPtrInput
	// Required. The user-provided identifier of the `ExternalAddress` to be created. This identifier must be unique among `ExternalAddress` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	ExternalAddressId pulumi.StringInput
	// The internal IP address of a workload VM.
	InternalIp     pulumi.StringPtrInput
	Location       pulumi.StringPtrInput
	PrivateCloudId pulumi.StringInput
	Project        pulumi.StringPtrInput
	// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
}

func (ExternalAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalAddressArgs)(nil)).Elem()
}

type ExternalAddressInput interface {
	pulumi.Input

	ToExternalAddressOutput() ExternalAddressOutput
	ToExternalAddressOutputWithContext(ctx context.Context) ExternalAddressOutput
}

func (*ExternalAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAddress)(nil)).Elem()
}

func (i *ExternalAddress) ToExternalAddressOutput() ExternalAddressOutput {
	return i.ToExternalAddressOutputWithContext(context.Background())
}

func (i *ExternalAddress) ToExternalAddressOutputWithContext(ctx context.Context) ExternalAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalAddressOutput)
}

type ExternalAddressOutput struct{ *pulumi.OutputState }

func (ExternalAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalAddress)(nil)).Elem()
}

func (o ExternalAddressOutput) ToExternalAddressOutput() ExternalAddressOutput {
	return o
}

func (o ExternalAddressOutput) ToExternalAddressOutputWithContext(ctx context.Context) ExternalAddressOutput {
	return o
}

// Creation time of this resource.
func (o ExternalAddressOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-provided description for this resource.
func (o ExternalAddressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Required. The user-provided identifier of the `ExternalAddress` to be created. This identifier must be unique among `ExternalAddress` resources within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
func (o ExternalAddressOutput) ExternalAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.ExternalAddressId }).(pulumi.StringOutput)
}

// The external IP address of a workload VM.
func (o ExternalAddressOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.ExternalIp }).(pulumi.StringOutput)
}

// The internal IP address of a workload VM.
func (o ExternalAddressOutput) InternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.InternalIp }).(pulumi.StringOutput)
}

func (o ExternalAddressOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of this external IP address. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-address`
func (o ExternalAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ExternalAddressOutput) PrivateCloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.PrivateCloudId }).(pulumi.StringOutput)
}

func (o ExternalAddressOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o ExternalAddressOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// The state of the resource.
func (o ExternalAddressOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o ExternalAddressOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last update time of this resource.
func (o ExternalAddressOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalAddress) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalAddressInput)(nil)).Elem(), &ExternalAddress{})
	pulumi.RegisterOutputType(ExternalAddressOutput{})
}
