// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new `PrivateCloud` resource in a given project and location. Private clouds of type `STANDARD` and `TIME_LIMITED` are zonal resources, `STRETCHED` private clouds are regional. Creating a private cloud also creates a [management cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components) for that private cloud.
// Auto-naming is currently not supported for this resource.
type PrivateCloud struct {
	pulumi.CustomResourceState

	// Creation time of this resource.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Time when the resource was scheduled for deletion.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// User-provided description for this private cloud.
	Description pulumi.StringOutput `pulumi:"description"`
	// Time when the resource will be irreversibly deleted.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// HCX appliance.
	Hcx      HcxResponseOutput   `pulumi:"hcx"`
	Location pulumi.StringOutput `pulumi:"location"`
	// Input only. The management cluster for this private cloud. This field is required during creation of the private cloud to provide details for the default cluster. The following fields can't be changed after private cloud creation: `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
	ManagementCluster ManagementClusterResponseOutput `pulumi:"managementCluster"`
	// The resource name of this private cloud. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration of the private cloud.
	NetworkConfig NetworkConfigResponseOutput `pulumi:"networkConfig"`
	// NSX appliance.
	Nsx NsxResponseOutput `pulumi:"nsx"`
	// Required. The user-provided identifier of the private cloud to be created. This identifier must be unique among each `PrivateCloud` within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	PrivateCloudId pulumi.StringOutput `pulumi:"privateCloudId"`
	Project        pulumi.StringOutput `pulumi:"project"`
	// Optional. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// State of the resource. New values may be added to this enum when appropriate.
	State pulumi.StringOutput `pulumi:"state"`
	// Optional. Type of the private cloud. Defaults to STANDARD.
	Type pulumi.StringOutput `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last update time of this resource.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Vcenter appliance.
	Vcenter VcenterResponseOutput `pulumi:"vcenter"`
}

// NewPrivateCloud registers a new resource with the given unique name, arguments, and options.
func NewPrivateCloud(ctx *pulumi.Context,
	name string, args *PrivateCloudArgs, opts ...pulumi.ResourceOption) (*PrivateCloud, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementCluster == nil {
		return nil, errors.New("invalid value for required argument 'ManagementCluster'")
	}
	if args.NetworkConfig == nil {
		return nil, errors.New("invalid value for required argument 'NetworkConfig'")
	}
	if args.PrivateCloudId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateCloudId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"privateCloudId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateCloud
	err := ctx.RegisterResource("google-native:vmwareengine/v1:PrivateCloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateCloud gets an existing PrivateCloud resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateCloud(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateCloudState, opts ...pulumi.ResourceOption) (*PrivateCloud, error) {
	var resource PrivateCloud
	err := ctx.ReadResource("google-native:vmwareengine/v1:PrivateCloud", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateCloud resources.
type privateCloudState struct {
}

type PrivateCloudState struct {
}

func (PrivateCloudState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateCloudState)(nil)).Elem()
}

type privateCloudArgs struct {
	// User-provided description for this private cloud.
	Description *string `pulumi:"description"`
	Location    *string `pulumi:"location"`
	// Input only. The management cluster for this private cloud. This field is required during creation of the private cloud to provide details for the default cluster. The following fields can't be changed after private cloud creation: `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
	ManagementCluster ManagementCluster `pulumi:"managementCluster"`
	// Network configuration of the private cloud.
	NetworkConfig NetworkConfig `pulumi:"networkConfig"`
	// Required. The user-provided identifier of the private cloud to be created. This identifier must be unique among each `PrivateCloud` within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	PrivateCloudId string  `pulumi:"privateCloudId"`
	Project        *string `pulumi:"project"`
	// Optional. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId *string `pulumi:"requestId"`
	// Optional. Type of the private cloud. Defaults to STANDARD.
	Type *PrivateCloudType `pulumi:"type"`
}

// The set of arguments for constructing a PrivateCloud resource.
type PrivateCloudArgs struct {
	// User-provided description for this private cloud.
	Description pulumi.StringPtrInput
	Location    pulumi.StringPtrInput
	// Input only. The management cluster for this private cloud. This field is required during creation of the private cloud to provide details for the default cluster. The following fields can't be changed after private cloud creation: `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
	ManagementCluster ManagementClusterInput
	// Network configuration of the private cloud.
	NetworkConfig NetworkConfigInput
	// Required. The user-provided identifier of the private cloud to be created. This identifier must be unique among each `PrivateCloud` within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
	PrivateCloudId pulumi.StringInput
	Project        pulumi.StringPtrInput
	// Optional. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
	RequestId pulumi.StringPtrInput
	// Optional. Type of the private cloud. Defaults to STANDARD.
	Type PrivateCloudTypePtrInput
}

func (PrivateCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateCloudArgs)(nil)).Elem()
}

type PrivateCloudInput interface {
	pulumi.Input

	ToPrivateCloudOutput() PrivateCloudOutput
	ToPrivateCloudOutputWithContext(ctx context.Context) PrivateCloudOutput
}

func (*PrivateCloud) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloud)(nil)).Elem()
}

func (i *PrivateCloud) ToPrivateCloudOutput() PrivateCloudOutput {
	return i.ToPrivateCloudOutputWithContext(context.Background())
}

func (i *PrivateCloud) ToPrivateCloudOutputWithContext(ctx context.Context) PrivateCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateCloudOutput)
}

type PrivateCloudOutput struct{ *pulumi.OutputState }

func (PrivateCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateCloud)(nil)).Elem()
}

func (o PrivateCloudOutput) ToPrivateCloudOutput() PrivateCloudOutput {
	return o
}

func (o PrivateCloudOutput) ToPrivateCloudOutputWithContext(ctx context.Context) PrivateCloudOutput {
	return o
}

// Creation time of this resource.
func (o PrivateCloudOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Time when the resource was scheduled for deletion.
func (o PrivateCloudOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// User-provided description for this private cloud.
func (o PrivateCloudOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Time when the resource will be irreversibly deleted.
func (o PrivateCloudOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// HCX appliance.
func (o PrivateCloudOutput) Hcx() HcxResponseOutput {
	return o.ApplyT(func(v *PrivateCloud) HcxResponseOutput { return v.Hcx }).(HcxResponseOutput)
}

func (o PrivateCloudOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Input only. The management cluster for this private cloud. This field is required during creation of the private cloud to provide details for the default cluster. The following fields can't be changed after private cloud creation: `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
func (o PrivateCloudOutput) ManagementCluster() ManagementClusterResponseOutput {
	return o.ApplyT(func(v *PrivateCloud) ManagementClusterResponseOutput { return v.ManagementCluster }).(ManagementClusterResponseOutput)
}

// The resource name of this private cloud. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
func (o PrivateCloudOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration of the private cloud.
func (o PrivateCloudOutput) NetworkConfig() NetworkConfigResponseOutput {
	return o.ApplyT(func(v *PrivateCloud) NetworkConfigResponseOutput { return v.NetworkConfig }).(NetworkConfigResponseOutput)
}

// NSX appliance.
func (o PrivateCloudOutput) Nsx() NsxResponseOutput {
	return o.ApplyT(func(v *PrivateCloud) NsxResponseOutput { return v.Nsx }).(NsxResponseOutput)
}

// Required. The user-provided identifier of the private cloud to be created. This identifier must be unique among each `PrivateCloud` within the parent and becomes the final token in the name URI. The identifier must meet the following requirements: * Only contains 1-63 alphanumeric characters and hyphens * Begins with an alphabetical character * Ends with a non-hyphen character * Not formatted as a UUID * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
func (o PrivateCloudOutput) PrivateCloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.PrivateCloudId }).(pulumi.StringOutput)
}

func (o PrivateCloudOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
func (o PrivateCloudOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringPtrOutput { return v.RequestId }).(pulumi.StringPtrOutput)
}

// State of the resource. New values may be added to this enum when appropriate.
func (o PrivateCloudOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Optional. Type of the private cloud. Defaults to STANDARD.
func (o PrivateCloudOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o PrivateCloudOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last update time of this resource.
func (o PrivateCloudOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateCloud) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Vcenter appliance.
func (o PrivateCloudOutput) Vcenter() VcenterResponseOutput {
	return o.ApplyT(func(v *PrivateCloud) VcenterResponseOutput { return v.Vcenter }).(VcenterResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateCloudInput)(nil)).Elem(), &PrivateCloud{})
	pulumi.RegisterOutputType(PrivateCloudOutput{})
}
