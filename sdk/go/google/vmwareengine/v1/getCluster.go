// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a `Cluster` resource by its resource name.
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("google-native:vmwareengine/v1:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	ClusterId      string  `pulumi:"clusterId"`
	Location       string  `pulumi:"location"`
	PrivateCloudId string  `pulumi:"privateCloudId"`
	Project        *string `pulumi:"project"`
}

type LookupClusterResult struct {
	// Creation time of this resource.
	CreateTime string `pulumi:"createTime"`
	// True if the cluster is a management cluster; false otherwise. There can only be one management cluster in a private cloud and it has to be the first one.
	Management bool `pulumi:"management"`
	// The resource name of this cluster. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
	Name string `pulumi:"name"`
	// The map of cluster node types in this cluster, where the key is canonical identifier of the node type (corresponds to the `NodeType`).
	NodeTypeConfigs NodeTypeConfigResponse `pulumi:"nodeTypeConfigs"`
	// State of the resource.
	State string `pulumi:"state"`
	// Optional. Configuration of a stretched cluster. Required for clusters that belong to a STRETCHED private cloud.
	StretchedClusterConfig StretchedClusterConfigResponse `pulumi:"stretchedClusterConfig"`
	// System-generated unique identifier for the resource.
	Uid string `pulumi:"uid"`
	// Last update time of this resource.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			var s LookupClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	ClusterId      pulumi.StringInput    `pulumi:"clusterId"`
	Location       pulumi.StringInput    `pulumi:"location"`
	PrivateCloudId pulumi.StringInput    `pulumi:"privateCloudId"`
	Project        pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

// Creation time of this resource.
func (o LookupClusterResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// True if the cluster is a management cluster; false otherwise. There can only be one management cluster in a private cloud and it has to be the first one.
func (o LookupClusterResultOutput) Management() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupClusterResult) bool { return v.Management }).(pulumi.BoolOutput)
}

// The resource name of this cluster. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
func (o LookupClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// The map of cluster node types in this cluster, where the key is canonical identifier of the node type (corresponds to the `NodeType`).
func (o LookupClusterResultOutput) NodeTypeConfigs() NodeTypeConfigResponseOutput {
	return o.ApplyT(func(v LookupClusterResult) NodeTypeConfigResponse { return v.NodeTypeConfigs }).(NodeTypeConfigResponseOutput)
}

// State of the resource.
func (o LookupClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// Optional. Configuration of a stretched cluster. Required for clusters that belong to a STRETCHED private cloud.
func (o LookupClusterResultOutput) StretchedClusterConfig() StretchedClusterConfigResponseOutput {
	return o.ApplyT(func(v LookupClusterResult) StretchedClusterConfigResponse { return v.StretchedClusterConfig }).(StretchedClusterConfigResponseOutput)
}

// System-generated unique identifier for the resource.
func (o LookupClusterResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Uid }).(pulumi.StringOutput)
}

// Last update time of this resource.
func (o LookupClusterResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
