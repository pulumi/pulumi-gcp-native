// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta4

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The unit that 'retained_backups' represents.
type BackupRetentionSettingsRetentionUnit pulumi.String

const (
	// Backup retention unit is unspecified, will be treated as COUNT.
	BackupRetentionSettingsRetentionUnitRetentionUnitUnspecified = BackupRetentionSettingsRetentionUnit("RETENTION_UNIT_UNSPECIFIED")
	// Retention will be by count, eg. "retain the most recent 7 backups".
	BackupRetentionSettingsRetentionUnitCount = BackupRetentionSettingsRetentionUnit("COUNT")
)

func (BackupRetentionSettingsRetentionUnit) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BackupRetentionSettingsRetentionUnit) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRetentionSettingsRetentionUnit) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRetentionSettingsRetentionUnit) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
type BackupRunBackupKind pulumi.String

const (
	// This is an unknown BackupKind.
	BackupRunBackupKindSqlBackupKindUnspecified = BackupRunBackupKind("SQL_BACKUP_KIND_UNSPECIFIED")
	// The snapshot based backups
	BackupRunBackupKindSnapshot = BackupRunBackupKind("SNAPSHOT")
	// Physical backups
	BackupRunBackupKindPhysical = BackupRunBackupKind("PHYSICAL")
)

func (BackupRunBackupKind) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BackupRunBackupKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunBackupKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunBackupKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRunBackupKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The status of this run.
type BackupRunStatus pulumi.String

const (
	// The status of the run is unknown.
	BackupRunStatusSqlBackupRunStatusUnspecified = BackupRunStatus("SQL_BACKUP_RUN_STATUS_UNSPECIFIED")
	// The backup operation was enqueued.
	BackupRunStatusEnqueued = BackupRunStatus("ENQUEUED")
	// The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.
	BackupRunStatusOverdue = BackupRunStatus("OVERDUE")
	// The backup is in progress.
	BackupRunStatusRunning = BackupRunStatus("RUNNING")
	// The backup failed.
	BackupRunStatusFailed = BackupRunStatus("FAILED")
	// The backup was successful.
	BackupRunStatusSuccessful = BackupRunStatus("SUCCESSFUL")
	// The backup was skipped (without problems) for a given backup window. Example: Instance was idle.
	BackupRunStatusSkipped = BackupRunStatus("SKIPPED")
	// The backup is about to be deleted.
	BackupRunStatusDeletionPending = BackupRunStatus("DELETION_PENDING")
	// The backup deletion failed.
	BackupRunStatusDeletionFailed = BackupRunStatus("DELETION_FAILED")
	// The backup has been deleted.
	BackupRunStatusDeleted = BackupRunStatus("DELETED")
)

func (BackupRunStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BackupRunStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRunStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
type BackupRunType pulumi.String

const (
	// This is an unknown BackupRun type.
	BackupRunTypeSqlBackupRunTypeUnspecified = BackupRunType("SQL_BACKUP_RUN_TYPE_UNSPECIFIED")
	// The backup schedule automatically triggers a backup.
	BackupRunTypeAutomated = BackupRunType("AUTOMATED")
	// The user manually triggers a backup.
	BackupRunTypeOnDemand = BackupRunType("ON_DEMAND")
)

func (BackupRunType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e BackupRunType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupRunType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupRunType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

//  *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.
type InstanceBackendType pulumi.String

const (
	// This is an unknown backend type for instance.
	InstanceBackendTypeSqlBackendTypeUnspecified = InstanceBackendType("SQL_BACKEND_TYPE_UNSPECIFIED")
	// V1 speckle instance.
	InstanceBackendTypeFirstGen = InstanceBackendType("FIRST_GEN")
	// V2 speckle instance.
	InstanceBackendTypeSecondGen = InstanceBackendType("SECOND_GEN")
	// On premises instance.
	InstanceBackendTypeExternal = InstanceBackendType("EXTERNAL")
)

func (InstanceBackendType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceBackendType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceBackendType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceBackendType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceBackendType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11*, *POSTGRES_12*, or *POSTGRES_13* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.
type InstanceDatabaseVersion pulumi.String

const (
	// This is an unknown database version.
	InstanceDatabaseVersionSqlDatabaseVersionUnspecified = InstanceDatabaseVersion("SQL_DATABASE_VERSION_UNSPECIFIED")
	// The database version is MySQL 5.1.
	InstanceDatabaseVersionMysql51 = InstanceDatabaseVersion("MYSQL_5_1")
	// The database version is MySQL 5.5.
	InstanceDatabaseVersionMysql55 = InstanceDatabaseVersion("MYSQL_5_5")
	// The database version is MySQL 5.6.
	InstanceDatabaseVersionMysql56 = InstanceDatabaseVersion("MYSQL_5_6")
	// The database version is MySQL 5.7.
	InstanceDatabaseVersionMysql57 = InstanceDatabaseVersion("MYSQL_5_7")
	// The database version is PostgreSQL 9.6.
	InstanceDatabaseVersionPostgres96 = InstanceDatabaseVersion("POSTGRES_9_6")
	// The database version is PostgreSQL 11.
	InstanceDatabaseVersionPostgres11 = InstanceDatabaseVersion("POSTGRES_11")
	// The database version is SQL Server 2017 Standard.
	InstanceDatabaseVersionSqlserver2017Standard = InstanceDatabaseVersion("SQLSERVER_2017_STANDARD")
	// The database version is SQL Server 2017 Enterprise.
	InstanceDatabaseVersionSqlserver2017Enterprise = InstanceDatabaseVersion("SQLSERVER_2017_ENTERPRISE")
	// The database version is SQL Server 2017 Express.
	InstanceDatabaseVersionSqlserver2017Express = InstanceDatabaseVersion("SQLSERVER_2017_EXPRESS")
	// The database version is SQL Server 2017 Web.
	InstanceDatabaseVersionSqlserver2017Web = InstanceDatabaseVersion("SQLSERVER_2017_WEB")
	// The database version is PostgreSQL 10.
	InstanceDatabaseVersionPostgres10 = InstanceDatabaseVersion("POSTGRES_10")
	// The database version is PostgreSQL 12.
	InstanceDatabaseVersionPostgres12 = InstanceDatabaseVersion("POSTGRES_12")
	// The database version is MySQL 8.
	InstanceDatabaseVersionMysql80 = InstanceDatabaseVersion("MYSQL_8_0")
	// The database version is PostgreSQL 13.
	InstanceDatabaseVersionPostgres13 = InstanceDatabaseVersion("POSTGRES_13")
)

func (InstanceDatabaseVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceDatabaseVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceDatabaseVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceDatabaseVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceDatabaseVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.
type InstanceInstanceType pulumi.String

const (
	// This is an unknown Cloud SQL instance type.
	InstanceInstanceTypeSqlInstanceTypeUnspecified = InstanceInstanceType("SQL_INSTANCE_TYPE_UNSPECIFIED")
	// A regular Cloud SQL instance.
	InstanceInstanceTypeCloudSqlInstance = InstanceInstanceType("CLOUD_SQL_INSTANCE")
	// An instance running on the customer's premises that is not managed by Cloud SQL.
	InstanceInstanceTypeOnPremisesInstance = InstanceInstanceType("ON_PREMISES_INSTANCE")
	// A Cloud SQL instance acting as a read-replica.
	InstanceInstanceTypeReadReplicaInstance = InstanceInstanceType("READ_REPLICA_INSTANCE")
)

func (InstanceInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance is running, or has been stopped by owner. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed.
type InstanceStateEnum pulumi.String

const (
	// The state of the instance is unknown.
	InstanceStateEnumSqlInstanceStateUnspecified = InstanceStateEnum("SQL_INSTANCE_STATE_UNSPECIFIED")
	// The instance is running, or has been stopped by owner.
	InstanceStateEnumRunnable = InstanceStateEnum("RUNNABLE")
	// The instance is not available, for example due to problems with billing.
	InstanceStateEnumSuspended = InstanceStateEnum("SUSPENDED")
	// The instance is being deleted.
	InstanceStateEnumPendingDelete = InstanceStateEnum("PENDING_DELETE")
	// The instance is being created.
	InstanceStateEnumPendingCreate = InstanceStateEnum("PENDING_CREATE")
	// The instance is down for maintenance.
	InstanceStateEnumMaintenance = InstanceStateEnum("MAINTENANCE")
	// The creation of the instance failed or a fatal error occurred during maintenance.
	InstanceStateEnumFailed = InstanceStateEnum("FAILED")
)

func (InstanceStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceSuspensionReasonItem pulumi.String

const (
	// This is an unknown suspension reason.
	InstanceSuspensionReasonItemSqlSuspensionReasonUnspecified = InstanceSuspensionReasonItem("SQL_SUSPENSION_REASON_UNSPECIFIED")
	// The instance is suspended due to billing issues (for example:, GCP account issue)
	InstanceSuspensionReasonItemBillingIssue = InstanceSuspensionReasonItem("BILLING_ISSUE")
	// The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).
	InstanceSuspensionReasonItemLegalIssue = InstanceSuspensionReasonItem("LEGAL_ISSUE")
	// The instance is causing operational issues (for example:, causing the database to crash).
	InstanceSuspensionReasonItemOperationalIssue = InstanceSuspensionReasonItem("OPERATIONAL_ISSUE")
	// The KMS key used by the instance is either revoked or denied access to
	InstanceSuspensionReasonItemKmsKeyIssue = InstanceSuspensionReasonItem("KMS_KEY_ISSUE")
)

func (InstanceSuspensionReasonItem) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceSuspensionReasonItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSuspensionReasonItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceSuspensionReasonItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceSuspensionReasonItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// InstanceSuspensionReasonItemArrayInput is an input type that accepts InstanceSuspensionReasonItemArray and InstanceSuspensionReasonItemArrayOutput values.
// You can construct a concrete instance of `InstanceSuspensionReasonItemArrayInput` via:
//
//          InstanceSuspensionReasonItemArray{ InstanceSuspensionReasonItemArgs{...} }
type InstanceSuspensionReasonItemArrayInput interface {
	pulumi.Input

	ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput
	ToInstanceSuspensionReasonItemArrayOutputWithContext(context.Context) InstanceSuspensionReasonItemArrayOutput
}

type InstanceSuspensionReasonItemArray []InstanceSuspensionReasonItem

func (InstanceSuspensionReasonItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSuspensionReasonItem)(nil)).Elem()
}

func (i InstanceSuspensionReasonItemArray) ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput {
	return i.ToInstanceSuspensionReasonItemArrayOutputWithContext(context.Background())
}

func (i InstanceSuspensionReasonItemArray) ToInstanceSuspensionReasonItemArrayOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSuspensionReasonItemArrayOutput)
}

type InstanceSuspensionReasonItemArrayOutput struct{ *pulumi.OutputState }

func (InstanceSuspensionReasonItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSuspensionReasonItem)(nil)).Elem()
}

func (o InstanceSuspensionReasonItemArrayOutput) ToInstanceSuspensionReasonItemArrayOutput() InstanceSuspensionReasonItemArrayOutput {
	return o
}

func (o InstanceSuspensionReasonItemArrayOutput) ToInstanceSuspensionReasonItemArrayOutputWithContext(ctx context.Context) InstanceSuspensionReasonItemArrayOutput {
	return o
}

func (o InstanceSuspensionReasonItemArrayOutput) Index(i pulumi.IntInput) pulumi.StringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) pulumi.StringOutput {
		return vs[0].([]InstanceSuspensionReasonItem)[vs[1].(int)].ToStringOutput()
	}).(pulumi.StringOutput)
}

// The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.
type IpMappingType pulumi.String

const (
	// This is an unknown IP address type.
	IpMappingTypeSqlIpAddressTypeUnspecified = IpMappingType("SQL_IP_ADDRESS_TYPE_UNSPECIFIED")
	// IP address the customer is supposed to connect to. Usually this is the load balancer's IP address
	IpMappingTypePrimary = IpMappingType("PRIMARY")
	// Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.
	IpMappingTypeOutgoing = IpMappingType("OUTGOING")
	// Private IP used when using private IPs and network peering.
	IpMappingTypePrivate = IpMappingType("PRIVATE")
	// V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
	IpMappingTypeMigrated1stGen = IpMappingType("MIGRATED_1ST_GEN")
)

func (IpMappingType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e IpMappingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpMappingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpMappingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpMappingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more.
type MaintenanceWindowUpdateTrack pulumi.String

const (
	// This is an unknown maintenance timing preference.
	MaintenanceWindowUpdateTrackSqlUpdateTrackUnspecified = MaintenanceWindowUpdateTrack("SQL_UPDATE_TRACK_UNSPECIFIED")
	// For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.
	MaintenanceWindowUpdateTrackCanary = MaintenanceWindowUpdateTrack("canary")
	// For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable).
	MaintenanceWindowUpdateTrackStable = MaintenanceWindowUpdateTrack("stable")
)

func (MaintenanceWindowUpdateTrack) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e MaintenanceWindowUpdateTrack) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowUpdateTrack) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MaintenanceWindowUpdateTrack) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MaintenanceWindowUpdateTrack) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives.
type SettingsActivationPolicy pulumi.String

const (
	// Unknown activation plan.
	SettingsActivationPolicySqlActivationPolicyUnspecified = SettingsActivationPolicy("SQL_ACTIVATION_POLICY_UNSPECIFIED")
	// The instance is always up and running.
	SettingsActivationPolicyAlways = SettingsActivationPolicy("ALWAYS")
	// The instance never starts.
	SettingsActivationPolicyNever = SettingsActivationPolicy("NEVER")
	// The instance starts upon receiving requests.
	SettingsActivationPolicyOnDemand = SettingsActivationPolicy("ON_DEMAND")
)

func (SettingsActivationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SettingsActivationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsActivationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsActivationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsActivationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.
type SettingsAvailabilityType pulumi.String

const (
	// This is an unknown Availability type.
	SettingsAvailabilityTypeSqlAvailabilityTypeUnspecified = SettingsAvailabilityType("SQL_AVAILABILITY_TYPE_UNSPECIFIED")
	// Zonal available instance.
	SettingsAvailabilityTypeZonal = SettingsAvailabilityType("ZONAL")
	// Regional available instance.
	SettingsAvailabilityTypeRegional = SettingsAvailabilityType("REGIONAL")
)

func (SettingsAvailabilityType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SettingsAvailabilityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsAvailabilityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsAvailabilityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsAvailabilityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.
type SettingsDataDiskType pulumi.String

const (
	// This is an unknown data disk type.
	SettingsDataDiskTypeSqlDataDiskTypeUnspecified = SettingsDataDiskType("SQL_DATA_DISK_TYPE_UNSPECIFIED")
	// An SSD data disk.
	SettingsDataDiskTypePdSsd = SettingsDataDiskType("PD_SSD")
	// An HDD data disk.
	SettingsDataDiskTypePdHdd = SettingsDataDiskType("PD_HDD")
	// This field is deprecated and will be removed from a future version of the API.
	SettingsDataDiskTypeObsoleteLocalSsd = SettingsDataDiskType("OBSOLETE_LOCAL_SSD")
)

func (SettingsDataDiskType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SettingsDataDiskType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsDataDiskType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsDataDiskType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsDataDiskType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances.
type SettingsPricingPlan pulumi.String

const (
	// This is an unknown pricing plan for this instance.
	SettingsPricingPlanSqlPricingPlanUnspecified = SettingsPricingPlan("SQL_PRICING_PLAN_UNSPECIFIED")
	// The instance is billed at a monthly flat rate.
	SettingsPricingPlanPackage = SettingsPricingPlan("PACKAGE")
	// The instance is billed per usage.
	SettingsPricingPlanPerUse = SettingsPricingPlan("PER_USE")
)

func (SettingsPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SettingsPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SettingsPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SettingsPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// This field represents the state generated by the proactive database wellness job for OutOfDisk issues. Writers: -- the proactive database wellness job for OOD. Readers: -- the Pantheon frontend -- the proactive database wellness job
type SqlOutOfDiskReportSqlOutOfDiskState pulumi.String

const (
	// Unspecified state
	SqlOutOfDiskReportSqlOutOfDiskStateSqlOutOfDiskStateUnspecified = SqlOutOfDiskReportSqlOutOfDiskState("SQL_OUT_OF_DISK_STATE_UNSPECIFIED")
	// The instance has plenty space on data disk
	SqlOutOfDiskReportSqlOutOfDiskStateNormal = SqlOutOfDiskReportSqlOutOfDiskState("NORMAL")
	// Data disk is almost used up. It is shutdown to prevent data corruption.
	SqlOutOfDiskReportSqlOutOfDiskStateSoftShutdown = SqlOutOfDiskReportSqlOutOfDiskState("SOFT_SHUTDOWN")
)

func (SqlOutOfDiskReportSqlOutOfDiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SqlOutOfDiskReportSqlOutOfDiskState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
