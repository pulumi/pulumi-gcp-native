// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieves a resource containing information about a backup run.
func LookupBackupRun(ctx *pulumi.Context, args *LookupBackupRunArgs, opts ...pulumi.InvokeOption) (*LookupBackupRunResult, error) {
	var rv LookupBackupRunResult
	err := ctx.Invoke("google-native:sqladmin/v1:getBackupRun", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBackupRunArgs struct {
	Id       string  `pulumi:"id"`
	Instance string  `pulumi:"instance"`
	Project  *string `pulumi:"project"`
}

type LookupBackupRunResult struct {
	// Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
	BackupKind string `pulumi:"backupKind"`
	// The description of this run, only applicable to on-demand backups.
	Description string `pulumi:"description"`
	// Encryption configuration specific to a backup.
	DiskEncryptionConfiguration DiskEncryptionConfigurationResponse `pulumi:"diskEncryptionConfiguration"`
	// Encryption status specific to a backup.
	DiskEncryptionStatus DiskEncryptionStatusResponse `pulumi:"diskEncryptionStatus"`
	// The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
	EndTime string `pulumi:"endTime"`
	// The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
	EnqueuedTime string `pulumi:"enqueuedTime"`
	// Information about why the backup operation failed. This is only present if the run has the FAILED status.
	Error OperationErrorResponse `pulumi:"error"`
	// Name of the database instance.
	Instance string `pulumi:"instance"`
	// This is always `sql#backupRun`.
	Kind string `pulumi:"kind"`
	// Location of the backups.
	Location string `pulumi:"location"`
	// The URI of this resource.
	SelfLink string `pulumi:"selfLink"`
	// The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
	StartTime string `pulumi:"startTime"`
	// The status of this run.
	Status string `pulumi:"status"`
	// The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
	Type string `pulumi:"type"`
	// The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
	WindowStartTime string `pulumi:"windowStartTime"`
}

func LookupBackupRunOutput(ctx *pulumi.Context, args LookupBackupRunOutputArgs, opts ...pulumi.InvokeOption) LookupBackupRunResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupRunResult, error) {
			args := v.(LookupBackupRunArgs)
			r, err := LookupBackupRun(ctx, &args, opts...)
			return *r, err
		}).(LookupBackupRunResultOutput)
}

type LookupBackupRunOutputArgs struct {
	Id       pulumi.StringInput    `pulumi:"id"`
	Instance pulumi.StringInput    `pulumi:"instance"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBackupRunOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupRunArgs)(nil)).Elem()
}

type LookupBackupRunResultOutput struct{ *pulumi.OutputState }

func (LookupBackupRunResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupRunResult)(nil)).Elem()
}

func (o LookupBackupRunResultOutput) ToLookupBackupRunResultOutput() LookupBackupRunResultOutput {
	return o
}

func (o LookupBackupRunResultOutput) ToLookupBackupRunResultOutputWithContext(ctx context.Context) LookupBackupRunResultOutput {
	return o
}

// Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
func (o LookupBackupRunResultOutput) BackupKind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.BackupKind }).(pulumi.StringOutput)
}

// The description of this run, only applicable to on-demand backups.
func (o LookupBackupRunResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Description }).(pulumi.StringOutput)
}

// Encryption configuration specific to a backup.
func (o LookupBackupRunResultOutput) DiskEncryptionConfiguration() DiskEncryptionConfigurationResponseOutput {
	return o.ApplyT(func(v LookupBackupRunResult) DiskEncryptionConfigurationResponse {
		return v.DiskEncryptionConfiguration
	}).(DiskEncryptionConfigurationResponseOutput)
}

// Encryption status specific to a backup.
func (o LookupBackupRunResultOutput) DiskEncryptionStatus() DiskEncryptionStatusResponseOutput {
	return o.ApplyT(func(v LookupBackupRunResult) DiskEncryptionStatusResponse { return v.DiskEncryptionStatus }).(DiskEncryptionStatusResponseOutput)
}

// The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
func (o LookupBackupRunResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
func (o LookupBackupRunResultOutput) EnqueuedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.EnqueuedTime }).(pulumi.StringOutput)
}

// Information about why the backup operation failed. This is only present if the run has the FAILED status.
func (o LookupBackupRunResultOutput) Error() OperationErrorResponseOutput {
	return o.ApplyT(func(v LookupBackupRunResult) OperationErrorResponse { return v.Error }).(OperationErrorResponseOutput)
}

// Name of the database instance.
func (o LookupBackupRunResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Instance }).(pulumi.StringOutput)
}

// This is always `sql#backupRun`.
func (o LookupBackupRunResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Location of the backups.
func (o LookupBackupRunResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Location }).(pulumi.StringOutput)
}

// The URI of this resource.
func (o LookupBackupRunResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
func (o LookupBackupRunResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.StartTime }).(pulumi.StringOutput)
}

// The status of this run.
func (o LookupBackupRunResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Status }).(pulumi.StringOutput)
}

// The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
func (o LookupBackupRunResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.Type }).(pulumi.StringOutput)
}

// The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
func (o LookupBackupRunResultOutput) WindowStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupRunResult) string { return v.WindowStartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupRunResultOutput{})
}
