// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Configures various aspects of Dataform code compilation.
type CodeCompilationConfig struct {
	// Optional. The default schema (BigQuery dataset ID) for assertions.
	AssertionSchema *string `pulumi:"assertionSchema"`
	// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
	DatabaseSuffix *string `pulumi:"databaseSuffix"`
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase *string `pulumi:"defaultDatabase"`
	// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
	DefaultLocation *string `pulumi:"defaultLocation"`
	// Optional. The default schema (BigQuery dataset ID).
	DefaultSchema *string `pulumi:"defaultSchema"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix *string `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix *string `pulumi:"tablePrefix"`
	// Optional. User-defined variables that are made available to project code during compilation.
	Vars map[string]string `pulumi:"vars"`
}

// CodeCompilationConfigInput is an input type that accepts CodeCompilationConfigArgs and CodeCompilationConfigOutput values.
// You can construct a concrete instance of `CodeCompilationConfigInput` via:
//
//	CodeCompilationConfigArgs{...}
type CodeCompilationConfigInput interface {
	pulumi.Input

	ToCodeCompilationConfigOutput() CodeCompilationConfigOutput
	ToCodeCompilationConfigOutputWithContext(context.Context) CodeCompilationConfigOutput
}

// Configures various aspects of Dataform code compilation.
type CodeCompilationConfigArgs struct {
	// Optional. The default schema (BigQuery dataset ID) for assertions.
	AssertionSchema pulumi.StringPtrInput `pulumi:"assertionSchema"`
	// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
	DatabaseSuffix pulumi.StringPtrInput `pulumi:"databaseSuffix"`
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase pulumi.StringPtrInput `pulumi:"defaultDatabase"`
	// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
	DefaultLocation pulumi.StringPtrInput `pulumi:"defaultLocation"`
	// Optional. The default schema (BigQuery dataset ID).
	DefaultSchema pulumi.StringPtrInput `pulumi:"defaultSchema"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix pulumi.StringPtrInput `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix pulumi.StringPtrInput `pulumi:"tablePrefix"`
	// Optional. User-defined variables that are made available to project code during compilation.
	Vars pulumi.StringMapInput `pulumi:"vars"`
}

func (CodeCompilationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeCompilationConfig)(nil)).Elem()
}

func (i CodeCompilationConfigArgs) ToCodeCompilationConfigOutput() CodeCompilationConfigOutput {
	return i.ToCodeCompilationConfigOutputWithContext(context.Background())
}

func (i CodeCompilationConfigArgs) ToCodeCompilationConfigOutputWithContext(ctx context.Context) CodeCompilationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeCompilationConfigOutput)
}

func (i CodeCompilationConfigArgs) ToCodeCompilationConfigPtrOutput() CodeCompilationConfigPtrOutput {
	return i.ToCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (i CodeCompilationConfigArgs) ToCodeCompilationConfigPtrOutputWithContext(ctx context.Context) CodeCompilationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeCompilationConfigOutput).ToCodeCompilationConfigPtrOutputWithContext(ctx)
}

// CodeCompilationConfigPtrInput is an input type that accepts CodeCompilationConfigArgs, CodeCompilationConfigPtr and CodeCompilationConfigPtrOutput values.
// You can construct a concrete instance of `CodeCompilationConfigPtrInput` via:
//
//	        CodeCompilationConfigArgs{...}
//
//	or:
//
//	        nil
type CodeCompilationConfigPtrInput interface {
	pulumi.Input

	ToCodeCompilationConfigPtrOutput() CodeCompilationConfigPtrOutput
	ToCodeCompilationConfigPtrOutputWithContext(context.Context) CodeCompilationConfigPtrOutput
}

type codeCompilationConfigPtrType CodeCompilationConfigArgs

func CodeCompilationConfigPtr(v *CodeCompilationConfigArgs) CodeCompilationConfigPtrInput {
	return (*codeCompilationConfigPtrType)(v)
}

func (*codeCompilationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeCompilationConfig)(nil)).Elem()
}

func (i *codeCompilationConfigPtrType) ToCodeCompilationConfigPtrOutput() CodeCompilationConfigPtrOutput {
	return i.ToCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (i *codeCompilationConfigPtrType) ToCodeCompilationConfigPtrOutputWithContext(ctx context.Context) CodeCompilationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CodeCompilationConfigPtrOutput)
}

// Configures various aspects of Dataform code compilation.
type CodeCompilationConfigOutput struct{ *pulumi.OutputState }

func (CodeCompilationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeCompilationConfig)(nil)).Elem()
}

func (o CodeCompilationConfigOutput) ToCodeCompilationConfigOutput() CodeCompilationConfigOutput {
	return o
}

func (o CodeCompilationConfigOutput) ToCodeCompilationConfigOutputWithContext(ctx context.Context) CodeCompilationConfigOutput {
	return o
}

func (o CodeCompilationConfigOutput) ToCodeCompilationConfigPtrOutput() CodeCompilationConfigPtrOutput {
	return o.ToCodeCompilationConfigPtrOutputWithContext(context.Background())
}

func (o CodeCompilationConfigOutput) ToCodeCompilationConfigPtrOutputWithContext(ctx context.Context) CodeCompilationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CodeCompilationConfig) *CodeCompilationConfig {
		return &v
	}).(CodeCompilationConfigPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID) for assertions.
func (o CodeCompilationConfigOutput) AssertionSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.AssertionSchema }).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
func (o CodeCompilationConfigOutput) DatabaseSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.DatabaseSuffix }).(pulumi.StringPtrOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o CodeCompilationConfigOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.DefaultDatabase }).(pulumi.StringPtrOutput)
}

// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
func (o CodeCompilationConfigOutput) DefaultLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.DefaultLocation }).(pulumi.StringPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID).
func (o CodeCompilationConfigOutput) DefaultSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.DefaultSchema }).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o CodeCompilationConfigOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.SchemaSuffix }).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o CodeCompilationConfigOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CodeCompilationConfig) *string { return v.TablePrefix }).(pulumi.StringPtrOutput)
}

// Optional. User-defined variables that are made available to project code during compilation.
func (o CodeCompilationConfigOutput) Vars() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeCompilationConfig) map[string]string { return v.Vars }).(pulumi.StringMapOutput)
}

type CodeCompilationConfigPtrOutput struct{ *pulumi.OutputState }

func (CodeCompilationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CodeCompilationConfig)(nil)).Elem()
}

func (o CodeCompilationConfigPtrOutput) ToCodeCompilationConfigPtrOutput() CodeCompilationConfigPtrOutput {
	return o
}

func (o CodeCompilationConfigPtrOutput) ToCodeCompilationConfigPtrOutputWithContext(ctx context.Context) CodeCompilationConfigPtrOutput {
	return o
}

func (o CodeCompilationConfigPtrOutput) Elem() CodeCompilationConfigOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) CodeCompilationConfig {
		if v != nil {
			return *v
		}
		var ret CodeCompilationConfig
		return ret
	}).(CodeCompilationConfigOutput)
}

// Optional. The default schema (BigQuery dataset ID) for assertions.
func (o CodeCompilationConfigPtrOutput) AssertionSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AssertionSchema
	}).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
func (o CodeCompilationConfigPtrOutput) DatabaseSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseSuffix
	}).(pulumi.StringPtrOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o CodeCompilationConfigPtrOutput) DefaultDatabase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatabase
	}).(pulumi.StringPtrOutput)
}

// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
func (o CodeCompilationConfigPtrOutput) DefaultLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultLocation
	}).(pulumi.StringPtrOutput)
}

// Optional. The default schema (BigQuery dataset ID).
func (o CodeCompilationConfigPtrOutput) DefaultSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultSchema
	}).(pulumi.StringPtrOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o CodeCompilationConfigPtrOutput) SchemaSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.SchemaSuffix
	}).(pulumi.StringPtrOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o CodeCompilationConfigPtrOutput) TablePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) *string {
		if v == nil {
			return nil
		}
		return v.TablePrefix
	}).(pulumi.StringPtrOutput)
}

// Optional. User-defined variables that are made available to project code during compilation.
func (o CodeCompilationConfigPtrOutput) Vars() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CodeCompilationConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Vars
	}).(pulumi.StringMapOutput)
}

// Configures various aspects of Dataform code compilation.
type CodeCompilationConfigResponse struct {
	// Optional. The default schema (BigQuery dataset ID) for assertions.
	AssertionSchema string `pulumi:"assertionSchema"`
	// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
	DatabaseSuffix string `pulumi:"databaseSuffix"`
	// Optional. The default database (Google Cloud project ID).
	DefaultDatabase string `pulumi:"defaultDatabase"`
	// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
	DefaultLocation string `pulumi:"defaultLocation"`
	// Optional. The default schema (BigQuery dataset ID).
	DefaultSchema string `pulumi:"defaultSchema"`
	// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
	SchemaSuffix string `pulumi:"schemaSuffix"`
	// Optional. The prefix that should be prepended to all table names.
	TablePrefix string `pulumi:"tablePrefix"`
	// Optional. User-defined variables that are made available to project code during compilation.
	Vars map[string]string `pulumi:"vars"`
}

// Configures various aspects of Dataform code compilation.
type CodeCompilationConfigResponseOutput struct{ *pulumi.OutputState }

func (CodeCompilationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CodeCompilationConfigResponse)(nil)).Elem()
}

func (o CodeCompilationConfigResponseOutput) ToCodeCompilationConfigResponseOutput() CodeCompilationConfigResponseOutput {
	return o
}

func (o CodeCompilationConfigResponseOutput) ToCodeCompilationConfigResponseOutputWithContext(ctx context.Context) CodeCompilationConfigResponseOutput {
	return o
}

// Optional. The default schema (BigQuery dataset ID) for assertions.
func (o CodeCompilationConfigResponseOutput) AssertionSchema() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.AssertionSchema }).(pulumi.StringOutput)
}

// Optional. The suffix that should be appended to all database (Google Cloud project ID) names.
func (o CodeCompilationConfigResponseOutput) DatabaseSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.DatabaseSuffix }).(pulumi.StringOutput)
}

// Optional. The default database (Google Cloud project ID).
func (o CodeCompilationConfigResponseOutput) DefaultDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.DefaultDatabase }).(pulumi.StringOutput)
}

// Optional. The default BigQuery location to use. Defaults to "US". See the BigQuery docs for a full list of locations: https://cloud.google.com/bigquery/docs/locations.
func (o CodeCompilationConfigResponseOutput) DefaultLocation() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.DefaultLocation }).(pulumi.StringOutput)
}

// Optional. The default schema (BigQuery dataset ID).
func (o CodeCompilationConfigResponseOutput) DefaultSchema() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.DefaultSchema }).(pulumi.StringOutput)
}

// Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.
func (o CodeCompilationConfigResponseOutput) SchemaSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.SchemaSuffix }).(pulumi.StringOutput)
}

// Optional. The prefix that should be prepended to all table names.
func (o CodeCompilationConfigResponseOutput) TablePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) string { return v.TablePrefix }).(pulumi.StringOutput)
}

// Optional. User-defined variables that are made available to project code during compilation.
func (o CodeCompilationConfigResponseOutput) Vars() pulumi.StringMapOutput {
	return o.ApplyT(func(v CodeCompilationConfigResponse) map[string]string { return v.Vars }).(pulumi.StringMapOutput)
}

// An error encountered when attempting to compile a Dataform project.
type CompilationErrorResponse struct {
	// The identifier of the action where this error occurred, if available.
	ActionTarget TargetResponse `pulumi:"actionTarget"`
	// The error's top level message.
	Message string `pulumi:"message"`
	// The path of the file where this error occurred, if available, relative to the project root.
	Path string `pulumi:"path"`
	// The error's full stack trace.
	Stack string `pulumi:"stack"`
}

// An error encountered when attempting to compile a Dataform project.
type CompilationErrorResponseOutput struct{ *pulumi.OutputState }

func (CompilationErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompilationErrorResponse)(nil)).Elem()
}

func (o CompilationErrorResponseOutput) ToCompilationErrorResponseOutput() CompilationErrorResponseOutput {
	return o
}

func (o CompilationErrorResponseOutput) ToCompilationErrorResponseOutputWithContext(ctx context.Context) CompilationErrorResponseOutput {
	return o
}

// The identifier of the action where this error occurred, if available.
func (o CompilationErrorResponseOutput) ActionTarget() TargetResponseOutput {
	return o.ApplyT(func(v CompilationErrorResponse) TargetResponse { return v.ActionTarget }).(TargetResponseOutput)
}

// The error's top level message.
func (o CompilationErrorResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v CompilationErrorResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The path of the file where this error occurred, if available, relative to the project root.
func (o CompilationErrorResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CompilationErrorResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The error's full stack trace.
func (o CompilationErrorResponseOutput) Stack() pulumi.StringOutput {
	return o.ApplyT(func(v CompilationErrorResponse) string { return v.Stack }).(pulumi.StringOutput)
}

type CompilationErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CompilationErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompilationErrorResponse)(nil)).Elem()
}

func (o CompilationErrorResponseArrayOutput) ToCompilationErrorResponseArrayOutput() CompilationErrorResponseArrayOutput {
	return o
}

func (o CompilationErrorResponseArrayOutput) ToCompilationErrorResponseArrayOutputWithContext(ctx context.Context) CompilationErrorResponseArrayOutput {
	return o
}

func (o CompilationErrorResponseArrayOutput) Index(i pulumi.IntInput) CompilationErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompilationErrorResponse {
		return vs[0].([]CompilationErrorResponse)[vs[1].(int)]
	}).(CompilationErrorResponseOutput)
}

// Controls Git remote configuration for a repository.
type GitRemoteSettings struct {
	// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
	AuthenticationTokenSecretVersion string `pulumi:"authenticationTokenSecretVersion"`
	// The Git remote's default branch name.
	DefaultBranch string `pulumi:"defaultBranch"`
	// The Git remote's URL.
	Url string `pulumi:"url"`
}

// GitRemoteSettingsInput is an input type that accepts GitRemoteSettingsArgs and GitRemoteSettingsOutput values.
// You can construct a concrete instance of `GitRemoteSettingsInput` via:
//
//	GitRemoteSettingsArgs{...}
type GitRemoteSettingsInput interface {
	pulumi.Input

	ToGitRemoteSettingsOutput() GitRemoteSettingsOutput
	ToGitRemoteSettingsOutputWithContext(context.Context) GitRemoteSettingsOutput
}

// Controls Git remote configuration for a repository.
type GitRemoteSettingsArgs struct {
	// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
	AuthenticationTokenSecretVersion pulumi.StringInput `pulumi:"authenticationTokenSecretVersion"`
	// The Git remote's default branch name.
	DefaultBranch pulumi.StringInput `pulumi:"defaultBranch"`
	// The Git remote's URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GitRemoteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRemoteSettings)(nil)).Elem()
}

func (i GitRemoteSettingsArgs) ToGitRemoteSettingsOutput() GitRemoteSettingsOutput {
	return i.ToGitRemoteSettingsOutputWithContext(context.Background())
}

func (i GitRemoteSettingsArgs) ToGitRemoteSettingsOutputWithContext(ctx context.Context) GitRemoteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRemoteSettingsOutput)
}

func (i GitRemoteSettingsArgs) ToGitRemoteSettingsPtrOutput() GitRemoteSettingsPtrOutput {
	return i.ToGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (i GitRemoteSettingsArgs) ToGitRemoteSettingsPtrOutputWithContext(ctx context.Context) GitRemoteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRemoteSettingsOutput).ToGitRemoteSettingsPtrOutputWithContext(ctx)
}

// GitRemoteSettingsPtrInput is an input type that accepts GitRemoteSettingsArgs, GitRemoteSettingsPtr and GitRemoteSettingsPtrOutput values.
// You can construct a concrete instance of `GitRemoteSettingsPtrInput` via:
//
//	        GitRemoteSettingsArgs{...}
//
//	or:
//
//	        nil
type GitRemoteSettingsPtrInput interface {
	pulumi.Input

	ToGitRemoteSettingsPtrOutput() GitRemoteSettingsPtrOutput
	ToGitRemoteSettingsPtrOutputWithContext(context.Context) GitRemoteSettingsPtrOutput
}

type gitRemoteSettingsPtrType GitRemoteSettingsArgs

func GitRemoteSettingsPtr(v *GitRemoteSettingsArgs) GitRemoteSettingsPtrInput {
	return (*gitRemoteSettingsPtrType)(v)
}

func (*gitRemoteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRemoteSettings)(nil)).Elem()
}

func (i *gitRemoteSettingsPtrType) ToGitRemoteSettingsPtrOutput() GitRemoteSettingsPtrOutput {
	return i.ToGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (i *gitRemoteSettingsPtrType) ToGitRemoteSettingsPtrOutputWithContext(ctx context.Context) GitRemoteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitRemoteSettingsPtrOutput)
}

// Controls Git remote configuration for a repository.
type GitRemoteSettingsOutput struct{ *pulumi.OutputState }

func (GitRemoteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRemoteSettings)(nil)).Elem()
}

func (o GitRemoteSettingsOutput) ToGitRemoteSettingsOutput() GitRemoteSettingsOutput {
	return o
}

func (o GitRemoteSettingsOutput) ToGitRemoteSettingsOutputWithContext(ctx context.Context) GitRemoteSettingsOutput {
	return o
}

func (o GitRemoteSettingsOutput) ToGitRemoteSettingsPtrOutput() GitRemoteSettingsPtrOutput {
	return o.ToGitRemoteSettingsPtrOutputWithContext(context.Background())
}

func (o GitRemoteSettingsOutput) ToGitRemoteSettingsPtrOutputWithContext(ctx context.Context) GitRemoteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitRemoteSettings) *GitRemoteSettings {
		return &v
	}).(GitRemoteSettingsPtrOutput)
}

// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
func (o GitRemoteSettingsOutput) AuthenticationTokenSecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettings) string { return v.AuthenticationTokenSecretVersion }).(pulumi.StringOutput)
}

// The Git remote's default branch name.
func (o GitRemoteSettingsOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettings) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// The Git remote's URL.
func (o GitRemoteSettingsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettings) string { return v.Url }).(pulumi.StringOutput)
}

type GitRemoteSettingsPtrOutput struct{ *pulumi.OutputState }

func (GitRemoteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRemoteSettings)(nil)).Elem()
}

func (o GitRemoteSettingsPtrOutput) ToGitRemoteSettingsPtrOutput() GitRemoteSettingsPtrOutput {
	return o
}

func (o GitRemoteSettingsPtrOutput) ToGitRemoteSettingsPtrOutputWithContext(ctx context.Context) GitRemoteSettingsPtrOutput {
	return o
}

func (o GitRemoteSettingsPtrOutput) Elem() GitRemoteSettingsOutput {
	return o.ApplyT(func(v *GitRemoteSettings) GitRemoteSettings {
		if v != nil {
			return *v
		}
		var ret GitRemoteSettings
		return ret
	}).(GitRemoteSettingsOutput)
}

// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
func (o GitRemoteSettingsPtrOutput) AuthenticationTokenSecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationTokenSecretVersion
	}).(pulumi.StringPtrOutput)
}

// The Git remote's default branch name.
func (o GitRemoteSettingsPtrOutput) DefaultBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultBranch
	}).(pulumi.StringPtrOutput)
}

// The Git remote's URL.
func (o GitRemoteSettingsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitRemoteSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// Controls Git remote configuration for a repository.
type GitRemoteSettingsResponse struct {
	// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
	AuthenticationTokenSecretVersion string `pulumi:"authenticationTokenSecretVersion"`
	// The Git remote's default branch name.
	DefaultBranch string `pulumi:"defaultBranch"`
	// Indicates the status of the Git access token.
	TokenStatus string `pulumi:"tokenStatus"`
	// The Git remote's URL.
	Url string `pulumi:"url"`
}

// Controls Git remote configuration for a repository.
type GitRemoteSettingsResponseOutput struct{ *pulumi.OutputState }

func (GitRemoteSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRemoteSettingsResponse)(nil)).Elem()
}

func (o GitRemoteSettingsResponseOutput) ToGitRemoteSettingsResponseOutput() GitRemoteSettingsResponseOutput {
	return o
}

func (o GitRemoteSettingsResponseOutput) ToGitRemoteSettingsResponseOutputWithContext(ctx context.Context) GitRemoteSettingsResponseOutput {
	return o
}

// The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/*/secrets/*/versions/*`.
func (o GitRemoteSettingsResponseOutput) AuthenticationTokenSecretVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettingsResponse) string { return v.AuthenticationTokenSecretVersion }).(pulumi.StringOutput)
}

// The Git remote's default branch name.
func (o GitRemoteSettingsResponseOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettingsResponse) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// Indicates the status of the Git access token.
func (o GitRemoteSettingsResponseOutput) TokenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettingsResponse) string { return v.TokenStatus }).(pulumi.StringOutput)
}

// The Git remote's URL.
func (o GitRemoteSettingsResponseOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GitRemoteSettingsResponse) string { return v.Url }).(pulumi.StringOutput)
}

// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
type IntervalResponse struct {
	// Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
	EndTime string `pulumi:"endTime"`
	// Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
	StartTime string `pulumi:"startTime"`
}

// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
type IntervalResponseOutput struct{ *pulumi.OutputState }

func (IntervalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntervalResponse)(nil)).Elem()
}

func (o IntervalResponseOutput) ToIntervalResponseOutput() IntervalResponseOutput {
	return o
}

func (o IntervalResponseOutput) ToIntervalResponseOutputWithContext(ctx context.Context) IntervalResponseOutput {
	return o
}

// Optional. Exclusive end of the interval. If specified, a Timestamp matching this interval will have to be before the end.
func (o IntervalResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v IntervalResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// Optional. Inclusive start of the interval. If specified, a Timestamp matching this interval will have to be the same or after the start.
func (o IntervalResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v IntervalResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
type InvocationConfig struct {
	// Optional. When set to true, any incremental tables will be fully refreshed.
	FullyRefreshIncrementalTablesEnabled *bool `pulumi:"fullyRefreshIncrementalTablesEnabled"`
	// Optional. The set of tags to include.
	IncludedTags []string `pulumi:"includedTags"`
	// Optional. The set of action identifiers to include.
	IncludedTargets []Target `pulumi:"includedTargets"`
	// Optional. When set to true, transitive dependencies of included actions will be executed.
	TransitiveDependenciesIncluded *bool `pulumi:"transitiveDependenciesIncluded"`
	// Optional. When set to true, transitive dependents of included actions will be executed.
	TransitiveDependentsIncluded *bool `pulumi:"transitiveDependentsIncluded"`
}

// InvocationConfigInput is an input type that accepts InvocationConfigArgs and InvocationConfigOutput values.
// You can construct a concrete instance of `InvocationConfigInput` via:
//
//	InvocationConfigArgs{...}
type InvocationConfigInput interface {
	pulumi.Input

	ToInvocationConfigOutput() InvocationConfigOutput
	ToInvocationConfigOutputWithContext(context.Context) InvocationConfigOutput
}

// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
type InvocationConfigArgs struct {
	// Optional. When set to true, any incremental tables will be fully refreshed.
	FullyRefreshIncrementalTablesEnabled pulumi.BoolPtrInput `pulumi:"fullyRefreshIncrementalTablesEnabled"`
	// Optional. The set of tags to include.
	IncludedTags pulumi.StringArrayInput `pulumi:"includedTags"`
	// Optional. The set of action identifiers to include.
	IncludedTargets TargetArrayInput `pulumi:"includedTargets"`
	// Optional. When set to true, transitive dependencies of included actions will be executed.
	TransitiveDependenciesIncluded pulumi.BoolPtrInput `pulumi:"transitiveDependenciesIncluded"`
	// Optional. When set to true, transitive dependents of included actions will be executed.
	TransitiveDependentsIncluded pulumi.BoolPtrInput `pulumi:"transitiveDependentsIncluded"`
}

func (InvocationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationConfig)(nil)).Elem()
}

func (i InvocationConfigArgs) ToInvocationConfigOutput() InvocationConfigOutput {
	return i.ToInvocationConfigOutputWithContext(context.Background())
}

func (i InvocationConfigArgs) ToInvocationConfigOutputWithContext(ctx context.Context) InvocationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationConfigOutput)
}

func (i InvocationConfigArgs) ToInvocationConfigPtrOutput() InvocationConfigPtrOutput {
	return i.ToInvocationConfigPtrOutputWithContext(context.Background())
}

func (i InvocationConfigArgs) ToInvocationConfigPtrOutputWithContext(ctx context.Context) InvocationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationConfigOutput).ToInvocationConfigPtrOutputWithContext(ctx)
}

// InvocationConfigPtrInput is an input type that accepts InvocationConfigArgs, InvocationConfigPtr and InvocationConfigPtrOutput values.
// You can construct a concrete instance of `InvocationConfigPtrInput` via:
//
//	        InvocationConfigArgs{...}
//
//	or:
//
//	        nil
type InvocationConfigPtrInput interface {
	pulumi.Input

	ToInvocationConfigPtrOutput() InvocationConfigPtrOutput
	ToInvocationConfigPtrOutputWithContext(context.Context) InvocationConfigPtrOutput
}

type invocationConfigPtrType InvocationConfigArgs

func InvocationConfigPtr(v *InvocationConfigArgs) InvocationConfigPtrInput {
	return (*invocationConfigPtrType)(v)
}

func (*invocationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationConfig)(nil)).Elem()
}

func (i *invocationConfigPtrType) ToInvocationConfigPtrOutput() InvocationConfigPtrOutput {
	return i.ToInvocationConfigPtrOutputWithContext(context.Background())
}

func (i *invocationConfigPtrType) ToInvocationConfigPtrOutputWithContext(ctx context.Context) InvocationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationConfigPtrOutput)
}

// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
type InvocationConfigOutput struct{ *pulumi.OutputState }

func (InvocationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationConfig)(nil)).Elem()
}

func (o InvocationConfigOutput) ToInvocationConfigOutput() InvocationConfigOutput {
	return o
}

func (o InvocationConfigOutput) ToInvocationConfigOutputWithContext(ctx context.Context) InvocationConfigOutput {
	return o
}

func (o InvocationConfigOutput) ToInvocationConfigPtrOutput() InvocationConfigPtrOutput {
	return o.ToInvocationConfigPtrOutputWithContext(context.Background())
}

func (o InvocationConfigOutput) ToInvocationConfigPtrOutputWithContext(ctx context.Context) InvocationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvocationConfig) *InvocationConfig {
		return &v
	}).(InvocationConfigPtrOutput)
}

// Optional. When set to true, any incremental tables will be fully refreshed.
func (o InvocationConfigOutput) FullyRefreshIncrementalTablesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InvocationConfig) *bool { return v.FullyRefreshIncrementalTablesEnabled }).(pulumi.BoolPtrOutput)
}

// Optional. The set of tags to include.
func (o InvocationConfigOutput) IncludedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InvocationConfig) []string { return v.IncludedTags }).(pulumi.StringArrayOutput)
}

// Optional. The set of action identifiers to include.
func (o InvocationConfigOutput) IncludedTargets() TargetArrayOutput {
	return o.ApplyT(func(v InvocationConfig) []Target { return v.IncludedTargets }).(TargetArrayOutput)
}

// Optional. When set to true, transitive dependencies of included actions will be executed.
func (o InvocationConfigOutput) TransitiveDependenciesIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InvocationConfig) *bool { return v.TransitiveDependenciesIncluded }).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, transitive dependents of included actions will be executed.
func (o InvocationConfigOutput) TransitiveDependentsIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InvocationConfig) *bool { return v.TransitiveDependentsIncluded }).(pulumi.BoolPtrOutput)
}

type InvocationConfigPtrOutput struct{ *pulumi.OutputState }

func (InvocationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationConfig)(nil)).Elem()
}

func (o InvocationConfigPtrOutput) ToInvocationConfigPtrOutput() InvocationConfigPtrOutput {
	return o
}

func (o InvocationConfigPtrOutput) ToInvocationConfigPtrOutputWithContext(ctx context.Context) InvocationConfigPtrOutput {
	return o
}

func (o InvocationConfigPtrOutput) Elem() InvocationConfigOutput {
	return o.ApplyT(func(v *InvocationConfig) InvocationConfig {
		if v != nil {
			return *v
		}
		var ret InvocationConfig
		return ret
	}).(InvocationConfigOutput)
}

// Optional. When set to true, any incremental tables will be fully refreshed.
func (o InvocationConfigPtrOutput) FullyRefreshIncrementalTablesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FullyRefreshIncrementalTablesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optional. The set of tags to include.
func (o InvocationConfigPtrOutput) IncludedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InvocationConfig) []string {
		if v == nil {
			return nil
		}
		return v.IncludedTags
	}).(pulumi.StringArrayOutput)
}

// Optional. The set of action identifiers to include.
func (o InvocationConfigPtrOutput) IncludedTargets() TargetArrayOutput {
	return o.ApplyT(func(v *InvocationConfig) []Target {
		if v == nil {
			return nil
		}
		return v.IncludedTargets
	}).(TargetArrayOutput)
}

// Optional. When set to true, transitive dependencies of included actions will be executed.
func (o InvocationConfigPtrOutput) TransitiveDependenciesIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TransitiveDependenciesIncluded
	}).(pulumi.BoolPtrOutput)
}

// Optional. When set to true, transitive dependents of included actions will be executed.
func (o InvocationConfigPtrOutput) TransitiveDependentsIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationConfig) *bool {
		if v == nil {
			return nil
		}
		return v.TransitiveDependentsIncluded
	}).(pulumi.BoolPtrOutput)
}

// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
type InvocationConfigResponse struct {
	// Optional. When set to true, any incremental tables will be fully refreshed.
	FullyRefreshIncrementalTablesEnabled bool `pulumi:"fullyRefreshIncrementalTablesEnabled"`
	// Optional. The set of tags to include.
	IncludedTags []string `pulumi:"includedTags"`
	// Optional. The set of action identifiers to include.
	IncludedTargets []TargetResponse `pulumi:"includedTargets"`
	// Optional. When set to true, transitive dependencies of included actions will be executed.
	TransitiveDependenciesIncluded bool `pulumi:"transitiveDependenciesIncluded"`
	// Optional. When set to true, transitive dependents of included actions will be executed.
	TransitiveDependentsIncluded bool `pulumi:"transitiveDependentsIncluded"`
}

// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
type InvocationConfigResponseOutput struct{ *pulumi.OutputState }

func (InvocationConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationConfigResponse)(nil)).Elem()
}

func (o InvocationConfigResponseOutput) ToInvocationConfigResponseOutput() InvocationConfigResponseOutput {
	return o
}

func (o InvocationConfigResponseOutput) ToInvocationConfigResponseOutputWithContext(ctx context.Context) InvocationConfigResponseOutput {
	return o
}

// Optional. When set to true, any incremental tables will be fully refreshed.
func (o InvocationConfigResponseOutput) FullyRefreshIncrementalTablesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationConfigResponse) bool { return v.FullyRefreshIncrementalTablesEnabled }).(pulumi.BoolOutput)
}

// Optional. The set of tags to include.
func (o InvocationConfigResponseOutput) IncludedTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InvocationConfigResponse) []string { return v.IncludedTags }).(pulumi.StringArrayOutput)
}

// Optional. The set of action identifiers to include.
func (o InvocationConfigResponseOutput) IncludedTargets() TargetResponseArrayOutput {
	return o.ApplyT(func(v InvocationConfigResponse) []TargetResponse { return v.IncludedTargets }).(TargetResponseArrayOutput)
}

// Optional. When set to true, transitive dependencies of included actions will be executed.
func (o InvocationConfigResponseOutput) TransitiveDependenciesIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationConfigResponse) bool { return v.TransitiveDependenciesIncluded }).(pulumi.BoolOutput)
}

// Optional. When set to true, transitive dependents of included actions will be executed.
func (o InvocationConfigResponseOutput) TransitiveDependentsIncluded() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationConfigResponse) bool { return v.TransitiveDependentsIncluded }).(pulumi.BoolOutput)
}

// A record of an attempt to create a workflow invocation for this workflow config.
type ScheduledExecutionRecordResponse struct {
	// The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
	ErrorStatus StatusResponse `pulumi:"errorStatus"`
	// The timestamp of this execution attempt.
	ExecutionTime string `pulumi:"executionTime"`
	// The name of the created workflow invocation, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/workflowInvocations/*`.
	WorkflowInvocation string `pulumi:"workflowInvocation"`
}

// A record of an attempt to create a workflow invocation for this workflow config.
type ScheduledExecutionRecordResponseOutput struct{ *pulumi.OutputState }

func (ScheduledExecutionRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledExecutionRecordResponse)(nil)).Elem()
}

func (o ScheduledExecutionRecordResponseOutput) ToScheduledExecutionRecordResponseOutput() ScheduledExecutionRecordResponseOutput {
	return o
}

func (o ScheduledExecutionRecordResponseOutput) ToScheduledExecutionRecordResponseOutputWithContext(ctx context.Context) ScheduledExecutionRecordResponseOutput {
	return o
}

// The error status encountered upon this attempt to create the workflow invocation, if the attempt was unsuccessful.
func (o ScheduledExecutionRecordResponseOutput) ErrorStatus() StatusResponseOutput {
	return o.ApplyT(func(v ScheduledExecutionRecordResponse) StatusResponse { return v.ErrorStatus }).(StatusResponseOutput)
}

// The timestamp of this execution attempt.
func (o ScheduledExecutionRecordResponseOutput) ExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledExecutionRecordResponse) string { return v.ExecutionTime }).(pulumi.StringOutput)
}

// The name of the created workflow invocation, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/workflowInvocations/*`.
func (o ScheduledExecutionRecordResponseOutput) WorkflowInvocation() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledExecutionRecordResponse) string { return v.WorkflowInvocation }).(pulumi.StringOutput)
}

type ScheduledExecutionRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduledExecutionRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledExecutionRecordResponse)(nil)).Elem()
}

func (o ScheduledExecutionRecordResponseArrayOutput) ToScheduledExecutionRecordResponseArrayOutput() ScheduledExecutionRecordResponseArrayOutput {
	return o
}

func (o ScheduledExecutionRecordResponseArrayOutput) ToScheduledExecutionRecordResponseArrayOutputWithContext(ctx context.Context) ScheduledExecutionRecordResponseArrayOutput {
	return o
}

func (o ScheduledExecutionRecordResponseArrayOutput) Index(i pulumi.IntInput) ScheduledExecutionRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledExecutionRecordResponse {
		return vs[0].([]ScheduledExecutionRecordResponse)[vs[1].(int)]
	}).(ScheduledExecutionRecordResponseOutput)
}

// A record of an attempt to create a compilation result for this release config.
type ScheduledReleaseRecordResponse struct {
	// The name of the created compilation result, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
	CompilationResult string `pulumi:"compilationResult"`
	// The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
	ErrorStatus StatusResponse `pulumi:"errorStatus"`
	// The timestamp of this release attempt.
	ReleaseTime string `pulumi:"releaseTime"`
}

// A record of an attempt to create a compilation result for this release config.
type ScheduledReleaseRecordResponseOutput struct{ *pulumi.OutputState }

func (ScheduledReleaseRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledReleaseRecordResponse)(nil)).Elem()
}

func (o ScheduledReleaseRecordResponseOutput) ToScheduledReleaseRecordResponseOutput() ScheduledReleaseRecordResponseOutput {
	return o
}

func (o ScheduledReleaseRecordResponseOutput) ToScheduledReleaseRecordResponseOutputWithContext(ctx context.Context) ScheduledReleaseRecordResponseOutput {
	return o
}

// The name of the created compilation result, if one was successfully created. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
func (o ScheduledReleaseRecordResponseOutput) CompilationResult() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledReleaseRecordResponse) string { return v.CompilationResult }).(pulumi.StringOutput)
}

// The error status encountered upon this attempt to create the compilation result, if the attempt was unsuccessful.
func (o ScheduledReleaseRecordResponseOutput) ErrorStatus() StatusResponseOutput {
	return o.ApplyT(func(v ScheduledReleaseRecordResponse) StatusResponse { return v.ErrorStatus }).(StatusResponseOutput)
}

// The timestamp of this release attempt.
func (o ScheduledReleaseRecordResponseOutput) ReleaseTime() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledReleaseRecordResponse) string { return v.ReleaseTime }).(pulumi.StringOutput)
}

type ScheduledReleaseRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduledReleaseRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledReleaseRecordResponse)(nil)).Elem()
}

func (o ScheduledReleaseRecordResponseArrayOutput) ToScheduledReleaseRecordResponseArrayOutput() ScheduledReleaseRecordResponseArrayOutput {
	return o
}

func (o ScheduledReleaseRecordResponseArrayOutput) ToScheduledReleaseRecordResponseArrayOutputWithContext(ctx context.Context) ScheduledReleaseRecordResponseArrayOutput {
	return o
}

func (o ScheduledReleaseRecordResponseArrayOutput) Index(i pulumi.IntInput) ScheduledReleaseRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledReleaseRecordResponse {
		return vs[0].([]ScheduledReleaseRecordResponse)[vs[1].(int)]
	}).(ScheduledReleaseRecordResponseOutput)
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponse struct {
	// The status code, which should be an enum value of google.rpc.Code.
	Code int `pulumi:"code"`
	// A list of messages that carry the error details. There is a common set of message types for APIs to use.
	Details []map[string]string `pulumi:"details"`
	// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
	Message string `pulumi:"message"`
}

// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
type StatusResponseOutput struct{ *pulumi.OutputState }

func (StatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusResponse)(nil)).Elem()
}

func (o StatusResponseOutput) ToStatusResponseOutput() StatusResponseOutput {
	return o
}

func (o StatusResponseOutput) ToStatusResponseOutputWithContext(ctx context.Context) StatusResponseOutput {
	return o
}

// The status code, which should be an enum value of google.rpc.Code.
func (o StatusResponseOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v StatusResponse) int { return v.Code }).(pulumi.IntOutput)
}

// A list of messages that carry the error details. There is a common set of message types for APIs to use.
func (o StatusResponseOutput) Details() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v StatusResponse) []map[string]string { return v.Details }).(pulumi.StringMapArrayOutput)
}

// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
func (o StatusResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v StatusResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
type Target struct {
	// The action's database (Google Cloud project ID) .
	Database *string `pulumi:"database"`
	// The action's name, within `database` and `schema`.
	Name *string `pulumi:"name"`
	// The action's schema (BigQuery dataset ID), within `database`.
	Schema *string `pulumi:"schema"`
}

// TargetInput is an input type that accepts TargetArgs and TargetOutput values.
// You can construct a concrete instance of `TargetInput` via:
//
//	TargetArgs{...}
type TargetInput interface {
	pulumi.Input

	ToTargetOutput() TargetOutput
	ToTargetOutputWithContext(context.Context) TargetOutput
}

// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
type TargetArgs struct {
	// The action's database (Google Cloud project ID) .
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The action's name, within `database` and `schema`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The action's schema (BigQuery dataset ID), within `database`.
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Target)(nil)).Elem()
}

func (i TargetArgs) ToTargetOutput() TargetOutput {
	return i.ToTargetOutputWithContext(context.Background())
}

func (i TargetArgs) ToTargetOutputWithContext(ctx context.Context) TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetOutput)
}

// TargetArrayInput is an input type that accepts TargetArray and TargetArrayOutput values.
// You can construct a concrete instance of `TargetArrayInput` via:
//
//	TargetArray{ TargetArgs{...} }
type TargetArrayInput interface {
	pulumi.Input

	ToTargetArrayOutput() TargetArrayOutput
	ToTargetArrayOutputWithContext(context.Context) TargetArrayOutput
}

type TargetArray []TargetInput

func (TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Target)(nil)).Elem()
}

func (i TargetArray) ToTargetArrayOutput() TargetArrayOutput {
	return i.ToTargetArrayOutputWithContext(context.Background())
}

func (i TargetArray) ToTargetArrayOutputWithContext(ctx context.Context) TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetArrayOutput)
}

// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
type TargetOutput struct{ *pulumi.OutputState }

func (TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Target)(nil)).Elem()
}

func (o TargetOutput) ToTargetOutput() TargetOutput {
	return o
}

func (o TargetOutput) ToTargetOutputWithContext(ctx context.Context) TargetOutput {
	return o
}

// The action's database (Google Cloud project ID) .
func (o TargetOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Target) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The action's name, within `database` and `schema`.
func (o TargetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Target) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The action's schema (BigQuery dataset ID), within `database`.
func (o TargetOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Target) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type TargetArrayOutput struct{ *pulumi.OutputState }

func (TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Target)(nil)).Elem()
}

func (o TargetArrayOutput) ToTargetArrayOutput() TargetArrayOutput {
	return o
}

func (o TargetArrayOutput) ToTargetArrayOutputWithContext(ctx context.Context) TargetArrayOutput {
	return o
}

func (o TargetArrayOutput) Index(i pulumi.IntInput) TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Target {
		return vs[0].([]Target)[vs[1].(int)]
	}).(TargetOutput)
}

// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
type TargetResponse struct {
	// The action's database (Google Cloud project ID) .
	Database string `pulumi:"database"`
	// The action's name, within `database` and `schema`.
	Name string `pulumi:"name"`
	// The action's schema (BigQuery dataset ID), within `database`.
	Schema string `pulumi:"schema"`
}

// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
type TargetResponseOutput struct{ *pulumi.OutputState }

func (TargetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetResponse)(nil)).Elem()
}

func (o TargetResponseOutput) ToTargetResponseOutput() TargetResponseOutput {
	return o
}

func (o TargetResponseOutput) ToTargetResponseOutputWithContext(ctx context.Context) TargetResponseOutput {
	return o
}

// The action's database (Google Cloud project ID) .
func (o TargetResponseOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v TargetResponse) string { return v.Database }).(pulumi.StringOutput)
}

// The action's name, within `database` and `schema`.
func (o TargetResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TargetResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The action's schema (BigQuery dataset ID), within `database`.
func (o TargetResponseOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v TargetResponse) string { return v.Schema }).(pulumi.StringOutput)
}

type TargetResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetResponse)(nil)).Elem()
}

func (o TargetResponseArrayOutput) ToTargetResponseArrayOutput() TargetResponseArrayOutput {
	return o
}

func (o TargetResponseArrayOutput) ToTargetResponseArrayOutputWithContext(ctx context.Context) TargetResponseArrayOutput {
	return o
}

func (o TargetResponseArrayOutput) Index(i pulumi.IntInput) TargetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetResponse {
		return vs[0].([]TargetResponse)[vs[1].(int)]
	}).(TargetResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CodeCompilationConfigInput)(nil)).Elem(), CodeCompilationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CodeCompilationConfigPtrInput)(nil)).Elem(), CodeCompilationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitRemoteSettingsInput)(nil)).Elem(), GitRemoteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitRemoteSettingsPtrInput)(nil)).Elem(), GitRemoteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationConfigInput)(nil)).Elem(), InvocationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationConfigPtrInput)(nil)).Elem(), InvocationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetInput)(nil)).Elem(), TargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TargetArrayInput)(nil)).Elem(), TargetArray{})
	pulumi.RegisterOutputType(CodeCompilationConfigOutput{})
	pulumi.RegisterOutputType(CodeCompilationConfigPtrOutput{})
	pulumi.RegisterOutputType(CodeCompilationConfigResponseOutput{})
	pulumi.RegisterOutputType(CompilationErrorResponseOutput{})
	pulumi.RegisterOutputType(CompilationErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(GitRemoteSettingsOutput{})
	pulumi.RegisterOutputType(GitRemoteSettingsPtrOutput{})
	pulumi.RegisterOutputType(GitRemoteSettingsResponseOutput{})
	pulumi.RegisterOutputType(IntervalResponseOutput{})
	pulumi.RegisterOutputType(InvocationConfigOutput{})
	pulumi.RegisterOutputType(InvocationConfigPtrOutput{})
	pulumi.RegisterOutputType(InvocationConfigResponseOutput{})
	pulumi.RegisterOutputType(ScheduledExecutionRecordResponseOutput{})
	pulumi.RegisterOutputType(ScheduledExecutionRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduledReleaseRecordResponseOutput{})
	pulumi.RegisterOutputType(ScheduledReleaseRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusResponseOutput{})
	pulumi.RegisterOutputType(TargetOutput{})
	pulumi.RegisterOutputType(TargetArrayOutput{})
	pulumi.RegisterOutputType(TargetResponseOutput{})
	pulumi.RegisterOutputType(TargetResponseArrayOutput{})
}
