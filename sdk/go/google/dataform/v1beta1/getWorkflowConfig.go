// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fetches a single WorkflowConfig.
func LookupWorkflowConfig(ctx *pulumi.Context, args *LookupWorkflowConfigArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowConfigResult, error) {
	var rv LookupWorkflowConfigResult
	err := ctx.Invoke("google-native:dataform/v1beta1:getWorkflowConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkflowConfigArgs struct {
	Location         string  `pulumi:"location"`
	Project          *string `pulumi:"project"`
	RepositoryId     string  `pulumi:"repositoryId"`
	WorkflowConfigId string  `pulumi:"workflowConfigId"`
}

type LookupWorkflowConfigResult struct {
	// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
	CronSchedule string `pulumi:"cronSchedule"`
	// Optional. If left unset, a default InvocationConfig will be used.
	InvocationConfig InvocationConfigResponse `pulumi:"invocationConfig"`
	// The workflow config's name.
	Name string `pulumi:"name"`
	// Records of the 10 most recent scheduled execution attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
	RecentScheduledExecutionRecords []ScheduledExecutionRecordResponse `pulumi:"recentScheduledExecutionRecords"`
	// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
	ReleaseConfig string `pulumi:"releaseConfig"`
	// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone string `pulumi:"timeZone"`
}

func LookupWorkflowConfigOutput(ctx *pulumi.Context, args LookupWorkflowConfigOutputArgs, opts ...pulumi.InvokeOption) LookupWorkflowConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkflowConfigResult, error) {
			args := v.(LookupWorkflowConfigArgs)
			r, err := LookupWorkflowConfig(ctx, &args, opts...)
			var s LookupWorkflowConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkflowConfigResultOutput)
}

type LookupWorkflowConfigOutputArgs struct {
	Location         pulumi.StringInput    `pulumi:"location"`
	Project          pulumi.StringPtrInput `pulumi:"project"`
	RepositoryId     pulumi.StringInput    `pulumi:"repositoryId"`
	WorkflowConfigId pulumi.StringInput    `pulumi:"workflowConfigId"`
}

func (LookupWorkflowConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowConfigArgs)(nil)).Elem()
}

type LookupWorkflowConfigResultOutput struct{ *pulumi.OutputState }

func (LookupWorkflowConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkflowConfigResult)(nil)).Elem()
}

func (o LookupWorkflowConfigResultOutput) ToLookupWorkflowConfigResultOutput() LookupWorkflowConfigResultOutput {
	return o
}

func (o LookupWorkflowConfigResultOutput) ToLookupWorkflowConfigResultOutputWithContext(ctx context.Context) LookupWorkflowConfigResultOutput {
	return o
}

// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
func (o LookupWorkflowConfigResultOutput) CronSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) string { return v.CronSchedule }).(pulumi.StringOutput)
}

// Optional. If left unset, a default InvocationConfig will be used.
func (o LookupWorkflowConfigResultOutput) InvocationConfig() InvocationConfigResponseOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) InvocationConfigResponse { return v.InvocationConfig }).(InvocationConfigResponseOutput)
}

// The workflow config's name.
func (o LookupWorkflowConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Records of the 10 most recent scheduled execution attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
func (o LookupWorkflowConfigResultOutput) RecentScheduledExecutionRecords() ScheduledExecutionRecordResponseArrayOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) []ScheduledExecutionRecordResponse {
		return v.RecentScheduledExecutionRecords
	}).(ScheduledExecutionRecordResponseArrayOutput)
}

// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
func (o LookupWorkflowConfigResultOutput) ReleaseConfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) string { return v.ReleaseConfig }).(pulumi.StringOutput)
}

// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
func (o LookupWorkflowConfigResultOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkflowConfigResult) string { return v.TimeZone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkflowConfigResultOutput{})
}
