// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a new WorkflowConfig in a given Repository.
// Auto-naming is currently not supported for this resource.
type WorkflowConfig struct {
	pulumi.CustomResourceState

	// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
	CronSchedule pulumi.StringOutput `pulumi:"cronSchedule"`
	// Optional. If left unset, a default InvocationConfig will be used.
	InvocationConfig InvocationConfigResponseOutput `pulumi:"invocationConfig"`
	Location         pulumi.StringOutput            `pulumi:"location"`
	// The workflow config's name.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.
	RecentScheduledExecutionRecords ScheduledExecutionRecordResponseArrayOutput `pulumi:"recentScheduledExecutionRecords"`
	// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
	ReleaseConfig pulumi.StringOutput `pulumi:"releaseConfig"`
	RepositoryId  pulumi.StringOutput `pulumi:"repositoryId"`
	// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
	WorkflowConfigId pulumi.StringOutput `pulumi:"workflowConfigId"`
}

// NewWorkflowConfig registers a new resource with the given unique name, arguments, and options.
func NewWorkflowConfig(ctx *pulumi.Context,
	name string, args *WorkflowConfigArgs, opts ...pulumi.ResourceOption) (*WorkflowConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReleaseConfig == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseConfig'")
	}
	if args.RepositoryId == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryId'")
	}
	if args.WorkflowConfigId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowConfigId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
		"repositoryId",
		"workflowConfigId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkflowConfig
	err := ctx.RegisterResource("google-native:dataform/v1beta1:WorkflowConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowConfig gets an existing WorkflowConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowConfigState, opts ...pulumi.ResourceOption) (*WorkflowConfig, error) {
	var resource WorkflowConfig
	err := ctx.ReadResource("google-native:dataform/v1beta1:WorkflowConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowConfig resources.
type workflowConfigState struct {
}

type WorkflowConfigState struct {
}

func (WorkflowConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowConfigState)(nil)).Elem()
}

type workflowConfigArgs struct {
	// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
	CronSchedule *string `pulumi:"cronSchedule"`
	// Optional. If left unset, a default InvocationConfig will be used.
	InvocationConfig *InvocationConfig `pulumi:"invocationConfig"`
	Location         *string           `pulumi:"location"`
	Project          *string           `pulumi:"project"`
	// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
	ReleaseConfig string `pulumi:"releaseConfig"`
	RepositoryId  string `pulumi:"repositoryId"`
	// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone *string `pulumi:"timeZone"`
	// Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
	WorkflowConfigId string `pulumi:"workflowConfigId"`
}

// The set of arguments for constructing a WorkflowConfig resource.
type WorkflowConfigArgs struct {
	// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
	CronSchedule pulumi.StringPtrInput
	// Optional. If left unset, a default InvocationConfig will be used.
	InvocationConfig InvocationConfigPtrInput
	Location         pulumi.StringPtrInput
	Project          pulumi.StringPtrInput
	// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
	ReleaseConfig pulumi.StringInput
	RepositoryId  pulumi.StringInput
	// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone pulumi.StringPtrInput
	// Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
	WorkflowConfigId pulumi.StringInput
}

func (WorkflowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowConfigArgs)(nil)).Elem()
}

type WorkflowConfigInput interface {
	pulumi.Input

	ToWorkflowConfigOutput() WorkflowConfigOutput
	ToWorkflowConfigOutputWithContext(ctx context.Context) WorkflowConfigOutput
}

func (*WorkflowConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowConfig)(nil)).Elem()
}

func (i *WorkflowConfig) ToWorkflowConfigOutput() WorkflowConfigOutput {
	return i.ToWorkflowConfigOutputWithContext(context.Background())
}

func (i *WorkflowConfig) ToWorkflowConfigOutputWithContext(ctx context.Context) WorkflowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowConfigOutput)
}

func (i *WorkflowConfig) ToOutput(ctx context.Context) pulumix.Output[*WorkflowConfig] {
	return pulumix.Output[*WorkflowConfig]{
		OutputState: i.ToWorkflowConfigOutputWithContext(ctx).OutputState,
	}
}

type WorkflowConfigOutput struct{ *pulumi.OutputState }

func (WorkflowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowConfig)(nil)).Elem()
}

func (o WorkflowConfigOutput) ToWorkflowConfigOutput() WorkflowConfigOutput {
	return o
}

func (o WorkflowConfigOutput) ToWorkflowConfigOutputWithContext(ctx context.Context) WorkflowConfigOutput {
	return o
}

func (o WorkflowConfigOutput) ToOutput(ctx context.Context) pulumix.Output[*WorkflowConfig] {
	return pulumix.Output[*WorkflowConfig]{
		OutputState: o.OutputState,
	}
}

// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
func (o WorkflowConfigOutput) CronSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.CronSchedule }).(pulumi.StringOutput)
}

// Optional. If left unset, a default InvocationConfig will be used.
func (o WorkflowConfigOutput) InvocationConfig() InvocationConfigResponseOutput {
	return o.ApplyT(func(v *WorkflowConfig) InvocationConfigResponseOutput { return v.InvocationConfig }).(InvocationConfigResponseOutput)
}

func (o WorkflowConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The workflow config's name.
func (o WorkflowConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkflowConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Records of the 10 most recent scheduled execution attempts, ordered in in descending order of `execution_time`. Updated whenever automatic creation of a workflow invocation is triggered by cron_schedule.
func (o WorkflowConfigOutput) RecentScheduledExecutionRecords() ScheduledExecutionRecordResponseArrayOutput {
	return o.ApplyT(func(v *WorkflowConfig) ScheduledExecutionRecordResponseArrayOutput {
		return v.RecentScheduledExecutionRecords
	}).(ScheduledExecutionRecordResponseArrayOutput)
}

// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
func (o WorkflowConfigOutput) ReleaseConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.ReleaseConfig }).(pulumi.StringOutput)
}

func (o WorkflowConfigOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.RepositoryId }).(pulumi.StringOutput)
}

// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
func (o WorkflowConfigOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
func (o WorkflowConfigOutput) WorkflowConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowConfig) pulumi.StringOutput { return v.WorkflowConfigId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowConfigInput)(nil)).Elem(), &WorkflowConfig{})
	pulumi.RegisterOutputType(WorkflowConfigOutput{})
}
