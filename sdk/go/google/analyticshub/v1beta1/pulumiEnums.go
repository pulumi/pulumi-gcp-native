// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The log type that this config enables.
type AuditLogConfigLogType string

const (
	// Default case. Should never be this.
	AuditLogConfigLogTypeLogTypeUnspecified = AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED")
	// Admin reads. Example: CloudIAM getIamPolicy
	AuditLogConfigLogTypeAdminRead = AuditLogConfigLogType("ADMIN_READ")
	// Data writes. Example: CloudSQL Users create
	AuditLogConfigLogTypeDataWrite = AuditLogConfigLogType("DATA_WRITE")
	// Data reads. Example: CloudSQL Users list
	AuditLogConfigLogTypeDataRead = AuditLogConfigLogType("DATA_READ")
)

func (AuditLogConfigLogType) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return pulumi.ToOutput(e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuditLogConfigLogTypeOutput)
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return e.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return AuditLogConfigLogType(e).ToAuditLogConfigLogTypeOutputWithContext(ctx).ToAuditLogConfigLogTypePtrOutputWithContext(ctx)
}

func (e AuditLogConfigLogType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuditLogConfigLogType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuditLogConfigLogType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuditLogConfigLogTypeOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypeOutputWithContext(ctx context.Context) AuditLogConfigLogTypeOutput {
	return o
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o.ToAuditLogConfigLogTypePtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuditLogConfigLogType) *AuditLogConfigLogType {
		return &v
	}).(AuditLogConfigLogTypePtrOutput)
}

func (o AuditLogConfigLogTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AuditLogConfigLogType] {
	return pulumix.Output[AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o AuditLogConfigLogTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuditLogConfigLogType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuditLogConfigLogTypePtrOutput struct{ *pulumi.OutputState }

func (AuditLogConfigLogTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return o
}

func (o AuditLogConfigLogTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: o.OutputState,
	}
}

func (o AuditLogConfigLogTypePtrOutput) Elem() AuditLogConfigLogTypeOutput {
	return o.ApplyT(func(v *AuditLogConfigLogType) AuditLogConfigLogType {
		if v != nil {
			return *v
		}
		var ret AuditLogConfigLogType
		return ret
	}).(AuditLogConfigLogTypeOutput)
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuditLogConfigLogTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuditLogConfigLogType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AuditLogConfigLogTypeInput is an input type that accepts AuditLogConfigLogTypeArgs and AuditLogConfigLogTypeOutput values.
// You can construct a concrete instance of `AuditLogConfigLogTypeInput` via:
//
//	AuditLogConfigLogTypeArgs{...}
type AuditLogConfigLogTypeInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypeOutput() AuditLogConfigLogTypeOutput
	ToAuditLogConfigLogTypeOutputWithContext(context.Context) AuditLogConfigLogTypeOutput
}

var auditLogConfigLogTypePtrType = reflect.TypeOf((**AuditLogConfigLogType)(nil)).Elem()

type AuditLogConfigLogTypePtrInput interface {
	pulumi.Input

	ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput
	ToAuditLogConfigLogTypePtrOutputWithContext(context.Context) AuditLogConfigLogTypePtrOutput
}

type auditLogConfigLogTypePtr string

func AuditLogConfigLogTypePtr(v string) AuditLogConfigLogTypePtrInput {
	return (*auditLogConfigLogTypePtr)(&v)
}

func (*auditLogConfigLogTypePtr) ElementType() reflect.Type {
	return auditLogConfigLogTypePtrType
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutput() AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutput(in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToAuditLogConfigLogTypePtrOutputWithContext(ctx context.Context) AuditLogConfigLogTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuditLogConfigLogTypePtrOutput)
}

func (in *auditLogConfigLogTypePtr) ToOutput(ctx context.Context) pulumix.Output[*AuditLogConfigLogType] {
	return pulumix.Output[*AuditLogConfigLogType]{
		OutputState: in.ToAuditLogConfigLogTypePtrOutputWithContext(ctx).OutputState,
	}
}

type ListingCategoriesItem string

const (
	ListingCategoriesItemCategoryUnspecified                = ListingCategoriesItem("CATEGORY_UNSPECIFIED")
	ListingCategoriesItemCategoryOthers                     = ListingCategoriesItem("CATEGORY_OTHERS")
	ListingCategoriesItemCategoryAdvertisingAndMarketing    = ListingCategoriesItem("CATEGORY_ADVERTISING_AND_MARKETING")
	ListingCategoriesItemCategoryCommerce                   = ListingCategoriesItem("CATEGORY_COMMERCE")
	ListingCategoriesItemCategoryClimateAndEnvironment      = ListingCategoriesItem("CATEGORY_CLIMATE_AND_ENVIRONMENT")
	ListingCategoriesItemCategoryDemographics               = ListingCategoriesItem("CATEGORY_DEMOGRAPHICS")
	ListingCategoriesItemCategoryEconomics                  = ListingCategoriesItem("CATEGORY_ECONOMICS")
	ListingCategoriesItemCategoryEducation                  = ListingCategoriesItem("CATEGORY_EDUCATION")
	ListingCategoriesItemCategoryEnergy                     = ListingCategoriesItem("CATEGORY_ENERGY")
	ListingCategoriesItemCategoryFinancial                  = ListingCategoriesItem("CATEGORY_FINANCIAL")
	ListingCategoriesItemCategoryGaming                     = ListingCategoriesItem("CATEGORY_GAMING")
	ListingCategoriesItemCategoryGeospatial                 = ListingCategoriesItem("CATEGORY_GEOSPATIAL")
	ListingCategoriesItemCategoryHealthcareAndLifeScience   = ListingCategoriesItem("CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE")
	ListingCategoriesItemCategoryMedia                      = ListingCategoriesItem("CATEGORY_MEDIA")
	ListingCategoriesItemCategoryPublicSector               = ListingCategoriesItem("CATEGORY_PUBLIC_SECTOR")
	ListingCategoriesItemCategoryRetail                     = ListingCategoriesItem("CATEGORY_RETAIL")
	ListingCategoriesItemCategorySports                     = ListingCategoriesItem("CATEGORY_SPORTS")
	ListingCategoriesItemCategoryScienceAndResearch         = ListingCategoriesItem("CATEGORY_SCIENCE_AND_RESEARCH")
	ListingCategoriesItemCategoryTransportationAndLogistics = ListingCategoriesItem("CATEGORY_TRANSPORTATION_AND_LOGISTICS")
	ListingCategoriesItemCategoryTravelAndTourism           = ListingCategoriesItem("CATEGORY_TRAVEL_AND_TOURISM")
)

func (ListingCategoriesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCategoriesItem)(nil)).Elem()
}

func (e ListingCategoriesItem) ToListingCategoriesItemOutput() ListingCategoriesItemOutput {
	return pulumi.ToOutput(e).(ListingCategoriesItemOutput)
}

func (e ListingCategoriesItem) ToListingCategoriesItemOutputWithContext(ctx context.Context) ListingCategoriesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ListingCategoriesItemOutput)
}

func (e ListingCategoriesItem) ToListingCategoriesItemPtrOutput() ListingCategoriesItemPtrOutput {
	return e.ToListingCategoriesItemPtrOutputWithContext(context.Background())
}

func (e ListingCategoriesItem) ToListingCategoriesItemPtrOutputWithContext(ctx context.Context) ListingCategoriesItemPtrOutput {
	return ListingCategoriesItem(e).ToListingCategoriesItemOutputWithContext(ctx).ToListingCategoriesItemPtrOutputWithContext(ctx)
}

func (e ListingCategoriesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListingCategoriesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListingCategoriesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ListingCategoriesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ListingCategoriesItemOutput struct{ *pulumi.OutputState }

func (ListingCategoriesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListingCategoriesItem)(nil)).Elem()
}

func (o ListingCategoriesItemOutput) ToListingCategoriesItemOutput() ListingCategoriesItemOutput {
	return o
}

func (o ListingCategoriesItemOutput) ToListingCategoriesItemOutputWithContext(ctx context.Context) ListingCategoriesItemOutput {
	return o
}

func (o ListingCategoriesItemOutput) ToListingCategoriesItemPtrOutput() ListingCategoriesItemPtrOutput {
	return o.ToListingCategoriesItemPtrOutputWithContext(context.Background())
}

func (o ListingCategoriesItemOutput) ToListingCategoriesItemPtrOutputWithContext(ctx context.Context) ListingCategoriesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListingCategoriesItem) *ListingCategoriesItem {
		return &v
	}).(ListingCategoriesItemPtrOutput)
}

func (o ListingCategoriesItemOutput) ToOutput(ctx context.Context) pulumix.Output[ListingCategoriesItem] {
	return pulumix.Output[ListingCategoriesItem]{
		OutputState: o.OutputState,
	}
}

func (o ListingCategoriesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ListingCategoriesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListingCategoriesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ListingCategoriesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListingCategoriesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListingCategoriesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ListingCategoriesItemPtrOutput struct{ *pulumi.OutputState }

func (ListingCategoriesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListingCategoriesItem)(nil)).Elem()
}

func (o ListingCategoriesItemPtrOutput) ToListingCategoriesItemPtrOutput() ListingCategoriesItemPtrOutput {
	return o
}

func (o ListingCategoriesItemPtrOutput) ToListingCategoriesItemPtrOutputWithContext(ctx context.Context) ListingCategoriesItemPtrOutput {
	return o
}

func (o ListingCategoriesItemPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ListingCategoriesItem] {
	return pulumix.Output[*ListingCategoriesItem]{
		OutputState: o.OutputState,
	}
}

func (o ListingCategoriesItemPtrOutput) Elem() ListingCategoriesItemOutput {
	return o.ApplyT(func(v *ListingCategoriesItem) ListingCategoriesItem {
		if v != nil {
			return *v
		}
		var ret ListingCategoriesItem
		return ret
	}).(ListingCategoriesItemOutput)
}

func (o ListingCategoriesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListingCategoriesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ListingCategoriesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ListingCategoriesItemInput is an input type that accepts ListingCategoriesItemArgs and ListingCategoriesItemOutput values.
// You can construct a concrete instance of `ListingCategoriesItemInput` via:
//
//	ListingCategoriesItemArgs{...}
type ListingCategoriesItemInput interface {
	pulumi.Input

	ToListingCategoriesItemOutput() ListingCategoriesItemOutput
	ToListingCategoriesItemOutputWithContext(context.Context) ListingCategoriesItemOutput
}

var listingCategoriesItemPtrType = reflect.TypeOf((**ListingCategoriesItem)(nil)).Elem()

type ListingCategoriesItemPtrInput interface {
	pulumi.Input

	ToListingCategoriesItemPtrOutput() ListingCategoriesItemPtrOutput
	ToListingCategoriesItemPtrOutputWithContext(context.Context) ListingCategoriesItemPtrOutput
}

type listingCategoriesItemPtr string

func ListingCategoriesItemPtr(v string) ListingCategoriesItemPtrInput {
	return (*listingCategoriesItemPtr)(&v)
}

func (*listingCategoriesItemPtr) ElementType() reflect.Type {
	return listingCategoriesItemPtrType
}

func (in *listingCategoriesItemPtr) ToListingCategoriesItemPtrOutput() ListingCategoriesItemPtrOutput {
	return pulumi.ToOutput(in).(ListingCategoriesItemPtrOutput)
}

func (in *listingCategoriesItemPtr) ToListingCategoriesItemPtrOutputWithContext(ctx context.Context) ListingCategoriesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ListingCategoriesItemPtrOutput)
}

func (in *listingCategoriesItemPtr) ToOutput(ctx context.Context) pulumix.Output[*ListingCategoriesItem] {
	return pulumix.Output[*ListingCategoriesItem]{
		OutputState: in.ToListingCategoriesItemPtrOutputWithContext(ctx).OutputState,
	}
}

// ListingCategoriesItemArrayInput is an input type that accepts ListingCategoriesItemArray and ListingCategoriesItemArrayOutput values.
// You can construct a concrete instance of `ListingCategoriesItemArrayInput` via:
//
//	ListingCategoriesItemArray{ ListingCategoriesItemArgs{...} }
type ListingCategoriesItemArrayInput interface {
	pulumi.Input

	ToListingCategoriesItemArrayOutput() ListingCategoriesItemArrayOutput
	ToListingCategoriesItemArrayOutputWithContext(context.Context) ListingCategoriesItemArrayOutput
}

type ListingCategoriesItemArray []ListingCategoriesItem

func (ListingCategoriesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCategoriesItem)(nil)).Elem()
}

func (i ListingCategoriesItemArray) ToListingCategoriesItemArrayOutput() ListingCategoriesItemArrayOutput {
	return i.ToListingCategoriesItemArrayOutputWithContext(context.Background())
}

func (i ListingCategoriesItemArray) ToListingCategoriesItemArrayOutputWithContext(ctx context.Context) ListingCategoriesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListingCategoriesItemArrayOutput)
}

func (i ListingCategoriesItemArray) ToOutput(ctx context.Context) pulumix.Output[[]ListingCategoriesItem] {
	return pulumix.Output[[]ListingCategoriesItem]{
		OutputState: i.ToListingCategoriesItemArrayOutputWithContext(ctx).OutputState,
	}
}

type ListingCategoriesItemArrayOutput struct{ *pulumi.OutputState }

func (ListingCategoriesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListingCategoriesItem)(nil)).Elem()
}

func (o ListingCategoriesItemArrayOutput) ToListingCategoriesItemArrayOutput() ListingCategoriesItemArrayOutput {
	return o
}

func (o ListingCategoriesItemArrayOutput) ToListingCategoriesItemArrayOutputWithContext(ctx context.Context) ListingCategoriesItemArrayOutput {
	return o
}

func (o ListingCategoriesItemArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ListingCategoriesItem] {
	return pulumix.Output[[]ListingCategoriesItem]{
		OutputState: o.OutputState,
	}
}

func (o ListingCategoriesItemArrayOutput) Index(i pulumi.IntInput) ListingCategoriesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListingCategoriesItem {
		return vs[0].([]ListingCategoriesItem)[vs[1].(int)]
	}).(ListingCategoriesItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypeInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigLogTypePtrInput)(nil)).Elem(), AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCategoriesItemInput)(nil)).Elem(), ListingCategoriesItem("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCategoriesItemPtrInput)(nil)).Elem(), ListingCategoriesItem("CATEGORY_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*ListingCategoriesItemArrayInput)(nil)).Elem(), ListingCategoriesItemArray{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypeOutput{})
	pulumi.RegisterOutputType(AuditLogConfigLogTypePtrOutput{})
	pulumi.RegisterOutputType(ListingCategoriesItemOutput{})
	pulumi.RegisterOutputType(ListingCategoriesItemPtrOutput{})
	pulumi.RegisterOutputType(ListingCategoriesItemArrayOutput{})
}
