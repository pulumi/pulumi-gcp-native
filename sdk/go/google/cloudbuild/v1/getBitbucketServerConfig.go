// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve a `BitbucketServerConfig`. This API is experimental.
func LookupBitbucketServerConfig(ctx *pulumi.Context, args *LookupBitbucketServerConfigArgs, opts ...pulumi.InvokeOption) (*LookupBitbucketServerConfigResult, error) {
	var rv LookupBitbucketServerConfigResult
	err := ctx.Invoke("google-native:cloudbuild/v1:getBitbucketServerConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBitbucketServerConfigArgs struct {
	BitbucketServerConfigId string  `pulumi:"bitbucketServerConfigId"`
	Location                string  `pulumi:"location"`
	Project                 *string `pulumi:"project"`
}

type LookupBitbucketServerConfigResult struct {
	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
	ApiKey string `pulumi:"apiKey"`
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories []BitbucketServerRepositoryIdResponse `pulumi:"connectedRepositories"`
	// Time when the config was created.
	CreateTime string `pulumi:"createTime"`
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
	HostUri string `pulumi:"hostUri"`
	// The resource name for the config.
	Name string `pulumi:"name"`
	// Optional. The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork string `pulumi:"peeredNetwork"`
	// Secret Manager secrets needed by the config.
	Secrets BitbucketServerSecretsResponse `pulumi:"secrets"`
	// Optional. SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of .pem, .cer, or .crt.
	SslCa string `pulumi:"sslCa"`
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username string `pulumi:"username"`
	// UUID included in webhook requests. The UUID is used to look up the corresponding config.
	WebhookKey string `pulumi:"webhookKey"`
}

func LookupBitbucketServerConfigOutput(ctx *pulumi.Context, args LookupBitbucketServerConfigOutputArgs, opts ...pulumi.InvokeOption) LookupBitbucketServerConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBitbucketServerConfigResult, error) {
			args := v.(LookupBitbucketServerConfigArgs)
			r, err := LookupBitbucketServerConfig(ctx, &args, opts...)
			var s LookupBitbucketServerConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBitbucketServerConfigResultOutput)
}

type LookupBitbucketServerConfigOutputArgs struct {
	BitbucketServerConfigId pulumi.StringInput    `pulumi:"bitbucketServerConfigId"`
	Location                pulumi.StringInput    `pulumi:"location"`
	Project                 pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBitbucketServerConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBitbucketServerConfigArgs)(nil)).Elem()
}

type LookupBitbucketServerConfigResultOutput struct{ *pulumi.OutputState }

func (LookupBitbucketServerConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBitbucketServerConfigResult)(nil)).Elem()
}

func (o LookupBitbucketServerConfigResultOutput) ToLookupBitbucketServerConfigResultOutput() LookupBitbucketServerConfigResultOutput {
	return o
}

func (o LookupBitbucketServerConfigResultOutput) ToLookupBitbucketServerConfigResultOutputWithContext(ctx context.Context) LookupBitbucketServerConfigResultOutput {
	return o
}

// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
func (o LookupBitbucketServerConfigResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Connected Bitbucket Server repositories for this config.
func (o LookupBitbucketServerConfigResultOutput) ConnectedRepositories() BitbucketServerRepositoryIdResponseArrayOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) []BitbucketServerRepositoryIdResponse {
		return v.ConnectedRepositories
	}).(BitbucketServerRepositoryIdResponseArrayOutput)
}

// Time when the config was created.
func (o LookupBitbucketServerConfigResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
func (o LookupBitbucketServerConfigResultOutput) HostUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.HostUri }).(pulumi.StringOutput)
}

// The resource name for the config.
func (o LookupBitbucketServerConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
func (o LookupBitbucketServerConfigResultOutput) PeeredNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.PeeredNetwork }).(pulumi.StringOutput)
}

// Secret Manager secrets needed by the config.
func (o LookupBitbucketServerConfigResultOutput) Secrets() BitbucketServerSecretsResponseOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) BitbucketServerSecretsResponse { return v.Secrets }).(BitbucketServerSecretsResponseOutput)
}

// Optional. SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of .pem, .cer, or .crt.
func (o LookupBitbucketServerConfigResultOutput) SslCa() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.SslCa }).(pulumi.StringOutput)
}

// Username of the account Cloud Build will use on Bitbucket Server.
func (o LookupBitbucketServerConfigResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.Username }).(pulumi.StringOutput)
}

// UUID included in webhook requests. The UUID is used to look up the corresponding config.
func (o LookupBitbucketServerConfigResultOutput) WebhookKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBitbucketServerConfigResult) string { return v.WebhookKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBitbucketServerConfigResultOutput{})
}
