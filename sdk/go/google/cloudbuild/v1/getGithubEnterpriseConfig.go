// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve a GitHubEnterpriseConfig. This API is experimental.
func LookupGithubEnterpriseConfig(ctx *pulumi.Context, args *LookupGithubEnterpriseConfigArgs, opts ...pulumi.InvokeOption) (*LookupGithubEnterpriseConfigResult, error) {
	var rv LookupGithubEnterpriseConfigResult
	err := ctx.Invoke("google-native:cloudbuild/v1:getGithubEnterpriseConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGithubEnterpriseConfigArgs struct {
	ConfigId                 *string `pulumi:"configId"`
	GithubEnterpriseConfigId string  `pulumi:"githubEnterpriseConfigId"`
	Location                 string  `pulumi:"location"`
	Project                  *string `pulumi:"project"`
	ProjectId                *string `pulumi:"projectId"`
}

type LookupGithubEnterpriseConfigResult struct {
	// The GitHub app id of the Cloud Build app on the GitHub Enterprise server.
	AppId string `pulumi:"appId"`
	// Time when the installation was associated with the project.
	CreateTime string `pulumi:"createTime"`
	// Name to display for this config.
	DisplayName string `pulumi:"displayName"`
	// The URL of the github enterprise host the configuration is for.
	HostUrl string `pulumi:"hostUrl"`
	// Optional. The full resource name for the GitHubEnterpriseConfig For example: "projects/{$project_id}/githubEnterpriseConfigs/{$config_id}"
	Name string `pulumi:"name"`
	// Optional. The network to be used when reaching out to the GitHub Enterprise server. The VPC network must be enabled for private service connection. This should be set if the GitHub Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the GitHub Enterprise server will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork string `pulumi:"peeredNetwork"`
	// Names of secrets in Secret Manager.
	Secrets GitHubEnterpriseSecretsResponse `pulumi:"secrets"`
	// Optional. SSL certificate to use for requests to GitHub Enterprise.
	SslCa string `pulumi:"sslCa"`
	// The key that should be attached to webhook calls to the ReceiveWebhook endpoint.
	WebhookKey string `pulumi:"webhookKey"`
}
