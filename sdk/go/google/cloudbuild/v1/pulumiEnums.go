// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Option to define build log streaming behavior to Google Cloud Storage.
type BuildOptionsLogStreamingOption string

const (
	// Service may automatically determine build log streaming behavior.
	BuildOptionsLogStreamingOptionStreamDefault = BuildOptionsLogStreamingOption("STREAM_DEFAULT")
	// Build logs should be streamed to Google Cloud Storage.
	BuildOptionsLogStreamingOptionStreamOn = BuildOptionsLogStreamingOption("STREAM_ON")
	// Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed.
	BuildOptionsLogStreamingOptionStreamOff = BuildOptionsLogStreamingOption("STREAM_OFF")
)

func (BuildOptionsLogStreamingOption) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsLogStreamingOption)(nil)).Elem()
}

func (e BuildOptionsLogStreamingOption) ToBuildOptionsLogStreamingOptionOutput() BuildOptionsLogStreamingOptionOutput {
	return pulumi.ToOutput(e).(BuildOptionsLogStreamingOptionOutput)
}

func (e BuildOptionsLogStreamingOption) ToBuildOptionsLogStreamingOptionOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsLogStreamingOptionOutput)
}

func (e BuildOptionsLogStreamingOption) ToBuildOptionsLogStreamingOptionPtrOutput() BuildOptionsLogStreamingOptionPtrOutput {
	return e.ToBuildOptionsLogStreamingOptionPtrOutputWithContext(context.Background())
}

func (e BuildOptionsLogStreamingOption) ToBuildOptionsLogStreamingOptionPtrOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionPtrOutput {
	return BuildOptionsLogStreamingOption(e).ToBuildOptionsLogStreamingOptionOutputWithContext(ctx).ToBuildOptionsLogStreamingOptionPtrOutputWithContext(ctx)
}

func (e BuildOptionsLogStreamingOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsLogStreamingOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsLogStreamingOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsLogStreamingOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsLogStreamingOptionOutput struct{ *pulumi.OutputState }

func (BuildOptionsLogStreamingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsLogStreamingOption)(nil)).Elem()
}

func (o BuildOptionsLogStreamingOptionOutput) ToBuildOptionsLogStreamingOptionOutput() BuildOptionsLogStreamingOptionOutput {
	return o
}

func (o BuildOptionsLogStreamingOptionOutput) ToBuildOptionsLogStreamingOptionOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionOutput {
	return o
}

func (o BuildOptionsLogStreamingOptionOutput) ToBuildOptionsLogStreamingOptionPtrOutput() BuildOptionsLogStreamingOptionPtrOutput {
	return o.ToBuildOptionsLogStreamingOptionPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLogStreamingOptionOutput) ToBuildOptionsLogStreamingOptionPtrOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsLogStreamingOption) *BuildOptionsLogStreamingOption {
		return &v
	}).(BuildOptionsLogStreamingOptionPtrOutput)
}

func (o BuildOptionsLogStreamingOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsLogStreamingOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsLogStreamingOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsLogStreamingOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLogStreamingOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsLogStreamingOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsLogStreamingOptionPtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsLogStreamingOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsLogStreamingOption)(nil)).Elem()
}

func (o BuildOptionsLogStreamingOptionPtrOutput) ToBuildOptionsLogStreamingOptionPtrOutput() BuildOptionsLogStreamingOptionPtrOutput {
	return o
}

func (o BuildOptionsLogStreamingOptionPtrOutput) ToBuildOptionsLogStreamingOptionPtrOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionPtrOutput {
	return o
}

func (o BuildOptionsLogStreamingOptionPtrOutput) Elem() BuildOptionsLogStreamingOptionOutput {
	return o.ApplyT(func(v *BuildOptionsLogStreamingOption) BuildOptionsLogStreamingOption {
		if v != nil {
			return *v
		}
		var ret BuildOptionsLogStreamingOption
		return ret
	}).(BuildOptionsLogStreamingOptionOutput)
}

func (o BuildOptionsLogStreamingOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLogStreamingOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsLogStreamingOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsLogStreamingOptionInput is an input type that accepts BuildOptionsLogStreamingOptionArgs and BuildOptionsLogStreamingOptionOutput values.
// You can construct a concrete instance of `BuildOptionsLogStreamingOptionInput` via:
//
//	BuildOptionsLogStreamingOptionArgs{...}
type BuildOptionsLogStreamingOptionInput interface {
	pulumi.Input

	ToBuildOptionsLogStreamingOptionOutput() BuildOptionsLogStreamingOptionOutput
	ToBuildOptionsLogStreamingOptionOutputWithContext(context.Context) BuildOptionsLogStreamingOptionOutput
}

var buildOptionsLogStreamingOptionPtrType = reflect.TypeOf((**BuildOptionsLogStreamingOption)(nil)).Elem()

type BuildOptionsLogStreamingOptionPtrInput interface {
	pulumi.Input

	ToBuildOptionsLogStreamingOptionPtrOutput() BuildOptionsLogStreamingOptionPtrOutput
	ToBuildOptionsLogStreamingOptionPtrOutputWithContext(context.Context) BuildOptionsLogStreamingOptionPtrOutput
}

type buildOptionsLogStreamingOptionPtr string

func BuildOptionsLogStreamingOptionPtr(v string) BuildOptionsLogStreamingOptionPtrInput {
	return (*buildOptionsLogStreamingOptionPtr)(&v)
}

func (*buildOptionsLogStreamingOptionPtr) ElementType() reflect.Type {
	return buildOptionsLogStreamingOptionPtrType
}

func (in *buildOptionsLogStreamingOptionPtr) ToBuildOptionsLogStreamingOptionPtrOutput() BuildOptionsLogStreamingOptionPtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsLogStreamingOptionPtrOutput)
}

func (in *buildOptionsLogStreamingOptionPtr) ToBuildOptionsLogStreamingOptionPtrOutputWithContext(ctx context.Context) BuildOptionsLogStreamingOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsLogStreamingOptionPtrOutput)
}

// Option to specify the logging mode, which determines if and where build logs are stored.
type BuildOptionsLogging string

const (
	// The service determines the logging mode. The default is `LEGACY`. Do not rely on the default logging behavior as it may change in the future.
	BuildOptionsLoggingLoggingUnspecified = BuildOptionsLogging("LOGGING_UNSPECIFIED")
	// Build logs are stored in Cloud Logging and Cloud Storage.
	BuildOptionsLoggingLegacy = BuildOptionsLogging("LEGACY")
	// Build logs are stored in Cloud Storage.
	BuildOptionsLoggingGcsOnly = BuildOptionsLogging("GCS_ONLY")
	// This option is the same as CLOUD_LOGGING_ONLY.
	BuildOptionsLoggingStackdriverOnly = BuildOptionsLogging("STACKDRIVER_ONLY")
	// Build logs are stored in Cloud Logging. Selecting this option will not allow [logs streaming](https://cloud.google.com/sdk/gcloud/reference/builds/log).
	BuildOptionsLoggingCloudLoggingOnly = BuildOptionsLogging("CLOUD_LOGGING_ONLY")
	// Turn off all logging. No build logs will be captured.
	BuildOptionsLoggingNone = BuildOptionsLogging("NONE")
)

func (BuildOptionsLogging) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsLogging)(nil)).Elem()
}

func (e BuildOptionsLogging) ToBuildOptionsLoggingOutput() BuildOptionsLoggingOutput {
	return pulumi.ToOutput(e).(BuildOptionsLoggingOutput)
}

func (e BuildOptionsLogging) ToBuildOptionsLoggingOutputWithContext(ctx context.Context) BuildOptionsLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsLoggingOutput)
}

func (e BuildOptionsLogging) ToBuildOptionsLoggingPtrOutput() BuildOptionsLoggingPtrOutput {
	return e.ToBuildOptionsLoggingPtrOutputWithContext(context.Background())
}

func (e BuildOptionsLogging) ToBuildOptionsLoggingPtrOutputWithContext(ctx context.Context) BuildOptionsLoggingPtrOutput {
	return BuildOptionsLogging(e).ToBuildOptionsLoggingOutputWithContext(ctx).ToBuildOptionsLoggingPtrOutputWithContext(ctx)
}

func (e BuildOptionsLogging) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsLogging) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsLogging) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsLogging) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsLoggingOutput struct{ *pulumi.OutputState }

func (BuildOptionsLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsLogging)(nil)).Elem()
}

func (o BuildOptionsLoggingOutput) ToBuildOptionsLoggingOutput() BuildOptionsLoggingOutput {
	return o
}

func (o BuildOptionsLoggingOutput) ToBuildOptionsLoggingOutputWithContext(ctx context.Context) BuildOptionsLoggingOutput {
	return o
}

func (o BuildOptionsLoggingOutput) ToBuildOptionsLoggingPtrOutput() BuildOptionsLoggingPtrOutput {
	return o.ToBuildOptionsLoggingPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLoggingOutput) ToBuildOptionsLoggingPtrOutputWithContext(ctx context.Context) BuildOptionsLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsLogging) *BuildOptionsLogging {
		return &v
	}).(BuildOptionsLoggingPtrOutput)
}

func (o BuildOptionsLoggingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsLoggingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsLogging) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsLoggingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLoggingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsLogging) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsLoggingPtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsLogging)(nil)).Elem()
}

func (o BuildOptionsLoggingPtrOutput) ToBuildOptionsLoggingPtrOutput() BuildOptionsLoggingPtrOutput {
	return o
}

func (o BuildOptionsLoggingPtrOutput) ToBuildOptionsLoggingPtrOutputWithContext(ctx context.Context) BuildOptionsLoggingPtrOutput {
	return o
}

func (o BuildOptionsLoggingPtrOutput) Elem() BuildOptionsLoggingOutput {
	return o.ApplyT(func(v *BuildOptionsLogging) BuildOptionsLogging {
		if v != nil {
			return *v
		}
		var ret BuildOptionsLogging
		return ret
	}).(BuildOptionsLoggingOutput)
}

func (o BuildOptionsLoggingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsLoggingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsLogging) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsLoggingInput is an input type that accepts BuildOptionsLoggingArgs and BuildOptionsLoggingOutput values.
// You can construct a concrete instance of `BuildOptionsLoggingInput` via:
//
//	BuildOptionsLoggingArgs{...}
type BuildOptionsLoggingInput interface {
	pulumi.Input

	ToBuildOptionsLoggingOutput() BuildOptionsLoggingOutput
	ToBuildOptionsLoggingOutputWithContext(context.Context) BuildOptionsLoggingOutput
}

var buildOptionsLoggingPtrType = reflect.TypeOf((**BuildOptionsLogging)(nil)).Elem()

type BuildOptionsLoggingPtrInput interface {
	pulumi.Input

	ToBuildOptionsLoggingPtrOutput() BuildOptionsLoggingPtrOutput
	ToBuildOptionsLoggingPtrOutputWithContext(context.Context) BuildOptionsLoggingPtrOutput
}

type buildOptionsLoggingPtr string

func BuildOptionsLoggingPtr(v string) BuildOptionsLoggingPtrInput {
	return (*buildOptionsLoggingPtr)(&v)
}

func (*buildOptionsLoggingPtr) ElementType() reflect.Type {
	return buildOptionsLoggingPtrType
}

func (in *buildOptionsLoggingPtr) ToBuildOptionsLoggingPtrOutput() BuildOptionsLoggingPtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsLoggingPtrOutput)
}

func (in *buildOptionsLoggingPtr) ToBuildOptionsLoggingPtrOutputWithContext(ctx context.Context) BuildOptionsLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsLoggingPtrOutput)
}

// Compute Engine machine type on which to run the build.
type BuildOptionsMachineType string

const (
	// Standard machine type.
	BuildOptionsMachineTypeUnspecified = BuildOptionsMachineType("UNSPECIFIED")
	// Highcpu machine with 8 CPUs.
	BuildOptionsMachineTypeN1Highcpu8 = BuildOptionsMachineType("N1_HIGHCPU_8")
	// Highcpu machine with 32 CPUs.
	BuildOptionsMachineTypeN1Highcpu32 = BuildOptionsMachineType("N1_HIGHCPU_32")
	// Highcpu e2 machine with 8 CPUs.
	BuildOptionsMachineTypeE2Highcpu8 = BuildOptionsMachineType("E2_HIGHCPU_8")
	// Highcpu e2 machine with 32 CPUs.
	BuildOptionsMachineTypeE2Highcpu32 = BuildOptionsMachineType("E2_HIGHCPU_32")
)

func (BuildOptionsMachineType) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsMachineType)(nil)).Elem()
}

func (e BuildOptionsMachineType) ToBuildOptionsMachineTypeOutput() BuildOptionsMachineTypeOutput {
	return pulumi.ToOutput(e).(BuildOptionsMachineTypeOutput)
}

func (e BuildOptionsMachineType) ToBuildOptionsMachineTypeOutputWithContext(ctx context.Context) BuildOptionsMachineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsMachineTypeOutput)
}

func (e BuildOptionsMachineType) ToBuildOptionsMachineTypePtrOutput() BuildOptionsMachineTypePtrOutput {
	return e.ToBuildOptionsMachineTypePtrOutputWithContext(context.Background())
}

func (e BuildOptionsMachineType) ToBuildOptionsMachineTypePtrOutputWithContext(ctx context.Context) BuildOptionsMachineTypePtrOutput {
	return BuildOptionsMachineType(e).ToBuildOptionsMachineTypeOutputWithContext(ctx).ToBuildOptionsMachineTypePtrOutputWithContext(ctx)
}

func (e BuildOptionsMachineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsMachineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsMachineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsMachineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsMachineTypeOutput struct{ *pulumi.OutputState }

func (BuildOptionsMachineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsMachineType)(nil)).Elem()
}

func (o BuildOptionsMachineTypeOutput) ToBuildOptionsMachineTypeOutput() BuildOptionsMachineTypeOutput {
	return o
}

func (o BuildOptionsMachineTypeOutput) ToBuildOptionsMachineTypeOutputWithContext(ctx context.Context) BuildOptionsMachineTypeOutput {
	return o
}

func (o BuildOptionsMachineTypeOutput) ToBuildOptionsMachineTypePtrOutput() BuildOptionsMachineTypePtrOutput {
	return o.ToBuildOptionsMachineTypePtrOutputWithContext(context.Background())
}

func (o BuildOptionsMachineTypeOutput) ToBuildOptionsMachineTypePtrOutputWithContext(ctx context.Context) BuildOptionsMachineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsMachineType) *BuildOptionsMachineType {
		return &v
	}).(BuildOptionsMachineTypePtrOutput)
}

func (o BuildOptionsMachineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsMachineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsMachineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsMachineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsMachineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsMachineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsMachineTypePtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsMachineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsMachineType)(nil)).Elem()
}

func (o BuildOptionsMachineTypePtrOutput) ToBuildOptionsMachineTypePtrOutput() BuildOptionsMachineTypePtrOutput {
	return o
}

func (o BuildOptionsMachineTypePtrOutput) ToBuildOptionsMachineTypePtrOutputWithContext(ctx context.Context) BuildOptionsMachineTypePtrOutput {
	return o
}

func (o BuildOptionsMachineTypePtrOutput) Elem() BuildOptionsMachineTypeOutput {
	return o.ApplyT(func(v *BuildOptionsMachineType) BuildOptionsMachineType {
		if v != nil {
			return *v
		}
		var ret BuildOptionsMachineType
		return ret
	}).(BuildOptionsMachineTypeOutput)
}

func (o BuildOptionsMachineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsMachineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsMachineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsMachineTypeInput is an input type that accepts BuildOptionsMachineTypeArgs and BuildOptionsMachineTypeOutput values.
// You can construct a concrete instance of `BuildOptionsMachineTypeInput` via:
//
//	BuildOptionsMachineTypeArgs{...}
type BuildOptionsMachineTypeInput interface {
	pulumi.Input

	ToBuildOptionsMachineTypeOutput() BuildOptionsMachineTypeOutput
	ToBuildOptionsMachineTypeOutputWithContext(context.Context) BuildOptionsMachineTypeOutput
}

var buildOptionsMachineTypePtrType = reflect.TypeOf((**BuildOptionsMachineType)(nil)).Elem()

type BuildOptionsMachineTypePtrInput interface {
	pulumi.Input

	ToBuildOptionsMachineTypePtrOutput() BuildOptionsMachineTypePtrOutput
	ToBuildOptionsMachineTypePtrOutputWithContext(context.Context) BuildOptionsMachineTypePtrOutput
}

type buildOptionsMachineTypePtr string

func BuildOptionsMachineTypePtr(v string) BuildOptionsMachineTypePtrInput {
	return (*buildOptionsMachineTypePtr)(&v)
}

func (*buildOptionsMachineTypePtr) ElementType() reflect.Type {
	return buildOptionsMachineTypePtrType
}

func (in *buildOptionsMachineTypePtr) ToBuildOptionsMachineTypePtrOutput() BuildOptionsMachineTypePtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsMachineTypePtrOutput)
}

func (in *buildOptionsMachineTypePtr) ToBuildOptionsMachineTypePtrOutputWithContext(ctx context.Context) BuildOptionsMachineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsMachineTypePtrOutput)
}

// Requested verifiability options.
type BuildOptionsRequestedVerifyOption string

const (
	// Not a verifiable build (the default).
	BuildOptionsRequestedVerifyOptionNotVerified = BuildOptionsRequestedVerifyOption("NOT_VERIFIED")
	// Build must be verified.
	BuildOptionsRequestedVerifyOptionVerified = BuildOptionsRequestedVerifyOption("VERIFIED")
)

func (BuildOptionsRequestedVerifyOption) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsRequestedVerifyOption)(nil)).Elem()
}

func (e BuildOptionsRequestedVerifyOption) ToBuildOptionsRequestedVerifyOptionOutput() BuildOptionsRequestedVerifyOptionOutput {
	return pulumi.ToOutput(e).(BuildOptionsRequestedVerifyOptionOutput)
}

func (e BuildOptionsRequestedVerifyOption) ToBuildOptionsRequestedVerifyOptionOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsRequestedVerifyOptionOutput)
}

func (e BuildOptionsRequestedVerifyOption) ToBuildOptionsRequestedVerifyOptionPtrOutput() BuildOptionsRequestedVerifyOptionPtrOutput {
	return e.ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(context.Background())
}

func (e BuildOptionsRequestedVerifyOption) ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionPtrOutput {
	return BuildOptionsRequestedVerifyOption(e).ToBuildOptionsRequestedVerifyOptionOutputWithContext(ctx).ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(ctx)
}

func (e BuildOptionsRequestedVerifyOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsRequestedVerifyOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsRequestedVerifyOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsRequestedVerifyOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsRequestedVerifyOptionOutput struct{ *pulumi.OutputState }

func (BuildOptionsRequestedVerifyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsRequestedVerifyOption)(nil)).Elem()
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToBuildOptionsRequestedVerifyOptionOutput() BuildOptionsRequestedVerifyOptionOutput {
	return o
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToBuildOptionsRequestedVerifyOptionOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionOutput {
	return o
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToBuildOptionsRequestedVerifyOptionPtrOutput() BuildOptionsRequestedVerifyOptionPtrOutput {
	return o.ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(context.Background())
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsRequestedVerifyOption) *BuildOptionsRequestedVerifyOption {
		return &v
	}).(BuildOptionsRequestedVerifyOptionPtrOutput)
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsRequestedVerifyOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsRequestedVerifyOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsRequestedVerifyOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsRequestedVerifyOptionPtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsRequestedVerifyOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsRequestedVerifyOption)(nil)).Elem()
}

func (o BuildOptionsRequestedVerifyOptionPtrOutput) ToBuildOptionsRequestedVerifyOptionPtrOutput() BuildOptionsRequestedVerifyOptionPtrOutput {
	return o
}

func (o BuildOptionsRequestedVerifyOptionPtrOutput) ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionPtrOutput {
	return o
}

func (o BuildOptionsRequestedVerifyOptionPtrOutput) Elem() BuildOptionsRequestedVerifyOptionOutput {
	return o.ApplyT(func(v *BuildOptionsRequestedVerifyOption) BuildOptionsRequestedVerifyOption {
		if v != nil {
			return *v
		}
		var ret BuildOptionsRequestedVerifyOption
		return ret
	}).(BuildOptionsRequestedVerifyOptionOutput)
}

func (o BuildOptionsRequestedVerifyOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsRequestedVerifyOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsRequestedVerifyOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsRequestedVerifyOptionInput is an input type that accepts BuildOptionsRequestedVerifyOptionArgs and BuildOptionsRequestedVerifyOptionOutput values.
// You can construct a concrete instance of `BuildOptionsRequestedVerifyOptionInput` via:
//
//	BuildOptionsRequestedVerifyOptionArgs{...}
type BuildOptionsRequestedVerifyOptionInput interface {
	pulumi.Input

	ToBuildOptionsRequestedVerifyOptionOutput() BuildOptionsRequestedVerifyOptionOutput
	ToBuildOptionsRequestedVerifyOptionOutputWithContext(context.Context) BuildOptionsRequestedVerifyOptionOutput
}

var buildOptionsRequestedVerifyOptionPtrType = reflect.TypeOf((**BuildOptionsRequestedVerifyOption)(nil)).Elem()

type BuildOptionsRequestedVerifyOptionPtrInput interface {
	pulumi.Input

	ToBuildOptionsRequestedVerifyOptionPtrOutput() BuildOptionsRequestedVerifyOptionPtrOutput
	ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(context.Context) BuildOptionsRequestedVerifyOptionPtrOutput
}

type buildOptionsRequestedVerifyOptionPtr string

func BuildOptionsRequestedVerifyOptionPtr(v string) BuildOptionsRequestedVerifyOptionPtrInput {
	return (*buildOptionsRequestedVerifyOptionPtr)(&v)
}

func (*buildOptionsRequestedVerifyOptionPtr) ElementType() reflect.Type {
	return buildOptionsRequestedVerifyOptionPtrType
}

func (in *buildOptionsRequestedVerifyOptionPtr) ToBuildOptionsRequestedVerifyOptionPtrOutput() BuildOptionsRequestedVerifyOptionPtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsRequestedVerifyOptionPtrOutput)
}

func (in *buildOptionsRequestedVerifyOptionPtr) ToBuildOptionsRequestedVerifyOptionPtrOutputWithContext(ctx context.Context) BuildOptionsRequestedVerifyOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsRequestedVerifyOptionPtrOutput)
}

type BuildOptionsSourceProvenanceHashItem string

const (
	// No hash requested.
	BuildOptionsSourceProvenanceHashItemNone = BuildOptionsSourceProvenanceHashItem("NONE")
	// Use a sha256 hash.
	BuildOptionsSourceProvenanceHashItemSha256 = BuildOptionsSourceProvenanceHashItem("SHA256")
	// Use a md5 hash.
	BuildOptionsSourceProvenanceHashItemMd5 = BuildOptionsSourceProvenanceHashItem("MD5")
)

func (BuildOptionsSourceProvenanceHashItem) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsSourceProvenanceHashItem)(nil)).Elem()
}

func (e BuildOptionsSourceProvenanceHashItem) ToBuildOptionsSourceProvenanceHashItemOutput() BuildOptionsSourceProvenanceHashItemOutput {
	return pulumi.ToOutput(e).(BuildOptionsSourceProvenanceHashItemOutput)
}

func (e BuildOptionsSourceProvenanceHashItem) ToBuildOptionsSourceProvenanceHashItemOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsSourceProvenanceHashItemOutput)
}

func (e BuildOptionsSourceProvenanceHashItem) ToBuildOptionsSourceProvenanceHashItemPtrOutput() BuildOptionsSourceProvenanceHashItemPtrOutput {
	return e.ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(context.Background())
}

func (e BuildOptionsSourceProvenanceHashItem) ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemPtrOutput {
	return BuildOptionsSourceProvenanceHashItem(e).ToBuildOptionsSourceProvenanceHashItemOutputWithContext(ctx).ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(ctx)
}

func (e BuildOptionsSourceProvenanceHashItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsSourceProvenanceHashItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsSourceProvenanceHashItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsSourceProvenanceHashItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsSourceProvenanceHashItemOutput struct{ *pulumi.OutputState }

func (BuildOptionsSourceProvenanceHashItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsSourceProvenanceHashItem)(nil)).Elem()
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToBuildOptionsSourceProvenanceHashItemOutput() BuildOptionsSourceProvenanceHashItemOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToBuildOptionsSourceProvenanceHashItemOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToBuildOptionsSourceProvenanceHashItemPtrOutput() BuildOptionsSourceProvenanceHashItemPtrOutput {
	return o.ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsSourceProvenanceHashItem) *BuildOptionsSourceProvenanceHashItem {
		return &v
	}).(BuildOptionsSourceProvenanceHashItemPtrOutput)
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsSourceProvenanceHashItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSourceProvenanceHashItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsSourceProvenanceHashItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsSourceProvenanceHashItemPtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsSourceProvenanceHashItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsSourceProvenanceHashItem)(nil)).Elem()
}

func (o BuildOptionsSourceProvenanceHashItemPtrOutput) ToBuildOptionsSourceProvenanceHashItemPtrOutput() BuildOptionsSourceProvenanceHashItemPtrOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemPtrOutput) ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemPtrOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemPtrOutput) Elem() BuildOptionsSourceProvenanceHashItemOutput {
	return o.ApplyT(func(v *BuildOptionsSourceProvenanceHashItem) BuildOptionsSourceProvenanceHashItem {
		if v != nil {
			return *v
		}
		var ret BuildOptionsSourceProvenanceHashItem
		return ret
	}).(BuildOptionsSourceProvenanceHashItemOutput)
}

func (o BuildOptionsSourceProvenanceHashItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSourceProvenanceHashItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsSourceProvenanceHashItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsSourceProvenanceHashItemInput is an input type that accepts BuildOptionsSourceProvenanceHashItemArgs and BuildOptionsSourceProvenanceHashItemOutput values.
// You can construct a concrete instance of `BuildOptionsSourceProvenanceHashItemInput` via:
//
//	BuildOptionsSourceProvenanceHashItemArgs{...}
type BuildOptionsSourceProvenanceHashItemInput interface {
	pulumi.Input

	ToBuildOptionsSourceProvenanceHashItemOutput() BuildOptionsSourceProvenanceHashItemOutput
	ToBuildOptionsSourceProvenanceHashItemOutputWithContext(context.Context) BuildOptionsSourceProvenanceHashItemOutput
}

var buildOptionsSourceProvenanceHashItemPtrType = reflect.TypeOf((**BuildOptionsSourceProvenanceHashItem)(nil)).Elem()

type BuildOptionsSourceProvenanceHashItemPtrInput interface {
	pulumi.Input

	ToBuildOptionsSourceProvenanceHashItemPtrOutput() BuildOptionsSourceProvenanceHashItemPtrOutput
	ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(context.Context) BuildOptionsSourceProvenanceHashItemPtrOutput
}

type buildOptionsSourceProvenanceHashItemPtr string

func BuildOptionsSourceProvenanceHashItemPtr(v string) BuildOptionsSourceProvenanceHashItemPtrInput {
	return (*buildOptionsSourceProvenanceHashItemPtr)(&v)
}

func (*buildOptionsSourceProvenanceHashItemPtr) ElementType() reflect.Type {
	return buildOptionsSourceProvenanceHashItemPtrType
}

func (in *buildOptionsSourceProvenanceHashItemPtr) ToBuildOptionsSourceProvenanceHashItemPtrOutput() BuildOptionsSourceProvenanceHashItemPtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsSourceProvenanceHashItemPtrOutput)
}

func (in *buildOptionsSourceProvenanceHashItemPtr) ToBuildOptionsSourceProvenanceHashItemPtrOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsSourceProvenanceHashItemPtrOutput)
}

// BuildOptionsSourceProvenanceHashItemArrayInput is an input type that accepts BuildOptionsSourceProvenanceHashItemArray and BuildOptionsSourceProvenanceHashItemArrayOutput values.
// You can construct a concrete instance of `BuildOptionsSourceProvenanceHashItemArrayInput` via:
//
//	BuildOptionsSourceProvenanceHashItemArray{ BuildOptionsSourceProvenanceHashItemArgs{...} }
type BuildOptionsSourceProvenanceHashItemArrayInput interface {
	pulumi.Input

	ToBuildOptionsSourceProvenanceHashItemArrayOutput() BuildOptionsSourceProvenanceHashItemArrayOutput
	ToBuildOptionsSourceProvenanceHashItemArrayOutputWithContext(context.Context) BuildOptionsSourceProvenanceHashItemArrayOutput
}

type BuildOptionsSourceProvenanceHashItemArray []BuildOptionsSourceProvenanceHashItem

func (BuildOptionsSourceProvenanceHashItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildOptionsSourceProvenanceHashItem)(nil)).Elem()
}

func (i BuildOptionsSourceProvenanceHashItemArray) ToBuildOptionsSourceProvenanceHashItemArrayOutput() BuildOptionsSourceProvenanceHashItemArrayOutput {
	return i.ToBuildOptionsSourceProvenanceHashItemArrayOutputWithContext(context.Background())
}

func (i BuildOptionsSourceProvenanceHashItemArray) ToBuildOptionsSourceProvenanceHashItemArrayOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildOptionsSourceProvenanceHashItemArrayOutput)
}

type BuildOptionsSourceProvenanceHashItemArrayOutput struct{ *pulumi.OutputState }

func (BuildOptionsSourceProvenanceHashItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildOptionsSourceProvenanceHashItem)(nil)).Elem()
}

func (o BuildOptionsSourceProvenanceHashItemArrayOutput) ToBuildOptionsSourceProvenanceHashItemArrayOutput() BuildOptionsSourceProvenanceHashItemArrayOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemArrayOutput) ToBuildOptionsSourceProvenanceHashItemArrayOutputWithContext(ctx context.Context) BuildOptionsSourceProvenanceHashItemArrayOutput {
	return o
}

func (o BuildOptionsSourceProvenanceHashItemArrayOutput) Index(i pulumi.IntInput) BuildOptionsSourceProvenanceHashItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildOptionsSourceProvenanceHashItem {
		return vs[0].([]BuildOptionsSourceProvenanceHashItem)[vs[1].(int)]
	}).(BuildOptionsSourceProvenanceHashItemOutput)
}

// Option to specify behavior when there is an error in the substitution checks. NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden in the build configuration file.
type BuildOptionsSubstitutionOption string

const (
	// Fails the build if error in substitutions checks, like missing a substitution in the template or in the map.
	BuildOptionsSubstitutionOptionMustMatch = BuildOptionsSubstitutionOption("MUST_MATCH")
	// Do not fail the build if error in substitutions checks.
	BuildOptionsSubstitutionOptionAllowLoose = BuildOptionsSubstitutionOption("ALLOW_LOOSE")
)

func (BuildOptionsSubstitutionOption) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsSubstitutionOption)(nil)).Elem()
}

func (e BuildOptionsSubstitutionOption) ToBuildOptionsSubstitutionOptionOutput() BuildOptionsSubstitutionOptionOutput {
	return pulumi.ToOutput(e).(BuildOptionsSubstitutionOptionOutput)
}

func (e BuildOptionsSubstitutionOption) ToBuildOptionsSubstitutionOptionOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BuildOptionsSubstitutionOptionOutput)
}

func (e BuildOptionsSubstitutionOption) ToBuildOptionsSubstitutionOptionPtrOutput() BuildOptionsSubstitutionOptionPtrOutput {
	return e.ToBuildOptionsSubstitutionOptionPtrOutputWithContext(context.Background())
}

func (e BuildOptionsSubstitutionOption) ToBuildOptionsSubstitutionOptionPtrOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionPtrOutput {
	return BuildOptionsSubstitutionOption(e).ToBuildOptionsSubstitutionOptionOutputWithContext(ctx).ToBuildOptionsSubstitutionOptionPtrOutputWithContext(ctx)
}

func (e BuildOptionsSubstitutionOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsSubstitutionOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BuildOptionsSubstitutionOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BuildOptionsSubstitutionOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BuildOptionsSubstitutionOptionOutput struct{ *pulumi.OutputState }

func (BuildOptionsSubstitutionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildOptionsSubstitutionOption)(nil)).Elem()
}

func (o BuildOptionsSubstitutionOptionOutput) ToBuildOptionsSubstitutionOptionOutput() BuildOptionsSubstitutionOptionOutput {
	return o
}

func (o BuildOptionsSubstitutionOptionOutput) ToBuildOptionsSubstitutionOptionOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionOutput {
	return o
}

func (o BuildOptionsSubstitutionOptionOutput) ToBuildOptionsSubstitutionOptionPtrOutput() BuildOptionsSubstitutionOptionPtrOutput {
	return o.ToBuildOptionsSubstitutionOptionPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSubstitutionOptionOutput) ToBuildOptionsSubstitutionOptionPtrOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BuildOptionsSubstitutionOption) *BuildOptionsSubstitutionOption {
		return &v
	}).(BuildOptionsSubstitutionOptionPtrOutput)
}

func (o BuildOptionsSubstitutionOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BuildOptionsSubstitutionOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsSubstitutionOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BuildOptionsSubstitutionOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSubstitutionOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BuildOptionsSubstitutionOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BuildOptionsSubstitutionOptionPtrOutput struct{ *pulumi.OutputState }

func (BuildOptionsSubstitutionOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildOptionsSubstitutionOption)(nil)).Elem()
}

func (o BuildOptionsSubstitutionOptionPtrOutput) ToBuildOptionsSubstitutionOptionPtrOutput() BuildOptionsSubstitutionOptionPtrOutput {
	return o
}

func (o BuildOptionsSubstitutionOptionPtrOutput) ToBuildOptionsSubstitutionOptionPtrOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionPtrOutput {
	return o
}

func (o BuildOptionsSubstitutionOptionPtrOutput) Elem() BuildOptionsSubstitutionOptionOutput {
	return o.ApplyT(func(v *BuildOptionsSubstitutionOption) BuildOptionsSubstitutionOption {
		if v != nil {
			return *v
		}
		var ret BuildOptionsSubstitutionOption
		return ret
	}).(BuildOptionsSubstitutionOptionOutput)
}

func (o BuildOptionsSubstitutionOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BuildOptionsSubstitutionOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BuildOptionsSubstitutionOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BuildOptionsSubstitutionOptionInput is an input type that accepts BuildOptionsSubstitutionOptionArgs and BuildOptionsSubstitutionOptionOutput values.
// You can construct a concrete instance of `BuildOptionsSubstitutionOptionInput` via:
//
//	BuildOptionsSubstitutionOptionArgs{...}
type BuildOptionsSubstitutionOptionInput interface {
	pulumi.Input

	ToBuildOptionsSubstitutionOptionOutput() BuildOptionsSubstitutionOptionOutput
	ToBuildOptionsSubstitutionOptionOutputWithContext(context.Context) BuildOptionsSubstitutionOptionOutput
}

var buildOptionsSubstitutionOptionPtrType = reflect.TypeOf((**BuildOptionsSubstitutionOption)(nil)).Elem()

type BuildOptionsSubstitutionOptionPtrInput interface {
	pulumi.Input

	ToBuildOptionsSubstitutionOptionPtrOutput() BuildOptionsSubstitutionOptionPtrOutput
	ToBuildOptionsSubstitutionOptionPtrOutputWithContext(context.Context) BuildOptionsSubstitutionOptionPtrOutput
}

type buildOptionsSubstitutionOptionPtr string

func BuildOptionsSubstitutionOptionPtr(v string) BuildOptionsSubstitutionOptionPtrInput {
	return (*buildOptionsSubstitutionOptionPtr)(&v)
}

func (*buildOptionsSubstitutionOptionPtr) ElementType() reflect.Type {
	return buildOptionsSubstitutionOptionPtrType
}

func (in *buildOptionsSubstitutionOptionPtr) ToBuildOptionsSubstitutionOptionPtrOutput() BuildOptionsSubstitutionOptionPtrOutput {
	return pulumi.ToOutput(in).(BuildOptionsSubstitutionOptionPtrOutput)
}

func (in *buildOptionsSubstitutionOptionPtr) ToBuildOptionsSubstitutionOptionPtrOutputWithContext(ctx context.Context) BuildOptionsSubstitutionOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BuildOptionsSubstitutionOptionPtrOutput)
}

// See RepoType above.
type GitFileSourceRepoType string

const (
	// The default, unknown repo type.
	GitFileSourceRepoTypeUnknown = GitFileSourceRepoType("UNKNOWN")
	// A Google Cloud Source Repositories-hosted repo.
	GitFileSourceRepoTypeCloudSourceRepositories = GitFileSourceRepoType("CLOUD_SOURCE_REPOSITORIES")
	// A GitHub-hosted repo not necessarily on "github.com" (i.e. GitHub Enterprise).
	GitFileSourceRepoTypeGithub = GitFileSourceRepoType("GITHUB")
	// A Bitbucket Server-hosted repo.
	GitFileSourceRepoTypeBitbucketServer = GitFileSourceRepoType("BITBUCKET_SERVER")
	// A GitLab-hosted repo.
	GitFileSourceRepoTypeGitlab = GitFileSourceRepoType("GITLAB")
)

func (GitFileSourceRepoType) ElementType() reflect.Type {
	return reflect.TypeOf((*GitFileSourceRepoType)(nil)).Elem()
}

func (e GitFileSourceRepoType) ToGitFileSourceRepoTypeOutput() GitFileSourceRepoTypeOutput {
	return pulumi.ToOutput(e).(GitFileSourceRepoTypeOutput)
}

func (e GitFileSourceRepoType) ToGitFileSourceRepoTypeOutputWithContext(ctx context.Context) GitFileSourceRepoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GitFileSourceRepoTypeOutput)
}

func (e GitFileSourceRepoType) ToGitFileSourceRepoTypePtrOutput() GitFileSourceRepoTypePtrOutput {
	return e.ToGitFileSourceRepoTypePtrOutputWithContext(context.Background())
}

func (e GitFileSourceRepoType) ToGitFileSourceRepoTypePtrOutputWithContext(ctx context.Context) GitFileSourceRepoTypePtrOutput {
	return GitFileSourceRepoType(e).ToGitFileSourceRepoTypeOutputWithContext(ctx).ToGitFileSourceRepoTypePtrOutputWithContext(ctx)
}

func (e GitFileSourceRepoType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitFileSourceRepoType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitFileSourceRepoType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GitFileSourceRepoType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GitFileSourceRepoTypeOutput struct{ *pulumi.OutputState }

func (GitFileSourceRepoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitFileSourceRepoType)(nil)).Elem()
}

func (o GitFileSourceRepoTypeOutput) ToGitFileSourceRepoTypeOutput() GitFileSourceRepoTypeOutput {
	return o
}

func (o GitFileSourceRepoTypeOutput) ToGitFileSourceRepoTypeOutputWithContext(ctx context.Context) GitFileSourceRepoTypeOutput {
	return o
}

func (o GitFileSourceRepoTypeOutput) ToGitFileSourceRepoTypePtrOutput() GitFileSourceRepoTypePtrOutput {
	return o.ToGitFileSourceRepoTypePtrOutputWithContext(context.Background())
}

func (o GitFileSourceRepoTypeOutput) ToGitFileSourceRepoTypePtrOutputWithContext(ctx context.Context) GitFileSourceRepoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitFileSourceRepoType) *GitFileSourceRepoType {
		return &v
	}).(GitFileSourceRepoTypePtrOutput)
}

func (o GitFileSourceRepoTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GitFileSourceRepoTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitFileSourceRepoType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GitFileSourceRepoTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitFileSourceRepoTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitFileSourceRepoType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GitFileSourceRepoTypePtrOutput struct{ *pulumi.OutputState }

func (GitFileSourceRepoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitFileSourceRepoType)(nil)).Elem()
}

func (o GitFileSourceRepoTypePtrOutput) ToGitFileSourceRepoTypePtrOutput() GitFileSourceRepoTypePtrOutput {
	return o
}

func (o GitFileSourceRepoTypePtrOutput) ToGitFileSourceRepoTypePtrOutputWithContext(ctx context.Context) GitFileSourceRepoTypePtrOutput {
	return o
}

func (o GitFileSourceRepoTypePtrOutput) Elem() GitFileSourceRepoTypeOutput {
	return o.ApplyT(func(v *GitFileSourceRepoType) GitFileSourceRepoType {
		if v != nil {
			return *v
		}
		var ret GitFileSourceRepoType
		return ret
	}).(GitFileSourceRepoTypeOutput)
}

func (o GitFileSourceRepoTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitFileSourceRepoTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GitFileSourceRepoType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GitFileSourceRepoTypeInput is an input type that accepts GitFileSourceRepoTypeArgs and GitFileSourceRepoTypeOutput values.
// You can construct a concrete instance of `GitFileSourceRepoTypeInput` via:
//
//	GitFileSourceRepoTypeArgs{...}
type GitFileSourceRepoTypeInput interface {
	pulumi.Input

	ToGitFileSourceRepoTypeOutput() GitFileSourceRepoTypeOutput
	ToGitFileSourceRepoTypeOutputWithContext(context.Context) GitFileSourceRepoTypeOutput
}

var gitFileSourceRepoTypePtrType = reflect.TypeOf((**GitFileSourceRepoType)(nil)).Elem()

type GitFileSourceRepoTypePtrInput interface {
	pulumi.Input

	ToGitFileSourceRepoTypePtrOutput() GitFileSourceRepoTypePtrOutput
	ToGitFileSourceRepoTypePtrOutputWithContext(context.Context) GitFileSourceRepoTypePtrOutput
}

type gitFileSourceRepoTypePtr string

func GitFileSourceRepoTypePtr(v string) GitFileSourceRepoTypePtrInput {
	return (*gitFileSourceRepoTypePtr)(&v)
}

func (*gitFileSourceRepoTypePtr) ElementType() reflect.Type {
	return gitFileSourceRepoTypePtrType
}

func (in *gitFileSourceRepoTypePtr) ToGitFileSourceRepoTypePtrOutput() GitFileSourceRepoTypePtrOutput {
	return pulumi.ToOutput(in).(GitFileSourceRepoTypePtrOutput)
}

func (in *gitFileSourceRepoTypePtr) ToGitFileSourceRepoTypePtrOutputWithContext(ctx context.Context) GitFileSourceRepoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GitFileSourceRepoTypePtrOutput)
}

// See RepoType below.
type GitRepoSourceRepoType string

const (
	// The default, unknown repo type.
	GitRepoSourceRepoTypeUnknown = GitRepoSourceRepoType("UNKNOWN")
	// A Google Cloud Source Repositories-hosted repo.
	GitRepoSourceRepoTypeCloudSourceRepositories = GitRepoSourceRepoType("CLOUD_SOURCE_REPOSITORIES")
	// A GitHub-hosted repo not necessarily on "github.com" (i.e. GitHub Enterprise).
	GitRepoSourceRepoTypeGithub = GitRepoSourceRepoType("GITHUB")
	// A Bitbucket Server-hosted repo.
	GitRepoSourceRepoTypeBitbucketServer = GitRepoSourceRepoType("BITBUCKET_SERVER")
	// A GitLab-hosted repo.
	GitRepoSourceRepoTypeGitlab = GitRepoSourceRepoType("GITLAB")
)

func (GitRepoSourceRepoType) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRepoSourceRepoType)(nil)).Elem()
}

func (e GitRepoSourceRepoType) ToGitRepoSourceRepoTypeOutput() GitRepoSourceRepoTypeOutput {
	return pulumi.ToOutput(e).(GitRepoSourceRepoTypeOutput)
}

func (e GitRepoSourceRepoType) ToGitRepoSourceRepoTypeOutputWithContext(ctx context.Context) GitRepoSourceRepoTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GitRepoSourceRepoTypeOutput)
}

func (e GitRepoSourceRepoType) ToGitRepoSourceRepoTypePtrOutput() GitRepoSourceRepoTypePtrOutput {
	return e.ToGitRepoSourceRepoTypePtrOutputWithContext(context.Background())
}

func (e GitRepoSourceRepoType) ToGitRepoSourceRepoTypePtrOutputWithContext(ctx context.Context) GitRepoSourceRepoTypePtrOutput {
	return GitRepoSourceRepoType(e).ToGitRepoSourceRepoTypeOutputWithContext(ctx).ToGitRepoSourceRepoTypePtrOutputWithContext(ctx)
}

func (e GitRepoSourceRepoType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitRepoSourceRepoType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GitRepoSourceRepoType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GitRepoSourceRepoType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GitRepoSourceRepoTypeOutput struct{ *pulumi.OutputState }

func (GitRepoSourceRepoTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitRepoSourceRepoType)(nil)).Elem()
}

func (o GitRepoSourceRepoTypeOutput) ToGitRepoSourceRepoTypeOutput() GitRepoSourceRepoTypeOutput {
	return o
}

func (o GitRepoSourceRepoTypeOutput) ToGitRepoSourceRepoTypeOutputWithContext(ctx context.Context) GitRepoSourceRepoTypeOutput {
	return o
}

func (o GitRepoSourceRepoTypeOutput) ToGitRepoSourceRepoTypePtrOutput() GitRepoSourceRepoTypePtrOutput {
	return o.ToGitRepoSourceRepoTypePtrOutputWithContext(context.Background())
}

func (o GitRepoSourceRepoTypeOutput) ToGitRepoSourceRepoTypePtrOutputWithContext(ctx context.Context) GitRepoSourceRepoTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitRepoSourceRepoType) *GitRepoSourceRepoType {
		return &v
	}).(GitRepoSourceRepoTypePtrOutput)
}

func (o GitRepoSourceRepoTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GitRepoSourceRepoTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitRepoSourceRepoType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GitRepoSourceRepoTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitRepoSourceRepoTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GitRepoSourceRepoType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GitRepoSourceRepoTypePtrOutput struct{ *pulumi.OutputState }

func (GitRepoSourceRepoTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitRepoSourceRepoType)(nil)).Elem()
}

func (o GitRepoSourceRepoTypePtrOutput) ToGitRepoSourceRepoTypePtrOutput() GitRepoSourceRepoTypePtrOutput {
	return o
}

func (o GitRepoSourceRepoTypePtrOutput) ToGitRepoSourceRepoTypePtrOutputWithContext(ctx context.Context) GitRepoSourceRepoTypePtrOutput {
	return o
}

func (o GitRepoSourceRepoTypePtrOutput) Elem() GitRepoSourceRepoTypeOutput {
	return o.ApplyT(func(v *GitRepoSourceRepoType) GitRepoSourceRepoType {
		if v != nil {
			return *v
		}
		var ret GitRepoSourceRepoType
		return ret
	}).(GitRepoSourceRepoTypeOutput)
}

func (o GitRepoSourceRepoTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GitRepoSourceRepoTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GitRepoSourceRepoType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GitRepoSourceRepoTypeInput is an input type that accepts GitRepoSourceRepoTypeArgs and GitRepoSourceRepoTypeOutput values.
// You can construct a concrete instance of `GitRepoSourceRepoTypeInput` via:
//
//	GitRepoSourceRepoTypeArgs{...}
type GitRepoSourceRepoTypeInput interface {
	pulumi.Input

	ToGitRepoSourceRepoTypeOutput() GitRepoSourceRepoTypeOutput
	ToGitRepoSourceRepoTypeOutputWithContext(context.Context) GitRepoSourceRepoTypeOutput
}

var gitRepoSourceRepoTypePtrType = reflect.TypeOf((**GitRepoSourceRepoType)(nil)).Elem()

type GitRepoSourceRepoTypePtrInput interface {
	pulumi.Input

	ToGitRepoSourceRepoTypePtrOutput() GitRepoSourceRepoTypePtrOutput
	ToGitRepoSourceRepoTypePtrOutputWithContext(context.Context) GitRepoSourceRepoTypePtrOutput
}

type gitRepoSourceRepoTypePtr string

func GitRepoSourceRepoTypePtr(v string) GitRepoSourceRepoTypePtrInput {
	return (*gitRepoSourceRepoTypePtr)(&v)
}

func (*gitRepoSourceRepoTypePtr) ElementType() reflect.Type {
	return gitRepoSourceRepoTypePtrType
}

func (in *gitRepoSourceRepoTypePtr) ToGitRepoSourceRepoTypePtrOutput() GitRepoSourceRepoTypePtrOutput {
	return pulumi.ToOutput(in).(GitRepoSourceRepoTypePtrOutput)
}

func (in *gitRepoSourceRepoTypePtr) ToGitRepoSourceRepoTypePtrOutputWithContext(ctx context.Context) GitRepoSourceRepoTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GitRepoSourceRepoTypePtrOutput)
}

// Option to configure network egress for the workers.
type NetworkConfigEgressOption string

const (
	// If set, defaults to PUBLIC_EGRESS.
	NetworkConfigEgressOptionEgressOptionUnspecified = NetworkConfigEgressOption("EGRESS_OPTION_UNSPECIFIED")
	// If set, workers are created without any public address, which prevents network egress to public IPs unless a network proxy is configured.
	NetworkConfigEgressOptionNoPublicEgress = NetworkConfigEgressOption("NO_PUBLIC_EGRESS")
	// If set, workers are created with a public address which allows for public internet egress.
	NetworkConfigEgressOptionPublicEgress = NetworkConfigEgressOption("PUBLIC_EGRESS")
)

func (NetworkConfigEgressOption) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigEgressOption)(nil)).Elem()
}

func (e NetworkConfigEgressOption) ToNetworkConfigEgressOptionOutput() NetworkConfigEgressOptionOutput {
	return pulumi.ToOutput(e).(NetworkConfigEgressOptionOutput)
}

func (e NetworkConfigEgressOption) ToNetworkConfigEgressOptionOutputWithContext(ctx context.Context) NetworkConfigEgressOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkConfigEgressOptionOutput)
}

func (e NetworkConfigEgressOption) ToNetworkConfigEgressOptionPtrOutput() NetworkConfigEgressOptionPtrOutput {
	return e.ToNetworkConfigEgressOptionPtrOutputWithContext(context.Background())
}

func (e NetworkConfigEgressOption) ToNetworkConfigEgressOptionPtrOutputWithContext(ctx context.Context) NetworkConfigEgressOptionPtrOutput {
	return NetworkConfigEgressOption(e).ToNetworkConfigEgressOptionOutputWithContext(ctx).ToNetworkConfigEgressOptionPtrOutputWithContext(ctx)
}

func (e NetworkConfigEgressOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigEgressOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkConfigEgressOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkConfigEgressOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkConfigEgressOptionOutput struct{ *pulumi.OutputState }

func (NetworkConfigEgressOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkConfigEgressOption)(nil)).Elem()
}

func (o NetworkConfigEgressOptionOutput) ToNetworkConfigEgressOptionOutput() NetworkConfigEgressOptionOutput {
	return o
}

func (o NetworkConfigEgressOptionOutput) ToNetworkConfigEgressOptionOutputWithContext(ctx context.Context) NetworkConfigEgressOptionOutput {
	return o
}

func (o NetworkConfigEgressOptionOutput) ToNetworkConfigEgressOptionPtrOutput() NetworkConfigEgressOptionPtrOutput {
	return o.ToNetworkConfigEgressOptionPtrOutputWithContext(context.Background())
}

func (o NetworkConfigEgressOptionOutput) ToNetworkConfigEgressOptionPtrOutputWithContext(ctx context.Context) NetworkConfigEgressOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkConfigEgressOption) *NetworkConfigEgressOption {
		return &v
	}).(NetworkConfigEgressOptionPtrOutput)
}

func (o NetworkConfigEgressOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkConfigEgressOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigEgressOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkConfigEgressOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigEgressOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkConfigEgressOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkConfigEgressOptionPtrOutput struct{ *pulumi.OutputState }

func (NetworkConfigEgressOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConfigEgressOption)(nil)).Elem()
}

func (o NetworkConfigEgressOptionPtrOutput) ToNetworkConfigEgressOptionPtrOutput() NetworkConfigEgressOptionPtrOutput {
	return o
}

func (o NetworkConfigEgressOptionPtrOutput) ToNetworkConfigEgressOptionPtrOutputWithContext(ctx context.Context) NetworkConfigEgressOptionPtrOutput {
	return o
}

func (o NetworkConfigEgressOptionPtrOutput) Elem() NetworkConfigEgressOptionOutput {
	return o.ApplyT(func(v *NetworkConfigEgressOption) NetworkConfigEgressOption {
		if v != nil {
			return *v
		}
		var ret NetworkConfigEgressOption
		return ret
	}).(NetworkConfigEgressOptionOutput)
}

func (o NetworkConfigEgressOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkConfigEgressOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkConfigEgressOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NetworkConfigEgressOptionInput is an input type that accepts NetworkConfigEgressOptionArgs and NetworkConfigEgressOptionOutput values.
// You can construct a concrete instance of `NetworkConfigEgressOptionInput` via:
//
//	NetworkConfigEgressOptionArgs{...}
type NetworkConfigEgressOptionInput interface {
	pulumi.Input

	ToNetworkConfigEgressOptionOutput() NetworkConfigEgressOptionOutput
	ToNetworkConfigEgressOptionOutputWithContext(context.Context) NetworkConfigEgressOptionOutput
}

var networkConfigEgressOptionPtrType = reflect.TypeOf((**NetworkConfigEgressOption)(nil)).Elem()

type NetworkConfigEgressOptionPtrInput interface {
	pulumi.Input

	ToNetworkConfigEgressOptionPtrOutput() NetworkConfigEgressOptionPtrOutput
	ToNetworkConfigEgressOptionPtrOutputWithContext(context.Context) NetworkConfigEgressOptionPtrOutput
}

type networkConfigEgressOptionPtr string

func NetworkConfigEgressOptionPtr(v string) NetworkConfigEgressOptionPtrInput {
	return (*networkConfigEgressOptionPtr)(&v)
}

func (*networkConfigEgressOptionPtr) ElementType() reflect.Type {
	return networkConfigEgressOptionPtrType
}

func (in *networkConfigEgressOptionPtr) ToNetworkConfigEgressOptionPtrOutput() NetworkConfigEgressOptionPtrOutput {
	return pulumi.ToOutput(in).(NetworkConfigEgressOptionPtrOutput)
}

func (in *networkConfigEgressOptionPtr) ToNetworkConfigEgressOptionPtrOutputWithContext(ctx context.Context) NetworkConfigEgressOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkConfigEgressOptionPtrOutput)
}

// Potential issues with the underlying Pub/Sub subscription configuration. Only populated on get requests.
type PubsubConfigState string

const (
	// The subscription configuration has not been checked.
	PubsubConfigStateStateUnspecified = PubsubConfigState("STATE_UNSPECIFIED")
	// The Pub/Sub subscription is properly configured.
	PubsubConfigStateOk = PubsubConfigState("OK")
	// The subscription has been deleted.
	PubsubConfigStateSubscriptionDeleted = PubsubConfigState("SUBSCRIPTION_DELETED")
	// The topic has been deleted.
	PubsubConfigStateTopicDeleted = PubsubConfigState("TOPIC_DELETED")
	// Some of the subscription's field are misconfigured.
	PubsubConfigStateSubscriptionMisconfigured = PubsubConfigState("SUBSCRIPTION_MISCONFIGURED")
)

func (PubsubConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*PubsubConfigState)(nil)).Elem()
}

func (e PubsubConfigState) ToPubsubConfigStateOutput() PubsubConfigStateOutput {
	return pulumi.ToOutput(e).(PubsubConfigStateOutput)
}

func (e PubsubConfigState) ToPubsubConfigStateOutputWithContext(ctx context.Context) PubsubConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PubsubConfigStateOutput)
}

func (e PubsubConfigState) ToPubsubConfigStatePtrOutput() PubsubConfigStatePtrOutput {
	return e.ToPubsubConfigStatePtrOutputWithContext(context.Background())
}

func (e PubsubConfigState) ToPubsubConfigStatePtrOutputWithContext(ctx context.Context) PubsubConfigStatePtrOutput {
	return PubsubConfigState(e).ToPubsubConfigStateOutputWithContext(ctx).ToPubsubConfigStatePtrOutputWithContext(ctx)
}

func (e PubsubConfigState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PubsubConfigState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PubsubConfigState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PubsubConfigState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PubsubConfigStateOutput struct{ *pulumi.OutputState }

func (PubsubConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PubsubConfigState)(nil)).Elem()
}

func (o PubsubConfigStateOutput) ToPubsubConfigStateOutput() PubsubConfigStateOutput {
	return o
}

func (o PubsubConfigStateOutput) ToPubsubConfigStateOutputWithContext(ctx context.Context) PubsubConfigStateOutput {
	return o
}

func (o PubsubConfigStateOutput) ToPubsubConfigStatePtrOutput() PubsubConfigStatePtrOutput {
	return o.ToPubsubConfigStatePtrOutputWithContext(context.Background())
}

func (o PubsubConfigStateOutput) ToPubsubConfigStatePtrOutputWithContext(ctx context.Context) PubsubConfigStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PubsubConfigState) *PubsubConfigState {
		return &v
	}).(PubsubConfigStatePtrOutput)
}

func (o PubsubConfigStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PubsubConfigStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PubsubConfigState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PubsubConfigStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PubsubConfigStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PubsubConfigState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PubsubConfigStatePtrOutput struct{ *pulumi.OutputState }

func (PubsubConfigStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubConfigState)(nil)).Elem()
}

func (o PubsubConfigStatePtrOutput) ToPubsubConfigStatePtrOutput() PubsubConfigStatePtrOutput {
	return o
}

func (o PubsubConfigStatePtrOutput) ToPubsubConfigStatePtrOutputWithContext(ctx context.Context) PubsubConfigStatePtrOutput {
	return o
}

func (o PubsubConfigStatePtrOutput) Elem() PubsubConfigStateOutput {
	return o.ApplyT(func(v *PubsubConfigState) PubsubConfigState {
		if v != nil {
			return *v
		}
		var ret PubsubConfigState
		return ret
	}).(PubsubConfigStateOutput)
}

func (o PubsubConfigStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PubsubConfigStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PubsubConfigState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PubsubConfigStateInput is an input type that accepts PubsubConfigStateArgs and PubsubConfigStateOutput values.
// You can construct a concrete instance of `PubsubConfigStateInput` via:
//
//	PubsubConfigStateArgs{...}
type PubsubConfigStateInput interface {
	pulumi.Input

	ToPubsubConfigStateOutput() PubsubConfigStateOutput
	ToPubsubConfigStateOutputWithContext(context.Context) PubsubConfigStateOutput
}

var pubsubConfigStatePtrType = reflect.TypeOf((**PubsubConfigState)(nil)).Elem()

type PubsubConfigStatePtrInput interface {
	pulumi.Input

	ToPubsubConfigStatePtrOutput() PubsubConfigStatePtrOutput
	ToPubsubConfigStatePtrOutputWithContext(context.Context) PubsubConfigStatePtrOutput
}

type pubsubConfigStatePtr string

func PubsubConfigStatePtr(v string) PubsubConfigStatePtrInput {
	return (*pubsubConfigStatePtr)(&v)
}

func (*pubsubConfigStatePtr) ElementType() reflect.Type {
	return pubsubConfigStatePtrType
}

func (in *pubsubConfigStatePtr) ToPubsubConfigStatePtrOutput() PubsubConfigStatePtrOutput {
	return pulumi.ToOutput(in).(PubsubConfigStatePtrOutput)
}

func (in *pubsubConfigStatePtr) ToPubsubConfigStatePtrOutputWithContext(ctx context.Context) PubsubConfigStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PubsubConfigStatePtrOutput)
}

// Configure builds to run whether a repository owner or collaborator need to comment `/gcbrun`.
type PullRequestFilterCommentControl string

const (
	// Do not require comments on Pull Requests before builds are triggered.
	PullRequestFilterCommentControlCommentsDisabled = PullRequestFilterCommentControl("COMMENTS_DISABLED")
	// Enforce that repository owners or collaborators must comment on Pull Requests before builds are triggered.
	PullRequestFilterCommentControlCommentsEnabled = PullRequestFilterCommentControl("COMMENTS_ENABLED")
	// Enforce that repository owners or collaborators must comment on external contributors' Pull Requests before builds are triggered.
	PullRequestFilterCommentControlCommentsEnabledForExternalContributorsOnly = PullRequestFilterCommentControl("COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY")
)

func (PullRequestFilterCommentControl) ElementType() reflect.Type {
	return reflect.TypeOf((*PullRequestFilterCommentControl)(nil)).Elem()
}

func (e PullRequestFilterCommentControl) ToPullRequestFilterCommentControlOutput() PullRequestFilterCommentControlOutput {
	return pulumi.ToOutput(e).(PullRequestFilterCommentControlOutput)
}

func (e PullRequestFilterCommentControl) ToPullRequestFilterCommentControlOutputWithContext(ctx context.Context) PullRequestFilterCommentControlOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PullRequestFilterCommentControlOutput)
}

func (e PullRequestFilterCommentControl) ToPullRequestFilterCommentControlPtrOutput() PullRequestFilterCommentControlPtrOutput {
	return e.ToPullRequestFilterCommentControlPtrOutputWithContext(context.Background())
}

func (e PullRequestFilterCommentControl) ToPullRequestFilterCommentControlPtrOutputWithContext(ctx context.Context) PullRequestFilterCommentControlPtrOutput {
	return PullRequestFilterCommentControl(e).ToPullRequestFilterCommentControlOutputWithContext(ctx).ToPullRequestFilterCommentControlPtrOutputWithContext(ctx)
}

func (e PullRequestFilterCommentControl) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PullRequestFilterCommentControl) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PullRequestFilterCommentControl) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PullRequestFilterCommentControl) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PullRequestFilterCommentControlOutput struct{ *pulumi.OutputState }

func (PullRequestFilterCommentControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PullRequestFilterCommentControl)(nil)).Elem()
}

func (o PullRequestFilterCommentControlOutput) ToPullRequestFilterCommentControlOutput() PullRequestFilterCommentControlOutput {
	return o
}

func (o PullRequestFilterCommentControlOutput) ToPullRequestFilterCommentControlOutputWithContext(ctx context.Context) PullRequestFilterCommentControlOutput {
	return o
}

func (o PullRequestFilterCommentControlOutput) ToPullRequestFilterCommentControlPtrOutput() PullRequestFilterCommentControlPtrOutput {
	return o.ToPullRequestFilterCommentControlPtrOutputWithContext(context.Background())
}

func (o PullRequestFilterCommentControlOutput) ToPullRequestFilterCommentControlPtrOutputWithContext(ctx context.Context) PullRequestFilterCommentControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PullRequestFilterCommentControl) *PullRequestFilterCommentControl {
		return &v
	}).(PullRequestFilterCommentControlPtrOutput)
}

func (o PullRequestFilterCommentControlOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PullRequestFilterCommentControlOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PullRequestFilterCommentControl) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PullRequestFilterCommentControlOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PullRequestFilterCommentControlOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PullRequestFilterCommentControl) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PullRequestFilterCommentControlPtrOutput struct{ *pulumi.OutputState }

func (PullRequestFilterCommentControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PullRequestFilterCommentControl)(nil)).Elem()
}

func (o PullRequestFilterCommentControlPtrOutput) ToPullRequestFilterCommentControlPtrOutput() PullRequestFilterCommentControlPtrOutput {
	return o
}

func (o PullRequestFilterCommentControlPtrOutput) ToPullRequestFilterCommentControlPtrOutputWithContext(ctx context.Context) PullRequestFilterCommentControlPtrOutput {
	return o
}

func (o PullRequestFilterCommentControlPtrOutput) Elem() PullRequestFilterCommentControlOutput {
	return o.ApplyT(func(v *PullRequestFilterCommentControl) PullRequestFilterCommentControl {
		if v != nil {
			return *v
		}
		var ret PullRequestFilterCommentControl
		return ret
	}).(PullRequestFilterCommentControlOutput)
}

func (o PullRequestFilterCommentControlPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PullRequestFilterCommentControlPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PullRequestFilterCommentControl) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PullRequestFilterCommentControlInput is an input type that accepts PullRequestFilterCommentControlArgs and PullRequestFilterCommentControlOutput values.
// You can construct a concrete instance of `PullRequestFilterCommentControlInput` via:
//
//	PullRequestFilterCommentControlArgs{...}
type PullRequestFilterCommentControlInput interface {
	pulumi.Input

	ToPullRequestFilterCommentControlOutput() PullRequestFilterCommentControlOutput
	ToPullRequestFilterCommentControlOutputWithContext(context.Context) PullRequestFilterCommentControlOutput
}

var pullRequestFilterCommentControlPtrType = reflect.TypeOf((**PullRequestFilterCommentControl)(nil)).Elem()

type PullRequestFilterCommentControlPtrInput interface {
	pulumi.Input

	ToPullRequestFilterCommentControlPtrOutput() PullRequestFilterCommentControlPtrOutput
	ToPullRequestFilterCommentControlPtrOutputWithContext(context.Context) PullRequestFilterCommentControlPtrOutput
}

type pullRequestFilterCommentControlPtr string

func PullRequestFilterCommentControlPtr(v string) PullRequestFilterCommentControlPtrInput {
	return (*pullRequestFilterCommentControlPtr)(&v)
}

func (*pullRequestFilterCommentControlPtr) ElementType() reflect.Type {
	return pullRequestFilterCommentControlPtrType
}

func (in *pullRequestFilterCommentControlPtr) ToPullRequestFilterCommentControlPtrOutput() PullRequestFilterCommentControlPtrOutput {
	return pulumi.ToOutput(in).(PullRequestFilterCommentControlPtrOutput)
}

func (in *pullRequestFilterCommentControlPtr) ToPullRequestFilterCommentControlPtrOutputWithContext(ctx context.Context) PullRequestFilterCommentControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PullRequestFilterCommentControlPtrOutput)
}

// EventType allows the user to explicitly set the type of event to which this BuildTrigger should respond. This field will be validated against the rest of the configuration if it is set.
type TriggerEventType string

const (
	// EVENT_TYPE_UNSPECIFIED event_types are ignored.
	TriggerEventTypeEventTypeUnspecified = TriggerEventType("EVENT_TYPE_UNSPECIFIED")
	// REPO corresponds to the supported VCS integrations.
	TriggerEventTypeRepo = TriggerEventType("REPO")
	// WEBHOOK corresponds to webhook triggers.
	TriggerEventTypeWebhook = TriggerEventType("WEBHOOK")
	// PUBSUB corresponds to pubsub triggers.
	TriggerEventTypePubsub = TriggerEventType("PUBSUB")
	// MANUAL corresponds to manual-only invoked triggers.
	TriggerEventTypeManual = TriggerEventType("MANUAL")
)

func (TriggerEventType) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerEventType)(nil)).Elem()
}

func (e TriggerEventType) ToTriggerEventTypeOutput() TriggerEventTypeOutput {
	return pulumi.ToOutput(e).(TriggerEventTypeOutput)
}

func (e TriggerEventType) ToTriggerEventTypeOutputWithContext(ctx context.Context) TriggerEventTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerEventTypeOutput)
}

func (e TriggerEventType) ToTriggerEventTypePtrOutput() TriggerEventTypePtrOutput {
	return e.ToTriggerEventTypePtrOutputWithContext(context.Background())
}

func (e TriggerEventType) ToTriggerEventTypePtrOutputWithContext(ctx context.Context) TriggerEventTypePtrOutput {
	return TriggerEventType(e).ToTriggerEventTypeOutputWithContext(ctx).ToTriggerEventTypePtrOutputWithContext(ctx)
}

func (e TriggerEventType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerEventType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerEventType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerEventType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerEventTypeOutput struct{ *pulumi.OutputState }

func (TriggerEventTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerEventType)(nil)).Elem()
}

func (o TriggerEventTypeOutput) ToTriggerEventTypeOutput() TriggerEventTypeOutput {
	return o
}

func (o TriggerEventTypeOutput) ToTriggerEventTypeOutputWithContext(ctx context.Context) TriggerEventTypeOutput {
	return o
}

func (o TriggerEventTypeOutput) ToTriggerEventTypePtrOutput() TriggerEventTypePtrOutput {
	return o.ToTriggerEventTypePtrOutputWithContext(context.Background())
}

func (o TriggerEventTypeOutput) ToTriggerEventTypePtrOutputWithContext(ctx context.Context) TriggerEventTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerEventType) *TriggerEventType {
		return &v
	}).(TriggerEventTypePtrOutput)
}

func (o TriggerEventTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerEventTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerEventType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerEventTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerEventTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerEventType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerEventTypePtrOutput struct{ *pulumi.OutputState }

func (TriggerEventTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerEventType)(nil)).Elem()
}

func (o TriggerEventTypePtrOutput) ToTriggerEventTypePtrOutput() TriggerEventTypePtrOutput {
	return o
}

func (o TriggerEventTypePtrOutput) ToTriggerEventTypePtrOutputWithContext(ctx context.Context) TriggerEventTypePtrOutput {
	return o
}

func (o TriggerEventTypePtrOutput) Elem() TriggerEventTypeOutput {
	return o.ApplyT(func(v *TriggerEventType) TriggerEventType {
		if v != nil {
			return *v
		}
		var ret TriggerEventType
		return ret
	}).(TriggerEventTypeOutput)
}

func (o TriggerEventTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerEventTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerEventType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggerEventTypeInput is an input type that accepts TriggerEventTypeArgs and TriggerEventTypeOutput values.
// You can construct a concrete instance of `TriggerEventTypeInput` via:
//
//	TriggerEventTypeArgs{...}
type TriggerEventTypeInput interface {
	pulumi.Input

	ToTriggerEventTypeOutput() TriggerEventTypeOutput
	ToTriggerEventTypeOutputWithContext(context.Context) TriggerEventTypeOutput
}

var triggerEventTypePtrType = reflect.TypeOf((**TriggerEventType)(nil)).Elem()

type TriggerEventTypePtrInput interface {
	pulumi.Input

	ToTriggerEventTypePtrOutput() TriggerEventTypePtrOutput
	ToTriggerEventTypePtrOutputWithContext(context.Context) TriggerEventTypePtrOutput
}

type triggerEventTypePtr string

func TriggerEventTypePtr(v string) TriggerEventTypePtrInput {
	return (*triggerEventTypePtr)(&v)
}

func (*triggerEventTypePtr) ElementType() reflect.Type {
	return triggerEventTypePtrType
}

func (in *triggerEventTypePtr) ToTriggerEventTypePtrOutput() TriggerEventTypePtrOutput {
	return pulumi.ToOutput(in).(TriggerEventTypePtrOutput)
}

func (in *triggerEventTypePtr) ToTriggerEventTypePtrOutputWithContext(ctx context.Context) TriggerEventTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerEventTypePtrOutput)
}

// If set to INCLUDE_BUILD_LOGS_WITH_STATUS, log url will be shown on GitHub page when build status is final. Setting this field to INCLUDE_BUILD_LOGS_WITH_STATUS for non GitHub triggers results in INVALID_ARGUMENT error.
type TriggerIncludeBuildLogs string

const (
	// Build logs will not be shown on GitHub.
	TriggerIncludeBuildLogsIncludeBuildLogsUnspecified = TriggerIncludeBuildLogs("INCLUDE_BUILD_LOGS_UNSPECIFIED")
	// Build logs will be shown on GitHub.
	TriggerIncludeBuildLogsIncludeBuildLogsWithStatus = TriggerIncludeBuildLogs("INCLUDE_BUILD_LOGS_WITH_STATUS")
)

func (TriggerIncludeBuildLogs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerIncludeBuildLogs)(nil)).Elem()
}

func (e TriggerIncludeBuildLogs) ToTriggerIncludeBuildLogsOutput() TriggerIncludeBuildLogsOutput {
	return pulumi.ToOutput(e).(TriggerIncludeBuildLogsOutput)
}

func (e TriggerIncludeBuildLogs) ToTriggerIncludeBuildLogsOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerIncludeBuildLogsOutput)
}

func (e TriggerIncludeBuildLogs) ToTriggerIncludeBuildLogsPtrOutput() TriggerIncludeBuildLogsPtrOutput {
	return e.ToTriggerIncludeBuildLogsPtrOutputWithContext(context.Background())
}

func (e TriggerIncludeBuildLogs) ToTriggerIncludeBuildLogsPtrOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsPtrOutput {
	return TriggerIncludeBuildLogs(e).ToTriggerIncludeBuildLogsOutputWithContext(ctx).ToTriggerIncludeBuildLogsPtrOutputWithContext(ctx)
}

func (e TriggerIncludeBuildLogs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerIncludeBuildLogs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerIncludeBuildLogs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerIncludeBuildLogs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerIncludeBuildLogsOutput struct{ *pulumi.OutputState }

func (TriggerIncludeBuildLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerIncludeBuildLogs)(nil)).Elem()
}

func (o TriggerIncludeBuildLogsOutput) ToTriggerIncludeBuildLogsOutput() TriggerIncludeBuildLogsOutput {
	return o
}

func (o TriggerIncludeBuildLogsOutput) ToTriggerIncludeBuildLogsOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsOutput {
	return o
}

func (o TriggerIncludeBuildLogsOutput) ToTriggerIncludeBuildLogsPtrOutput() TriggerIncludeBuildLogsPtrOutput {
	return o.ToTriggerIncludeBuildLogsPtrOutputWithContext(context.Background())
}

func (o TriggerIncludeBuildLogsOutput) ToTriggerIncludeBuildLogsPtrOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerIncludeBuildLogs) *TriggerIncludeBuildLogs {
		return &v
	}).(TriggerIncludeBuildLogsPtrOutput)
}

func (o TriggerIncludeBuildLogsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerIncludeBuildLogsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerIncludeBuildLogs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerIncludeBuildLogsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerIncludeBuildLogsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerIncludeBuildLogs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerIncludeBuildLogsPtrOutput struct{ *pulumi.OutputState }

func (TriggerIncludeBuildLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerIncludeBuildLogs)(nil)).Elem()
}

func (o TriggerIncludeBuildLogsPtrOutput) ToTriggerIncludeBuildLogsPtrOutput() TriggerIncludeBuildLogsPtrOutput {
	return o
}

func (o TriggerIncludeBuildLogsPtrOutput) ToTriggerIncludeBuildLogsPtrOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsPtrOutput {
	return o
}

func (o TriggerIncludeBuildLogsPtrOutput) Elem() TriggerIncludeBuildLogsOutput {
	return o.ApplyT(func(v *TriggerIncludeBuildLogs) TriggerIncludeBuildLogs {
		if v != nil {
			return *v
		}
		var ret TriggerIncludeBuildLogs
		return ret
	}).(TriggerIncludeBuildLogsOutput)
}

func (o TriggerIncludeBuildLogsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerIncludeBuildLogsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerIncludeBuildLogs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TriggerIncludeBuildLogsInput is an input type that accepts TriggerIncludeBuildLogsArgs and TriggerIncludeBuildLogsOutput values.
// You can construct a concrete instance of `TriggerIncludeBuildLogsInput` via:
//
//	TriggerIncludeBuildLogsArgs{...}
type TriggerIncludeBuildLogsInput interface {
	pulumi.Input

	ToTriggerIncludeBuildLogsOutput() TriggerIncludeBuildLogsOutput
	ToTriggerIncludeBuildLogsOutputWithContext(context.Context) TriggerIncludeBuildLogsOutput
}

var triggerIncludeBuildLogsPtrType = reflect.TypeOf((**TriggerIncludeBuildLogs)(nil)).Elem()

type TriggerIncludeBuildLogsPtrInput interface {
	pulumi.Input

	ToTriggerIncludeBuildLogsPtrOutput() TriggerIncludeBuildLogsPtrOutput
	ToTriggerIncludeBuildLogsPtrOutputWithContext(context.Context) TriggerIncludeBuildLogsPtrOutput
}

type triggerIncludeBuildLogsPtr string

func TriggerIncludeBuildLogsPtr(v string) TriggerIncludeBuildLogsPtrInput {
	return (*triggerIncludeBuildLogsPtr)(&v)
}

func (*triggerIncludeBuildLogsPtr) ElementType() reflect.Type {
	return triggerIncludeBuildLogsPtrType
}

func (in *triggerIncludeBuildLogsPtr) ToTriggerIncludeBuildLogsPtrOutput() TriggerIncludeBuildLogsPtrOutput {
	return pulumi.ToOutput(in).(TriggerIncludeBuildLogsPtrOutput)
}

func (in *triggerIncludeBuildLogsPtr) ToTriggerIncludeBuildLogsPtrOutputWithContext(ctx context.Context) TriggerIncludeBuildLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerIncludeBuildLogsPtrOutput)
}

// Potential issues with the underlying Pub/Sub subscription configuration. Only populated on get requests.
type WebhookConfigState string

const (
	// The webhook auth configuration not been checked.
	WebhookConfigStateStateUnspecified = WebhookConfigState("STATE_UNSPECIFIED")
	// The auth configuration is properly setup.
	WebhookConfigStateOk = WebhookConfigState("OK")
	// The secret provided in auth_method has been deleted.
	WebhookConfigStateSecretDeleted = WebhookConfigState("SECRET_DELETED")
)

func (WebhookConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookConfigState)(nil)).Elem()
}

func (e WebhookConfigState) ToWebhookConfigStateOutput() WebhookConfigStateOutput {
	return pulumi.ToOutput(e).(WebhookConfigStateOutput)
}

func (e WebhookConfigState) ToWebhookConfigStateOutputWithContext(ctx context.Context) WebhookConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebhookConfigStateOutput)
}

func (e WebhookConfigState) ToWebhookConfigStatePtrOutput() WebhookConfigStatePtrOutput {
	return e.ToWebhookConfigStatePtrOutputWithContext(context.Background())
}

func (e WebhookConfigState) ToWebhookConfigStatePtrOutputWithContext(ctx context.Context) WebhookConfigStatePtrOutput {
	return WebhookConfigState(e).ToWebhookConfigStateOutputWithContext(ctx).ToWebhookConfigStatePtrOutputWithContext(ctx)
}

func (e WebhookConfigState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookConfigState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebhookConfigState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebhookConfigState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebhookConfigStateOutput struct{ *pulumi.OutputState }

func (WebhookConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookConfigState)(nil)).Elem()
}

func (o WebhookConfigStateOutput) ToWebhookConfigStateOutput() WebhookConfigStateOutput {
	return o
}

func (o WebhookConfigStateOutput) ToWebhookConfigStateOutputWithContext(ctx context.Context) WebhookConfigStateOutput {
	return o
}

func (o WebhookConfigStateOutput) ToWebhookConfigStatePtrOutput() WebhookConfigStatePtrOutput {
	return o.ToWebhookConfigStatePtrOutputWithContext(context.Background())
}

func (o WebhookConfigStateOutput) ToWebhookConfigStatePtrOutputWithContext(ctx context.Context) WebhookConfigStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookConfigState) *WebhookConfigState {
		return &v
	}).(WebhookConfigStatePtrOutput)
}

func (o WebhookConfigStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebhookConfigStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookConfigState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebhookConfigStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookConfigStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebhookConfigState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebhookConfigStatePtrOutput struct{ *pulumi.OutputState }

func (WebhookConfigStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookConfigState)(nil)).Elem()
}

func (o WebhookConfigStatePtrOutput) ToWebhookConfigStatePtrOutput() WebhookConfigStatePtrOutput {
	return o
}

func (o WebhookConfigStatePtrOutput) ToWebhookConfigStatePtrOutputWithContext(ctx context.Context) WebhookConfigStatePtrOutput {
	return o
}

func (o WebhookConfigStatePtrOutput) Elem() WebhookConfigStateOutput {
	return o.ApplyT(func(v *WebhookConfigState) WebhookConfigState {
		if v != nil {
			return *v
		}
		var ret WebhookConfigState
		return ret
	}).(WebhookConfigStateOutput)
}

func (o WebhookConfigStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebhookConfigStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebhookConfigState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebhookConfigStateInput is an input type that accepts WebhookConfigStateArgs and WebhookConfigStateOutput values.
// You can construct a concrete instance of `WebhookConfigStateInput` via:
//
//	WebhookConfigStateArgs{...}
type WebhookConfigStateInput interface {
	pulumi.Input

	ToWebhookConfigStateOutput() WebhookConfigStateOutput
	ToWebhookConfigStateOutputWithContext(context.Context) WebhookConfigStateOutput
}

var webhookConfigStatePtrType = reflect.TypeOf((**WebhookConfigState)(nil)).Elem()

type WebhookConfigStatePtrInput interface {
	pulumi.Input

	ToWebhookConfigStatePtrOutput() WebhookConfigStatePtrOutput
	ToWebhookConfigStatePtrOutputWithContext(context.Context) WebhookConfigStatePtrOutput
}

type webhookConfigStatePtr string

func WebhookConfigStatePtr(v string) WebhookConfigStatePtrInput {
	return (*webhookConfigStatePtr)(&v)
}

func (*webhookConfigStatePtr) ElementType() reflect.Type {
	return webhookConfigStatePtrType
}

func (in *webhookConfigStatePtr) ToWebhookConfigStatePtrOutput() WebhookConfigStatePtrOutput {
	return pulumi.ToOutput(in).(WebhookConfigStatePtrOutput)
}

func (in *webhookConfigStatePtr) ToWebhookConfigStatePtrOutputWithContext(ctx context.Context) WebhookConfigStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebhookConfigStatePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsLogStreamingOptionInput)(nil)).Elem(), BuildOptionsLogStreamingOption("STREAM_DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsLogStreamingOptionPtrInput)(nil)).Elem(), BuildOptionsLogStreamingOption("STREAM_DEFAULT"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsLoggingInput)(nil)).Elem(), BuildOptionsLogging("LOGGING_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsLoggingPtrInput)(nil)).Elem(), BuildOptionsLogging("LOGGING_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsMachineTypeInput)(nil)).Elem(), BuildOptionsMachineType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsMachineTypePtrInput)(nil)).Elem(), BuildOptionsMachineType("UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsRequestedVerifyOptionInput)(nil)).Elem(), BuildOptionsRequestedVerifyOption("NOT_VERIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsRequestedVerifyOptionPtrInput)(nil)).Elem(), BuildOptionsRequestedVerifyOption("NOT_VERIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsSourceProvenanceHashItemInput)(nil)).Elem(), BuildOptionsSourceProvenanceHashItem("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsSourceProvenanceHashItemPtrInput)(nil)).Elem(), BuildOptionsSourceProvenanceHashItem("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsSourceProvenanceHashItemArrayInput)(nil)).Elem(), BuildOptionsSourceProvenanceHashItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsSubstitutionOptionInput)(nil)).Elem(), BuildOptionsSubstitutionOption("MUST_MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*BuildOptionsSubstitutionOptionPtrInput)(nil)).Elem(), BuildOptionsSubstitutionOption("MUST_MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*GitFileSourceRepoTypeInput)(nil)).Elem(), GitFileSourceRepoType("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*GitFileSourceRepoTypePtrInput)(nil)).Elem(), GitFileSourceRepoType("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*GitRepoSourceRepoTypeInput)(nil)).Elem(), GitRepoSourceRepoType("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*GitRepoSourceRepoTypePtrInput)(nil)).Elem(), GitRepoSourceRepoType("UNKNOWN"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigEgressOptionInput)(nil)).Elem(), NetworkConfigEgressOption("EGRESS_OPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConfigEgressOptionPtrInput)(nil)).Elem(), NetworkConfigEgressOption("EGRESS_OPTION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubConfigStateInput)(nil)).Elem(), PubsubConfigState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubConfigStatePtrInput)(nil)).Elem(), PubsubConfigState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PullRequestFilterCommentControlInput)(nil)).Elem(), PullRequestFilterCommentControl("COMMENTS_DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PullRequestFilterCommentControlPtrInput)(nil)).Elem(), PullRequestFilterCommentControl("COMMENTS_DISABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerEventTypeInput)(nil)).Elem(), TriggerEventType("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerEventTypePtrInput)(nil)).Elem(), TriggerEventType("EVENT_TYPE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerIncludeBuildLogsInput)(nil)).Elem(), TriggerIncludeBuildLogs("INCLUDE_BUILD_LOGS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerIncludeBuildLogsPtrInput)(nil)).Elem(), TriggerIncludeBuildLogs("INCLUDE_BUILD_LOGS_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookConfigStateInput)(nil)).Elem(), WebhookConfigState("STATE_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookConfigStatePtrInput)(nil)).Elem(), WebhookConfigState("STATE_UNSPECIFIED"))
	pulumi.RegisterOutputType(BuildOptionsLogStreamingOptionOutput{})
	pulumi.RegisterOutputType(BuildOptionsLogStreamingOptionPtrOutput{})
	pulumi.RegisterOutputType(BuildOptionsLoggingOutput{})
	pulumi.RegisterOutputType(BuildOptionsLoggingPtrOutput{})
	pulumi.RegisterOutputType(BuildOptionsMachineTypeOutput{})
	pulumi.RegisterOutputType(BuildOptionsMachineTypePtrOutput{})
	pulumi.RegisterOutputType(BuildOptionsRequestedVerifyOptionOutput{})
	pulumi.RegisterOutputType(BuildOptionsRequestedVerifyOptionPtrOutput{})
	pulumi.RegisterOutputType(BuildOptionsSourceProvenanceHashItemOutput{})
	pulumi.RegisterOutputType(BuildOptionsSourceProvenanceHashItemPtrOutput{})
	pulumi.RegisterOutputType(BuildOptionsSourceProvenanceHashItemArrayOutput{})
	pulumi.RegisterOutputType(BuildOptionsSubstitutionOptionOutput{})
	pulumi.RegisterOutputType(BuildOptionsSubstitutionOptionPtrOutput{})
	pulumi.RegisterOutputType(GitFileSourceRepoTypeOutput{})
	pulumi.RegisterOutputType(GitFileSourceRepoTypePtrOutput{})
	pulumi.RegisterOutputType(GitRepoSourceRepoTypeOutput{})
	pulumi.RegisterOutputType(GitRepoSourceRepoTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkConfigEgressOptionOutput{})
	pulumi.RegisterOutputType(NetworkConfigEgressOptionPtrOutput{})
	pulumi.RegisterOutputType(PubsubConfigStateOutput{})
	pulumi.RegisterOutputType(PubsubConfigStatePtrOutput{})
	pulumi.RegisterOutputType(PullRequestFilterCommentControlOutput{})
	pulumi.RegisterOutputType(PullRequestFilterCommentControlPtrOutput{})
	pulumi.RegisterOutputType(TriggerEventTypeOutput{})
	pulumi.RegisterOutputType(TriggerEventTypePtrOutput{})
	pulumi.RegisterOutputType(TriggerIncludeBuildLogsOutput{})
	pulumi.RegisterOutputType(TriggerIncludeBuildLogsPtrOutput{})
	pulumi.RegisterOutputType(WebhookConfigStateOutput{})
	pulumi.RegisterOutputType(WebhookConfigStatePtrOutput{})
}
