// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WorkerPoolRegionsItem string

const (
	// no region
	WorkerPoolRegionsItemRegionUnspecified = WorkerPoolRegionsItem("REGION_UNSPECIFIED")
	// us-central1 region
	WorkerPoolRegionsItemUsCentral1 = WorkerPoolRegionsItem("us-central1")
	// us-west1 region
	WorkerPoolRegionsItemUsWest1 = WorkerPoolRegionsItem("us-west1")
	// us-east1 region
	WorkerPoolRegionsItemUsEast1 = WorkerPoolRegionsItem("us-east1")
	// us-east4 region
	WorkerPoolRegionsItemUsEast4 = WorkerPoolRegionsItem("us-east4")
)

func (WorkerPoolRegionsItem) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolRegionsItem)(nil)).Elem()
}

func (e WorkerPoolRegionsItem) ToWorkerPoolRegionsItemOutput() WorkerPoolRegionsItemOutput {
	return pulumi.ToOutput(e).(WorkerPoolRegionsItemOutput)
}

func (e WorkerPoolRegionsItem) ToWorkerPoolRegionsItemOutputWithContext(ctx context.Context) WorkerPoolRegionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WorkerPoolRegionsItemOutput)
}

func (e WorkerPoolRegionsItem) ToWorkerPoolRegionsItemPtrOutput() WorkerPoolRegionsItemPtrOutput {
	return e.ToWorkerPoolRegionsItemPtrOutputWithContext(context.Background())
}

func (e WorkerPoolRegionsItem) ToWorkerPoolRegionsItemPtrOutputWithContext(ctx context.Context) WorkerPoolRegionsItemPtrOutput {
	return WorkerPoolRegionsItem(e).ToWorkerPoolRegionsItemOutputWithContext(ctx).ToWorkerPoolRegionsItemPtrOutputWithContext(ctx)
}

func (e WorkerPoolRegionsItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkerPoolRegionsItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WorkerPoolRegionsItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WorkerPoolRegionsItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WorkerPoolRegionsItemOutput struct{ *pulumi.OutputState }

func (WorkerPoolRegionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerPoolRegionsItem)(nil)).Elem()
}

func (o WorkerPoolRegionsItemOutput) ToWorkerPoolRegionsItemOutput() WorkerPoolRegionsItemOutput {
	return o
}

func (o WorkerPoolRegionsItemOutput) ToWorkerPoolRegionsItemOutputWithContext(ctx context.Context) WorkerPoolRegionsItemOutput {
	return o
}

func (o WorkerPoolRegionsItemOutput) ToWorkerPoolRegionsItemPtrOutput() WorkerPoolRegionsItemPtrOutput {
	return o.ToWorkerPoolRegionsItemPtrOutputWithContext(context.Background())
}

func (o WorkerPoolRegionsItemOutput) ToWorkerPoolRegionsItemPtrOutputWithContext(ctx context.Context) WorkerPoolRegionsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkerPoolRegionsItem) *WorkerPoolRegionsItem {
		return &v
	}).(WorkerPoolRegionsItemPtrOutput)
}

func (o WorkerPoolRegionsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WorkerPoolRegionsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkerPoolRegionsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WorkerPoolRegionsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkerPoolRegionsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WorkerPoolRegionsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WorkerPoolRegionsItemPtrOutput struct{ *pulumi.OutputState }

func (WorkerPoolRegionsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkerPoolRegionsItem)(nil)).Elem()
}

func (o WorkerPoolRegionsItemPtrOutput) ToWorkerPoolRegionsItemPtrOutput() WorkerPoolRegionsItemPtrOutput {
	return o
}

func (o WorkerPoolRegionsItemPtrOutput) ToWorkerPoolRegionsItemPtrOutputWithContext(ctx context.Context) WorkerPoolRegionsItemPtrOutput {
	return o
}

func (o WorkerPoolRegionsItemPtrOutput) Elem() WorkerPoolRegionsItemOutput {
	return o.ApplyT(func(v *WorkerPoolRegionsItem) WorkerPoolRegionsItem {
		if v != nil {
			return *v
		}
		var ret WorkerPoolRegionsItem
		return ret
	}).(WorkerPoolRegionsItemOutput)
}

func (o WorkerPoolRegionsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WorkerPoolRegionsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WorkerPoolRegionsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WorkerPoolRegionsItemInput is an input type that accepts WorkerPoolRegionsItemArgs and WorkerPoolRegionsItemOutput values.
// You can construct a concrete instance of `WorkerPoolRegionsItemInput` via:
//
//	WorkerPoolRegionsItemArgs{...}
type WorkerPoolRegionsItemInput interface {
	pulumi.Input

	ToWorkerPoolRegionsItemOutput() WorkerPoolRegionsItemOutput
	ToWorkerPoolRegionsItemOutputWithContext(context.Context) WorkerPoolRegionsItemOutput
}

var workerPoolRegionsItemPtrType = reflect.TypeOf((**WorkerPoolRegionsItem)(nil)).Elem()

type WorkerPoolRegionsItemPtrInput interface {
	pulumi.Input

	ToWorkerPoolRegionsItemPtrOutput() WorkerPoolRegionsItemPtrOutput
	ToWorkerPoolRegionsItemPtrOutputWithContext(context.Context) WorkerPoolRegionsItemPtrOutput
}

type workerPoolRegionsItemPtr string

func WorkerPoolRegionsItemPtr(v string) WorkerPoolRegionsItemPtrInput {
	return (*workerPoolRegionsItemPtr)(&v)
}

func (*workerPoolRegionsItemPtr) ElementType() reflect.Type {
	return workerPoolRegionsItemPtrType
}

func (in *workerPoolRegionsItemPtr) ToWorkerPoolRegionsItemPtrOutput() WorkerPoolRegionsItemPtrOutput {
	return pulumi.ToOutput(in).(WorkerPoolRegionsItemPtrOutput)
}

func (in *workerPoolRegionsItemPtr) ToWorkerPoolRegionsItemPtrOutputWithContext(ctx context.Context) WorkerPoolRegionsItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WorkerPoolRegionsItemPtrOutput)
}

func (in *workerPoolRegionsItemPtr) ToOutput(ctx context.Context) pulumix.Output[*WorkerPoolRegionsItem] {
	return pulumix.Output[*WorkerPoolRegionsItem]{
		OutputState: in.ToWorkerPoolRegionsItemPtrOutputWithContext(ctx).OutputState,
	}
}

// WorkerPoolRegionsItemArrayInput is an input type that accepts WorkerPoolRegionsItemArray and WorkerPoolRegionsItemArrayOutput values.
// You can construct a concrete instance of `WorkerPoolRegionsItemArrayInput` via:
//
//	WorkerPoolRegionsItemArray{ WorkerPoolRegionsItemArgs{...} }
type WorkerPoolRegionsItemArrayInput interface {
	pulumi.Input

	ToWorkerPoolRegionsItemArrayOutput() WorkerPoolRegionsItemArrayOutput
	ToWorkerPoolRegionsItemArrayOutputWithContext(context.Context) WorkerPoolRegionsItemArrayOutput
}

type WorkerPoolRegionsItemArray []WorkerPoolRegionsItem

func (WorkerPoolRegionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolRegionsItem)(nil)).Elem()
}

func (i WorkerPoolRegionsItemArray) ToWorkerPoolRegionsItemArrayOutput() WorkerPoolRegionsItemArrayOutput {
	return i.ToWorkerPoolRegionsItemArrayOutputWithContext(context.Background())
}

func (i WorkerPoolRegionsItemArray) ToWorkerPoolRegionsItemArrayOutputWithContext(ctx context.Context) WorkerPoolRegionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkerPoolRegionsItemArrayOutput)
}

type WorkerPoolRegionsItemArrayOutput struct{ *pulumi.OutputState }

func (WorkerPoolRegionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkerPoolRegionsItem)(nil)).Elem()
}

func (o WorkerPoolRegionsItemArrayOutput) ToWorkerPoolRegionsItemArrayOutput() WorkerPoolRegionsItemArrayOutput {
	return o
}

func (o WorkerPoolRegionsItemArrayOutput) ToWorkerPoolRegionsItemArrayOutputWithContext(ctx context.Context) WorkerPoolRegionsItemArrayOutput {
	return o
}

func (o WorkerPoolRegionsItemArrayOutput) Index(i pulumi.IntInput) WorkerPoolRegionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkerPoolRegionsItem {
		return vs[0].([]WorkerPoolRegionsItem)[vs[1].(int)]
	}).(WorkerPoolRegionsItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolRegionsItemInput)(nil)).Elem(), WorkerPoolRegionsItem("REGION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolRegionsItemPtrInput)(nil)).Elem(), WorkerPoolRegionsItem("REGION_UNSPECIFIED"))
	pulumi.RegisterInputType(reflect.TypeOf((*WorkerPoolRegionsItemArrayInput)(nil)).Elem(), WorkerPoolRegionsItemArray{})
	pulumi.RegisterOutputType(WorkerPoolRegionsItemOutput{})
	pulumi.RegisterOutputType(WorkerPoolRegionsItemPtrOutput{})
	pulumi.RegisterOutputType(WorkerPoolRegionsItemArrayOutput{})
}
