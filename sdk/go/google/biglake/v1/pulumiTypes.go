// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Options of a Hive database.
type HiveDatabaseOptions struct {
	// Cloud Storage folder URI where the database data is stored, starting with "gs://".
	LocationUri *string `pulumi:"locationUri"`
	// Stores user supplied Hive database parameters.
	Parameters map[string]string `pulumi:"parameters"`
}

// HiveDatabaseOptionsInput is an input type that accepts HiveDatabaseOptionsArgs and HiveDatabaseOptionsOutput values.
// You can construct a concrete instance of `HiveDatabaseOptionsInput` via:
//
//	HiveDatabaseOptionsArgs{...}
type HiveDatabaseOptionsInput interface {
	pulumi.Input

	ToHiveDatabaseOptionsOutput() HiveDatabaseOptionsOutput
	ToHiveDatabaseOptionsOutputWithContext(context.Context) HiveDatabaseOptionsOutput
}

// Options of a Hive database.
type HiveDatabaseOptionsArgs struct {
	// Cloud Storage folder URI where the database data is stored, starting with "gs://".
	LocationUri pulumi.StringPtrInput `pulumi:"locationUri"`
	// Stores user supplied Hive database parameters.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (HiveDatabaseOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveDatabaseOptions)(nil)).Elem()
}

func (i HiveDatabaseOptionsArgs) ToHiveDatabaseOptionsOutput() HiveDatabaseOptionsOutput {
	return i.ToHiveDatabaseOptionsOutputWithContext(context.Background())
}

func (i HiveDatabaseOptionsArgs) ToHiveDatabaseOptionsOutputWithContext(ctx context.Context) HiveDatabaseOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveDatabaseOptionsOutput)
}

func (i HiveDatabaseOptionsArgs) ToHiveDatabaseOptionsPtrOutput() HiveDatabaseOptionsPtrOutput {
	return i.ToHiveDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (i HiveDatabaseOptionsArgs) ToHiveDatabaseOptionsPtrOutputWithContext(ctx context.Context) HiveDatabaseOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveDatabaseOptionsOutput).ToHiveDatabaseOptionsPtrOutputWithContext(ctx)
}

// HiveDatabaseOptionsPtrInput is an input type that accepts HiveDatabaseOptionsArgs, HiveDatabaseOptionsPtr and HiveDatabaseOptionsPtrOutput values.
// You can construct a concrete instance of `HiveDatabaseOptionsPtrInput` via:
//
//	        HiveDatabaseOptionsArgs{...}
//
//	or:
//
//	        nil
type HiveDatabaseOptionsPtrInput interface {
	pulumi.Input

	ToHiveDatabaseOptionsPtrOutput() HiveDatabaseOptionsPtrOutput
	ToHiveDatabaseOptionsPtrOutputWithContext(context.Context) HiveDatabaseOptionsPtrOutput
}

type hiveDatabaseOptionsPtrType HiveDatabaseOptionsArgs

func HiveDatabaseOptionsPtr(v *HiveDatabaseOptionsArgs) HiveDatabaseOptionsPtrInput {
	return (*hiveDatabaseOptionsPtrType)(v)
}

func (*hiveDatabaseOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveDatabaseOptions)(nil)).Elem()
}

func (i *hiveDatabaseOptionsPtrType) ToHiveDatabaseOptionsPtrOutput() HiveDatabaseOptionsPtrOutput {
	return i.ToHiveDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (i *hiveDatabaseOptionsPtrType) ToHiveDatabaseOptionsPtrOutputWithContext(ctx context.Context) HiveDatabaseOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveDatabaseOptionsPtrOutput)
}

// Options of a Hive database.
type HiveDatabaseOptionsOutput struct{ *pulumi.OutputState }

func (HiveDatabaseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveDatabaseOptions)(nil)).Elem()
}

func (o HiveDatabaseOptionsOutput) ToHiveDatabaseOptionsOutput() HiveDatabaseOptionsOutput {
	return o
}

func (o HiveDatabaseOptionsOutput) ToHiveDatabaseOptionsOutputWithContext(ctx context.Context) HiveDatabaseOptionsOutput {
	return o
}

func (o HiveDatabaseOptionsOutput) ToHiveDatabaseOptionsPtrOutput() HiveDatabaseOptionsPtrOutput {
	return o.ToHiveDatabaseOptionsPtrOutputWithContext(context.Background())
}

func (o HiveDatabaseOptionsOutput) ToHiveDatabaseOptionsPtrOutputWithContext(ctx context.Context) HiveDatabaseOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HiveDatabaseOptions) *HiveDatabaseOptions {
		return &v
	}).(HiveDatabaseOptionsPtrOutput)
}

// Cloud Storage folder URI where the database data is stored, starting with "gs://".
func (o HiveDatabaseOptionsOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveDatabaseOptions) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

// Stores user supplied Hive database parameters.
func (o HiveDatabaseOptionsOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveDatabaseOptions) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type HiveDatabaseOptionsPtrOutput struct{ *pulumi.OutputState }

func (HiveDatabaseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveDatabaseOptions)(nil)).Elem()
}

func (o HiveDatabaseOptionsPtrOutput) ToHiveDatabaseOptionsPtrOutput() HiveDatabaseOptionsPtrOutput {
	return o
}

func (o HiveDatabaseOptionsPtrOutput) ToHiveDatabaseOptionsPtrOutputWithContext(ctx context.Context) HiveDatabaseOptionsPtrOutput {
	return o
}

func (o HiveDatabaseOptionsPtrOutput) Elem() HiveDatabaseOptionsOutput {
	return o.ApplyT(func(v *HiveDatabaseOptions) HiveDatabaseOptions {
		if v != nil {
			return *v
		}
		var ret HiveDatabaseOptions
		return ret
	}).(HiveDatabaseOptionsOutput)
}

// Cloud Storage folder URI where the database data is stored, starting with "gs://".
func (o HiveDatabaseOptionsPtrOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveDatabaseOptions) *string {
		if v == nil {
			return nil
		}
		return v.LocationUri
	}).(pulumi.StringPtrOutput)
}

// Stores user supplied Hive database parameters.
func (o HiveDatabaseOptionsPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveDatabaseOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Options of a Hive database.
type HiveDatabaseOptionsResponse struct {
	// Cloud Storage folder URI where the database data is stored, starting with "gs://".
	LocationUri string `pulumi:"locationUri"`
	// Stores user supplied Hive database parameters.
	Parameters map[string]string `pulumi:"parameters"`
}

// Options of a Hive database.
type HiveDatabaseOptionsResponseOutput struct{ *pulumi.OutputState }

func (HiveDatabaseOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveDatabaseOptionsResponse)(nil)).Elem()
}

func (o HiveDatabaseOptionsResponseOutput) ToHiveDatabaseOptionsResponseOutput() HiveDatabaseOptionsResponseOutput {
	return o
}

func (o HiveDatabaseOptionsResponseOutput) ToHiveDatabaseOptionsResponseOutputWithContext(ctx context.Context) HiveDatabaseOptionsResponseOutput {
	return o
}

// Cloud Storage folder URI where the database data is stored, starting with "gs://".
func (o HiveDatabaseOptionsResponseOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v HiveDatabaseOptionsResponse) string { return v.LocationUri }).(pulumi.StringOutput)
}

// Stores user supplied Hive database parameters.
func (o HiveDatabaseOptionsResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveDatabaseOptionsResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Options of a Hive table.
type HiveTableOptions struct {
	// Stores user supplied Hive table parameters.
	Parameters map[string]string `pulumi:"parameters"`
	// Stores physical storage information of the data.
	StorageDescriptor *StorageDescriptor `pulumi:"storageDescriptor"`
	// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
	TableType *string `pulumi:"tableType"`
}

// HiveTableOptionsInput is an input type that accepts HiveTableOptionsArgs and HiveTableOptionsOutput values.
// You can construct a concrete instance of `HiveTableOptionsInput` via:
//
//	HiveTableOptionsArgs{...}
type HiveTableOptionsInput interface {
	pulumi.Input

	ToHiveTableOptionsOutput() HiveTableOptionsOutput
	ToHiveTableOptionsOutputWithContext(context.Context) HiveTableOptionsOutput
}

// Options of a Hive table.
type HiveTableOptionsArgs struct {
	// Stores user supplied Hive table parameters.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Stores physical storage information of the data.
	StorageDescriptor StorageDescriptorPtrInput `pulumi:"storageDescriptor"`
	// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
	TableType pulumi.StringPtrInput `pulumi:"tableType"`
}

func (HiveTableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveTableOptions)(nil)).Elem()
}

func (i HiveTableOptionsArgs) ToHiveTableOptionsOutput() HiveTableOptionsOutput {
	return i.ToHiveTableOptionsOutputWithContext(context.Background())
}

func (i HiveTableOptionsArgs) ToHiveTableOptionsOutputWithContext(ctx context.Context) HiveTableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveTableOptionsOutput)
}

func (i HiveTableOptionsArgs) ToHiveTableOptionsPtrOutput() HiveTableOptionsPtrOutput {
	return i.ToHiveTableOptionsPtrOutputWithContext(context.Background())
}

func (i HiveTableOptionsArgs) ToHiveTableOptionsPtrOutputWithContext(ctx context.Context) HiveTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveTableOptionsOutput).ToHiveTableOptionsPtrOutputWithContext(ctx)
}

// HiveTableOptionsPtrInput is an input type that accepts HiveTableOptionsArgs, HiveTableOptionsPtr and HiveTableOptionsPtrOutput values.
// You can construct a concrete instance of `HiveTableOptionsPtrInput` via:
//
//	        HiveTableOptionsArgs{...}
//
//	or:
//
//	        nil
type HiveTableOptionsPtrInput interface {
	pulumi.Input

	ToHiveTableOptionsPtrOutput() HiveTableOptionsPtrOutput
	ToHiveTableOptionsPtrOutputWithContext(context.Context) HiveTableOptionsPtrOutput
}

type hiveTableOptionsPtrType HiveTableOptionsArgs

func HiveTableOptionsPtr(v *HiveTableOptionsArgs) HiveTableOptionsPtrInput {
	return (*hiveTableOptionsPtrType)(v)
}

func (*hiveTableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveTableOptions)(nil)).Elem()
}

func (i *hiveTableOptionsPtrType) ToHiveTableOptionsPtrOutput() HiveTableOptionsPtrOutput {
	return i.ToHiveTableOptionsPtrOutputWithContext(context.Background())
}

func (i *hiveTableOptionsPtrType) ToHiveTableOptionsPtrOutputWithContext(ctx context.Context) HiveTableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HiveTableOptionsPtrOutput)
}

// Options of a Hive table.
type HiveTableOptionsOutput struct{ *pulumi.OutputState }

func (HiveTableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveTableOptions)(nil)).Elem()
}

func (o HiveTableOptionsOutput) ToHiveTableOptionsOutput() HiveTableOptionsOutput {
	return o
}

func (o HiveTableOptionsOutput) ToHiveTableOptionsOutputWithContext(ctx context.Context) HiveTableOptionsOutput {
	return o
}

func (o HiveTableOptionsOutput) ToHiveTableOptionsPtrOutput() HiveTableOptionsPtrOutput {
	return o.ToHiveTableOptionsPtrOutputWithContext(context.Background())
}

func (o HiveTableOptionsOutput) ToHiveTableOptionsPtrOutputWithContext(ctx context.Context) HiveTableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HiveTableOptions) *HiveTableOptions {
		return &v
	}).(HiveTableOptionsPtrOutput)
}

// Stores user supplied Hive table parameters.
func (o HiveTableOptionsOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveTableOptions) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Stores physical storage information of the data.
func (o HiveTableOptionsOutput) StorageDescriptor() StorageDescriptorPtrOutput {
	return o.ApplyT(func(v HiveTableOptions) *StorageDescriptor { return v.StorageDescriptor }).(StorageDescriptorPtrOutput)
}

// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
func (o HiveTableOptionsOutput) TableType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HiveTableOptions) *string { return v.TableType }).(pulumi.StringPtrOutput)
}

type HiveTableOptionsPtrOutput struct{ *pulumi.OutputState }

func (HiveTableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HiveTableOptions)(nil)).Elem()
}

func (o HiveTableOptionsPtrOutput) ToHiveTableOptionsPtrOutput() HiveTableOptionsPtrOutput {
	return o
}

func (o HiveTableOptionsPtrOutput) ToHiveTableOptionsPtrOutputWithContext(ctx context.Context) HiveTableOptionsPtrOutput {
	return o
}

func (o HiveTableOptionsPtrOutput) Elem() HiveTableOptionsOutput {
	return o.ApplyT(func(v *HiveTableOptions) HiveTableOptions {
		if v != nil {
			return *v
		}
		var ret HiveTableOptions
		return ret
	}).(HiveTableOptionsOutput)
}

// Stores user supplied Hive table parameters.
func (o HiveTableOptionsPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HiveTableOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Stores physical storage information of the data.
func (o HiveTableOptionsPtrOutput) StorageDescriptor() StorageDescriptorPtrOutput {
	return o.ApplyT(func(v *HiveTableOptions) *StorageDescriptor {
		if v == nil {
			return nil
		}
		return v.StorageDescriptor
	}).(StorageDescriptorPtrOutput)
}

// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
func (o HiveTableOptionsPtrOutput) TableType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HiveTableOptions) *string {
		if v == nil {
			return nil
		}
		return v.TableType
	}).(pulumi.StringPtrOutput)
}

// Options of a Hive table.
type HiveTableOptionsResponse struct {
	// Stores user supplied Hive table parameters.
	Parameters map[string]string `pulumi:"parameters"`
	// Stores physical storage information of the data.
	StorageDescriptor StorageDescriptorResponse `pulumi:"storageDescriptor"`
	// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
	TableType string `pulumi:"tableType"`
}

// Options of a Hive table.
type HiveTableOptionsResponseOutput struct{ *pulumi.OutputState }

func (HiveTableOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HiveTableOptionsResponse)(nil)).Elem()
}

func (o HiveTableOptionsResponseOutput) ToHiveTableOptionsResponseOutput() HiveTableOptionsResponseOutput {
	return o
}

func (o HiveTableOptionsResponseOutput) ToHiveTableOptionsResponseOutputWithContext(ctx context.Context) HiveTableOptionsResponseOutput {
	return o
}

// Stores user supplied Hive table parameters.
func (o HiveTableOptionsResponseOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v HiveTableOptionsResponse) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Stores physical storage information of the data.
func (o HiveTableOptionsResponseOutput) StorageDescriptor() StorageDescriptorResponseOutput {
	return o.ApplyT(func(v HiveTableOptionsResponse) StorageDescriptorResponse { return v.StorageDescriptor }).(StorageDescriptorResponseOutput)
}

// Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
func (o HiveTableOptionsResponseOutput) TableType() pulumi.StringOutput {
	return o.ApplyT(func(v HiveTableOptionsResponse) string { return v.TableType }).(pulumi.StringOutput)
}

// Serializer and deserializer information.
type SerDeInfo struct {
	// The fully qualified Java class name of the serialization library.
	SerializationLib *string `pulumi:"serializationLib"`
}

// SerDeInfoInput is an input type that accepts SerDeInfoArgs and SerDeInfoOutput values.
// You can construct a concrete instance of `SerDeInfoInput` via:
//
//	SerDeInfoArgs{...}
type SerDeInfoInput interface {
	pulumi.Input

	ToSerDeInfoOutput() SerDeInfoOutput
	ToSerDeInfoOutputWithContext(context.Context) SerDeInfoOutput
}

// Serializer and deserializer information.
type SerDeInfoArgs struct {
	// The fully qualified Java class name of the serialization library.
	SerializationLib pulumi.StringPtrInput `pulumi:"serializationLib"`
}

func (SerDeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SerDeInfo)(nil)).Elem()
}

func (i SerDeInfoArgs) ToSerDeInfoOutput() SerDeInfoOutput {
	return i.ToSerDeInfoOutputWithContext(context.Background())
}

func (i SerDeInfoArgs) ToSerDeInfoOutputWithContext(ctx context.Context) SerDeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerDeInfoOutput)
}

func (i SerDeInfoArgs) ToSerDeInfoPtrOutput() SerDeInfoPtrOutput {
	return i.ToSerDeInfoPtrOutputWithContext(context.Background())
}

func (i SerDeInfoArgs) ToSerDeInfoPtrOutputWithContext(ctx context.Context) SerDeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerDeInfoOutput).ToSerDeInfoPtrOutputWithContext(ctx)
}

// SerDeInfoPtrInput is an input type that accepts SerDeInfoArgs, SerDeInfoPtr and SerDeInfoPtrOutput values.
// You can construct a concrete instance of `SerDeInfoPtrInput` via:
//
//	        SerDeInfoArgs{...}
//
//	or:
//
//	        nil
type SerDeInfoPtrInput interface {
	pulumi.Input

	ToSerDeInfoPtrOutput() SerDeInfoPtrOutput
	ToSerDeInfoPtrOutputWithContext(context.Context) SerDeInfoPtrOutput
}

type serDeInfoPtrType SerDeInfoArgs

func SerDeInfoPtr(v *SerDeInfoArgs) SerDeInfoPtrInput {
	return (*serDeInfoPtrType)(v)
}

func (*serDeInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SerDeInfo)(nil)).Elem()
}

func (i *serDeInfoPtrType) ToSerDeInfoPtrOutput() SerDeInfoPtrOutput {
	return i.ToSerDeInfoPtrOutputWithContext(context.Background())
}

func (i *serDeInfoPtrType) ToSerDeInfoPtrOutputWithContext(ctx context.Context) SerDeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SerDeInfoPtrOutput)
}

// Serializer and deserializer information.
type SerDeInfoOutput struct{ *pulumi.OutputState }

func (SerDeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SerDeInfo)(nil)).Elem()
}

func (o SerDeInfoOutput) ToSerDeInfoOutput() SerDeInfoOutput {
	return o
}

func (o SerDeInfoOutput) ToSerDeInfoOutputWithContext(ctx context.Context) SerDeInfoOutput {
	return o
}

func (o SerDeInfoOutput) ToSerDeInfoPtrOutput() SerDeInfoPtrOutput {
	return o.ToSerDeInfoPtrOutputWithContext(context.Background())
}

func (o SerDeInfoOutput) ToSerDeInfoPtrOutputWithContext(ctx context.Context) SerDeInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SerDeInfo) *SerDeInfo {
		return &v
	}).(SerDeInfoPtrOutput)
}

// The fully qualified Java class name of the serialization library.
func (o SerDeInfoOutput) SerializationLib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SerDeInfo) *string { return v.SerializationLib }).(pulumi.StringPtrOutput)
}

type SerDeInfoPtrOutput struct{ *pulumi.OutputState }

func (SerDeInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SerDeInfo)(nil)).Elem()
}

func (o SerDeInfoPtrOutput) ToSerDeInfoPtrOutput() SerDeInfoPtrOutput {
	return o
}

func (o SerDeInfoPtrOutput) ToSerDeInfoPtrOutputWithContext(ctx context.Context) SerDeInfoPtrOutput {
	return o
}

func (o SerDeInfoPtrOutput) Elem() SerDeInfoOutput {
	return o.ApplyT(func(v *SerDeInfo) SerDeInfo {
		if v != nil {
			return *v
		}
		var ret SerDeInfo
		return ret
	}).(SerDeInfoOutput)
}

// The fully qualified Java class name of the serialization library.
func (o SerDeInfoPtrOutput) SerializationLib() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SerDeInfo) *string {
		if v == nil {
			return nil
		}
		return v.SerializationLib
	}).(pulumi.StringPtrOutput)
}

// Serializer and deserializer information.
type SerDeInfoResponse struct {
	// The fully qualified Java class name of the serialization library.
	SerializationLib string `pulumi:"serializationLib"`
}

// Serializer and deserializer information.
type SerDeInfoResponseOutput struct{ *pulumi.OutputState }

func (SerDeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SerDeInfoResponse)(nil)).Elem()
}

func (o SerDeInfoResponseOutput) ToSerDeInfoResponseOutput() SerDeInfoResponseOutput {
	return o
}

func (o SerDeInfoResponseOutput) ToSerDeInfoResponseOutputWithContext(ctx context.Context) SerDeInfoResponseOutput {
	return o
}

// The fully qualified Java class name of the serialization library.
func (o SerDeInfoResponseOutput) SerializationLib() pulumi.StringOutput {
	return o.ApplyT(func(v SerDeInfoResponse) string { return v.SerializationLib }).(pulumi.StringOutput)
}

// Stores physical storage information of the data.
type StorageDescriptor struct {
	// The fully qualified Java class name of the input format.
	InputFormat *string `pulumi:"inputFormat"`
	// Cloud Storage folder URI where the table data is stored, starting with "gs://".
	LocationUri *string `pulumi:"locationUri"`
	// The fully qualified Java class name of the output format.
	OutputFormat *string `pulumi:"outputFormat"`
	// Serializer and deserializer information.
	SerdeInfo *SerDeInfo `pulumi:"serdeInfo"`
}

// StorageDescriptorInput is an input type that accepts StorageDescriptorArgs and StorageDescriptorOutput values.
// You can construct a concrete instance of `StorageDescriptorInput` via:
//
//	StorageDescriptorArgs{...}
type StorageDescriptorInput interface {
	pulumi.Input

	ToStorageDescriptorOutput() StorageDescriptorOutput
	ToStorageDescriptorOutputWithContext(context.Context) StorageDescriptorOutput
}

// Stores physical storage information of the data.
type StorageDescriptorArgs struct {
	// The fully qualified Java class name of the input format.
	InputFormat pulumi.StringPtrInput `pulumi:"inputFormat"`
	// Cloud Storage folder URI where the table data is stored, starting with "gs://".
	LocationUri pulumi.StringPtrInput `pulumi:"locationUri"`
	// The fully qualified Java class name of the output format.
	OutputFormat pulumi.StringPtrInput `pulumi:"outputFormat"`
	// Serializer and deserializer information.
	SerdeInfo SerDeInfoPtrInput `pulumi:"serdeInfo"`
}

func (StorageDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDescriptor)(nil)).Elem()
}

func (i StorageDescriptorArgs) ToStorageDescriptorOutput() StorageDescriptorOutput {
	return i.ToStorageDescriptorOutputWithContext(context.Background())
}

func (i StorageDescriptorArgs) ToStorageDescriptorOutputWithContext(ctx context.Context) StorageDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDescriptorOutput)
}

func (i StorageDescriptorArgs) ToStorageDescriptorPtrOutput() StorageDescriptorPtrOutput {
	return i.ToStorageDescriptorPtrOutputWithContext(context.Background())
}

func (i StorageDescriptorArgs) ToStorageDescriptorPtrOutputWithContext(ctx context.Context) StorageDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDescriptorOutput).ToStorageDescriptorPtrOutputWithContext(ctx)
}

// StorageDescriptorPtrInput is an input type that accepts StorageDescriptorArgs, StorageDescriptorPtr and StorageDescriptorPtrOutput values.
// You can construct a concrete instance of `StorageDescriptorPtrInput` via:
//
//	        StorageDescriptorArgs{...}
//
//	or:
//
//	        nil
type StorageDescriptorPtrInput interface {
	pulumi.Input

	ToStorageDescriptorPtrOutput() StorageDescriptorPtrOutput
	ToStorageDescriptorPtrOutputWithContext(context.Context) StorageDescriptorPtrOutput
}

type storageDescriptorPtrType StorageDescriptorArgs

func StorageDescriptorPtr(v *StorageDescriptorArgs) StorageDescriptorPtrInput {
	return (*storageDescriptorPtrType)(v)
}

func (*storageDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDescriptor)(nil)).Elem()
}

func (i *storageDescriptorPtrType) ToStorageDescriptorPtrOutput() StorageDescriptorPtrOutput {
	return i.ToStorageDescriptorPtrOutputWithContext(context.Background())
}

func (i *storageDescriptorPtrType) ToStorageDescriptorPtrOutputWithContext(ctx context.Context) StorageDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDescriptorPtrOutput)
}

// Stores physical storage information of the data.
type StorageDescriptorOutput struct{ *pulumi.OutputState }

func (StorageDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDescriptor)(nil)).Elem()
}

func (o StorageDescriptorOutput) ToStorageDescriptorOutput() StorageDescriptorOutput {
	return o
}

func (o StorageDescriptorOutput) ToStorageDescriptorOutputWithContext(ctx context.Context) StorageDescriptorOutput {
	return o
}

func (o StorageDescriptorOutput) ToStorageDescriptorPtrOutput() StorageDescriptorPtrOutput {
	return o.ToStorageDescriptorPtrOutputWithContext(context.Background())
}

func (o StorageDescriptorOutput) ToStorageDescriptorPtrOutputWithContext(ctx context.Context) StorageDescriptorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageDescriptor) *StorageDescriptor {
		return &v
	}).(StorageDescriptorPtrOutput)
}

// The fully qualified Java class name of the input format.
func (o StorageDescriptorOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageDescriptor) *string { return v.InputFormat }).(pulumi.StringPtrOutput)
}

// Cloud Storage folder URI where the table data is stored, starting with "gs://".
func (o StorageDescriptorOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageDescriptor) *string { return v.LocationUri }).(pulumi.StringPtrOutput)
}

// The fully qualified Java class name of the output format.
func (o StorageDescriptorOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageDescriptor) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

// Serializer and deserializer information.
func (o StorageDescriptorOutput) SerdeInfo() SerDeInfoPtrOutput {
	return o.ApplyT(func(v StorageDescriptor) *SerDeInfo { return v.SerdeInfo }).(SerDeInfoPtrOutput)
}

type StorageDescriptorPtrOutput struct{ *pulumi.OutputState }

func (StorageDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDescriptor)(nil)).Elem()
}

func (o StorageDescriptorPtrOutput) ToStorageDescriptorPtrOutput() StorageDescriptorPtrOutput {
	return o
}

func (o StorageDescriptorPtrOutput) ToStorageDescriptorPtrOutputWithContext(ctx context.Context) StorageDescriptorPtrOutput {
	return o
}

func (o StorageDescriptorPtrOutput) Elem() StorageDescriptorOutput {
	return o.ApplyT(func(v *StorageDescriptor) StorageDescriptor {
		if v != nil {
			return *v
		}
		var ret StorageDescriptor
		return ret
	}).(StorageDescriptorOutput)
}

// The fully qualified Java class name of the input format.
func (o StorageDescriptorPtrOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.InputFormat
	}).(pulumi.StringPtrOutput)
}

// Cloud Storage folder URI where the table data is stored, starting with "gs://".
func (o StorageDescriptorPtrOutput) LocationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.LocationUri
	}).(pulumi.StringPtrOutput)
}

// The fully qualified Java class name of the output format.
func (o StorageDescriptorPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

// Serializer and deserializer information.
func (o StorageDescriptorPtrOutput) SerdeInfo() SerDeInfoPtrOutput {
	return o.ApplyT(func(v *StorageDescriptor) *SerDeInfo {
		if v == nil {
			return nil
		}
		return v.SerdeInfo
	}).(SerDeInfoPtrOutput)
}

// Stores physical storage information of the data.
type StorageDescriptorResponse struct {
	// The fully qualified Java class name of the input format.
	InputFormat string `pulumi:"inputFormat"`
	// Cloud Storage folder URI where the table data is stored, starting with "gs://".
	LocationUri string `pulumi:"locationUri"`
	// The fully qualified Java class name of the output format.
	OutputFormat string `pulumi:"outputFormat"`
	// Serializer and deserializer information.
	SerdeInfo SerDeInfoResponse `pulumi:"serdeInfo"`
}

// Stores physical storage information of the data.
type StorageDescriptorResponseOutput struct{ *pulumi.OutputState }

func (StorageDescriptorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDescriptorResponse)(nil)).Elem()
}

func (o StorageDescriptorResponseOutput) ToStorageDescriptorResponseOutput() StorageDescriptorResponseOutput {
	return o
}

func (o StorageDescriptorResponseOutput) ToStorageDescriptorResponseOutputWithContext(ctx context.Context) StorageDescriptorResponseOutput {
	return o
}

// The fully qualified Java class name of the input format.
func (o StorageDescriptorResponseOutput) InputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v StorageDescriptorResponse) string { return v.InputFormat }).(pulumi.StringOutput)
}

// Cloud Storage folder URI where the table data is stored, starting with "gs://".
func (o StorageDescriptorResponseOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v StorageDescriptorResponse) string { return v.LocationUri }).(pulumi.StringOutput)
}

// The fully qualified Java class name of the output format.
func (o StorageDescriptorResponseOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v StorageDescriptorResponse) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// Serializer and deserializer information.
func (o StorageDescriptorResponseOutput) SerdeInfo() SerDeInfoResponseOutput {
	return o.ApplyT(func(v StorageDescriptorResponse) SerDeInfoResponse { return v.SerdeInfo }).(SerDeInfoResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HiveDatabaseOptionsInput)(nil)).Elem(), HiveDatabaseOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HiveDatabaseOptionsPtrInput)(nil)).Elem(), HiveDatabaseOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HiveTableOptionsInput)(nil)).Elem(), HiveTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HiveTableOptionsPtrInput)(nil)).Elem(), HiveTableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SerDeInfoInput)(nil)).Elem(), SerDeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SerDeInfoPtrInput)(nil)).Elem(), SerDeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageDescriptorInput)(nil)).Elem(), StorageDescriptorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageDescriptorPtrInput)(nil)).Elem(), StorageDescriptorArgs{})
	pulumi.RegisterOutputType(HiveDatabaseOptionsOutput{})
	pulumi.RegisterOutputType(HiveDatabaseOptionsPtrOutput{})
	pulumi.RegisterOutputType(HiveDatabaseOptionsResponseOutput{})
	pulumi.RegisterOutputType(HiveTableOptionsOutput{})
	pulumi.RegisterOutputType(HiveTableOptionsPtrOutput{})
	pulumi.RegisterOutputType(HiveTableOptionsResponseOutput{})
	pulumi.RegisterOutputType(SerDeInfoOutput{})
	pulumi.RegisterOutputType(SerDeInfoPtrOutput{})
	pulumi.RegisterOutputType(SerDeInfoResponseOutput{})
	pulumi.RegisterOutputType(StorageDescriptorOutput{})
	pulumi.RegisterOutputType(StorageDescriptorPtrOutput{})
	pulumi.RegisterOutputType(StorageDescriptorResponseOutput{})
}
