// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns a specified API.
func LookupApi(ctx *pulumi.Context, args *LookupApiArgs, opts ...pulumi.InvokeOption) (*LookupApiResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiResult
	err := ctx.Invoke("google-native:apigeeregistry/v1:getApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApiArgs struct {
	ApiId    string  `pulumi:"apiId"`
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
}

type LookupApiResult struct {
	// Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
	Annotations map[string]string `pulumi:"annotations"`
	// A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., "NONE", "TESTING", "PREVIEW", "GENERAL", "DEPRECATED", "SHUTDOWN".
	Availability string `pulumi:"availability"`
	// Creation timestamp.
	CreateTime string `pulumi:"createTime"`
	// A detailed description.
	Description string `pulumi:"description"`
	// Human-meaningful name.
	DisplayName string `pulumi:"displayName"`
	// Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
	Labels map[string]string `pulumi:"labels"`
	// Resource name.
	Name string `pulumi:"name"`
	// The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`
	RecommendedDeployment string `pulumi:"recommendedDeployment"`
	// The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
	RecommendedVersion string `pulumi:"recommendedVersion"`
	// Last update timestamp.
	UpdateTime string `pulumi:"updateTime"`
}

func LookupApiOutput(ctx *pulumi.Context, args LookupApiOutputArgs, opts ...pulumi.InvokeOption) LookupApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiResult, error) {
			args := v.(LookupApiArgs)
			r, err := LookupApi(ctx, &args, opts...)
			var s LookupApiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiResultOutput)
}

type LookupApiOutputArgs struct {
	ApiId    pulumi.StringInput    `pulumi:"apiId"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiArgs)(nil)).Elem()
}

type LookupApiResultOutput struct{ *pulumi.OutputState }

func (LookupApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiResult)(nil)).Elem()
}

func (o LookupApiResultOutput) ToLookupApiResultOutput() LookupApiResultOutput {
	return o
}

func (o LookupApiResultOutput) ToLookupApiResultOutputWithContext(ctx context.Context) LookupApiResultOutput {
	return o
}

// Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
func (o LookupApiResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApiResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

// A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., "NONE", "TESTING", "PREVIEW", "GENERAL", "DEPRECATED", "SHUTDOWN".
func (o LookupApiResultOutput) Availability() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.Availability }).(pulumi.StringOutput)
}

// Creation timestamp.
func (o LookupApiResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// A detailed description.
func (o LookupApiResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.Description }).(pulumi.StringOutput)
}

// Human-meaningful name.
func (o LookupApiResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
func (o LookupApiResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApiResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name.
func (o LookupApiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.Name }).(pulumi.StringOutput)
}

// The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`
func (o LookupApiResultOutput) RecommendedDeployment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.RecommendedDeployment }).(pulumi.StringOutput)
}

// The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
func (o LookupApiResultOutput) RecommendedVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.RecommendedVersion }).(pulumi.StringOutput)
}

// Last update timestamp.
func (o LookupApiResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiResultOutput{})
}
