// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns an execution of the given name.
func LookupExecution(ctx *pulumi.Context, args *LookupExecutionArgs, opts ...pulumi.InvokeOption) (*LookupExecutionResult, error) {
	var rv LookupExecutionResult
	err := ctx.Invoke("google-native:workflowexecutions/v1:getExecution", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExecutionArgs struct {
	ExecutionId string  `pulumi:"executionId"`
	Location    string  `pulumi:"location"`
	Project     *string `pulumi:"project"`
	View        *string `pulumi:"view"`
	WorkflowId  string  `pulumi:"workflowId"`
}

type LookupExecutionResult struct {
	// Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
	Argument string `pulumi:"argument"`
	// Marks the end of execution, successful or not.
	EndTime string `pulumi:"endTime"`
	// The error which caused the execution to finish prematurely. The value is only present if the execution's state is `FAILED` or `CANCELLED`.
	Error ErrorResponse `pulumi:"error"`
	// The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
	Name string `pulumi:"name"`
	// Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.
	Result string `pulumi:"result"`
	// Marks the beginning of execution.
	StartTime string `pulumi:"startTime"`
	// Current state of the execution.
	State string `pulumi:"state"`
	// Revision of the workflow this execution is using.
	WorkflowRevisionId string `pulumi:"workflowRevisionId"`
}
