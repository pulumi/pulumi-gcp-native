// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Create a integration with a draft version in the specified project.
// Auto-naming is currently not supported for this resource.
type Version struct {
	pulumi.CustomResourceState

	// Optional. Cloud Logging details for the integration version
	CloudLoggingDetails GoogleCloudIntegrationsV1alphaCloudLoggingDetailsResponseOutput `pulumi:"cloudLoggingDetails"`
	// Optional. Optional. Indicates if sample workflow should be created.
	CreateSampleIntegrations pulumi.BoolPtrOutput `pulumi:"createSampleIntegrations"`
	// Auto-generated.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy pulumi.StringOutput `pulumi:"databasePersistencePolicy"`
	// Optional. The integration description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Error Catch Task configuration for the integration. It's optional.
	ErrorCatcherConfigs GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput `pulumi:"errorCatcherConfigs"`
	IntegrationId       pulumi.StringOutput                                                 `pulumi:"integrationId"`
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParameters GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput `pulumi:"integrationParameters"`
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParametersInternal EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput `pulumi:"integrationParametersInternal"`
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringOutput `pulumi:"lastModifierEmail"`
	Location          pulumi.StringOutput `pulumi:"location"`
	// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LockHolder pulumi.StringOutput `pulumi:"lockHolder"`
	// Auto-generated primary key.
	Name pulumi.StringOutput `pulumi:"name"`
	// Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
	NewIntegration pulumi.BoolPtrOutput `pulumi:"newIntegration"`
	// Optional. The origin that indicates where this integration is coming from.
	Origin pulumi.StringOutput `pulumi:"origin"`
	// Optional. The id of the template which was used to create this integration_version.
	ParentTemplateId pulumi.StringOutput `pulumi:"parentTemplateId"`
	ProductId        pulumi.StringOutput `pulumi:"productId"`
	Project          pulumi.StringOutput `pulumi:"project"`
	// Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.
	RunAsServiceAccount pulumi.StringOutput `pulumi:"runAsServiceAccount"`
	// Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
	SnapshotNumber pulumi.StringOutput `pulumi:"snapshotNumber"`
	// User should not set it as an input.
	State pulumi.StringOutput `pulumi:"state"`
	// Generated by eventbus. User should not set it as an input.
	Status pulumi.StringOutput `pulumi:"status"`
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigs GoogleCloudIntegrationsV1alphaTaskConfigResponseArrayOutput `pulumi:"taskConfigs"`
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigsInternal EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput `pulumi:"taskConfigsInternal"`
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown EnterpriseCrmEventbusProtoTeardownResponseOutput `pulumi:"teardown"`
	// Optional. Trigger configurations.
	TriggerConfigs GoogleCloudIntegrationsV1alphaTriggerConfigResponseArrayOutput `pulumi:"triggerConfigs"`
	// Optional. Trigger configurations.
	TriggerConfigsInternal EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput `pulumi:"triggerConfigsInternal"`
	// Auto-generated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel pulumi.StringOutput `pulumi:"userLabel"`
}

// NewVersion registers a new resource with the given unique name, arguments, and options.
func NewVersion(ctx *pulumi.Context,
	name string, args *VersionArgs, opts ...pulumi.ResourceOption) (*Version, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationId == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationId'")
	}
	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"integrationId",
		"location",
		"productId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Version
	err := ctx.RegisterResource("google-native:integrations/v1alpha:Version", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVersion gets an existing Version resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VersionState, opts ...pulumi.ResourceOption) (*Version, error) {
	var resource Version
	err := ctx.ReadResource("google-native:integrations/v1alpha:Version", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Version resources.
type versionState struct {
}

type VersionState struct {
}

func (VersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*versionState)(nil)).Elem()
}

type versionArgs struct {
	// Optional. Cloud Logging details for the integration version
	CloudLoggingDetails *GoogleCloudIntegrationsV1alphaCloudLoggingDetails `pulumi:"cloudLoggingDetails"`
	// Optional. Optional. Indicates if sample workflow should be created.
	CreateSampleIntegrations *bool `pulumi:"createSampleIntegrations"`
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy *VersionDatabasePersistencePolicy `pulumi:"databasePersistencePolicy"`
	// Optional. The integration description.
	Description *string `pulumi:"description"`
	// Optional. Error Catch Task configuration for the integration. It's optional.
	ErrorCatcherConfigs []GoogleCloudIntegrationsV1alphaErrorCatcherConfig `pulumi:"errorCatcherConfigs"`
	IntegrationId       string                                             `pulumi:"integrationId"`
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParameters []GoogleCloudIntegrationsV1alphaIntegrationParameter `pulumi:"integrationParameters"`
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParametersInternal *EnterpriseCrmFrontendsEventbusProtoWorkflowParameters `pulumi:"integrationParametersInternal"`
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail *string `pulumi:"lastModifierEmail"`
	Location          *string `pulumi:"location"`
	// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LockHolder *string `pulumi:"lockHolder"`
	// Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
	NewIntegration *bool `pulumi:"newIntegration"`
	// Optional. The origin that indicates where this integration is coming from.
	Origin *VersionOrigin `pulumi:"origin"`
	// Optional. The id of the template which was used to create this integration_version.
	ParentTemplateId *string `pulumi:"parentTemplateId"`
	ProductId        string  `pulumi:"productId"`
	Project          *string `pulumi:"project"`
	// Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.
	RunAsServiceAccount *string `pulumi:"runAsServiceAccount"`
	// Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
	SnapshotNumber *string `pulumi:"snapshotNumber"`
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigs []GoogleCloudIntegrationsV1alphaTaskConfig `pulumi:"taskConfigs"`
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigsInternal []EnterpriseCrmFrontendsEventbusProtoTaskConfig `pulumi:"taskConfigsInternal"`
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown *EnterpriseCrmEventbusProtoTeardown `pulumi:"teardown"`
	// Optional. Trigger configurations.
	TriggerConfigs []GoogleCloudIntegrationsV1alphaTriggerConfig `pulumi:"triggerConfigs"`
	// Optional. Trigger configurations.
	TriggerConfigsInternal []EnterpriseCrmFrontendsEventbusProtoTriggerConfig `pulumi:"triggerConfigsInternal"`
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel *string `pulumi:"userLabel"`
}

// The set of arguments for constructing a Version resource.
type VersionArgs struct {
	// Optional. Cloud Logging details for the integration version
	CloudLoggingDetails GoogleCloudIntegrationsV1alphaCloudLoggingDetailsPtrInput
	// Optional. Optional. Indicates if sample workflow should be created.
	CreateSampleIntegrations pulumi.BoolPtrInput
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy VersionDatabasePersistencePolicyPtrInput
	// Optional. The integration description.
	Description pulumi.StringPtrInput
	// Optional. Error Catch Task configuration for the integration. It's optional.
	ErrorCatcherConfigs GoogleCloudIntegrationsV1alphaErrorCatcherConfigArrayInput
	IntegrationId       pulumi.StringInput
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParameters GoogleCloudIntegrationsV1alphaIntegrationParameterArrayInput
	// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	IntegrationParametersInternal EnterpriseCrmFrontendsEventbusProtoWorkflowParametersPtrInput
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringPtrInput
	Location          pulumi.StringPtrInput
	// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LockHolder pulumi.StringPtrInput
	// Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
	NewIntegration pulumi.BoolPtrInput
	// Optional. The origin that indicates where this integration is coming from.
	Origin VersionOriginPtrInput
	// Optional. The id of the template which was used to create this integration_version.
	ParentTemplateId pulumi.StringPtrInput
	ProductId        pulumi.StringInput
	Project          pulumi.StringPtrInput
	// Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.
	RunAsServiceAccount pulumi.StringPtrInput
	// Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
	SnapshotNumber pulumi.StringPtrInput
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigs GoogleCloudIntegrationsV1alphaTaskConfigArrayInput
	// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
	TaskConfigsInternal EnterpriseCrmFrontendsEventbusProtoTaskConfigArrayInput
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown EnterpriseCrmEventbusProtoTeardownPtrInput
	// Optional. Trigger configurations.
	TriggerConfigs GoogleCloudIntegrationsV1alphaTriggerConfigArrayInput
	// Optional. Trigger configurations.
	TriggerConfigsInternal EnterpriseCrmFrontendsEventbusProtoTriggerConfigArrayInput
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel pulumi.StringPtrInput
}

func (VersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*versionArgs)(nil)).Elem()
}

type VersionInput interface {
	pulumi.Input

	ToVersionOutput() VersionOutput
	ToVersionOutputWithContext(ctx context.Context) VersionOutput
}

func (*Version) ElementType() reflect.Type {
	return reflect.TypeOf((**Version)(nil)).Elem()
}

func (i *Version) ToVersionOutput() VersionOutput {
	return i.ToVersionOutputWithContext(context.Background())
}

func (i *Version) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VersionOutput)
}

type VersionOutput struct{ *pulumi.OutputState }

func (VersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Version)(nil)).Elem()
}

func (o VersionOutput) ToVersionOutput() VersionOutput {
	return o
}

func (o VersionOutput) ToVersionOutputWithContext(ctx context.Context) VersionOutput {
	return o
}

// Optional. Cloud Logging details for the integration version
func (o VersionOutput) CloudLoggingDetails() GoogleCloudIntegrationsV1alphaCloudLoggingDetailsResponseOutput {
	return o.ApplyT(func(v *Version) GoogleCloudIntegrationsV1alphaCloudLoggingDetailsResponseOutput {
		return v.CloudLoggingDetails
	}).(GoogleCloudIntegrationsV1alphaCloudLoggingDetailsResponseOutput)
}

// Optional. Optional. Indicates if sample workflow should be created.
func (o VersionOutput) CreateSampleIntegrations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Version) pulumi.BoolPtrOutput { return v.CreateSampleIntegrations }).(pulumi.BoolPtrOutput)
}

// Auto-generated.
func (o VersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
func (o VersionOutput) DatabasePersistencePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.DatabasePersistencePolicy }).(pulumi.StringOutput)
}

// Optional. The integration description.
func (o VersionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Error Catch Task configuration for the integration. It's optional.
func (o VersionOutput) ErrorCatcherConfigs() GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput {
	return o.ApplyT(func(v *Version) GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput {
		return v.ErrorCatcherConfigs
	}).(GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput)
}

func (o VersionOutput) IntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.IntegrationId }).(pulumi.StringOutput)
}

// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
func (o VersionOutput) IntegrationParameters() GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput {
	return o.ApplyT(func(v *Version) GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput {
		return v.IntegrationParameters
	}).(GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput)
}

// Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
func (o VersionOutput) IntegrationParametersInternal() EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput {
	return o.ApplyT(func(v *Version) EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput {
		return v.IntegrationParametersInternal
	}).(EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput)
}

// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o VersionOutput) LastModifierEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.LastModifierEmail }).(pulumi.StringOutput)
}

func (o VersionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o VersionOutput) LockHolder() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.LockHolder }).(pulumi.StringOutput)
}

// Auto-generated primary key.
func (o VersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
func (o VersionOutput) NewIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Version) pulumi.BoolPtrOutput { return v.NewIntegration }).(pulumi.BoolPtrOutput)
}

// Optional. The origin that indicates where this integration is coming from.
func (o VersionOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Origin }).(pulumi.StringOutput)
}

// Optional. The id of the template which was used to create this integration_version.
func (o VersionOutput) ParentTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.ParentTemplateId }).(pulumi.StringOutput)
}

func (o VersionOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

func (o VersionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. The run-as service account email, if set and auth config is not configured, that will be used to generate auth token to be used in Connector task, Rest caller task and Cloud function task.
func (o VersionOutput) RunAsServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.RunAsServiceAccount }).(pulumi.StringOutput)
}

// Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
func (o VersionOutput) SnapshotNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.SnapshotNumber }).(pulumi.StringOutput)
}

// User should not set it as an input.
func (o VersionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Generated by eventbus. User should not set it as an input.
func (o VersionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
func (o VersionOutput) TaskConfigs() GoogleCloudIntegrationsV1alphaTaskConfigResponseArrayOutput {
	return o.ApplyT(func(v *Version) GoogleCloudIntegrationsV1alphaTaskConfigResponseArrayOutput { return v.TaskConfigs }).(GoogleCloudIntegrationsV1alphaTaskConfigResponseArrayOutput)
}

// Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
func (o VersionOutput) TaskConfigsInternal() EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput {
	return o.ApplyT(func(v *Version) EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput {
		return v.TaskConfigsInternal
	}).(EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput)
}

// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
func (o VersionOutput) Teardown() EnterpriseCrmEventbusProtoTeardownResponseOutput {
	return o.ApplyT(func(v *Version) EnterpriseCrmEventbusProtoTeardownResponseOutput { return v.Teardown }).(EnterpriseCrmEventbusProtoTeardownResponseOutput)
}

// Optional. Trigger configurations.
func (o VersionOutput) TriggerConfigs() GoogleCloudIntegrationsV1alphaTriggerConfigResponseArrayOutput {
	return o.ApplyT(func(v *Version) GoogleCloudIntegrationsV1alphaTriggerConfigResponseArrayOutput {
		return v.TriggerConfigs
	}).(GoogleCloudIntegrationsV1alphaTriggerConfigResponseArrayOutput)
}

// Optional. Trigger configurations.
func (o VersionOutput) TriggerConfigsInternal() EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput {
	return o.ApplyT(func(v *Version) EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput {
		return v.TriggerConfigsInternal
	}).(EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput)
}

// Auto-generated.
func (o VersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
func (o VersionOutput) UserLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *Version) pulumi.StringOutput { return v.UserLabel }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VersionInput)(nil)).Elem(), &Version{})
	pulumi.RegisterOutputType(VersionOutput{})
}
