// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an IntegrationTemplateVersion.
// Auto-naming is currently not supported for this resource.
// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
// on Google Cloud even though it will be deleted from Pulumi state.
type TemplatesVersion struct {
	pulumi.CustomResourceState

	// Auto-generated.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy pulumi.StringOutput `pulumi:"databasePersistencePolicy"`
	// Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
	Description pulumi.StringOutput `pulumi:"description"`
	// Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional.
	ErrorCatcherConfigs   GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput `pulumi:"errorCatcherConfigs"`
	IntegrationtemplateId pulumi.StringOutput                                                 `pulumi:"integrationtemplateId"`
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringOutput `pulumi:"lastModifierEmail"`
	Location          pulumi.StringOutput `pulumi:"location"`
	// Auto-generated primary key. Format: projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
	ParentIntegrationVersionId pulumi.StringOutput `pulumi:"parentIntegrationVersionId"`
	ProductId                  pulumi.StringOutput `pulumi:"productId"`
	Project                    pulumi.StringOutput `pulumi:"project"`
	// An increasing sequence that is set when a new snapshot is created.
	SnapshotNumber pulumi.StringOutput `pulumi:"snapshotNumber"`
	// Optional. Generated by eventbus. User should not set it as an input.
	Status pulumi.StringOutput `pulumi:"status"`
	// Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
	TaskConfigs EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput `pulumi:"taskConfigs"`
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown EnterpriseCrmEventbusProtoTeardownResponseOutput `pulumi:"teardown"`
	// Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	TemplateParameters EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput `pulumi:"templateParameters"`
	// Optional. Trigger configurations.
	TriggerConfigs EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput `pulumi:"triggerConfigs"`
	// Auto-generated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel pulumi.StringOutput `pulumi:"userLabel"`
}

// NewTemplatesVersion registers a new resource with the given unique name, arguments, and options.
func NewTemplatesVersion(ctx *pulumi.Context,
	name string, args *TemplatesVersionArgs, opts ...pulumi.ResourceOption) (*TemplatesVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationtemplateId == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationtemplateId'")
	}
	if args.ProductId == nil {
		return nil, errors.New("invalid value for required argument 'ProductId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"integrationtemplateId",
		"location",
		"productId",
		"project",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TemplatesVersion
	err := ctx.RegisterResource("google-native:integrations/v1alpha:TemplatesVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplatesVersion gets an existing TemplatesVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplatesVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplatesVersionState, opts ...pulumi.ResourceOption) (*TemplatesVersion, error) {
	var resource TemplatesVersion
	err := ctx.ReadResource("google-native:integrations/v1alpha:TemplatesVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TemplatesVersion resources.
type templatesVersionState struct {
}

type TemplatesVersionState struct {
}

func (TemplatesVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*templatesVersionState)(nil)).Elem()
}

type templatesVersionArgs struct {
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy *TemplatesVersionDatabasePersistencePolicy `pulumi:"databasePersistencePolicy"`
	// Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
	Description *string `pulumi:"description"`
	// Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional.
	ErrorCatcherConfigs   []GoogleCloudIntegrationsV1alphaErrorCatcherConfig `pulumi:"errorCatcherConfigs"`
	IntegrationtemplateId string                                             `pulumi:"integrationtemplateId"`
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail *string `pulumi:"lastModifierEmail"`
	Location          *string `pulumi:"location"`
	// Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
	ParentIntegrationVersionId *string `pulumi:"parentIntegrationVersionId"`
	ProductId                  string  `pulumi:"productId"`
	Project                    *string `pulumi:"project"`
	// Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
	TaskConfigs []EnterpriseCrmFrontendsEventbusProtoTaskConfig `pulumi:"taskConfigs"`
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown *EnterpriseCrmEventbusProtoTeardown `pulumi:"teardown"`
	// Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	TemplateParameters *EnterpriseCrmFrontendsEventbusProtoWorkflowParameters `pulumi:"templateParameters"`
	// Optional. Trigger configurations.
	TriggerConfigs []EnterpriseCrmFrontendsEventbusProtoTriggerConfig `pulumi:"triggerConfigs"`
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel *string `pulumi:"userLabel"`
}

// The set of arguments for constructing a TemplatesVersion resource.
type TemplatesVersionArgs struct {
	// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
	DatabasePersistencePolicy TemplatesVersionDatabasePersistencePolicyPtrInput
	// Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
	Description pulumi.StringPtrInput
	// Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional.
	ErrorCatcherConfigs   GoogleCloudIntegrationsV1alphaErrorCatcherConfigArrayInput
	IntegrationtemplateId pulumi.StringInput
	// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringPtrInput
	Location          pulumi.StringPtrInput
	// Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
	ParentIntegrationVersionId pulumi.StringPtrInput
	ProductId                  pulumi.StringInput
	Project                    pulumi.StringPtrInput
	// Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
	TaskConfigs EnterpriseCrmFrontendsEventbusProtoTaskConfigArrayInput
	// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
	Teardown EnterpriseCrmEventbusProtoTeardownPtrInput
	// Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
	TemplateParameters EnterpriseCrmFrontendsEventbusProtoWorkflowParametersPtrInput
	// Optional. Trigger configurations.
	TriggerConfigs EnterpriseCrmFrontendsEventbusProtoTriggerConfigArrayInput
	// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
	UserLabel pulumi.StringPtrInput
}

func (TemplatesVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templatesVersionArgs)(nil)).Elem()
}

type TemplatesVersionInput interface {
	pulumi.Input

	ToTemplatesVersionOutput() TemplatesVersionOutput
	ToTemplatesVersionOutputWithContext(ctx context.Context) TemplatesVersionOutput
}

func (*TemplatesVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatesVersion)(nil)).Elem()
}

func (i *TemplatesVersion) ToTemplatesVersionOutput() TemplatesVersionOutput {
	return i.ToTemplatesVersionOutputWithContext(context.Background())
}

func (i *TemplatesVersion) ToTemplatesVersionOutputWithContext(ctx context.Context) TemplatesVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatesVersionOutput)
}

type TemplatesVersionOutput struct{ *pulumi.OutputState }

func (TemplatesVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplatesVersion)(nil)).Elem()
}

func (o TemplatesVersionOutput) ToTemplatesVersionOutput() TemplatesVersionOutput {
	return o
}

func (o TemplatesVersionOutput) ToTemplatesVersionOutputWithContext(ctx context.Context) TemplatesVersionOutput {
	return o
}

// Auto-generated.
func (o TemplatesVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
func (o TemplatesVersionOutput) DatabasePersistencePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.DatabasePersistencePolicy }).(pulumi.StringOutput)
}

// Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
func (o TemplatesVersionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Optional. Error Catch Task configuration for the IntegrationTemplateVersion. It's optional.
func (o TemplatesVersionOutput) ErrorCatcherConfigs() GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput {
	return o.ApplyT(func(v *TemplatesVersion) GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput {
		return v.ErrorCatcherConfigs
	}).(GoogleCloudIntegrationsV1alphaErrorCatcherConfigResponseArrayOutput)
}

func (o TemplatesVersionOutput) IntegrationtemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.IntegrationtemplateId }).(pulumi.StringOutput)
}

// Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o TemplatesVersionOutput) LastModifierEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.LastModifierEmail }).(pulumi.StringOutput)
}

func (o TemplatesVersionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Auto-generated primary key. Format: projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}
func (o TemplatesVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
func (o TemplatesVersionOutput) ParentIntegrationVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.ParentIntegrationVersionId }).(pulumi.StringOutput)
}

func (o TemplatesVersionOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.ProductId }).(pulumi.StringOutput)
}

func (o TemplatesVersionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// An increasing sequence that is set when a new snapshot is created.
func (o TemplatesVersionOutput) SnapshotNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.SnapshotNumber }).(pulumi.StringOutput)
}

// Optional. Generated by eventbus. User should not set it as an input.
func (o TemplatesVersionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
func (o TemplatesVersionOutput) TaskConfigs() EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput {
	return o.ApplyT(func(v *TemplatesVersion) EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput {
		return v.TaskConfigs
	}).(EnterpriseCrmFrontendsEventbusProtoTaskConfigResponseArrayOutput)
}

// Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
func (o TemplatesVersionOutput) Teardown() EnterpriseCrmEventbusProtoTeardownResponseOutput {
	return o.ApplyT(func(v *TemplatesVersion) EnterpriseCrmEventbusProtoTeardownResponseOutput { return v.Teardown }).(EnterpriseCrmEventbusProtoTeardownResponseOutput)
}

// Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
func (o TemplatesVersionOutput) TemplateParameters() EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput {
	return o.ApplyT(func(v *TemplatesVersion) EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput {
		return v.TemplateParameters
	}).(EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponseOutput)
}

// Optional. Trigger configurations.
func (o TemplatesVersionOutput) TriggerConfigs() EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput {
	return o.ApplyT(func(v *TemplatesVersion) EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput {
		return v.TriggerConfigs
	}).(EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponseArrayOutput)
}

// Auto-generated.
func (o TemplatesVersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
func (o TemplatesVersionOutput) UserLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *TemplatesVersion) pulumi.StringOutput { return v.UserLabel }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TemplatesVersionInput)(nil)).Elem(), &TemplatesVersion{})
	pulumi.RegisterOutputType(TemplatesVersionOutput{})
}
