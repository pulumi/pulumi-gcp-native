// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a complete auth config. If the auth config doesn't exist, Code.NOT_FOUND exception will be thrown. Returns the decrypted auth config.
func LookupAuthConfig(ctx *pulumi.Context, args *LookupAuthConfigArgs, opts ...pulumi.InvokeOption) (*LookupAuthConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuthConfigResult
	err := ctx.Invoke("google-native:integrations/v1alpha:getAuthConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAuthConfigArgs struct {
	AuthConfigId string  `pulumi:"authConfigId"`
	Location     string  `pulumi:"location"`
	ProductId    string  `pulumi:"productId"`
	Project      *string `pulumi:"project"`
}

type LookupAuthConfigResult struct {
	// Certificate id for client certificate
	CertificateId string `pulumi:"certificateId"`
	// The timestamp when the auth config is created.
	CreateTime string `pulumi:"createTime"`
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail string `pulumi:"creatorEmail"`
	// Credential type of the encrypted credential.
	CredentialType string `pulumi:"credentialType"`
	// Raw auth credentials.
	DecryptedCredential GoogleCloudIntegrationsV1alphaCredentialResponse `pulumi:"decryptedCredential"`
	// A description of the auth config.
	Description string `pulumi:"description"`
	// The name of the auth config.
	DisplayName string `pulumi:"displayName"`
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
	EncryptedCredential string `pulumi:"encryptedCredential"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
	ExpiryNotificationDuration []string `pulumi:"expiryNotificationDuration"`
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail string `pulumi:"lastModifierEmail"`
	// Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
	Name string `pulumi:"name"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
	OverrideValidTime string `pulumi:"overrideValidTime"`
	// The reason / details of the current status.
	Reason string `pulumi:"reason"`
	// The status of the auth config.
	State string `pulumi:"state"`
	// The timestamp when the auth config is modified.
	UpdateTime string `pulumi:"updateTime"`
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
	ValidTime string `pulumi:"validTime"`
	// The visibility of the auth config.
	Visibility string `pulumi:"visibility"`
}

func LookupAuthConfigOutput(ctx *pulumi.Context, args LookupAuthConfigOutputArgs, opts ...pulumi.InvokeOption) LookupAuthConfigResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthConfigResult, error) {
			args := v.(LookupAuthConfigArgs)
			r, err := LookupAuthConfig(ctx, &args, opts...)
			var s LookupAuthConfigResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthConfigResultOutput)
}

type LookupAuthConfigOutputArgs struct {
	AuthConfigId pulumi.StringInput    `pulumi:"authConfigId"`
	Location     pulumi.StringInput    `pulumi:"location"`
	ProductId    pulumi.StringInput    `pulumi:"productId"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupAuthConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthConfigArgs)(nil)).Elem()
}

type LookupAuthConfigResultOutput struct{ *pulumi.OutputState }

func (LookupAuthConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthConfigResult)(nil)).Elem()
}

func (o LookupAuthConfigResultOutput) ToLookupAuthConfigResultOutput() LookupAuthConfigResultOutput {
	return o
}

func (o LookupAuthConfigResultOutput) ToLookupAuthConfigResultOutputWithContext(ctx context.Context) LookupAuthConfigResultOutput {
	return o
}

func (o LookupAuthConfigResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupAuthConfigResult] {
	return pulumix.Output[LookupAuthConfigResult]{
		OutputState: o.OutputState,
	}
}

// Certificate id for client certificate
func (o LookupAuthConfigResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The timestamp when the auth config is created.
func (o LookupAuthConfigResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o LookupAuthConfigResultOutput) CreatorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.CreatorEmail }).(pulumi.StringOutput)
}

// Credential type of the encrypted credential.
func (o LookupAuthConfigResultOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.CredentialType }).(pulumi.StringOutput)
}

// Raw auth credentials.
func (o LookupAuthConfigResultOutput) DecryptedCredential() GoogleCloudIntegrationsV1alphaCredentialResponseOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) GoogleCloudIntegrationsV1alphaCredentialResponse {
		return v.DecryptedCredential
	}).(GoogleCloudIntegrationsV1alphaCredentialResponseOutput)
}

// A description of the auth config.
func (o LookupAuthConfigResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the auth config.
func (o LookupAuthConfigResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
func (o LookupAuthConfigResultOutput) EncryptedCredential() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.EncryptedCredential }).(pulumi.StringOutput)
}

// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
func (o LookupAuthConfigResultOutput) ExpiryNotificationDuration() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) []string { return v.ExpiryNotificationDuration }).(pulumi.StringArrayOutput)
}

// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o LookupAuthConfigResultOutput) LastModifierEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.LastModifierEmail }).(pulumi.StringOutput)
}

// Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
func (o LookupAuthConfigResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.Name }).(pulumi.StringOutput)
}

// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
func (o LookupAuthConfigResultOutput) OverrideValidTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.OverrideValidTime }).(pulumi.StringOutput)
}

// The reason / details of the current status.
func (o LookupAuthConfigResultOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.Reason }).(pulumi.StringOutput)
}

// The status of the auth config.
func (o LookupAuthConfigResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.State }).(pulumi.StringOutput)
}

// The timestamp when the auth config is modified.
func (o LookupAuthConfigResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
func (o LookupAuthConfigResultOutput) ValidTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.ValidTime }).(pulumi.StringOutput)
}

// The visibility of the auth config.
func (o LookupAuthConfigResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthConfigResult) string { return v.Visibility }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthConfigResultOutput{})
}
