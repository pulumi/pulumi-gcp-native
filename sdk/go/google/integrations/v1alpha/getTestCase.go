// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get a test case
func LookupTestCase(ctx *pulumi.Context, args *LookupTestCaseArgs, opts ...pulumi.InvokeOption) (*LookupTestCaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTestCaseResult
	err := ctx.Invoke("google-native:integrations/v1alpha:getTestCase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTestCaseArgs struct {
	IntegrationId string  `pulumi:"integrationId"`
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	TestCaseId    string  `pulumi:"testCaseId"`
	VersionId     string  `pulumi:"versionId"`
}

type LookupTestCaseResult struct {
	// Auto-generated.
	CreateTime string `pulumi:"createTime"`
	// Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail string `pulumi:"creatorEmail"`
	// Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
	DatabasePersistencePolicy string `pulumi:"databasePersistencePolicy"`
	// Optional. Description of the test case.
	Description string `pulumi:"description"`
	// The display name of test case.
	DisplayName string `pulumi:"displayName"`
	// The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail string `pulumi:"lastModifierEmail"`
	// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LockHolderEmail string `pulumi:"lockHolderEmail"`
	// Auto-generated primary key.
	Name string `pulumi:"name"`
	// Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
	TestInputParameters []GoogleCloudIntegrationsV1alphaIntegrationParameterResponse `pulumi:"testInputParameters"`
	// Optional. However, the test case doesn't mock or assert anything without test_task_configs.
	TestTaskConfigs []GoogleCloudIntegrationsV1alphaTestTaskConfigResponse `pulumi:"testTaskConfigs"`
	// This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
	TriggerId string `pulumi:"triggerId"`
	// Auto-generated.
	UpdateTime string `pulumi:"updateTime"`
	// ID of the workflow with which this test case is associated
	WorkflowId string `pulumi:"workflowId"`
}

func LookupTestCaseOutput(ctx *pulumi.Context, args LookupTestCaseOutputArgs, opts ...pulumi.InvokeOption) LookupTestCaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTestCaseResult, error) {
			args := v.(LookupTestCaseArgs)
			r, err := LookupTestCase(ctx, &args, opts...)
			var s LookupTestCaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTestCaseResultOutput)
}

type LookupTestCaseOutputArgs struct {
	IntegrationId pulumi.StringInput    `pulumi:"integrationId"`
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	TestCaseId    pulumi.StringInput    `pulumi:"testCaseId"`
	VersionId     pulumi.StringInput    `pulumi:"versionId"`
}

func (LookupTestCaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTestCaseArgs)(nil)).Elem()
}

type LookupTestCaseResultOutput struct{ *pulumi.OutputState }

func (LookupTestCaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTestCaseResult)(nil)).Elem()
}

func (o LookupTestCaseResultOutput) ToLookupTestCaseResultOutput() LookupTestCaseResultOutput {
	return o
}

func (o LookupTestCaseResultOutput) ToLookupTestCaseResultOutputWithContext(ctx context.Context) LookupTestCaseResultOutput {
	return o
}

func (o LookupTestCaseResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTestCaseResult] {
	return pulumix.Output[LookupTestCaseResult]{
		OutputState: o.OutputState,
	}
}

// Auto-generated.
func (o LookupTestCaseResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o LookupTestCaseResultOutput) CreatorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.CreatorEmail }).(pulumi.StringOutput)
}

// Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
func (o LookupTestCaseResultOutput) DatabasePersistencePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.DatabasePersistencePolicy }).(pulumi.StringOutput)
}

// Optional. Description of the test case.
func (o LookupTestCaseResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of test case.
func (o LookupTestCaseResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o LookupTestCaseResultOutput) LastModifierEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.LastModifierEmail }).(pulumi.StringOutput)
}

// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o LookupTestCaseResultOutput) LockHolderEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.LockHolderEmail }).(pulumi.StringOutput)
}

// Auto-generated primary key.
func (o LookupTestCaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
func (o LookupTestCaseResultOutput) TestInputParameters() GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput {
	return o.ApplyT(func(v LookupTestCaseResult) []GoogleCloudIntegrationsV1alphaIntegrationParameterResponse {
		return v.TestInputParameters
	}).(GoogleCloudIntegrationsV1alphaIntegrationParameterResponseArrayOutput)
}

// Optional. However, the test case doesn't mock or assert anything without test_task_configs.
func (o LookupTestCaseResultOutput) TestTaskConfigs() GoogleCloudIntegrationsV1alphaTestTaskConfigResponseArrayOutput {
	return o.ApplyT(func(v LookupTestCaseResult) []GoogleCloudIntegrationsV1alphaTestTaskConfigResponse {
		return v.TestTaskConfigs
	}).(GoogleCloudIntegrationsV1alphaTestTaskConfigResponseArrayOutput)
}

// This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
func (o LookupTestCaseResultOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.TriggerId }).(pulumi.StringOutput)
}

// Auto-generated.
func (o LookupTestCaseResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// ID of the workflow with which this test case is associated
func (o LookupTestCaseResultOutput) WorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTestCaseResult) string { return v.WorkflowId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTestCaseResultOutput{})
}
