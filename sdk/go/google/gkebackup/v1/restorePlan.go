// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new RestorePlan in a given location.
// Auto-naming is currently not supported for this resource.
type RestorePlan struct {
	pulumi.CustomResourceState

	// Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.
	BackupPlan pulumi.StringOutput `pulumi:"backupPlan"`
	// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`
	Cluster pulumi.StringOutput `pulumi:"cluster"`
	// The timestamp when this RestorePlan resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User specified descriptive string for this RestorePlan.
	Description pulumi.StringOutput `pulumi:"description"`
	// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// A set of custom labels supplied by user.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration of Restores created via this RestorePlan.
	RestoreConfig RestoreConfigResponseOutput `pulumi:"restoreConfig"`
	// Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location
	RestorePlanId pulumi.StringOutput `pulumi:"restorePlanId"`
	// Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The timestamp when this RestorePlan resource was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewRestorePlan registers a new resource with the given unique name, arguments, and options.
func NewRestorePlan(ctx *pulumi.Context,
	name string, args *RestorePlanArgs, opts ...pulumi.ResourceOption) (*RestorePlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupPlan == nil {
		return nil, errors.New("invalid value for required argument 'BackupPlan'")
	}
	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.RestoreConfig == nil {
		return nil, errors.New("invalid value for required argument 'RestoreConfig'")
	}
	if args.RestorePlanId == nil {
		return nil, errors.New("invalid value for required argument 'RestorePlanId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"location",
		"project",
		"restorePlanId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestorePlan
	err := ctx.RegisterResource("google-native:gkebackup/v1:RestorePlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestorePlan gets an existing RestorePlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestorePlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestorePlanState, opts ...pulumi.ResourceOption) (*RestorePlan, error) {
	var resource RestorePlan
	err := ctx.ReadResource("google-native:gkebackup/v1:RestorePlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestorePlan resources.
type restorePlanState struct {
}

type RestorePlanState struct {
}

func (RestorePlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanState)(nil)).Elem()
}

type restorePlanArgs struct {
	// Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.
	BackupPlan string `pulumi:"backupPlan"`
	// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`
	Cluster string `pulumi:"cluster"`
	// User specified descriptive string for this RestorePlan.
	Description *string `pulumi:"description"`
	// A set of custom labels supplied by user.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	Project  *string           `pulumi:"project"`
	// Configuration of Restores created via this RestorePlan.
	RestoreConfig RestoreConfig `pulumi:"restoreConfig"`
	// Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location
	RestorePlanId string `pulumi:"restorePlanId"`
}

// The set of arguments for constructing a RestorePlan resource.
type RestorePlanArgs struct {
	// Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.
	BackupPlan pulumi.StringInput
	// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`
	Cluster pulumi.StringInput
	// User specified descriptive string for this RestorePlan.
	Description pulumi.StringPtrInput
	// A set of custom labels supplied by user.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// Configuration of Restores created via this RestorePlan.
	RestoreConfig RestoreConfigInput
	// Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location
	RestorePlanId pulumi.StringInput
}

func (RestorePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restorePlanArgs)(nil)).Elem()
}

type RestorePlanInput interface {
	pulumi.Input

	ToRestorePlanOutput() RestorePlanOutput
	ToRestorePlanOutputWithContext(ctx context.Context) RestorePlanOutput
}

func (*RestorePlan) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlan)(nil)).Elem()
}

func (i *RestorePlan) ToRestorePlanOutput() RestorePlanOutput {
	return i.ToRestorePlanOutputWithContext(context.Background())
}

func (i *RestorePlan) ToRestorePlanOutputWithContext(ctx context.Context) RestorePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestorePlanOutput)
}

type RestorePlanOutput struct{ *pulumi.OutputState }

func (RestorePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestorePlan)(nil)).Elem()
}

func (o RestorePlanOutput) ToRestorePlanOutput() RestorePlanOutput {
	return o
}

func (o RestorePlanOutput) ToRestorePlanOutputWithContext(ctx context.Context) RestorePlanOutput {
	return o
}

// Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: `projects/*/locations/*/backupPlans/*`.
func (o RestorePlanOutput) BackupPlan() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.BackupPlan }).(pulumi.StringOutput)
}

// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*`
func (o RestorePlanOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

// The timestamp when this RestorePlan resource was created.
func (o RestorePlanOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User specified descriptive string for this RestorePlan.
func (o RestorePlanOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource.
func (o RestorePlanOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// A set of custom labels supplied by user.
func (o RestorePlanOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o RestorePlanOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The full name of the RestorePlan resource. Format: `projects/*/locations/*/restorePlans/*`.
func (o RestorePlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o RestorePlanOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration of Restores created via this RestorePlan.
func (o RestorePlanOutput) RestoreConfig() RestoreConfigResponseOutput {
	return o.ApplyT(func(v *RestorePlan) RestoreConfigResponseOutput { return v.RestoreConfig }).(RestoreConfigResponseOutput)
}

// Required. The client-provided short name for the RestorePlan resource. This name must: - be between 1 and 63 characters long (inclusive) - consist of only lower-case ASCII letters, numbers, and dashes - start with a lower-case letter - end with a lower-case letter or number - be unique within the set of RestorePlans in this location
func (o RestorePlanOutput) RestorePlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.RestorePlanId }).(pulumi.StringOutput)
}

// Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
func (o RestorePlanOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The timestamp when this RestorePlan resource was last updated.
func (o RestorePlanOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RestorePlan) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestorePlanInput)(nil)).Elem(), &RestorePlan{})
	pulumi.RegisterOutputType(RestorePlanOutput{})
}
