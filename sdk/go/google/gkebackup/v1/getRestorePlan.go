// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve the details of a single RestorePlan.
func LookupRestorePlan(ctx *pulumi.Context, args *LookupRestorePlanArgs, opts ...pulumi.InvokeOption) (*LookupRestorePlanResult, error) {
	var rv LookupRestorePlanResult
	err := ctx.Invoke("google-native:gkebackup/v1:getRestorePlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRestorePlanArgs struct {
	Location      string  `pulumi:"location"`
	Project       *string `pulumi:"project"`
	RestorePlanId string  `pulumi:"restorePlanId"`
}

type LookupRestorePlanResult struct {
	// Immutable. The BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: projects/*/locations/*/backupPlans/*.
	BackupPlan string `pulumi:"backupPlan"`
	// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Possible formats: 1. projects/*/locations/*/clusters/* 2. projects/*/zones/*/clusters/*
	Cluster string `pulumi:"cluster"`
	// The timestamp when this RestorePlan resource was created - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
	CreateTime string `pulumi:"createTime"`
	// User specified descriptive string for this RestorePlan.
	Description string `pulumi:"description"`
	// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` to ensure that their change will be applied to the same version.
	Etag string `pulumi:"etag"`
	// A set of custom labels supplied by user.
	Labels map[string]string `pulumi:"labels"`
	// The full name of the RestorePlan resource. Format: projects/*/locations/*/restorePlans/*
	Name string `pulumi:"name"`
	// Configuration of Restores created via this RestorePlan.
	RestoreConfig RestoreConfigResponse `pulumi:"restoreConfig"`
	// Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
	Uid string `pulumi:"uid"`
	// The timestamp when this RestorePlan resource was last updated - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
	UpdateTime string `pulumi:"updateTime"`
}

func LookupRestorePlanOutput(ctx *pulumi.Context, args LookupRestorePlanOutputArgs, opts ...pulumi.InvokeOption) LookupRestorePlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRestorePlanResult, error) {
			args := v.(LookupRestorePlanArgs)
			r, err := LookupRestorePlan(ctx, &args, opts...)
			var s LookupRestorePlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRestorePlanResultOutput)
}

type LookupRestorePlanOutputArgs struct {
	Location      pulumi.StringInput    `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	RestorePlanId pulumi.StringInput    `pulumi:"restorePlanId"`
}

func (LookupRestorePlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRestorePlanArgs)(nil)).Elem()
}

type LookupRestorePlanResultOutput struct{ *pulumi.OutputState }

func (LookupRestorePlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRestorePlanResult)(nil)).Elem()
}

func (o LookupRestorePlanResultOutput) ToLookupRestorePlanResultOutput() LookupRestorePlanResultOutput {
	return o
}

func (o LookupRestorePlanResultOutput) ToLookupRestorePlanResultOutputWithContext(ctx context.Context) LookupRestorePlanResultOutput {
	return o
}

// Immutable. The BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: projects/*/locations/*/backupPlans/*.
func (o LookupRestorePlanResultOutput) BackupPlan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.BackupPlan }).(pulumi.StringOutput)
}

// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Possible formats: 1. projects/*/locations/*/clusters/* 2. projects/*/zones/*/clusters/*
func (o LookupRestorePlanResultOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.Cluster }).(pulumi.StringOutput)
}

// The timestamp when this RestorePlan resource was created - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
func (o LookupRestorePlanResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// User specified descriptive string for this RestorePlan.
func (o LookupRestorePlanResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.Description }).(pulumi.StringOutput)
}

// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` to ensure that their change will be applied to the same version.
func (o LookupRestorePlanResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.Etag }).(pulumi.StringOutput)
}

// A set of custom labels supplied by user.
func (o LookupRestorePlanResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The full name of the RestorePlan resource. Format: projects/*/locations/*/restorePlans/*
func (o LookupRestorePlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration of Restores created via this RestorePlan.
func (o LookupRestorePlanResultOutput) RestoreConfig() RestoreConfigResponseOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) RestoreConfigResponse { return v.RestoreConfig }).(RestoreConfigResponseOutput)
}

// Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
func (o LookupRestorePlanResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.Uid }).(pulumi.StringOutput)
}

// The timestamp when this RestorePlan resource was last updated - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
func (o LookupRestorePlanResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRestorePlanResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRestorePlanResultOutput{})
}
