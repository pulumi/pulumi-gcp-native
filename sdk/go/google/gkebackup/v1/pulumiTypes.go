// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfig struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfig `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service *string `pulumi:"service"`
}

// AuditConfigInput is an input type that accepts AuditConfigArgs and AuditConfigOutput values.
// You can construct a concrete instance of `AuditConfigInput` via:
//
//	AuditConfigArgs{...}
type AuditConfigInput interface {
	pulumi.Input

	ToAuditConfigOutput() AuditConfigOutput
	ToAuditConfigOutputWithContext(context.Context) AuditConfigOutput
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigArgs struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs AuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (AuditConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (i AuditConfigArgs) ToAuditConfigOutput() AuditConfigOutput {
	return i.ToAuditConfigOutputWithContext(context.Background())
}

func (i AuditConfigArgs) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigOutput)
}

// AuditConfigArrayInput is an input type that accepts AuditConfigArray and AuditConfigArrayOutput values.
// You can construct a concrete instance of `AuditConfigArrayInput` via:
//
//	AuditConfigArray{ AuditConfigArgs{...} }
type AuditConfigArrayInput interface {
	pulumi.Input

	ToAuditConfigArrayOutput() AuditConfigArrayOutput
	ToAuditConfigArrayOutputWithContext(context.Context) AuditConfigArrayOutput
}

type AuditConfigArray []AuditConfigInput

func (AuditConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (i AuditConfigArray) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return i.ToAuditConfigArrayOutputWithContext(context.Background())
}

func (i AuditConfigArray) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditConfigArrayOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigOutput struct{ *pulumi.OutputState }

func (AuditConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfig)(nil)).Elem()
}

func (o AuditConfigOutput) ToAuditConfigOutput() AuditConfigOutput {
	return o
}

func (o AuditConfigOutput) ToAuditConfigOutputWithContext(ctx context.Context) AuditConfigOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigOutput) AuditLogConfigs() AuditLogConfigArrayOutput {
	return o.ApplyT(func(v AuditConfig) []AuditLogConfig { return v.AuditLogConfigs }).(AuditLogConfigArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuditConfig) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type AuditConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfig)(nil)).Elem()
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutput() AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) ToAuditConfigArrayOutputWithContext(ctx context.Context) AuditConfigArrayOutput {
	return o
}

func (o AuditConfigArrayOutput) Index(i pulumi.IntInput) AuditConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfig {
		return vs[0].([]AuditConfig)[vs[1].(int)]
	}).(AuditConfigOutput)
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponse struct {
	// The configuration for logging of each type of permission.
	AuditLogConfigs []AuditLogConfigResponse `pulumi:"auditLogConfigs"`
	// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
	Service string `pulumi:"service"`
}

// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
type AuditConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutput() AuditConfigResponseOutput {
	return o
}

func (o AuditConfigResponseOutput) ToAuditConfigResponseOutputWithContext(ctx context.Context) AuditConfigResponseOutput {
	return o
}

// The configuration for logging of each type of permission.
func (o AuditConfigResponseOutput) AuditLogConfigs() AuditLogConfigResponseArrayOutput {
	return o.ApplyT(func(v AuditConfigResponse) []AuditLogConfigResponse { return v.AuditLogConfigs }).(AuditLogConfigResponseArrayOutput)
}

// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
func (o AuditConfigResponseOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v AuditConfigResponse) string { return v.Service }).(pulumi.StringOutput)
}

type AuditConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditConfigResponse)(nil)).Elem()
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutput() AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) ToAuditConfigResponseArrayOutputWithContext(ctx context.Context) AuditConfigResponseArrayOutput {
	return o
}

func (o AuditConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditConfigResponse {
		return vs[0].([]AuditConfigResponse)[vs[1].(int)]
	}).(AuditConfigResponseOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfig struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType *AuditLogConfigLogType `pulumi:"logType"`
}

// AuditLogConfigInput is an input type that accepts AuditLogConfigArgs and AuditLogConfigOutput values.
// You can construct a concrete instance of `AuditLogConfigInput` via:
//
//	AuditLogConfigArgs{...}
type AuditLogConfigInput interface {
	pulumi.Input

	ToAuditLogConfigOutput() AuditLogConfigOutput
	ToAuditLogConfigOutputWithContext(context.Context) AuditLogConfigOutput
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigArgs struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers pulumi.StringArrayInput `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType AuditLogConfigLogTypePtrInput `pulumi:"logType"`
}

func (AuditLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return i.ToAuditLogConfigOutputWithContext(context.Background())
}

func (i AuditLogConfigArgs) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigOutput)
}

// AuditLogConfigArrayInput is an input type that accepts AuditLogConfigArray and AuditLogConfigArrayOutput values.
// You can construct a concrete instance of `AuditLogConfigArrayInput` via:
//
//	AuditLogConfigArray{ AuditLogConfigArgs{...} }
type AuditLogConfigArrayInput interface {
	pulumi.Input

	ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput
	ToAuditLogConfigArrayOutputWithContext(context.Context) AuditLogConfigArrayOutput
}

type AuditLogConfigArray []AuditLogConfigInput

func (AuditLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return i.ToAuditLogConfigArrayOutputWithContext(context.Background())
}

func (i AuditLogConfigArray) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuditLogConfigArrayOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigOutput struct{ *pulumi.OutputState }

func (AuditLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutput() AuditLogConfigOutput {
	return o
}

func (o AuditLogConfigOutput) ToAuditLogConfigOutputWithContext(ctx context.Context) AuditLogConfigOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfig) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigOutput) LogType() AuditLogConfigLogTypePtrOutput {
	return o.ApplyT(func(v AuditLogConfig) *AuditLogConfigLogType { return v.LogType }).(AuditLogConfigLogTypePtrOutput)
}

type AuditLogConfigArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfig)(nil)).Elem()
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutput() AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) ToAuditLogConfigArrayOutputWithContext(ctx context.Context) AuditLogConfigArrayOutput {
	return o
}

func (o AuditLogConfigArrayOutput) Index(i pulumi.IntInput) AuditLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfig {
		return vs[0].([]AuditLogConfig)[vs[1].(int)]
	}).(AuditLogConfigOutput)
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponse struct {
	// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
	ExemptedMembers []string `pulumi:"exemptedMembers"`
	// The log type that this config enables.
	LogType string `pulumi:"logType"`
}

// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
type AuditLogConfigResponseOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutput() AuditLogConfigResponseOutput {
	return o
}

func (o AuditLogConfigResponseOutput) ToAuditLogConfigResponseOutputWithContext(ctx context.Context) AuditLogConfigResponseOutput {
	return o
}

// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
func (o AuditLogConfigResponseOutput) ExemptedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) []string { return v.ExemptedMembers }).(pulumi.StringArrayOutput)
}

// The log type that this config enables.
func (o AuditLogConfigResponseOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v AuditLogConfigResponse) string { return v.LogType }).(pulumi.StringOutput)
}

type AuditLogConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (AuditLogConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuditLogConfigResponse)(nil)).Elem()
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutput() AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) ToAuditLogConfigResponseArrayOutputWithContext(ctx context.Context) AuditLogConfigResponseArrayOutput {
	return o
}

func (o AuditLogConfigResponseArrayOutput) Index(i pulumi.IntInput) AuditLogConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuditLogConfigResponse {
		return vs[0].([]AuditLogConfigResponse)[vs[1].(int)]
	}).(AuditLogConfigResponseOutput)
}

// BackupConfig defines the configuration of Backups created via this BackupPlan.
type BackupConfig struct {
	// If True, include all namespaced resources
	AllNamespaces *bool `pulumi:"allNamespaces"`
	// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
	EncryptionKey *EncryptionKey `pulumi:"encryptionKey"`
	// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
	IncludeSecrets *bool `pulumi:"includeSecrets"`
	// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
	IncludeVolumeData *bool `pulumi:"includeVolumeData"`
	// If set, include just the resources referenced by the listed ProtectedApplications.
	SelectedApplications *NamespacedNames `pulumi:"selectedApplications"`
	// If set, include just the resources in the listed namespaces.
	SelectedNamespaces *Namespaces `pulumi:"selectedNamespaces"`
}

// BackupConfigInput is an input type that accepts BackupConfigArgs and BackupConfigOutput values.
// You can construct a concrete instance of `BackupConfigInput` via:
//
//	BackupConfigArgs{...}
type BackupConfigInput interface {
	pulumi.Input

	ToBackupConfigOutput() BackupConfigOutput
	ToBackupConfigOutputWithContext(context.Context) BackupConfigOutput
}

// BackupConfig defines the configuration of Backups created via this BackupPlan.
type BackupConfigArgs struct {
	// If True, include all namespaced resources
	AllNamespaces pulumi.BoolPtrInput `pulumi:"allNamespaces"`
	// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
	EncryptionKey EncryptionKeyPtrInput `pulumi:"encryptionKey"`
	// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
	IncludeSecrets pulumi.BoolPtrInput `pulumi:"includeSecrets"`
	// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
	IncludeVolumeData pulumi.BoolPtrInput `pulumi:"includeVolumeData"`
	// If set, include just the resources referenced by the listed ProtectedApplications.
	SelectedApplications NamespacedNamesPtrInput `pulumi:"selectedApplications"`
	// If set, include just the resources in the listed namespaces.
	SelectedNamespaces NamespacesPtrInput `pulumi:"selectedNamespaces"`
}

func (BackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupConfig)(nil)).Elem()
}

func (i BackupConfigArgs) ToBackupConfigOutput() BackupConfigOutput {
	return i.ToBackupConfigOutputWithContext(context.Background())
}

func (i BackupConfigArgs) ToBackupConfigOutputWithContext(ctx context.Context) BackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupConfigOutput)
}

func (i BackupConfigArgs) ToBackupConfigPtrOutput() BackupConfigPtrOutput {
	return i.ToBackupConfigPtrOutputWithContext(context.Background())
}

func (i BackupConfigArgs) ToBackupConfigPtrOutputWithContext(ctx context.Context) BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupConfigOutput).ToBackupConfigPtrOutputWithContext(ctx)
}

// BackupConfigPtrInput is an input type that accepts BackupConfigArgs, BackupConfigPtr and BackupConfigPtrOutput values.
// You can construct a concrete instance of `BackupConfigPtrInput` via:
//
//	        BackupConfigArgs{...}
//
//	or:
//
//	        nil
type BackupConfigPtrInput interface {
	pulumi.Input

	ToBackupConfigPtrOutput() BackupConfigPtrOutput
	ToBackupConfigPtrOutputWithContext(context.Context) BackupConfigPtrOutput
}

type backupConfigPtrType BackupConfigArgs

func BackupConfigPtr(v *BackupConfigArgs) BackupConfigPtrInput {
	return (*backupConfigPtrType)(v)
}

func (*backupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupConfig)(nil)).Elem()
}

func (i *backupConfigPtrType) ToBackupConfigPtrOutput() BackupConfigPtrOutput {
	return i.ToBackupConfigPtrOutputWithContext(context.Background())
}

func (i *backupConfigPtrType) ToBackupConfigPtrOutputWithContext(ctx context.Context) BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupConfigPtrOutput)
}

// BackupConfig defines the configuration of Backups created via this BackupPlan.
type BackupConfigOutput struct{ *pulumi.OutputState }

func (BackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupConfig)(nil)).Elem()
}

func (o BackupConfigOutput) ToBackupConfigOutput() BackupConfigOutput {
	return o
}

func (o BackupConfigOutput) ToBackupConfigOutputWithContext(ctx context.Context) BackupConfigOutput {
	return o
}

func (o BackupConfigOutput) ToBackupConfigPtrOutput() BackupConfigPtrOutput {
	return o.ToBackupConfigPtrOutputWithContext(context.Background())
}

func (o BackupConfigOutput) ToBackupConfigPtrOutputWithContext(ctx context.Context) BackupConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupConfig) *BackupConfig {
		return &v
	}).(BackupConfigPtrOutput)
}

// If True, include all namespaced resources
func (o BackupConfigOutput) AllNamespaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupConfig) *bool { return v.AllNamespaces }).(pulumi.BoolPtrOutput)
}

// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
func (o BackupConfigOutput) EncryptionKey() EncryptionKeyPtrOutput {
	return o.ApplyT(func(v BackupConfig) *EncryptionKey { return v.EncryptionKey }).(EncryptionKeyPtrOutput)
}

// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
func (o BackupConfigOutput) IncludeSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupConfig) *bool { return v.IncludeSecrets }).(pulumi.BoolPtrOutput)
}

// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
func (o BackupConfigOutput) IncludeVolumeData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupConfig) *bool { return v.IncludeVolumeData }).(pulumi.BoolPtrOutput)
}

// If set, include just the resources referenced by the listed ProtectedApplications.
func (o BackupConfigOutput) SelectedApplications() NamespacedNamesPtrOutput {
	return o.ApplyT(func(v BackupConfig) *NamespacedNames { return v.SelectedApplications }).(NamespacedNamesPtrOutput)
}

// If set, include just the resources in the listed namespaces.
func (o BackupConfigOutput) SelectedNamespaces() NamespacesPtrOutput {
	return o.ApplyT(func(v BackupConfig) *Namespaces { return v.SelectedNamespaces }).(NamespacesPtrOutput)
}

type BackupConfigPtrOutput struct{ *pulumi.OutputState }

func (BackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupConfig)(nil)).Elem()
}

func (o BackupConfigPtrOutput) ToBackupConfigPtrOutput() BackupConfigPtrOutput {
	return o
}

func (o BackupConfigPtrOutput) ToBackupConfigPtrOutputWithContext(ctx context.Context) BackupConfigPtrOutput {
	return o
}

func (o BackupConfigPtrOutput) Elem() BackupConfigOutput {
	return o.ApplyT(func(v *BackupConfig) BackupConfig {
		if v != nil {
			return *v
		}
		var ret BackupConfig
		return ret
	}).(BackupConfigOutput)
}

// If True, include all namespaced resources
func (o BackupConfigPtrOutput) AllNamespaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllNamespaces
	}).(pulumi.BoolPtrOutput)
}

// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
func (o BackupConfigPtrOutput) EncryptionKey() EncryptionKeyPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *EncryptionKey {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(EncryptionKeyPtrOutput)
}

// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
func (o BackupConfigPtrOutput) IncludeSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSecrets
	}).(pulumi.BoolPtrOutput)
}

// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
func (o BackupConfigPtrOutput) IncludeVolumeData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeVolumeData
	}).(pulumi.BoolPtrOutput)
}

// If set, include just the resources referenced by the listed ProtectedApplications.
func (o BackupConfigPtrOutput) SelectedApplications() NamespacedNamesPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *NamespacedNames {
		if v == nil {
			return nil
		}
		return v.SelectedApplications
	}).(NamespacedNamesPtrOutput)
}

// If set, include just the resources in the listed namespaces.
func (o BackupConfigPtrOutput) SelectedNamespaces() NamespacesPtrOutput {
	return o.ApplyT(func(v *BackupConfig) *Namespaces {
		if v == nil {
			return nil
		}
		return v.SelectedNamespaces
	}).(NamespacesPtrOutput)
}

// BackupConfig defines the configuration of Backups created via this BackupPlan.
type BackupConfigResponse struct {
	// If True, include all namespaced resources
	AllNamespaces bool `pulumi:"allNamespaces"`
	// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
	EncryptionKey EncryptionKeyResponse `pulumi:"encryptionKey"`
	// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
	IncludeSecrets bool `pulumi:"includeSecrets"`
	// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
	IncludeVolumeData bool `pulumi:"includeVolumeData"`
	// If set, include just the resources referenced by the listed ProtectedApplications.
	SelectedApplications NamespacedNamesResponse `pulumi:"selectedApplications"`
	// If set, include just the resources in the listed namespaces.
	SelectedNamespaces NamespacesResponse `pulumi:"selectedNamespaces"`
}

// BackupConfig defines the configuration of Backups created via this BackupPlan.
type BackupConfigResponseOutput struct{ *pulumi.OutputState }

func (BackupConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupConfigResponse)(nil)).Elem()
}

func (o BackupConfigResponseOutput) ToBackupConfigResponseOutput() BackupConfigResponseOutput {
	return o
}

func (o BackupConfigResponseOutput) ToBackupConfigResponseOutputWithContext(ctx context.Context) BackupConfigResponseOutput {
	return o
}

// If True, include all namespaced resources
func (o BackupConfigResponseOutput) AllNamespaces() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupConfigResponse) bool { return v.AllNamespaces }).(pulumi.BoolOutput)
}

// This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
func (o BackupConfigResponseOutput) EncryptionKey() EncryptionKeyResponseOutput {
	return o.ApplyT(func(v BackupConfigResponse) EncryptionKeyResponse { return v.EncryptionKey }).(EncryptionKeyResponseOutput)
}

// This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
func (o BackupConfigResponseOutput) IncludeSecrets() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupConfigResponse) bool { return v.IncludeSecrets }).(pulumi.BoolOutput)
}

// This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
func (o BackupConfigResponseOutput) IncludeVolumeData() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupConfigResponse) bool { return v.IncludeVolumeData }).(pulumi.BoolOutput)
}

// If set, include just the resources referenced by the listed ProtectedApplications.
func (o BackupConfigResponseOutput) SelectedApplications() NamespacedNamesResponseOutput {
	return o.ApplyT(func(v BackupConfigResponse) NamespacedNamesResponse { return v.SelectedApplications }).(NamespacedNamesResponseOutput)
}

// If set, include just the resources in the listed namespaces.
func (o BackupConfigResponseOutput) SelectedNamespaces() NamespacesResponseOutput {
	return o.ApplyT(func(v BackupConfigResponse) NamespacesResponse { return v.SelectedNamespaces }).(NamespacesResponseOutput)
}

// Associates `members`, or principals, with a `role`.
type Binding struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition *Expr `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role *string `pulumi:"role"`
}

// BindingInput is an input type that accepts BindingArgs and BindingOutput values.
// You can construct a concrete instance of `BindingInput` via:
//
//	BindingArgs{...}
type BindingInput interface {
	pulumi.Input

	ToBindingOutput() BindingOutput
	ToBindingOutputWithContext(context.Context) BindingOutput
}

// Associates `members`, or principals, with a `role`.
type BindingArgs struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprPtrInput `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members pulumi.StringArrayInput `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (BindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (i BindingArgs) ToBindingOutput() BindingOutput {
	return i.ToBindingOutputWithContext(context.Background())
}

func (i BindingArgs) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingOutput)
}

// BindingArrayInput is an input type that accepts BindingArray and BindingArrayOutput values.
// You can construct a concrete instance of `BindingArrayInput` via:
//
//	BindingArray{ BindingArgs{...} }
type BindingArrayInput interface {
	pulumi.Input

	ToBindingArrayOutput() BindingArrayOutput
	ToBindingArrayOutputWithContext(context.Context) BindingArrayOutput
}

type BindingArray []BindingInput

func (BindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (i BindingArray) ToBindingArrayOutput() BindingArrayOutput {
	return i.ToBindingArrayOutputWithContext(context.Background())
}

func (i BindingArray) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingArrayOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingOutput struct{ *pulumi.OutputState }

func (BindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Binding)(nil)).Elem()
}

func (o BindingOutput) ToBindingOutput() BindingOutput {
	return o
}

func (o BindingOutput) ToBindingOutputWithContext(ctx context.Context) BindingOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingOutput) Condition() ExprPtrOutput {
	return o.ApplyT(func(v Binding) *Expr { return v.Condition }).(ExprPtrOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Binding) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Binding) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type BindingArrayOutput struct{ *pulumi.OutputState }

func (BindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Binding)(nil)).Elem()
}

func (o BindingArrayOutput) ToBindingArrayOutput() BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) ToBindingArrayOutputWithContext(ctx context.Context) BindingArrayOutput {
	return o
}

func (o BindingArrayOutput) Index(i pulumi.IntInput) BindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Binding {
		return vs[0].([]Binding)[vs[1].(int)]
	}).(BindingOutput)
}

// Associates `members`, or principals, with a `role`.
type BindingResponse struct {
	// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
	Condition ExprResponse `pulumi:"condition"`
	// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
	Members []string `pulumi:"members"`
	// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role string `pulumi:"role"`
}

// Associates `members`, or principals, with a `role`.
type BindingResponseOutput struct{ *pulumi.OutputState }

func (BindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingResponse)(nil)).Elem()
}

func (o BindingResponseOutput) ToBindingResponseOutput() BindingResponseOutput {
	return o
}

func (o BindingResponseOutput) ToBindingResponseOutputWithContext(ctx context.Context) BindingResponseOutput {
	return o
}

// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
func (o BindingResponseOutput) Condition() ExprResponseOutput {
	return o.ApplyT(func(v BindingResponse) ExprResponse { return v.Condition }).(ExprResponseOutput)
}

// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
func (o BindingResponseOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BindingResponse) []string { return v.Members }).(pulumi.StringArrayOutput)
}

// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
func (o BindingResponseOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v BindingResponse) string { return v.Role }).(pulumi.StringOutput)
}

type BindingResponseArrayOutput struct{ *pulumi.OutputState }

func (BindingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingResponse)(nil)).Elem()
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutput() BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) ToBindingResponseArrayOutputWithContext(ctx context.Context) BindingResponseArrayOutput {
	return o
}

func (o BindingResponseArrayOutput) Index(i pulumi.IntInput) BindingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingResponse {
		return vs[0].([]BindingResponse)[vs[1].(int)]
	}).(BindingResponseOutput)
}

// Information about the GKE cluster from which this Backup was created.
type ClusterMetadataResponse struct {
	// Anthos version
	AnthosVersion string `pulumi:"anthosVersion"`
	// A list of the Backup for GKE CRD versions found in the cluster.
	BackupCrdVersions map[string]string `pulumi:"backupCrdVersions"`
	// The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan's cluster field.
	Cluster string `pulumi:"cluster"`
	// GKE version
	GkeVersion string `pulumi:"gkeVersion"`
	// The Kubernetes server version of the source cluster.
	K8sVersion string `pulumi:"k8sVersion"`
}

// Information about the GKE cluster from which this Backup was created.
type ClusterMetadataResponseOutput struct{ *pulumi.OutputState }

func (ClusterMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMetadataResponse)(nil)).Elem()
}

func (o ClusterMetadataResponseOutput) ToClusterMetadataResponseOutput() ClusterMetadataResponseOutput {
	return o
}

func (o ClusterMetadataResponseOutput) ToClusterMetadataResponseOutputWithContext(ctx context.Context) ClusterMetadataResponseOutput {
	return o
}

// Anthos version
func (o ClusterMetadataResponseOutput) AnthosVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetadataResponse) string { return v.AnthosVersion }).(pulumi.StringOutput)
}

// A list of the Backup for GKE CRD versions found in the cluster.
func (o ClusterMetadataResponseOutput) BackupCrdVersions() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterMetadataResponse) map[string]string { return v.BackupCrdVersions }).(pulumi.StringMapOutput)
}

// The source cluster from which this Backup was created. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` This is inherited from the parent BackupPlan's cluster field.
func (o ClusterMetadataResponseOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetadataResponse) string { return v.Cluster }).(pulumi.StringOutput)
}

// GKE version
func (o ClusterMetadataResponseOutput) GkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetadataResponse) string { return v.GkeVersion }).(pulumi.StringOutput)
}

// The Kubernetes server version of the source cluster.
func (o ClusterMetadataResponseOutput) K8sVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterMetadataResponse) string { return v.K8sVersion }).(pulumi.StringOutput)
}

// Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
type ClusterResourceRestoreScope struct {
	// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
	SelectedGroupKinds []GroupKind `pulumi:"selectedGroupKinds"`
}

// ClusterResourceRestoreScopeInput is an input type that accepts ClusterResourceRestoreScopeArgs and ClusterResourceRestoreScopeOutput values.
// You can construct a concrete instance of `ClusterResourceRestoreScopeInput` via:
//
//	ClusterResourceRestoreScopeArgs{...}
type ClusterResourceRestoreScopeInput interface {
	pulumi.Input

	ToClusterResourceRestoreScopeOutput() ClusterResourceRestoreScopeOutput
	ToClusterResourceRestoreScopeOutputWithContext(context.Context) ClusterResourceRestoreScopeOutput
}

// Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
type ClusterResourceRestoreScopeArgs struct {
	// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
	SelectedGroupKinds GroupKindArrayInput `pulumi:"selectedGroupKinds"`
}

func (ClusterResourceRestoreScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceRestoreScope)(nil)).Elem()
}

func (i ClusterResourceRestoreScopeArgs) ToClusterResourceRestoreScopeOutput() ClusterResourceRestoreScopeOutput {
	return i.ToClusterResourceRestoreScopeOutputWithContext(context.Background())
}

func (i ClusterResourceRestoreScopeArgs) ToClusterResourceRestoreScopeOutputWithContext(ctx context.Context) ClusterResourceRestoreScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceRestoreScopeOutput)
}

func (i ClusterResourceRestoreScopeArgs) ToClusterResourceRestoreScopePtrOutput() ClusterResourceRestoreScopePtrOutput {
	return i.ToClusterResourceRestoreScopePtrOutputWithContext(context.Background())
}

func (i ClusterResourceRestoreScopeArgs) ToClusterResourceRestoreScopePtrOutputWithContext(ctx context.Context) ClusterResourceRestoreScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceRestoreScopeOutput).ToClusterResourceRestoreScopePtrOutputWithContext(ctx)
}

// ClusterResourceRestoreScopePtrInput is an input type that accepts ClusterResourceRestoreScopeArgs, ClusterResourceRestoreScopePtr and ClusterResourceRestoreScopePtrOutput values.
// You can construct a concrete instance of `ClusterResourceRestoreScopePtrInput` via:
//
//	        ClusterResourceRestoreScopeArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceRestoreScopePtrInput interface {
	pulumi.Input

	ToClusterResourceRestoreScopePtrOutput() ClusterResourceRestoreScopePtrOutput
	ToClusterResourceRestoreScopePtrOutputWithContext(context.Context) ClusterResourceRestoreScopePtrOutput
}

type clusterResourceRestoreScopePtrType ClusterResourceRestoreScopeArgs

func ClusterResourceRestoreScopePtr(v *ClusterResourceRestoreScopeArgs) ClusterResourceRestoreScopePtrInput {
	return (*clusterResourceRestoreScopePtrType)(v)
}

func (*clusterResourceRestoreScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceRestoreScope)(nil)).Elem()
}

func (i *clusterResourceRestoreScopePtrType) ToClusterResourceRestoreScopePtrOutput() ClusterResourceRestoreScopePtrOutput {
	return i.ToClusterResourceRestoreScopePtrOutputWithContext(context.Background())
}

func (i *clusterResourceRestoreScopePtrType) ToClusterResourceRestoreScopePtrOutputWithContext(ctx context.Context) ClusterResourceRestoreScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceRestoreScopePtrOutput)
}

// Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
type ClusterResourceRestoreScopeOutput struct{ *pulumi.OutputState }

func (ClusterResourceRestoreScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceRestoreScope)(nil)).Elem()
}

func (o ClusterResourceRestoreScopeOutput) ToClusterResourceRestoreScopeOutput() ClusterResourceRestoreScopeOutput {
	return o
}

func (o ClusterResourceRestoreScopeOutput) ToClusterResourceRestoreScopeOutputWithContext(ctx context.Context) ClusterResourceRestoreScopeOutput {
	return o
}

func (o ClusterResourceRestoreScopeOutput) ToClusterResourceRestoreScopePtrOutput() ClusterResourceRestoreScopePtrOutput {
	return o.ToClusterResourceRestoreScopePtrOutputWithContext(context.Background())
}

func (o ClusterResourceRestoreScopeOutput) ToClusterResourceRestoreScopePtrOutputWithContext(ctx context.Context) ClusterResourceRestoreScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceRestoreScope) *ClusterResourceRestoreScope {
		return &v
	}).(ClusterResourceRestoreScopePtrOutput)
}

// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
func (o ClusterResourceRestoreScopeOutput) SelectedGroupKinds() GroupKindArrayOutput {
	return o.ApplyT(func(v ClusterResourceRestoreScope) []GroupKind { return v.SelectedGroupKinds }).(GroupKindArrayOutput)
}

type ClusterResourceRestoreScopePtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceRestoreScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceRestoreScope)(nil)).Elem()
}

func (o ClusterResourceRestoreScopePtrOutput) ToClusterResourceRestoreScopePtrOutput() ClusterResourceRestoreScopePtrOutput {
	return o
}

func (o ClusterResourceRestoreScopePtrOutput) ToClusterResourceRestoreScopePtrOutputWithContext(ctx context.Context) ClusterResourceRestoreScopePtrOutput {
	return o
}

func (o ClusterResourceRestoreScopePtrOutput) Elem() ClusterResourceRestoreScopeOutput {
	return o.ApplyT(func(v *ClusterResourceRestoreScope) ClusterResourceRestoreScope {
		if v != nil {
			return *v
		}
		var ret ClusterResourceRestoreScope
		return ret
	}).(ClusterResourceRestoreScopeOutput)
}

// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
func (o ClusterResourceRestoreScopePtrOutput) SelectedGroupKinds() GroupKindArrayOutput {
	return o.ApplyT(func(v *ClusterResourceRestoreScope) []GroupKind {
		if v == nil {
			return nil
		}
		return v.SelectedGroupKinds
	}).(GroupKindArrayOutput)
}

// Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
type ClusterResourceRestoreScopeResponse struct {
	// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
	SelectedGroupKinds []GroupKindResponse `pulumi:"selectedGroupKinds"`
}

// Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
type ClusterResourceRestoreScopeResponseOutput struct{ *pulumi.OutputState }

func (ClusterResourceRestoreScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceRestoreScopeResponse)(nil)).Elem()
}

func (o ClusterResourceRestoreScopeResponseOutput) ToClusterResourceRestoreScopeResponseOutput() ClusterResourceRestoreScopeResponseOutput {
	return o
}

func (o ClusterResourceRestoreScopeResponseOutput) ToClusterResourceRestoreScopeResponseOutputWithContext(ctx context.Context) ClusterResourceRestoreScopeResponseOutput {
	return o
}

// A list of cluster-scoped resource group kinds to restore from the backup. If specified, only the selected resources will be restored. Mutually exclusive to any other field in the message.
func (o ClusterResourceRestoreScopeResponseOutput) SelectedGroupKinds() GroupKindResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceRestoreScopeResponse) []GroupKindResponse { return v.SelectedGroupKinds }).(GroupKindResponseArrayOutput)
}

// Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
type EncryptionKey struct {
	// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
	GcpKmsEncryptionKey *string `pulumi:"gcpKmsEncryptionKey"`
}

// EncryptionKeyInput is an input type that accepts EncryptionKeyArgs and EncryptionKeyOutput values.
// You can construct a concrete instance of `EncryptionKeyInput` via:
//
//	EncryptionKeyArgs{...}
type EncryptionKeyInput interface {
	pulumi.Input

	ToEncryptionKeyOutput() EncryptionKeyOutput
	ToEncryptionKeyOutputWithContext(context.Context) EncryptionKeyOutput
}

// Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
type EncryptionKeyArgs struct {
	// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
	GcpKmsEncryptionKey pulumi.StringPtrInput `pulumi:"gcpKmsEncryptionKey"`
}

func (EncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKey)(nil)).Elem()
}

func (i EncryptionKeyArgs) ToEncryptionKeyOutput() EncryptionKeyOutput {
	return i.ToEncryptionKeyOutputWithContext(context.Background())
}

func (i EncryptionKeyArgs) ToEncryptionKeyOutputWithContext(ctx context.Context) EncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyOutput)
}

func (i EncryptionKeyArgs) ToEncryptionKeyPtrOutput() EncryptionKeyPtrOutput {
	return i.ToEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyArgs) ToEncryptionKeyPtrOutputWithContext(ctx context.Context) EncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyOutput).ToEncryptionKeyPtrOutputWithContext(ctx)
}

// EncryptionKeyPtrInput is an input type that accepts EncryptionKeyArgs, EncryptionKeyPtr and EncryptionKeyPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyPtrInput` via:
//
//	        EncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type EncryptionKeyPtrInput interface {
	pulumi.Input

	ToEncryptionKeyPtrOutput() EncryptionKeyPtrOutput
	ToEncryptionKeyPtrOutputWithContext(context.Context) EncryptionKeyPtrOutput
}

type encryptionKeyPtrType EncryptionKeyArgs

func EncryptionKeyPtr(v *EncryptionKeyArgs) EncryptionKeyPtrInput {
	return (*encryptionKeyPtrType)(v)
}

func (*encryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKey)(nil)).Elem()
}

func (i *encryptionKeyPtrType) ToEncryptionKeyPtrOutput() EncryptionKeyPtrOutput {
	return i.ToEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyPtrType) ToEncryptionKeyPtrOutputWithContext(ctx context.Context) EncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyPtrOutput)
}

// Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
type EncryptionKeyOutput struct{ *pulumi.OutputState }

func (EncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKey)(nil)).Elem()
}

func (o EncryptionKeyOutput) ToEncryptionKeyOutput() EncryptionKeyOutput {
	return o
}

func (o EncryptionKeyOutput) ToEncryptionKeyOutputWithContext(ctx context.Context) EncryptionKeyOutput {
	return o
}

func (o EncryptionKeyOutput) ToEncryptionKeyPtrOutput() EncryptionKeyPtrOutput {
	return o.ToEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyOutput) ToEncryptionKeyPtrOutputWithContext(ctx context.Context) EncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKey) *EncryptionKey {
		return &v
	}).(EncryptionKeyPtrOutput)
}

// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
func (o EncryptionKeyOutput) GcpKmsEncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKey) *string { return v.GcpKmsEncryptionKey }).(pulumi.StringPtrOutput)
}

type EncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKey)(nil)).Elem()
}

func (o EncryptionKeyPtrOutput) ToEncryptionKeyPtrOutput() EncryptionKeyPtrOutput {
	return o
}

func (o EncryptionKeyPtrOutput) ToEncryptionKeyPtrOutputWithContext(ctx context.Context) EncryptionKeyPtrOutput {
	return o
}

func (o EncryptionKeyPtrOutput) Elem() EncryptionKeyOutput {
	return o.ApplyT(func(v *EncryptionKey) EncryptionKey {
		if v != nil {
			return *v
		}
		var ret EncryptionKey
		return ret
	}).(EncryptionKeyOutput)
}

// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
func (o EncryptionKeyPtrOutput) GcpKmsEncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKey) *string {
		if v == nil {
			return nil
		}
		return v.GcpKmsEncryptionKey
	}).(pulumi.StringPtrOutput)
}

// Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
type EncryptionKeyResponse struct {
	// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
	GcpKmsEncryptionKey string `pulumi:"gcpKmsEncryptionKey"`
}

// Defined a customer managed encryption key that will be used to encrypt Backup artifacts.
type EncryptionKeyResponseOutput struct{ *pulumi.OutputState }

func (EncryptionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyResponse)(nil)).Elem()
}

func (o EncryptionKeyResponseOutput) ToEncryptionKeyResponseOutput() EncryptionKeyResponseOutput {
	return o
}

func (o EncryptionKeyResponseOutput) ToEncryptionKeyResponseOutputWithContext(ctx context.Context) EncryptionKeyResponseOutput {
	return o
}

// Google Cloud KMS encryption key. Format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`
func (o EncryptionKeyResponseOutput) GcpKmsEncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v EncryptionKeyResponse) string { return v.GcpKmsEncryptionKey }).(pulumi.StringOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type Expr struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description *string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression *string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location *string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title *string `pulumi:"title"`
}

// ExprInput is an input type that accepts ExprArgs and ExprOutput values.
// You can construct a concrete instance of `ExprInput` via:
//
//	ExprArgs{...}
type ExprInput interface {
	pulumi.Input

	ToExprOutput() ExprOutput
	ToExprOutputWithContext(context.Context) ExprOutput
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprArgs struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ExprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (i ExprArgs) ToExprOutput() ExprOutput {
	return i.ToExprOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput)
}

func (i ExprArgs) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i ExprArgs) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprOutput).ToExprPtrOutputWithContext(ctx)
}

// ExprPtrInput is an input type that accepts ExprArgs, ExprPtr and ExprPtrOutput values.
// You can construct a concrete instance of `ExprPtrInput` via:
//
//	        ExprArgs{...}
//
//	or:
//
//	        nil
type ExprPtrInput interface {
	pulumi.Input

	ToExprPtrOutput() ExprPtrOutput
	ToExprPtrOutputWithContext(context.Context) ExprPtrOutput
}

type exprPtrType ExprArgs

func ExprPtr(v *ExprArgs) ExprPtrInput {
	return (*exprPtrType)(v)
}

func (*exprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (i *exprPtrType) ToExprPtrOutput() ExprPtrOutput {
	return i.ToExprPtrOutputWithContext(context.Background())
}

func (i *exprPtrType) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExprPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprOutput struct{ *pulumi.OutputState }

func (ExprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Expr)(nil)).Elem()
}

func (o ExprOutput) ToExprOutput() ExprOutput {
	return o
}

func (o ExprOutput) ToExprOutputWithContext(ctx context.Context) ExprOutput {
	return o
}

func (o ExprOutput) ToExprPtrOutput() ExprPtrOutput {
	return o.ToExprPtrOutputWithContext(context.Background())
}

func (o ExprOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Expr) *Expr {
		return &v
	}).(ExprPtrOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Expr) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ExprPtrOutput struct{ *pulumi.OutputState }

func (ExprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Expr)(nil)).Elem()
}

func (o ExprPtrOutput) ToExprPtrOutput() ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) ToExprPtrOutputWithContext(ctx context.Context) ExprPtrOutput {
	return o
}

func (o ExprPtrOutput) Elem() ExprOutput {
	return o.ApplyT(func(v *Expr) Expr {
		if v != nil {
			return *v
		}
		var ret Expr
		return ret
	}).(ExprOutput)
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Expression
	}).(pulumi.StringPtrOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Expr) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponse struct {
	// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
	Description string `pulumi:"description"`
	// Textual representation of an expression in Common Expression Language syntax.
	Expression string `pulumi:"expression"`
	// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
	Location string `pulumi:"location"`
	// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
	Title string `pulumi:"title"`
}

// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
type ExprResponseOutput struct{ *pulumi.OutputState }

func (ExprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExprResponse)(nil)).Elem()
}

func (o ExprResponseOutput) ToExprResponseOutput() ExprResponseOutput {
	return o
}

func (o ExprResponseOutput) ToExprResponseOutputWithContext(ctx context.Context) ExprResponseOutput {
	return o
}

// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
func (o ExprResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Textual representation of an expression in Common Expression Language syntax.
func (o ExprResponseOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Expression }).(pulumi.StringOutput)
}

// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
func (o ExprResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
func (o ExprResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ExprResponse) string { return v.Title }).(pulumi.StringOutput)
}

// This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
type GroupKind struct {
	// API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group
	ResourceGroup *string `pulumi:"resourceGroup"`
	// Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.
	ResourceKind *string `pulumi:"resourceKind"`
}

// GroupKindInput is an input type that accepts GroupKindArgs and GroupKindOutput values.
// You can construct a concrete instance of `GroupKindInput` via:
//
//	GroupKindArgs{...}
type GroupKindInput interface {
	pulumi.Input

	ToGroupKindOutput() GroupKindOutput
	ToGroupKindOutputWithContext(context.Context) GroupKindOutput
}

// This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
type GroupKindArgs struct {
	// API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.
	ResourceKind pulumi.StringPtrInput `pulumi:"resourceKind"`
}

func (GroupKindArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupKind)(nil)).Elem()
}

func (i GroupKindArgs) ToGroupKindOutput() GroupKindOutput {
	return i.ToGroupKindOutputWithContext(context.Background())
}

func (i GroupKindArgs) ToGroupKindOutputWithContext(ctx context.Context) GroupKindOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupKindOutput)
}

// GroupKindArrayInput is an input type that accepts GroupKindArray and GroupKindArrayOutput values.
// You can construct a concrete instance of `GroupKindArrayInput` via:
//
//	GroupKindArray{ GroupKindArgs{...} }
type GroupKindArrayInput interface {
	pulumi.Input

	ToGroupKindArrayOutput() GroupKindArrayOutput
	ToGroupKindArrayOutputWithContext(context.Context) GroupKindArrayOutput
}

type GroupKindArray []GroupKindInput

func (GroupKindArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupKind)(nil)).Elem()
}

func (i GroupKindArray) ToGroupKindArrayOutput() GroupKindArrayOutput {
	return i.ToGroupKindArrayOutputWithContext(context.Background())
}

func (i GroupKindArray) ToGroupKindArrayOutputWithContext(ctx context.Context) GroupKindArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupKindArrayOutput)
}

// This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
type GroupKindOutput struct{ *pulumi.OutputState }

func (GroupKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupKind)(nil)).Elem()
}

func (o GroupKindOutput) ToGroupKindOutput() GroupKindOutput {
	return o
}

func (o GroupKindOutput) ToGroupKindOutputWithContext(ctx context.Context) GroupKindOutput {
	return o
}

// API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group
func (o GroupKindOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupKind) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.
func (o GroupKindOutput) ResourceKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupKind) *string { return v.ResourceKind }).(pulumi.StringPtrOutput)
}

type GroupKindArrayOutput struct{ *pulumi.OutputState }

func (GroupKindArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupKind)(nil)).Elem()
}

func (o GroupKindArrayOutput) ToGroupKindArrayOutput() GroupKindArrayOutput {
	return o
}

func (o GroupKindArrayOutput) ToGroupKindArrayOutputWithContext(ctx context.Context) GroupKindArrayOutput {
	return o
}

func (o GroupKindArrayOutput) Index(i pulumi.IntInput) GroupKindOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupKind {
		return vs[0].([]GroupKind)[vs[1].(int)]
	}).(GroupKindOutput)
}

// This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
type GroupKindResponse struct {
	// API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group
	ResourceGroup string `pulumi:"resourceGroup"`
	// Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.
	ResourceKind string `pulumi:"resourceKind"`
}

// This is a direct map to the Kubernetes GroupKind type [GroupKind](https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupKind) and is used for identifying specific "types" of resources to restore.
type GroupKindResponseOutput struct{ *pulumi.OutputState }

func (GroupKindResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupKindResponse)(nil)).Elem()
}

func (o GroupKindResponseOutput) ToGroupKindResponseOutput() GroupKindResponseOutput {
	return o
}

func (o GroupKindResponseOutput) ToGroupKindResponseOutputWithContext(ctx context.Context) GroupKindResponseOutput {
	return o
}

// API group string of a Kubernetes resource, e.g. "apiextensions.k8s.io", "storage.k8s.io", etc. Note: use empty string for core API group
func (o GroupKindResponseOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GroupKindResponse) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Kind of a Kubernetes resource, e.g. "CustomResourceDefinition", "StorageClass", etc.
func (o GroupKindResponseOutput) ResourceKind() pulumi.StringOutput {
	return o.ApplyT(func(v GroupKindResponse) string { return v.ResourceKind }).(pulumi.StringOutput)
}

type GroupKindResponseArrayOutput struct{ *pulumi.OutputState }

func (GroupKindResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupKindResponse)(nil)).Elem()
}

func (o GroupKindResponseArrayOutput) ToGroupKindResponseArrayOutput() GroupKindResponseArrayOutput {
	return o
}

func (o GroupKindResponseArrayOutput) ToGroupKindResponseArrayOutputWithContext(ctx context.Context) GroupKindResponseArrayOutput {
	return o
}

func (o GroupKindResponseArrayOutput) Index(i pulumi.IntInput) GroupKindResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupKindResponse {
		return vs[0].([]GroupKindResponse)[vs[1].(int)]
	}).(GroupKindResponseOutput)
}

// A reference to a namespaced resource in Kubernetes.
type NamespacedName struct {
	// The name of the Kubernetes resource.
	Name *string `pulumi:"name"`
	// The Namespace of the Kubernetes resource.
	Namespace *string `pulumi:"namespace"`
}

// NamespacedNameInput is an input type that accepts NamespacedNameArgs and NamespacedNameOutput values.
// You can construct a concrete instance of `NamespacedNameInput` via:
//
//	NamespacedNameArgs{...}
type NamespacedNameInput interface {
	pulumi.Input

	ToNamespacedNameOutput() NamespacedNameOutput
	ToNamespacedNameOutputWithContext(context.Context) NamespacedNameOutput
}

// A reference to a namespaced resource in Kubernetes.
type NamespacedNameArgs struct {
	// The name of the Kubernetes resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Namespace of the Kubernetes resource.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (NamespacedNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedName)(nil)).Elem()
}

func (i NamespacedNameArgs) ToNamespacedNameOutput() NamespacedNameOutput {
	return i.ToNamespacedNameOutputWithContext(context.Background())
}

func (i NamespacedNameArgs) ToNamespacedNameOutputWithContext(ctx context.Context) NamespacedNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedNameOutput)
}

// NamespacedNameArrayInput is an input type that accepts NamespacedNameArray and NamespacedNameArrayOutput values.
// You can construct a concrete instance of `NamespacedNameArrayInput` via:
//
//	NamespacedNameArray{ NamespacedNameArgs{...} }
type NamespacedNameArrayInput interface {
	pulumi.Input

	ToNamespacedNameArrayOutput() NamespacedNameArrayOutput
	ToNamespacedNameArrayOutputWithContext(context.Context) NamespacedNameArrayOutput
}

type NamespacedNameArray []NamespacedNameInput

func (NamespacedNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespacedName)(nil)).Elem()
}

func (i NamespacedNameArray) ToNamespacedNameArrayOutput() NamespacedNameArrayOutput {
	return i.ToNamespacedNameArrayOutputWithContext(context.Background())
}

func (i NamespacedNameArray) ToNamespacedNameArrayOutputWithContext(ctx context.Context) NamespacedNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedNameArrayOutput)
}

// A reference to a namespaced resource in Kubernetes.
type NamespacedNameOutput struct{ *pulumi.OutputState }

func (NamespacedNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedName)(nil)).Elem()
}

func (o NamespacedNameOutput) ToNamespacedNameOutput() NamespacedNameOutput {
	return o
}

func (o NamespacedNameOutput) ToNamespacedNameOutputWithContext(ctx context.Context) NamespacedNameOutput {
	return o
}

// The name of the Kubernetes resource.
func (o NamespacedNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacedName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Namespace of the Kubernetes resource.
func (o NamespacedNameOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamespacedName) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type NamespacedNameArrayOutput struct{ *pulumi.OutputState }

func (NamespacedNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespacedName)(nil)).Elem()
}

func (o NamespacedNameArrayOutput) ToNamespacedNameArrayOutput() NamespacedNameArrayOutput {
	return o
}

func (o NamespacedNameArrayOutput) ToNamespacedNameArrayOutputWithContext(ctx context.Context) NamespacedNameArrayOutput {
	return o
}

func (o NamespacedNameArrayOutput) Index(i pulumi.IntInput) NamespacedNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespacedName {
		return vs[0].([]NamespacedName)[vs[1].(int)]
	}).(NamespacedNameOutput)
}

// A reference to a namespaced resource in Kubernetes.
type NamespacedNameResponse struct {
	// The name of the Kubernetes resource.
	Name string `pulumi:"name"`
	// The Namespace of the Kubernetes resource.
	Namespace string `pulumi:"namespace"`
}

// A reference to a namespaced resource in Kubernetes.
type NamespacedNameResponseOutput struct{ *pulumi.OutputState }

func (NamespacedNameResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedNameResponse)(nil)).Elem()
}

func (o NamespacedNameResponseOutput) ToNamespacedNameResponseOutput() NamespacedNameResponseOutput {
	return o
}

func (o NamespacedNameResponseOutput) ToNamespacedNameResponseOutputWithContext(ctx context.Context) NamespacedNameResponseOutput {
	return o
}

// The name of the Kubernetes resource.
func (o NamespacedNameResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacedNameResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The Namespace of the Kubernetes resource.
func (o NamespacedNameResponseOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v NamespacedNameResponse) string { return v.Namespace }).(pulumi.StringOutput)
}

type NamespacedNameResponseArrayOutput struct{ *pulumi.OutputState }

func (NamespacedNameResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NamespacedNameResponse)(nil)).Elem()
}

func (o NamespacedNameResponseArrayOutput) ToNamespacedNameResponseArrayOutput() NamespacedNameResponseArrayOutput {
	return o
}

func (o NamespacedNameResponseArrayOutput) ToNamespacedNameResponseArrayOutputWithContext(ctx context.Context) NamespacedNameResponseArrayOutput {
	return o
}

func (o NamespacedNameResponseArrayOutput) Index(i pulumi.IntInput) NamespacedNameResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NamespacedNameResponse {
		return vs[0].([]NamespacedNameResponse)[vs[1].(int)]
	}).(NamespacedNameResponseOutput)
}

// A list of namespaced Kubernetes resources.
type NamespacedNames struct {
	// A list of namespaced Kubernetes resources.
	NamespacedNames []NamespacedName `pulumi:"namespacedNames"`
}

// NamespacedNamesInput is an input type that accepts NamespacedNamesArgs and NamespacedNamesOutput values.
// You can construct a concrete instance of `NamespacedNamesInput` via:
//
//	NamespacedNamesArgs{...}
type NamespacedNamesInput interface {
	pulumi.Input

	ToNamespacedNamesOutput() NamespacedNamesOutput
	ToNamespacedNamesOutputWithContext(context.Context) NamespacedNamesOutput
}

// A list of namespaced Kubernetes resources.
type NamespacedNamesArgs struct {
	// A list of namespaced Kubernetes resources.
	NamespacedNames NamespacedNameArrayInput `pulumi:"namespacedNames"`
}

func (NamespacedNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedNames)(nil)).Elem()
}

func (i NamespacedNamesArgs) ToNamespacedNamesOutput() NamespacedNamesOutput {
	return i.ToNamespacedNamesOutputWithContext(context.Background())
}

func (i NamespacedNamesArgs) ToNamespacedNamesOutputWithContext(ctx context.Context) NamespacedNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedNamesOutput)
}

func (i NamespacedNamesArgs) ToNamespacedNamesPtrOutput() NamespacedNamesPtrOutput {
	return i.ToNamespacedNamesPtrOutputWithContext(context.Background())
}

func (i NamespacedNamesArgs) ToNamespacedNamesPtrOutputWithContext(ctx context.Context) NamespacedNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedNamesOutput).ToNamespacedNamesPtrOutputWithContext(ctx)
}

// NamespacedNamesPtrInput is an input type that accepts NamespacedNamesArgs, NamespacedNamesPtr and NamespacedNamesPtrOutput values.
// You can construct a concrete instance of `NamespacedNamesPtrInput` via:
//
//	        NamespacedNamesArgs{...}
//
//	or:
//
//	        nil
type NamespacedNamesPtrInput interface {
	pulumi.Input

	ToNamespacedNamesPtrOutput() NamespacedNamesPtrOutput
	ToNamespacedNamesPtrOutputWithContext(context.Context) NamespacedNamesPtrOutput
}

type namespacedNamesPtrType NamespacedNamesArgs

func NamespacedNamesPtr(v *NamespacedNamesArgs) NamespacedNamesPtrInput {
	return (*namespacedNamesPtrType)(v)
}

func (*namespacedNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedNames)(nil)).Elem()
}

func (i *namespacedNamesPtrType) ToNamespacedNamesPtrOutput() NamespacedNamesPtrOutput {
	return i.ToNamespacedNamesPtrOutputWithContext(context.Background())
}

func (i *namespacedNamesPtrType) ToNamespacedNamesPtrOutputWithContext(ctx context.Context) NamespacedNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacedNamesPtrOutput)
}

// A list of namespaced Kubernetes resources.
type NamespacedNamesOutput struct{ *pulumi.OutputState }

func (NamespacedNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedNames)(nil)).Elem()
}

func (o NamespacedNamesOutput) ToNamespacedNamesOutput() NamespacedNamesOutput {
	return o
}

func (o NamespacedNamesOutput) ToNamespacedNamesOutputWithContext(ctx context.Context) NamespacedNamesOutput {
	return o
}

func (o NamespacedNamesOutput) ToNamespacedNamesPtrOutput() NamespacedNamesPtrOutput {
	return o.ToNamespacedNamesPtrOutputWithContext(context.Background())
}

func (o NamespacedNamesOutput) ToNamespacedNamesPtrOutputWithContext(ctx context.Context) NamespacedNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamespacedNames) *NamespacedNames {
		return &v
	}).(NamespacedNamesPtrOutput)
}

// A list of namespaced Kubernetes resources.
func (o NamespacedNamesOutput) NamespacedNames() NamespacedNameArrayOutput {
	return o.ApplyT(func(v NamespacedNames) []NamespacedName { return v.NamespacedNames }).(NamespacedNameArrayOutput)
}

type NamespacedNamesPtrOutput struct{ *pulumi.OutputState }

func (NamespacedNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamespacedNames)(nil)).Elem()
}

func (o NamespacedNamesPtrOutput) ToNamespacedNamesPtrOutput() NamespacedNamesPtrOutput {
	return o
}

func (o NamespacedNamesPtrOutput) ToNamespacedNamesPtrOutputWithContext(ctx context.Context) NamespacedNamesPtrOutput {
	return o
}

func (o NamespacedNamesPtrOutput) Elem() NamespacedNamesOutput {
	return o.ApplyT(func(v *NamespacedNames) NamespacedNames {
		if v != nil {
			return *v
		}
		var ret NamespacedNames
		return ret
	}).(NamespacedNamesOutput)
}

// A list of namespaced Kubernetes resources.
func (o NamespacedNamesPtrOutput) NamespacedNames() NamespacedNameArrayOutput {
	return o.ApplyT(func(v *NamespacedNames) []NamespacedName {
		if v == nil {
			return nil
		}
		return v.NamespacedNames
	}).(NamespacedNameArrayOutput)
}

// A list of namespaced Kubernetes resources.
type NamespacedNamesResponse struct {
	// A list of namespaced Kubernetes resources.
	NamespacedNames []NamespacedNameResponse `pulumi:"namespacedNames"`
}

// A list of namespaced Kubernetes resources.
type NamespacedNamesResponseOutput struct{ *pulumi.OutputState }

func (NamespacedNamesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacedNamesResponse)(nil)).Elem()
}

func (o NamespacedNamesResponseOutput) ToNamespacedNamesResponseOutput() NamespacedNamesResponseOutput {
	return o
}

func (o NamespacedNamesResponseOutput) ToNamespacedNamesResponseOutputWithContext(ctx context.Context) NamespacedNamesResponseOutput {
	return o
}

// A list of namespaced Kubernetes resources.
func (o NamespacedNamesResponseOutput) NamespacedNames() NamespacedNameResponseArrayOutput {
	return o.ApplyT(func(v NamespacedNamesResponse) []NamespacedNameResponse { return v.NamespacedNames }).(NamespacedNameResponseArrayOutput)
}

// A list of Kubernetes Namespaces
type Namespaces struct {
	// A list of Kubernetes Namespaces
	Namespaces []string `pulumi:"namespaces"`
}

// NamespacesInput is an input type that accepts NamespacesArgs and NamespacesOutput values.
// You can construct a concrete instance of `NamespacesInput` via:
//
//	NamespacesArgs{...}
type NamespacesInput interface {
	pulumi.Input

	ToNamespacesOutput() NamespacesOutput
	ToNamespacesOutputWithContext(context.Context) NamespacesOutput
}

// A list of Kubernetes Namespaces
type NamespacesArgs struct {
	// A list of Kubernetes Namespaces
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
}

func (NamespacesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Namespaces)(nil)).Elem()
}

func (i NamespacesArgs) ToNamespacesOutput() NamespacesOutput {
	return i.ToNamespacesOutputWithContext(context.Background())
}

func (i NamespacesArgs) ToNamespacesOutputWithContext(ctx context.Context) NamespacesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacesOutput)
}

func (i NamespacesArgs) ToNamespacesPtrOutput() NamespacesPtrOutput {
	return i.ToNamespacesPtrOutputWithContext(context.Background())
}

func (i NamespacesArgs) ToNamespacesPtrOutputWithContext(ctx context.Context) NamespacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacesOutput).ToNamespacesPtrOutputWithContext(ctx)
}

// NamespacesPtrInput is an input type that accepts NamespacesArgs, NamespacesPtr and NamespacesPtrOutput values.
// You can construct a concrete instance of `NamespacesPtrInput` via:
//
//	        NamespacesArgs{...}
//
//	or:
//
//	        nil
type NamespacesPtrInput interface {
	pulumi.Input

	ToNamespacesPtrOutput() NamespacesPtrOutput
	ToNamespacesPtrOutputWithContext(context.Context) NamespacesPtrOutput
}

type namespacesPtrType NamespacesArgs

func NamespacesPtr(v *NamespacesArgs) NamespacesPtrInput {
	return (*namespacesPtrType)(v)
}

func (*namespacesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Namespaces)(nil)).Elem()
}

func (i *namespacesPtrType) ToNamespacesPtrOutput() NamespacesPtrOutput {
	return i.ToNamespacesPtrOutputWithContext(context.Background())
}

func (i *namespacesPtrType) ToNamespacesPtrOutputWithContext(ctx context.Context) NamespacesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamespacesPtrOutput)
}

// A list of Kubernetes Namespaces
type NamespacesOutput struct{ *pulumi.OutputState }

func (NamespacesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Namespaces)(nil)).Elem()
}

func (o NamespacesOutput) ToNamespacesOutput() NamespacesOutput {
	return o
}

func (o NamespacesOutput) ToNamespacesOutputWithContext(ctx context.Context) NamespacesOutput {
	return o
}

func (o NamespacesOutput) ToNamespacesPtrOutput() NamespacesPtrOutput {
	return o.ToNamespacesPtrOutputWithContext(context.Background())
}

func (o NamespacesOutput) ToNamespacesPtrOutputWithContext(ctx context.Context) NamespacesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Namespaces) *Namespaces {
		return &v
	}).(NamespacesPtrOutput)
}

// A list of Kubernetes Namespaces
func (o NamespacesOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Namespaces) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

type NamespacesPtrOutput struct{ *pulumi.OutputState }

func (NamespacesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Namespaces)(nil)).Elem()
}

func (o NamespacesPtrOutput) ToNamespacesPtrOutput() NamespacesPtrOutput {
	return o
}

func (o NamespacesPtrOutput) ToNamespacesPtrOutputWithContext(ctx context.Context) NamespacesPtrOutput {
	return o
}

func (o NamespacesPtrOutput) Elem() NamespacesOutput {
	return o.ApplyT(func(v *Namespaces) Namespaces {
		if v != nil {
			return *v
		}
		var ret Namespaces
		return ret
	}).(NamespacesOutput)
}

// A list of Kubernetes Namespaces
func (o NamespacesPtrOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Namespaces) []string {
		if v == nil {
			return nil
		}
		return v.Namespaces
	}).(pulumi.StringArrayOutput)
}

// A list of Kubernetes Namespaces
type NamespacesResponse struct {
	// A list of Kubernetes Namespaces
	Namespaces []string `pulumi:"namespaces"`
}

// A list of Kubernetes Namespaces
type NamespacesResponseOutput struct{ *pulumi.OutputState }

func (NamespacesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamespacesResponse)(nil)).Elem()
}

func (o NamespacesResponseOutput) ToNamespacesResponseOutput() NamespacesResponseOutput {
	return o
}

func (o NamespacesResponseOutput) ToNamespacesResponseOutputWithContext(ctx context.Context) NamespacesResponseOutput {
	return o
}

// A list of Kubernetes Namespaces
func (o NamespacesResponseOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NamespacesResponse) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

// Configuration of a restore. Next id: 12
type RestoreConfig struct {
	// Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
	AllNamespaces *bool `pulumi:"allNamespaces"`
	// Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
	ClusterResourceConflictPolicy *RestoreConfigClusterResourceConflictPolicy `pulumi:"clusterResourceConflictPolicy"`
	// Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
	ClusterResourceRestoreScope *ClusterResourceRestoreScope `pulumi:"clusterResourceRestoreScope"`
	// Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
	NamespacedResourceRestoreMode *RestoreConfigNamespacedResourceRestoreMode `pulumi:"namespacedResourceRestoreMode"`
	// A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
	SelectedApplications *NamespacedNames `pulumi:"selectedApplications"`
	// A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
	SelectedNamespaces *Namespaces `pulumi:"selectedNamespaces"`
	// A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
	SubstitutionRules []SubstitutionRule `pulumi:"substitutionRules"`
	// Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
	VolumeDataRestorePolicy *RestoreConfigVolumeDataRestorePolicy `pulumi:"volumeDataRestorePolicy"`
}

// RestoreConfigInput is an input type that accepts RestoreConfigArgs and RestoreConfigOutput values.
// You can construct a concrete instance of `RestoreConfigInput` via:
//
//	RestoreConfigArgs{...}
type RestoreConfigInput interface {
	pulumi.Input

	ToRestoreConfigOutput() RestoreConfigOutput
	ToRestoreConfigOutputWithContext(context.Context) RestoreConfigOutput
}

// Configuration of a restore. Next id: 12
type RestoreConfigArgs struct {
	// Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
	AllNamespaces pulumi.BoolPtrInput `pulumi:"allNamespaces"`
	// Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
	ClusterResourceConflictPolicy RestoreConfigClusterResourceConflictPolicyPtrInput `pulumi:"clusterResourceConflictPolicy"`
	// Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
	ClusterResourceRestoreScope ClusterResourceRestoreScopePtrInput `pulumi:"clusterResourceRestoreScope"`
	// Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
	NamespacedResourceRestoreMode RestoreConfigNamespacedResourceRestoreModePtrInput `pulumi:"namespacedResourceRestoreMode"`
	// A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
	SelectedApplications NamespacedNamesPtrInput `pulumi:"selectedApplications"`
	// A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
	SelectedNamespaces NamespacesPtrInput `pulumi:"selectedNamespaces"`
	// A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
	SubstitutionRules SubstitutionRuleArrayInput `pulumi:"substitutionRules"`
	// Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
	VolumeDataRestorePolicy RestoreConfigVolumeDataRestorePolicyPtrInput `pulumi:"volumeDataRestorePolicy"`
}

func (RestoreConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreConfig)(nil)).Elem()
}

func (i RestoreConfigArgs) ToRestoreConfigOutput() RestoreConfigOutput {
	return i.ToRestoreConfigOutputWithContext(context.Background())
}

func (i RestoreConfigArgs) ToRestoreConfigOutputWithContext(ctx context.Context) RestoreConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreConfigOutput)
}

// Configuration of a restore. Next id: 12
type RestoreConfigOutput struct{ *pulumi.OutputState }

func (RestoreConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreConfig)(nil)).Elem()
}

func (o RestoreConfigOutput) ToRestoreConfigOutput() RestoreConfigOutput {
	return o
}

func (o RestoreConfigOutput) ToRestoreConfigOutputWithContext(ctx context.Context) RestoreConfigOutput {
	return o
}

// Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
func (o RestoreConfigOutput) AllNamespaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RestoreConfig) *bool { return v.AllNamespaces }).(pulumi.BoolPtrOutput)
}

// Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
func (o RestoreConfigOutput) ClusterResourceConflictPolicy() RestoreConfigClusterResourceConflictPolicyPtrOutput {
	return o.ApplyT(func(v RestoreConfig) *RestoreConfigClusterResourceConflictPolicy {
		return v.ClusterResourceConflictPolicy
	}).(RestoreConfigClusterResourceConflictPolicyPtrOutput)
}

// Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
func (o RestoreConfigOutput) ClusterResourceRestoreScope() ClusterResourceRestoreScopePtrOutput {
	return o.ApplyT(func(v RestoreConfig) *ClusterResourceRestoreScope { return v.ClusterResourceRestoreScope }).(ClusterResourceRestoreScopePtrOutput)
}

// Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
func (o RestoreConfigOutput) NamespacedResourceRestoreMode() RestoreConfigNamespacedResourceRestoreModePtrOutput {
	return o.ApplyT(func(v RestoreConfig) *RestoreConfigNamespacedResourceRestoreMode {
		return v.NamespacedResourceRestoreMode
	}).(RestoreConfigNamespacedResourceRestoreModePtrOutput)
}

// A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
func (o RestoreConfigOutput) SelectedApplications() NamespacedNamesPtrOutput {
	return o.ApplyT(func(v RestoreConfig) *NamespacedNames { return v.SelectedApplications }).(NamespacedNamesPtrOutput)
}

// A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
func (o RestoreConfigOutput) SelectedNamespaces() NamespacesPtrOutput {
	return o.ApplyT(func(v RestoreConfig) *Namespaces { return v.SelectedNamespaces }).(NamespacesPtrOutput)
}

// A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
func (o RestoreConfigOutput) SubstitutionRules() SubstitutionRuleArrayOutput {
	return o.ApplyT(func(v RestoreConfig) []SubstitutionRule { return v.SubstitutionRules }).(SubstitutionRuleArrayOutput)
}

// Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
func (o RestoreConfigOutput) VolumeDataRestorePolicy() RestoreConfigVolumeDataRestorePolicyPtrOutput {
	return o.ApplyT(func(v RestoreConfig) *RestoreConfigVolumeDataRestorePolicy { return v.VolumeDataRestorePolicy }).(RestoreConfigVolumeDataRestorePolicyPtrOutput)
}

// Configuration of a restore. Next id: 12
type RestoreConfigResponse struct {
	// Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
	AllNamespaces bool `pulumi:"allNamespaces"`
	// Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
	ClusterResourceConflictPolicy string `pulumi:"clusterResourceConflictPolicy"`
	// Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
	ClusterResourceRestoreScope ClusterResourceRestoreScopeResponse `pulumi:"clusterResourceRestoreScope"`
	// Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
	NamespacedResourceRestoreMode string `pulumi:"namespacedResourceRestoreMode"`
	// A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
	SelectedApplications NamespacedNamesResponse `pulumi:"selectedApplications"`
	// A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
	SelectedNamespaces NamespacesResponse `pulumi:"selectedNamespaces"`
	// A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
	SubstitutionRules []SubstitutionRuleResponse `pulumi:"substitutionRules"`
	// Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
	VolumeDataRestorePolicy string `pulumi:"volumeDataRestorePolicy"`
}

// Configuration of a restore. Next id: 12
type RestoreConfigResponseOutput struct{ *pulumi.OutputState }

func (RestoreConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreConfigResponse)(nil)).Elem()
}

func (o RestoreConfigResponseOutput) ToRestoreConfigResponseOutput() RestoreConfigResponseOutput {
	return o
}

func (o RestoreConfigResponseOutput) ToRestoreConfigResponseOutputWithContext(ctx context.Context) RestoreConfigResponseOutput {
	return o
}

// Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
func (o RestoreConfigResponseOutput) AllNamespaces() pulumi.BoolOutput {
	return o.ApplyT(func(v RestoreConfigResponse) bool { return v.AllNamespaces }).(pulumi.BoolOutput)
}

// Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
func (o RestoreConfigResponseOutput) ClusterResourceConflictPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreConfigResponse) string { return v.ClusterResourceConflictPolicy }).(pulumi.StringOutput)
}

// Identifies the cluster-scoped resources to restore from the Backup. Not specifying it means NO cluster resource will be restored.
func (o RestoreConfigResponseOutput) ClusterResourceRestoreScope() ClusterResourceRestoreScopeResponseOutput {
	return o.ApplyT(func(v RestoreConfigResponse) ClusterResourceRestoreScopeResponse {
		return v.ClusterResourceRestoreScope
	}).(ClusterResourceRestoreScopeResponseOutput)
}

// Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
func (o RestoreConfigResponseOutput) NamespacedResourceRestoreMode() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreConfigResponse) string { return v.NamespacedResourceRestoreMode }).(pulumi.StringOutput)
}

// A list of selected ProtectedApplications to restore. The listed ProtectedApplications and all the resources to which they refer will be restored.
func (o RestoreConfigResponseOutput) SelectedApplications() NamespacedNamesResponseOutput {
	return o.ApplyT(func(v RestoreConfigResponse) NamespacedNamesResponse { return v.SelectedApplications }).(NamespacedNamesResponseOutput)
}

// A list of selected Namespaces to restore from the Backup. The listed Namespaces and all resources contained in them will be restored.
func (o RestoreConfigResponseOutput) SelectedNamespaces() NamespacesResponseOutput {
	return o.ApplyT(func(v RestoreConfigResponse) NamespacesResponse { return v.SelectedNamespaces }).(NamespacesResponseOutput)
}

// A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
func (o RestoreConfigResponseOutput) SubstitutionRules() SubstitutionRuleResponseArrayOutput {
	return o.ApplyT(func(v RestoreConfigResponse) []SubstitutionRuleResponse { return v.SubstitutionRules }).(SubstitutionRuleResponseArrayOutput)
}

// Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
func (o RestoreConfigResponseOutput) VolumeDataRestorePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v RestoreConfigResponse) string { return v.VolumeDataRestorePolicy }).(pulumi.StringOutput)
}

// RetentionPolicy defines a Backup retention policy for a BackupPlan.
type RetentionPolicy struct {
	// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
	BackupDeleteLockDays *int `pulumi:"backupDeleteLockDays"`
	// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
	BackupRetainDays *int `pulumi:"backupRetainDays"`
	// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
	Locked *bool `pulumi:"locked"`
}

// RetentionPolicyInput is an input type that accepts RetentionPolicyArgs and RetentionPolicyOutput values.
// You can construct a concrete instance of `RetentionPolicyInput` via:
//
//	RetentionPolicyArgs{...}
type RetentionPolicyInput interface {
	pulumi.Input

	ToRetentionPolicyOutput() RetentionPolicyOutput
	ToRetentionPolicyOutputWithContext(context.Context) RetentionPolicyOutput
}

// RetentionPolicy defines a Backup retention policy for a BackupPlan.
type RetentionPolicyArgs struct {
	// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
	BackupDeleteLockDays pulumi.IntPtrInput `pulumi:"backupDeleteLockDays"`
	// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
	BackupRetainDays pulumi.IntPtrInput `pulumi:"backupRetainDays"`
	// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
	Locked pulumi.BoolPtrInput `pulumi:"locked"`
}

func (RetentionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return i.ToRetentionPolicyOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput)
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyArgs) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyOutput).ToRetentionPolicyPtrOutputWithContext(ctx)
}

// RetentionPolicyPtrInput is an input type that accepts RetentionPolicyArgs, RetentionPolicyPtr and RetentionPolicyPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyPtrInput` via:
//
//	        RetentionPolicyArgs{...}
//
//	or:
//
//	        nil
type RetentionPolicyPtrInput interface {
	pulumi.Input

	ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput
	ToRetentionPolicyPtrOutputWithContext(context.Context) RetentionPolicyPtrOutput
}

type retentionPolicyPtrType RetentionPolicyArgs

func RetentionPolicyPtr(v *RetentionPolicyArgs) RetentionPolicyPtrInput {
	return (*retentionPolicyPtrType)(v)
}

func (*retentionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return i.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyPtrType) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyPtrOutput)
}

// RetentionPolicy defines a Backup retention policy for a BackupPlan.
type RetentionPolicyOutput struct{ *pulumi.OutputState }

func (RetentionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutput() RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyOutputWithContext(ctx context.Context) RetentionPolicyOutput {
	return o
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o.ToRetentionPolicyPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RetentionPolicy) *RetentionPolicy {
		return &v
	}).(RetentionPolicyPtrOutput)
}

// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
func (o RetentionPolicyOutput) BackupDeleteLockDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *int { return v.BackupDeleteLockDays }).(pulumi.IntPtrOutput)
}

// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
func (o RetentionPolicyOutput) BackupRetainDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *int { return v.BackupRetainDays }).(pulumi.IntPtrOutput)
}

// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
func (o RetentionPolicyOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicy) *bool { return v.Locked }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicy)(nil)).Elem()
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutput() RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) ToRetentionPolicyPtrOutputWithContext(ctx context.Context) RetentionPolicyPtrOutput {
	return o
}

func (o RetentionPolicyPtrOutput) Elem() RetentionPolicyOutput {
	return o.ApplyT(func(v *RetentionPolicy) RetentionPolicy {
		if v != nil {
			return *v
		}
		var ret RetentionPolicy
		return ret
	}).(RetentionPolicyOutput)
}

// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
func (o RetentionPolicyPtrOutput) BackupDeleteLockDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BackupDeleteLockDays
	}).(pulumi.IntPtrOutput)
}

// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
func (o RetentionPolicyPtrOutput) BackupRetainDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *int {
		if v == nil {
			return nil
		}
		return v.BackupRetainDays
	}).(pulumi.IntPtrOutput)
}

// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
func (o RetentionPolicyPtrOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Locked
	}).(pulumi.BoolPtrOutput)
}

// RetentionPolicy defines a Backup retention policy for a BackupPlan.
type RetentionPolicyResponse struct {
	// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
	BackupDeleteLockDays int `pulumi:"backupDeleteLockDays"`
	// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
	BackupRetainDays int `pulumi:"backupRetainDays"`
	// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
	Locked bool `pulumi:"locked"`
}

// RetentionPolicy defines a Backup retention policy for a BackupPlan.
type RetentionPolicyResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyResponse)(nil)).Elem()
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutput() RetentionPolicyResponseOutput {
	return o
}

func (o RetentionPolicyResponseOutput) ToRetentionPolicyResponseOutputWithContext(ctx context.Context) RetentionPolicyResponseOutput {
	return o
}

// Minimum age for Backups created via this BackupPlan (in days). This field MUST be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will NOT be deletable until it reaches Backup's (create_time + backup_delete_lock_days). Updating this field of a BackupPlan does NOT affect existing Backups under it. Backups created AFTER a successful update will inherit the new value. Default: 0 (no delete blocking)
func (o RetentionPolicyResponseOutput) BackupDeleteLockDays() pulumi.IntOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) int { return v.BackupDeleteLockDays }).(pulumi.IntOutput)
}

// The default maximum age of a Backup created via this BackupPlan. This field MUST be an integer value >= 0 and <= 365. If specified, a Backup created under this BackupPlan will be automatically deleted after its age reaches (create_time + backup_retain_days). If not specified, Backups created under this BackupPlan will NOT be subject to automatic deletion. Updating this field does NOT affect existing Backups under it. Backups created AFTER a successful update will automatically pick up the new value. NOTE: backup_retain_days must be >= backup_delete_lock_days. If cron_schedule is defined, then this must be <= 360 * the creation interval. Default: 0 (no automatic deletion)
func (o RetentionPolicyResponseOutput) BackupRetainDays() pulumi.IntOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) int { return v.BackupRetainDays }).(pulumi.IntOutput)
}

// This flag denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the `locked` field itself. Default: False
func (o RetentionPolicyResponseOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v RetentionPolicyResponse) bool { return v.Locked }).(pulumi.BoolOutput)
}

// Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
type Schedule struct {
	// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
	CronSchedule *string `pulumi:"cronSchedule"`
	// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
	Paused *bool `pulumi:"paused"`
}

// ScheduleInput is an input type that accepts ScheduleArgs and ScheduleOutput values.
// You can construct a concrete instance of `ScheduleInput` via:
//
//	ScheduleArgs{...}
type ScheduleInput interface {
	pulumi.Input

	ToScheduleOutput() ScheduleOutput
	ToScheduleOutputWithContext(context.Context) ScheduleOutput
}

// Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
type ScheduleArgs struct {
	// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
	CronSchedule pulumi.StringPtrInput `pulumi:"cronSchedule"`
	// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
	Paused pulumi.BoolPtrInput `pulumi:"paused"`
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (i ScheduleArgs) ToScheduleOutput() ScheduleOutput {
	return i.ToScheduleOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput)
}

func (i ScheduleArgs) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i ScheduleArgs) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleOutput).ToSchedulePtrOutputWithContext(ctx)
}

// SchedulePtrInput is an input type that accepts ScheduleArgs, SchedulePtr and SchedulePtrOutput values.
// You can construct a concrete instance of `SchedulePtrInput` via:
//
//	        ScheduleArgs{...}
//
//	or:
//
//	        nil
type SchedulePtrInput interface {
	pulumi.Input

	ToSchedulePtrOutput() SchedulePtrOutput
	ToSchedulePtrOutputWithContext(context.Context) SchedulePtrOutput
}

type schedulePtrType ScheduleArgs

func SchedulePtr(v *ScheduleArgs) SchedulePtrInput {
	return (*schedulePtrType)(v)
}

func (*schedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (i *schedulePtrType) ToSchedulePtrOutput() SchedulePtrOutput {
	return i.ToSchedulePtrOutputWithContext(context.Background())
}

func (i *schedulePtrType) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchedulePtrOutput)
}

// Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
type ScheduleOutput struct{ *pulumi.OutputState }

func (ScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Schedule)(nil)).Elem()
}

func (o ScheduleOutput) ToScheduleOutput() ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToScheduleOutputWithContext(ctx context.Context) ScheduleOutput {
	return o
}

func (o ScheduleOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o.ToSchedulePtrOutputWithContext(context.Background())
}

func (o ScheduleOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Schedule) *Schedule {
		return &v
	}).(SchedulePtrOutput)
}

// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
func (o ScheduleOutput) CronSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Schedule) *string { return v.CronSchedule }).(pulumi.StringPtrOutput)
}

// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
func (o ScheduleOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Schedule) *bool { return v.Paused }).(pulumi.BoolPtrOutput)
}

type SchedulePtrOutput struct{ *pulumi.OutputState }

func (SchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Schedule)(nil)).Elem()
}

func (o SchedulePtrOutput) ToSchedulePtrOutput() SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) ToSchedulePtrOutputWithContext(ctx context.Context) SchedulePtrOutput {
	return o
}

func (o SchedulePtrOutput) Elem() ScheduleOutput {
	return o.ApplyT(func(v *Schedule) Schedule {
		if v != nil {
			return *v
		}
		var ret Schedule
		return ret
	}).(ScheduleOutput)
}

// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
func (o SchedulePtrOutput) CronSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Schedule) *string {
		if v == nil {
			return nil
		}
		return v.CronSchedule
	}).(pulumi.StringPtrOutput)
}

// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
func (o SchedulePtrOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Schedule) *bool {
		if v == nil {
			return nil
		}
		return v.Paused
	}).(pulumi.BoolPtrOutput)
}

// Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
type ScheduleResponse struct {
	// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
	CronSchedule string `pulumi:"cronSchedule"`
	// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
	Paused bool `pulumi:"paused"`
}

// Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
type ScheduleResponseOutput struct{ *pulumi.OutputState }

func (ScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleResponse)(nil)).Elem()
}

func (o ScheduleResponseOutput) ToScheduleResponseOutput() ScheduleResponseOutput {
	return o
}

func (o ScheduleResponseOutput) ToScheduleResponseOutputWithContext(ctx context.Context) ScheduleResponseOutput {
	return o
}

// A standard [cron](https://wikipedia.com/wiki/cron) string that defines a repeating schedule for creating Backups via this BackupPlan. If this is defined, then backup_retain_days must also be defined. Default (empty): no automatic backup creation will occur.
func (o ScheduleResponseOutput) CronSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleResponse) string { return v.CronSchedule }).(pulumi.StringOutput)
}

// This flag denotes whether automatic Backup creation is paused for this BackupPlan. Default: False
func (o ScheduleResponseOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v ScheduleResponse) bool { return v.Paused }).(pulumi.BoolOutput)
}

// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
type SubstitutionRule struct {
	// This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
	NewValue *string `pulumi:"newValue"`
	// (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
	OriginalValuePattern *string `pulumi:"originalValuePattern"`
	// (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
	TargetGroupKinds []GroupKind `pulumi:"targetGroupKinds"`
	// This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
	TargetJsonPath string `pulumi:"targetJsonPath"`
	// (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
	TargetNamespaces []string `pulumi:"targetNamespaces"`
}

// SubstitutionRuleInput is an input type that accepts SubstitutionRuleArgs and SubstitutionRuleOutput values.
// You can construct a concrete instance of `SubstitutionRuleInput` via:
//
//	SubstitutionRuleArgs{...}
type SubstitutionRuleInput interface {
	pulumi.Input

	ToSubstitutionRuleOutput() SubstitutionRuleOutput
	ToSubstitutionRuleOutputWithContext(context.Context) SubstitutionRuleOutput
}

// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
type SubstitutionRuleArgs struct {
	// This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
	NewValue pulumi.StringPtrInput `pulumi:"newValue"`
	// (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
	OriginalValuePattern pulumi.StringPtrInput `pulumi:"originalValuePattern"`
	// (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
	TargetGroupKinds GroupKindArrayInput `pulumi:"targetGroupKinds"`
	// This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
	TargetJsonPath pulumi.StringInput `pulumi:"targetJsonPath"`
	// (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
	TargetNamespaces pulumi.StringArrayInput `pulumi:"targetNamespaces"`
}

func (SubstitutionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstitutionRule)(nil)).Elem()
}

func (i SubstitutionRuleArgs) ToSubstitutionRuleOutput() SubstitutionRuleOutput {
	return i.ToSubstitutionRuleOutputWithContext(context.Background())
}

func (i SubstitutionRuleArgs) ToSubstitutionRuleOutputWithContext(ctx context.Context) SubstitutionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubstitutionRuleOutput)
}

// SubstitutionRuleArrayInput is an input type that accepts SubstitutionRuleArray and SubstitutionRuleArrayOutput values.
// You can construct a concrete instance of `SubstitutionRuleArrayInput` via:
//
//	SubstitutionRuleArray{ SubstitutionRuleArgs{...} }
type SubstitutionRuleArrayInput interface {
	pulumi.Input

	ToSubstitutionRuleArrayOutput() SubstitutionRuleArrayOutput
	ToSubstitutionRuleArrayOutputWithContext(context.Context) SubstitutionRuleArrayOutput
}

type SubstitutionRuleArray []SubstitutionRuleInput

func (SubstitutionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstitutionRule)(nil)).Elem()
}

func (i SubstitutionRuleArray) ToSubstitutionRuleArrayOutput() SubstitutionRuleArrayOutput {
	return i.ToSubstitutionRuleArrayOutputWithContext(context.Background())
}

func (i SubstitutionRuleArray) ToSubstitutionRuleArrayOutputWithContext(ctx context.Context) SubstitutionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubstitutionRuleArrayOutput)
}

// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
type SubstitutionRuleOutput struct{ *pulumi.OutputState }

func (SubstitutionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstitutionRule)(nil)).Elem()
}

func (o SubstitutionRuleOutput) ToSubstitutionRuleOutput() SubstitutionRuleOutput {
	return o
}

func (o SubstitutionRuleOutput) ToSubstitutionRuleOutputWithContext(ctx context.Context) SubstitutionRuleOutput {
	return o
}

// This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
func (o SubstitutionRuleOutput) NewValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstitutionRule) *string { return v.NewValue }).(pulumi.StringPtrOutput)
}

// (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
func (o SubstitutionRuleOutput) OriginalValuePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubstitutionRule) *string { return v.OriginalValuePattern }).(pulumi.StringPtrOutput)
}

// (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
func (o SubstitutionRuleOutput) TargetGroupKinds() GroupKindArrayOutput {
	return o.ApplyT(func(v SubstitutionRule) []GroupKind { return v.TargetGroupKinds }).(GroupKindArrayOutput)
}

// This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
func (o SubstitutionRuleOutput) TargetJsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v SubstitutionRule) string { return v.TargetJsonPath }).(pulumi.StringOutput)
}

// (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
func (o SubstitutionRuleOutput) TargetNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubstitutionRule) []string { return v.TargetNamespaces }).(pulumi.StringArrayOutput)
}

type SubstitutionRuleArrayOutput struct{ *pulumi.OutputState }

func (SubstitutionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstitutionRule)(nil)).Elem()
}

func (o SubstitutionRuleArrayOutput) ToSubstitutionRuleArrayOutput() SubstitutionRuleArrayOutput {
	return o
}

func (o SubstitutionRuleArrayOutput) ToSubstitutionRuleArrayOutputWithContext(ctx context.Context) SubstitutionRuleArrayOutput {
	return o
}

func (o SubstitutionRuleArrayOutput) Index(i pulumi.IntInput) SubstitutionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubstitutionRule {
		return vs[0].([]SubstitutionRule)[vs[1].(int)]
	}).(SubstitutionRuleOutput)
}

// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
type SubstitutionRuleResponse struct {
	// This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
	NewValue string `pulumi:"newValue"`
	// (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
	OriginalValuePattern string `pulumi:"originalValuePattern"`
	// (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
	TargetGroupKinds []GroupKindResponse `pulumi:"targetGroupKinds"`
	// This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
	TargetJsonPath string `pulumi:"targetJsonPath"`
	// (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
	TargetNamespaces []string `pulumi:"targetNamespaces"`
}

// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to substitution) and substitution logic.
type SubstitutionRuleResponseOutput struct{ *pulumi.OutputState }

func (SubstitutionRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubstitutionRuleResponse)(nil)).Elem()
}

func (o SubstitutionRuleResponseOutput) ToSubstitutionRuleResponseOutput() SubstitutionRuleResponseOutput {
	return o
}

func (o SubstitutionRuleResponseOutput) ToSubstitutionRuleResponseOutputWithContext(ctx context.Context) SubstitutionRuleResponseOutput {
	return o
}

// This is the new value to set for any fields that pass the filtering and selection criteria. To remove a value from a Kubernetes resource, either leave this field unspecified, or set it to the empty string ("").
func (o SubstitutionRuleResponseOutput) NewValue() pulumi.StringOutput {
	return o.ApplyT(func(v SubstitutionRuleResponse) string { return v.NewValue }).(pulumi.StringOutput)
}

// (Filtering parameter) This is a [regular expression] (https://en.wikipedia.org/wiki/Regular_expression) that is compared against the fields matched by the target_json_path expression (and must also have passed the previous filters). Substitution will not be performed against fields whose value does not match this expression. If this field is NOT specified, then ALL fields matched by the target_json_path expression will undergo substitution. Note that an empty (e.g., "", rather than unspecified) value for this field will only match empty fields.
func (o SubstitutionRuleResponseOutput) OriginalValuePattern() pulumi.StringOutput {
	return o.ApplyT(func(v SubstitutionRuleResponse) string { return v.OriginalValuePattern }).(pulumi.StringOutput)
}

// (Filtering parameter) Any resource subject to substitution must belong to one of the listed "types". If this field is not provided, no type filtering will be performed (all resources of all types matching previous filtering parameters will be candidates for substitution).
func (o SubstitutionRuleResponseOutput) TargetGroupKinds() GroupKindResponseArrayOutput {
	return o.ApplyT(func(v SubstitutionRuleResponse) []GroupKindResponse { return v.TargetGroupKinds }).(GroupKindResponseArrayOutput)
}

// This is a [JSONPath] (https://kubernetes.io/docs/reference/kubectl/jsonpath/) expression that matches specific fields of candidate resources and it operates as both a filtering parameter (resources that are not matched with this expression will not be candidates for substitution) as well as a field identifier (identifies exactly which fields out of the candidate resources will be modified).
func (o SubstitutionRuleResponseOutput) TargetJsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v SubstitutionRuleResponse) string { return v.TargetJsonPath }).(pulumi.StringOutput)
}

// (Filtering parameter) Any resource subject to substitution must be contained within one of the listed Kubernetes Namespace in the Backup. If this field is not provided, no namespace filtering will be performed (all resources in all Namespaces, including all cluster-scoped resources, will be candidates for substitution). To mix cluster-scoped and namespaced resources in the same rule, use an empty string ("") as one of the target namespaces.
func (o SubstitutionRuleResponseOutput) TargetNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubstitutionRuleResponse) []string { return v.TargetNamespaces }).(pulumi.StringArrayOutput)
}

type SubstitutionRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SubstitutionRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubstitutionRuleResponse)(nil)).Elem()
}

func (o SubstitutionRuleResponseArrayOutput) ToSubstitutionRuleResponseArrayOutput() SubstitutionRuleResponseArrayOutput {
	return o
}

func (o SubstitutionRuleResponseArrayOutput) ToSubstitutionRuleResponseArrayOutputWithContext(ctx context.Context) SubstitutionRuleResponseArrayOutput {
	return o
}

func (o SubstitutionRuleResponseArrayOutput) Index(i pulumi.IntInput) SubstitutionRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubstitutionRuleResponse {
		return vs[0].([]SubstitutionRuleResponse)[vs[1].(int)]
	}).(SubstitutionRuleResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigInput)(nil)).Elem(), AuditConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditConfigArrayInput)(nil)).Elem(), AuditConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigInput)(nil)).Elem(), AuditLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuditLogConfigArrayInput)(nil)).Elem(), AuditLogConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupConfigInput)(nil)).Elem(), BackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupConfigPtrInput)(nil)).Elem(), BackupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingInput)(nil)).Elem(), BindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingArrayInput)(nil)).Elem(), BindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceRestoreScopeInput)(nil)).Elem(), ClusterResourceRestoreScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceRestoreScopePtrInput)(nil)).Elem(), ClusterResourceRestoreScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionKeyInput)(nil)).Elem(), EncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionKeyPtrInput)(nil)).Elem(), EncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExprPtrInput)(nil)).Elem(), ExprArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupKindInput)(nil)).Elem(), GroupKindArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupKindArrayInput)(nil)).Elem(), GroupKindArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacedNameInput)(nil)).Elem(), NamespacedNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacedNameArrayInput)(nil)).Elem(), NamespacedNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacedNamesInput)(nil)).Elem(), NamespacedNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacedNamesPtrInput)(nil)).Elem(), NamespacedNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacesInput)(nil)).Elem(), NamespacesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamespacesPtrInput)(nil)).Elem(), NamespacesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreConfigInput)(nil)).Elem(), RestoreConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetentionPolicyInput)(nil)).Elem(), RetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetentionPolicyPtrInput)(nil)).Elem(), RetentionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchedulePtrInput)(nil)).Elem(), ScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubstitutionRuleInput)(nil)).Elem(), SubstitutionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubstitutionRuleArrayInput)(nil)).Elem(), SubstitutionRuleArray{})
	pulumi.RegisterOutputType(AuditConfigOutput{})
	pulumi.RegisterOutputType(AuditConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigOutput{})
	pulumi.RegisterOutputType(AuditLogConfigArrayOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseOutput{})
	pulumi.RegisterOutputType(AuditLogConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupConfigOutput{})
	pulumi.RegisterOutputType(BackupConfigPtrOutput{})
	pulumi.RegisterOutputType(BackupConfigResponseOutput{})
	pulumi.RegisterOutputType(BindingOutput{})
	pulumi.RegisterOutputType(BindingArrayOutput{})
	pulumi.RegisterOutputType(BindingResponseOutput{})
	pulumi.RegisterOutputType(BindingResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterMetadataResponseOutput{})
	pulumi.RegisterOutputType(ClusterResourceRestoreScopeOutput{})
	pulumi.RegisterOutputType(ClusterResourceRestoreScopePtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceRestoreScopeResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyOutput{})
	pulumi.RegisterOutputType(EncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyResponseOutput{})
	pulumi.RegisterOutputType(ExprOutput{})
	pulumi.RegisterOutputType(ExprPtrOutput{})
	pulumi.RegisterOutputType(ExprResponseOutput{})
	pulumi.RegisterOutputType(GroupKindOutput{})
	pulumi.RegisterOutputType(GroupKindArrayOutput{})
	pulumi.RegisterOutputType(GroupKindResponseOutput{})
	pulumi.RegisterOutputType(GroupKindResponseArrayOutput{})
	pulumi.RegisterOutputType(NamespacedNameOutput{})
	pulumi.RegisterOutputType(NamespacedNameArrayOutput{})
	pulumi.RegisterOutputType(NamespacedNameResponseOutput{})
	pulumi.RegisterOutputType(NamespacedNameResponseArrayOutput{})
	pulumi.RegisterOutputType(NamespacedNamesOutput{})
	pulumi.RegisterOutputType(NamespacedNamesPtrOutput{})
	pulumi.RegisterOutputType(NamespacedNamesResponseOutput{})
	pulumi.RegisterOutputType(NamespacesOutput{})
	pulumi.RegisterOutputType(NamespacesPtrOutput{})
	pulumi.RegisterOutputType(NamespacesResponseOutput{})
	pulumi.RegisterOutputType(RestoreConfigOutput{})
	pulumi.RegisterOutputType(RestoreConfigResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyOutput{})
	pulumi.RegisterOutputType(RetentionPolicyPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyResponseOutput{})
	pulumi.RegisterOutputType(ScheduleOutput{})
	pulumi.RegisterOutputType(SchedulePtrOutput{})
	pulumi.RegisterOutputType(ScheduleResponseOutput{})
	pulumi.RegisterOutputType(SubstitutionRuleOutput{})
	pulumi.RegisterOutputType(SubstitutionRuleArrayOutput{})
	pulumi.RegisterOutputType(SubstitutionRuleResponseOutput{})
	pulumi.RegisterOutputType(SubstitutionRuleResponseArrayOutput{})
}
