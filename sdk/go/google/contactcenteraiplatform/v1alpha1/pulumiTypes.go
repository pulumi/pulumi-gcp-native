// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-google-native/sdk/go/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

// Message storing info about the first admin user. Next ID: 3
type AdminUser struct {
	// Optional. Last/family name of the first admin user.
	FamilyName *string `pulumi:"familyName"`
	// Optional. First/given name of the first admin user.
	GivenName *string `pulumi:"givenName"`
}

// AdminUserInput is an input type that accepts AdminUserArgs and AdminUserOutput values.
// You can construct a concrete instance of `AdminUserInput` via:
//
//	AdminUserArgs{...}
type AdminUserInput interface {
	pulumi.Input

	ToAdminUserOutput() AdminUserOutput
	ToAdminUserOutputWithContext(context.Context) AdminUserOutput
}

// Message storing info about the first admin user. Next ID: 3
type AdminUserArgs struct {
	// Optional. Last/family name of the first admin user.
	FamilyName pulumi.StringPtrInput `pulumi:"familyName"`
	// Optional. First/given name of the first admin user.
	GivenName pulumi.StringPtrInput `pulumi:"givenName"`
}

func (AdminUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUser)(nil)).Elem()
}

func (i AdminUserArgs) ToAdminUserOutput() AdminUserOutput {
	return i.ToAdminUserOutputWithContext(context.Background())
}

func (i AdminUserArgs) ToAdminUserOutputWithContext(ctx context.Context) AdminUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUserOutput)
}

func (i AdminUserArgs) ToOutput(ctx context.Context) pulumix.Output[AdminUser] {
	return pulumix.Output[AdminUser]{
		OutputState: i.ToAdminUserOutputWithContext(ctx).OutputState,
	}
}

func (i AdminUserArgs) ToAdminUserPtrOutput() AdminUserPtrOutput {
	return i.ToAdminUserPtrOutputWithContext(context.Background())
}

func (i AdminUserArgs) ToAdminUserPtrOutputWithContext(ctx context.Context) AdminUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUserOutput).ToAdminUserPtrOutputWithContext(ctx)
}

// AdminUserPtrInput is an input type that accepts AdminUserArgs, AdminUserPtr and AdminUserPtrOutput values.
// You can construct a concrete instance of `AdminUserPtrInput` via:
//
//	        AdminUserArgs{...}
//
//	or:
//
//	        nil
type AdminUserPtrInput interface {
	pulumi.Input

	ToAdminUserPtrOutput() AdminUserPtrOutput
	ToAdminUserPtrOutputWithContext(context.Context) AdminUserPtrOutput
}

type adminUserPtrType AdminUserArgs

func AdminUserPtr(v *AdminUserArgs) AdminUserPtrInput {
	return (*adminUserPtrType)(v)
}

func (*adminUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUser)(nil)).Elem()
}

func (i *adminUserPtrType) ToAdminUserPtrOutput() AdminUserPtrOutput {
	return i.ToAdminUserPtrOutputWithContext(context.Background())
}

func (i *adminUserPtrType) ToAdminUserPtrOutputWithContext(ctx context.Context) AdminUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminUserPtrOutput)
}

func (i *adminUserPtrType) ToOutput(ctx context.Context) pulumix.Output[*AdminUser] {
	return pulumix.Output[*AdminUser]{
		OutputState: i.ToAdminUserPtrOutputWithContext(ctx).OutputState,
	}
}

// Message storing info about the first admin user. Next ID: 3
type AdminUserOutput struct{ *pulumi.OutputState }

func (AdminUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUser)(nil)).Elem()
}

func (o AdminUserOutput) ToAdminUserOutput() AdminUserOutput {
	return o
}

func (o AdminUserOutput) ToAdminUserOutputWithContext(ctx context.Context) AdminUserOutput {
	return o
}

func (o AdminUserOutput) ToAdminUserPtrOutput() AdminUserPtrOutput {
	return o.ToAdminUserPtrOutputWithContext(context.Background())
}

func (o AdminUserOutput) ToAdminUserPtrOutputWithContext(ctx context.Context) AdminUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdminUser) *AdminUser {
		return &v
	}).(AdminUserPtrOutput)
}

func (o AdminUserOutput) ToOutput(ctx context.Context) pulumix.Output[AdminUser] {
	return pulumix.Output[AdminUser]{
		OutputState: o.OutputState,
	}
}

// Optional. Last/family name of the first admin user.
func (o AdminUserOutput) FamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminUser) *string { return v.FamilyName }).(pulumi.StringPtrOutput)
}

// Optional. First/given name of the first admin user.
func (o AdminUserOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminUser) *string { return v.GivenName }).(pulumi.StringPtrOutput)
}

type AdminUserPtrOutput struct{ *pulumi.OutputState }

func (AdminUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminUser)(nil)).Elem()
}

func (o AdminUserPtrOutput) ToAdminUserPtrOutput() AdminUserPtrOutput {
	return o
}

func (o AdminUserPtrOutput) ToAdminUserPtrOutputWithContext(ctx context.Context) AdminUserPtrOutput {
	return o
}

func (o AdminUserPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AdminUser] {
	return pulumix.Output[*AdminUser]{
		OutputState: o.OutputState,
	}
}

func (o AdminUserPtrOutput) Elem() AdminUserOutput {
	return o.ApplyT(func(v *AdminUser) AdminUser {
		if v != nil {
			return *v
		}
		var ret AdminUser
		return ret
	}).(AdminUserOutput)
}

// Optional. Last/family name of the first admin user.
func (o AdminUserPtrOutput) FamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminUser) *string {
		if v == nil {
			return nil
		}
		return v.FamilyName
	}).(pulumi.StringPtrOutput)
}

// Optional. First/given name of the first admin user.
func (o AdminUserPtrOutput) GivenName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminUser) *string {
		if v == nil {
			return nil
		}
		return v.GivenName
	}).(pulumi.StringPtrOutput)
}

// Message storing info about the first admin user. Next ID: 3
type AdminUserResponse struct {
	// Optional. Last/family name of the first admin user.
	FamilyName string `pulumi:"familyName"`
	// Optional. First/given name of the first admin user.
	GivenName string `pulumi:"givenName"`
}

// Message storing info about the first admin user. Next ID: 3
type AdminUserResponseOutput struct{ *pulumi.OutputState }

func (AdminUserResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminUserResponse)(nil)).Elem()
}

func (o AdminUserResponseOutput) ToAdminUserResponseOutput() AdminUserResponseOutput {
	return o
}

func (o AdminUserResponseOutput) ToAdminUserResponseOutputWithContext(ctx context.Context) AdminUserResponseOutput {
	return o
}

func (o AdminUserResponseOutput) ToOutput(ctx context.Context) pulumix.Output[AdminUserResponse] {
	return pulumix.Output[AdminUserResponse]{
		OutputState: o.OutputState,
	}
}

// Optional. Last/family name of the first admin user.
func (o AdminUserResponseOutput) FamilyName() pulumi.StringOutput {
	return o.ApplyT(func(v AdminUserResponse) string { return v.FamilyName }).(pulumi.StringOutput)
}

// Optional. First/given name of the first admin user.
func (o AdminUserResponseOutput) GivenName() pulumi.StringOutput {
	return o.ApplyT(func(v AdminUserResponse) string { return v.GivenName }).(pulumi.StringOutput)
}

// Message storing the instance configuration.
type InstanceConfig struct {
	// The instance size of this the instance configuration.
	InstanceSize *InstanceConfigInstanceSize `pulumi:"instanceSize"`
}

// InstanceConfigInput is an input type that accepts InstanceConfigArgs and InstanceConfigOutput values.
// You can construct a concrete instance of `InstanceConfigInput` via:
//
//	InstanceConfigArgs{...}
type InstanceConfigInput interface {
	pulumi.Input

	ToInstanceConfigOutput() InstanceConfigOutput
	ToInstanceConfigOutputWithContext(context.Context) InstanceConfigOutput
}

// Message storing the instance configuration.
type InstanceConfigArgs struct {
	// The instance size of this the instance configuration.
	InstanceSize InstanceConfigInstanceSizePtrInput `pulumi:"instanceSize"`
}

func (InstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (i InstanceConfigArgs) ToInstanceConfigOutput() InstanceConfigOutput {
	return i.ToInstanceConfigOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput)
}

func (i InstanceConfigArgs) ToOutput(ctx context.Context) pulumix.Output[InstanceConfig] {
	return pulumix.Output[InstanceConfig]{
		OutputState: i.ToInstanceConfigOutputWithContext(ctx).OutputState,
	}
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i InstanceConfigArgs) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigOutput).ToInstanceConfigPtrOutputWithContext(ctx)
}

// InstanceConfigPtrInput is an input type that accepts InstanceConfigArgs, InstanceConfigPtr and InstanceConfigPtrOutput values.
// You can construct a concrete instance of `InstanceConfigPtrInput` via:
//
//	        InstanceConfigArgs{...}
//
//	or:
//
//	        nil
type InstanceConfigPtrInput interface {
	pulumi.Input

	ToInstanceConfigPtrOutput() InstanceConfigPtrOutput
	ToInstanceConfigPtrOutputWithContext(context.Context) InstanceConfigPtrOutput
}

type instanceConfigPtrType InstanceConfigArgs

func InstanceConfigPtr(v *InstanceConfigArgs) InstanceConfigPtrInput {
	return (*instanceConfigPtrType)(v)
}

func (*instanceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return i.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (i *instanceConfigPtrType) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigPtrOutput)
}

func (i *instanceConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfig] {
	return pulumix.Output[*InstanceConfig]{
		OutputState: i.ToInstanceConfigPtrOutputWithContext(ctx).OutputState,
	}
}

// Message storing the instance configuration.
type InstanceConfigOutput struct{ *pulumi.OutputState }

func (InstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigOutput) ToInstanceConfigOutput() InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigOutputWithContext(ctx context.Context) InstanceConfigOutput {
	return o
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o.ToInstanceConfigPtrOutputWithContext(context.Background())
}

func (o InstanceConfigOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConfig) *InstanceConfig {
		return &v
	}).(InstanceConfigPtrOutput)
}

func (o InstanceConfigOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfig] {
	return pulumix.Output[InstanceConfig]{
		OutputState: o.OutputState,
	}
}

// The instance size of this the instance configuration.
func (o InstanceConfigOutput) InstanceSize() InstanceConfigInstanceSizePtrOutput {
	return o.ApplyT(func(v InstanceConfig) *InstanceConfigInstanceSize { return v.InstanceSize }).(InstanceConfigInstanceSizePtrOutput)
}

type InstanceConfigPtrOutput struct{ *pulumi.OutputState }

func (InstanceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConfig)(nil)).Elem()
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutput() InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) ToInstanceConfigPtrOutputWithContext(ctx context.Context) InstanceConfigPtrOutput {
	return o
}

func (o InstanceConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*InstanceConfig] {
	return pulumix.Output[*InstanceConfig]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConfigPtrOutput) Elem() InstanceConfigOutput {
	return o.ApplyT(func(v *InstanceConfig) InstanceConfig {
		if v != nil {
			return *v
		}
		var ret InstanceConfig
		return ret
	}).(InstanceConfigOutput)
}

// The instance size of this the instance configuration.
func (o InstanceConfigPtrOutput) InstanceSize() InstanceConfigInstanceSizePtrOutput {
	return o.ApplyT(func(v *InstanceConfig) *InstanceConfigInstanceSize {
		if v == nil {
			return nil
		}
		return v.InstanceSize
	}).(InstanceConfigInstanceSizePtrOutput)
}

// Message storing the instance configuration.
type InstanceConfigResponse struct {
	// The instance size of this the instance configuration.
	InstanceSize string `pulumi:"instanceSize"`
}

// Message storing the instance configuration.
type InstanceConfigResponseOutput struct{ *pulumi.OutputState }

func (InstanceConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigResponse)(nil)).Elem()
}

func (o InstanceConfigResponseOutput) ToInstanceConfigResponseOutput() InstanceConfigResponseOutput {
	return o
}

func (o InstanceConfigResponseOutput) ToInstanceConfigResponseOutputWithContext(ctx context.Context) InstanceConfigResponseOutput {
	return o
}

func (o InstanceConfigResponseOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConfigResponse] {
	return pulumix.Output[InstanceConfigResponse]{
		OutputState: o.OutputState,
	}
}

// The instance size of this the instance configuration.
func (o InstanceConfigResponseOutput) InstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceConfigResponse) string { return v.InstanceSize }).(pulumi.StringOutput)
}

// Message storing SAML params to enable Google as IDP.
type SAMLParams struct {
	// SAML certificate
	Certificate *string `pulumi:"certificate"`
	// IdP field that maps to the user’s email address
	EmailMapping *string `pulumi:"emailMapping"`
	// Entity id URL
	EntityId *string `pulumi:"entityId"`
	// Single sign-on URL
	SsoUri *string `pulumi:"ssoUri"`
	// Email address of the first admin users.
	UserEmail *string `pulumi:"userEmail"`
}

// SAMLParamsInput is an input type that accepts SAMLParamsArgs and SAMLParamsOutput values.
// You can construct a concrete instance of `SAMLParamsInput` via:
//
//	SAMLParamsArgs{...}
type SAMLParamsInput interface {
	pulumi.Input

	ToSAMLParamsOutput() SAMLParamsOutput
	ToSAMLParamsOutputWithContext(context.Context) SAMLParamsOutput
}

// Message storing SAML params to enable Google as IDP.
type SAMLParamsArgs struct {
	// SAML certificate
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// IdP field that maps to the user’s email address
	EmailMapping pulumi.StringPtrInput `pulumi:"emailMapping"`
	// Entity id URL
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// Single sign-on URL
	SsoUri pulumi.StringPtrInput `pulumi:"ssoUri"`
	// Email address of the first admin users.
	UserEmail pulumi.StringPtrInput `pulumi:"userEmail"`
}

func (SAMLParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLParams)(nil)).Elem()
}

func (i SAMLParamsArgs) ToSAMLParamsOutput() SAMLParamsOutput {
	return i.ToSAMLParamsOutputWithContext(context.Background())
}

func (i SAMLParamsArgs) ToSAMLParamsOutputWithContext(ctx context.Context) SAMLParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLParamsOutput)
}

func (i SAMLParamsArgs) ToOutput(ctx context.Context) pulumix.Output[SAMLParams] {
	return pulumix.Output[SAMLParams]{
		OutputState: i.ToSAMLParamsOutputWithContext(ctx).OutputState,
	}
}

func (i SAMLParamsArgs) ToSAMLParamsPtrOutput() SAMLParamsPtrOutput {
	return i.ToSAMLParamsPtrOutputWithContext(context.Background())
}

func (i SAMLParamsArgs) ToSAMLParamsPtrOutputWithContext(ctx context.Context) SAMLParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLParamsOutput).ToSAMLParamsPtrOutputWithContext(ctx)
}

// SAMLParamsPtrInput is an input type that accepts SAMLParamsArgs, SAMLParamsPtr and SAMLParamsPtrOutput values.
// You can construct a concrete instance of `SAMLParamsPtrInput` via:
//
//	        SAMLParamsArgs{...}
//
//	or:
//
//	        nil
type SAMLParamsPtrInput interface {
	pulumi.Input

	ToSAMLParamsPtrOutput() SAMLParamsPtrOutput
	ToSAMLParamsPtrOutputWithContext(context.Context) SAMLParamsPtrOutput
}

type samlparamsPtrType SAMLParamsArgs

func SAMLParamsPtr(v *SAMLParamsArgs) SAMLParamsPtrInput {
	return (*samlparamsPtrType)(v)
}

func (*samlparamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLParams)(nil)).Elem()
}

func (i *samlparamsPtrType) ToSAMLParamsPtrOutput() SAMLParamsPtrOutput {
	return i.ToSAMLParamsPtrOutputWithContext(context.Background())
}

func (i *samlparamsPtrType) ToSAMLParamsPtrOutputWithContext(ctx context.Context) SAMLParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SAMLParamsPtrOutput)
}

func (i *samlparamsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SAMLParams] {
	return pulumix.Output[*SAMLParams]{
		OutputState: i.ToSAMLParamsPtrOutputWithContext(ctx).OutputState,
	}
}

// Message storing SAML params to enable Google as IDP.
type SAMLParamsOutput struct{ *pulumi.OutputState }

func (SAMLParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLParams)(nil)).Elem()
}

func (o SAMLParamsOutput) ToSAMLParamsOutput() SAMLParamsOutput {
	return o
}

func (o SAMLParamsOutput) ToSAMLParamsOutputWithContext(ctx context.Context) SAMLParamsOutput {
	return o
}

func (o SAMLParamsOutput) ToSAMLParamsPtrOutput() SAMLParamsPtrOutput {
	return o.ToSAMLParamsPtrOutputWithContext(context.Background())
}

func (o SAMLParamsOutput) ToSAMLParamsPtrOutputWithContext(ctx context.Context) SAMLParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SAMLParams) *SAMLParams {
		return &v
	}).(SAMLParamsPtrOutput)
}

func (o SAMLParamsOutput) ToOutput(ctx context.Context) pulumix.Output[SAMLParams] {
	return pulumix.Output[SAMLParams]{
		OutputState: o.OutputState,
	}
}

// SAML certificate
func (o SAMLParamsOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLParams) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// IdP field that maps to the user’s email address
func (o SAMLParamsOutput) EmailMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLParams) *string { return v.EmailMapping }).(pulumi.StringPtrOutput)
}

// Entity id URL
func (o SAMLParamsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLParams) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Single sign-on URL
func (o SAMLParamsOutput) SsoUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLParams) *string { return v.SsoUri }).(pulumi.StringPtrOutput)
}

// Email address of the first admin users.
func (o SAMLParamsOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SAMLParams) *string { return v.UserEmail }).(pulumi.StringPtrOutput)
}

type SAMLParamsPtrOutput struct{ *pulumi.OutputState }

func (SAMLParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SAMLParams)(nil)).Elem()
}

func (o SAMLParamsPtrOutput) ToSAMLParamsPtrOutput() SAMLParamsPtrOutput {
	return o
}

func (o SAMLParamsPtrOutput) ToSAMLParamsPtrOutputWithContext(ctx context.Context) SAMLParamsPtrOutput {
	return o
}

func (o SAMLParamsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SAMLParams] {
	return pulumix.Output[*SAMLParams]{
		OutputState: o.OutputState,
	}
}

func (o SAMLParamsPtrOutput) Elem() SAMLParamsOutput {
	return o.ApplyT(func(v *SAMLParams) SAMLParams {
		if v != nil {
			return *v
		}
		var ret SAMLParams
		return ret
	}).(SAMLParamsOutput)
}

// SAML certificate
func (o SAMLParamsPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLParams) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// IdP field that maps to the user’s email address
func (o SAMLParamsPtrOutput) EmailMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLParams) *string {
		if v == nil {
			return nil
		}
		return v.EmailMapping
	}).(pulumi.StringPtrOutput)
}

// Entity id URL
func (o SAMLParamsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLParams) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// Single sign-on URL
func (o SAMLParamsPtrOutput) SsoUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLParams) *string {
		if v == nil {
			return nil
		}
		return v.SsoUri
	}).(pulumi.StringPtrOutput)
}

// Email address of the first admin users.
func (o SAMLParamsPtrOutput) UserEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SAMLParams) *string {
		if v == nil {
			return nil
		}
		return v.UserEmail
	}).(pulumi.StringPtrOutput)
}

// Message storing SAML params to enable Google as IDP.
type SAMLParamsResponse struct {
	// SAML certificate
	Certificate string `pulumi:"certificate"`
	// IdP field that maps to the user’s email address
	EmailMapping string `pulumi:"emailMapping"`
	// Entity id URL
	EntityId string `pulumi:"entityId"`
	// Single sign-on URL
	SsoUri string `pulumi:"ssoUri"`
	// Email address of the first admin users.
	UserEmail string `pulumi:"userEmail"`
}

// Message storing SAML params to enable Google as IDP.
type SAMLParamsResponseOutput struct{ *pulumi.OutputState }

func (SAMLParamsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SAMLParamsResponse)(nil)).Elem()
}

func (o SAMLParamsResponseOutput) ToSAMLParamsResponseOutput() SAMLParamsResponseOutput {
	return o
}

func (o SAMLParamsResponseOutput) ToSAMLParamsResponseOutputWithContext(ctx context.Context) SAMLParamsResponseOutput {
	return o
}

func (o SAMLParamsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[SAMLParamsResponse] {
	return pulumix.Output[SAMLParamsResponse]{
		OutputState: o.OutputState,
	}
}

// SAML certificate
func (o SAMLParamsResponseOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLParamsResponse) string { return v.Certificate }).(pulumi.StringOutput)
}

// IdP field that maps to the user’s email address
func (o SAMLParamsResponseOutput) EmailMapping() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLParamsResponse) string { return v.EmailMapping }).(pulumi.StringOutput)
}

// Entity id URL
func (o SAMLParamsResponseOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLParamsResponse) string { return v.EntityId }).(pulumi.StringOutput)
}

// Single sign-on URL
func (o SAMLParamsResponseOutput) SsoUri() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLParamsResponse) string { return v.SsoUri }).(pulumi.StringOutput)
}

// Email address of the first admin users.
func (o SAMLParamsResponseOutput) UserEmail() pulumi.StringOutput {
	return o.ApplyT(func(v SAMLParamsResponse) string { return v.UserEmail }).(pulumi.StringOutput)
}

// Message storing the URIs of the ContactCenter.
type URIsResponse struct {
	// Chat Bot Uri of the ContactCenter
	ChatBotUri string `pulumi:"chatBotUri"`
	// Media Uri of the ContactCenter.
	MediaUri string `pulumi:"mediaUri"`
	// Root Uri of the ContactCenter.
	RootUri string `pulumi:"rootUri"`
	// Virtual Agent Streaming Service Uri of the ContactCenter.
	VirtualAgentStreamingServiceUri string `pulumi:"virtualAgentStreamingServiceUri"`
}

// Message storing the URIs of the ContactCenter.
type URIsResponseOutput struct{ *pulumi.OutputState }

func (URIsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*URIsResponse)(nil)).Elem()
}

func (o URIsResponseOutput) ToURIsResponseOutput() URIsResponseOutput {
	return o
}

func (o URIsResponseOutput) ToURIsResponseOutputWithContext(ctx context.Context) URIsResponseOutput {
	return o
}

func (o URIsResponseOutput) ToOutput(ctx context.Context) pulumix.Output[URIsResponse] {
	return pulumix.Output[URIsResponse]{
		OutputState: o.OutputState,
	}
}

// Chat Bot Uri of the ContactCenter
func (o URIsResponseOutput) ChatBotUri() pulumi.StringOutput {
	return o.ApplyT(func(v URIsResponse) string { return v.ChatBotUri }).(pulumi.StringOutput)
}

// Media Uri of the ContactCenter.
func (o URIsResponseOutput) MediaUri() pulumi.StringOutput {
	return o.ApplyT(func(v URIsResponse) string { return v.MediaUri }).(pulumi.StringOutput)
}

// Root Uri of the ContactCenter.
func (o URIsResponseOutput) RootUri() pulumi.StringOutput {
	return o.ApplyT(func(v URIsResponse) string { return v.RootUri }).(pulumi.StringOutput)
}

// Virtual Agent Streaming Service Uri of the ContactCenter.
func (o URIsResponseOutput) VirtualAgentStreamingServiceUri() pulumi.StringOutput {
	return o.ApplyT(func(v URIsResponse) string { return v.VirtualAgentStreamingServiceUri }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUserInput)(nil)).Elem(), AdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminUserPtrInput)(nil)).Elem(), AdminUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigPtrInput)(nil)).Elem(), InstanceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SAMLParamsInput)(nil)).Elem(), SAMLParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SAMLParamsPtrInput)(nil)).Elem(), SAMLParamsArgs{})
	pulumi.RegisterOutputType(AdminUserOutput{})
	pulumi.RegisterOutputType(AdminUserPtrOutput{})
	pulumi.RegisterOutputType(AdminUserResponseOutput{})
	pulumi.RegisterOutputType(InstanceConfigOutput{})
	pulumi.RegisterOutputType(InstanceConfigPtrOutput{})
	pulumi.RegisterOutputType(InstanceConfigResponseOutput{})
	pulumi.RegisterOutputType(SAMLParamsOutput{})
	pulumi.RegisterOutputType(SAMLParamsPtrOutput{})
	pulumi.RegisterOutputType(SAMLParamsResponseOutput{})
	pulumi.RegisterOutputType(URIsResponseOutput{})
}
