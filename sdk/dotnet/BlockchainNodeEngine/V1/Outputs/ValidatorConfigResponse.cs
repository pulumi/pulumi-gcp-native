// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BlockchainNodeEngine.V1.Outputs
{

    /// <summary>
    /// Configuration for validator-related parameters on the beacon client, and for any GCP-managed validator client.
    /// </summary>
    [OutputType]
    public sealed class ValidatorConfigResponse
    {
        /// <summary>
        /// An Ethereum address which the beacon client will send fee rewards to if no recipient is configured in the validator client. See https://lighthouse-book.sigmaprime.io/suggested-fee-recipient.html or https://docs.prylabs.network/docs/execution-node/fee-recipient for examples of how this is used. Note that while this is often described as "suggested", as we run the execution node we can trust the execution node, and therefore this is considered enforced.
        /// </summary>
        public readonly string BeaconFeeRecipient;
        /// <summary>
        /// Immutable. When true, deploys a GCP-managed validator client alongside the beacon client.
        /// </summary>
        public readonly bool ManagedValidatorClient;
        /// <summary>
        /// URLs for MEV-relay services to use for block building. When set, a GCP-managed MEV-boost service is configured on the beacon client.
        /// </summary>
        public readonly ImmutableArray<string> MevRelayUrls;

        [OutputConstructor]
        private ValidatorConfigResponse(
            string beaconFeeRecipient,

            bool managedValidatorClient,

            ImmutableArray<string> mevRelayUrls)
        {
            BeaconFeeRecipient = beaconFeeRecipient;
            ManagedValidatorClient = managedValidatorClient;
            MevRelayUrls = mevRelayUrls;
        }
    }
}
