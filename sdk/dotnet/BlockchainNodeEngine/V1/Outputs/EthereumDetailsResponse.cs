// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BlockchainNodeEngine.V1.Outputs
{

    /// <summary>
    /// Ethereum-specific blockchain node details.
    /// </summary>
    [OutputType]
    public sealed class EthereumDetailsResponse
    {
        /// <summary>
        /// Ethereum-specific endpoint information.
        /// </summary>
        public readonly Outputs.EthereumEndpointsResponse AdditionalEndpoints;
        /// <summary>
        /// Immutable. Enables JSON-RPC access to functions in the `admin` namespace. Defaults to `false`.
        /// </summary>
        public readonly bool ApiEnableAdmin;
        /// <summary>
        /// Immutable. Enables JSON-RPC access to functions in the `debug` namespace. Defaults to `false`.
        /// </summary>
        public readonly bool ApiEnableDebug;
        /// <summary>
        /// An Ethereum address which the beacon client will send fee rewards to if no recipient is configured in the validator client. See https://lighthouse-book.sigmaprime.io/suggested-fee-recipient.html or https://docs.prylabs.network/docs/execution-node/fee-recipient for examples of how this is used. Note that while this is often described as "suggested", as we run the execution node we can trust the execution node, and therefore this is considered enforced.
        /// </summary>
        public readonly string BeaconFeeRecipient;
        /// <summary>
        /// Immutable. The consensus client.
        /// </summary>
        public readonly string ConsensusClient;
        /// <summary>
        /// Immutable. The execution client
        /// </summary>
        public readonly string ExecutionClient;
        /// <summary>
        /// Details for the Geth execution client.
        /// </summary>
        public readonly Outputs.GethDetailsResponse GethDetails;
        /// <summary>
        /// Immutable. The Ethereum environment being accessed.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Immutable. The type of Ethereum node.
        /// </summary>
        public readonly string NodeType;

        [OutputConstructor]
        private EthereumDetailsResponse(
            Outputs.EthereumEndpointsResponse additionalEndpoints,

            bool apiEnableAdmin,

            bool apiEnableDebug,

            string beaconFeeRecipient,

            string consensusClient,

            string executionClient,

            Outputs.GethDetailsResponse gethDetails,

            string network,

            string nodeType)
        {
            AdditionalEndpoints = additionalEndpoints;
            ApiEnableAdmin = apiEnableAdmin;
            ApiEnableDebug = apiEnableDebug;
            BeaconFeeRecipient = beaconFeeRecipient;
            ConsensusClient = consensusClient;
            ExecutionClient = executionClient;
            GethDetails = gethDetails;
            Network = network;
            NodeType = nodeType;
        }
    }
}
