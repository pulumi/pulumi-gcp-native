// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3.Outputs
{

    /// <summary>
    /// Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDialogflowCxV3ResponseMessageResponse
    {
        /// <summary>
        /// The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
        /// </summary>
        public readonly string Channel;
        /// <summary>
        /// Indicates that the conversation succeeded.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse ConversationSuccess;
        /// <summary>
        /// A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse EndInteraction;
        /// <summary>
        /// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse KnowledgeInfoCard;
        /// <summary>
        /// Hands off conversation to a human agent.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse LiveAgentHandoff;
        /// <summary>
        /// An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse MixedAudio;
        /// <summary>
        /// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse OutputAudioText;
        /// <summary>
        /// Returns a response containing a custom, platform-specific payload.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Payload;
        /// <summary>
        /// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse PlayAudio;
        /// <summary>
        /// Response type.
        /// </summary>
        public readonly string ResponseType;
        /// <summary>
        /// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse TelephonyTransferCall;
        /// <summary>
        /// Returns a text response.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3ResponseMessageTextResponse Text;

        [OutputConstructor]
        private GoogleCloudDialogflowCxV3ResponseMessageResponse(
            string channel,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccessResponse conversationSuccess,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageEndInteractionResponse endInteraction,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCardResponse knowledgeInfoCard,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoffResponse liveAgentHandoff,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioResponse mixedAudio,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioTextResponse outputAudioText,

            ImmutableDictionary<string, object> payload,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessagePlayAudioResponse playAudio,

            string responseType,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCallResponse telephonyTransferCall,

            Outputs.GoogleCloudDialogflowCxV3ResponseMessageTextResponse text)
        {
            Channel = channel;
            ConversationSuccess = conversationSuccess;
            EndInteraction = endInteraction;
            KnowledgeInfoCard = knowledgeInfoCard;
            LiveAgentHandoff = liveAgentHandoff;
            MixedAudio = mixedAudio;
            OutputAudioText = outputAudioText;
            Payload = payload;
            PlayAudio = playAudio;
            ResponseType = responseType;
            TelephonyTransferCall = telephonyTransferCall;
            Text = text;
        }
    }
}
