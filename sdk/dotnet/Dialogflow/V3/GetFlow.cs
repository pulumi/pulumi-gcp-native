// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3
{
    public static class GetFlow
    {
        /// <summary>
        /// Retrieves the specified flow.
        /// </summary>
        public static Task<GetFlowResult> InvokeAsync(GetFlowArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlowResult>("google-native:dialogflow/v3:getFlow", args ?? new GetFlowArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the specified flow.
        /// </summary>
        public static Output<GetFlowResult> Invoke(GetFlowInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlowResult>("google-native:dialogflow/v3:getFlow", args ?? new GetFlowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        [Input("flowId", required: true)]
        public string FlowId { get; set; } = null!;

        [Input("languageCode")]
        public string? LanguageCode { get; set; }

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFlowArgs()
        {
        }
        public static new GetFlowArgs Empty => new GetFlowArgs();
    }

    public sealed class GetFlowInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        [Input("flowId", required: true)]
        public Input<string> FlowId { get; set; } = null!;

        [Input("languageCode")]
        public Input<string>? LanguageCode { get; set; }

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFlowInvokeArgs()
        {
        }
        public static new GetFlowInvokeArgs Empty => new GetFlowInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlowResult
    {
        /// <summary>
        /// The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The human-readable name of the flow.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no match, webhook errors) in the flow. * They are inherited by every page's event handlers, which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow. Unlike transition_routes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDialogflowCxV3EventHandlerResponse> EventHandlers;
        /// <summary>
        /// The unique identifier of the flow. Format: `projects//locations//agents//flows/`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// NLU related settings of the flow.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3NluSettingsResponse NluSettings;
        /// <summary>
        /// A flow's transition route group serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition route groups. Transition route groups defined in the page have higher priority than those defined in the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
        /// </summary>
        public readonly ImmutableArray<string> TransitionRouteGroups;
        /// <summary>
        /// A flow's transition routes serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition routes and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are evalauted in the following order: * TransitionRoutes with intent specified. * TransitionRoutes with only condition specified. TransitionRoutes with intent specified are inherited by pages in the flow.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDialogflowCxV3TransitionRouteResponse> TransitionRoutes;

        [OutputConstructor]
        private GetFlowResult(
            string description,

            string displayName,

            ImmutableArray<Outputs.GoogleCloudDialogflowCxV3EventHandlerResponse> eventHandlers,

            string name,

            Outputs.GoogleCloudDialogflowCxV3NluSettingsResponse nluSettings,

            ImmutableArray<string> transitionRouteGroups,

            ImmutableArray<Outputs.GoogleCloudDialogflowCxV3TransitionRouteResponse> transitionRoutes)
        {
            Description = description;
            DisplayName = displayName;
            EventHandlers = eventHandlers;
            Name = name;
            NluSettings = nluSettings;
            TransitionRouteGroups = transitionRouteGroups;
            TransitionRoutes = transitionRoutes;
        }
    }
}
