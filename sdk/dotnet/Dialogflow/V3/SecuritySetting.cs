// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3
{
    /// <summary>
    /// Create security settings in the specified location.
    /// </summary>
    [GoogleNativeResourceType("google-native:dialogflow/v3:SecuritySetting")]
    public partial class SecuritySetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Controls audio export settings for post-conversation analytics when ingesting audio to conversations via Participants.AnalyzeContent or Participants.StreamingAnalyzeContent. If retention_strategy is set to REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is empty, audio export is disabled. If audio export is enabled, audio is recorded and saved to audio_export_settings.gcs_bucket, subject to retention policy of audio_export_settings.gcs_bucket. This setting won't effect audio input for implicit sessions via Sessions.DetectIntent or Sessions.StreamingDetectIntent.
        /// </summary>
        [Output("audioExportSettings")]
        public Output<Outputs.GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsResponse> AudioExportSettings { get; private set; } = null!;

        /// <summary>
        /// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`.
        /// </summary>
        [Output("deidentifyTemplate")]
        public Output<string> DeidentifyTemplate { get; private set; } = null!;

        /// <summary>
        /// The human-readable name of the security settings, unique within the location.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Controls conversation exporting settings to Insights after conversation is completed. If retention_strategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
        /// </summary>
        [Output("insightsExportSettings")]
        public Output<Outputs.GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsResponse> InsightsExportSettings { get; private set; } = null!;

        /// <summary>
        /// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`.
        /// </summary>
        [Output("inspectTemplate")]
        public Output<string> InspectTemplate { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// List of types of data to remove when retention settings triggers purge.
        /// </summary>
        [Output("purgeDataTypes")]
        public Output<ImmutableArray<string>> PurgeDataTypes { get; private set; } = null!;

        /// <summary>
        /// Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to â€“ for example, Cloud logging.
        /// </summary>
        [Output("redactionScope")]
        public Output<string> RedactionScope { get; private set; } = null!;

        /// <summary>
        /// Strategy that defines how we do redaction.
        /// </summary>
        [Output("redactionStrategy")]
        public Output<string> RedactionStrategy { get; private set; } = null!;

        /// <summary>
        /// Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL. Note: Interaction logging is a limited access feature. Talk to your Google representative to check availability for you.
        /// </summary>
        [Output("retentionWindowDays")]
        public Output<int> RetentionWindowDays { get; private set; } = null!;


        /// <summary>
        /// Create a SecuritySetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecuritySetting(string name, SecuritySettingArgs args, CustomResourceOptions? options = null)
            : base("google-native:dialogflow/v3:SecuritySetting", name, args ?? new SecuritySettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecuritySetting(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:dialogflow/v3:SecuritySetting", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecuritySetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecuritySetting Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SecuritySetting(name, id, options);
        }
    }

    public sealed class SecuritySettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Controls audio export settings for post-conversation analytics when ingesting audio to conversations via Participants.AnalyzeContent or Participants.StreamingAnalyzeContent. If retention_strategy is set to REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is empty, audio export is disabled. If audio export is enabled, audio is recorded and saved to audio_export_settings.gcs_bucket, subject to retention policy of audio_export_settings.gcs_bucket. This setting won't effect audio input for implicit sessions via Sessions.DetectIntent or Sessions.StreamingDetectIntent.
        /// </summary>
        [Input("audioExportSettings")]
        public Input<Inputs.GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsArgs>? AudioExportSettings { get; set; }

        /// <summary>
        /// [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`.
        /// </summary>
        [Input("deidentifyTemplate")]
        public Input<string>? DeidentifyTemplate { get; set; }

        /// <summary>
        /// The human-readable name of the security settings, unique within the location.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Controls conversation exporting settings to Insights after conversation is completed. If retention_strategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
        /// </summary>
        [Input("insightsExportSettings")]
        public Input<Inputs.GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettingsArgs>? InsightsExportSettings { get; set; }

        /// <summary>
        /// [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`.
        /// </summary>
        [Input("inspectTemplate")]
        public Input<string>? InspectTemplate { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("purgeDataTypes")]
        private InputList<Pulumi.GoogleNative.Dialogflow.V3.SecuritySettingPurgeDataTypesItem>? _purgeDataTypes;

        /// <summary>
        /// List of types of data to remove when retention settings triggers purge.
        /// </summary>
        public InputList<Pulumi.GoogleNative.Dialogflow.V3.SecuritySettingPurgeDataTypesItem> PurgeDataTypes
        {
            get => _purgeDataTypes ?? (_purgeDataTypes = new InputList<Pulumi.GoogleNative.Dialogflow.V3.SecuritySettingPurgeDataTypesItem>());
            set => _purgeDataTypes = value;
        }

        /// <summary>
        /// Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to â€“ for example, Cloud logging.
        /// </summary>
        [Input("redactionScope")]
        public Input<Pulumi.GoogleNative.Dialogflow.V3.SecuritySettingRedactionScope>? RedactionScope { get; set; }

        /// <summary>
        /// Strategy that defines how we do redaction.
        /// </summary>
        [Input("redactionStrategy")]
        public Input<Pulumi.GoogleNative.Dialogflow.V3.SecuritySettingRedactionStrategy>? RedactionStrategy { get; set; }

        /// <summary>
        /// Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL. Note: Interaction logging is a limited access feature. Talk to your Google representative to check availability for you.
        /// </summary>
        [Input("retentionWindowDays")]
        public Input<int>? RetentionWindowDays { get; set; }

        public SecuritySettingArgs()
        {
        }
        public static new SecuritySettingArgs Empty => new SecuritySettingArgs();
    }
}
