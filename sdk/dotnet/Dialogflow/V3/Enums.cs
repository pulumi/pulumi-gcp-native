// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Dialogflow.V3
{
    /// <summary>
    /// Indicates whether the entity type can be automatically expanded.
    /// </summary>
    [EnumType]
    public readonly struct EntityTypeAutoExpansionMode : IEquatable<EntityTypeAutoExpansionMode>
    {
        private readonly string _value;

        private EntityTypeAutoExpansionMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Auto expansion disabled for the entity.
        /// </summary>
        public static EntityTypeAutoExpansionMode AutoExpansionModeUnspecified { get; } = new EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_UNSPECIFIED");
        /// <summary>
        /// Allows an agent to recognize values that have not been explicitly listed in the entity.
        /// </summary>
        public static EntityTypeAutoExpansionMode AutoExpansionModeDefault { get; } = new EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_DEFAULT");

        public static bool operator ==(EntityTypeAutoExpansionMode left, EntityTypeAutoExpansionMode right) => left.Equals(right);
        public static bool operator !=(EntityTypeAutoExpansionMode left, EntityTypeAutoExpansionMode right) => !left.Equals(right);

        public static explicit operator string(EntityTypeAutoExpansionMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntityTypeAutoExpansionMode other && Equals(other);
        public bool Equals(EntityTypeAutoExpansionMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Indicates the kind of entity type.
    /// </summary>
    [EnumType]
    public readonly struct EntityTypeKind : IEquatable<EntityTypeKind>
    {
        private readonly string _value;

        private EntityTypeKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value should be never used.
        /// </summary>
        public static EntityTypeKind KindUnspecified { get; } = new EntityTypeKind("KIND_UNSPECIFIED");
        /// <summary>
        /// Map entity types allow mapping of a group of synonyms to a canonical value.
        /// </summary>
        public static EntityTypeKind KindMap { get; } = new EntityTypeKind("KIND_MAP");
        /// <summary>
        /// List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
        /// </summary>
        public static EntityTypeKind KindList { get; } = new EntityTypeKind("KIND_LIST");
        /// <summary>
        /// Regexp entity types allow to specify regular expressions in entries values.
        /// </summary>
        public static EntityTypeKind KindRegexp { get; } = new EntityTypeKind("KIND_REGEXP");

        public static bool operator ==(EntityTypeKind left, EntityTypeKind right) => left.Equals(right);
        public static bool operator !=(EntityTypeKind left, EntityTypeKind right) => !left.Equals(right);

        public static explicit operator string(EntityTypeKind value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntityTypeKind other && Equals(other);
        public bool Equals(EntityTypeKind other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-&gt;RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-&gt;DONE or RUNNING-&gt;DONE.
    /// </summary>
    [EnumType]
    public readonly struct ExperimentState : IEquatable<ExperimentState>
    {
        private readonly string _value;

        private ExperimentState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// State unspecified.
        /// </summary>
        public static ExperimentState StateUnspecified { get; } = new ExperimentState("STATE_UNSPECIFIED");
        /// <summary>
        /// The experiment is created but not started yet.
        /// </summary>
        public static ExperimentState Draft { get; } = new ExperimentState("DRAFT");
        /// <summary>
        /// The experiment is running.
        /// </summary>
        public static ExperimentState Running { get; } = new ExperimentState("RUNNING");
        /// <summary>
        /// The experiment is done.
        /// </summary>
        public static ExperimentState Done { get; } = new ExperimentState("DONE");
        /// <summary>
        /// The experiment with auto-rollout enabled has failed.
        /// </summary>
        public static ExperimentState RolloutFailed { get; } = new ExperimentState("ROLLOUT_FAILED");

        public static bool operator ==(ExperimentState left, ExperimentState right) => left.Equals(right);
        public static bool operator !=(ExperimentState left, ExperimentState right) => !left.Equals(right);

        public static explicit operator string(ExperimentState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExperimentState other && Equals(other);
        public bool Equals(ExperimentState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of the connected data store.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType : IEquatable<GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value indicates that the data store type is not specified, so it will not be used during search.
        /// </summary>
        public static GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType DataStoreTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType("DATA_STORE_TYPE_UNSPECIFIED");
        /// <summary>
        /// A data store that contains public web content.
        /// </summary>
        public static GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType PublicWeb { get; } = new GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType("PUBLIC_WEB");
        /// <summary>
        /// A data store that contains unstructured private data.
        /// </summary>
        public static GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType Unstructured { get; } = new GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType("UNSTRUCTURED");
        /// <summary>
        /// A data store that contains structured data (for example FAQ).
        /// </summary>
        public static GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType Structured { get; } = new GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType("STRUCTURED");

        public static bool operator ==(GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType left, GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType left, GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3DataStoreConnectionDataStoreType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Count-based metric type. Only one of type or count_type is specified in each Metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3ExperimentResultMetricCountType : IEquatable<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3ExperimentResultMetricCountType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Count type unspecified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricCountType CountTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricCountType("COUNT_TYPE_UNSPECIFIED");
        /// <summary>
        /// Total number of occurrences of a 'NO_MATCH'.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricCountType TotalNoMatchCount { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricCountType("TOTAL_NO_MATCH_COUNT");
        /// <summary>
        /// Total number of turn counts.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricCountType TotalTurnCount { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricCountType("TOTAL_TURN_COUNT");
        /// <summary>
        /// Average turn count in a session.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricCountType AverageTurnCount { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricCountType("AVERAGE_TURN_COUNT");

        public static bool operator ==(GoogleCloudDialogflowCxV3ExperimentResultMetricCountType left, GoogleCloudDialogflowCxV3ExperimentResultMetricCountType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3ExperimentResultMetricCountType left, GoogleCloudDialogflowCxV3ExperimentResultMetricCountType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3ExperimentResultMetricCountType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3ExperimentResultMetricCountType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3ExperimentResultMetricCountType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3ExperimentResultMetricType : IEquatable<GoogleCloudDialogflowCxV3ExperimentResultMetricType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3ExperimentResultMetricType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Metric unspecified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType MetricUnspecified { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("METRIC_UNSPECIFIED");
        /// <summary>
        /// Percentage of contained sessions without user calling back in 24 hours.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType ContainedSessionNoCallbackRate { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("CONTAINED_SESSION_NO_CALLBACK_RATE");
        /// <summary>
        /// Percentage of sessions that were handed to a human agent.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType LiveAgentHandoffRate { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("LIVE_AGENT_HANDOFF_RATE");
        /// <summary>
        /// Percentage of sessions with the same user calling back.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType CallbackSessionRate { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("CALLBACK_SESSION_RATE");
        /// <summary>
        /// Percentage of sessions where user hung up.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType AbandonedSessionRate { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("ABANDONED_SESSION_RATE");
        /// <summary>
        /// Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ExperimentResultMetricType SessionEndRate { get; } = new GoogleCloudDialogflowCxV3ExperimentResultMetricType("SESSION_END_RATE");

        public static bool operator ==(GoogleCloudDialogflowCxV3ExperimentResultMetricType left, GoogleCloudDialogflowCxV3ExperimentResultMetricType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3ExperimentResultMetricType left, GoogleCloudDialogflowCxV3ExperimentResultMetricType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3ExperimentResultMetricType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3ExperimentResultMetricType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3ExperimentResultMetricType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Audio encoding of the audio content to process.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding : IEquatable<GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingUnspecified { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_UNSPECIFIED");
        /// <summary>
        /// Uncompressed 16-bit signed little-endian samples (Linear PCM).
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingLinear16 { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_LINEAR_16");
        /// <summary>
        /// [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingFlac { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_FLAC");
        /// <summary>
        /// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingMulaw { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_MULAW");
        /// <summary>
        /// Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingAmr { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR");
        /// <summary>
        /// Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingAmrWb { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR_WB");
        /// <summary>
        /// Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingOggOpus { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_OGG_OPUS");
        /// <summary>
        /// Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding AudioEncodingSpeexWithHeaderByte { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding("AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE");

        public static bool operator ==(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding left, GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding left, GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3InputAudioConfigAudioEncoding other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Which variant of the Speech model to use.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3InputAudioConfigModelVariant : IEquatable<GoogleCloudDialogflowCxV3InputAudioConfigModelVariant>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3InputAudioConfigModelVariant(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigModelVariant SpeechModelVariantUnspecified { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigModelVariant("SPEECH_MODEL_VARIANT_UNSPECIFIED");
        /// <summary>
        /// Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigModelVariant UseBestAvailable { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigModelVariant("USE_BEST_AVAILABLE");
        /// <summary>
        /// Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigModelVariant UseStandard { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigModelVariant("USE_STANDARD");
        /// <summary>
        /// Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible.
        /// </summary>
        public static GoogleCloudDialogflowCxV3InputAudioConfigModelVariant UseEnhanced { get; } = new GoogleCloudDialogflowCxV3InputAudioConfigModelVariant("USE_ENHANCED");

        public static bool operator ==(GoogleCloudDialogflowCxV3InputAudioConfigModelVariant left, GoogleCloudDialogflowCxV3InputAudioConfigModelVariant right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3InputAudioConfigModelVariant left, GoogleCloudDialogflowCxV3InputAudioConfigModelVariant right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3InputAudioConfigModelVariant value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3InputAudioConfigModelVariant other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3InputAudioConfigModelVariant other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Indicates NLU model training mode.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode : IEquatable<GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode ModelTrainingModeUnspecified { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_UNSPECIFIED");
        /// <summary>
        /// NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode ModelTrainingModeAutomatic { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_AUTOMATIC");
        /// <summary>
        /// User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode ModelTrainingModeManual { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_MANUAL");

        public static bool operator ==(GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode left, GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode left, GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3NluSettingsModelTrainingMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Indicates the type of NLU model.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3NluSettingsModelType : IEquatable<GoogleCloudDialogflowCxV3NluSettingsModelType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3NluSettingsModelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. `MODEL_TYPE_STANDARD` will be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelType ModelTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelType("MODEL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Use standard NLU model.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelType ModelTypeStandard { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelType("MODEL_TYPE_STANDARD");
        /// <summary>
        /// Use advanced NLU model.
        /// </summary>
        public static GoogleCloudDialogflowCxV3NluSettingsModelType ModelTypeAdvanced { get; } = new GoogleCloudDialogflowCxV3NluSettingsModelType("MODEL_TYPE_ADVANCED");

        public static bool operator ==(GoogleCloudDialogflowCxV3NluSettingsModelType left, GoogleCloudDialogflowCxV3NluSettingsModelType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3NluSettingsModelType left, GoogleCloudDialogflowCxV3NluSettingsModelType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3NluSettingsModelType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3NluSettingsModelType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3NluSettingsModelType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Response type.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3ResponseMessageResponseType : IEquatable<GoogleCloudDialogflowCxV3ResponseMessageResponseType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3ResponseMessageResponseType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ResponseMessageResponseType ResponseTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3ResponseMessageResponseType("RESPONSE_TYPE_UNSPECIFIED");
        /// <summary>
        /// The response is from an entry prompt in the page.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ResponseMessageResponseType EntryPrompt { get; } = new GoogleCloudDialogflowCxV3ResponseMessageResponseType("ENTRY_PROMPT");
        /// <summary>
        /// The response is from form-filling prompt in the page.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ResponseMessageResponseType ParameterPrompt { get; } = new GoogleCloudDialogflowCxV3ResponseMessageResponseType("PARAMETER_PROMPT");
        /// <summary>
        /// The response is from a transition route or an event handler in the page or flow or transition route group.
        /// </summary>
        public static GoogleCloudDialogflowCxV3ResponseMessageResponseType HandlerPrompt { get; } = new GoogleCloudDialogflowCxV3ResponseMessageResponseType("HANDLER_PROMPT");

        public static bool operator ==(GoogleCloudDialogflowCxV3ResponseMessageResponseType left, GoogleCloudDialogflowCxV3ResponseMessageResponseType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3ResponseMessageResponseType left, GoogleCloudDialogflowCxV3ResponseMessageResponseType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3ResponseMessageResponseType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3ResponseMessageResponseType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3ResponseMessageResponseType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// File format for exported audio file. Currently only in telephony recordings.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat : IEquatable<GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified. Do not use.
        /// </summary>
        public static GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat AudioFormatUnspecified { get; } = new GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat("AUDIO_FORMAT_UNSPECIFIED");
        /// <summary>
        /// G.711 mu-law PCM with 8kHz sample rate.
        /// </summary>
        public static GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat Mulaw { get; } = new GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat("MULAW");
        /// <summary>
        /// MP3 file format.
        /// </summary>
        public static GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat Mp3 { get; } = new GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat("MP3");
        /// <summary>
        /// OGG Vorbis.
        /// </summary>
        public static GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat Ogg { get; } = new GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat("OGG");

        public static bool operator ==(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat left, GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat left, GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettingsAudioFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether the test case passed in the agent environment.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3TestCaseResultTestResult : IEquatable<GoogleCloudDialogflowCxV3TestCaseResultTestResult>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3TestCaseResultTestResult(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. Should never be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3TestCaseResultTestResult TestResultUnspecified { get; } = new GoogleCloudDialogflowCxV3TestCaseResultTestResult("TEST_RESULT_UNSPECIFIED");
        /// <summary>
        /// The test passed.
        /// </summary>
        public static GoogleCloudDialogflowCxV3TestCaseResultTestResult Passed { get; } = new GoogleCloudDialogflowCxV3TestCaseResultTestResult("PASSED");
        /// <summary>
        /// The test did not pass.
        /// </summary>
        public static GoogleCloudDialogflowCxV3TestCaseResultTestResult Failed { get; } = new GoogleCloudDialogflowCxV3TestCaseResultTestResult("FAILED");

        public static bool operator ==(GoogleCloudDialogflowCxV3TestCaseResultTestResult left, GoogleCloudDialogflowCxV3TestCaseResultTestResult right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3TestCaseResultTestResult left, GoogleCloudDialogflowCxV3TestCaseResultTestResult right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3TestCaseResultTestResult value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3TestCaseResultTestResult other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3TestCaseResultTestResult other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender : IEquatable<GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// An unspecified gender, which means that the client doesn't care which gender the selected voice will have.
        /// </summary>
        public static GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender SsmlVoiceGenderUnspecified { get; } = new GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_UNSPECIFIED");
        /// <summary>
        /// A male voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender SsmlVoiceGenderMale { get; } = new GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_MALE");
        /// <summary>
        /// A female voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender SsmlVoiceGenderFemale { get; } = new GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_FEMALE");
        /// <summary>
        /// A gender-neutral voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender SsmlVoiceGenderNeutral { get; } = new GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_NEUTRAL");

        public static bool operator ==(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender left, GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender left, GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3VoiceSelectionParamsSsmlGender other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod : IEquatable<GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// HTTP method not specified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod HttpMethodUnspecified { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("HTTP_METHOD_UNSPECIFIED");
        /// <summary>
        /// HTTP POST Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Post { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("POST");
        /// <summary>
        /// HTTP GET Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Get { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("GET");
        /// <summary>
        /// HTTP HEAD Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Head { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("HEAD");
        /// <summary>
        /// HTTP PUT Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Put { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("PUT");
        /// <summary>
        /// HTTP DELETE Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Delete { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("DELETE");
        /// <summary>
        /// HTTP PATCH Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Patch { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("PATCH");
        /// <summary>
        /// HTTP OPTIONS Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod Options { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod("OPTIONS");

        public static bool operator ==(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod left, GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod left, GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3WebhookGenericWebServiceHttpMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Type of the webhook.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType : IEquatable<GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType WebhookTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType("WEBHOOK_TYPE_UNSPECIFIED");
        /// <summary>
        /// Represents a standard webhook.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType Standard { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType("STANDARD");
        /// <summary>
        /// Represents a flexible webhook.
        /// </summary>
        public static GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType Flexible { get; } = new GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType("FLEXIBLE");

        public static bool operator ==(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType left, GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType left, GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3WebhookGenericWebServiceWebhookType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct SecuritySettingPurgeDataTypesItem : IEquatable<SecuritySettingPurgeDataTypesItem>
    {
        private readonly string _value;

        private SecuritySettingPurgeDataTypesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified. Do not use.
        /// </summary>
        public static SecuritySettingPurgeDataTypesItem PurgeDataTypeUnspecified { get; } = new SecuritySettingPurgeDataTypesItem("PURGE_DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// Dialogflow history. This does not include Cloud logging, which is owned by the user - not Dialogflow.
        /// </summary>
        public static SecuritySettingPurgeDataTypesItem DialogflowHistory { get; } = new SecuritySettingPurgeDataTypesItem("DIALOGFLOW_HISTORY");

        public static bool operator ==(SecuritySettingPurgeDataTypesItem left, SecuritySettingPurgeDataTypesItem right) => left.Equals(right);
        public static bool operator !=(SecuritySettingPurgeDataTypesItem left, SecuritySettingPurgeDataTypesItem right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingPurgeDataTypesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingPurgeDataTypesItem other && Equals(other);
        public bool Equals(SecuritySettingPurgeDataTypesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRedactionScope : IEquatable<SecuritySettingRedactionScope>
    {
        private readonly string _value;

        private SecuritySettingRedactionScope(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Don't redact any kind of data.
        /// </summary>
        public static SecuritySettingRedactionScope RedactionScopeUnspecified { get; } = new SecuritySettingRedactionScope("REDACTION_SCOPE_UNSPECIFIED");
        /// <summary>
        /// On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
        /// </summary>
        public static SecuritySettingRedactionScope RedactDiskStorage { get; } = new SecuritySettingRedactionScope("REDACT_DISK_STORAGE");

        public static bool operator ==(SecuritySettingRedactionScope left, SecuritySettingRedactionScope right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRedactionScope left, SecuritySettingRedactionScope right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRedactionScope value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRedactionScope other && Equals(other);
        public bool Equals(SecuritySettingRedactionScope other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Strategy that defines how we do redaction.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRedactionStrategy : IEquatable<SecuritySettingRedactionStrategy>
    {
        private readonly string _value;

        private SecuritySettingRedactionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Do not redact.
        /// </summary>
        public static SecuritySettingRedactionStrategy RedactionStrategyUnspecified { get; } = new SecuritySettingRedactionStrategy("REDACTION_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Call redaction service to clean up the data to be persisted.
        /// </summary>
        public static SecuritySettingRedactionStrategy RedactWithService { get; } = new SecuritySettingRedactionStrategy("REDACT_WITH_SERVICE");

        public static bool operator ==(SecuritySettingRedactionStrategy left, SecuritySettingRedactionStrategy right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRedactionStrategy left, SecuritySettingRedactionStrategy right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRedactionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRedactionStrategy other && Equals(other);
        public bool Equals(SecuritySettingRedactionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRetentionStrategy : IEquatable<SecuritySettingRetentionStrategy>
    {
        private readonly string _value;

        private SecuritySettingRetentionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Retains the persisted data with Dialogflow's internal default 365d TTLs.
        /// </summary>
        public static SecuritySettingRetentionStrategy RetentionStrategyUnspecified { get; } = new SecuritySettingRetentionStrategy("RETENTION_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Removes data when the conversation ends. If there is no Conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
        /// </summary>
        public static SecuritySettingRetentionStrategy RemoveAfterConversation { get; } = new SecuritySettingRetentionStrategy("REMOVE_AFTER_CONVERSATION");

        public static bool operator ==(SecuritySettingRetentionStrategy left, SecuritySettingRetentionStrategy right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRetentionStrategy left, SecuritySettingRetentionStrategy right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRetentionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRetentionStrategy other && Equals(other);
        public bool Equals(SecuritySettingRetentionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
    /// </summary>
    [EnumType]
    public readonly struct SessionEntityTypeEntityOverrideMode : IEquatable<SessionEntityTypeEntityOverrideMode>
    {
        private readonly string _value;

        private SessionEntityTypeEntityOverrideMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value should be never used.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeUnspecified { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_UNSPECIFIED");
        /// <summary>
        /// The collection of session entities overrides the collection of entities in the corresponding custom entity type.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeOverride { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_OVERRIDE");
        /// <summary>
        /// The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeSupplement { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_SUPPLEMENT");

        public static bool operator ==(SessionEntityTypeEntityOverrideMode left, SessionEntityTypeEntityOverrideMode right) => left.Equals(right);
        public static bool operator !=(SessionEntityTypeEntityOverrideMode left, SessionEntityTypeEntityOverrideMode right) => !left.Equals(right);

        public static explicit operator string(SessionEntityTypeEntityOverrideMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SessionEntityTypeEntityOverrideMode other && Equals(other);
        public bool Equals(SessionEntityTypeEntityOverrideMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
