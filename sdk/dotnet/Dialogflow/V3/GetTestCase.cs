// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3
{
    public static class GetTestCase
    {
        /// <summary>
        /// Gets a test case.
        /// </summary>
        public static Task<GetTestCaseResult> InvokeAsync(GetTestCaseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTestCaseResult>("google-native:dialogflow/v3:getTestCase", args ?? new GetTestCaseArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a test case.
        /// </summary>
        public static Output<GetTestCaseResult> Invoke(GetTestCaseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTestCaseResult>("google-native:dialogflow/v3:getTestCase", args ?? new GetTestCaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTestCaseArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("testCaseId", required: true)]
        public string TestCaseId { get; set; } = null!;

        public GetTestCaseArgs()
        {
        }
        public static new GetTestCaseArgs Empty => new GetTestCaseArgs();
    }

    public sealed class GetTestCaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("testCaseId", required: true)]
        public Input<string> TestCaseId { get; set; } = null!;

        public GetTestCaseInvokeArgs()
        {
        }
        public static new GetTestCaseInvokeArgs Empty => new GetTestCaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetTestCaseResult
    {
        /// <summary>
        /// When the test was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The human-readable name of the test case, unique within the agent. Limit of 200 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The latest test result.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3TestCaseResultResponse LastTestResult;
        /// <summary>
        /// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Additional freeform notes about the test case. Limit of 400 characters.
        /// </summary>
        public readonly string Notes;
        /// <summary>
        /// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDialogflowCxV3ConversationTurnResponse> TestCaseConversationTurns;
        /// <summary>
        /// Config for the test case.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowCxV3TestConfigResponse TestConfig;

        [OutputConstructor]
        private GetTestCaseResult(
            string creationTime,

            string displayName,

            Outputs.GoogleCloudDialogflowCxV3TestCaseResultResponse lastTestResult,

            string name,

            string notes,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.GoogleCloudDialogflowCxV3ConversationTurnResponse> testCaseConversationTurns,

            Outputs.GoogleCloudDialogflowCxV3TestConfigResponse testConfig)
        {
            CreationTime = creationTime;
            DisplayName = displayName;
            LastTestResult = lastTestResult;
            Name = name;
            Notes = notes;
            Tags = tags;
            TestCaseConversationTurns = testCaseConversationTurns;
            TestConfig = testConfig;
        }
    }
}
