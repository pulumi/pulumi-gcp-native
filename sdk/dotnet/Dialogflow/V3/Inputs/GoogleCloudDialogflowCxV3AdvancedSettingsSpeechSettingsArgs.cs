// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3.Inputs
{

    /// <summary>
    /// Define behaviors of speech to text detection.
    /// </summary>
    public sealed class GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.
        /// </summary>
        [Input("endpointerSensitivity")]
        public Input<int>? EndpointerSensitivity { get; set; }

        [Input("models")]
        private InputMap<string>? _models;

        /// <summary>
        /// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests from its corresponding language. For more information, see [Speech models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
        /// </summary>
        public InputMap<string> Models
        {
            get => _models ?? (_models = new InputMap<string>());
            set => _models = value;
        }

        /// <summary>
        /// Timeout before detecting no speech.
        /// </summary>
        [Input("noSpeechTimeout")]
        public Input<string>? NoSpeechTimeout { get; set; }

        /// <summary>
        /// Use timeout based endpointing, interpreting endpointer sensitivy as seconds of timeout value.
        /// </summary>
        [Input("useTimeoutBasedEndpointing")]
        public Input<bool>? UseTimeoutBasedEndpointing { get; set; }

        public GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettingsArgs()
        {
        }
        public static new GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettingsArgs Empty => new GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettingsArgs();
    }
}
