// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3.Inputs
{

    /// <summary>
    /// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
    /// </summary>
    public sealed class GoogleCloudDialogflowCxV3FulfillmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
        /// </summary>
        [Input("advancedSettings")]
        public Input<Inputs.GoogleCloudDialogflowCxV3AdvancedSettingsArgs>? AdvancedSettings { get; set; }

        [Input("conditionalCases")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs>? _conditionalCases;

        /// <summary>
        /// Conditional cases for this fulfillment.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs> ConditionalCases
        {
            get => _conditionalCases ?? (_conditionalCases = new InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesArgs>());
            set => _conditionalCases = value;
        }

        /// <summary>
        /// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
        /// </summary>
        [Input("enableGenerativeFallback")]
        public Input<bool>? EnableGenerativeFallback { get; set; }

        [Input("messages")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3ResponseMessageArgs>? _messages;

        /// <summary>
        /// The list of rich message responses to present to the user.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3ResponseMessageArgs> Messages
        {
            get => _messages ?? (_messages = new InputList<Inputs.GoogleCloudDialogflowCxV3ResponseMessageArgs>());
            set => _messages = value;
        }

        /// <summary>
        /// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
        /// </summary>
        [Input("returnPartialResponses")]
        public Input<bool>? ReturnPartialResponses { get; set; }

        [Input("setParameterActions")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs>? _setParameterActions;

        /// <summary>
        /// Set parameter values before executing the webhook.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs> SetParameterActions
        {
            get => _setParameterActions ?? (_setParameterActions = new InputList<Inputs.GoogleCloudDialogflowCxV3FulfillmentSetParameterActionArgs>());
            set => _setParameterActions = value;
        }

        /// <summary>
        /// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The webhook to call. Format: `projects//locations//agents//webhooks/`.
        /// </summary>
        [Input("webhook")]
        public Input<string>? Webhook { get; set; }

        public GoogleCloudDialogflowCxV3FulfillmentArgs()
        {
        }
        public static new GoogleCloudDialogflowCxV3FulfillmentArgs Empty => new GoogleCloudDialogflowCxV3FulfillmentArgs();
    }
}
