// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3.Inputs
{

    /// <summary>
    /// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
    /// </summary>
    public sealed class GoogleCloudDialogflowCxV3PageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The human-readable name of the page, unique within the flow.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The fulfillment to call when the session is entering the page.
        /// </summary>
        [Input("entryFulfillment")]
        public Input<Inputs.GoogleCloudDialogflowCxV3FulfillmentArgs>? EntryFulfillment { get; set; }

        [Input("eventHandlers")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3EventHandlerArgs>? _eventHandlers;

        /// <summary>
        /// Handlers associated with the page to handle events such as webhook errors, no match or no input.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3EventHandlerArgs> EventHandlers
        {
            get => _eventHandlers ?? (_eventHandlers = new InputList<Inputs.GoogleCloudDialogflowCxV3EventHandlerArgs>());
            set => _eventHandlers = value;
        }

        /// <summary>
        /// The form associated with the page, used for collecting parameters relevant to the page.
        /// </summary>
        [Input("form")]
        public Input<Inputs.GoogleCloudDialogflowCxV3FormArgs>? Form { get; set; }

        /// <summary>
        /// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("transitionRouteGroups")]
        private InputList<string>? _transitionRouteGroups;

        /// <summary>
        /// Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -&gt; page's transition route group -&gt; flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.
        /// </summary>
        public InputList<string> TransitionRouteGroups
        {
            get => _transitionRouteGroups ?? (_transitionRouteGroups = new InputList<string>());
            set => _transitionRouteGroups = value;
        }

        [Input("transitionRoutes")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3TransitionRouteArgs>? _transitionRoutes;

        /// <summary>
        /// A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3TransitionRouteArgs> TransitionRoutes
        {
            get => _transitionRoutes ?? (_transitionRoutes = new InputList<Inputs.GoogleCloudDialogflowCxV3TransitionRouteArgs>());
            set => _transitionRoutes = value;
        }

        public GoogleCloudDialogflowCxV3PageArgs()
        {
        }
        public static new GoogleCloudDialogflowCxV3PageArgs Empty => new GoogleCloudDialogflowCxV3PageArgs();
    }
}
