// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V2
{
    public static class GetEvaluation
    {
        /// <summary>
        /// Gets an evaluation of conversation model.
        /// </summary>
        public static Task<GetEvaluationResult> InvokeAsync(GetEvaluationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEvaluationResult>("google-native:dialogflow/v2:getEvaluation", args ?? new GetEvaluationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an evaluation of conversation model.
        /// </summary>
        public static Output<GetEvaluationResult> Invoke(GetEvaluationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEvaluationResult>("google-native:dialogflow/v2:getEvaluation", args ?? new GetEvaluationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEvaluationArgs : global::Pulumi.InvokeArgs
    {
        [Input("conversationModelId", required: true)]
        public string ConversationModelId { get; set; } = null!;

        [Input("evaluationId", required: true)]
        public string EvaluationId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetEvaluationArgs()
        {
        }
        public static new GetEvaluationArgs Empty => new GetEvaluationArgs();
    }

    public sealed class GetEvaluationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("conversationModelId", required: true)]
        public Input<string> ConversationModelId { get; set; } = null!;

        [Input("evaluationId", required: true)]
        public Input<string> EvaluationId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetEvaluationInvokeArgs()
        {
        }
        public static new GetEvaluationInvokeArgs Empty => new GetEvaluationInvokeArgs();
    }


    [OutputType]
    public sealed class GetEvaluationResult
    {
        /// <summary>
        /// Creation time of this model.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. The display name of the model evaluation. At most 64 bytes long.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. The configuration of the evaluation task.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowV2EvaluationConfigResponse EvaluationConfig;
        /// <summary>
        /// The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: "Would you send it as the next message of agent?" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: "Does the suggestion move the conversation closer to resolution?" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.
        /// </summary>
        public readonly string RawHumanEvalTemplateCsv;
        /// <summary>
        /// Only available when model is for smart reply.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowV2SmartReplyMetricsResponse SmartReplyMetrics;

        [OutputConstructor]
        private GetEvaluationResult(
            string createTime,

            string displayName,

            Outputs.GoogleCloudDialogflowV2EvaluationConfigResponse evaluationConfig,

            string name,

            string rawHumanEvalTemplateCsv,

            Outputs.GoogleCloudDialogflowV2SmartReplyMetricsResponse smartReplyMetrics)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            EvaluationConfig = evaluationConfig;
            Name = name;
            RawHumanEvalTemplateCsv = rawHumanEvalTemplateCsv;
            SmartReplyMetrics = smartReplyMetrics;
        }
    }
}
