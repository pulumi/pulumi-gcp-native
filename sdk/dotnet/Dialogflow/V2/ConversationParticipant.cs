// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Dialogflow.V2
{
    /// <summary>
    /// Creates a new participant in a conversation.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:dialogflow/v2:ConversationParticipant")]
    public partial class ConversationParticipant : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a ConversationParticipant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConversationParticipant(string name, ConversationParticipantArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:dialogflow/v2:ConversationParticipant", name, args ?? new ConversationParticipantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConversationParticipant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:dialogflow/v2:ConversationParticipant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConversationParticipant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConversationParticipant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ConversationParticipant(name, id, options);
        }
    }

    public sealed class ConversationParticipantArgs : Pulumi.ResourceArgs
    {
        [Input("conversationsId", required: true)]
        public Input<string> ConversationsId { get; set; } = null!;

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.
        /// </summary>
        [Input("sipRecordingMediaLabel")]
        public Input<string>? SipRecordingMediaLabel { get; set; }

        public ConversationParticipantArgs()
        {
        }
    }
}
