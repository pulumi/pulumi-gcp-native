// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3Beta1.Inputs
{

    /// <summary>
    /// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
    /// </summary>
    public sealed class GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("dataStoreConnections")]
        private InputList<Inputs.GoogleCloudDialogflowCxV3beta1DataStoreConnectionArgs>? _dataStoreConnections;

        /// <summary>
        /// Optional. List of related data store connections.
        /// </summary>
        public InputList<Inputs.GoogleCloudDialogflowCxV3beta1DataStoreConnectionArgs> DataStoreConnections
        {
            get => _dataStoreConnections ?? (_dataStoreConnections = new InputList<Inputs.GoogleCloudDialogflowCxV3beta1DataStoreConnectionArgs>());
            set => _dataStoreConnections = value;
        }

        /// <summary>
        /// Whether Knowledge Connector is enabled or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The target flow to transition to. Format: `projects//locations//agents//flows/`.
        /// </summary>
        [Input("targetFlow")]
        public Input<string>? TargetFlow { get; set; }

        /// <summary>
        /// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Input("targetPage")]
        public Input<string>? TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
        /// </summary>
        [Input("triggerFulfillment")]
        public Input<Inputs.GoogleCloudDialogflowCxV3beta1FulfillmentArgs>? TriggerFulfillment { get; set; }

        public GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettingsArgs()
        {
        }
        public static new GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettingsArgs Empty => new GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettingsArgs();
    }
}
