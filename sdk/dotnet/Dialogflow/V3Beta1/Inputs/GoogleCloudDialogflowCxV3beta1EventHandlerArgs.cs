// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3Beta1.Inputs
{

    /// <summary>
    /// An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
    /// </summary>
    public sealed class GoogleCloudDialogflowCxV3beta1EventHandlerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the event to handle.
        /// </summary>
        [Input("event", required: true)]
        public Input<string> Event { get; set; } = null!;

        /// <summary>
        /// The target flow to transition to. Format: `projects//locations//agents//flows/`.
        /// </summary>
        [Input("targetFlow")]
        public Input<string>? TargetFlow { get; set; }

        /// <summary>
        /// The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Input("targetPage")]
        public Input<string>? TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
        /// </summary>
        [Input("triggerFulfillment")]
        public Input<Inputs.GoogleCloudDialogflowCxV3beta1FulfillmentArgs>? TriggerFulfillment { get; set; }

        public GoogleCloudDialogflowCxV3beta1EventHandlerArgs()
        {
        }
    }
}
