// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Dialogflow.V3Beta1
{
    /// <summary>
    /// Indicates whether the entity type can be automatically expanded.
    /// </summary>
    [EnumType]
    public readonly struct EntityTypeAutoExpansionMode : IEquatable<EntityTypeAutoExpansionMode>
    {
        private readonly string _value;

        private EntityTypeAutoExpansionMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Auto expansion disabled for the entity.
        /// </summary>
        public static EntityTypeAutoExpansionMode AutoExpansionModeUnspecified { get; } = new EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_UNSPECIFIED");
        /// <summary>
        /// Allows an agent to recognize values that have not been explicitly listed in the entity.
        /// </summary>
        public static EntityTypeAutoExpansionMode AutoExpansionModeDefault { get; } = new EntityTypeAutoExpansionMode("AUTO_EXPANSION_MODE_DEFAULT");

        public static bool operator ==(EntityTypeAutoExpansionMode left, EntityTypeAutoExpansionMode right) => left.Equals(right);
        public static bool operator !=(EntityTypeAutoExpansionMode left, EntityTypeAutoExpansionMode right) => !left.Equals(right);

        public static explicit operator string(EntityTypeAutoExpansionMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntityTypeAutoExpansionMode other && Equals(other);
        public bool Equals(EntityTypeAutoExpansionMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Indicates the kind of entity type.
    /// </summary>
    [EnumType]
    public readonly struct EntityTypeKind : IEquatable<EntityTypeKind>
    {
        private readonly string _value;

        private EntityTypeKind(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value should be never used.
        /// </summary>
        public static EntityTypeKind KindUnspecified { get; } = new EntityTypeKind("KIND_UNSPECIFIED");
        /// <summary>
        /// Map entity types allow mapping of a group of synonyms to a canonical value.
        /// </summary>
        public static EntityTypeKind KindMap { get; } = new EntityTypeKind("KIND_MAP");
        /// <summary>
        /// List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).
        /// </summary>
        public static EntityTypeKind KindList { get; } = new EntityTypeKind("KIND_LIST");
        /// <summary>
        /// Regexp entity types allow to specify regular expressions in entries values.
        /// </summary>
        public static EntityTypeKind KindRegexp { get; } = new EntityTypeKind("KIND_REGEXP");

        public static bool operator ==(EntityTypeKind left, EntityTypeKind right) => left.Equals(right);
        public static bool operator !=(EntityTypeKind left, EntityTypeKind right) => !left.Equals(right);

        public static explicit operator string(EntityTypeKind value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntityTypeKind other && Equals(other);
        public bool Equals(EntityTypeKind other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT-&gt;RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT-&gt;DONE or RUNNING-&gt;DONE.
    /// </summary>
    [EnumType]
    public readonly struct ExperimentState : IEquatable<ExperimentState>
    {
        private readonly string _value;

        private ExperimentState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// State unspecified.
        /// </summary>
        public static ExperimentState StateUnspecified { get; } = new ExperimentState("STATE_UNSPECIFIED");
        /// <summary>
        /// The experiment is created but not started yet.
        /// </summary>
        public static ExperimentState Draft { get; } = new ExperimentState("DRAFT");
        /// <summary>
        /// The experiment is running.
        /// </summary>
        public static ExperimentState Running { get; } = new ExperimentState("RUNNING");
        /// <summary>
        /// The experiment is done.
        /// </summary>
        public static ExperimentState Done { get; } = new ExperimentState("DONE");
        /// <summary>
        /// The experiment with auto-rollout enabled has failed.
        /// </summary>
        public static ExperimentState RolloutFailed { get; } = new ExperimentState("ROLLOUT_FAILED");

        public static bool operator ==(ExperimentState left, ExperimentState right) => left.Equals(right);
        public static bool operator !=(ExperimentState left, ExperimentState right) => !left.Equals(right);

        public static explicit operator string(ExperimentState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExperimentState other && Equals(other);
        public bool Equals(ExperimentState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of the connected data store.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType : IEquatable<GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value indicates that the data store type is not specified, so it will not be used during search.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType DataStoreTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType("DATA_STORE_TYPE_UNSPECIFIED");
        /// <summary>
        /// A data store that contains public web content.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType PublicWeb { get; } = new GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType("PUBLIC_WEB");
        /// <summary>
        /// A data store that contains unstructured private data.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType Unstructured { get; } = new GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType("UNSTRUCTURED");
        /// <summary>
        /// A data store that contains structured data (for example FAQ).
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType Structured { get; } = new GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType("STRUCTURED");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType left, GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType left, GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1DataStoreConnectionDataStoreType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Count-based metric type. Only one of type or count_type is specified in each Metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType : IEquatable<GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Count type unspecified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType CountTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("COUNT_TYPE_UNSPECIFIED");
        /// <summary>
        /// Total number of occurrences of a 'NO_MATCH'.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType TotalNoMatchCount { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("TOTAL_NO_MATCH_COUNT");
        /// <summary>
        /// Total number of turn counts.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType TotalTurnCount { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("TOTAL_TURN_COUNT");
        /// <summary>
        /// Average turn count in a session.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType AverageTurnCount { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType("AVERAGE_TURN_COUNT");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType left, GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType left, GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType : IEquatable<GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Metric unspecified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType MetricUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("METRIC_UNSPECIFIED");
        /// <summary>
        /// Percentage of contained sessions without user calling back in 24 hours.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType ContainedSessionNoCallbackRate { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("CONTAINED_SESSION_NO_CALLBACK_RATE");
        /// <summary>
        /// Percentage of sessions that were handed to a human agent.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType LiveAgentHandoffRate { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("LIVE_AGENT_HANDOFF_RATE");
        /// <summary>
        /// Percentage of sessions with the same user calling back.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType CallbackSessionRate { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("CALLBACK_SESSION_RATE");
        /// <summary>
        /// Percentage of sessions where user hung up.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType AbandonedSessionRate { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("ABANDONED_SESSION_RATE");
        /// <summary>
        /// Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType SessionEndRate { get; } = new GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType("SESSION_END_RATE");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType left, GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType left, GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1ExperimentResultMetricType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Audio encoding of the audio content to process.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding : IEquatable<GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_UNSPECIFIED");
        /// <summary>
        /// Uncompressed 16-bit signed little-endian samples (Linear PCM).
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingLinear16 { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_LINEAR_16");
        /// <summary>
        /// [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingFlac { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_FLAC");
        /// <summary>
        /// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingMulaw { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_MULAW");
        /// <summary>
        /// Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingAmr { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR");
        /// <summary>
        /// Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingAmrWb { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_AMR_WB");
        /// <summary>
        /// Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingOggOpus { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_OGG_OPUS");
        /// <summary>
        /// Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding AudioEncodingSpeexWithHeaderByte { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding("AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding left, GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding left, GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1InputAudioConfigAudioEncoding other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Which variant of the Speech model to use.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant : IEquatable<GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant SpeechModelVariantUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("SPEECH_MODEL_VARIANT_UNSPECIFIED");
        /// <summary>
        /// Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant UseBestAvailable { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_BEST_AVAILABLE");
        /// <summary>
        /// Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant UseStandard { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_STANDARD");
        /// <summary>
        /// Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant UseEnhanced { get; } = new GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant("USE_ENHANCED");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant left, GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant left, GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1InputAudioConfigModelVariant other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Indicates NLU model training mode.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode : IEquatable<GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode ModelTrainingModeUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_UNSPECIFIED");
        /// <summary>
        /// NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode ModelTrainingModeAutomatic { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_AUTOMATIC");
        /// <summary>
        /// User needs to manually trigger NLU model training. Best for large flows whose models take long time to train.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode ModelTrainingModeManual { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode("MODEL_TRAINING_MODE_MANUAL");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode left, GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode left, GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1NluSettingsModelTrainingMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Indicates the type of NLU model.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1NluSettingsModelType : IEquatable<GoogleCloudDialogflowCxV3beta1NluSettingsModelType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1NluSettingsModelType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. `MODEL_TYPE_STANDARD` will be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelType ModelTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Use standard NLU model.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelType ModelTypeStandard { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_STANDARD");
        /// <summary>
        /// Use advanced NLU model.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1NluSettingsModelType ModelTypeAdvanced { get; } = new GoogleCloudDialogflowCxV3beta1NluSettingsModelType("MODEL_TYPE_ADVANCED");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1NluSettingsModelType left, GoogleCloudDialogflowCxV3beta1NluSettingsModelType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1NluSettingsModelType left, GoogleCloudDialogflowCxV3beta1NluSettingsModelType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1NluSettingsModelType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1NluSettingsModelType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1NluSettingsModelType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// File format for exported audio file. Currently only in telephony recordings.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat : IEquatable<GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified. Do not use.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat AudioFormatUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat("AUDIO_FORMAT_UNSPECIFIED");
        /// <summary>
        /// G.711 mu-law PCM with 8kHz sample rate.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat Mulaw { get; } = new GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat("MULAW");
        /// <summary>
        /// MP3 file format.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat Mp3 { get; } = new GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat("MP3");
        /// <summary>
        /// OGG Vorbis.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat Ogg { get; } = new GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat("OGG");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat left, GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat left, GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettingsAudioFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether the test case passed in the agent environment.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult : IEquatable<GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. Should never be used.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult TestResultUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("TEST_RESULT_UNSPECIFIED");
        /// <summary>
        /// The test passed.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult Passed { get; } = new GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("PASSED");
        /// <summary>
        /// The test did not pass.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult Failed { get; } = new GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult("FAILED");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult left, GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult left, GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1TestCaseResultTestResult other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender : IEquatable<GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// An unspecified gender, which means that the client doesn't care which gender the selected voice will have.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender SsmlVoiceGenderUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_UNSPECIFIED");
        /// <summary>
        /// A male voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender SsmlVoiceGenderMale { get; } = new GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_MALE");
        /// <summary>
        /// A female voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender SsmlVoiceGenderFemale { get; } = new GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_FEMALE");
        /// <summary>
        /// A gender-neutral voice.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender SsmlVoiceGenderNeutral { get; } = new GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender("SSML_VOICE_GENDER_NEUTRAL");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender left, GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender left, GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1VoiceSelectionParamsSsmlGender other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod : IEquatable<GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// HTTP method not specified.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod HttpMethodUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("HTTP_METHOD_UNSPECIFIED");
        /// <summary>
        /// HTTP POST Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Post { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("POST");
        /// <summary>
        /// HTTP GET Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Get { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("GET");
        /// <summary>
        /// HTTP HEAD Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Head { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("HEAD");
        /// <summary>
        /// HTTP PUT Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Put { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("PUT");
        /// <summary>
        /// HTTP DELETE Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Delete { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("DELETE");
        /// <summary>
        /// HTTP PATCH Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Patch { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("PATCH");
        /// <summary>
        /// HTTP OPTIONS Method.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod Options { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod("OPTIONS");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod left, GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod left, GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceHttpMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Type of the webhook.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType : IEquatable<GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType>
    {
        private readonly string _value;

        private GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType WebhookTypeUnspecified { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType("WEBHOOK_TYPE_UNSPECIFIED");
        /// <summary>
        /// Represents a standard webhook.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType Standard { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType("STANDARD");
        /// <summary>
        /// Represents a flexible webhook.
        /// </summary>
        public static GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType Flexible { get; } = new GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType("FLEXIBLE");

        public static bool operator ==(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType left, GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType left, GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType other && Equals(other);
        public bool Equals(GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceWebhookType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct SecuritySettingPurgeDataTypesItem : IEquatable<SecuritySettingPurgeDataTypesItem>
    {
        private readonly string _value;

        private SecuritySettingPurgeDataTypesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified. Do not use.
        /// </summary>
        public static SecuritySettingPurgeDataTypesItem PurgeDataTypeUnspecified { get; } = new SecuritySettingPurgeDataTypesItem("PURGE_DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// Dialogflow history. This does not include Cloud logging, which is owned by the user - not Dialogflow.
        /// </summary>
        public static SecuritySettingPurgeDataTypesItem DialogflowHistory { get; } = new SecuritySettingPurgeDataTypesItem("DIALOGFLOW_HISTORY");

        public static bool operator ==(SecuritySettingPurgeDataTypesItem left, SecuritySettingPurgeDataTypesItem right) => left.Equals(right);
        public static bool operator !=(SecuritySettingPurgeDataTypesItem left, SecuritySettingPurgeDataTypesItem right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingPurgeDataTypesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingPurgeDataTypesItem other && Equals(other);
        public bool Equals(SecuritySettingPurgeDataTypesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRedactionScope : IEquatable<SecuritySettingRedactionScope>
    {
        private readonly string _value;

        private SecuritySettingRedactionScope(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Don't redact any kind of data.
        /// </summary>
        public static SecuritySettingRedactionScope RedactionScopeUnspecified { get; } = new SecuritySettingRedactionScope("REDACTION_SCOPE_UNSPECIFIED");
        /// <summary>
        /// On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
        /// </summary>
        public static SecuritySettingRedactionScope RedactDiskStorage { get; } = new SecuritySettingRedactionScope("REDACT_DISK_STORAGE");

        public static bool operator ==(SecuritySettingRedactionScope left, SecuritySettingRedactionScope right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRedactionScope left, SecuritySettingRedactionScope right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRedactionScope value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRedactionScope other && Equals(other);
        public bool Equals(SecuritySettingRedactionScope other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Strategy that defines how we do redaction.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRedactionStrategy : IEquatable<SecuritySettingRedactionStrategy>
    {
        private readonly string _value;

        private SecuritySettingRedactionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Do not redact.
        /// </summary>
        public static SecuritySettingRedactionStrategy RedactionStrategyUnspecified { get; } = new SecuritySettingRedactionStrategy("REDACTION_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Call redaction service to clean up the data to be persisted.
        /// </summary>
        public static SecuritySettingRedactionStrategy RedactWithService { get; } = new SecuritySettingRedactionStrategy("REDACT_WITH_SERVICE");

        public static bool operator ==(SecuritySettingRedactionStrategy left, SecuritySettingRedactionStrategy right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRedactionStrategy left, SecuritySettingRedactionStrategy right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRedactionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRedactionStrategy other && Equals(other);
        public bool Equals(SecuritySettingRedactionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.
    /// </summary>
    [EnumType]
    public readonly struct SecuritySettingRetentionStrategy : IEquatable<SecuritySettingRetentionStrategy>
    {
        private readonly string _value;

        private SecuritySettingRetentionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Retains the persisted data with Dialogflow's internal default 365d TTLs.
        /// </summary>
        public static SecuritySettingRetentionStrategy RetentionStrategyUnspecified { get; } = new SecuritySettingRetentionStrategy("RETENTION_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Removes data when the conversation ends. If there is no Conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
        /// </summary>
        public static SecuritySettingRetentionStrategy RemoveAfterConversation { get; } = new SecuritySettingRetentionStrategy("REMOVE_AFTER_CONVERSATION");

        public static bool operator ==(SecuritySettingRetentionStrategy left, SecuritySettingRetentionStrategy right) => left.Equals(right);
        public static bool operator !=(SecuritySettingRetentionStrategy left, SecuritySettingRetentionStrategy right) => !left.Equals(right);

        public static explicit operator string(SecuritySettingRetentionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SecuritySettingRetentionStrategy other && Equals(other);
        public bool Equals(SecuritySettingRetentionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Indicates whether the additional data should override or supplement the custom entity type definition.
    /// </summary>
    [EnumType]
    public readonly struct SessionEntityTypeEntityOverrideMode : IEquatable<SessionEntityTypeEntityOverrideMode>
    {
        private readonly string _value;

        private SessionEntityTypeEntityOverrideMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Not specified. This value should be never used.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeUnspecified { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_UNSPECIFIED");
        /// <summary>
        /// The collection of session entities overrides the collection of entities in the corresponding custom entity type.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeOverride { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_OVERRIDE");
        /// <summary>
        /// The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge.
        /// </summary>
        public static SessionEntityTypeEntityOverrideMode EntityOverrideModeSupplement { get; } = new SessionEntityTypeEntityOverrideMode("ENTITY_OVERRIDE_MODE_SUPPLEMENT");

        public static bool operator ==(SessionEntityTypeEntityOverrideMode left, SessionEntityTypeEntityOverrideMode right) => left.Equals(right);
        public static bool operator !=(SessionEntityTypeEntityOverrideMode left, SessionEntityTypeEntityOverrideMode right) => !left.Equals(right);

        public static explicit operator string(SessionEntityTypeEntityOverrideMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is SessionEntityTypeEntityOverrideMode other && Equals(other);
        public bool Equals(SessionEntityTypeEntityOverrideMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
