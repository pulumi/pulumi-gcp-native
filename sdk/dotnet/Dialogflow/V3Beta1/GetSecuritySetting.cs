// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V3Beta1
{
    public static class GetSecuritySetting
    {
        /// <summary>
        /// Retrieves the specified SecuritySettings. The returned settings may be stale by up to 1 minute.
        /// </summary>
        public static Task<GetSecuritySettingResult> InvokeAsync(GetSecuritySettingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecuritySettingResult>("google-native:dialogflow/v3beta1:getSecuritySetting", args ?? new GetSecuritySettingArgs(), options.WithVersion());
    }


    public sealed class GetSecuritySettingArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("securitySettingId", required: true)]
        public string SecuritySettingId { get; set; } = null!;

        public GetSecuritySettingArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecuritySettingResult
    {
        /// <summary>
        /// Required. The human-readable name of the security settings, unique within the location.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// DLP inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`
        /// </summary>
        public readonly string InspectTemplate;
        /// <summary>
        /// Required. Resource name of the settings. Format: `projects//locations//securitySettings/`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of types of data to remove when retention settings triggers purge.
        /// </summary>
        public readonly ImmutableArray<string> PurgeDataTypes;
        /// <summary>
        /// Defines on what data we apply redaction. Note that we don't redact data to which we don't have access, e.g., Stackdriver logs.
        /// </summary>
        public readonly string RedactionScope;
        /// <summary>
        /// Strategy that defines how we do redaction.
        /// </summary>
        public readonly string RedactionStrategy;
        /// <summary>
        /// Retains the data for the specified number of days. User must Set a value lower than Dialogflow's default 30d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL.
        /// </summary>
        public readonly int RetentionWindowDays;

        [OutputConstructor]
        private GetSecuritySettingResult(
            string displayName,

            string inspectTemplate,

            string name,

            ImmutableArray<string> purgeDataTypes,

            string redactionScope,

            string redactionStrategy,

            int retentionWindowDays)
        {
            DisplayName = displayName;
            InspectTemplate = inspectTemplate;
            Name = name;
            PurgeDataTypes = purgeDataTypes;
            RedactionScope = redactionScope;
            RedactionStrategy = redactionStrategy;
            RetentionWindowDays = retentionWindowDays;
        }
    }
}
