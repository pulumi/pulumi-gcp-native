// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dialogflow.V2Beta1
{
    public static class GetDocument
    {
        /// <summary>
        /// Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
        /// </summary>
        public static Task<GetDocumentResult> InvokeAsync(GetDocumentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDocumentResult>("google-native:dialogflow/v2beta1:getDocument", args ?? new GetDocumentArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the specified document. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
        /// </summary>
        public static Output<GetDocumentResult> Invoke(GetDocumentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDocumentResult>("google-native:dialogflow/v2beta1:getDocument", args ?? new GetDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDocumentArgs : global::Pulumi.InvokeArgs
    {
        [Input("documentId", required: true)]
        public string DocumentId { get; set; } = null!;

        [Input("knowledgeBaseId", required: true)]
        public string KnowledgeBaseId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetDocumentArgs()
        {
        }
        public static new GetDocumentArgs Empty => new GetDocumentArgs();
    }

    public sealed class GetDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("documentId", required: true)]
        public Input<string> DocumentId { get; set; } = null!;

        [Input("knowledgeBaseId", required: true)]
        public Input<string> KnowledgeBaseId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDocumentInvokeArgs()
        {
        }
        public static new GetDocumentInvokeArgs Empty => new GetDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDocumentResult
    {
        /// <summary>
        /// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types. Note: This field is in the process of being deprecated, please use raw_content instead.
        /// </summary>
        public readonly string Content;
        /// <summary>
        /// The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.
        /// </summary>
        public readonly string ContentUri;
        /// <summary>
        /// The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.
        /// </summary>
        public readonly bool EnableAutoReload;
        /// <summary>
        /// The knowledge type of document content.
        /// </summary>
        public readonly ImmutableArray<string> KnowledgeTypes;
        /// <summary>
        /// The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.
        /// </summary>
        public readonly Outputs.GoogleCloudDialogflowV2beta1DocumentReloadStatusResponse LatestReloadStatus;
        /// <summary>
        /// Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// The MIME type of this document.
        /// </summary>
        public readonly string MimeType;
        /// <summary>
        /// Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
        /// </summary>
        public readonly string RawContent;
        /// <summary>
        /// The current state of the document.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetDocumentResult(
            string content,

            string contentUri,

            string displayName,

            bool enableAutoReload,

            ImmutableArray<string> knowledgeTypes,

            Outputs.GoogleCloudDialogflowV2beta1DocumentReloadStatusResponse latestReloadStatus,

            ImmutableDictionary<string, string> metadata,

            string mimeType,

            string name,

            string rawContent,

            string state)
        {
            Content = content;
            ContentUri = contentUri;
            DisplayName = displayName;
            EnableAutoReload = enableAutoReload;
            KnowledgeTypes = knowledgeTypes;
            LatestReloadStatus = latestReloadStatus;
            Metadata = metadata;
            MimeType = mimeType;
            Name = name;
            RawContent = rawContent;
            State = state;
        }
    }
}
