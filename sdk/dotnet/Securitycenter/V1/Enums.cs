// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Securitycenter.V1
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The enablement state of the custom module.
    /// </summary>
    [EnumType]
    public readonly struct CustomModuleEnablementState : IEquatable<CustomModuleEnablementState>
    {
        private readonly string _value;

        private CustomModuleEnablementState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified enablement state.
        /// </summary>
        public static CustomModuleEnablementState EnablementStateUnspecified { get; } = new CustomModuleEnablementState("ENABLEMENT_STATE_UNSPECIFIED");
        /// <summary>
        /// The module is enabled at the given CRM resource.
        /// </summary>
        public static CustomModuleEnablementState Enabled { get; } = new CustomModuleEnablementState("ENABLED");
        /// <summary>
        /// The module is disabled at the given CRM resource.
        /// </summary>
        public static CustomModuleEnablementState Disabled { get; } = new CustomModuleEnablementState("DISABLED");
        /// <summary>
        /// State is inherited from an ancestor module. The module will either be effectively ENABLED or DISABLED based on its closest non-inherited ancestor module in the CRM hierarchy.
        /// </summary>
        public static CustomModuleEnablementState Inherited { get; } = new CustomModuleEnablementState("INHERITED");

        public static bool operator ==(CustomModuleEnablementState left, CustomModuleEnablementState right) => left.Equals(right);
        public static bool operator !=(CustomModuleEnablementState left, CustomModuleEnablementState right) => !left.Equals(right);

        public static explicit operator string(CustomModuleEnablementState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CustomModuleEnablementState other && Equals(other);
        public bool Equals(CustomModuleEnablementState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The enablement state of the custom module.
    /// </summary>
    [EnumType]
    public readonly struct FolderCustomModuleEnablementState : IEquatable<FolderCustomModuleEnablementState>
    {
        private readonly string _value;

        private FolderCustomModuleEnablementState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified enablement state.
        /// </summary>
        public static FolderCustomModuleEnablementState EnablementStateUnspecified { get; } = new FolderCustomModuleEnablementState("ENABLEMENT_STATE_UNSPECIFIED");
        /// <summary>
        /// The module is enabled at the given CRM resource.
        /// </summary>
        public static FolderCustomModuleEnablementState Enabled { get; } = new FolderCustomModuleEnablementState("ENABLED");
        /// <summary>
        /// The module is disabled at the given CRM resource.
        /// </summary>
        public static FolderCustomModuleEnablementState Disabled { get; } = new FolderCustomModuleEnablementState("DISABLED");
        /// <summary>
        /// State is inherited from an ancestor module. The module will either be effectively ENABLED or DISABLED based on its closest non-inherited ancestor module in the CRM hierarchy.
        /// </summary>
        public static FolderCustomModuleEnablementState Inherited { get; } = new FolderCustomModuleEnablementState("INHERITED");

        public static bool operator ==(FolderCustomModuleEnablementState left, FolderCustomModuleEnablementState right) => left.Equals(right);
        public static bool operator !=(FolderCustomModuleEnablementState left, FolderCustomModuleEnablementState right) => !left.Equals(right);

        public static explicit operator string(FolderCustomModuleEnablementState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FolderCustomModuleEnablementState other && Equals(other);
        public bool Equals(FolderCustomModuleEnablementState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The severity to assign to findings generated by the module.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudSecuritycenterV1CustomConfigSeverity : IEquatable<GoogleCloudSecuritycenterV1CustomConfigSeverity>
    {
        private readonly string _value;

        private GoogleCloudSecuritycenterV1CustomConfigSeverity(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified severity.
        /// </summary>
        public static GoogleCloudSecuritycenterV1CustomConfigSeverity SeverityUnspecified { get; } = new GoogleCloudSecuritycenterV1CustomConfigSeverity("SEVERITY_UNSPECIFIED");
        /// <summary>
        /// Critical severity.
        /// </summary>
        public static GoogleCloudSecuritycenterV1CustomConfigSeverity Critical { get; } = new GoogleCloudSecuritycenterV1CustomConfigSeverity("CRITICAL");
        /// <summary>
        /// High severity.
        /// </summary>
        public static GoogleCloudSecuritycenterV1CustomConfigSeverity High { get; } = new GoogleCloudSecuritycenterV1CustomConfigSeverity("HIGH");
        /// <summary>
        /// Medium severity.
        /// </summary>
        public static GoogleCloudSecuritycenterV1CustomConfigSeverity Medium { get; } = new GoogleCloudSecuritycenterV1CustomConfigSeverity("MEDIUM");
        /// <summary>
        /// Low severity.
        /// </summary>
        public static GoogleCloudSecuritycenterV1CustomConfigSeverity Low { get; } = new GoogleCloudSecuritycenterV1CustomConfigSeverity("LOW");

        public static bool operator ==(GoogleCloudSecuritycenterV1CustomConfigSeverity left, GoogleCloudSecuritycenterV1CustomConfigSeverity right) => left.Equals(right);
        public static bool operator !=(GoogleCloudSecuritycenterV1CustomConfigSeverity left, GoogleCloudSecuritycenterV1CustomConfigSeverity right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudSecuritycenterV1CustomConfigSeverity value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudSecuritycenterV1CustomConfigSeverity other && Equals(other);
        public bool Equals(GoogleCloudSecuritycenterV1CustomConfigSeverity other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The enablement state of the custom module.
    /// </summary>
    [EnumType]
    public readonly struct OrganizationCustomModuleEnablementState : IEquatable<OrganizationCustomModuleEnablementState>
    {
        private readonly string _value;

        private OrganizationCustomModuleEnablementState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified enablement state.
        /// </summary>
        public static OrganizationCustomModuleEnablementState EnablementStateUnspecified { get; } = new OrganizationCustomModuleEnablementState("ENABLEMENT_STATE_UNSPECIFIED");
        /// <summary>
        /// The module is enabled at the given CRM resource.
        /// </summary>
        public static OrganizationCustomModuleEnablementState Enabled { get; } = new OrganizationCustomModuleEnablementState("ENABLED");
        /// <summary>
        /// The module is disabled at the given CRM resource.
        /// </summary>
        public static OrganizationCustomModuleEnablementState Disabled { get; } = new OrganizationCustomModuleEnablementState("DISABLED");
        /// <summary>
        /// State is inherited from an ancestor module. The module will either be effectively ENABLED or DISABLED based on its closest non-inherited ancestor module in the CRM hierarchy.
        /// </summary>
        public static OrganizationCustomModuleEnablementState Inherited { get; } = new OrganizationCustomModuleEnablementState("INHERITED");

        public static bool operator ==(OrganizationCustomModuleEnablementState left, OrganizationCustomModuleEnablementState right) => left.Equals(right);
        public static bool operator !=(OrganizationCustomModuleEnablementState left, OrganizationCustomModuleEnablementState right) => !left.Equals(right);

        public static explicit operator string(OrganizationCustomModuleEnablementState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OrganizationCustomModuleEnablementState other && Equals(other);
        public bool Equals(OrganizationCustomModuleEnablementState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
