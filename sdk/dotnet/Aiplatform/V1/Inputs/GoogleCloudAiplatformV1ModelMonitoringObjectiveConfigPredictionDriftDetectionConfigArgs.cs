// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1.Inputs
{

    /// <summary>
    /// The config for Prediction data drift detection.
    /// </summary>
    public sealed class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
        /// </summary>
        [Input("attributionScoreDriftThresholds")]
        public Input<Inputs.GoogleCloudAiplatformV1ThresholdConfigArgs>? AttributionScoreDriftThresholds { get; set; }

        /// <summary>
        /// Drift anomaly detection threshold used by all features. When the per-feature thresholds are not set, this field can be used to specify a threshold for all features.
        /// </summary>
        [Input("defaultDriftThreshold")]
        public Input<Inputs.GoogleCloudAiplatformV1ThresholdConfigArgs>? DefaultDriftThreshold { get; set; }

        /// <summary>
        /// Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.
        /// </summary>
        [Input("driftThresholds")]
        public Input<Inputs.GoogleCloudAiplatformV1ThresholdConfigArgs>? DriftThresholds { get; set; }

        public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigArgs()
        {
        }
        public static new GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigArgs Empty => new GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfigArgs();
    }
}
