// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    public static class GetFeatureOnlineStore
    {
        /// <summary>
        /// Gets details of a single FeatureOnlineStore.
        /// </summary>
        public static Task<GetFeatureOnlineStoreResult> InvokeAsync(GetFeatureOnlineStoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFeatureOnlineStoreResult>("google-native:aiplatform/v1:getFeatureOnlineStore", args ?? new GetFeatureOnlineStoreArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single FeatureOnlineStore.
        /// </summary>
        public static Output<GetFeatureOnlineStoreResult> Invoke(GetFeatureOnlineStoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeatureOnlineStoreResult>("google-native:aiplatform/v1:getFeatureOnlineStore", args ?? new GetFeatureOnlineStoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureOnlineStoreArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureOnlineStoreId", required: true)]
        public string FeatureOnlineStoreId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeatureOnlineStoreArgs()
        {
        }
        public static new GetFeatureOnlineStoreArgs Empty => new GetFeatureOnlineStoreArgs();
    }

    public sealed class GetFeatureOnlineStoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureOnlineStoreId", required: true)]
        public Input<string> FeatureOnlineStoreId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeatureOnlineStoreInvokeArgs()
        {
        }
        public static new GetFeatureOnlineStoreInvokeArgs Empty => new GetFeatureOnlineStoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetFeatureOnlineStoreResult
    {
        /// <summary>
        /// Contains settings for the Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponse Bigtable;
        /// <summary>
        /// Timestamp when this FeatureOnlineStore was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// State of the featureOnlineStore.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Timestamp when this FeatureOnlineStore was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetFeatureOnlineStoreResult(
            Outputs.GoogleCloudAiplatformV1FeatureOnlineStoreBigtableResponse bigtable,

            string createTime,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string state,

            string updateTime)
        {
            Bigtable = bigtable;
            CreateTime = createTime;
            Etag = etag;
            Labels = labels;
            Name = name;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
