// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    public static class GetFeatureGroupFeature
    {
        /// <summary>
        /// Gets details of a single Feature.
        /// </summary>
        public static Task<GetFeatureGroupFeatureResult> InvokeAsync(GetFeatureGroupFeatureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFeatureGroupFeatureResult>("google-native:aiplatform/v1:getFeatureGroupFeature", args ?? new GetFeatureGroupFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Feature.
        /// </summary>
        public static Output<GetFeatureGroupFeatureResult> Invoke(GetFeatureGroupFeatureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeatureGroupFeatureResult>("google-native:aiplatform/v1:getFeatureGroupFeature", args ?? new GetFeatureGroupFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureGroupFeatureArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureGroupId", required: true)]
        public string FeatureGroupId { get; set; } = null!;

        [Input("featureId", required: true)]
        public string FeatureId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeatureGroupFeatureArgs()
        {
        }
        public static new GetFeatureGroupFeatureArgs Empty => new GetFeatureGroupFeatureArgs();
    }

    public sealed class GetFeatureGroupFeatureInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureGroupId", required: true)]
        public Input<string> FeatureGroupId { get; set; } = null!;

        [Input("featureId", required: true)]
        public Input<string> FeatureId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeatureGroupFeatureInvokeArgs()
        {
        }
        public static new GetFeatureGroupFeatureInvokeArgs Empty => new GetFeatureGroupFeatureInvokeArgs();
    }


    [OutputType]
    public sealed class GetFeatureGroupFeatureResult
    {
        /// <summary>
        /// Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Description of the Feature.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.
        /// </summary>
        public readonly bool DisableMonitoring;
        /// <summary>
        /// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudAiplatformV1FeatureMonitoringStatsAnomalyResponse> MonitoringStatsAnomalies;
        /// <summary>
        /// Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
        /// </summary>
        public readonly string ValueType;
        /// <summary>
        /// Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View columnn hosting data for this version. If no value is provided, will use feature_id.
        /// </summary>
        public readonly string VersionColumnName;

        [OutputConstructor]
        private GetFeatureGroupFeatureResult(
            string createTime,

            string description,

            bool disableMonitoring,

            string etag,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GoogleCloudAiplatformV1FeatureMonitoringStatsAnomalyResponse> monitoringStatsAnomalies,

            string name,

            string updateTime,

            string valueType,

            string versionColumnName)
        {
            CreateTime = createTime;
            Description = description;
            DisableMonitoring = disableMonitoring;
            Etag = etag;
            Labels = labels;
            MonitoringStatsAnomalies = monitoringStatsAnomalies;
            Name = name;
            UpdateTime = updateTime;
            ValueType = valueType;
            VersionColumnName = versionColumnName;
        }
    }
}
