// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    public static class GetTrainingPipeline
    {
        /// <summary>
        /// Gets a TrainingPipeline.
        /// </summary>
        public static Task<GetTrainingPipelineResult> InvokeAsync(GetTrainingPipelineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrainingPipelineResult>("google-native:aiplatform/v1:getTrainingPipeline", args ?? new GetTrainingPipelineArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a TrainingPipeline.
        /// </summary>
        public static Output<GetTrainingPipelineResult> Invoke(GetTrainingPipelineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrainingPipelineResult>("google-native:aiplatform/v1:getTrainingPipeline", args ?? new GetTrainingPipelineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrainingPipelineArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("trainingPipelineId", required: true)]
        public string TrainingPipelineId { get; set; } = null!;

        public GetTrainingPipelineArgs()
        {
        }
        public static new GetTrainingPipelineArgs Empty => new GetTrainingPipelineArgs();
    }

    public sealed class GetTrainingPipelineInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("trainingPipelineId", required: true)]
        public Input<string> TrainingPipelineId { get; set; } = null!;

        public GetTrainingPipelineInvokeArgs()
        {
        }
        public static new GetTrainingPipelineInvokeArgs Empty => new GetTrainingPipelineInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrainingPipelineResult
    {
        /// <summary>
        /// Time when the TrainingPipeline was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The user-defined name of this TrainingPipeline.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Customer-managed encryption key spec for a TrainingPipeline. If set, this TrainingPipeline will be secured by this key. Note: Model trained by this TrainingPipeline is also secured by this key if model_to_upload is not set separately.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1EncryptionSpecResponse EncryptionSpec;
        /// <summary>
        /// Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Only populated when the pipeline's state is `PIPELINE_STATE_FAILED` or `PIPELINE_STATE_CANCELLED`.
        /// </summary>
        public readonly Outputs.GoogleRpcStatusResponse Error;
        /// <summary>
        /// Specifies Vertex AI owned input data that may be used for training the Model. The TrainingPipeline's training_task_definition should make clear whether this config is used and if there are any special requirements on how it should be filled. If nothing about this config is mentioned in the training_task_definition, then it should be assumed that the TrainingPipeline does not depend on this configuration.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1InputDataConfigResponse InputDataConfig;
        /// <summary>
        /// The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
        /// </summary>
        public readonly string ModelId;
        /// <summary>
        /// Describes the Model that may be uploaded (via ModelService.UploadModel) by this TrainingPipeline. The TrainingPipeline's training_task_definition should make clear whether this Model description should be populated, and if there are any special requirements regarding how it should be filled. If nothing is mentioned in the training_task_definition, then it should be assumed that this field should not be filled and the training task either uploads the Model without a need of this information, or that training task does not support uploading a Model as part of the pipeline. When the Pipeline's state becomes `PIPELINE_STATE_SUCCEEDED` and the trained Model had been uploaded into Vertex AI, then the model_to_upload's resource name is populated. The Model is always uploaded into the Project and Location in which this pipeline is.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1ModelResponse ModelToUpload;
        /// <summary>
        /// Resource name of the TrainingPipeline.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.
        /// </summary>
        public readonly string ParentModel;
        /// <summary>
        /// Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The detailed state of the pipeline.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
        /// </summary>
        public readonly string TrainingTaskDefinition;
        /// <summary>
        /// The training task's parameter(s), as specified in the training_task_definition's `inputs`.
        /// </summary>
        public readonly object TrainingTaskInputs;
        /// <summary>
        /// The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.
        /// </summary>
        public readonly object TrainingTaskMetadata;
        /// <summary>
        /// Time when the TrainingPipeline was most recently updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetTrainingPipelineResult(
            string createTime,

            string displayName,

            Outputs.GoogleCloudAiplatformV1EncryptionSpecResponse encryptionSpec,

            string endTime,

            Outputs.GoogleRpcStatusResponse error,

            Outputs.GoogleCloudAiplatformV1InputDataConfigResponse inputDataConfig,

            ImmutableDictionary<string, string> labels,

            string modelId,

            Outputs.GoogleCloudAiplatformV1ModelResponse modelToUpload,

            string name,

            string parentModel,

            string startTime,

            string state,

            string trainingTaskDefinition,

            object trainingTaskInputs,

            object trainingTaskMetadata,

            string updateTime)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            EncryptionSpec = encryptionSpec;
            EndTime = endTime;
            Error = error;
            InputDataConfig = inputDataConfig;
            Labels = labels;
            ModelId = modelId;
            ModelToUpload = modelToUpload;
            Name = name;
            ParentModel = parentModel;
            StartTime = startTime;
            State = state;
            TrainingTaskDefinition = trainingTaskDefinition;
            TrainingTaskInputs = trainingTaskInputs;
            TrainingTaskMetadata = trainingTaskMetadata;
            UpdateTime = updateTime;
        }
    }
}
