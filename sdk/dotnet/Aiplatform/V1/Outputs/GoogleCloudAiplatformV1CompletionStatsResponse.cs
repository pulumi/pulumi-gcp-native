// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1.Outputs
{

    /// <summary>
    /// Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudAiplatformV1CompletionStatsResponse
    {
        /// <summary>
        /// The number of entities for which any error was encountered.
        /// </summary>
        public readonly string FailedCount;
        /// <summary>
        /// In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).
        /// </summary>
        public readonly string IncompleteCount;
        /// <summary>
        /// The number of entities that had been processed successfully.
        /// </summary>
        public readonly string SuccessfulCount;
        /// <summary>
        /// The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
        /// </summary>
        public readonly string SuccessfulForecastPointCount;

        [OutputConstructor]
        private GoogleCloudAiplatformV1CompletionStatsResponse(
            string failedCount,

            string incompleteCount,

            string successfulCount,

            string successfulForecastPointCount)
        {
            FailedCount = failedCount;
            IncompleteCount = incompleteCount;
            SuccessfulCount = successfulCount;
            SuccessfulForecastPointCount = successfulForecastPointCount;
        }
    }
}
