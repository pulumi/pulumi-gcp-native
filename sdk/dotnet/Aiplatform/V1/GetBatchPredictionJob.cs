// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    public static class GetBatchPredictionJob
    {
        /// <summary>
        /// Gets a BatchPredictionJob
        /// </summary>
        public static Task<GetBatchPredictionJobResult> InvokeAsync(GetBatchPredictionJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBatchPredictionJobResult>("google-native:aiplatform/v1:getBatchPredictionJob", args ?? new GetBatchPredictionJobArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a BatchPredictionJob
        /// </summary>
        public static Output<GetBatchPredictionJobResult> Invoke(GetBatchPredictionJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBatchPredictionJobResult>("google-native:aiplatform/v1:getBatchPredictionJob", args ?? new GetBatchPredictionJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBatchPredictionJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("batchPredictionJobId", required: true)]
        public string BatchPredictionJobId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetBatchPredictionJobArgs()
        {
        }
        public static new GetBatchPredictionJobArgs Empty => new GetBatchPredictionJobArgs();
    }

    public sealed class GetBatchPredictionJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("batchPredictionJobId", required: true)]
        public Input<string> BatchPredictionJobId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBatchPredictionJobInvokeArgs()
        {
        }
        public static new GetBatchPredictionJobInvokeArgs Empty => new GetBatchPredictionJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetBatchPredictionJobResult
    {
        /// <summary>
        /// Statistics on completed and failed prediction instances.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1CompletionStatsResponse CompletionStats;
        /// <summary>
        /// Time when the BatchPredictionJob was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1BatchDedicatedResourcesResponse DedicatedResources;
        /// <summary>
        /// For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
        /// </summary>
        public readonly bool DisableContainerLogging;
        /// <summary>
        /// The user-defined name of this BatchPredictionJob.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1EncryptionSpecResponse EncryptionSpec;
        /// <summary>
        /// Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
        /// </summary>
        public readonly Outputs.GoogleRpcStatusResponse Error;
        /// <summary>
        /// Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1ExplanationSpecResponse ExplanationSpec;
        /// <summary>
        /// Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.
        /// </summary>
        public readonly bool GenerateExplanation;
        /// <summary>
        /// Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1BatchPredictionJobInputConfigResponse InputConfig;
        /// <summary>
        /// Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1BatchPredictionJobInstanceConfigResponse InstanceConfig;
        /// <summary>
        /// The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1ManualBatchTuningParametersResponse ManualBatchTuningParameters;
        /// <summary>
        /// The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
        /// </summary>
        public readonly string Model;
        /// <summary>
        /// The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
        /// </summary>
        public readonly object ModelParameters;
        /// <summary>
        /// The version ID of the Model that produces the predictions via this job.
        /// </summary>
        public readonly string ModelVersionId;
        /// <summary>
        /// Resource name of the BatchPredictionJob.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1BatchPredictionJobOutputConfigResponse OutputConfig;
        /// <summary>
        /// Information further describing the output of this job.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1BatchPredictionJobOutputInfoResponse OutputInfo;
        /// <summary>
        /// Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleRpcStatusResponse> PartialFailures;
        /// <summary>
        /// Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1ResourcesConsumedResponse ResourcesConsumed;
        /// <summary>
        /// The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The detailed state of the job.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1UnmanagedContainerModelResponse UnmanagedContainerModel;
        /// <summary>
        /// Time when the BatchPredictionJob was most recently updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetBatchPredictionJobResult(
            Outputs.GoogleCloudAiplatformV1CompletionStatsResponse completionStats,

            string createTime,

            Outputs.GoogleCloudAiplatformV1BatchDedicatedResourcesResponse dedicatedResources,

            bool disableContainerLogging,

            string displayName,

            Outputs.GoogleCloudAiplatformV1EncryptionSpecResponse encryptionSpec,

            string endTime,

            Outputs.GoogleRpcStatusResponse error,

            Outputs.GoogleCloudAiplatformV1ExplanationSpecResponse explanationSpec,

            bool generateExplanation,

            Outputs.GoogleCloudAiplatformV1BatchPredictionJobInputConfigResponse inputConfig,

            Outputs.GoogleCloudAiplatformV1BatchPredictionJobInstanceConfigResponse instanceConfig,

            ImmutableDictionary<string, string> labels,

            Outputs.GoogleCloudAiplatformV1ManualBatchTuningParametersResponse manualBatchTuningParameters,

            string model,

            object modelParameters,

            string modelVersionId,

            string name,

            Outputs.GoogleCloudAiplatformV1BatchPredictionJobOutputConfigResponse outputConfig,

            Outputs.GoogleCloudAiplatformV1BatchPredictionJobOutputInfoResponse outputInfo,

            ImmutableArray<Outputs.GoogleRpcStatusResponse> partialFailures,

            Outputs.GoogleCloudAiplatformV1ResourcesConsumedResponse resourcesConsumed,

            string serviceAccount,

            string startTime,

            string state,

            Outputs.GoogleCloudAiplatformV1UnmanagedContainerModelResponse unmanagedContainerModel,

            string updateTime)
        {
            CompletionStats = completionStats;
            CreateTime = createTime;
            DedicatedResources = dedicatedResources;
            DisableContainerLogging = disableContainerLogging;
            DisplayName = displayName;
            EncryptionSpec = encryptionSpec;
            EndTime = endTime;
            Error = error;
            ExplanationSpec = explanationSpec;
            GenerateExplanation = generateExplanation;
            InputConfig = inputConfig;
            InstanceConfig = instanceConfig;
            Labels = labels;
            ManualBatchTuningParameters = manualBatchTuningParameters;
            Model = model;
            ModelParameters = modelParameters;
            ModelVersionId = modelVersionId;
            Name = name;
            OutputConfig = outputConfig;
            OutputInfo = outputInfo;
            PartialFailures = partialFailures;
            ResourcesConsumed = resourcesConsumed;
            ServiceAccount = serviceAccount;
            StartTime = startTime;
            State = state;
            UnmanagedContainerModel = unmanagedContainerModel;
            UpdateTime = updateTime;
        }
    }
}
