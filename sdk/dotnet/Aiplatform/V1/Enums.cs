// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    /// <summary>
    /// The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.
    /// </summary>
    [EnumType]
    public readonly struct ArtifactState : IEquatable<ArtifactState>
    {
        private readonly string _value;

        private ArtifactState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified state for the Artifact.
        /// </summary>
        public static ArtifactState StateUnspecified { get; } = new ArtifactState("STATE_UNSPECIFIED");
        /// <summary>
        /// A state used by systems like Vertex AI Pipelines to indicate that the underlying data item represented by this Artifact is being created.
        /// </summary>
        public static ArtifactState Pending { get; } = new ArtifactState("PENDING");
        /// <summary>
        /// A state indicating that the Artifact should exist, unless something external to the system deletes it.
        /// </summary>
        public static ArtifactState Live { get; } = new ArtifactState("LIVE");

        public static bool operator ==(ArtifactState left, ArtifactState right) => left.Equals(right);
        public static bool operator !=(ArtifactState left, ArtifactState right) => !left.Equals(right);

        public static explicit operator string(ArtifactState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ArtifactState other && Equals(other);
        public bool Equals(ArtifactState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The state of this Execution. This is a property of the Execution, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines) and the system does not prescribe or check the validity of state transitions.
    /// </summary>
    [EnumType]
    public readonly struct ExecutionState : IEquatable<ExecutionState>
    {
        private readonly string _value;

        private ExecutionState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified Execution state
        /// </summary>
        public static ExecutionState StateUnspecified { get; } = new ExecutionState("STATE_UNSPECIFIED");
        /// <summary>
        /// The Execution is new
        /// </summary>
        public static ExecutionState New { get; } = new ExecutionState("NEW");
        /// <summary>
        /// The Execution is running
        /// </summary>
        public static ExecutionState Running { get; } = new ExecutionState("RUNNING");
        /// <summary>
        /// The Execution has finished running
        /// </summary>
        public static ExecutionState Complete { get; } = new ExecutionState("COMPLETE");
        /// <summary>
        /// The Execution has failed
        /// </summary>
        public static ExecutionState Failed { get; } = new ExecutionState("FAILED");
        /// <summary>
        /// The Execution completed through Cache hit.
        /// </summary>
        public static ExecutionState Cached { get; } = new ExecutionState("CACHED");
        /// <summary>
        /// The Execution was cancelled.
        /// </summary>
        public static ExecutionState Cancelled { get; } = new ExecutionState("CANCELLED");

        public static bool operator ==(ExecutionState left, ExecutionState right) => left.Equals(right);
        public static bool operator !=(ExecutionState left, ExecutionState right) => !left.Equals(right);

        public static explicit operator string(ExecutionState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ExecutionState other && Equals(other);
        public bool Equals(ExecutionState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
    /// </summary>
    [EnumType]
    public readonly struct FeatureGroupFeatureValueType : IEquatable<FeatureGroupFeatureValueType>
    {
        private readonly string _value;

        private FeatureGroupFeatureValueType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The value type is unspecified.
        /// </summary>
        public static FeatureGroupFeatureValueType ValueTypeUnspecified { get; } = new FeatureGroupFeatureValueType("VALUE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Used for Feature that is a boolean.
        /// </summary>
        public static FeatureGroupFeatureValueType Bool { get; } = new FeatureGroupFeatureValueType("BOOL");
        /// <summary>
        /// Used for Feature that is a list of boolean.
        /// </summary>
        public static FeatureGroupFeatureValueType BoolArray { get; } = new FeatureGroupFeatureValueType("BOOL_ARRAY");
        /// <summary>
        /// Used for Feature that is double.
        /// </summary>
        public static FeatureGroupFeatureValueType Double { get; } = new FeatureGroupFeatureValueType("DOUBLE");
        /// <summary>
        /// Used for Feature that is a list of double.
        /// </summary>
        public static FeatureGroupFeatureValueType DoubleArray { get; } = new FeatureGroupFeatureValueType("DOUBLE_ARRAY");
        /// <summary>
        /// Used for Feature that is INT64.
        /// </summary>
        public static FeatureGroupFeatureValueType Int64 { get; } = new FeatureGroupFeatureValueType("INT64");
        /// <summary>
        /// Used for Feature that is a list of INT64.
        /// </summary>
        public static FeatureGroupFeatureValueType Int64Array { get; } = new FeatureGroupFeatureValueType("INT64_ARRAY");
        /// <summary>
        /// Used for Feature that is string.
        /// </summary>
        public static FeatureGroupFeatureValueType String { get; } = new FeatureGroupFeatureValueType("STRING");
        /// <summary>
        /// Used for Feature that is a list of String.
        /// </summary>
        public static FeatureGroupFeatureValueType StringArray { get; } = new FeatureGroupFeatureValueType("STRING_ARRAY");
        /// <summary>
        /// Used for Feature that is bytes.
        /// </summary>
        public static FeatureGroupFeatureValueType Bytes { get; } = new FeatureGroupFeatureValueType("BYTES");

        public static bool operator ==(FeatureGroupFeatureValueType left, FeatureGroupFeatureValueType right) => left.Equals(right);
        public static bool operator !=(FeatureGroupFeatureValueType left, FeatureGroupFeatureValueType right) => !left.Equals(right);

        public static explicit operator string(FeatureGroupFeatureValueType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FeatureGroupFeatureValueType other && Equals(other);
        public bool Equals(FeatureGroupFeatureValueType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
    /// </summary>
    [EnumType]
    public readonly struct FeatureStoreFeatureValueType : IEquatable<FeatureStoreFeatureValueType>
    {
        private readonly string _value;

        private FeatureStoreFeatureValueType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The value type is unspecified.
        /// </summary>
        public static FeatureStoreFeatureValueType ValueTypeUnspecified { get; } = new FeatureStoreFeatureValueType("VALUE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Used for Feature that is a boolean.
        /// </summary>
        public static FeatureStoreFeatureValueType Bool { get; } = new FeatureStoreFeatureValueType("BOOL");
        /// <summary>
        /// Used for Feature that is a list of boolean.
        /// </summary>
        public static FeatureStoreFeatureValueType BoolArray { get; } = new FeatureStoreFeatureValueType("BOOL_ARRAY");
        /// <summary>
        /// Used for Feature that is double.
        /// </summary>
        public static FeatureStoreFeatureValueType Double { get; } = new FeatureStoreFeatureValueType("DOUBLE");
        /// <summary>
        /// Used for Feature that is a list of double.
        /// </summary>
        public static FeatureStoreFeatureValueType DoubleArray { get; } = new FeatureStoreFeatureValueType("DOUBLE_ARRAY");
        /// <summary>
        /// Used for Feature that is INT64.
        /// </summary>
        public static FeatureStoreFeatureValueType Int64 { get; } = new FeatureStoreFeatureValueType("INT64");
        /// <summary>
        /// Used for Feature that is a list of INT64.
        /// </summary>
        public static FeatureStoreFeatureValueType Int64Array { get; } = new FeatureStoreFeatureValueType("INT64_ARRAY");
        /// <summary>
        /// Used for Feature that is string.
        /// </summary>
        public static FeatureStoreFeatureValueType String { get; } = new FeatureStoreFeatureValueType("STRING");
        /// <summary>
        /// Used for Feature that is a list of String.
        /// </summary>
        public static FeatureStoreFeatureValueType StringArray { get; } = new FeatureStoreFeatureValueType("STRING_ARRAY");
        /// <summary>
        /// Used for Feature that is bytes.
        /// </summary>
        public static FeatureStoreFeatureValueType Bytes { get; } = new FeatureStoreFeatureValueType("BYTES");

        public static bool operator ==(FeatureStoreFeatureValueType left, FeatureStoreFeatureValueType right) => left.Equals(right);
        public static bool operator !=(FeatureStoreFeatureValueType left, FeatureStoreFeatureValueType right) => !left.Equals(right);

        public static explicit operator string(FeatureStoreFeatureValueType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FeatureStoreFeatureValueType other && Equals(other);
        public bool Equals(FeatureStoreFeatureValueType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat : IEquatable<GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Format unspecified, used when unset.
        /// </summary>
        public static GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat DataFormatUnspecified { get; } = new GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat("DATA_FORMAT_UNSPECIFIED");
        /// <summary>
        /// Examples are stored in JSONL files.
        /// </summary>
        public static GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat Jsonl { get; } = new GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat("JSONL");

        public static bool operator ==(GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat left, GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat left, GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExamplesExampleGcsSourceDataFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding : IEquatable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This is the same as IDENTITY.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding EncodingUnspecified { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("ENCODING_UNSPECIFIED");
        /// <summary>
        /// The tensor represents one feature.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding Identity { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("IDENTITY");
        /// <summary>
        /// The tensor represents a bag of features where each index maps to a feature. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [27, 6.0, 150] index_feature_mapping = ["age", "height", "weight"] ```
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding BagOfFeatures { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("BAG_OF_FEATURES");
        /// <summary>
        /// The tensor represents a bag of features where each index maps to a feature. Zero values in the tensor indicates feature being non-existent. InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [2, 0, 5, 0, 1] index_feature_mapping = ["a", "b", "c", "d", "e"] ```
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding BagOfFeaturesSparse { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("BAG_OF_FEATURES_SPARSE");
        /// <summary>
        /// The tensor is a list of binaries representing whether a feature exists or not (1 indicates existence). InputMetadata.index_feature_mapping must be provided for this encoding. For example: ``` input = [1, 0, 1, 0, 1] index_feature_mapping = ["a", "b", "c", "d", "e"] ```
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding Indicator { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("INDICATOR");
        /// <summary>
        /// The tensor is encoded into a 1-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. For example: ``` input = ["This", "is", "a", "test", "."] encoded = [0.1, 0.2, 0.3, 0.4, 0.5] ```
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding CombinedEmbedding { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("COMBINED_EMBEDDING");
        /// <summary>
        /// Select this encoding when the input tensor is encoded into a 2-dimensional array represented by an encoded tensor. InputMetadata.encoded_tensor_name must be provided for this encoding. The first dimension of the encoded tensor's shape is the same as the input tensor's shape. For example: ``` input = ["This", "is", "a", "test", "."] encoded = [[0.1, 0.2, 0.3, 0.4, 0.5], [0.2, 0.1, 0.4, 0.3, 0.5], [0.5, 0.1, 0.3, 0.5, 0.4], [0.5, 0.3, 0.1, 0.2, 0.4], [0.4, 0.3, 0.2, 0.5, 0.1]] ```
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding ConcatEmbedding { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding("CONCAT_EMBEDDING");

        public static bool operator ==(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataEncoding other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The color scheme used for the highlighted areas. Defaults to PINK_GREEN for Integrated Gradients attribution, which shows positive attributions in green and negative in pink. Defaults to VIRIDIS for XRAI attribution, which highlights the most influential regions in yellow and the least influential in blue.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap : IEquatable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap ColorMapUnspecified { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("COLOR_MAP_UNSPECIFIED");
        /// <summary>
        /// Positive: green. Negative: pink.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap PinkGreen { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("PINK_GREEN");
        /// <summary>
        /// Viridis color map: A perceptually uniform color mapping which is easier to see by those with colorblindness and progresses from yellow to green to blue. Positive: yellow. Negative: blue.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap Viridis { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("VIRIDIS");
        /// <summary>
        /// Positive: red. Negative: red.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap Red { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("RED");
        /// <summary>
        /// Positive: green. Negative: green.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap Green { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("GREEN");
        /// <summary>
        /// Positive: green. Negative: red.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap RedGreen { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("RED_GREEN");
        /// <summary>
        /// PiYG palette.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap PinkWhiteGreen { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap("PINK_WHITE_GREEN");

        public static bool operator ==(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationColorMap other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization. Defaults to NONE.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType : IEquatable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This is the same as NONE.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType OverlayTypeUnspecified { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType("OVERLAY_TYPE_UNSPECIFIED");
        /// <summary>
        /// No overlay.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType None { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType("NONE");
        /// <summary>
        /// The attributions are shown on top of the original image.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType Original { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType("ORIGINAL");
        /// <summary>
        /// The attributions are shown on top of grayscaled version of the original image.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType Grayscale { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType("GRAYSCALE");
        /// <summary>
        /// The attributions are used as a mask to reveal predictive parts of the image and hide the un-predictive parts.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType MaskBlack { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType("MASK_BLACK");

        public static bool operator ==(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationOverlayType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether to only highlight pixels with positive contributions, negative or both. Defaults to POSITIVE.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity : IEquatable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This is the same as POSITIVE.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity PolarityUnspecified { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity("POLARITY_UNSPECIFIED");
        /// <summary>
        /// Highlights the pixels/outlines that were most influential to the model's prediction.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity Positive { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity("POSITIVE");
        /// <summary>
        /// Setting polarity to negative highlights areas that does not lead to the models's current prediction.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity Negative { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity("NEGATIVE");
        /// <summary>
        /// Shows both positive and negative attributions.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity Both { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity("BOTH");

        public static bool operator ==(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationPolarity other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the image visualization. Only applicable to Integrated Gradients attribution. OUTLINES shows regions of attribution, while PIXELS shows per-pixel attribution. Defaults to OUTLINES.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType : IEquatable<GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType TypeUnspecified { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType("TYPE_UNSPECIFIED");
        /// <summary>
        /// Shows which pixel contributed to the image prediction.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType Pixels { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType("PIXELS");
        /// <summary>
        /// Shows which region contributed to the image prediction by outlining the region.
        /// </summary>
        public static GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType Outlines { get; } = new GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType("OUTLINES");

        public static bool operator ==(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType left, GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualizationType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The baseline used to do anomaly detection for the statistics generated by import features analysis.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline : IEquatable<GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline BaselineUnspecified { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline("BASELINE_UNSPECIFIED");
        /// <summary>
        /// Choose the later one statistics generated by either most recent snapshot analysis or previous import features analysis. If non of them exists, skip anomaly detection and only generate a statistics.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline LatestStats { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline("LATEST_STATS");
        /// <summary>
        /// Use the statistics generated by the most recent snapshot analysis if exists.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline MostRecentSnapshotStats { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline("MOST_RECENT_SNAPSHOT_STATS");
        /// <summary>
        /// Use the statistics generated by the previous import features analysis if exists.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline PreviousImportFeaturesStats { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline("PREVIOUS_IMPORT_FEATURES_STATS");

        public static bool operator ==(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline left, GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline left, GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisAnomalyDetectionBaseline other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether to enable / disable / inherite default hebavior for import features analysis.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState : IEquatable<GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState StateUnspecified { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState("STATE_UNSPECIFIED");
        /// <summary>
        /// The default behavior of whether to enable the monitoring. EntityType-level config: disabled. Feature-level config: inherited from the configuration of EntityType this Feature belongs to.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState Default { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState("DEFAULT");
        /// <summary>
        /// Explicitly enables import features analysis. EntityType-level config: by default enables import features analysis for all Features under it. Feature-level config: enables import features analysis regardless of the EntityType-level config.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState Enabled { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState("ENABLED");
        /// <summary>
        /// Explicitly disables import features analysis. EntityType-level config: by default disables import features analysis for all Features under it. Feature-level config: disables import features analysis regardless of the EntityType-level config.
        /// </summary>
        public static GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState Disabled { get; } = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState("DISABLED");

        public static bool operator ==(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState left, GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState left, GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysisState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1MachineSpecAcceleratorType : IEquatable<GoogleCloudAiplatformV1MachineSpecAcceleratorType>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1MachineSpecAcceleratorType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified accelerator type, which means no accelerator.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType AcceleratorTypeUnspecified { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("ACCELERATOR_TYPE_UNSPECIFIED");
        /// <summary>
        /// Nvidia Tesla K80 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaK80 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_K80");
        /// <summary>
        /// Nvidia Tesla P100 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaP100 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_P100");
        /// <summary>
        /// Nvidia Tesla V100 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaV100 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_V100");
        /// <summary>
        /// Nvidia Tesla P4 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaP4 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_P4");
        /// <summary>
        /// Nvidia Tesla T4 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaT4 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_T4");
        /// <summary>
        /// Nvidia Tesla A100 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaTeslaA100 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_TESLA_A100");
        /// <summary>
        /// Nvidia A100 80GB GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaA10080gb { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_A100_80GB");
        /// <summary>
        /// Nvidia L4 GPU.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType NvidiaL4 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("NVIDIA_L4");
        /// <summary>
        /// TPU v2.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType TpuV2 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("TPU_V2");
        /// <summary>
        /// TPU v3.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType TpuV3 { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("TPU_V3");
        /// <summary>
        /// TPU v4.
        /// </summary>
        public static GoogleCloudAiplatformV1MachineSpecAcceleratorType TpuV4Pod { get; } = new GoogleCloudAiplatformV1MachineSpecAcceleratorType("TPU_V4_POD");

        public static bool operator ==(GoogleCloudAiplatformV1MachineSpecAcceleratorType left, GoogleCloudAiplatformV1MachineSpecAcceleratorType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1MachineSpecAcceleratorType left, GoogleCloudAiplatformV1MachineSpecAcceleratorType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1MachineSpecAcceleratorType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1MachineSpecAcceleratorType other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1MachineSpecAcceleratorType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The storage format of the predictions generated BatchPrediction job.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat : IEquatable<GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be set.
        /// </summary>
        public static GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat PredictionFormatUnspecified { get; } = new GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat("PREDICTION_FORMAT_UNSPECIFIED");
        /// <summary>
        /// Predictions are in JSONL files.
        /// </summary>
        public static GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat Jsonl { get; } = new GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat("JSONL");
        /// <summary>
        /// Predictions are in BigQuery.
        /// </summary>
        public static GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat Bigquery { get; } = new GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat("BIGQUERY");

        public static bool operator ==(GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat left, GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat left, GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaselinePredictionFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The optimization goal of the metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal : IEquatable<GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Goal Type will default to maximize.
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal GoalTypeUnspecified { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal("GOAL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Maximize the goal metric.
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal Maximize { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal("MAXIMIZE");
        /// <summary>
        /// Minimize the goal metric.
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal Minimize { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal("MINIMIZE");

        public static bool operator ==(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal left, GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal left, GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMetricSpecGoal other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The multi-trial Neural Architecture Search (NAS) algorithm type. Defaults to `REINFORCEMENT_LEARNING`.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm : IEquatable<GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Defaults to `REINFORCEMENT_LEARNING`.
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm MultiTrialAlgorithmUnspecified { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm("MULTI_TRIAL_ALGORITHM_UNSPECIFIED");
        /// <summary>
        /// The Reinforcement Learning Algorithm for Multi-trial Neural Architecture Search (NAS).
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm ReinforcementLearning { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm("REINFORCEMENT_LEARNING");
        /// <summary>
        /// The Grid Search Algorithm for Multi-trial Neural Architecture Search (NAS).
        /// </summary>
        public static GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm GridSearch { get; } = new GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm("GRID_SEARCH");

        public static bool operator ==(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm left, GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm left, GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecMultiTrialAlgorithm other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy : IEquatable<GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value, and follows fail slow behavior.
        /// </summary>
        public static GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy PipelineFailurePolicyUnspecified { get; } = new GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy("PIPELINE_FAILURE_POLICY_UNSPECIFIED");
        /// <summary>
        /// Indicates that the pipeline should continue to run until all possible tasks have been scheduled and completed.
        /// </summary>
        public static GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy PipelineFailurePolicyFailSlow { get; } = new GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy("PIPELINE_FAILURE_POLICY_FAIL_SLOW");
        /// <summary>
        /// Indicates that the pipeline should stop scheduling new tasks after a task has failed.
        /// </summary>
        public static GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy PipelineFailurePolicyFailFast { get; } = new GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy("PIPELINE_FAILURE_POLICY_FAIL_FAST");

        public static bool operator ==(GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy left, GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy left, GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1PipelineJobRuntimeConfigFailurePolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1PresetsModality : IEquatable<GoogleCloudAiplatformV1PresetsModality>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1PresetsModality(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be set. Added as a recommended best practice for enums
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsModality ModalityUnspecified { get; } = new GoogleCloudAiplatformV1PresetsModality("MODALITY_UNSPECIFIED");
        /// <summary>
        /// IMAGE modality
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsModality Image { get; } = new GoogleCloudAiplatformV1PresetsModality("IMAGE");
        /// <summary>
        /// TEXT modality
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsModality Text { get; } = new GoogleCloudAiplatformV1PresetsModality("TEXT");
        /// <summary>
        /// TABULAR modality
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsModality Tabular { get; } = new GoogleCloudAiplatformV1PresetsModality("TABULAR");

        public static bool operator ==(GoogleCloudAiplatformV1PresetsModality left, GoogleCloudAiplatformV1PresetsModality right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1PresetsModality left, GoogleCloudAiplatformV1PresetsModality right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1PresetsModality value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1PresetsModality other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1PresetsModality other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1PresetsQuery : IEquatable<GoogleCloudAiplatformV1PresetsQuery>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1PresetsQuery(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// More precise neighbors as a trade-off against slower response.
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsQuery Precise { get; } = new GoogleCloudAiplatformV1PresetsQuery("PRECISE");
        /// <summary>
        /// Faster response as a trade-off against less precise neighbors.
        /// </summary>
        public static GoogleCloudAiplatformV1PresetsQuery Fast { get; } = new GoogleCloudAiplatformV1PresetsQuery("FAST");

        public static bool operator ==(GoogleCloudAiplatformV1PresetsQuery left, GoogleCloudAiplatformV1PresetsQuery right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1PresetsQuery left, GoogleCloudAiplatformV1PresetsQuery right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1PresetsQuery value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1PresetsQuery other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1PresetsQuery other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1SampleConfigSampleStrategy : IEquatable<GoogleCloudAiplatformV1SampleConfigSampleStrategy>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1SampleConfigSampleStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default will be treated as UNCERTAINTY.
        /// </summary>
        public static GoogleCloudAiplatformV1SampleConfigSampleStrategy SampleStrategyUnspecified { get; } = new GoogleCloudAiplatformV1SampleConfigSampleStrategy("SAMPLE_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Sample the most uncertain data to label.
        /// </summary>
        public static GoogleCloudAiplatformV1SampleConfigSampleStrategy Uncertainty { get; } = new GoogleCloudAiplatformV1SampleConfigSampleStrategy("UNCERTAINTY");

        public static bool operator ==(GoogleCloudAiplatformV1SampleConfigSampleStrategy left, GoogleCloudAiplatformV1SampleConfigSampleStrategy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1SampleConfigSampleStrategy left, GoogleCloudAiplatformV1SampleConfigSampleStrategy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1SampleConfigSampleStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1SampleConfigSampleStrategy other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1SampleConfigSampleStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The search algorithm specified for the Study.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1StudySpecAlgorithm : IEquatable<GoogleCloudAiplatformV1StudySpecAlgorithm>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1StudySpecAlgorithm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default algorithm used by Vertex AI for [hyperparameter tuning](https://cloud.google.com/vertex-ai/docs/training/hyperparameter-tuning-overview) and [Vertex AI Vizier](https://cloud.google.com/vertex-ai/docs/vizier).
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecAlgorithm AlgorithmUnspecified { get; } = new GoogleCloudAiplatformV1StudySpecAlgorithm("ALGORITHM_UNSPECIFIED");
        /// <summary>
        /// Simple grid search within the feasible space. To use grid search, all parameters must be `INTEGER`, `CATEGORICAL`, or `DISCRETE`.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecAlgorithm GridSearch { get; } = new GoogleCloudAiplatformV1StudySpecAlgorithm("GRID_SEARCH");
        /// <summary>
        /// Simple random search within the feasible space.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecAlgorithm RandomSearch { get; } = new GoogleCloudAiplatformV1StudySpecAlgorithm("RANDOM_SEARCH");

        public static bool operator ==(GoogleCloudAiplatformV1StudySpecAlgorithm left, GoogleCloudAiplatformV1StudySpecAlgorithm right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1StudySpecAlgorithm left, GoogleCloudAiplatformV1StudySpecAlgorithm right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1StudySpecAlgorithm value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1StudySpecAlgorithm other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1StudySpecAlgorithm other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Describe which measurement selection type will be used
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1StudySpecMeasurementSelectionType : IEquatable<GoogleCloudAiplatformV1StudySpecMeasurementSelectionType>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1StudySpecMeasurementSelectionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Will be treated as LAST_MEASUREMENT.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMeasurementSelectionType MeasurementSelectionTypeUnspecified { get; } = new GoogleCloudAiplatformV1StudySpecMeasurementSelectionType("MEASUREMENT_SELECTION_TYPE_UNSPECIFIED");
        /// <summary>
        /// Use the last measurement reported.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMeasurementSelectionType LastMeasurement { get; } = new GoogleCloudAiplatformV1StudySpecMeasurementSelectionType("LAST_MEASUREMENT");
        /// <summary>
        /// Use the best measurement reported.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMeasurementSelectionType BestMeasurement { get; } = new GoogleCloudAiplatformV1StudySpecMeasurementSelectionType("BEST_MEASUREMENT");

        public static bool operator ==(GoogleCloudAiplatformV1StudySpecMeasurementSelectionType left, GoogleCloudAiplatformV1StudySpecMeasurementSelectionType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1StudySpecMeasurementSelectionType left, GoogleCloudAiplatformV1StudySpecMeasurementSelectionType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1StudySpecMeasurementSelectionType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1StudySpecMeasurementSelectionType other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1StudySpecMeasurementSelectionType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The optimization goal of the metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1StudySpecMetricSpecGoal : IEquatable<GoogleCloudAiplatformV1StudySpecMetricSpecGoal>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1StudySpecMetricSpecGoal(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Goal Type will default to maximize.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMetricSpecGoal GoalTypeUnspecified { get; } = new GoogleCloudAiplatformV1StudySpecMetricSpecGoal("GOAL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Maximize the goal metric.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMetricSpecGoal Maximize { get; } = new GoogleCloudAiplatformV1StudySpecMetricSpecGoal("MAXIMIZE");
        /// <summary>
        /// Minimize the goal metric.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecMetricSpecGoal Minimize { get; } = new GoogleCloudAiplatformV1StudySpecMetricSpecGoal("MINIMIZE");

        public static bool operator ==(GoogleCloudAiplatformV1StudySpecMetricSpecGoal left, GoogleCloudAiplatformV1StudySpecMetricSpecGoal right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1StudySpecMetricSpecGoal left, GoogleCloudAiplatformV1StudySpecMetricSpecGoal right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1StudySpecMetricSpecGoal value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1StudySpecMetricSpecGoal other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1StudySpecMetricSpecGoal other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1StudySpecObservationNoise : IEquatable<GoogleCloudAiplatformV1StudySpecObservationNoise>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1StudySpecObservationNoise(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default noise level chosen by Vertex AI.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecObservationNoise ObservationNoiseUnspecified { get; } = new GoogleCloudAiplatformV1StudySpecObservationNoise("OBSERVATION_NOISE_UNSPECIFIED");
        /// <summary>
        /// Vertex AI assumes that the objective function is (nearly) perfectly reproducible, and will never repeat the same Trial parameters.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecObservationNoise Low { get; } = new GoogleCloudAiplatformV1StudySpecObservationNoise("LOW");
        /// <summary>
        /// Vertex AI will estimate the amount of noise in metric evaluations, it may repeat the same Trial parameters more than once.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecObservationNoise High { get; } = new GoogleCloudAiplatformV1StudySpecObservationNoise("HIGH");

        public static bool operator ==(GoogleCloudAiplatformV1StudySpecObservationNoise left, GoogleCloudAiplatformV1StudySpecObservationNoise right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1StudySpecObservationNoise left, GoogleCloudAiplatformV1StudySpecObservationNoise right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1StudySpecObservationNoise value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1StudySpecObservationNoise other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1StudySpecObservationNoise other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudAiplatformV1StudySpecParameterSpecScaleType : IEquatable<GoogleCloudAiplatformV1StudySpecParameterSpecScaleType>
    {
        private readonly string _value;

        private GoogleCloudAiplatformV1StudySpecParameterSpecScaleType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// By default, no scaling is applied.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecParameterSpecScaleType ScaleTypeUnspecified { get; } = new GoogleCloudAiplatformV1StudySpecParameterSpecScaleType("SCALE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Scales the feasible space to (0, 1) linearly.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecParameterSpecScaleType UnitLinearScale { get; } = new GoogleCloudAiplatformV1StudySpecParameterSpecScaleType("UNIT_LINEAR_SCALE");
        /// <summary>
        /// Scales the feasible space logarithmically to (0, 1). The entire feasible space must be strictly positive.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecParameterSpecScaleType UnitLogScale { get; } = new GoogleCloudAiplatformV1StudySpecParameterSpecScaleType("UNIT_LOG_SCALE");
        /// <summary>
        /// Scales the feasible space "reverse" logarithmically to (0, 1). The result is that values close to the top of the feasible space are spread out more than points near the bottom. The entire feasible space must be strictly positive.
        /// </summary>
        public static GoogleCloudAiplatformV1StudySpecParameterSpecScaleType UnitReverseLogScale { get; } = new GoogleCloudAiplatformV1StudySpecParameterSpecScaleType("UNIT_REVERSE_LOG_SCALE");

        public static bool operator ==(GoogleCloudAiplatformV1StudySpecParameterSpecScaleType left, GoogleCloudAiplatformV1StudySpecParameterSpecScaleType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudAiplatformV1StudySpecParameterSpecScaleType left, GoogleCloudAiplatformV1StudySpecParameterSpecScaleType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudAiplatformV1StudySpecParameterSpecScaleType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudAiplatformV1StudySpecParameterSpecScaleType other && Equals(other);
        public bool Equals(GoogleCloudAiplatformV1StudySpecParameterSpecScaleType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.
    /// </summary>
    [EnumType]
    public readonly struct IndexIndexUpdateMethod : IEquatable<IndexIndexUpdateMethod>
    {
        private readonly string _value;

        private IndexIndexUpdateMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static IndexIndexUpdateMethod IndexUpdateMethodUnspecified { get; } = new IndexIndexUpdateMethod("INDEX_UPDATE_METHOD_UNSPECIFIED");
        /// <summary>
        /// BatchUpdate: user can call UpdateIndex with files on Cloud Storage of Datapoints to update.
        /// </summary>
        public static IndexIndexUpdateMethod BatchUpdate { get; } = new IndexIndexUpdateMethod("BATCH_UPDATE");
        /// <summary>
        /// StreamUpdate: user can call UpsertDatapoints/DeleteDatapoints to update the Index and the updates will be applied in corresponding DeployedIndexes in nearly real-time.
        /// </summary>
        public static IndexIndexUpdateMethod StreamUpdate { get; } = new IndexIndexUpdateMethod("STREAM_UPDATE");

        public static bool operator ==(IndexIndexUpdateMethod left, IndexIndexUpdateMethod right) => left.Equals(right);
        public static bool operator !=(IndexIndexUpdateMethod left, IndexIndexUpdateMethod right) => !left.Equals(right);

        public static explicit operator string(IndexIndexUpdateMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is IndexIndexUpdateMethod other && Equals(other);
        public bool Equals(IndexIndexUpdateMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
    /// </summary>
    [EnumType]
    public readonly struct MetadataSchemaSchemaType : IEquatable<MetadataSchemaSchemaType>
    {
        private readonly string _value;

        private MetadataSchemaSchemaType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified type for the MetadataSchema.
        /// </summary>
        public static MetadataSchemaSchemaType MetadataSchemaTypeUnspecified { get; } = new MetadataSchemaSchemaType("METADATA_SCHEMA_TYPE_UNSPECIFIED");
        /// <summary>
        /// A type indicating that the MetadataSchema will be used by Artifacts.
        /// </summary>
        public static MetadataSchemaSchemaType ArtifactType { get; } = new MetadataSchemaSchemaType("ARTIFACT_TYPE");
        /// <summary>
        /// A typee indicating that the MetadataSchema will be used by Executions.
        /// </summary>
        public static MetadataSchemaSchemaType ExecutionType { get; } = new MetadataSchemaSchemaType("EXECUTION_TYPE");
        /// <summary>
        /// A state indicating that the MetadataSchema will be used by Contexts.
        /// </summary>
        public static MetadataSchemaSchemaType ContextType { get; } = new MetadataSchemaSchemaType("CONTEXT_TYPE");

        public static bool operator ==(MetadataSchemaSchemaType left, MetadataSchemaSchemaType right) => left.Equals(right);
        public static bool operator !=(MetadataSchemaSchemaType left, MetadataSchemaSchemaType right) => !left.Equals(right);

        public static explicit operator string(MetadataSchemaSchemaType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MetadataSchemaSchemaType other && Equals(other);
        public bool Equals(MetadataSchemaSchemaType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Immutable. The type of the notebook runtime template.
    /// </summary>
    [EnumType]
    public readonly struct NotebookRuntimeTemplateNotebookRuntimeType : IEquatable<NotebookRuntimeTemplateNotebookRuntimeType>
    {
        private readonly string _value;

        private NotebookRuntimeTemplateNotebookRuntimeType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified notebook runtime type, NotebookRuntimeType will default to USER_DEFINED.
        /// </summary>
        public static NotebookRuntimeTemplateNotebookRuntimeType NotebookRuntimeTypeUnspecified { get; } = new NotebookRuntimeTemplateNotebookRuntimeType("NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED");
        /// <summary>
        /// runtime or template with coustomized configurations from user.
        /// </summary>
        public static NotebookRuntimeTemplateNotebookRuntimeType UserDefined { get; } = new NotebookRuntimeTemplateNotebookRuntimeType("USER_DEFINED");
        /// <summary>
        /// runtime or template with system defined configurations.
        /// </summary>
        public static NotebookRuntimeTemplateNotebookRuntimeType OneClick { get; } = new NotebookRuntimeTemplateNotebookRuntimeType("ONE_CLICK");

        public static bool operator ==(NotebookRuntimeTemplateNotebookRuntimeType left, NotebookRuntimeTemplateNotebookRuntimeType right) => left.Equals(right);
        public static bool operator !=(NotebookRuntimeTemplateNotebookRuntimeType left, NotebookRuntimeTemplateNotebookRuntimeType right) => !left.Equals(right);

        public static explicit operator string(NotebookRuntimeTemplateNotebookRuntimeType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is NotebookRuntimeTemplateNotebookRuntimeType other && Equals(other);
        public bool Equals(NotebookRuntimeTemplateNotebookRuntimeType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. Immutable. Type of TensorboardTimeSeries value.
    /// </summary>
    [EnumType]
    public readonly struct TimeSeriesValueType : IEquatable<TimeSeriesValueType>
    {
        private readonly string _value;

        private TimeSeriesValueType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The value type is unspecified.
        /// </summary>
        public static TimeSeriesValueType ValueTypeUnspecified { get; } = new TimeSeriesValueType("VALUE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Used for TensorboardTimeSeries that is a list of scalars. E.g. accuracy of a model over epochs/time.
        /// </summary>
        public static TimeSeriesValueType Scalar { get; } = new TimeSeriesValueType("SCALAR");
        /// <summary>
        /// Used for TensorboardTimeSeries that is a list of tensors. E.g. histograms of weights of layer in a model over epoch/time.
        /// </summary>
        public static TimeSeriesValueType Tensor { get; } = new TimeSeriesValueType("TENSOR");
        /// <summary>
        /// Used for TensorboardTimeSeries that is a list of blob sequences. E.g. set of sample images with labels over epochs/time.
        /// </summary>
        public static TimeSeriesValueType BlobSequence { get; } = new TimeSeriesValueType("BLOB_SEQUENCE");

        public static bool operator ==(TimeSeriesValueType left, TimeSeriesValueType right) => left.Equals(right);
        public static bool operator !=(TimeSeriesValueType left, TimeSeriesValueType right) => !left.Equals(right);

        public static explicit operator string(TimeSeriesValueType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TimeSeriesValueType other && Equals(other);
        public bool Equals(TimeSeriesValueType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
