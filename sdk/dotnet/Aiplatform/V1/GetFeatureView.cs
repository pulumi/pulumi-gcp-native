// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1
{
    public static class GetFeatureView
    {
        /// <summary>
        /// Gets details of a single FeatureView.
        /// </summary>
        public static Task<GetFeatureViewResult> InvokeAsync(GetFeatureViewArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFeatureViewResult>("google-native:aiplatform/v1:getFeatureView", args ?? new GetFeatureViewArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single FeatureView.
        /// </summary>
        public static Output<GetFeatureViewResult> Invoke(GetFeatureViewInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeatureViewResult>("google-native:aiplatform/v1:getFeatureView", args ?? new GetFeatureViewInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureViewArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureOnlineStoreId", required: true)]
        public string FeatureOnlineStoreId { get; set; } = null!;

        [Input("featureViewId", required: true)]
        public string FeatureViewId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeatureViewArgs()
        {
        }
        public static new GetFeatureViewArgs Empty => new GetFeatureViewArgs();
    }

    public sealed class GetFeatureViewInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("featureOnlineStoreId", required: true)]
        public Input<string> FeatureOnlineStoreId { get; set; } = null!;

        [Input("featureViewId", required: true)]
        public Input<string> FeatureViewId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeatureViewInvokeArgs()
        {
        }
        public static new GetFeatureViewInvokeArgs Empty => new GetFeatureViewInvokeArgs();
    }


    [OutputType]
    public sealed class GetFeatureViewResult
    {
        /// <summary>
        /// Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1FeatureViewBigQuerySourceResponse BigQuerySource;
        /// <summary>
        /// Timestamp when this FeatureView was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceResponse FeatureRegistrySource;
        /// <summary>
        /// Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1FeatureViewSyncConfigResponse SyncConfig;
        /// <summary>
        /// Timestamp when this FeatureView was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetFeatureViewResult(
            Outputs.GoogleCloudAiplatformV1FeatureViewBigQuerySourceResponse bigQuerySource,

            string createTime,

            string etag,

            Outputs.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceResponse featureRegistrySource,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.GoogleCloudAiplatformV1FeatureViewSyncConfigResponse syncConfig,

            string updateTime)
        {
            BigQuerySource = bigQuerySource;
            CreateTime = createTime;
            Etag = etag;
            FeatureRegistrySource = featureRegistrySource;
            Labels = labels;
            Name = name;
            SyncConfig = syncConfig;
            UpdateTime = updateTime;
        }
    }
}
