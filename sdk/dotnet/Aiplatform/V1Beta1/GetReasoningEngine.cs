// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetReasoningEngine
    {
        /// <summary>
        /// Gets a reasoning engine.
        /// </summary>
        public static Task<GetReasoningEngineResult> InvokeAsync(GetReasoningEngineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReasoningEngineResult>("google-native:aiplatform/v1beta1:getReasoningEngine", args ?? new GetReasoningEngineArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a reasoning engine.
        /// </summary>
        public static Output<GetReasoningEngineResult> Invoke(GetReasoningEngineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReasoningEngineResult>("google-native:aiplatform/v1beta1:getReasoningEngine", args ?? new GetReasoningEngineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReasoningEngineArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("reasoningEngineId", required: true)]
        public string ReasoningEngineId { get; set; } = null!;

        public GetReasoningEngineArgs()
        {
        }
        public static new GetReasoningEngineArgs Empty => new GetReasoningEngineArgs();
    }

    public sealed class GetReasoningEngineInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("reasoningEngineId", required: true)]
        public Input<string> ReasoningEngineId { get; set; } = null!;

        public GetReasoningEngineInvokeArgs()
        {
        }
        public static new GetReasoningEngineInvokeArgs Empty => new GetReasoningEngineInvokeArgs();
    }


    [OutputType]
    public sealed class GetReasoningEngineResult
    {
        /// <summary>
        /// Timestamp when this ReasoningEngine was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. The description of the ReasoningEngine.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the ReasoningEngine.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Identifier. The resource name of the ReasoningEngine.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configurations of the ReasoningEngine
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ReasoningEngineSpecResponse Spec;
        /// <summary>
        /// Timestamp when this ReasoningEngine was most recently updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetReasoningEngineResult(
            string createTime,

            string description,

            string displayName,

            string etag,

            string name,

            Outputs.GoogleCloudAiplatformV1beta1ReasoningEngineSpecResponse spec,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            Name = name;
            Spec = spec;
            UpdateTime = updateTime;
        }
    }
}
