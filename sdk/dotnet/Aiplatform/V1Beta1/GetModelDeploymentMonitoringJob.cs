// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetModelDeploymentMonitoringJob
    {
        /// <summary>
        /// Gets a ModelDeploymentMonitoringJob.
        /// </summary>
        public static Task<GetModelDeploymentMonitoringJobResult> InvokeAsync(GetModelDeploymentMonitoringJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelDeploymentMonitoringJobResult>("google-native:aiplatform/v1beta1:getModelDeploymentMonitoringJob", args ?? new GetModelDeploymentMonitoringJobArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a ModelDeploymentMonitoringJob.
        /// </summary>
        public static Output<GetModelDeploymentMonitoringJobResult> Invoke(GetModelDeploymentMonitoringJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelDeploymentMonitoringJobResult>("google-native:aiplatform/v1beta1:getModelDeploymentMonitoringJob", args ?? new GetModelDeploymentMonitoringJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelDeploymentMonitoringJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("modelDeploymentMonitoringJobId", required: true)]
        public string ModelDeploymentMonitoringJobId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetModelDeploymentMonitoringJobArgs()
        {
        }
        public static new GetModelDeploymentMonitoringJobArgs Empty => new GetModelDeploymentMonitoringJobArgs();
    }

    public sealed class GetModelDeploymentMonitoringJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("modelDeploymentMonitoringJobId", required: true)]
        public Input<string> ModelDeploymentMonitoringJobId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetModelDeploymentMonitoringJobInvokeArgs()
        {
        }
        public static new GetModelDeploymentMonitoringJobInvokeArgs Empty => new GetModelDeploymentMonitoringJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelDeploymentMonitoringJobResult
    {
        /// <summary>
        /// YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
        /// </summary>
        public readonly string AnalysisInstanceSchemaUri;
        /// <summary>
        /// The created bigquery tables for the job under customer project. Customer could do their own query &amp; analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableResponse> BigqueryTables;
        /// <summary>
        /// Timestamp when this ModelDeploymentMonitoringJob was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
        /// </summary>
        public readonly bool EnableMonitoringPipelineLogs;
        /// <summary>
        /// Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse EncryptionSpec;
        /// <summary>
        /// Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
        /// </summary>
        public readonly Outputs.GoogleRpcStatusResponse Error;
        /// <summary>
        /// The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Latest triggered monitoring pipeline metadata.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataResponse LatestMonitoringPipelineMetadata;
        /// <summary>
        /// The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.
        /// </summary>
        public readonly string LogTtl;
        /// <summary>
        /// Sample Strategy for logging.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1SamplingStrategyResponse LoggingSamplingStrategy;
        /// <summary>
        /// The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigResponse> ModelDeploymentMonitoringObjectiveConfigs;
        /// <summary>
        /// Schedule config for running the monitoring job.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigResponse ModelDeploymentMonitoringScheduleConfig;
        /// <summary>
        /// Alert config for model monitoring.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigResponse ModelMonitoringAlertConfig;
        /// <summary>
        /// Resource name of a ModelDeploymentMonitoringJob.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Timestamp when this monitoring pipeline will be scheduled to run for the next round.
        /// </summary>
        public readonly string NextScheduleTime;
        /// <summary>
        /// YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        public readonly string PredictInstanceSchemaUri;
        /// <summary>
        /// Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        public readonly object SamplePredictInstance;
        /// <summary>
        /// Schedule state when the monitoring job is in Running state.
        /// </summary>
        public readonly string ScheduleState;
        /// <summary>
        /// The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Stats anomalies base folder path.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1GcsDestinationResponse StatsAnomaliesBaseDirectory;
        /// <summary>
        /// Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetModelDeploymentMonitoringJobResult(
            string analysisInstanceSchemaUri,

            ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableResponse> bigqueryTables,

            string createTime,

            string displayName,

            bool enableMonitoringPipelineLogs,

            Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse encryptionSpec,

            string endpoint,

            Outputs.GoogleRpcStatusResponse error,

            ImmutableDictionary<string, string> labels,

            Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataResponse latestMonitoringPipelineMetadata,

            string logTtl,

            Outputs.GoogleCloudAiplatformV1beta1SamplingStrategyResponse loggingSamplingStrategy,

            ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigResponse> modelDeploymentMonitoringObjectiveConfigs,

            Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigResponse modelDeploymentMonitoringScheduleConfig,

            Outputs.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigResponse modelMonitoringAlertConfig,

            string name,

            string nextScheduleTime,

            string predictInstanceSchemaUri,

            object samplePredictInstance,

            string scheduleState,

            string state,

            Outputs.GoogleCloudAiplatformV1beta1GcsDestinationResponse statsAnomaliesBaseDirectory,

            string updateTime)
        {
            AnalysisInstanceSchemaUri = analysisInstanceSchemaUri;
            BigqueryTables = bigqueryTables;
            CreateTime = createTime;
            DisplayName = displayName;
            EnableMonitoringPipelineLogs = enableMonitoringPipelineLogs;
            EncryptionSpec = encryptionSpec;
            Endpoint = endpoint;
            Error = error;
            Labels = labels;
            LatestMonitoringPipelineMetadata = latestMonitoringPipelineMetadata;
            LogTtl = logTtl;
            LoggingSamplingStrategy = loggingSamplingStrategy;
            ModelDeploymentMonitoringObjectiveConfigs = modelDeploymentMonitoringObjectiveConfigs;
            ModelDeploymentMonitoringScheduleConfig = modelDeploymentMonitoringScheduleConfig;
            ModelMonitoringAlertConfig = modelMonitoringAlertConfig;
            Name = name;
            NextScheduleTime = nextScheduleTime;
            PredictInstanceSchemaUri = predictInstanceSchemaUri;
            SamplePredictInstance = samplePredictInstance;
            ScheduleState = scheduleState;
            State = state;
            StatsAnomaliesBaseDirectory = statsAnomaliesBaseDirectory;
            UpdateTime = updateTime;
        }
    }
}
