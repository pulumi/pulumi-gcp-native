// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1.Inputs
{

    /// <summary>
    /// Configuration for vector search.
    /// </summary>
    public sealed class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Configuration options for using brute force search, which simply implements the standard linear search in the database for each query. It is primarily meant for benchmarking and to generate the ground truth for approximate search.
        /// </summary>
        [Input("bruteForceConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigArgs>? BruteForceConfig { get; set; }

        /// <summary>
        /// Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
        /// </summary>
        [Input("crowdingColumn")]
        public Input<string>? CrowdingColumn { get; set; }

        /// <summary>
        /// Optional. The distance measure used in nearest neighbor search.
        /// </summary>
        [Input("distanceMeasureType")]
        public Input<Pulumi.GoogleNative.Aiplatform.V1Beta1.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigDistanceMeasureType>? DistanceMeasureType { get; set; }

        /// <summary>
        /// Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.
        /// </summary>
        [Input("embeddingColumn")]
        public Input<string>? EmbeddingColumn { get; set; }

        /// <summary>
        /// Optional. The number of dimensions of the input embedding.
        /// </summary>
        [Input("embeddingDimension")]
        public Input<int>? EmbeddingDimension { get; set; }

        [Input("filterColumns")]
        private InputList<string>? _filterColumns;

        /// <summary>
        /// Optional. Columns of features that're used to filter vector search results.
        /// </summary>
        public InputList<string> FilterColumns
        {
            get => _filterColumns ?? (_filterColumns = new InputList<string>());
            set => _filterColumns = value;
        }

        /// <summary>
        /// Optional. Configuration options for the tree-AH algorithm (Shallow tree + Asymmetric Hashing). Please refer to this paper for more details: https://arxiv.org/abs/1908.10396
        /// </summary>
        [Input("treeAhConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigArgs>? TreeAhConfig { get; set; }

        public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigArgs()
        {
        }
        public static new GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigArgs Empty => new GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigArgs();
    }
}
