// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1.Inputs
{

    /// <summary>
    /// Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
    /// </summary>
    public sealed class GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the shape of the values of the input if the input is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
        /// </summary>
        [Input("denseShapeTensorName")]
        public Input<string>? DenseShapeTensorName { get; set; }

        [Input("encodedBaselines")]
        private InputList<object>? _encodedBaselines;

        /// <summary>
        /// A list of baselines for the encoded tensor. The shape of each baseline should match the shape of the encoded tensor. If a scalar is provided, Vertex AI broadcasts to the same shape as the encoded tensor.
        /// </summary>
        public InputList<object> EncodedBaselines
        {
            get => _encodedBaselines ?? (_encodedBaselines = new InputList<object>());
            set => _encodedBaselines = value;
        }

        /// <summary>
        /// Encoded tensor is a transformation of the input tensor. Must be provided if choosing Integrated Gradients attribution or XRAI attribution and the input tensor is not differentiable. An encoded tensor is generated if the input tensor is encoded by a lookup table.
        /// </summary>
        [Input("encodedTensorName")]
        public Input<string>? EncodedTensorName { get; set; }

        /// <summary>
        /// Defines how the feature is encoded into the input tensor. Defaults to IDENTITY.
        /// </summary>
        [Input("encoding")]
        public Input<Pulumi.GoogleNative.Aiplatform.V1Beta1.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataEncoding>? Encoding { get; set; }

        /// <summary>
        /// The domain details of the input feature value. Like min/max, original mean or standard deviation if normalized.
        /// </summary>
        [Input("featureValueDomain")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomainArgs>? FeatureValueDomain { get; set; }

        /// <summary>
        /// Name of the group that the input belongs to. Features with the same group name will be treated as one feature when computing attributions. Features grouped together can have different shapes in value. If provided, there will be one single attribution generated in Attribution.feature_attributions, keyed by the group name.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("indexFeatureMapping")]
        private InputList<string>? _indexFeatureMapping;

        /// <summary>
        /// A list of feature names for each index in the input tensor. Required when the input InputMetadata.encoding is BAG_OF_FEATURES, BAG_OF_FEATURES_SPARSE, INDICATOR.
        /// </summary>
        public InputList<string> IndexFeatureMapping
        {
            get => _indexFeatureMapping ?? (_indexFeatureMapping = new InputList<string>());
            set => _indexFeatureMapping = value;
        }

        /// <summary>
        /// Specifies the index of the values of the input tensor. Required when the input tensor is a sparse representation. Refer to Tensorflow documentation for more details: https://www.tensorflow.org/api_docs/python/tf/sparse/SparseTensor.
        /// </summary>
        [Input("indicesTensorName")]
        public Input<string>? IndicesTensorName { get; set; }

        [Input("inputBaselines")]
        private InputList<object>? _inputBaselines;

        /// <summary>
        /// Baseline inputs for this feature. If no baseline is specified, Vertex AI chooses the baseline for this feature. If multiple baselines are specified, Vertex AI returns the average attributions across them in Attribution.feature_attributions. For Vertex AI-provided Tensorflow images (both 1.x and 2.x), the shape of each baseline must match the shape of the input tensor. If a scalar is provided, we broadcast to the same shape as the input tensor. For custom images, the element of the baselines must be in the same format as the feature's input in the instance[]. The schema of any single instance may be specified via Endpoint's DeployedModels' Model's PredictSchemata's instance_schema_uri.
        /// </summary>
        public InputList<object> InputBaselines
        {
            get => _inputBaselines ?? (_inputBaselines = new InputList<object>());
            set => _inputBaselines = value;
        }

        /// <summary>
        /// Name of the input tensor for this feature. Required and is only applicable to Vertex AI-provided images for Tensorflow.
        /// </summary>
        [Input("inputTensorName")]
        public Input<string>? InputTensorName { get; set; }

        /// <summary>
        /// Modality of the feature. Valid values are: numeric, image. Defaults to numeric.
        /// </summary>
        [Input("modality")]
        public Input<string>? Modality { get; set; }

        /// <summary>
        /// Visualization configurations for image explanation.
        /// </summary>
        [Input("visualization")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataVisualizationArgs>? Visualization { get; set; }

        public GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataArgs()
        {
        }
        public static new GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataArgs Empty => new GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataArgs();
    }
}
