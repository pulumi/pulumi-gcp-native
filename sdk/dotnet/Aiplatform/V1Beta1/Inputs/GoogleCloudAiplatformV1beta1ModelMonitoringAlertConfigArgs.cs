// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1.Inputs
{

    public sealed class GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Email alert config.
        /// </summary>
        [Input("emailAlertConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigEmailAlertConfigArgs>? EmailAlertConfig { get; set; }

        /// <summary>
        /// Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging.
        /// </summary>
        [Input("enableLogging")]
        public Input<bool>? EnableLogging { get; set; }

        [Input("notificationChannels")]
        private InputList<string>? _notificationChannels;

        /// <summary>
        /// Resource names of the NotificationChannels to send alert. Must be of the format `projects//notificationChannels/`
        /// </summary>
        public InputList<string> NotificationChannels
        {
            get => _notificationChannels ?? (_notificationChannels = new InputList<string>());
            set => _notificationChannels = value;
        }

        public GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigArgs()
        {
        }
        public static new GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigArgs Empty => new GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigArgs();
    }
}
