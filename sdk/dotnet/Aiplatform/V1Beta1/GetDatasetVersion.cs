// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetDatasetVersion
    {
        /// <summary>
        /// Gets a Dataset version.
        /// </summary>
        public static Task<GetDatasetVersionResult> InvokeAsync(GetDatasetVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatasetVersionResult>("google-native:aiplatform/v1beta1:getDatasetVersion", args ?? new GetDatasetVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a Dataset version.
        /// </summary>
        public static Output<GetDatasetVersionResult> Invoke(GetDatasetVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetVersionResult>("google-native:aiplatform/v1beta1:getDatasetVersion", args ?? new GetDatasetVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("datasetId", required: true)]
        public string DatasetId { get; set; } = null!;

        [Input("datasetVersionId", required: true)]
        public string DatasetVersionId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("readMask")]
        public string? ReadMask { get; set; }

        public GetDatasetVersionArgs()
        {
        }
        public static new GetDatasetVersionArgs Empty => new GetDatasetVersionArgs();
    }

    public sealed class GetDatasetVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("datasetId", required: true)]
        public Input<string> DatasetId { get; set; } = null!;

        [Input("datasetVersionId", required: true)]
        public Input<string> DatasetVersionId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("readMask")]
        public Input<string>? ReadMask { get; set; }

        public GetDatasetVersionInvokeArgs()
        {
        }
        public static new GetDatasetVersionInvokeArgs Empty => new GetDatasetVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatasetVersionResult
    {
        /// <summary>
        /// Name of the associated BigQuery dataset.
        /// </summary>
        public readonly string BigQueryDatasetName;
        /// <summary>
        /// Timestamp when this DatasetVersion was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The resource name of the DatasetVersion.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Timestamp when this DatasetVersion was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetDatasetVersionResult(
            string bigQueryDatasetName,

            string createTime,

            string etag,

            string name,

            string updateTime)
        {
            BigQueryDatasetName = bigQueryDatasetName;
            CreateTime = createTime;
            Etag = etag;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
