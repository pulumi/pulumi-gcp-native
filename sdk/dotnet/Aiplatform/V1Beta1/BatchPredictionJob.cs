// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    /// <summary>
    /// Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:aiplatform/v1beta1:BatchPredictionJob")]
    public partial class BatchPredictionJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Statistics on completed and failed prediction instances.
        /// </summary>
        [Output("completionStats")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1CompletionStatsResponse> CompletionStats { get; private set; } = null!;

        /// <summary>
        /// Time when the BatchPredictionJob was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.
        /// </summary>
        [Output("dedicatedResources")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1BatchDedicatedResourcesResponse> DedicatedResources { get; private set; } = null!;

        /// <summary>
        /// For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
        /// </summary>
        [Output("disableContainerLogging")]
        public Output<bool> DisableContainerLogging { get; private set; } = null!;

        /// <summary>
        /// The user-defined name of this BatchPredictionJob.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.
        /// </summary>
        [Output("encryptionSpec")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse> EncryptionSpec { get; private set; } = null!;

        /// <summary>
        /// Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// Only populated when the job's state is JOB_STATE_FAILED or JOB_STATE_CANCELLED.
        /// </summary>
        [Output("error")]
        public Output<Outputs.GoogleRpcStatusResponse> Error { get; private set; } = null!;

        /// <summary>
        /// Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.
        /// </summary>
        [Output("explanationSpec")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ExplanationSpecResponse> ExplanationSpec { get; private set; } = null!;

        /// <summary>
        /// Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.
        /// </summary>
        [Output("generateExplanation")]
        public Output<bool> GenerateExplanation { get; private set; } = null!;

        /// <summary>
        /// Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.
        /// </summary>
        [Output("inputConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfigResponse> InputConfig { get; private set; } = null!;

        /// <summary>
        /// Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.
        /// </summary>
        [Output("instanceConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfigResponse> InstanceConfig { get; private set; } = null!;

        /// <summary>
        /// The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).
        /// </summary>
        [Output("manualBatchTuningParameters")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ManualBatchTuningParametersResponse> ManualBatchTuningParameters { get; private set; } = null!;

        /// <summary>
        /// The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
        /// </summary>
        [Output("model")]
        public Output<string> Model { get; private set; } = null!;

        /// <summary>
        /// Model monitoring config will be used for analysis model behaviors, based on the input and output to the batch prediction job, as well as the provided training dataset.
        /// </summary>
        [Output("modelMonitoringConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ModelMonitoringConfigResponse> ModelMonitoringConfig { get; private set; } = null!;

        /// <summary>
        /// Get batch prediction job monitoring statistics.
        /// </summary>
        [Output("modelMonitoringStatsAnomalies")]
        public Output<ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesResponse>> ModelMonitoringStatsAnomalies { get; private set; } = null!;

        /// <summary>
        /// The running status of the model monitoring pipeline.
        /// </summary>
        [Output("modelMonitoringStatus")]
        public Output<Outputs.GoogleRpcStatusResponse> ModelMonitoringStatus { get; private set; } = null!;

        /// <summary>
        /// The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
        /// </summary>
        [Output("modelParameters")]
        public Output<object> ModelParameters { get; private set; } = null!;

        /// <summary>
        /// The version ID of the Model that produces the predictions via this job.
        /// </summary>
        [Output("modelVersionId")]
        public Output<string> ModelVersionId { get; private set; } = null!;

        /// <summary>
        /// Resource name of the BatchPredictionJob.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.
        /// </summary>
        [Output("outputConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfigResponse> OutputConfig { get; private set; } = null!;

        /// <summary>
        /// Information further describing the output of this job.
        /// </summary>
        [Output("outputInfo")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfoResponse> OutputInfo { get; private set; } = null!;

        /// <summary>
        /// Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.
        /// </summary>
        [Output("partialFailures")]
        public Output<ImmutableArray<Outputs.GoogleRpcStatusResponse>> PartialFailures { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Information about resources that had been consumed by this job. Provided in real time at best effort basis, as well as a final value once the job completes. Note: This field currently may be not populated for batch predictions that use AutoML Models.
        /// </summary>
        [Output("resourcesConsumed")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ResourcesConsumedResponse> ResourcesConsumed { get; private set; } = null!;

        /// <summary>
        /// The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The detailed state of the job.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.
        /// </summary>
        [Output("unmanagedContainerModel")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1UnmanagedContainerModelResponse> UnmanagedContainerModel { get; private set; } = null!;

        /// <summary>
        /// Time when the BatchPredictionJob was most recently updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a BatchPredictionJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BatchPredictionJob(string name, BatchPredictionJobArgs args, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:BatchPredictionJob", name, args ?? new BatchPredictionJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BatchPredictionJob(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:BatchPredictionJob", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BatchPredictionJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BatchPredictionJob Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BatchPredictionJob(name, id, options);
        }
    }

    public sealed class BatchPredictionJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The config of resources used by the Model during the batch prediction. If the Model supports DEDICATED_RESOURCES this config may be provided (and the job will use these resources), if the Model doesn't support AUTOMATIC_RESOURCES, this config must be provided.
        /// </summary>
        [Input("dedicatedResources")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1BatchDedicatedResourcesArgs>? DedicatedResources { get; set; }

        /// <summary>
        /// For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
        /// </summary>
        [Input("disableContainerLogging")]
        public Input<bool>? DisableContainerLogging { get; set; }

        /// <summary>
        /// The user-defined name of this BatchPredictionJob.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Customer-managed encryption key options for a BatchPredictionJob. If this is set, then all resources created by the BatchPredictionJob will be encrypted with the provided encryption key.
        /// </summary>
        [Input("encryptionSpec")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1EncryptionSpecArgs>? EncryptionSpec { get; set; }

        /// <summary>
        /// Explanation configuration for this BatchPredictionJob. Can be specified only if generate_explanation is set to `true`. This value overrides the value of Model.explanation_spec. All fields of explanation_spec are optional in the request. If a field of the explanation_spec object is not populated, the corresponding field of the Model.explanation_spec object is inherited.
        /// </summary>
        [Input("explanationSpec")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ExplanationSpecArgs>? ExplanationSpec { get; set; }

        /// <summary>
        /// Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.
        /// </summary>
        [Input("generateExplanation")]
        public Input<bool>? GenerateExplanation { get; set; }

        /// <summary>
        /// Input configuration of the instances on which predictions are performed. The schema of any single instance may be specified via the Model's PredictSchemata's instance_schema_uri.
        /// </summary>
        [Input("inputConfig", required: true)]
        public Input<Inputs.GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfigArgs> InputConfig { get; set; } = null!;

        /// <summary>
        /// Configuration for how to convert batch prediction input instances to the prediction instances that are sent to the Model.
        /// </summary>
        [Input("instanceConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfigArgs>? InstanceConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Immutable. Parameters configuring the batch behavior. Currently only applicable when dedicated_resources are used (in other cases Vertex AI does the tuning itself).
        /// </summary>
        [Input("manualBatchTuningParameters")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ManualBatchTuningParametersArgs>? ManualBatchTuningParameters { get; set; }

        /// <summary>
        /// The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
        /// </summary>
        [Input("model")]
        public Input<string>? Model { get; set; }

        /// <summary>
        /// Model monitoring config will be used for analysis model behaviors, based on the input and output to the batch prediction job, as well as the provided training dataset.
        /// </summary>
        [Input("modelMonitoringConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringConfigArgs>? ModelMonitoringConfig { get; set; }

        [Input("modelMonitoringStatsAnomalies")]
        private InputList<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesArgs>? _modelMonitoringStatsAnomalies;

        /// <summary>
        /// Get batch prediction job monitoring statistics.
        /// </summary>
        public InputList<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesArgs> ModelMonitoringStatsAnomalies
        {
            get => _modelMonitoringStatsAnomalies ?? (_modelMonitoringStatsAnomalies = new InputList<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomaliesArgs>());
            set => _modelMonitoringStatsAnomalies = value;
        }

        /// <summary>
        /// The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
        /// </summary>
        [Input("modelParameters")]
        public Input<object>? ModelParameters { get; set; }

        /// <summary>
        /// The Configuration specifying where output predictions should be written. The schema of any single prediction may be specified as a concatenation of Model's PredictSchemata's instance_schema_uri and prediction_schema_uri.
        /// </summary>
        [Input("outputConfig", required: true)]
        public Input<Inputs.GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfigArgs> OutputConfig { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Contains model information necessary to perform batch prediction without requiring uploading to model registry. Exactly one of model and unmanaged_container_model must be set.
        /// </summary>
        [Input("unmanagedContainerModel")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1UnmanagedContainerModelArgs>? UnmanagedContainerModel { get; set; }

        public BatchPredictionJobArgs()
        {
        }
        public static new BatchPredictionJobArgs Empty => new BatchPredictionJobArgs();
    }
}
