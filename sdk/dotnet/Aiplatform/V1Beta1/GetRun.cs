// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetRun
    {
        /// <summary>
        /// Gets a TensorboardRun.
        /// </summary>
        public static Task<GetRunResult> InvokeAsync(GetRunArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRunResult>("google-native:aiplatform/v1beta1:getRun", args ?? new GetRunArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a TensorboardRun.
        /// </summary>
        public static Output<GetRunResult> Invoke(GetRunInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRunResult>("google-native:aiplatform/v1beta1:getRun", args ?? new GetRunInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRunArgs : global::Pulumi.InvokeArgs
    {
        [Input("experimentId", required: true)]
        public string ExperimentId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("runId", required: true)]
        public string RunId { get; set; } = null!;

        [Input("tensorboardId", required: true)]
        public string TensorboardId { get; set; } = null!;

        public GetRunArgs()
        {
        }
        public static new GetRunArgs Empty => new GetRunArgs();
    }

    public sealed class GetRunInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("experimentId", required: true)]
        public Input<string> ExperimentId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("runId", required: true)]
        public Input<string> RunId { get; set; } = null!;

        [Input("tensorboardId", required: true)]
        public Input<string> TensorboardId { get; set; } = null!;

        public GetRunInvokeArgs()
        {
        }
        public static new GetRunInvokeArgs Empty => new GetRunInvokeArgs();
    }


    [OutputType]
    public sealed class GetRunResult
    {
        /// <summary>
        /// Timestamp when this TensorboardRun was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Description of this TensorboardRun.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// User provided name of this TensorboardRun. This value must be unique among all TensorboardRuns belonging to the same parent TensorboardExperiment.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The labels with user-defined metadata to organize your TensorboardRuns. This field will be used to filter and visualize Runs in the Tensorboard UI. For example, a Vertex AI training job can set a label aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created within that job. An end user can set a label experiment_id=xxxxx for all the runs produced in a Jupyter notebook. These runs can be grouped by a label value and visualized together in the Tensorboard UI. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one TensorboardRun (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the TensorboardRun. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Timestamp when this TensorboardRun was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetRunResult(
            string createTime,

            string description,

            string displayName,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            Labels = labels;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
