// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1.Outputs
{

    /// <summary>
    /// Configuration for vector search.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponse
    {
        /// <summary>
        /// Optional. Configuration options for using brute force search, which simply implements the standard linear search in the database for each query. It is primarily meant for benchmarking and to generate the ground truth for approximate search.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigResponse BruteForceConfig;
        /// <summary>
        /// Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
        /// </summary>
        public readonly string CrowdingColumn;
        /// <summary>
        /// Optional. The distance measure used in nearest neighbor search.
        /// </summary>
        public readonly string DistanceMeasureType;
        /// <summary>
        /// Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.
        /// </summary>
        public readonly string EmbeddingColumn;
        /// <summary>
        /// Optional. The number of dimensions of the input embedding.
        /// </summary>
        public readonly int EmbeddingDimension;
        /// <summary>
        /// Optional. Columns of features that're used to filter vector search results.
        /// </summary>
        public readonly ImmutableArray<string> FilterColumns;
        /// <summary>
        /// Optional. Configuration options for the tree-AH algorithm (Shallow tree + Asymmetric Hashing). Please refer to this paper for more details: https://arxiv.org/abs/1908.10396
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigResponse TreeAhConfig;

        [OutputConstructor]
        private GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigResponse(
            Outputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigBruteForceConfigResponse bruteForceConfig,

            string crowdingColumn,

            string distanceMeasureType,

            string embeddingColumn,

            int embeddingDimension,

            ImmutableArray<string> filterColumns,

            Outputs.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfigResponse treeAhConfig)
        {
            BruteForceConfig = bruteForceConfig;
            CrowdingColumn = crowdingColumn;
            DistanceMeasureType = distanceMeasureType;
            EmbeddingColumn = embeddingColumn;
            EmbeddingDimension = embeddingDimension;
            FilterColumns = filterColumns;
            TreeAhConfig = treeAhConfig;
        }
    }
}
