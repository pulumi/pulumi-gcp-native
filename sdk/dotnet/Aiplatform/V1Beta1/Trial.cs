// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    /// <summary>
    /// Adds a user provided Trial to a Study.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:aiplatform/v1beta1:Trial")]
    public partial class Trial : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
        /// </summary>
        [Output("customJob")]
        public Output<string> CustomJob { get; private set; } = null!;

        /// <summary>
        /// Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// The final measurement containing the objective value.
        /// </summary>
        [Output("finalMeasurement")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1MeasurementResponse> FinalMeasurement { get; private set; } = null!;

        /// <summary>
        /// A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
        /// </summary>
        [Output("infeasibleReason")]
        public Output<string> InfeasibleReason { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.
        /// </summary>
        [Output("measurements")]
        public Output<ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1MeasurementResponse>> Measurements { get; private set; } = null!;

        /// <summary>
        /// Resource name of the Trial assigned by the service.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parameters of the Trial.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1TrialParameterResponse>> Parameters { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Time when the Trial was started.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The detailed state of the Trial.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("studyId")]
        public Output<string> StudyId { get; private set; } = null!;

        /// <summary>
        /// URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
        /// </summary>
        [Output("webAccessUris")]
        public Output<ImmutableDictionary<string, string>> WebAccessUris { get; private set; } = null!;


        /// <summary>
        /// Create a Trial resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Trial(string name, TrialArgs args, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:Trial", name, args ?? new TrialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Trial(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:Trial", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                    "studyId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Trial resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Trial Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Trial(name, id, options);
        }
    }

    public sealed class TrialArgs : global::Pulumi.ResourceArgs
    {
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("studyId", required: true)]
        public Input<string> StudyId { get; set; } = null!;

        public TrialArgs()
        {
        }
        public static new TrialArgs Empty => new TrialArgs();
    }
}
