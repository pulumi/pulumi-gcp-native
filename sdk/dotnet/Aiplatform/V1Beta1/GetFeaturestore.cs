// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetFeaturestore
    {
        /// <summary>
        /// Gets details of a single Featurestore.
        /// </summary>
        public static Task<GetFeaturestoreResult> InvokeAsync(GetFeaturestoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFeaturestoreResult>("google-native:aiplatform/v1beta1:getFeaturestore", args ?? new GetFeaturestoreArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Featurestore.
        /// </summary>
        public static Output<GetFeaturestoreResult> Invoke(GetFeaturestoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFeaturestoreResult>("google-native:aiplatform/v1beta1:getFeaturestore", args ?? new GetFeaturestoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeaturestoreArgs : global::Pulumi.InvokeArgs
    {
        [Input("featurestoreId", required: true)]
        public string FeaturestoreId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeaturestoreArgs()
        {
        }
        public static new GetFeaturestoreArgs Empty => new GetFeaturestoreArgs();
    }

    public sealed class GetFeaturestoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("featurestoreId", required: true)]
        public Input<string> FeaturestoreId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeaturestoreInvokeArgs()
        {
        }
        public static new GetFeaturestoreInvokeArgs Empty => new GetFeaturestoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetFeaturestoreResult
    {
        /// <summary>
        /// Timestamp when this Featurestore was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Customer-managed encryption key spec for data storage. If set, both of the online and offline data storage will be secured by this key.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse EncryptionSpec;
        /// <summary>
        /// Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Config for online storage resources. The field should not co-exist with the field of `OnlineStoreReplicationConfig`. If both of it and OnlineStoreReplicationConfig are unset, the feature store will not have an online store and cannot be used for online serving.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponse OnlineServingConfig;
        /// <summary>
        /// Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days
        /// </summary>
        public readonly int OnlineStorageTtlDays;
        /// <summary>
        /// State of the featurestore.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Timestamp when this Featurestore was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetFeaturestoreResult(
            string createTime,

            Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse encryptionSpec,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfigResponse onlineServingConfig,

            int onlineStorageTtlDays,

            string state,

            string updateTime)
        {
            CreateTime = createTime;
            EncryptionSpec = encryptionSpec;
            Etag = etag;
            Labels = labels;
            Name = name;
            OnlineServingConfig = onlineServingConfig;
            OnlineStorageTtlDays = onlineStorageTtlDays;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
