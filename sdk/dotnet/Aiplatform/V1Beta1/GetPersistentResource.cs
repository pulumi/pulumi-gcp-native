// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    public static class GetPersistentResource
    {
        /// <summary>
        /// Gets a PersistentResource.
        /// </summary>
        public static Task<GetPersistentResourceResult> InvokeAsync(GetPersistentResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPersistentResourceResult>("google-native:aiplatform/v1beta1:getPersistentResource", args ?? new GetPersistentResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a PersistentResource.
        /// </summary>
        public static Output<GetPersistentResourceResult> Invoke(GetPersistentResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPersistentResourceResult>("google-native:aiplatform/v1beta1:getPersistentResource", args ?? new GetPersistentResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPersistentResourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("persistentResourceId", required: true)]
        public string PersistentResourceId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetPersistentResourceArgs()
        {
        }
        public static new GetPersistentResourceArgs Empty => new GetPersistentResourceArgs();
    }

    public sealed class GetPersistentResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("persistentResourceId", required: true)]
        public Input<string> PersistentResourceId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetPersistentResourceInvokeArgs()
        {
        }
        public static new GetPersistentResourceInvokeArgs Empty => new GetPersistentResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetPersistentResourceResult
    {
        /// <summary>
        /// Time when the PersistentResource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse EncryptionSpec;
        /// <summary>
        /// Only populated when persistent resource's state is `STOPPING` or `ERROR`.
        /// </summary>
        public readonly Outputs.GoogleRpcStatusResponse Error;
        /// <summary>
        /// Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Immutable. Resource name of a PersistentResource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
        /// </summary>
        public readonly ImmutableArray<string> ReservedIpRanges;
        /// <summary>
        /// The spec of the pools of different resources.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ResourcePoolResponse> ResourcePools;
        /// <summary>
        /// Runtime information of the Persistent Resource.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ResourceRuntimeResponse ResourceRuntime;
        /// <summary>
        /// Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.
        /// </summary>
        public readonly Outputs.GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponse ResourceRuntimeSpec;
        /// <summary>
        /// Time when the PersistentResource for the first time entered the `RUNNING` state.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The detailed state of a Study.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time when the PersistentResource was most recently updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetPersistentResourceResult(
            string createTime,

            string displayName,

            Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse encryptionSpec,

            Outputs.GoogleRpcStatusResponse error,

            ImmutableDictionary<string, string> labels,

            string name,

            string network,

            ImmutableArray<string> reservedIpRanges,

            ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ResourcePoolResponse> resourcePools,

            Outputs.GoogleCloudAiplatformV1beta1ResourceRuntimeResponse resourceRuntime,

            Outputs.GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponse resourceRuntimeSpec,

            string startTime,

            string state,

            string updateTime)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            EncryptionSpec = encryptionSpec;
            Error = error;
            Labels = labels;
            Name = name;
            Network = network;
            ReservedIpRanges = reservedIpRanges;
            ResourcePools = resourcePools;
            ResourceRuntime = resourceRuntime;
            ResourceRuntimeSpec = resourceRuntimeSpec;
            StartTime = startTime;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
