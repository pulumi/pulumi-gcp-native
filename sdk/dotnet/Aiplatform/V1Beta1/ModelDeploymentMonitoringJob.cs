// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Aiplatform.V1Beta1
{
    /// <summary>
    /// Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:aiplatform/v1beta1:ModelDeploymentMonitoringJob")]
    public partial class ModelDeploymentMonitoringJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
        /// </summary>
        [Output("analysisInstanceSchemaUri")]
        public Output<string> AnalysisInstanceSchemaUri { get; private set; } = null!;

        /// <summary>
        /// The created bigquery tables for the job under customer project. Customer could do their own query &amp; analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response
        /// </summary>
        [Output("bigqueryTables")]
        public Output<ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTableResponse>> BigqueryTables { get; private set; } = null!;

        /// <summary>
        /// Timestamp when this ModelDeploymentMonitoringJob was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
        /// </summary>
        [Output("enableMonitoringPipelineLogs")]
        public Output<bool> EnableMonitoringPipelineLogs { get; private set; } = null!;

        /// <summary>
        /// Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.
        /// </summary>
        [Output("encryptionSpec")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1EncryptionSpecResponse> EncryptionSpec { get; private set; } = null!;

        /// <summary>
        /// Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Only populated when the job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
        /// </summary>
        [Output("error")]
        public Output<Outputs.GoogleRpcStatusResponse> Error { get; private set; } = null!;

        /// <summary>
        /// The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// Latest triggered monitoring pipeline metadata.
        /// </summary>
        [Output("latestMonitoringPipelineMetadata")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadataResponse> LatestMonitoringPipelineMetadata { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.
        /// </summary>
        [Output("logTtl")]
        public Output<string> LogTtl { get; private set; } = null!;

        /// <summary>
        /// Sample Strategy for logging.
        /// </summary>
        [Output("loggingSamplingStrategy")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1SamplingStrategyResponse> LoggingSamplingStrategy { get; private set; } = null!;

        /// <summary>
        /// The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
        /// </summary>
        [Output("modelDeploymentMonitoringObjectiveConfigs")]
        public Output<ImmutableArray<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigResponse>> ModelDeploymentMonitoringObjectiveConfigs { get; private set; } = null!;

        /// <summary>
        /// Schedule config for running the monitoring job.
        /// </summary>
        [Output("modelDeploymentMonitoringScheduleConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigResponse> ModelDeploymentMonitoringScheduleConfig { get; private set; } = null!;

        /// <summary>
        /// Alert config for model monitoring.
        /// </summary>
        [Output("modelMonitoringAlertConfig")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigResponse> ModelMonitoringAlertConfig { get; private set; } = null!;

        /// <summary>
        /// Resource name of a ModelDeploymentMonitoringJob.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Timestamp when this monitoring pipeline will be scheduled to run for the next round.
        /// </summary>
        [Output("nextScheduleTime")]
        public Output<string> NextScheduleTime { get; private set; } = null!;

        /// <summary>
        /// YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        [Output("predictInstanceSchemaUri")]
        public Output<string> PredictInstanceSchemaUri { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        [Output("samplePredictInstance")]
        public Output<object> SamplePredictInstance { get; private set; } = null!;

        /// <summary>
        /// Schedule state when the monitoring job is in Running state.
        /// </summary>
        [Output("scheduleState")]
        public Output<string> ScheduleState { get; private set; } = null!;

        /// <summary>
        /// The detailed state of the monitoring job. When the job is still creating, the state will be 'PENDING'. Once the job is successfully created, the state will be 'RUNNING'. Pause the job, the state will be 'PAUSED'. Resume the job, the state will return to 'RUNNING'.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Stats anomalies base folder path.
        /// </summary>
        [Output("statsAnomaliesBaseDirectory")]
        public Output<Outputs.GoogleCloudAiplatformV1beta1GcsDestinationResponse> StatsAnomaliesBaseDirectory { get; private set; } = null!;

        /// <summary>
        /// Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ModelDeploymentMonitoringJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ModelDeploymentMonitoringJob(string name, ModelDeploymentMonitoringJobArgs args, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:ModelDeploymentMonitoringJob", name, args ?? new ModelDeploymentMonitoringJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ModelDeploymentMonitoringJob(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:aiplatform/v1beta1:ModelDeploymentMonitoringJob", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ModelDeploymentMonitoringJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ModelDeploymentMonitoringJob Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ModelDeploymentMonitoringJob(name, id, options);
        }
    }

    public sealed class ModelDeploymentMonitoringJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
        /// </summary>
        [Input("analysisInstanceSchemaUri")]
        public Input<string>? AnalysisInstanceSchemaUri { get; set; }

        /// <summary>
        /// The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
        /// </summary>
        [Input("enableMonitoringPipelineLogs")]
        public Input<bool>? EnableMonitoringPipelineLogs { get; set; }

        /// <summary>
        /// Customer-managed encryption key spec for a ModelDeploymentMonitoringJob. If set, this ModelDeploymentMonitoringJob and all sub-resources of this ModelDeploymentMonitoringJob will be secured by this key.
        /// </summary>
        [Input("encryptionSpec")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1EncryptionSpecArgs>? EncryptionSpec { get; set; }

        /// <summary>
        /// Endpoint resource name. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl = 1 day.
        /// </summary>
        [Input("logTtl")]
        public Input<string>? LogTtl { get; set; }

        /// <summary>
        /// Sample Strategy for logging.
        /// </summary>
        [Input("loggingSamplingStrategy", required: true)]
        public Input<Inputs.GoogleCloudAiplatformV1beta1SamplingStrategyArgs> LoggingSamplingStrategy { get; set; } = null!;

        [Input("modelDeploymentMonitoringObjectiveConfigs", required: true)]
        private InputList<Inputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigArgs>? _modelDeploymentMonitoringObjectiveConfigs;

        /// <summary>
        /// The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
        /// </summary>
        public InputList<Inputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigArgs> ModelDeploymentMonitoringObjectiveConfigs
        {
            get => _modelDeploymentMonitoringObjectiveConfigs ?? (_modelDeploymentMonitoringObjectiveConfigs = new InputList<Inputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfigArgs>());
            set => _modelDeploymentMonitoringObjectiveConfigs = value;
        }

        /// <summary>
        /// Schedule config for running the monitoring job.
        /// </summary>
        [Input("modelDeploymentMonitoringScheduleConfig", required: true)]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfigArgs> ModelDeploymentMonitoringScheduleConfig { get; set; } = null!;

        /// <summary>
        /// Alert config for model monitoring.
        /// </summary>
        [Input("modelMonitoringAlertConfig")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfigArgs>? ModelMonitoringAlertConfig { get; set; }

        /// <summary>
        /// YAML schema file uri describing the format of a single instance, which are given to format this Endpoint's prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        [Input("predictInstanceSchemaUri")]
        public Input<string>? PredictInstanceSchemaUri { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
        /// </summary>
        [Input("samplePredictInstance")]
        public Input<object>? SamplePredictInstance { get; set; }

        /// <summary>
        /// Stats anomalies base folder path.
        /// </summary>
        [Input("statsAnomaliesBaseDirectory")]
        public Input<Inputs.GoogleCloudAiplatformV1beta1GcsDestinationArgs>? StatsAnomaliesBaseDirectory { get; set; }

        public ModelDeploymentMonitoringJobArgs()
        {
        }
        public static new ModelDeploymentMonitoringJobArgs Empty => new ModelDeploymentMonitoringJobArgs();
    }
}
