// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DataFusion.V1.Outputs
{

    /// <summary>
    /// Network configuration for a Data Fusion instance. These configurations are used for peering with the customer network. Configurations are optional when a public Data Fusion instance is to be created. However, providing these configurations allows several benefits, such as reduced network latency while accessing the customer resources from managed Data Fusion instance nodes, as well as access to the customer on-prem resources.
    /// </summary>
    [OutputType]
    public sealed class NetworkConfigResponse
    {
        /// <summary>
        /// Optional. Type of connection for establishing private IP connectivity between the Data Fusion customer project VPC and the corresponding tenant project from a predefined list of available connection modes. If this field is unspecified for a private instance, VPC peering is used.
        /// </summary>
        public readonly string ConnectionType;
        /// <summary>
        /// Optional. The IP range in CIDR notation to use for the managed Data Fusion instance nodes. This range must not overlap with any other ranges used in the Data Fusion instance network. This is required only when using connection type VPC_PEERING. Format: a.b.c.d/22 Example: 192.168.0.0/22
        /// </summary>
        public readonly string IpAllocation;
        /// <summary>
        /// Optional. Name of the network in the customer project with which the Tenant Project will be peered for executing pipelines. This is required only when using connection type VPC peering. In case of shared VPC where the network resides in another host project the network should specified in the form of projects/{host-project-id}/global/networks/{network}. This is only required for connectivity type VPC_PEERING.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Optional. Configuration for Private Service Connect. This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
        /// </summary>
        public readonly Outputs.PrivateServiceConnectConfigResponse PrivateServiceConnectConfig;

        [OutputConstructor]
        private NetworkConfigResponse(
            string connectionType,

            string ipAllocation,

            string network,

            Outputs.PrivateServiceConnectConfigResponse privateServiceConnectConfig)
        {
            ConnectionType = connectionType;
            IpAllocation = ipAllocation;
            Network = network;
            PrivateServiceConnectConfig = privateServiceConnectConfig;
        }
    }
}
