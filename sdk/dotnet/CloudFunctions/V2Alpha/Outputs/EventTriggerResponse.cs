// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudFunctions.V2Alpha.Outputs
{

    /// <summary>
    /// Describes EventTrigger, used to request events to be sent from another service.
    /// </summary>
    [OutputType]
    public sealed class EventTriggerResponse
    {
        /// <summary>
        /// Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners.
        /// </summary>
        public readonly string Channel;
        /// <summary>
        /// Criteria used to filter events.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventFilterResponse> EventFilters;
        /// <summary>
        /// The type of event to observe. For example: `google.cloud.audit.log.v1.written` or `google.cloud.pubsub.topic.v1.messagePublished`.
        /// </summary>
        public readonly string EventType;
        /// <summary>
        /// Optional. The name of a Pub/Sub topic in the same project that will be used as the transport topic for the event delivery. Format: `projects/{project}/topics/{topic}`. This is only valid for events of type `google.cloud.pubsub.topic.v1.messagePublished`. The topic provided here will not be deleted at function deletion.
        /// </summary>
        public readonly string PubsubTopic;
        /// <summary>
        /// Optional. If unset, then defaults to ignoring failures (i.e. not retrying them).
        /// </summary>
        public readonly string RetryPolicy;
        /// <summary>
        /// Optional. The email of the trigger's service account. The service account must have permission to invoke Cloud Run services, the permission is `run.routes.invoke`. If empty, defaults to the Compute Engine default service account: `{project_number}-compute@developer.gserviceaccount.com`.
        /// </summary>
        public readonly string ServiceAccountEmail;
        /// <summary>
        /// The resource name of the Eventarc trigger. The format of this field is `projects/{project}/locations/{region}/triggers/{trigger}`.
        /// </summary>
        public readonly string Trigger;
        /// <summary>
        /// The region that the trigger will be in. The trigger will only receive events originating in this region. It can be the same region as the function, a different region or multi-region, or the global region. If not provided, defaults to the same region as the function.
        /// </summary>
        public readonly string TriggerRegion;

        [OutputConstructor]
        private EventTriggerResponse(
            string channel,

            ImmutableArray<Outputs.EventFilterResponse> eventFilters,

            string eventType,

            string pubsubTopic,

            string retryPolicy,

            string serviceAccountEmail,

            string trigger,

            string triggerRegion)
        {
            Channel = channel;
            EventFilters = eventFilters;
            EventType = eventType;
            PubsubTopic = pubsubTopic;
            RetryPolicy = retryPolicy;
            ServiceAccountEmail = serviceAccountEmail;
            Trigger = trigger;
            TriggerRegion = triggerRegion;
        }
    }
}
