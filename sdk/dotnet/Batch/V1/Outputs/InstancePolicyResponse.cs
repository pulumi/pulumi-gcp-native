// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Batch.V1.Outputs
{

    /// <summary>
    /// InstancePolicy describes an instance type and resources attached to each VM created by this InstancePolicy.
    /// </summary>
    [OutputType]
    public sealed class InstancePolicyResponse
    {
        /// <summary>
        /// The accelerators attached to each VM instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.AcceleratorResponse> Accelerators;
        /// <summary>
        /// Boot disk to be created and attached to each VM by this InstancePolicy. Boot disk will be deleted when the VM is deleted. Batch API now only supports booting from image.
        /// </summary>
        public readonly Outputs.DiskResponse BootDisk;
        /// <summary>
        /// Non-boot disks to be attached for each VM created by this InstancePolicy. New disks will be deleted when the VM is deleted. A non-boot disk is a disk that can be of a device with a file system or a raw storage drive that is not ready for data storage and accessing.
        /// </summary>
        public readonly ImmutableArray<Outputs.AttachedDiskResponse> Disks;
        /// <summary>
        /// The Compute Engine machine type.
        /// </summary>
        public readonly string MachineType;
        /// <summary>
        /// The minimum CPU platform. See https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.
        /// </summary>
        public readonly string MinCpuPlatform;
        /// <summary>
        /// The provisioning model.
        /// </summary>
        public readonly string ProvisioningModel;
        /// <summary>
        /// Optional. If specified, VMs will consume only the specified reservation. If not specified (default), VMs will consume any applicable reservation.
        /// </summary>
        public readonly string Reservation;

        [OutputConstructor]
        private InstancePolicyResponse(
            ImmutableArray<Outputs.AcceleratorResponse> accelerators,

            Outputs.DiskResponse bootDisk,

            ImmutableArray<Outputs.AttachedDiskResponse> disks,

            string machineType,

            string minCpuPlatform,

            string provisioningModel,

            string reservation)
        {
            Accelerators = accelerators;
            BootDisk = bootDisk;
            Disks = disks;
            MachineType = machineType;
            MinCpuPlatform = minCpuPlatform;
            ProvisioningModel = provisioningModel;
            Reservation = reservation;
        }
    }
}
