// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Batch.V1.Outputs
{

    /// <summary>
    /// A network interface.
    /// </summary>
    [OutputType]
    public sealed class NetworkInterfaceResponse
    {
        /// <summary>
        /// The URL of an existing network resource. You can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} projects/{project}/global/networks/{network} global/networks/{network}
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Default is false (with an external IP address). Required if no external public IP address is attached to the VM. If no external public IP address, additional configuration is required to allow the VM to access Google Services. See https://cloud.google.com/vpc/docs/configure-private-google-access and https://cloud.google.com/nat/docs/gce-example#create-nat for more information.
        /// </summary>
        public readonly bool NoExternalIpAddress;
        /// <summary>
        /// The URL of an existing subnetwork resource in the network. You can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork} projects/{project}/regions/{region}/subnetworks/{subnetwork} regions/{region}/subnetworks/{subnetwork}
        /// </summary>
        public readonly string Subnetwork;

        [OutputConstructor]
        private NetworkInterfaceResponse(
            string network,

            bool noExternalIpAddress,

            string subnetwork)
        {
            Network = network;
            NoExternalIpAddress = noExternalIpAddress;
            Subnetwork = subnetwork;
        }
    }
}
