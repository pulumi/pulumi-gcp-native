// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Pubsub.V1
{
    public static class GetTopic
    {
        /// <summary>
        /// Gets the configuration of a topic.
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("google-native:pubsub/v1:getTopic", args ?? new GetTopicArgs(), options.WithVersion());
    }


    public sealed class GetTopicArgs : Pulumi.InvokeArgs
    {
        [Input("project")]
        public string? Project { get; set; }

        [Input("topicId", required: true)]
        public string TopicId { get; set; } = null!;

        public GetTopicArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        /// <summary>
        /// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
        /// </summary>
        public readonly string KmsKeyName;
        /// <summary>
        /// See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
        /// </summary>
        public readonly Outputs.MessageStoragePolicyResponse MessageStoragePolicy;
        /// <summary>
        /// The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
        /// </summary>
        public readonly bool SatisfiesPzs;
        /// <summary>
        /// Settings for validating messages published against a schema.
        /// </summary>
        public readonly Outputs.SchemaSettingsResponse SchemaSettings;

        [OutputConstructor]
        private GetTopicResult(
            string kmsKeyName,

            ImmutableDictionary<string, string> labels,

            Outputs.MessageStoragePolicyResponse messageStoragePolicy,

            string name,

            bool satisfiesPzs,

            Outputs.SchemaSettingsResponse schemaSettings)
        {
            KmsKeyName = kmsKeyName;
            Labels = labels;
            MessageStoragePolicy = messageStoragePolicy;
            Name = name;
            SatisfiesPzs = satisfiesPzs;
            SchemaSettings = schemaSettings;
        }
    }
}
