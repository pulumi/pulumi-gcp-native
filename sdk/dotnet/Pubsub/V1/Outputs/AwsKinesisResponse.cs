// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Pubsub.V1.Outputs
{

    /// <summary>
    /// Ingestion settings for Amazon Kinesis Data Streams.
    /// </summary>
    [OutputType]
    public sealed class AwsKinesisResponse
    {
        /// <summary>
        /// AWS role ARN to be used for Federated Identity authentication with Kinesis. Check the Pub/Sub docs for how to set up this role and the required permissions that need to be attached to it.
        /// </summary>
        public readonly string AwsRoleArn;
        /// <summary>
        /// The Kinesis consumer ARN to used for ingestion in Enhanced Fan-Out mode. The consumer must be already created and ready to be used.
        /// </summary>
        public readonly string ConsumerArn;
        /// <summary>
        /// The GCP service account to be used for Federated Identity authentication with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided role). The `aws_role_arn` must be set up with `accounts.google.com:sub` equals to this service account number.
        /// </summary>
        public readonly string GcpServiceAccount;
        /// <summary>
        /// An output-only field that indicates the state of the Kinesis ingestion source.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The Kinesis stream ARN to ingest data from.
        /// </summary>
        public readonly string StreamArn;

        [OutputConstructor]
        private AwsKinesisResponse(
            string awsRoleArn,

            string consumerArn,

            string gcpServiceAccount,

            string state,

            string streamArn)
        {
            AwsRoleArn = awsRoleArn;
            ConsumerArn = consumerArn;
            GcpServiceAccount = gcpServiceAccount;
            State = state;
            StreamArn = streamArn;
        }
    }
}
