// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.Pubsub.V1Beta1a
{
    public static class GetTopic
    {
        /// <summary>
        /// Gets the configuration of a topic. Since the topic only has the name attribute, this method is only useful to check the existence of a topic. If other attributes are added in the future, they will be returned here.
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("google-native:pubsub/v1beta1a:getTopic", args ?? new GetTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the configuration of a topic. Since the topic only has the name attribute, this method is only useful to check the existence of a topic. If other attributes are added in the future, they will be returned here.
        /// </summary>
        public static Output<GetTopicResult> Invoke(GetTopicInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTopicResult>("google-native:pubsub/v1beta1a:getTopic", args ?? new GetTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicArgs : Pulumi.InvokeArgs
    {
        [Input("topicId", required: true)]
        public string TopicId { get; set; } = null!;

        public GetTopicArgs()
        {
        }
    }

    public sealed class GetTopicInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        public GetTopicInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        /// <summary>
        /// Name of the topic.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetTopicResult(string name)
        {
            Name = name;
        }
    }
}
