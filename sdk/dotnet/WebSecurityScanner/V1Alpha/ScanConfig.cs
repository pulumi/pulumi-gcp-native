// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.WebSecurityScanner.V1Alpha
{
    /// <summary>
    /// Creates a new ScanConfig.
    /// </summary>
    [GoogleNativeResourceType("google-native:websecurityscanner/v1alpha:ScanConfig")]
    public partial class ScanConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// The authentication configuration. If specified, service will use the authentication configuration during scanning.
        /// </summary>
        [Output("authentication")]
        public Output<Outputs.AuthenticationResponse> Authentication { get; private set; } = null!;

        /// <summary>
        /// The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
        /// </summary>
        [Output("blacklistPatterns")]
        public Output<ImmutableArray<string>> BlacklistPatterns { get; private set; } = null!;

        /// <summary>
        /// The user provided display name of the ScanConfig.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Latest ScanRun if available.
        /// </summary>
        [Output("latestRun")]
        public Output<Outputs.ScanRunResponse> LatestRun { get; private set; } = null!;

        /// <summary>
        /// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
        /// </summary>
        [Output("maxQps")]
        public Output<int> MaxQps { get; private set; } = null!;

        /// <summary>
        /// The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The schedule of the ScanConfig.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.ScheduleResponse> Schedule { get; private set; } = null!;

        /// <summary>
        /// The starting URLs from which the scanner finds site pages.
        /// </summary>
        [Output("startingUrls")]
        public Output<ImmutableArray<string>> StartingUrls { get; private set; } = null!;

        /// <summary>
        /// Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
        /// </summary>
        [Output("targetPlatforms")]
        public Output<ImmutableArray<string>> TargetPlatforms { get; private set; } = null!;

        /// <summary>
        /// The user agent used during scanning.
        /// </summary>
        [Output("userAgent")]
        public Output<string> UserAgent { get; private set; } = null!;


        /// <summary>
        /// Create a ScanConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScanConfig(string name, ScanConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:websecurityscanner/v1alpha:ScanConfig", name, args ?? new ScanConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScanConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:websecurityscanner/v1alpha:ScanConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScanConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScanConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ScanConfig(name, id, options);
        }
    }

    public sealed class ScanConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The authentication configuration. If specified, service will use the authentication configuration during scanning.
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.AuthenticationArgs>? Authentication { get; set; }

        [Input("blacklistPatterns")]
        private InputList<string>? _blacklistPatterns;

        /// <summary>
        /// The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
        /// </summary>
        public InputList<string> BlacklistPatterns
        {
            get => _blacklistPatterns ?? (_blacklistPatterns = new InputList<string>());
            set => _blacklistPatterns = value;
        }

        /// <summary>
        /// The user provided display name of the ScanConfig.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Latest ScanRun if available.
        /// </summary>
        [Input("latestRun")]
        public Input<Inputs.ScanRunArgs>? LatestRun { get; set; }

        /// <summary>
        /// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
        /// </summary>
        [Input("maxQps")]
        public Input<int>? MaxQps { get; set; }

        /// <summary>
        /// The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The schedule of the ScanConfig.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.ScheduleArgs>? Schedule { get; set; }

        [Input("startingUrls", required: true)]
        private InputList<string>? _startingUrls;

        /// <summary>
        /// The starting URLs from which the scanner finds site pages.
        /// </summary>
        public InputList<string> StartingUrls
        {
            get => _startingUrls ?? (_startingUrls = new InputList<string>());
            set => _startingUrls = value;
        }

        [Input("targetPlatforms")]
        private InputList<Pulumi.GoogleNative.WebSecurityScanner.V1Alpha.ScanConfigTargetPlatformsItem>? _targetPlatforms;

        /// <summary>
        /// Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
        /// </summary>
        public InputList<Pulumi.GoogleNative.WebSecurityScanner.V1Alpha.ScanConfigTargetPlatformsItem> TargetPlatforms
        {
            get => _targetPlatforms ?? (_targetPlatforms = new InputList<Pulumi.GoogleNative.WebSecurityScanner.V1Alpha.ScanConfigTargetPlatformsItem>());
            set => _targetPlatforms = value;
        }

        /// <summary>
        /// The user agent used during scanning.
        /// </summary>
        [Input("userAgent")]
        public Input<Pulumi.GoogleNative.WebSecurityScanner.V1Alpha.ScanConfigUserAgent>? UserAgent { get; set; }

        public ScanConfigArgs()
        {
        }
    }
}
