// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DeploymentManager.Alpha
{
    public static class GetCompositeType
    {
        /// <summary>
        /// Gets information about a specific composite type.
        /// </summary>
        public static Task<GetCompositeTypeResult> InvokeAsync(GetCompositeTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCompositeTypeResult>("google-native:deploymentmanager/alpha:getCompositeType", args ?? new GetCompositeTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a specific composite type.
        /// </summary>
        public static Output<GetCompositeTypeResult> Invoke(GetCompositeTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCompositeTypeResult>("google-native:deploymentmanager/alpha:getCompositeType", args ?? new GetCompositeTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCompositeTypeArgs : global::Pulumi.InvokeArgs
    {
        [Input("compositeType", required: true)]
        public string CompositeType { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCompositeTypeArgs()
        {
        }
        public static new GetCompositeTypeArgs Empty => new GetCompositeTypeArgs();
    }

    public sealed class GetCompositeTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("compositeType", required: true)]
        public Input<string> CompositeType { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCompositeTypeInvokeArgs()
        {
        }
        public static new GetCompositeTypeInvokeArgs Empty => new GetCompositeTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetCompositeTypeResult
    {
        /// <summary>
        /// An optional textual description of the resource; provided by the client when the resource is created.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        public readonly string InsertTime;
        /// <summary>
        /// Map of labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
        /// </summary>
        public readonly ImmutableArray<Outputs.CompositeTypeLabelEntryResponse> Labels;
        /// <summary>
        /// Name of the composite type, must follow the expression: `[a-z]([-a-z0-9_.]{0,61}[a-z0-9])?`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Operation that most recently ran, or is currently running, on this composite type.
        /// </summary>
        public readonly Outputs.OperationResponse Operation;
        /// <summary>
        /// Server defined URL for the resource.
        /// </summary>
        public readonly string SelfLink;
        public readonly string Status;
        /// <summary>
        /// Files for the template type.
        /// </summary>
        public readonly Outputs.TemplateContentsResponse TemplateContents;

        [OutputConstructor]
        private GetCompositeTypeResult(
            string description,

            string insertTime,

            ImmutableArray<Outputs.CompositeTypeLabelEntryResponse> labels,

            string name,

            Outputs.OperationResponse operation,

            string selfLink,

            string status,

            Outputs.TemplateContentsResponse templateContents)
        {
            Description = description;
            InsertTime = insertTime;
            Labels = labels;
            Name = name;
            Operation = operation;
            SelfLink = selfLink;
            Status = status;
            TemplateContents = templateContents;
        }
    }
}
