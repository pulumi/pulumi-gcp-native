// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Firebasedatabase.V1Beta
{
    /// <summary>
    /// Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted.
    /// </summary>
    [EnumType]
    public readonly struct InstanceType : IEquatable<InstanceType>
    {
        private readonly string _value;

        private InstanceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unknown state, likely the result of an error on the backend. This is only used for distinguishing unset values.
        /// </summary>
        public static InstanceType DatabaseInstanceTypeUnspecified { get; } = new InstanceType("DATABASE_INSTANCE_TYPE_UNSPECIFIED");
        /// <summary>
        /// The default database that is provisioned when a project is created.
        /// </summary>
        public static InstanceType DefaultDatabase { get; } = new InstanceType("DEFAULT_DATABASE");
        /// <summary>
        /// A database that the user created.
        /// </summary>
        public static InstanceType UserDatabase { get; } = new InstanceType("USER_DATABASE");

        public static bool operator ==(InstanceType left, InstanceType right) => left.Equals(right);
        public static bool operator !=(InstanceType left, InstanceType right) => !left.Equals(right);

        public static explicit operator string(InstanceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InstanceType other && Equals(other);
        public bool Equals(InstanceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
