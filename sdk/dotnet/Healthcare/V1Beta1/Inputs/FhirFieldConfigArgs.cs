// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Healthcare.V1Beta1.Inputs
{

    /// <summary>
    /// Specifies how to handle the de-identification of a FHIR store.
    /// </summary>
    public sealed class FhirFieldConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("fieldMetadataList")]
        private InputList<Inputs.GoogleCloudHealthcareV1beta1DeidentifyFieldMetadataArgs>? _fieldMetadataList;

        /// <summary>
        /// Specifies FHIR paths to match and how to transform them. Any field that is not matched by a FieldMetadata `action` is passed through to the output dataset unmodified. All extensions will be processed according to keep_extensions. If a field can be matched by more than one FieldMetadata `action`, the first `action` option is applied. Overrides options and the union field `profile` in FhirFieldConfig.
        /// </summary>
        public InputList<Inputs.GoogleCloudHealthcareV1beta1DeidentifyFieldMetadataArgs> FieldMetadataList
        {
            get => _fieldMetadataList ?? (_fieldMetadataList = new InputList<Inputs.GoogleCloudHealthcareV1beta1DeidentifyFieldMetadataArgs>());
            set => _fieldMetadataList = value;
        }

        /// <summary>
        /// Specifies additional options, overriding the base ProfileType.
        /// </summary>
        [Input("options")]
        public Input<Inputs.GoogleCloudHealthcareV1beta1DeidentifyOptionsArgs>? Options { get; set; }

        /// <summary>
        /// Base profile type for handling FHIR fields.
        /// </summary>
        [Input("profileType")]
        public Input<Pulumi.GoogleNative.Healthcare.V1Beta1.FhirFieldConfigProfileType>? ProfileType { get; set; }

        public FhirFieldConfigArgs()
        {
        }
        public static new FhirFieldConfigArgs Empty => new FhirFieldConfigArgs();
    }
}
