// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Healthcare.V1Beta1.Inputs
{

    /// <summary>
    /// A transformation to apply to text that is identified as a specific info_type.
    /// </summary>
    public sealed class InfoTypeTransformationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Config for character mask.
        /// </summary>
        [Input("characterMaskConfig")]
        public Input<Inputs.CharacterMaskConfigArgs>? CharacterMaskConfig { get; set; }

        /// <summary>
        /// Config for crypto hash.
        /// </summary>
        [Input("cryptoHashConfig")]
        public Input<Inputs.CryptoHashConfigArgs>? CryptoHashConfig { get; set; }

        /// <summary>
        /// Config for date shift.
        /// </summary>
        [Input("dateShiftConfig")]
        public Input<Inputs.DateShiftConfigArgs>? DateShiftConfig { get; set; }

        [Input("infoTypes")]
        private InputList<string>? _infoTypes;

        /// <summary>
        /// InfoTypes to apply this transformation to. If this is not specified, this transformation becomes the default transformation, and is used for any info_type that is not specified in another transformation.
        /// </summary>
        public InputList<string> InfoTypes
        {
            get => _infoTypes ?? (_infoTypes = new InputList<string>());
            set => _infoTypes = value;
        }

        /// <summary>
        /// Config for text redaction.
        /// </summary>
        [Input("redactConfig")]
        public Input<Inputs.RedactConfigArgs>? RedactConfig { get; set; }

        /// <summary>
        /// Config for replace with InfoType.
        /// </summary>
        [Input("replaceWithInfoTypeConfig")]
        public Input<Inputs.ReplaceWithInfoTypeConfigArgs>? ReplaceWithInfoTypeConfig { get; set; }

        public InfoTypeTransformationArgs()
        {
        }
    }
}
