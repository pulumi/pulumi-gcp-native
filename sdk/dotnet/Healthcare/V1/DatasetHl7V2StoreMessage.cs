// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Healthcare.V1
{
    /// <summary>
    /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the message when a notification is received.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:healthcare/v1:DatasetHl7V2StoreMessage")]
    public partial class DatasetHl7V2StoreMessage : Pulumi.CustomResource
    {
        /// <summary>
        /// The datetime when the message was created. Set by the server.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Raw message bytes.
        /// </summary>
        [Output("data")]
        public Output<string> Data { get; private set; } = null!;

        /// <summary>
        /// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The message type for this message. MSH-9.1.
        /// </summary>
        [Output("messageType")]
        public Output<string> MessageType { get; private set; } = null!;

        /// <summary>
        /// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parsed version of the raw message data.
        /// </summary>
        [Output("parsedData")]
        public Output<Outputs.ParsedDataResponse> ParsedData { get; private set; } = null!;

        /// <summary>
        /// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
        /// </summary>
        [Output("patientIds")]
        public Output<ImmutableArray<Outputs.PatientIdResponse>> PatientIds { get; private set; } = null!;

        /// <summary>
        /// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
        /// </summary>
        [Output("schematizedData")]
        public Output<Outputs.SchematizedDataResponse> SchematizedData { get; private set; } = null!;

        /// <summary>
        /// The hospital that this message came from. MSH-4.
        /// </summary>
        [Output("sendFacility")]
        public Output<string> SendFacility { get; private set; } = null!;

        /// <summary>
        /// The datetime the sending application sent this message. MSH-7.
        /// </summary>
        [Output("sendTime")]
        public Output<string> SendTime { get; private set; } = null!;


        /// <summary>
        /// Create a DatasetHl7V2StoreMessage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatasetHl7V2StoreMessage(string name, DatasetHl7V2StoreMessageArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1:DatasetHl7V2StoreMessage", name, args ?? new DatasetHl7V2StoreMessageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatasetHl7V2StoreMessage(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1:DatasetHl7V2StoreMessage", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatasetHl7V2StoreMessage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatasetHl7V2StoreMessage Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DatasetHl7V2StoreMessage(name, id, options);
        }
    }

    public sealed class DatasetHl7V2StoreMessageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Raw message bytes.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        [Input("datasetsId", required: true)]
        public Input<string> DatasetsId { get; set; } = null!;

        [Input("hl7V2StoresId", required: true)]
        public Input<string> Hl7V2StoresId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// The message type for this message. MSH-9.1.
        /// </summary>
        [Input("messageType")]
        public Input<string>? MessageType { get; set; }

        [Input("messagesId", required: true)]
        public Input<string> MessagesId { get; set; } = null!;

        /// <summary>
        /// Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("patientIds")]
        private InputList<Inputs.PatientIdArgs>? _patientIds;

        /// <summary>
        /// All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
        /// </summary>
        public InputList<Inputs.PatientIdArgs> PatientIds
        {
            get => _patientIds ?? (_patientIds = new InputList<Inputs.PatientIdArgs>());
            set => _patientIds = value;
        }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// The parsed version of the raw message data schematized according to this store's schemas and type definitions.
        /// </summary>
        [Input("schematizedData")]
        public Input<Inputs.SchematizedDataArgs>? SchematizedData { get; set; }

        /// <summary>
        /// The hospital that this message came from. MSH-4.
        /// </summary>
        [Input("sendFacility")]
        public Input<string>? SendFacility { get; set; }

        /// <summary>
        /// The datetime the sending application sent this message. MSH-7.
        /// </summary>
        [Input("sendTime")]
        public Input<string>? SendTime { get; set; }

        public DatasetHl7V2StoreMessageArgs()
        {
        }
    }
}
