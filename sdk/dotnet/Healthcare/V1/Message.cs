// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Healthcare.V1
{
    /// <summary>
    /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the message when a notification is received.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:healthcare/v1:Message")]
    public partial class Message : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a Message resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Message(string name, MessageArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1:Message", name, args ?? new MessageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Message(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:healthcare/v1:Message", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Message resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Message Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Message(name, id, options);
        }
    }

    public sealed class MessageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// HL7v2 message.
        /// </summary>
        [Input("message")]
        public Input<Inputs.MessageArgs>? Message { get; set; }

        /// <summary>
        /// The name of the dataset this message belongs to.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        public MessageArgs()
        {
        }
    }
}
