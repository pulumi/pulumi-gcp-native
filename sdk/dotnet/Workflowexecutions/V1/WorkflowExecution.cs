// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Workflowexecutions.V1
{
    /// <summary>
    /// Creates a new execution using the latest revision of the given workflow.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:workflowexecutions/v1:WorkflowExecution")]
    public partial class WorkflowExecution : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a WorkflowExecution resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkflowExecution(string name, WorkflowExecutionArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:workflowexecutions/v1:WorkflowExecution", name, args ?? new WorkflowExecutionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkflowExecution(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:workflowexecutions/v1:WorkflowExecution", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkflowExecution resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkflowExecution Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WorkflowExecution(name, id, options);
        }
    }

    public sealed class WorkflowExecutionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
        /// </summary>
        [Input("argument")]
        public Input<string>? Argument { get; set; }

        /// <summary>
        /// Output only. Marks the end of execution, successful or not.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Output only. The error which caused the execution to finish prematurely. The value is only present if the execution's state is `FAILED` or `CANCELLED`.
        /// </summary>
        [Input("error")]
        public Input<Inputs.ErrorArgs>? Error { get; set; }

        [Input("executionsId", required: true)]
        public Input<string> ExecutionsId { get; set; } = null!;

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.
        /// </summary>
        [Input("result")]
        public Input<string>? Result { get; set; }

        /// <summary>
        /// Output only. Marks the beginning of execution.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Output only. Current state of the execution.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. Revision of the workflow this execution is using.
        /// </summary>
        [Input("workflowRevisionId")]
        public Input<string>? WorkflowRevisionId { get; set; }

        [Input("workflowsId", required: true)]
        public Input<string> WorkflowsId { get; set; } = null!;

        public WorkflowExecutionArgs()
        {
        }
    }
}
