// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1
{
    public static class GetReport
    {
        /// <summary>
        /// Gets details of a single Report.
        /// </summary>
        public static Task<GetReportResult> InvokeAsync(GetReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReportResult>("google-native:migrationcenter/v1:getReport", args ?? new GetReportArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Report.
        /// </summary>
        public static Output<GetReportResult> Invoke(GetReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReportResult>("google-native:migrationcenter/v1:getReport", args ?? new GetReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("reportConfigId", required: true)]
        public string ReportConfigId { get; set; } = null!;

        [Input("reportId", required: true)]
        public string ReportId { get; set; } = null!;

        [Input("view")]
        public string? View { get; set; }

        public GetReportArgs()
        {
        }
        public static new GetReportArgs Empty => new GetReportArgs();
    }

    public sealed class GetReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("reportConfigId", required: true)]
        public Input<string> ReportConfigId { get; set; } = null!;

        [Input("reportId", required: true)]
        public Input<string> ReportId { get; set; } = null!;

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetReportInvokeArgs()
        {
        }
        public static new GetReportInvokeArgs Empty => new GetReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportResult
    {
        /// <summary>
        /// Creation timestamp.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Free-text description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// User-friendly display name. Maximum length is 63 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Name of resource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Report creation state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Summary view of the Report.
        /// </summary>
        public readonly Outputs.ReportSummaryResponse Summary;
        /// <summary>
        /// Report type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Last update timestamp.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetReportResult(
            string createTime,

            string description,

            string displayName,

            string name,

            string state,

            Outputs.ReportSummaryResponse summary,

            string type,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            Name = name;
            State = state;
            Summary = summary;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
