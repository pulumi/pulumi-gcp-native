// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1.Outputs
{

    /// <summary>
    /// Summary Findings for a specific Group/PreferenceSet combination.
    /// </summary>
    [OutputType]
    public sealed class ReportSummaryGroupPreferenceSetFindingResponse
    {
        /// <summary>
        /// A set of findings that applies to Compute Engine machines in the input.
        /// </summary>
        public readonly Outputs.ReportSummaryComputeEngineFindingResponse ComputeEngineFinding;
        /// <summary>
        /// Description for the Preference Set.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display Name of the Preference Set
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A set of preferences that applies to all machines in the context.
        /// </summary>
        public readonly Outputs.VirtualMachinePreferencesResponse MachinePreferences;
        /// <summary>
        /// Compute monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostCompute;
        /// <summary>
        /// Network Egress monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostNetworkEgress;
        /// <summary>
        /// Licensing monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostOsLicense;
        /// <summary>
        /// Miscellaneous monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostOther;
        /// <summary>
        /// Storage monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostStorage;
        /// <summary>
        /// Total monthly cost for this preference set.
        /// </summary>
        public readonly Outputs.MoneyResponse MonthlyCostTotal;
        /// <summary>
        /// A set of findings that applies to Sole-Tenant machines in the input.
        /// </summary>
        public readonly Outputs.ReportSummarySoleTenantFindingResponse SoleTenantFinding;
        /// <summary>
        /// A set of findings that applies to VMWare machines in the input.
        /// </summary>
        public readonly Outputs.ReportSummaryVmwareEngineFindingResponse VmwareEngineFinding;

        [OutputConstructor]
        private ReportSummaryGroupPreferenceSetFindingResponse(
            Outputs.ReportSummaryComputeEngineFindingResponse computeEngineFinding,

            string description,

            string displayName,

            Outputs.VirtualMachinePreferencesResponse machinePreferences,

            Outputs.MoneyResponse monthlyCostCompute,

            Outputs.MoneyResponse monthlyCostNetworkEgress,

            Outputs.MoneyResponse monthlyCostOsLicense,

            Outputs.MoneyResponse monthlyCostOther,

            Outputs.MoneyResponse monthlyCostStorage,

            Outputs.MoneyResponse monthlyCostTotal,

            Outputs.ReportSummarySoleTenantFindingResponse soleTenantFinding,

            Outputs.ReportSummaryVmwareEngineFindingResponse vmwareEngineFinding)
        {
            ComputeEngineFinding = computeEngineFinding;
            Description = description;
            DisplayName = displayName;
            MachinePreferences = machinePreferences;
            MonthlyCostCompute = monthlyCostCompute;
            MonthlyCostNetworkEgress = monthlyCostNetworkEgress;
            MonthlyCostOsLicense = monthlyCostOsLicense;
            MonthlyCostOther = monthlyCostOther;
            MonthlyCostStorage = monthlyCostStorage;
            MonthlyCostTotal = monthlyCostTotal;
            SoleTenantFinding = soleTenantFinding;
            VmwareEngineFinding = vmwareEngineFinding;
        }
    }
}
