// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1Alpha1.Outputs
{

    /// <summary>
    /// VirtualMachinePreferences enables you to create sets of preferences, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.
    /// </summary>
    [OutputType]
    public sealed class VirtualMachinePreferencesResponse
    {
        /// <summary>
        /// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
        /// </summary>
        public readonly string CommitmentPlan;
        /// <summary>
        /// Compute Engine preferences concern insights and recommendations for Compute Engine target.
        /// </summary>
        public readonly Outputs.ComputeEnginePreferencesResponse ComputeEnginePreferences;
        /// <summary>
        /// Optional. Parameters that affect network cost estimations. If not set, default values will be used for the parameters.
        /// </summary>
        public readonly Outputs.VirtualMachinePreferencesNetworkCostParametersResponse NetworkCostParameters;
        /// <summary>
        /// Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with. If PreferenceSet.RegionPreferences is specified, it overrides this field.
        /// </summary>
        public readonly Outputs.RegionPreferencesResponse RegionPreferences;
        /// <summary>
        /// Optional. Custom data to use for sizing optimizations. Relevant when SizingOptimizationStrategy is set to "custom".
        /// </summary>
        public readonly Outputs.VirtualMachinePreferencesSizingOptimizationCustomParametersResponse SizingOptimizationCustomParameters;
        /// <summary>
        /// Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
        /// </summary>
        public readonly string SizingOptimizationStrategy;
        /// <summary>
        /// Preferences concerning Sole Tenant nodes and virtual machines.
        /// </summary>
        public readonly Outputs.SoleTenancyPreferencesResponse SoleTenancyPreferences;
        /// <summary>
        /// Target product for assets using this preference set. Specify either target product or business goal, but not both.
        /// </summary>
        public readonly string TargetProduct;
        /// <summary>
        /// Preferences concerning insights and recommendations for Google Cloud VMware Engine.
        /// </summary>
        public readonly Outputs.VmwareEnginePreferencesResponse VmwareEnginePreferences;

        [OutputConstructor]
        private VirtualMachinePreferencesResponse(
            string commitmentPlan,

            Outputs.ComputeEnginePreferencesResponse computeEnginePreferences,

            Outputs.VirtualMachinePreferencesNetworkCostParametersResponse networkCostParameters,

            Outputs.RegionPreferencesResponse regionPreferences,

            Outputs.VirtualMachinePreferencesSizingOptimizationCustomParametersResponse sizingOptimizationCustomParameters,

            string sizingOptimizationStrategy,

            Outputs.SoleTenancyPreferencesResponse soleTenancyPreferences,

            string targetProduct,

            Outputs.VmwareEnginePreferencesResponse vmwareEnginePreferences)
        {
            CommitmentPlan = commitmentPlan;
            ComputeEnginePreferences = computeEnginePreferences;
            NetworkCostParameters = networkCostParameters;
            RegionPreferences = regionPreferences;
            SizingOptimizationCustomParameters = sizingOptimizationCustomParameters;
            SizingOptimizationStrategy = sizingOptimizationStrategy;
            SoleTenancyPreferences = soleTenancyPreferences;
            TargetProduct = targetProduct;
            VmwareEnginePreferences = vmwareEnginePreferences;
        }
    }
}
