// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1Alpha1
{
    public static class GetImportJob
    {
        /// <summary>
        /// Gets the details of an import job.
        /// </summary>
        public static Task<GetImportJobResult> InvokeAsync(GetImportJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImportJobResult>("google-native:migrationcenter/v1alpha1:getImportJob", args ?? new GetImportJobArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of an import job.
        /// </summary>
        public static Output<GetImportJobResult> Invoke(GetImportJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImportJobResult>("google-native:migrationcenter/v1alpha1:getImportJob", args ?? new GetImportJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImportJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("importJobId", required: true)]
        public string ImportJobId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetImportJobArgs()
        {
        }
        public static new GetImportJobArgs Empty => new GetImportJobArgs();
    }

    public sealed class GetImportJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("importJobId", required: true)]
        public Input<string> ImportJobId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetImportJobInvokeArgs()
        {
        }
        public static new GetImportJobInvokeArgs Empty => new GetImportJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetImportJobResult
    {
        /// <summary>
        /// Reference to a source.
        /// </summary>
        public readonly string AssetSource;
        /// <summary>
        /// The timestamp when the import job was completed.
        /// </summary>
        public readonly string CompleteTime;
        /// <summary>
        /// The timestamp when the import job was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User-friendly display name. Maximum length is 63 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The report with the results of running the import job.
        /// </summary>
        public readonly Outputs.ExecutionReportResponse ExecutionReport;
        /// <summary>
        /// The payload is in Google Cloud Storage.
        /// </summary>
        public readonly Outputs.GCSPayloadInfoResponse GcsPayload;
        /// <summary>
        /// The payload is included in the request, mainly used for small import jobs.
        /// </summary>
        public readonly Outputs.InlinePayloadInfoResponse InlinePayload;
        /// <summary>
        /// Labels as key value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The full name of the import job.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The state of the import job.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The timestamp when the import job was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The report with the validation results of the import job.
        /// </summary>
        public readonly Outputs.ValidationReportResponse ValidationReport;

        [OutputConstructor]
        private GetImportJobResult(
            string assetSource,

            string completeTime,

            string createTime,

            string displayName,

            Outputs.ExecutionReportResponse executionReport,

            Outputs.GCSPayloadInfoResponse gcsPayload,

            Outputs.InlinePayloadInfoResponse inlinePayload,

            ImmutableDictionary<string, string> labels,

            string name,

            string state,

            string updateTime,

            Outputs.ValidationReportResponse validationReport)
        {
            AssetSource = assetSource;
            CompleteTime = completeTime;
            CreateTime = createTime;
            DisplayName = displayName;
            ExecutionReport = executionReport;
            GcsPayload = gcsPayload;
            InlinePayload = inlinePayload;
            Labels = labels;
            Name = name;
            State = state;
            UpdateTime = updateTime;
            ValidationReport = validationReport;
        }
    }
}
