// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1Alpha1
{
    /// <summary>
    /// Creates an import data file.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:migrationcenter/v1alpha1:ImportDataFile")]
    public partial class ImportDataFile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp when the file was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// User-friendly display name. Maximum length is 63 characters.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The payload format.
        /// </summary>
        [Output("format")]
        public Output<string> Format { get; private set; } = null!;

        /// <summary>
        /// Required. The ID of the new data file.
        /// </summary>
        [Output("importDataFileId")]
        public Output<string> ImportDataFileId { get; private set; } = null!;

        [Output("importJobId")]
        public Output<string> ImportJobId { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the file.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// The state of the import data file.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Information about a file that is uploaded to a storage service.
        /// </summary>
        [Output("uploadFileInfo")]
        public Output<Outputs.UploadFileInfoResponse> UploadFileInfo { get; private set; } = null!;


        /// <summary>
        /// Create a ImportDataFile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImportDataFile(string name, ImportDataFileArgs args, CustomResourceOptions? options = null)
            : base("google-native:migrationcenter/v1alpha1:ImportDataFile", name, args ?? new ImportDataFileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImportDataFile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:migrationcenter/v1alpha1:ImportDataFile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "importDataFileId",
                    "importJobId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImportDataFile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImportDataFile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ImportDataFile(name, id, options);
        }
    }

    public sealed class ImportDataFileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-friendly display name. Maximum length is 63 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The payload format.
        /// </summary>
        [Input("format", required: true)]
        public Input<Pulumi.GoogleNative.MigrationCenter.V1Alpha1.ImportDataFileFormat> Format { get; set; } = null!;

        /// <summary>
        /// Required. The ID of the new data file.
        /// </summary>
        [Input("importDataFileId", required: true)]
        public Input<string> ImportDataFileId { get; set; } = null!;

        [Input("importJobId", required: true)]
        public Input<string> ImportJobId { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Information about a file that is uploaded to a storage service.
        /// </summary>
        [Input("uploadFileInfo")]
        public Input<Inputs.UploadFileInfoArgs>? UploadFileInfo { get; set; }

        public ImportDataFileArgs()
        {
        }
        public static new ImportDataFileArgs Empty => new ImportDataFileArgs();
    }
}
