// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.MigrationCenter.V1Alpha1
{
    public static class GetPreferenceSet
    {
        /// <summary>
        /// Gets the details of a preference set.
        /// </summary>
        public static Task<GetPreferenceSetResult> InvokeAsync(GetPreferenceSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPreferenceSetResult>("google-native:migrationcenter/v1alpha1:getPreferenceSet", args ?? new GetPreferenceSetArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of a preference set.
        /// </summary>
        public static Output<GetPreferenceSetResult> Invoke(GetPreferenceSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPreferenceSetResult>("google-native:migrationcenter/v1alpha1:getPreferenceSet", args ?? new GetPreferenceSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPreferenceSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("preferenceSetId", required: true)]
        public string PreferenceSetId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetPreferenceSetArgs()
        {
        }
        public static new GetPreferenceSetArgs Empty => new GetPreferenceSetArgs();
    }

    public sealed class GetPreferenceSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("preferenceSetId", required: true)]
        public Input<string> PreferenceSetId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetPreferenceSetInvokeArgs()
        {
        }
        public static new GetPreferenceSetInvokeArgs Empty => new GetPreferenceSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetPreferenceSetResult
    {
        /// <summary>
        /// The timestamp when the preference set was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// A description of the preference set.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// User-friendly display name. Maximum length is 63 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Name of the preference set.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The timestamp when the preference set was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// A set of preferences that applies to all virtual machines in the context.
        /// </summary>
        public readonly Outputs.VirtualMachinePreferencesResponse VirtualMachinePreferences;

        [OutputConstructor]
        private GetPreferenceSetResult(
            string createTime,

            string description,

            string displayName,

            string name,

            string updateTime,

            Outputs.VirtualMachinePreferencesResponse virtualMachinePreferences)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            Name = name;
            UpdateTime = updateTime;
            VirtualMachinePreferences = virtualMachinePreferences;
        }
    }
}
