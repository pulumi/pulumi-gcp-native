// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.Iap.V1
{
    public static class GetBrand
    {
        /// <summary>
        /// Retrieves the OAuth brand of the project.
        /// </summary>
        public static Task<GetBrandResult> InvokeAsync(GetBrandArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBrandResult>("google-native:iap/v1:getBrand", args ?? new GetBrandArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the OAuth brand of the project.
        /// </summary>
        public static Output<GetBrandResult> Invoke(GetBrandInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBrandResult>("google-native:iap/v1:getBrand", args ?? new GetBrandInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBrandArgs : Pulumi.InvokeArgs
    {
        [Input("brandId", required: true)]
        public string BrandId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetBrandArgs()
        {
        }
    }

    public sealed class GetBrandInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("brandId", required: true)]
        public Input<string> BrandId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBrandInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBrandResult
    {
        /// <summary>
        /// Application name displayed on OAuth consent screen.
        /// </summary>
        public readonly string ApplicationTitle;
        /// <summary>
        /// Identifier of the brand. NOTE: GCP project number achieves the same brand identification purpose as only one brand per project can be created.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Whether the brand is only intended for usage inside the G Suite organization only.
        /// </summary>
        public readonly bool OrgInternalOnly;
        /// <summary>
        /// Support email displayed on the OAuth consent screen.
        /// </summary>
        public readonly string SupportEmail;

        [OutputConstructor]
        private GetBrandResult(
            string applicationTitle,

            string name,

            bool orgInternalOnly,

            string supportEmail)
        {
            ApplicationTitle = applicationTitle;
            Name = name;
            OrgInternalOnly = orgInternalOnly;
            SupportEmail = supportEmail;
        }
    }
}
