// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.SQLAdmin.V1Beta4.Outputs
{

    /// <summary>
    /// Database instance settings.
    /// </summary>
    [OutputType]
    public sealed class SettingsResponse
    {
        /// <summary>
        /// The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
        /// </summary>
        public readonly string ActivationPolicy;
        /// <summary>
        /// Active Directory configuration, relevant only for Cloud SQL for SQL Server.
        /// </summary>
        public readonly Outputs.SqlActiveDirectoryConfigResponse ActiveDirectoryConfig;
        /// <summary>
        /// Specifies advance machine configuration for the instance relevant only for SQL Server.
        /// </summary>
        public readonly Outputs.AdvancedMachineFeaturesResponse AdvancedMachineFeatures;
        /// <summary>
        /// The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.
        /// </summary>
        public readonly ImmutableArray<string> AuthorizedGaeApplications;
        /// <summary>
        /// Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
        /// </summary>
        public readonly string AvailabilityType;
        /// <summary>
        /// The daily backup configuration for the instance.
        /// </summary>
        public readonly Outputs.BackupConfigurationResponse BackupConfiguration;
        /// <summary>
        /// The name of server Instance collation.
        /// </summary>
        public readonly string Collation;
        /// <summary>
        /// Specifies if connections must use Cloud SQL connectors. Option values include the following: `NOT_REQUIRED` (Cloud SQL instances can be connected without Cloud SQL Connectors) and `REQUIRED` (Only allow connections that use Cloud SQL Connectors) Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.
        /// </summary>
        public readonly string ConnectorEnforcement;
        /// <summary>
        /// Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.
        /// </summary>
        public readonly bool CrashSafeReplicationEnabled;
        /// <summary>
        /// Configuration for data cache.
        /// </summary>
        public readonly Outputs.DataCacheConfigResponse DataCacheConfig;
        /// <summary>
        /// The size of data disk, in GB. The data disk size minimum is 10GB.
        /// </summary>
        public readonly string DataDiskSizeGb;
        /// <summary>
        /// The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.
        /// </summary>
        public readonly string DataDiskType;
        /// <summary>
        /// The database flags passed to the instance at startup.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatabaseFlagsResponse> DatabaseFlags;
        /// <summary>
        /// Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.
        /// </summary>
        public readonly bool DatabaseReplicationEnabled;
        /// <summary>
        /// Configuration to protect against accidental instance deletion.
        /// </summary>
        public readonly bool DeletionProtectionEnabled;
        /// <summary>
        /// Deny maintenance periods
        /// </summary>
        public readonly ImmutableArray<Outputs.DenyMaintenancePeriodResponse> DenyMaintenancePeriods;
        /// <summary>
        /// Optional. The edition of the instance.
        /// </summary>
        public readonly string Edition;
        /// <summary>
        /// Insights configuration, for now relevant only for Postgres.
        /// </summary>
        public readonly Outputs.InsightsConfigResponse InsightsConfig;
        /// <summary>
        /// The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.
        /// </summary>
        public readonly Outputs.IpConfigurationResponse IpConfiguration;
        /// <summary>
        /// This is always `sql#settings`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.
        /// </summary>
        public readonly Outputs.LocationPreferenceResponse LocationPreference;
        /// <summary>
        /// The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.
        /// </summary>
        public readonly Outputs.MaintenanceWindowResponse MaintenanceWindow;
        /// <summary>
        /// The local user password validation policy of the instance.
        /// </summary>
        public readonly Outputs.PasswordValidationPolicyResponse PasswordValidationPolicy;
        /// <summary>
        /// The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
        /// </summary>
        public readonly string PricingPlan;
        /// <summary>
        /// The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.
        /// </summary>
        public readonly string ReplicationType;
        /// <summary>
        /// The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.
        /// </summary>
        public readonly string SettingsVersion;
        /// <summary>
        /// SQL Server specific audit configuration.
        /// </summary>
        public readonly Outputs.SqlServerAuditConfigResponse SqlServerAuditConfig;
        /// <summary>
        /// Configuration to increase storage size automatically. The default value is true.
        /// </summary>
        public readonly bool StorageAutoResize;
        /// <summary>
        /// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
        /// </summary>
        public readonly string StorageAutoResizeLimit;
        /// <summary>
        /// The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.
        /// </summary>
        public readonly string Tier;
        /// <summary>
        /// Server timezone, relevant only for Cloud SQL for SQL Server.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// User-provided labels, represented as a dictionary where each label is a single key value pair.
        /// </summary>
        public readonly ImmutableDictionary<string, string> UserLabels;

        [OutputConstructor]
        private SettingsResponse(
            string activationPolicy,

            Outputs.SqlActiveDirectoryConfigResponse activeDirectoryConfig,

            Outputs.AdvancedMachineFeaturesResponse advancedMachineFeatures,

            ImmutableArray<string> authorizedGaeApplications,

            string availabilityType,

            Outputs.BackupConfigurationResponse backupConfiguration,

            string collation,

            string connectorEnforcement,

            bool crashSafeReplicationEnabled,

            Outputs.DataCacheConfigResponse dataCacheConfig,

            string dataDiskSizeGb,

            string dataDiskType,

            ImmutableArray<Outputs.DatabaseFlagsResponse> databaseFlags,

            bool databaseReplicationEnabled,

            bool deletionProtectionEnabled,

            ImmutableArray<Outputs.DenyMaintenancePeriodResponse> denyMaintenancePeriods,

            string edition,

            Outputs.InsightsConfigResponse insightsConfig,

            Outputs.IpConfigurationResponse ipConfiguration,

            string kind,

            Outputs.LocationPreferenceResponse locationPreference,

            Outputs.MaintenanceWindowResponse maintenanceWindow,

            Outputs.PasswordValidationPolicyResponse passwordValidationPolicy,

            string pricingPlan,

            string replicationType,

            string settingsVersion,

            Outputs.SqlServerAuditConfigResponse sqlServerAuditConfig,

            bool storageAutoResize,

            string storageAutoResizeLimit,

            string tier,

            string timeZone,

            ImmutableDictionary<string, string> userLabels)
        {
            ActivationPolicy = activationPolicy;
            ActiveDirectoryConfig = activeDirectoryConfig;
            AdvancedMachineFeatures = advancedMachineFeatures;
            AuthorizedGaeApplications = authorizedGaeApplications;
            AvailabilityType = availabilityType;
            BackupConfiguration = backupConfiguration;
            Collation = collation;
            ConnectorEnforcement = connectorEnforcement;
            CrashSafeReplicationEnabled = crashSafeReplicationEnabled;
            DataCacheConfig = dataCacheConfig;
            DataDiskSizeGb = dataDiskSizeGb;
            DataDiskType = dataDiskType;
            DatabaseFlags = databaseFlags;
            DatabaseReplicationEnabled = databaseReplicationEnabled;
            DeletionProtectionEnabled = deletionProtectionEnabled;
            DenyMaintenancePeriods = denyMaintenancePeriods;
            Edition = edition;
            InsightsConfig = insightsConfig;
            IpConfiguration = ipConfiguration;
            Kind = kind;
            LocationPreference = locationPreference;
            MaintenanceWindow = maintenanceWindow;
            PasswordValidationPolicy = passwordValidationPolicy;
            PricingPlan = pricingPlan;
            ReplicationType = replicationType;
            SettingsVersion = settingsVersion;
            SqlServerAuditConfig = sqlServerAuditConfig;
            StorageAutoResize = storageAutoResize;
            StorageAutoResizeLimit = storageAutoResizeLimit;
            Tier = tier;
            TimeZone = timeZone;
            UserLabels = userLabels;
        }
    }
}
