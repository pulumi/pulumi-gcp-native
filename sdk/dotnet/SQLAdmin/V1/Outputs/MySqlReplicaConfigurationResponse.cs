// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.SQLAdmin.V1.Outputs
{

    /// <summary>
    /// Read-replica configuration specific to MySQL databases.
    /// </summary>
    [OutputType]
    public sealed class MySqlReplicaConfigurationResponse
    {
        /// <summary>
        /// PEM representation of the trusted CA's x509 certificate.
        /// </summary>
        public readonly string CaCertificate;
        /// <summary>
        /// PEM representation of the replica's x509 certificate.
        /// </summary>
        public readonly string ClientCertificate;
        /// <summary>
        /// PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
        /// </summary>
        public readonly string ClientKey;
        /// <summary>
        /// Seconds to wait between connect retries. MySQL's default is 60 seconds.
        /// </summary>
        public readonly int ConnectRetryInterval;
        /// <summary>
        /// Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.
        /// </summary>
        public readonly string DumpFilePath;
        /// <summary>
        /// This is always `sql#mysqlReplicaConfiguration`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Interval in milliseconds between replication heartbeats.
        /// </summary>
        public readonly string MasterHeartbeatPeriod;
        /// <summary>
        /// The password for the replication connection.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// A list of permissible ciphers to use for SSL encryption.
        /// </summary>
        public readonly string SslCipher;
        /// <summary>
        /// The username for the replication connection.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.
        /// </summary>
        public readonly bool VerifyServerCertificate;

        [OutputConstructor]
        private MySqlReplicaConfigurationResponse(
            string caCertificate,

            string clientCertificate,

            string clientKey,

            int connectRetryInterval,

            string dumpFilePath,

            string kind,

            string masterHeartbeatPeriod,

            string password,

            string sslCipher,

            string username,

            bool verifyServerCertificate)
        {
            CaCertificate = caCertificate;
            ClientCertificate = clientCertificate;
            ClientKey = clientKey;
            ConnectRetryInterval = connectRetryInterval;
            DumpFilePath = dumpFilePath;
            Kind = kind;
            MasterHeartbeatPeriod = masterHeartbeatPeriod;
            Password = password;
            SslCipher = sslCipher;
            Username = username;
            VerifyServerCertificate = verifyServerCertificate;
        }
    }
}
