// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.SQLAdmin.V1
{
    /// <summary>
    /// Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:sqladmin/v1:SslCert")]
    public partial class SslCert : Pulumi.CustomResource
    {
        /// <summary>
        /// PEM representation.
        /// </summary>
        [Output("cert")]
        public Output<string> Cert { get; private set; } = null!;

        /// <summary>
        /// Serial number, as extracted from the certificate.
        /// </summary>
        [Output("certSerialNumber")]
        public Output<string> CertSerialNumber { get; private set; } = null!;

        /// <summary>
        /// User supplied name. Constrained to [a-zA-Z.-_ ]+.
        /// </summary>
        [Output("commonName")]
        public Output<string> CommonName { get; private set; } = null!;

        /// <summary>
        /// The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
        /// </summary>
        [Output("expirationTime")]
        public Output<string> ExpirationTime { get; private set; } = null!;

        /// <summary>
        /// Name of the database instance.
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// This is always `sql#sslCert`.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The URI of this resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Sha1 Fingerprint.
        /// </summary>
        [Output("sha1Fingerprint")]
        public Output<string> Sha1Fingerprint { get; private set; } = null!;


        /// <summary>
        /// Create a SslCert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SslCert(string name, SslCertArgs args, CustomResourceOptions? options = null)
            : base("google-native:sqladmin/v1:SslCert", name, args ?? new SslCertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SslCert(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:sqladmin/v1:SslCert", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SslCert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SslCert Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SslCert(name, id, options);
        }
    }

    public sealed class SslCertArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// User supplied name. Must be a distinct name from the other certificates for this instance.
        /// </summary>
        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public SslCertArgs()
        {
        }
    }
}
