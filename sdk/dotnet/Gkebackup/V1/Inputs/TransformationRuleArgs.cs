// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkebackup.V1.Inputs
{

    /// <summary>
    /// A transformation rule to be applied against Kubernetes resources as they are selected for restoration from a Backup. A rule contains both filtering logic (which resources are subject to transform) and transformation logic.
    /// </summary>
    public sealed class TransformationRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The description is a user specified string description of the transformation rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fieldActions", required: true)]
        private InputList<Inputs.TransformationRuleActionArgs>? _fieldActions;

        /// <summary>
        /// A list of transformation rule actions to take against candidate resources. Actions are executed in order defined - this order matters, as they could potentially interfere with each other and the first operation could affect the outcome of the second operation.
        /// </summary>
        public InputList<Inputs.TransformationRuleActionArgs> FieldActions
        {
            get => _fieldActions ?? (_fieldActions = new InputList<Inputs.TransformationRuleActionArgs>());
            set => _fieldActions = value;
        }

        /// <summary>
        /// Optional. This field is used to specify a set of fields that should be used to determine which resources in backup should be acted upon by the supplied transformation rule actions, and this will ensure that only specific resources are affected by transformation rule actions.
        /// </summary>
        [Input("resourceFilter")]
        public Input<Inputs.ResourceFilterArgs>? ResourceFilter { get; set; }

        public TransformationRuleArgs()
        {
        }
        public static new TransformationRuleArgs Empty => new TransformationRuleArgs();
    }
}
