// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkebackup.V1.Outputs
{

    /// <summary>
    /// BackupConfig defines the configuration of Backups created via this BackupPlan.
    /// </summary>
    [OutputType]
    public sealed class BackupConfigResponse
    {
        /// <summary>
        /// If True, include all namespaced resources
        /// </summary>
        public readonly bool AllNamespaces;
        /// <summary>
        /// Optional. This defines a customer managed encryption key that will be used to encrypt the "config" portion (the Kubernetes resources) of Backups created via this plan. Default (empty): Config backup artifacts will not be encrypted.
        /// </summary>
        public readonly Outputs.EncryptionKeyResponse EncryptionKey;
        /// <summary>
        /// Optional. This flag specifies whether Kubernetes Secret resources should be included when they fall into the scope of Backups. Default: False
        /// </summary>
        public readonly bool IncludeSecrets;
        /// <summary>
        /// Optional. This flag specifies whether volume data should be backed up when PVCs are included in the scope of a Backup. Default: False
        /// </summary>
        public readonly bool IncludeVolumeData;
        /// <summary>
        /// If set, include just the resources referenced by the listed ProtectedApplications.
        /// </summary>
        public readonly Outputs.NamespacedNamesResponse SelectedApplications;
        /// <summary>
        /// If set, include just the resources in the listed namespaces.
        /// </summary>
        public readonly Outputs.NamespacesResponse SelectedNamespaces;

        [OutputConstructor]
        private BackupConfigResponse(
            bool allNamespaces,

            Outputs.EncryptionKeyResponse encryptionKey,

            bool includeSecrets,

            bool includeVolumeData,

            Outputs.NamespacedNamesResponse selectedApplications,

            Outputs.NamespacesResponse selectedNamespaces)
        {
            AllNamespaces = allNamespaces;
            EncryptionKey = encryptionKey;
            IncludeSecrets = includeSecrets;
            IncludeVolumeData = includeVolumeData;
            SelectedApplications = selectedApplications;
            SelectedNamespaces = selectedNamespaces;
        }
    }
}
