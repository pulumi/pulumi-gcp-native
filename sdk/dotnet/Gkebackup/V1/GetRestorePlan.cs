// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkebackup.V1
{
    public static class GetRestorePlan
    {
        /// <summary>
        /// Retrieve the details of a single RestorePlan.
        /// </summary>
        public static Task<GetRestorePlanResult> InvokeAsync(GetRestorePlanArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRestorePlanResult>("google-native:gkebackup/v1:getRestorePlan", args ?? new GetRestorePlanArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve the details of a single RestorePlan.
        /// </summary>
        public static Output<GetRestorePlanResult> Invoke(GetRestorePlanInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRestorePlanResult>("google-native:gkebackup/v1:getRestorePlan", args ?? new GetRestorePlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRestorePlanArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("restorePlanId", required: true)]
        public string RestorePlanId { get; set; } = null!;

        public GetRestorePlanArgs()
        {
        }
    }

    public sealed class GetRestorePlanInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("restorePlanId", required: true)]
        public Input<string> RestorePlanId { get; set; } = null!;

        public GetRestorePlanInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRestorePlanResult
    {
        /// <summary>
        /// Immutable. The BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: projects/*/locations/*/backupPlans/*.
        /// </summary>
        public readonly string BackupPlan;
        /// <summary>
        /// Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Possible formats: 1. projects/*/locations/*/clusters/* 2. projects/*/zones/*/clusters/*
        /// </summary>
        public readonly string Cluster;
        /// <summary>
        /// The timestamp when this RestorePlan resource was created - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User specified descriptive string for this RestorePlan.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` to ensure that their change will be applied to the same version.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// A set of custom labels supplied by user.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The full name of the RestorePlan resource. Format: projects/*/locations/*/restorePlans/*
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configuration of Restores created via this RestorePlan.
        /// </summary>
        public readonly Outputs.RestoreConfigResponse RestoreConfig;
        /// <summary>
        /// Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The timestamp when this RestorePlan resource was last updated - can be converted to and from [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetRestorePlanResult(
            string backupPlan,

            string cluster,

            string createTime,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.RestoreConfigResponse restoreConfig,

            string uid,

            string updateTime)
        {
            BackupPlan = backupPlan;
            Cluster = cluster;
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            RestoreConfig = restoreConfig;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
