// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Spanner.V1
{
    public static class GetInstanceConfig
    {
        /// <summary>
        /// Gets information about a particular instance configuration.
        /// </summary>
        public static Task<GetInstanceConfigResult> InvokeAsync(GetInstanceConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceConfigResult>("google-native:spanner/v1:getInstanceConfig", args ?? new GetInstanceConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a particular instance configuration.
        /// </summary>
        public static Output<GetInstanceConfigResult> Invoke(GetInstanceConfigInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceConfigResult>("google-native:spanner/v1:getInstanceConfig", args ?? new GetInstanceConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceConfigId", required: true)]
        public string InstanceConfigId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetInstanceConfigArgs()
        {
        }
        public static new GetInstanceConfigArgs Empty => new GetInstanceConfigArgs();
    }

    public sealed class GetInstanceConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceConfigId", required: true)]
        public Input<string> InstanceConfigId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetInstanceConfigInvokeArgs()
        {
        }
        public static new GetInstanceConfigInvokeArgs Empty => new GetInstanceConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceConfigResult
    {
        /// <summary>
        /// Base configuration name, e.g. projects//instanceConfigs/nam3, based on which this configuration is created. Only set for user managed configurations. `base_config` must refer to a configuration of type GOOGLE_MANAGED in the same project as this configuration.
        /// </summary>
        public readonly string BaseConfig;
        /// <summary>
        /// Whether this instance config is a Google or User Managed Configuration.
        /// </summary>
        public readonly string ConfigType;
        /// <summary>
        /// The name of this instance configuration as it appears in UIs.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a instance config from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform instance config updates in order to avoid race conditions: An etag is returned in the response which contains instance configs, and systems are expected to put that etag in the request to update instance config to ensure that their change will be applied to the same version of the instance config. If no etag is provided in the call to update instance config, then the existing instance config is overwritten blindly.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Describes whether free instances are available to be created in this instance config.
        /// </summary>
        public readonly string FreeInstanceAvailability;
        /// <summary>
        /// Cloud Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. Cloud Labels can be used to filter collections of resources. They can be used to control how resource metrics are aggregated. And they can be used as arguments to policy management rules (e.g. route, firewall, load balancing, etc.). * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `a-z{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `[a-z0-9_-]{0,63}`. * No more than 64 labels can be associated with a given resource. See https://goo.gl/xmQnxf for more information on and examples of labels. If you plan to use labels in your own code, please note that additional characters may be allowed in the future. Therefore, you are advised to use an internal label representation, such as JSON, which doesn't rely upon specific characters being disallowed. For example, representing labels as the string: name + "_" + value would prove problematic if we were to allow "_" in a future release.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Allowed values of the "default_leader" schema option for databases in instances that use this instance configuration.
        /// </summary>
        public readonly ImmutableArray<string> LeaderOptions;
        /// <summary>
        /// A unique identifier for the instance configuration. Values are of the form `projects//instanceConfigs/a-z*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The available optional replicas to choose from for user managed configurations. Populated for Google managed configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReplicaInfoResponse> OptionalReplicas;
        /// <summary>
        /// If true, the instance config is being created or updated. If false, there are no ongoing operations for the instance config.
        /// </summary>
        public readonly bool Reconciling;
        /// <summary>
        /// The geographic placement of nodes in this instance configuration and their replication properties.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReplicaInfoResponse> Replicas;
        /// <summary>
        /// The current instance config state.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetInstanceConfigResult(
            string baseConfig,

            string configType,

            string displayName,

            string etag,

            string freeInstanceAvailability,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<string> leaderOptions,

            string name,

            ImmutableArray<Outputs.ReplicaInfoResponse> optionalReplicas,

            bool reconciling,

            ImmutableArray<Outputs.ReplicaInfoResponse> replicas,

            string state)
        {
            BaseConfig = baseConfig;
            ConfigType = configType;
            DisplayName = displayName;
            Etag = etag;
            FreeInstanceAvailability = freeInstanceAvailability;
            Labels = labels;
            LeaderOptions = leaderOptions;
            Name = name;
            OptionalReplicas = optionalReplicas;
            Reconciling = reconciling;
            Replicas = replicas;
            State = state;
        }
    }
}
