// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudSupport.V2Beta
{
    /// <summary>
    /// Create a new case and associate it with the given Cloud resource.
    /// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
    /// on Google Cloud even though it will be deleted from Pulumi state.
    /// </summary>
    [GoogleNativeResourceType("google-native:cloudsupport/v2beta:Case")]
    public partial class Case : Pulumi.CustomResource
    {
        /// <summary>
        /// The issue classification applicable to this case.
        /// </summary>
        [Output("classification")]
        public Output<Outputs.CaseClassificationResponse> Classification { get; private set; } = null!;

        /// <summary>
        /// The time this case was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
        /// </summary>
        [Output("creator")]
        public Output<Outputs.ActorResponse> Creator { get; private set; } = null!;

        /// <summary>
        /// A broad description of the issue.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The short summary of the issue reported in this case.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Whether the case is currently escalated.
        /// </summary>
        [Output("escalated")]
        public Output<bool> Escalated { get; private set; } = null!;

        /// <summary>
        /// The resource name for the case.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The priority of this case. If this is set, do not set severity.
        /// </summary>
        [Output("priority")]
        public Output<string> Priority { get; private set; } = null!;

        /// <summary>
        /// The severity of this case. Deprecated. Use priority instead.
        /// </summary>
        [Output("severity")]
        public Output<string> Severity { get; private set; } = null!;

        /// <summary>
        /// The current status of the support case.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The email addresses to receive updates on this case.
        /// </summary>
        [Output("subscriberEmailAddresses")]
        public Output<ImmutableArray<string>> SubscriberEmailAddresses { get; private set; } = null!;

        /// <summary>
        /// Whether this case was created for internal API testing and should not be acted on by the support team.
        /// </summary>
        [Output("testCase")]
        public Output<bool> TestCase { get; private set; } = null!;

        /// <summary>
        /// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The time this case was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("v2betaId1")]
        public Output<string> V2betaId1 { get; private set; } = null!;

        [Output("v2betumId")]
        public Output<string> V2betumId { get; private set; } = null!;


        /// <summary>
        /// Create a Case resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Case(string name, CaseArgs args, CustomResourceOptions? options = null)
            : base("google-native:cloudsupport/v2beta:Case", name, args ?? new CaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Case(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:cloudsupport/v2beta:Case", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Case resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Case Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Case(name, id, options);
        }
    }

    public sealed class CaseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The issue classification applicable to this case.
        /// </summary>
        [Input("classification")]
        public Input<Inputs.CaseClassificationArgs>? Classification { get; set; }

        /// <summary>
        /// The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
        /// </summary>
        [Input("creator")]
        public Input<Inputs.ActorArgs>? Creator { get; set; }

        /// <summary>
        /// A broad description of the issue.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The short summary of the issue reported in this case.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Whether the case is currently escalated.
        /// </summary>
        [Input("escalated")]
        public Input<bool>? Escalated { get; set; }

        /// <summary>
        /// The resource name for the case.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of this case. If this is set, do not set severity.
        /// </summary>
        [Input("priority")]
        public Input<Pulumi.GoogleNative.CloudSupport.V2Beta.CasePriority>? Priority { get; set; }

        /// <summary>
        /// The severity of this case. Deprecated. Use priority instead.
        /// </summary>
        [Input("severity")]
        public Input<Pulumi.GoogleNative.CloudSupport.V2Beta.CaseSeverity>? Severity { get; set; }

        [Input("subscriberEmailAddresses")]
        private InputList<string>? _subscriberEmailAddresses;

        /// <summary>
        /// The email addresses to receive updates on this case.
        /// </summary>
        public InputList<string> SubscriberEmailAddresses
        {
            get => _subscriberEmailAddresses ?? (_subscriberEmailAddresses = new InputList<string>());
            set => _subscriberEmailAddresses = value;
        }

        /// <summary>
        /// Whether this case was created for internal API testing and should not be acted on by the support team.
        /// </summary>
        [Input("testCase")]
        public Input<bool>? TestCase { get; set; }

        /// <summary>
        /// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        [Input("v2betaId1", required: true)]
        public Input<string> V2betaId1 { get; set; } = null!;

        [Input("v2betumId", required: true)]
        public Input<string> V2betumId { get; set; } = null!;

        public CaseArgs()
        {
        }
    }
}
