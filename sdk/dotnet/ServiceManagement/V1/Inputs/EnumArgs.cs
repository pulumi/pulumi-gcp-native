// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ServiceManagement.V1.Inputs
{

    /// <summary>
    /// Enum type definition.
    /// </summary>
    public sealed class EnumArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The source edition string, only valid when syntax is SYNTAX_EDITIONS.
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("enumvalue")]
        private InputList<Inputs.EnumValueArgs>? _enumvalue;

        /// <summary>
        /// Enum value definitions.
        /// </summary>
        public InputList<Inputs.EnumValueArgs> Enumvalue
        {
            get => _enumvalue ?? (_enumvalue = new InputList<Inputs.EnumValueArgs>());
            set => _enumvalue = value;
        }

        /// <summary>
        /// Enum type name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("options")]
        private InputList<Inputs.OptionArgs>? _options;

        /// <summary>
        /// Protocol buffer options.
        /// </summary>
        public InputList<Inputs.OptionArgs> Options
        {
            get => _options ?? (_options = new InputList<Inputs.OptionArgs>());
            set => _options = value;
        }

        /// <summary>
        /// The source context.
        /// </summary>
        [Input("sourceContext")]
        public Input<Inputs.SourceContextArgs>? SourceContext { get; set; }

        /// <summary>
        /// The source syntax.
        /// </summary>
        [Input("syntax")]
        public Input<Pulumi.GoogleNative.ServiceManagement.V1.EnumSyntax>? Syntax { get; set; }

        public EnumArgs()
        {
        }
        public static new EnumArgs Empty => new EnumArgs();
    }
}
