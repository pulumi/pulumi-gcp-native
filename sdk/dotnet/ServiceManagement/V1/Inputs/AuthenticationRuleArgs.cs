// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ServiceManagement.V1.Inputs
{

    /// <summary>
    /// Authentication rules for the service. By default, if a method has any authentication requirements, every request must include a valid credential matching one of the requirements. It's an error to include more than one kind of credential in a single request. If a method doesn't have any auth requirements, request credentials will be ignored.
    /// </summary>
    public sealed class AuthenticationRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, the service accepts API keys without any other credential. This flag only applies to HTTP and gRPC requests.
        /// </summary>
        [Input("allowWithoutCredential")]
        public Input<bool>? AllowWithoutCredential { get; set; }

        /// <summary>
        /// The requirements for OAuth credentials.
        /// </summary>
        [Input("oauth")]
        public Input<Inputs.OAuthRequirementsArgs>? Oauth { get; set; }

        [Input("requirements")]
        private InputList<Inputs.AuthRequirementArgs>? _requirements;

        /// <summary>
        /// Requirements for additional authentication providers.
        /// </summary>
        public InputList<Inputs.AuthRequirementArgs> Requirements
        {
            get => _requirements ?? (_requirements = new InputList<Inputs.AuthRequirementArgs>());
            set => _requirements = value;
        }

        /// <summary>
        /// Selects the methods to which this rule applies. Refer to selector for syntax details.
        /// </summary>
        [Input("selector")]
        public Input<string>? Selector { get; set; }

        public AuthenticationRuleArgs()
        {
        }
        public static new AuthenticationRuleArgs Empty => new AuthenticationRuleArgs();
    }
}
