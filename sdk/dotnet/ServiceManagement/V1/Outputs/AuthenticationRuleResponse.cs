// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ServiceManagement.V1.Outputs
{

    /// <summary>
    /// Authentication rules for the service. By default, if a method has any authentication requirements, every request must include a valid credential matching one of the requirements. It's an error to include more than one kind of credential in a single request. If a method doesn't have any auth requirements, request credentials will be ignored.
    /// </summary>
    [OutputType]
    public sealed class AuthenticationRuleResponse
    {
        /// <summary>
        /// If true, the service accepts API keys without any other credential. This flag only applies to HTTP and gRPC requests.
        /// </summary>
        public readonly bool AllowWithoutCredential;
        /// <summary>
        /// The requirements for OAuth credentials.
        /// </summary>
        public readonly Outputs.OAuthRequirementsResponse Oauth;
        /// <summary>
        /// Requirements for additional authentication providers.
        /// </summary>
        public readonly ImmutableArray<Outputs.AuthRequirementResponse> Requirements;
        /// <summary>
        /// Selects the methods to which this rule applies. Refer to selector for syntax details.
        /// </summary>
        public readonly string Selector;

        [OutputConstructor]
        private AuthenticationRuleResponse(
            bool allowWithoutCredential,

            Outputs.OAuthRequirementsResponse oauth,

            ImmutableArray<Outputs.AuthRequirementResponse> requirements,

            string selector)
        {
            AllowWithoutCredential = allowWithoutCredential;
            Oauth = oauth;
            Requirements = requirements;
            Selector = selector;
        }
    }
}
