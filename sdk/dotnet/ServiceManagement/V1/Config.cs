// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ServiceManagement.V1
{
    /// <summary>
    /// Creates a new service configuration (version) for a managed service. This method only stores the service configuration. To roll out the service configuration to backend systems please call CreateServiceRollout. Only the 100 most recent service configurations and ones referenced by existing rollouts are kept for each service. The rest will be deleted eventually.
    /// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
    /// on Google Cloud even though it will be deleted from Pulumi state.
    /// </summary>
    [GoogleNativeResourceType("google-native:servicemanagement/v1:Config")]
    public partial class Config : Pulumi.CustomResource
    {
        /// <summary>
        /// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
        /// </summary>
        [Output("apis")]
        public Output<ImmutableArray<Outputs.ApiResponse>> Apis { get; private set; } = null!;

        /// <summary>
        /// Auth configuration.
        /// </summary>
        [Output("authentication")]
        public Output<Outputs.AuthenticationResponse> Authentication { get; private set; } = null!;

        /// <summary>
        /// API backend configuration.
        /// </summary>
        [Output("backend")]
        public Output<Outputs.BackendResponse> Backend { get; private set; } = null!;

        /// <summary>
        /// Billing configuration.
        /// </summary>
        [Output("billing")]
        public Output<Outputs.BillingResponse> Billing { get; private set; } = null!;

        /// <summary>
        /// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
        /// </summary>
        [Output("configVersion")]
        public Output<int> ConfigVersion { get; private set; } = null!;

        /// <summary>
        /// Context configuration.
        /// </summary>
        [Output("context")]
        public Output<Outputs.ContextResponse> Context { get; private set; } = null!;

        /// <summary>
        /// Configuration for the service control plane.
        /// </summary>
        [Output("control")]
        public Output<Outputs.ControlResponse> Control { get; private set; } = null!;

        /// <summary>
        /// Custom error configuration.
        /// </summary>
        [Output("customError")]
        public Output<Outputs.CustomErrorResponse> CustomError { get; private set; } = null!;

        /// <summary>
        /// Additional API documentation.
        /// </summary>
        [Output("documentation")]
        public Output<Outputs.DocumentationResponse> Documentation { get; private set; } = null!;

        /// <summary>
        /// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
        /// </summary>
        [Output("endpoints")]
        public Output<ImmutableArray<Outputs.EndpointResponse>> Endpoints { get; private set; } = null!;

        /// <summary>
        /// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
        /// </summary>
        [Output("enums")]
        public Output<ImmutableArray<Outputs.EnumResponse>> Enums { get; private set; } = null!;

        /// <summary>
        /// HTTP configuration.
        /// </summary>
        [Output("http")]
        public Output<Outputs.HttpResponse> Http { get; private set; } = null!;

        /// <summary>
        /// Logging configuration.
        /// </summary>
        [Output("logging")]
        public Output<Outputs.LoggingResponse> Logging { get; private set; } = null!;

        /// <summary>
        /// Defines the logs used by this service.
        /// </summary>
        [Output("logs")]
        public Output<ImmutableArray<Outputs.LogDescriptorResponse>> Logs { get; private set; } = null!;

        /// <summary>
        /// Defines the metrics used by this service.
        /// </summary>
        [Output("metrics")]
        public Output<ImmutableArray<Outputs.MetricDescriptorResponse>> Metrics { get; private set; } = null!;

        /// <summary>
        /// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
        /// </summary>
        [Output("monitoredResources")]
        public Output<ImmutableArray<Outputs.MonitoredResourceDescriptorResponse>> MonitoredResources { get; private set; } = null!;

        /// <summary>
        /// Monitoring configuration.
        /// </summary>
        [Output("monitoring")]
        public Output<Outputs.MonitoringResponse> Monitoring { get; private set; } = null!;

        /// <summary>
        /// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Google project that owns this service.
        /// </summary>
        [Output("producerProjectId")]
        public Output<string> ProducerProjectId { get; private set; } = null!;

        /// <summary>
        /// Quota configuration.
        /// </summary>
        [Output("quota")]
        public Output<Outputs.QuotaResponse> Quota { get; private set; } = null!;

        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The source information for this configuration if available.
        /// </summary>
        [Output("sourceInfo")]
        public Output<Outputs.SourceInfoResponse> SourceInfo { get; private set; } = null!;

        /// <summary>
        /// System parameter configuration.
        /// </summary>
        [Output("systemParameters")]
        public Output<Outputs.SystemParametersResponse> SystemParameters { get; private set; } = null!;

        /// <summary>
        /// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
        /// </summary>
        [Output("systemTypes")]
        public Output<ImmutableArray<Outputs.TypeResponse>> SystemTypes { get; private set; } = null!;

        /// <summary>
        /// The product title for this service, it is the name displayed in Google Cloud Console.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
        /// </summary>
        [Output("types")]
        public Output<ImmutableArray<Outputs.TypeResponse>> Types { get; private set; } = null!;

        /// <summary>
        /// Configuration controlling usage of this service.
        /// </summary>
        [Output("usage")]
        public Output<Outputs.UsageResponse> Usage { get; private set; } = null!;


        /// <summary>
        /// Create a Config resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Config(string name, ConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:servicemanagement/v1:Config", name, args ?? new ConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Config(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:servicemanagement/v1:Config", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Config resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Config Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Config(name, id, options);
        }
    }

    public sealed class ConfigArgs : Pulumi.ResourceArgs
    {
        [Input("apis")]
        private InputList<Inputs.ApiArgs>? _apis;

        /// <summary>
        /// A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
        /// </summary>
        public InputList<Inputs.ApiArgs> Apis
        {
            get => _apis ?? (_apis = new InputList<Inputs.ApiArgs>());
            set => _apis = value;
        }

        /// <summary>
        /// Auth configuration.
        /// </summary>
        [Input("authentication")]
        public Input<Inputs.AuthenticationArgs>? Authentication { get; set; }

        /// <summary>
        /// API backend configuration.
        /// </summary>
        [Input("backend")]
        public Input<Inputs.BackendArgs>? Backend { get; set; }

        /// <summary>
        /// Billing configuration.
        /// </summary>
        [Input("billing")]
        public Input<Inputs.BillingArgs>? Billing { get; set; }

        /// <summary>
        /// Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
        /// </summary>
        [Input("configVersion")]
        public Input<int>? ConfigVersion { get; set; }

        /// <summary>
        /// Context configuration.
        /// </summary>
        [Input("context")]
        public Input<Inputs.ContextArgs>? Context { get; set; }

        /// <summary>
        /// Configuration for the service control plane.
        /// </summary>
        [Input("control")]
        public Input<Inputs.ControlArgs>? Control { get; set; }

        /// <summary>
        /// Custom error configuration.
        /// </summary>
        [Input("customError")]
        public Input<Inputs.CustomErrorArgs>? CustomError { get; set; }

        /// <summary>
        /// Additional API documentation.
        /// </summary>
        [Input("documentation")]
        public Input<Inputs.DocumentationArgs>? Documentation { get; set; }

        [Input("endpoints")]
        private InputList<Inputs.EndpointArgs>? _endpoints;

        /// <summary>
        /// Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
        /// </summary>
        public InputList<Inputs.EndpointArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.EndpointArgs>());
            set => _endpoints = value;
        }

        [Input("enums")]
        private InputList<Inputs.EnumArgs>? _enums;

        /// <summary>
        /// A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name by the configuration author. Example: enums: - name: google.someapi.v1.SomeEnum
        /// </summary>
        public InputList<Inputs.EnumArgs> Enums
        {
            get => _enums ?? (_enums = new InputList<Inputs.EnumArgs>());
            set => _enums = value;
        }

        /// <summary>
        /// HTTP configuration.
        /// </summary>
        [Input("http")]
        public Input<Inputs.HttpArgs>? Http { get; set; }

        /// <summary>
        /// A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Logging configuration.
        /// </summary>
        [Input("logging")]
        public Input<Inputs.LoggingArgs>? Logging { get; set; }

        [Input("logs")]
        private InputList<Inputs.LogDescriptorArgs>? _logs;

        /// <summary>
        /// Defines the logs used by this service.
        /// </summary>
        public InputList<Inputs.LogDescriptorArgs> Logs
        {
            get => _logs ?? (_logs = new InputList<Inputs.LogDescriptorArgs>());
            set => _logs = value;
        }

        [Input("metrics")]
        private InputList<Inputs.MetricDescriptorArgs>? _metrics;

        /// <summary>
        /// Defines the metrics used by this service.
        /// </summary>
        public InputList<Inputs.MetricDescriptorArgs> Metrics
        {
            get => _metrics ?? (_metrics = new InputList<Inputs.MetricDescriptorArgs>());
            set => _metrics = value;
        }

        [Input("monitoredResources")]
        private InputList<Inputs.MonitoredResourceDescriptorArgs>? _monitoredResources;

        /// <summary>
        /// Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
        /// </summary>
        public InputList<Inputs.MonitoredResourceDescriptorArgs> MonitoredResources
        {
            get => _monitoredResources ?? (_monitoredResources = new InputList<Inputs.MonitoredResourceDescriptorArgs>());
            set => _monitoredResources = value;
        }

        /// <summary>
        /// Monitoring configuration.
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.MonitoringArgs>? Monitoring { get; set; }

        /// <summary>
        /// The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Google project that owns this service.
        /// </summary>
        [Input("producerProjectId")]
        public Input<string>? ProducerProjectId { get; set; }

        /// <summary>
        /// Quota configuration.
        /// </summary>
        [Input("quota")]
        public Input<Inputs.QuotaArgs>? Quota { get; set; }

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// System parameter configuration.
        /// </summary>
        [Input("systemParameters")]
        public Input<Inputs.SystemParametersArgs>? SystemParameters { get; set; }

        [Input("systemTypes")]
        private InputList<Inputs.TypeArgs>? _systemTypes;

        /// <summary>
        /// A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
        /// </summary>
        public InputList<Inputs.TypeArgs> SystemTypes
        {
            get => _systemTypes ?? (_systemTypes = new InputList<Inputs.TypeArgs>());
            set => _systemTypes = value;
        }

        /// <summary>
        /// The product title for this service, it is the name displayed in Google Cloud Console.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("types")]
        private InputList<Inputs.TypeArgs>? _types;

        /// <summary>
        /// A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name by the configuration author. Example: types: - name: google.protobuf.Int32
        /// </summary>
        public InputList<Inputs.TypeArgs> Types
        {
            get => _types ?? (_types = new InputList<Inputs.TypeArgs>());
            set => _types = value;
        }

        /// <summary>
        /// Configuration controlling usage of this service.
        /// </summary>
        [Input("usage")]
        public Input<Inputs.UsageArgs>? Usage { get; set; }

        public ConfigArgs()
        {
        }
    }
}
