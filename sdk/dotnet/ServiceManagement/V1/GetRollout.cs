// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ServiceManagement.V1
{
    public static class GetRollout
    {
        /// <summary>
        /// Gets a service configuration rollout.
        /// </summary>
        public static Task<GetRolloutResult> InvokeAsync(GetRolloutArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRolloutResult>("google-native:servicemanagement/v1:getRollout", args ?? new GetRolloutArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a service configuration rollout.
        /// </summary>
        public static Output<GetRolloutResult> Invoke(GetRolloutInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRolloutResult>("google-native:servicemanagement/v1:getRollout", args ?? new GetRolloutInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRolloutArgs : Pulumi.InvokeArgs
    {
        [Input("rolloutId", required: true)]
        public string RolloutId { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetRolloutArgs()
        {
        }
    }

    public sealed class GetRolloutInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("rolloutId", required: true)]
        public Input<string> RolloutId { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetRolloutInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRolloutResult
    {
        /// <summary>
        /// Creation time of the rollout. Readonly.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The user who created the Rollout. Readonly.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// The strategy associated with a rollout to delete a `ManagedService`. Readonly.
        /// </summary>
        public readonly Outputs.DeleteServiceStrategyResponse DeleteServiceStrategy;
        /// <summary>
        /// Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where "date" is the create date in ISO 8601 format. "revision number" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'
        /// </summary>
        public readonly string RolloutId;
        /// <summary>
        /// The name of the service associated with this Rollout.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Google Service Control selects service configurations based on traffic percentage.
        /// </summary>
        public readonly Outputs.TrafficPercentStrategyResponse TrafficPercentStrategy;

        [OutputConstructor]
        private GetRolloutResult(
            string createTime,

            string createdBy,

            Outputs.DeleteServiceStrategyResponse deleteServiceStrategy,

            string rolloutId,

            string serviceName,

            string status,

            Outputs.TrafficPercentStrategyResponse trafficPercentStrategy)
        {
            CreateTime = createTime;
            CreatedBy = createdBy;
            DeleteServiceStrategy = deleteServiceStrategy;
            RolloutId = rolloutId;
            ServiceName = serviceName;
            Status = status;
            TrafficPercentStrategy = trafficPercentStrategy;
        }
    }
}
