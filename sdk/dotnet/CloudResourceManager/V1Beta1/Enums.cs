// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.CloudResourceManager.V1Beta1
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The Project lifecycle state. Read-only.
    /// </summary>
    [EnumType]
    public readonly struct ProjectLifecycleState : IEquatable<ProjectLifecycleState>
    {
        private readonly string _value;

        private ProjectLifecycleState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified state. This is only used/useful for distinguishing unset values.
        /// </summary>
        public static ProjectLifecycleState LifecycleStateUnspecified { get; } = new ProjectLifecycleState("LIFECYCLE_STATE_UNSPECIFIED");
        /// <summary>
        /// The normal and active state.
        /// </summary>
        public static ProjectLifecycleState Active { get; } = new ProjectLifecycleState("ACTIVE");
        /// <summary>
        /// The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject.
        /// </summary>
        public static ProjectLifecycleState DeleteRequested { get; } = new ProjectLifecycleState("DELETE_REQUESTED");
        /// <summary>
        /// This lifecycle state is no longer used and is not returned by the API.
        /// </summary>
        public static ProjectLifecycleState DeleteInProgress { get; } = new ProjectLifecycleState("DELETE_IN_PROGRESS");

        public static bool operator ==(ProjectLifecycleState left, ProjectLifecycleState right) => left.Equals(right);
        public static bool operator !=(ProjectLifecycleState left, ProjectLifecycleState right) => !left.Equals(right);

        public static explicit operator string(ProjectLifecycleState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ProjectLifecycleState other && Equals(other);
        public bool Equals(ProjectLifecycleState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
