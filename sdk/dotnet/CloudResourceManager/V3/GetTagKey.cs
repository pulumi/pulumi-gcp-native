// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.CloudResourceManager.V3
{
    public static class GetTagKey
    {
        /// <summary>
        /// Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
        /// </summary>
        public static Task<GetTagKeyResult> InvokeAsync(GetTagKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTagKeyResult>("google-native:cloudresourcemanager/v3:getTagKey", args ?? new GetTagKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
        /// </summary>
        public static Output<GetTagKeyResult> Invoke(GetTagKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTagKeyResult>("google-native:cloudresourcemanager/v3:getTagKey", args ?? new GetTagKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagKeyArgs : Pulumi.InvokeArgs
    {
        [Input("tagKeyId", required: true)]
        public string TagKeyId { get; set; } = null!;

        public GetTagKeyArgs()
        {
        }
    }

    public sealed class GetTagKeyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("tagKeyId", required: true)]
        public Input<string> TagKeyId { get; set; } = null!;

        public GetTagKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTagKeyResult
    {
        /// <summary>
        /// Creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Immutable. Namespaced name of the TagKey.
        /// </summary>
        public readonly string NamespacedName;
        /// <summary>
        /// Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`.
        /// </summary>
        public readonly string Parent;
        /// <summary>
        /// Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public readonly string ShortName;
        /// <summary>
        /// Update time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetTagKeyResult(
            string createTime,

            string description,

            string etag,

            string name,

            string namespacedName,

            string parent,

            string shortName,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Name = name;
            NamespacedName = namespacedName;
            Parent = parent;
            ShortName = shortName;
            UpdateTime = updateTime;
        }
    }
}
