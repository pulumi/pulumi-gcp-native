// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Cloudkms.V1.Outputs
{

    [OutputType]
    public sealed class CryptoKeyVersionResponse
    {
        /// <summary>
        /// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
        /// </summary>
        public readonly string Algorithm;
        /// <summary>
        /// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.
        /// </summary>
        public readonly Outputs.KeyOperationAttestationResponse Attestation;
        /// <summary>
        /// The time at which this CryptoKeyVersion was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
        /// </summary>
        public readonly string DestroyEventTime;
        /// <summary>
        /// The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
        /// </summary>
        public readonly string DestroyTime;
        /// <summary>
        /// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.
        /// </summary>
        public readonly Outputs.ExternalProtectionLevelOptionsResponse ExternalProtectionLevelOptions;
        /// <summary>
        /// The time this CryptoKeyVersion's key material was generated.
        /// </summary>
        public readonly string GenerateTime;
        /// <summary>
        /// The root cause of an import failure. Only present if state is IMPORT_FAILED.
        /// </summary>
        public readonly string ImportFailureReason;
        /// <summary>
        /// The name of the ImportJob used to import this CryptoKeyVersion. Only present if the underlying key material was imported.
        /// </summary>
        public readonly string ImportJob;
        /// <summary>
        /// The time at which this CryptoKeyVersion's key material was imported.
        /// </summary>
        public readonly string ImportTime;
        /// <summary>
        /// The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
        /// </summary>
        public readonly string ProtectionLevel;
        /// <summary>
        /// The current state of the CryptoKeyVersion.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private CryptoKeyVersionResponse(
            string algorithm,

            Outputs.KeyOperationAttestationResponse attestation,

            string createTime,

            string destroyEventTime,

            string destroyTime,

            Outputs.ExternalProtectionLevelOptionsResponse externalProtectionLevelOptions,

            string generateTime,

            string importFailureReason,

            string importJob,

            string importTime,

            string name,

            string protectionLevel,

            string state)
        {
            Algorithm = algorithm;
            Attestation = attestation;
            CreateTime = createTime;
            DestroyEventTime = destroyEventTime;
            DestroyTime = destroyTime;
            ExternalProtectionLevelOptions = externalProtectionLevelOptions;
            GenerateTime = generateTime;
            ImportFailureReason = importFailureReason;
            ImportJob = importJob;
            ImportTime = importTime;
            Name = name;
            ProtectionLevel = protectionLevel;
            State = state;
        }
    }
}
