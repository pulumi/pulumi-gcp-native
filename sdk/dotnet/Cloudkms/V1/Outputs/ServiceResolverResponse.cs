// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Cloudkms.V1.Outputs
{

    /// <summary>
    /// A ServiceResolver represents an EKM replica that can be reached within an EkmConnection.
    /// </summary>
    [OutputType]
    public sealed class ServiceResolverResponse
    {
        /// <summary>
        /// Optional. The filter applied to the endpoints of the resolved service. If no filter is specified, all endpoints will be considered. An endpoint will be chosen arbitrarily from the filtered list for each request. For endpoint filter syntax and examples, see https://cloud.google.com/service-directory/docs/reference/rpc/google.cloud.servicedirectory.v1#resolveservicerequest.
        /// </summary>
        public readonly string EndpointFilter;
        /// <summary>
        /// The hostname of the EKM replica used at TLS and HTTP layers.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// A list of leaf server certificates used to authenticate HTTPS connections to the EKM replica.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertificateResponse> ServerCertificates;
        /// <summary>
        /// The resource name of the Service Directory service pointing to an EKM replica, in the format `projects/*/locations/*/namespaces/*/services/*`.
        /// </summary>
        public readonly string ServiceDirectoryService;

        [OutputConstructor]
        private ServiceResolverResponse(
            string endpointFilter,

            string hostname,

            ImmutableArray<Outputs.CertificateResponse> serverCertificates,

            string serviceDirectoryService)
        {
            EndpointFilter = endpointFilter;
            Hostname = hostname;
            ServerCertificates = serverCertificates;
            ServiceDirectoryService = serviceDirectoryService;
        }
    }
}
