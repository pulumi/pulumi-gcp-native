// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataflow.V1b3.Outputs
{

    /// <summary>
    /// Data provided with a pipeline or transform to provide descriptive info.
    /// </summary>
    [OutputType]
    public sealed class DisplayDataResponse
    {
        /// <summary>
        /// Contains value if the data is of a boolean type.
        /// </summary>
        public readonly bool BoolValue;
        /// <summary>
        /// Contains value if the data is of duration type.
        /// </summary>
        public readonly string DurationValue;
        /// <summary>
        /// Contains value if the data is of float type.
        /// </summary>
        public readonly double FloatValue;
        /// <summary>
        /// Contains value if the data is of int64 type.
        /// </summary>
        public readonly string Int64Value;
        /// <summary>
        /// Contains value if the data is of java class type.
        /// </summary>
        public readonly string JavaClassValue;
        /// <summary>
        /// The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// An optional label to display in a dax UI for the element.
        /// </summary>
        public readonly string Label;
        /// <summary>
        /// The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
        /// </summary>
        public readonly string ShortStrValue;
        /// <summary>
        /// Contains value if the data is of string type.
        /// </summary>
        public readonly string StrValue;
        /// <summary>
        /// Contains value if the data is of timestamp type.
        /// </summary>
        public readonly string TimestampValue;
        /// <summary>
        /// An optional full URL.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private DisplayDataResponse(
            bool boolValue,

            string durationValue,

            double floatValue,

            string int64Value,

            string javaClassValue,

            string key,

            string label,

            string @namespace,

            string shortStrValue,

            string strValue,

            string timestampValue,

            string url)
        {
            BoolValue = boolValue;
            DurationValue = durationValue;
            FloatValue = floatValue;
            Int64Value = int64Value;
            JavaClassValue = javaClassValue;
            Key = key;
            Label = label;
            Namespace = @namespace;
            ShortStrValue = shortStrValue;
            StrValue = strValue;
            TimestampValue = timestampValue;
            Url = url;
        }
    }
}
