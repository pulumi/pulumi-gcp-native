// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataflow.V1b3.Outputs
{

    /// <summary>
    /// Taskrunner configuration settings.
    /// </summary>
    [OutputType]
    public sealed class TaskRunnerSettingsResponse
    {
        /// <summary>
        /// Whether to also send taskrunner log info to stderr.
        /// </summary>
        public readonly bool Alsologtostderr;
        /// <summary>
        /// The location on the worker for task-specific subdirectories.
        /// </summary>
        public readonly string BaseTaskDir;
        /// <summary>
        /// The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"
        /// </summary>
        public readonly string BaseUrl;
        /// <summary>
        /// The file to store preprocessing commands in.
        /// </summary>
        public readonly string CommandlinesFileName;
        /// <summary>
        /// Whether to continue taskrunner if an exception is hit.
        /// </summary>
        public readonly bool ContinueOnException;
        /// <summary>
        /// The API version of endpoint, e.g. "v1b3"
        /// </summary>
        public readonly string DataflowApiVersion;
        /// <summary>
        /// The command to launch the worker harness.
        /// </summary>
        public readonly string HarnessCommand;
        /// <summary>
        /// The suggested backend language.
        /// </summary>
        public readonly string LanguageHint;
        /// <summary>
        /// The directory on the VM to store logs.
        /// </summary>
        public readonly string LogDir;
        /// <summary>
        /// Whether to send taskrunner log info to Google Compute Engine VM serial console.
        /// </summary>
        public readonly bool LogToSerialconsole;
        /// <summary>
        /// Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
        /// </summary>
        public readonly string LogUploadLocation;
        /// <summary>
        /// The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
        /// </summary>
        public readonly ImmutableArray<string> OauthScopes;
        /// <summary>
        /// The settings to pass to the parallel worker harness.
        /// </summary>
        public readonly Outputs.WorkerSettingsResponse ParallelWorkerSettings;
        /// <summary>
        /// The streaming worker main class name.
        /// </summary>
        public readonly string StreamingWorkerMainClass;
        /// <summary>
        /// The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
        /// </summary>
        public readonly string TaskGroup;
        /// <summary>
        /// The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
        /// </summary>
        public readonly string TaskUser;
        /// <summary>
        /// The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
        /// </summary>
        public readonly string TempStoragePrefix;
        /// <summary>
        /// The ID string of the VM.
        /// </summary>
        public readonly string VmId;
        /// <summary>
        /// The file to store the workflow in.
        /// </summary>
        public readonly string WorkflowFileName;

        [OutputConstructor]
        private TaskRunnerSettingsResponse(
            bool alsologtostderr,

            string baseTaskDir,

            string baseUrl,

            string commandlinesFileName,

            bool continueOnException,

            string dataflowApiVersion,

            string harnessCommand,

            string languageHint,

            string logDir,

            bool logToSerialconsole,

            string logUploadLocation,

            ImmutableArray<string> oauthScopes,

            Outputs.WorkerSettingsResponse parallelWorkerSettings,

            string streamingWorkerMainClass,

            string taskGroup,

            string taskUser,

            string tempStoragePrefix,

            string vmId,

            string workflowFileName)
        {
            Alsologtostderr = alsologtostderr;
            BaseTaskDir = baseTaskDir;
            BaseUrl = baseUrl;
            CommandlinesFileName = commandlinesFileName;
            ContinueOnException = continueOnException;
            DataflowApiVersion = dataflowApiVersion;
            HarnessCommand = harnessCommand;
            LanguageHint = languageHint;
            LogDir = logDir;
            LogToSerialconsole = logToSerialconsole;
            LogUploadLocation = logUploadLocation;
            OauthScopes = oauthScopes;
            ParallelWorkerSettings = parallelWorkerSettings;
            StreamingWorkerMainClass = streamingWorkerMainClass;
            TaskGroup = taskGroup;
            TaskUser = taskUser;
            TempStoragePrefix = tempStoragePrefix;
            VmId = vmId;
            WorkflowFileName = workflowFileName;
        }
    }
}
