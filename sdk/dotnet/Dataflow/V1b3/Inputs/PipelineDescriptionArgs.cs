// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataflow.V1b3.Inputs
{

    /// <summary>
    /// A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
    /// </summary>
    public sealed class PipelineDescriptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("displayData")]
        private InputList<Inputs.DisplayDataArgs>? _displayData;

        /// <summary>
        /// Pipeline level display data.
        /// </summary>
        public InputList<Inputs.DisplayDataArgs> DisplayData
        {
            get => _displayData ?? (_displayData = new InputList<Inputs.DisplayDataArgs>());
            set => _displayData = value;
        }

        [Input("executionPipelineStage")]
        private InputList<Inputs.ExecutionStageSummaryArgs>? _executionPipelineStage;

        /// <summary>
        /// Description of each stage of execution of the pipeline.
        /// </summary>
        public InputList<Inputs.ExecutionStageSummaryArgs> ExecutionPipelineStage
        {
            get => _executionPipelineStage ?? (_executionPipelineStage = new InputList<Inputs.ExecutionStageSummaryArgs>());
            set => _executionPipelineStage = value;
        }

        [Input("originalPipelineTransform")]
        private InputList<Inputs.TransformSummaryArgs>? _originalPipelineTransform;

        /// <summary>
        /// Description of each transform in the pipeline and collections between them.
        /// </summary>
        public InputList<Inputs.TransformSummaryArgs> OriginalPipelineTransform
        {
            get => _originalPipelineTransform ?? (_originalPipelineTransform = new InputList<Inputs.TransformSummaryArgs>());
            set => _originalPipelineTransform = value;
        }

        /// <summary>
        /// A hash value of the submitted pipeline portable graph step names if exists.
        /// </summary>
        [Input("stepNamesHash")]
        public Input<string>? StepNamesHash { get; set; }

        public PipelineDescriptionArgs()
        {
        }
        public static new PipelineDescriptionArgs Empty => new PipelineDescriptionArgs();
    }
}
