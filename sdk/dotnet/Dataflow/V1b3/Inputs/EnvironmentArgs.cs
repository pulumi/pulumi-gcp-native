// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataflow.V1b3.Inputs
{

    /// <summary>
    /// Describes the environment in which a Dataflow Job runs.
    /// </summary>
    public sealed class EnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".
        /// </summary>
        [Input("clusterManagerApiService")]
        public Input<string>? ClusterManagerApiService { get; set; }

        /// <summary>
        /// The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        /// <summary>
        /// Any debugging options to be supplied to the job.
        /// </summary>
        [Input("debugOptions")]
        public Input<Inputs.DebugOptionsArgs>? DebugOptions { get; set; }

        [Input("experiments")]
        private InputList<string>? _experiments;

        /// <summary>
        /// The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
        /// </summary>
        public InputList<string> Experiments
        {
            get => _experiments ?? (_experiments = new InputList<string>());
            set => _experiments = value;
        }

        /// <summary>
        /// Which Flexible Resource Scheduling mode to run in.
        /// </summary>
        [Input("flexResourceSchedulingGoal")]
        public Input<Pulumi.GoogleNative.Dataflow.V1b3.EnvironmentFlexResourceSchedulingGoal>? FlexResourceSchedulingGoal { get; set; }

        [Input("internalExperiments")]
        private InputMap<object>? _internalExperiments;

        /// <summary>
        /// Experimental settings.
        /// </summary>
        public InputMap<object> InternalExperiments
        {
            get => _internalExperiments ?? (_internalExperiments = new InputMap<object>());
            set => _internalExperiments = value;
        }

        [Input("sdkPipelineOptions")]
        private InputMap<object>? _sdkPipelineOptions;

        /// <summary>
        /// The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
        /// </summary>
        public InputMap<object> SdkPipelineOptions
        {
            get => _sdkPipelineOptions ?? (_sdkPipelineOptions = new InputMap<object>());
            set => _sdkPipelineOptions = value;
        }

        /// <summary>
        /// Identity to run virtual machines as. Defaults to the default account.
        /// </summary>
        [Input("serviceAccountEmail")]
        public Input<string>? ServiceAccountEmail { get; set; }

        /// <summary>
        /// If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
        /// </summary>
        [Input("serviceKmsKeyName")]
        public Input<string>? ServiceKmsKeyName { get; set; }

        [Input("serviceOptions")]
        private InputList<string>? _serviceOptions;

        /// <summary>
        /// The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
        /// </summary>
        public InputList<string> ServiceOptions
        {
            get => _serviceOptions ?? (_serviceOptions = new InputList<string>());
            set => _serviceOptions = value;
        }

        /// <summary>
        /// The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
        /// </summary>
        [Input("tempStoragePrefix")]
        public Input<string>? TempStoragePrefix { get; set; }

        [Input("userAgent")]
        private InputMap<object>? _userAgent;

        /// <summary>
        /// A description of the process that generated the request.
        /// </summary>
        public InputMap<object> UserAgent
        {
            get => _userAgent ?? (_userAgent = new InputMap<object>());
            set => _userAgent = value;
        }

        [Input("version")]
        private InputMap<object>? _version;

        /// <summary>
        /// A structure describing which components and their versions of the service are required in order to run the job.
        /// </summary>
        public InputMap<object> Version
        {
            get => _version ?? (_version = new InputMap<object>());
            set => _version = value;
        }

        [Input("workerPools")]
        private InputList<Inputs.WorkerPoolArgs>? _workerPools;

        /// <summary>
        /// The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
        /// </summary>
        public InputList<Inputs.WorkerPoolArgs> WorkerPools
        {
            get => _workerPools ?? (_workerPools = new InputList<Inputs.WorkerPoolArgs>());
            set => _workerPools = value;
        }

        /// <summary>
        /// The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
        /// </summary>
        [Input("workerRegion")]
        public Input<string>? WorkerRegion { get; set; }

        /// <summary>
        /// The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity.
        /// </summary>
        [Input("workerZone")]
        public Input<string>? WorkerZone { get; set; }

        public EnvironmentArgs()
        {
        }
        public static new EnvironmentArgs Empty => new EnvironmentArgs();
    }
}
