// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataflow.V1b3
{
    public static class GetJob
    {
        /// <summary>
        /// Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.
        /// </summary>
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("google-native:dataflow/v1b3:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the state of the specified Cloud Dataflow job. To get the state of a job, we recommend using `projects.locations.jobs.get` with a [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using `projects.jobs.get` is not recommended, as you can only get the state of jobs that are running in `us-central1`.
        /// </summary>
        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("google-native:dataflow/v1b3:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public string JobId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        /// <summary>
        /// The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.
        /// </summary>
        public readonly string ClientRequestId;
        /// <summary>
        /// The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// If this is specified, the job's initial state is populated from the given snapshot.
        /// </summary>
        public readonly string CreatedFromSnapshotId;
        /// <summary>
        /// The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field might be mutated by the Dataflow service; callers cannot mutate it.
        /// </summary>
        public readonly string CurrentState;
        /// <summary>
        /// The timestamp associated with the current state.
        /// </summary>
        public readonly string CurrentStateTime;
        /// <summary>
        /// The environment for the job.
        /// </summary>
        public readonly Outputs.EnvironmentResponse Environment;
        /// <summary>
        /// Deprecated.
        /// </summary>
        public readonly Outputs.JobExecutionInfoResponse ExecutionInfo;
        /// <summary>
        /// This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
        /// </summary>
        public readonly Outputs.JobMetadataResponse JobMetadata;
        /// <summary>
        /// User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be &lt;= 128 bytes in size.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The user-specified Dataflow job name. Only one active job with a given name can exist in a project within one region at any given time. Jobs in different regions can have the same name. If a caller attempts to create a job with the same name as an active job that already exists, the attempt returns the existing job. The name must match the regular expression `[a-z]([-a-z0-9]{0,1022}[a-z0-9])?`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.
        /// </summary>
        public readonly Outputs.PipelineDescriptionResponse PipelineDescription;
        /// <summary>
        /// The ID of the Google Cloud project that the job belongs to.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.
        /// </summary>
        public readonly string ReplaceJobId;
        /// <summary>
        /// If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.
        /// </summary>
        public readonly string ReplacedByJobId;
        /// <summary>
        /// The job's requested state. Applies to `UpdateJob` requests. Set `requested_state` with `UpdateJob` requests to switch between the states `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING`. You can also use `UpdateJob` requests to change a job's state from `JOB_STATE_RUNNING` to `JOB_STATE_CANCELLED`, `JOB_STATE_DONE`, or `JOB_STATE_DRAINED`. These states irrevocably terminate the job if it hasn't already reached a terminal state. This field has no effect on `CreateJob` requests.
        /// </summary>
        public readonly string RequestedState;
        /// <summary>
        /// This field may ONLY be modified at runtime using the projects.jobs.update method to adjust job behavior. This field has no effect when specified at job creation.
        /// </summary>
        public readonly Outputs.RuntimeUpdatableParamsResponse RuntimeUpdatableParams;
        /// <summary>
        /// Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
        /// </summary>
        public readonly bool SatisfiesPzi;
        /// <summary>
        /// Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
        /// </summary>
        public readonly bool SatisfiesPzs;
        /// <summary>
        /// This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
        /// </summary>
        public readonly ImmutableArray<Outputs.ExecutionStageStateResponse> StageStates;
        /// <summary>
        /// The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
        /// </summary>
        public readonly ImmutableArray<Outputs.StepResponse> Steps;
        /// <summary>
        /// The Cloud Storage location where the steps are stored.
        /// </summary>
        public readonly string StepsLocation;
        /// <summary>
        /// A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
        /// </summary>
        public readonly ImmutableArray<string> TempFiles;
        /// <summary>
        /// The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
        /// </summary>
        public readonly ImmutableDictionary<string, string> TransformNameMapping;
        /// <summary>
        /// The type of Dataflow job.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetJobResult(
            string clientRequestId,

            string createTime,

            string createdFromSnapshotId,

            string currentState,

            string currentStateTime,

            Outputs.EnvironmentResponse environment,

            Outputs.JobExecutionInfoResponse executionInfo,

            Outputs.JobMetadataResponse jobMetadata,

            ImmutableDictionary<string, string> labels,

            string location,

            string name,

            Outputs.PipelineDescriptionResponse pipelineDescription,

            string project,

            string replaceJobId,

            string replacedByJobId,

            string requestedState,

            Outputs.RuntimeUpdatableParamsResponse runtimeUpdatableParams,

            bool satisfiesPzi,

            bool satisfiesPzs,

            ImmutableArray<Outputs.ExecutionStageStateResponse> stageStates,

            string startTime,

            ImmutableArray<Outputs.StepResponse> steps,

            string stepsLocation,

            ImmutableArray<string> tempFiles,

            ImmutableDictionary<string, string> transformNameMapping,

            string type)
        {
            ClientRequestId = clientRequestId;
            CreateTime = createTime;
            CreatedFromSnapshotId = createdFromSnapshotId;
            CurrentState = currentState;
            CurrentStateTime = currentStateTime;
            Environment = environment;
            ExecutionInfo = executionInfo;
            JobMetadata = jobMetadata;
            Labels = labels;
            Location = location;
            Name = name;
            PipelineDescription = pipelineDescription;
            Project = project;
            ReplaceJobId = replaceJobId;
            ReplacedByJobId = replacedByJobId;
            RequestedState = requestedState;
            RuntimeUpdatableParams = runtimeUpdatableParams;
            SatisfiesPzi = satisfiesPzi;
            SatisfiesPzs = satisfiesPzs;
            StageStates = stageStates;
            StartTime = startTime;
            Steps = steps;
            StepsLocation = stepsLocation;
            TempFiles = tempFiles;
            TransformNameMapping = transformNameMapping;
            Type = type;
        }
    }
}
