// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Datamigration.V1.Outputs
{

    /// <summary>
    /// Description of data transformation during migration as part of the ConditionalColumnSetValue.
    /// </summary>
    [OutputType]
    public sealed class ValueTransformationResponse
    {
        /// <summary>
        /// Optional. Applies a hash function on the data
        /// </summary>
        public readonly Outputs.ApplyHashResponse ApplyHash;
        /// <summary>
        /// Optional. Set to max_value - if integer or numeric, will use int.maxvalue, etc
        /// </summary>
        public readonly Outputs.EmptyResponse AssignMaxValue;
        /// <summary>
        /// Optional. Set to min_value - if integer or numeric, will use int.minvalue, etc
        /// </summary>
        public readonly Outputs.EmptyResponse AssignMinValue;
        /// <summary>
        /// Optional. Set to null
        /// </summary>
        public readonly Outputs.EmptyResponse AssignNull;
        /// <summary>
        /// Optional. Set to a specific value (value is converted to fit the target data type)
        /// </summary>
        public readonly Outputs.AssignSpecificValueResponse AssignSpecificValue;
        /// <summary>
        /// Optional. Filter on relation between source value and compare value of type double.
        /// </summary>
        public readonly Outputs.DoubleComparisonFilterResponse DoubleComparison;
        /// <summary>
        /// Optional. Filter on relation between source value and compare value of type integer.
        /// </summary>
        public readonly Outputs.IntComparisonFilterResponse IntComparison;
        /// <summary>
        /// Optional. Value is null
        /// </summary>
        public readonly Outputs.EmptyResponse IsNull;
        /// <summary>
        /// Optional. Allows the data to change scale
        /// </summary>
        public readonly Outputs.RoundToScaleResponse RoundScale;
        /// <summary>
        /// Optional. Value is found in the specified list.
        /// </summary>
        public readonly Outputs.ValueListFilterResponse ValueList;

        [OutputConstructor]
        private ValueTransformationResponse(
            Outputs.ApplyHashResponse applyHash,

            Outputs.EmptyResponse assignMaxValue,

            Outputs.EmptyResponse assignMinValue,

            Outputs.EmptyResponse assignNull,

            Outputs.AssignSpecificValueResponse assignSpecificValue,

            Outputs.DoubleComparisonFilterResponse doubleComparison,

            Outputs.IntComparisonFilterResponse intComparison,

            Outputs.EmptyResponse isNull,

            Outputs.RoundToScaleResponse roundScale,

            Outputs.ValueListFilterResponse valueList)
        {
            ApplyHash = applyHash;
            AssignMaxValue = assignMaxValue;
            AssignMinValue = assignMinValue;
            AssignNull = assignNull;
            AssignSpecificValue = assignSpecificValue;
            DoubleComparison = doubleComparison;
            IntComparison = intComparison;
            IsNull = isNull;
            RoundScale = roundScale;
            ValueList = valueList;
        }
    }
}
