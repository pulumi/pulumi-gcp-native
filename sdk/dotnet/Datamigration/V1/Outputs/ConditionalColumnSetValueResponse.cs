// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Datamigration.V1.Outputs
{

    /// <summary>
    /// Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.
    /// </summary>
    [OutputType]
    public sealed class ConditionalColumnSetValueResponse
    {
        /// <summary>
        /// Optional. Custom engine specific features.
        /// </summary>
        public readonly ImmutableDictionary<string, object> CustomFeatures;
        /// <summary>
        /// Optional. Optional filter on source column precision and scale. Used for fixed point numbers such as NUMERIC/NUMBER data types.
        /// </summary>
        public readonly Outputs.SourceNumericFilterResponse SourceNumericFilter;
        /// <summary>
        /// Optional. Optional filter on source column length. Used for text based data types like varchar.
        /// </summary>
        public readonly Outputs.SourceTextFilterResponse SourceTextFilter;
        /// <summary>
        /// Description of data transformation during migration.
        /// </summary>
        public readonly Outputs.ValueTransformationResponse ValueTransformation;

        [OutputConstructor]
        private ConditionalColumnSetValueResponse(
            ImmutableDictionary<string, object> customFeatures,

            Outputs.SourceNumericFilterResponse sourceNumericFilter,

            Outputs.SourceTextFilterResponse sourceTextFilter,

            Outputs.ValueTransformationResponse valueTransformation)
        {
            CustomFeatures = customFeatures;
            SourceNumericFilter = sourceNumericFilter;
            SourceTextFilter = sourceTextFilter;
            ValueTransformation = valueTransformation;
        }
    }
}
