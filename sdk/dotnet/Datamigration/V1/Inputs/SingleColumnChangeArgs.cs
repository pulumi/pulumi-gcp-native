// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Datamigration.V1.Inputs
{

    /// <summary>
    /// Options to configure rule type SingleColumnChange. The rule is used to change the properties of a column. The rule filter field can refer to one entity. The rule scope can be one of: Column. When using this rule, if a field is not specified than the destination column's configuration will be the same as the one in the source column..
    /// </summary>
    public sealed class SingleColumnChangeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Is the column of array type.
        /// </summary>
        [Input("array")]
        public Input<bool>? Array { get; set; }

        /// <summary>
        /// Optional. The length of the array, only relevant if the column type is an array.
        /// </summary>
        [Input("arrayLength")]
        public Input<int>? ArrayLength { get; set; }

        /// <summary>
        /// Optional. Is the column auto-generated/identity.
        /// </summary>
        [Input("autoGenerated")]
        public Input<bool>? AutoGenerated { get; set; }

        /// <summary>
        /// Optional. Charset override - instead of table level charset.
        /// </summary>
        [Input("charset")]
        public Input<string>? Charset { get; set; }

        /// <summary>
        /// Optional. Collation override - instead of table level collation.
        /// </summary>
        [Input("collation")]
        public Input<string>? Collation { get; set; }

        /// <summary>
        /// Optional. Comment associated with the column.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("customFeatures")]
        private InputMap<object>? _customFeatures;

        /// <summary>
        /// Optional. Custom engine specific features.
        /// </summary>
        public InputMap<object> CustomFeatures
        {
            get => _customFeatures ?? (_customFeatures = new InputMap<object>());
            set => _customFeatures = value;
        }

        /// <summary>
        /// Optional. Column data type name.
        /// </summary>
        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        /// <summary>
        /// Optional. Column fractional seconds precision - e.g. 2 as in timestamp (2) - when relevant.
        /// </summary>
        [Input("fractionalSecondsPrecision")]
        public Input<int>? FractionalSecondsPrecision { get; set; }

        /// <summary>
        /// Optional. Column length - e.g. 50 as in varchar (50) - when relevant.
        /// </summary>
        [Input("length")]
        public Input<string>? Length { get; set; }

        /// <summary>
        /// Optional. Is the column nullable.
        /// </summary>
        [Input("nullable")]
        public Input<bool>? Nullable { get; set; }

        /// <summary>
        /// Optional. Column precision - e.g. 8 as in double (8,2) - when relevant.
        /// </summary>
        [Input("precision")]
        public Input<int>? Precision { get; set; }

        /// <summary>
        /// Optional. Column scale - e.g. 2 as in double (8,2) - when relevant.
        /// </summary>
        [Input("scale")]
        public Input<int>? Scale { get; set; }

        [Input("setValues")]
        private InputList<string>? _setValues;

        /// <summary>
        /// Optional. Specifies the list of values allowed in the column.
        /// </summary>
        public InputList<string> SetValues
        {
            get => _setValues ?? (_setValues = new InputList<string>());
            set => _setValues = value;
        }

        /// <summary>
        /// Optional. Is the column a UDT (User-defined Type).
        /// </summary>
        [Input("udt")]
        public Input<bool>? Udt { get; set; }

        public SingleColumnChangeArgs()
        {
        }
        public static new SingleColumnChangeArgs Empty => new SingleColumnChangeArgs();
    }
}
