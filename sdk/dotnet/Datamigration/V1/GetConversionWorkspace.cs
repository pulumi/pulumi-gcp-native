// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Datamigration.V1
{
    public static class GetConversionWorkspace
    {
        /// <summary>
        /// Gets details of a single conversion workspace.
        /// </summary>
        public static Task<GetConversionWorkspaceResult> InvokeAsync(GetConversionWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConversionWorkspaceResult>("google-native:datamigration/v1:getConversionWorkspace", args ?? new GetConversionWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single conversion workspace.
        /// </summary>
        public static Output<GetConversionWorkspaceResult> Invoke(GetConversionWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConversionWorkspaceResult>("google-native:datamigration/v1:getConversionWorkspace", args ?? new GetConversionWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConversionWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("conversionWorkspaceId", required: true)]
        public string ConversionWorkspaceId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetConversionWorkspaceArgs()
        {
        }
        public static new GetConversionWorkspaceArgs Empty => new GetConversionWorkspaceArgs();
    }

    public sealed class GetConversionWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("conversionWorkspaceId", required: true)]
        public Input<string> ConversionWorkspaceId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetConversionWorkspaceInvokeArgs()
        {
        }
        public static new GetConversionWorkspaceInvokeArgs Empty => new GetConversionWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetConversionWorkspaceResult
    {
        /// <summary>
        /// The timestamp when the workspace resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The destination engine details.
        /// </summary>
        public readonly Outputs.DatabaseEngineInfoResponse Destination;
        /// <summary>
        /// The display name for the workspace.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true
        /// </summary>
        public readonly ImmutableDictionary<string, string> GlobalSettings;
        /// <summary>
        /// Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).
        /// </summary>
        public readonly bool HasUncommittedChanges;
        /// <summary>
        /// The latest commit ID.
        /// </summary>
        public readonly string LatestCommitId;
        /// <summary>
        /// The timestamp when the workspace was committed.
        /// </summary>
        public readonly string LatestCommitTime;
        /// <summary>
        /// Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The source engine details.
        /// </summary>
        public readonly Outputs.DatabaseEngineInfoResponse Source;
        /// <summary>
        /// The timestamp when the workspace resource was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetConversionWorkspaceResult(
            string createTime,

            Outputs.DatabaseEngineInfoResponse destination,

            string displayName,

            ImmutableDictionary<string, string> globalSettings,

            bool hasUncommittedChanges,

            string latestCommitId,

            string latestCommitTime,

            string name,

            Outputs.DatabaseEngineInfoResponse source,

            string updateTime)
        {
            CreateTime = createTime;
            Destination = destination;
            DisplayName = displayName;
            GlobalSettings = globalSettings;
            HasUncommittedChanges = hasUncommittedChanges;
            LatestCommitId = latestCommitId;
            LatestCommitTime = latestCommitTime;
            Name = name;
            Source = source;
            UpdateTime = updateTime;
        }
    }
}
