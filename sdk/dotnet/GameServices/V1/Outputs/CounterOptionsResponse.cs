// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GameServices.V1.Outputs
{

    /// <summary>
    /// Increment a streamz counter with the specified metric and field names. Metric names should start with a '/', generally be lowercase-only, and end in "_count". Field names should not contain an initial slash. The actual exported metric names will have "/iam/policy" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - "authority", which is "[token]" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - "iam_principal", a representation of IAMContext.principal even if a token or authority selector is present; or - "" (empty string), resulting in a counter with no fields. Examples: counter { metric: "/debug_access_count" field: "iam_principal" } ==&gt; increment counter /iam/policy/debug_access_count {iam_principal=[value of IAMContext.principal]}
    /// </summary>
    [OutputType]
    public sealed class CounterOptionsResponse
    {
        /// <summary>
        /// Custom fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.CustomFieldResponse> CustomFields;
        /// <summary>
        /// The field value to attribute.
        /// </summary>
        public readonly string Field;
        /// <summary>
        /// The metric to update.
        /// </summary>
        public readonly string Metric;

        [OutputConstructor]
        private CounterOptionsResponse(
            ImmutableArray<Outputs.CustomFieldResponse> customFields,

            string field,

            string metric)
        {
            CustomFields = customFields;
            Field = field;
            Metric = metric;
        }
    }
}
