// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.GameServices.V1Beta
{
    public static class GetRealm
    {
        /// <summary>
        /// Gets details of a single realm.
        /// </summary>
        public static Task<GetRealmResult> InvokeAsync(GetRealmArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRealmResult>("google-native:gameservices/v1beta:getRealm", args ?? new GetRealmArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single realm.
        /// </summary>
        public static Output<GetRealmResult> Invoke(GetRealmInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRealmResult>("google-native:gameservices/v1beta:getRealm", args ?? new GetRealmInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRealmArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("realmId", required: true)]
        public string RealmId { get; set; } = null!;

        public GetRealmArgs()
        {
        }
    }

    public sealed class GetRealmInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        public GetRealmInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRealmResult
    {
        /// <summary>
        /// The creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Human readable description of the realm.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The labels associated with this realm. Each label is a key-value pair.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name of the realm, in the following form: `projects/{project}/locations/{location}/realms/{realm}`. For example, `projects/my-project/locations/{location}/realms/my-realm`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Time zone where all policies targeting this realm are evaluated. The value of this field must be from the IANA time zone database: https://www.iana.org/time-zones.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// The last-modified time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetRealmResult(
            string createTime,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string timeZone,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            TimeZone = timeZone;
            UpdateTime = updateTime;
        }
    }
}
