// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AlloyDB.V1.Outputs
{

    /// <summary>
    /// Message describing the user-specified automated backup policy. All fields in the automated backup policy are optional. Defaults for each field are provided if they are not set.
    /// </summary>
    [OutputType]
    public sealed class AutomatedBackupPolicyResponse
    {
        /// <summary>
        /// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1 hour.
        /// </summary>
        public readonly string BackupWindow;
        /// <summary>
        /// Whether automated automated backups are enabled. If not set, defaults to true.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Optional. The encryption config can be specified to encrypt the backups with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
        /// </summary>
        public readonly Outputs.EncryptionConfigResponse EncryptionConfig;
        /// <summary>
        /// Labels to apply to backups created using this configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Quantity-based Backup retention policy to retain recent backups.
        /// </summary>
        public readonly Outputs.QuantityBasedRetentionResponse QuantityBasedRetention;
        /// <summary>
        /// Time-based Backup retention policy.
        /// </summary>
        public readonly Outputs.TimeBasedRetentionResponse TimeBasedRetention;
        /// <summary>
        /// Weekly schedule for the Backup.
        /// </summary>
        public readonly Outputs.WeeklyScheduleResponse WeeklySchedule;

        [OutputConstructor]
        private AutomatedBackupPolicyResponse(
            string backupWindow,

            bool enabled,

            Outputs.EncryptionConfigResponse encryptionConfig,

            ImmutableDictionary<string, string> labels,

            string location,

            Outputs.QuantityBasedRetentionResponse quantityBasedRetention,

            Outputs.TimeBasedRetentionResponse timeBasedRetention,

            Outputs.WeeklyScheduleResponse weeklySchedule)
        {
            BackupWindow = backupWindow;
            Enabled = enabled;
            EncryptionConfig = encryptionConfig;
            Labels = labels;
            Location = location;
            QuantityBasedRetention = quantityBasedRetention;
            TimeBasedRetention = timeBasedRetention;
            WeeklySchedule = weeklySchedule;
        }
    }
}
