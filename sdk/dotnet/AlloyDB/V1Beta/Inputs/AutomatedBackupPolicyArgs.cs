// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AlloyDB.V1Beta.Inputs
{

    /// <summary>
    /// Message describing the user-specified automated backup policy. All fields in the automated backup policy are optional. Defaults for each field are provided if they are not set.
    /// </summary>
    public sealed class AutomatedBackupPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it defaults to 1 hour.
        /// </summary>
        [Input("backupWindow")]
        public Input<string>? BackupWindow { get; set; }

        /// <summary>
        /// Whether automated automated backups are enabled. If not set, defaults to true.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Optional. The encryption config can be specified to encrypt the backups with a customer-managed encryption key (CMEK). When this field is not specified, the backup will then use default encryption scheme to protect the user data.
        /// </summary>
        [Input("encryptionConfig")]
        public Input<Inputs.EncryptionConfigArgs>? EncryptionConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to backups created using this configuration.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster. If empty, defaults to the region of the cluster.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Quantity-based Backup retention policy to retain recent backups.
        /// </summary>
        [Input("quantityBasedRetention")]
        public Input<Inputs.QuantityBasedRetentionArgs>? QuantityBasedRetention { get; set; }

        /// <summary>
        /// Time-based Backup retention policy.
        /// </summary>
        [Input("timeBasedRetention")]
        public Input<Inputs.TimeBasedRetentionArgs>? TimeBasedRetention { get; set; }

        /// <summary>
        /// Weekly schedule for the Backup.
        /// </summary>
        [Input("weeklySchedule")]
        public Input<Inputs.WeeklyScheduleArgs>? WeeklySchedule { get; set; }

        public AutomatedBackupPolicyArgs()
        {
        }
        public static new AutomatedBackupPolicyArgs Empty => new AutomatedBackupPolicyArgs();
    }
}
