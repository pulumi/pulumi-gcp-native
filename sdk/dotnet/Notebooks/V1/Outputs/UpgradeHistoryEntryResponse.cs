// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Notebooks.V1.Outputs
{

    /// <summary>
    /// The entry of VM image upgrade history.
    /// </summary>
    [OutputType]
    public sealed class UpgradeHistoryEntryResponse
    {
        /// <summary>
        /// Action. Rolloback or Upgrade.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// The container image before this instance upgrade.
        /// </summary>
        public readonly string ContainerImage;
        /// <summary>
        /// The time that this instance upgrade history entry is created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The framework of this notebook instance.
        /// </summary>
        public readonly string Framework;
        /// <summary>
        /// The snapshot of the boot disk of this notebook instance before upgrade.
        /// </summary>
        public readonly string Snapshot;
        /// <summary>
        /// The state of this instance upgrade history entry.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Target VM Image. Format: ainotebooks-vm/project/image-name/name.
        /// </summary>
        public readonly string TargetImage;
        /// <summary>
        /// Target VM Version, like m63.
        /// </summary>
        public readonly string TargetVersion;
        /// <summary>
        /// The version of the notebook instance before this upgrade.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The VM image before this instance upgrade.
        /// </summary>
        public readonly string VmImage;

        [OutputConstructor]
        private UpgradeHistoryEntryResponse(
            string action,

            string containerImage,

            string createTime,

            string framework,

            string snapshot,

            string state,

            string targetImage,

            string targetVersion,

            string version,

            string vmImage)
        {
            Action = action;
            ContainerImage = containerImage;
            CreateTime = createTime;
            Framework = framework;
            Snapshot = snapshot;
            State = state;
            TargetImage = targetImage;
            TargetVersion = targetVersion;
            Version = version;
            VmImage = vmImage;
        }
    }
}
