// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2
{
    public static class GetJob
    {
        /// <summary>
        /// Returns information about a specific job. Job information is available for a six month period after creation. Requires that you're the person who ran the job, or have the Is Owner project role.
        /// </summary>
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("google-native:bigquery/v2:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        /// <summary>
        /// Returns information about a specific job. Job information is available for a six month period after creation. Requires that you're the person who ran the job, or have the Is Owner project role.
        /// </summary>
        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("google-native:bigquery/v2:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public string JobId { get; set; } = null!;

        [Input("location")]
        public string? Location { get; set; }

        [Input("project")]
        public string? Project { get; set; }

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        /// <summary>
        /// [Required] Describes the job configuration.
        /// </summary>
        public readonly Outputs.JobConfigurationResponse Configuration;
        /// <summary>
        /// A hash of this resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// If set, it provides the reason why a Job was created. If not set, it should be treated as the default: REQUESTED. This feature is not yet available. Jobs will always be created.
        /// </summary>
        public readonly object JobCreationReason;
        /// <summary>
        /// [Optional] Reference describing the unique-per-user name of the job.
        /// </summary>
        public readonly Outputs.JobReferenceResponse JobReference;
        /// <summary>
        /// The type of the resource.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// A URL that can be used to access this resource again.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// Information about the job, including starting time and ending time of the job.
        /// </summary>
        public readonly Outputs.JobStatisticsResponse Statistics;
        /// <summary>
        /// The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.
        /// </summary>
        public readonly Outputs.JobStatusResponse Status;
        /// <summary>
        /// Email address of the user who ran the job.
        /// </summary>
        public readonly string UserEmail;

        [OutputConstructor]
        private GetJobResult(
            Outputs.JobConfigurationResponse configuration,

            string etag,

            object jobCreationReason,

            Outputs.JobReferenceResponse jobReference,

            string kind,

            string selfLink,

            Outputs.JobStatisticsResponse statistics,

            Outputs.JobStatusResponse status,

            string userEmail)
        {
            Configuration = configuration;
            Etag = etag;
            JobCreationReason = jobCreationReason;
            JobReference = jobReference;
            Kind = kind;
            SelfLink = selfLink;
            Statistics = statistics;
            Status = status;
            UserEmail = userEmail;
        }
    }
}
