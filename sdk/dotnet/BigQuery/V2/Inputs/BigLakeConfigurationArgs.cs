// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Inputs
{

    /// <summary>
    /// Configuration for BigLake managed tables.
    /// </summary>
    public sealed class BigLakeConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The connection specifying the credentials to be used to read and write to external storage, such as Cloud Storage. The connection_id can have the form "&lt;project\_id&gt;.&lt;location\_id&gt;.&lt;connection\_id&gt;" or "projects/&lt;project\_id&gt;/locations/&lt;location\_id&gt;/connections/&lt;connection\_id&gt;".
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// The file format the table data is stored in.
        /// </summary>
        [Input("fileFormat", required: true)]
        public Input<Pulumi.GoogleNative.BigQuery.V2.BigLakeConfigurationFileFormat> FileFormat { get; set; } = null!;

        /// <summary>
        /// The fully qualified location prefix of the external folder where table data is stored. The '*' wildcard character is not allowed. The URI should be in the format "gs://bucket/path_to_table/"
        /// </summary>
        [Input("storageUri", required: true)]
        public Input<string> StorageUri { get; set; } = null!;

        /// <summary>
        /// The table format the metadata only snapshots are stored in.
        /// </summary>
        [Input("tableFormat", required: true)]
        public Input<Pulumi.GoogleNative.BigQuery.V2.BigLakeConfigurationTableFormat> TableFormat { get; set; } = null!;

        public BigLakeConfigurationArgs()
        {
        }
        public static new BigLakeConfigurationArgs Empty => new BigLakeConfigurationArgs();
    }
}
