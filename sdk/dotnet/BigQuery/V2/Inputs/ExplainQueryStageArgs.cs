// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Inputs
{

    public sealed class ExplainQueryStageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of parallel input segments completed.
        /// </summary>
        [Input("completedParallelInputs")]
        public Input<string>? CompletedParallelInputs { get; set; }

        /// <summary>
        /// Milliseconds the average shard spent on CPU-bound tasks.
        /// </summary>
        [Input("computeMsAvg")]
        public Input<string>? ComputeMsAvg { get; set; }

        /// <summary>
        /// Milliseconds the slowest shard spent on CPU-bound tasks.
        /// </summary>
        [Input("computeMsMax")]
        public Input<string>? ComputeMsMax { get; set; }

        /// <summary>
        /// Relative amount of time the average shard spent on CPU-bound tasks.
        /// </summary>
        [Input("computeRatioAvg")]
        public Input<double>? ComputeRatioAvg { get; set; }

        /// <summary>
        /// Relative amount of time the slowest shard spent on CPU-bound tasks.
        /// </summary>
        [Input("computeRatioMax")]
        public Input<double>? ComputeRatioMax { get; set; }

        /// <summary>
        /// Stage end time represented as milliseconds since epoch.
        /// </summary>
        [Input("endMs")]
        public Input<string>? EndMs { get; set; }

        /// <summary>
        /// Unique ID for stage within plan.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("inputStages")]
        private InputList<string>? _inputStages;

        /// <summary>
        /// IDs for stages that are inputs to this stage.
        /// </summary>
        public InputList<string> InputStages
        {
            get => _inputStages ?? (_inputStages = new InputList<string>());
            set => _inputStages = value;
        }

        /// <summary>
        /// Human-readable name for stage.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of parallel input segments to be processed.
        /// </summary>
        [Input("parallelInputs")]
        public Input<string>? ParallelInputs { get; set; }

        /// <summary>
        /// Milliseconds the average shard spent reading input.
        /// </summary>
        [Input("readMsAvg")]
        public Input<string>? ReadMsAvg { get; set; }

        /// <summary>
        /// Milliseconds the slowest shard spent reading input.
        /// </summary>
        [Input("readMsMax")]
        public Input<string>? ReadMsMax { get; set; }

        /// <summary>
        /// Relative amount of time the average shard spent reading input.
        /// </summary>
        [Input("readRatioAvg")]
        public Input<double>? ReadRatioAvg { get; set; }

        /// <summary>
        /// Relative amount of time the slowest shard spent reading input.
        /// </summary>
        [Input("readRatioMax")]
        public Input<double>? ReadRatioMax { get; set; }

        /// <summary>
        /// Number of records read into the stage.
        /// </summary>
        [Input("recordsRead")]
        public Input<string>? RecordsRead { get; set; }

        /// <summary>
        /// Number of records written by the stage.
        /// </summary>
        [Input("recordsWritten")]
        public Input<string>? RecordsWritten { get; set; }

        /// <summary>
        /// Total number of bytes written to shuffle.
        /// </summary>
        [Input("shuffleOutputBytes")]
        public Input<string>? ShuffleOutputBytes { get; set; }

        /// <summary>
        /// Total number of bytes written to shuffle and spilled to disk.
        /// </summary>
        [Input("shuffleOutputBytesSpilled")]
        public Input<string>? ShuffleOutputBytesSpilled { get; set; }

        /// <summary>
        /// Slot-milliseconds used by the stage.
        /// </summary>
        [Input("slotMs")]
        public Input<string>? SlotMs { get; set; }

        /// <summary>
        /// Stage start time represented as milliseconds since epoch.
        /// </summary>
        [Input("startMs")]
        public Input<string>? StartMs { get; set; }

        /// <summary>
        /// Current status for the stage.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("steps")]
        private InputList<Inputs.ExplainQueryStepArgs>? _steps;

        /// <summary>
        /// List of operations within the stage in dependency order (approximately chronological).
        /// </summary>
        public InputList<Inputs.ExplainQueryStepArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.ExplainQueryStepArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// Milliseconds the average shard spent waiting to be scheduled.
        /// </summary>
        [Input("waitMsAvg")]
        public Input<string>? WaitMsAvg { get; set; }

        /// <summary>
        /// Milliseconds the slowest shard spent waiting to be scheduled.
        /// </summary>
        [Input("waitMsMax")]
        public Input<string>? WaitMsMax { get; set; }

        /// <summary>
        /// Relative amount of time the average shard spent waiting to be scheduled.
        /// </summary>
        [Input("waitRatioAvg")]
        public Input<double>? WaitRatioAvg { get; set; }

        /// <summary>
        /// Relative amount of time the slowest shard spent waiting to be scheduled.
        /// </summary>
        [Input("waitRatioMax")]
        public Input<double>? WaitRatioMax { get; set; }

        /// <summary>
        /// Milliseconds the average shard spent on writing output.
        /// </summary>
        [Input("writeMsAvg")]
        public Input<string>? WriteMsAvg { get; set; }

        /// <summary>
        /// Milliseconds the slowest shard spent on writing output.
        /// </summary>
        [Input("writeMsMax")]
        public Input<string>? WriteMsMax { get; set; }

        /// <summary>
        /// Relative amount of time the average shard spent on writing output.
        /// </summary>
        [Input("writeRatioAvg")]
        public Input<double>? WriteRatioAvg { get; set; }

        /// <summary>
        /// Relative amount of time the slowest shard spent on writing output.
        /// </summary>
        [Input("writeRatioMax")]
        public Input<double>? WriteRatioMax { get; set; }

        public ExplainQueryStageArgs()
        {
        }
    }
}
