// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Inputs
{

    public sealed class JobConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Pick one] Copies a table.
        /// </summary>
        [Input("copy")]
        public Input<Inputs.JobConfigurationTableCopyArgs>? Copy { get; set; }

        /// <summary>
        /// [Optional] If set, don't actually run this job. A valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn't a dry run. Behavior of non-query jobs is undefined.
        /// </summary>
        [Input("dryRun")]
        public Input<bool>? DryRun { get; set; }

        /// <summary>
        /// [Pick one] Configures an extract job.
        /// </summary>
        [Input("extract")]
        public Input<Inputs.JobConfigurationExtractArgs>? Extract { get; set; }

        /// <summary>
        /// [Optional] Job timeout in milliseconds. If this time limit is exceeded, BigQuery may attempt to terminate the job.
        /// </summary>
        [Input("jobTimeoutMs")]
        public Input<string>? JobTimeoutMs { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The labels associated with this job. You can use these to organize and group your jobs. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// [Pick one] Configures a load job.
        /// </summary>
        [Input("load")]
        public Input<Inputs.JobConfigurationLoadArgs>? Load { get; set; }

        /// <summary>
        /// [Pick one] Configures a query job.
        /// </summary>
        [Input("query")]
        public Input<Inputs.JobConfigurationQueryArgs>? Query { get; set; }

        public JobConfigurationArgs()
        {
        }
    }
}
