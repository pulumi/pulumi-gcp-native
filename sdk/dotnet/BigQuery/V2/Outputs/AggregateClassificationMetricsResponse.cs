// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Outputs
{

    /// <summary>
    /// Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
    /// </summary>
    [OutputType]
    public sealed class AggregateClassificationMetricsResponse
    {
        /// <summary>
        /// Accuracy is the fraction of predictions given the correct label. For multiclass this is a micro-averaged metric.
        /// </summary>
        public readonly double Accuracy;
        /// <summary>
        /// The F1 score is an average of recall and precision. For multiclass this is a macro-averaged metric.
        /// </summary>
        public readonly double F1Score;
        /// <summary>
        /// Logarithmic Loss. For multiclass this is a macro-averaged metric.
        /// </summary>
        public readonly double LogLoss;
        /// <summary>
        /// Precision is the fraction of actual positive predictions that had positive actual labels. For multiclass this is a macro-averaged metric treating each class as a binary classifier.
        /// </summary>
        public readonly double Precision;
        /// <summary>
        /// Recall is the fraction of actual positive labels that were given a positive prediction. For multiclass this is a macro-averaged metric.
        /// </summary>
        public readonly double Recall;
        /// <summary>
        /// Area Under a ROC Curve. For multiclass this is a macro-averaged metric.
        /// </summary>
        public readonly double RocAuc;
        /// <summary>
        /// Threshold at which the metrics are computed. For binary classification models this is the positive class threshold. For multi-class classfication models this is the confidence threshold.
        /// </summary>
        public readonly double Threshold;

        [OutputConstructor]
        private AggregateClassificationMetricsResponse(
            double accuracy,

            double f1Score,

            double logLoss,

            double precision,

            double recall,

            double rocAuc,

            double threshold)
        {
            Accuracy = accuracy;
            F1Score = f1Score;
            LogLoss = logLoss;
            Precision = precision;
            Recall = recall;
            RocAuc = rocAuc;
            Threshold = threshold;
        }
    }
}
