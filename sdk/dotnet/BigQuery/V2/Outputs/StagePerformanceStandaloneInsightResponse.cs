// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Outputs
{

    /// <summary>
    /// Standalone performance insights for a specific stage.
    /// </summary>
    [OutputType]
    public sealed class StagePerformanceStandaloneInsightResponse
    {
        /// <summary>
        /// If present, the stage had the following reasons for being disqualified from BI Engine execution.
        /// </summary>
        public readonly ImmutableArray<Outputs.BiEngineReasonResponse> BiEngineReasons;
        /// <summary>
        /// High cardinality joins in the stage.
        /// </summary>
        public readonly ImmutableArray<Outputs.HighCardinalityJoinResponse> HighCardinalityJoins;
        /// <summary>
        /// True if the stage has insufficient shuffle quota.
        /// </summary>
        public readonly bool InsufficientShuffleQuota;
        /// <summary>
        /// True if the stage has a slot contention issue.
        /// </summary>
        public readonly bool SlotContention;
        /// <summary>
        /// The stage id that the insight mapped to.
        /// </summary>
        public readonly string StageId;

        [OutputConstructor]
        private StagePerformanceStandaloneInsightResponse(
            ImmutableArray<Outputs.BiEngineReasonResponse> biEngineReasons,

            ImmutableArray<Outputs.HighCardinalityJoinResponse> highCardinalityJoins,

            bool insufficientShuffleQuota,

            bool slotContention,

            string stageId)
        {
            BiEngineReasons = biEngineReasons;
            HighCardinalityJoins = highCardinalityJoins;
            InsufficientShuffleQuota = insufficientShuffleQuota;
            SlotContention = slotContention;
            StageId = stageId;
        }
    }
}
