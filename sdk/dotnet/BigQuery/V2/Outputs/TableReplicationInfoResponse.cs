// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Outputs
{

    /// <summary>
    /// Replication info of a table created using `AS REPLICA` DDL like: `CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv`
    /// </summary>
    [OutputType]
    public sealed class TableReplicationInfoResponse
    {
        /// <summary>
        /// Optional. Output only. If source is a materialized view, this field signifies the last refresh time of the source.
        /// </summary>
        public readonly string ReplicatedSourceLastRefreshTime;
        /// <summary>
        /// Optional. Output only. Replication error that will permanently stopped table replication.
        /// </summary>
        public readonly Outputs.ErrorProtoResponse ReplicationError;
        /// <summary>
        /// Specifies the interval at which the source table is polled for updates.
        /// </summary>
        public readonly string ReplicationIntervalMs;
        /// <summary>
        /// Optional. Output only. Replication status of configured replication.
        /// </summary>
        public readonly string ReplicationStatus;
        /// <summary>
        /// Source table reference that is replicated.
        /// </summary>
        public readonly Outputs.TableReferenceResponse SourceTable;

        [OutputConstructor]
        private TableReplicationInfoResponse(
            string replicatedSourceLastRefreshTime,

            Outputs.ErrorProtoResponse replicationError,

            string replicationIntervalMs,

            string replicationStatus,

            Outputs.TableReferenceResponse sourceTable)
        {
            ReplicatedSourceLastRefreshTime = replicatedSourceLastRefreshTime;
            ReplicationError = replicationError;
            ReplicationIntervalMs = replicationIntervalMs;
            ReplicationStatus = replicationStatus;
            SourceTable = sourceTable;
        }
    }
}
