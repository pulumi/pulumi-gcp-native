// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Outputs
{

    [OutputType]
    public sealed class TimePartitioningResponse
    {
        /// <summary>
        /// Optional. Number of milliseconds for which to keep the storage for a partition. A wrapper is used here because 0 is an invalid value.
        /// </summary>
        public readonly string ExpirationMs;
        /// <summary>
        /// Optional. If not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED. A wrapper is used here because an empty string is an invalid value.
        /// </summary>
        public readonly string Field;
        /// <summary>
        /// If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified. This field is deprecated; please set the field with the same name on the table itself instead. This field needs a wrapper because we want to output the default value, false, if the user explicitly set it.
        /// </summary>
        public readonly bool RequirePartitionFilter;
        /// <summary>
        /// The supported types are DAY, HOUR, MONTH, and YEAR, which will generate one partition per day, hour, month, and year, respectively.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private TimePartitioningResponse(
            string expirationMs,

            string field,

            bool requirePartitionFilter,

            string type)
        {
            ExpirationMs = expirationMs;
            Field = field;
            RequirePartitionFilter = requirePartitionFilter;
            Type = type;
        }
    }
}
