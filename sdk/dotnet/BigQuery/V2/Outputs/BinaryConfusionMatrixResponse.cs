// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQuery.V2.Outputs
{

    /// <summary>
    /// Confusion matrix for binary classification models.
    /// </summary>
    [OutputType]
    public sealed class BinaryConfusionMatrixResponse
    {
        /// <summary>
        /// The fraction of predictions given the correct label.
        /// </summary>
        public readonly double Accuracy;
        /// <summary>
        /// The equally weighted average of recall and precision.
        /// </summary>
        public readonly double F1Score;
        /// <summary>
        /// Number of false samples predicted as false.
        /// </summary>
        public readonly string FalseNegatives;
        /// <summary>
        /// Number of false samples predicted as true.
        /// </summary>
        public readonly string FalsePositives;
        /// <summary>
        /// Threshold value used when computing each of the following metric.
        /// </summary>
        public readonly double PositiveClassThreshold;
        /// <summary>
        /// The fraction of actual positive predictions that had positive actual labels.
        /// </summary>
        public readonly double Precision;
        /// <summary>
        /// The fraction of actual positive labels that were given a positive prediction.
        /// </summary>
        public readonly double Recall;
        /// <summary>
        /// Number of true samples predicted as false.
        /// </summary>
        public readonly string TrueNegatives;
        /// <summary>
        /// Number of true samples predicted as true.
        /// </summary>
        public readonly string TruePositives;

        [OutputConstructor]
        private BinaryConfusionMatrixResponse(
            double accuracy,

            double f1Score,

            string falseNegatives,

            string falsePositives,

            double positiveClassThreshold,

            double precision,

            double recall,

            string trueNegatives,

            string truePositives)
        {
            Accuracy = accuracy;
            F1Score = f1Score;
            FalseNegatives = falseNegatives;
            FalsePositives = falsePositives;
            PositiveClassThreshold = positiveClassThreshold;
            Precision = precision;
            Recall = recall;
            TrueNegatives = trueNegatives;
            TruePositives = truePositives;
        }
    }
}
