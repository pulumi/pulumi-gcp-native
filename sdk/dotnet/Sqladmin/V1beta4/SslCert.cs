// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Sqladmin.V1beta4
{
    /// <summary>
    /// Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:sqladmin/v1beta4:SslCert")]
    public partial class SslCert : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a SslCert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SslCert(string name, SslCertArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:sqladmin/v1beta4:SslCert", name, args ?? new SslCertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SslCert(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:sqladmin/v1beta4:SslCert", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SslCert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SslCert Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SslCert(name, id, options);
        }
    }

    public sealed class SslCertArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// User supplied name. Must be a distinct name from the other certificates for this instance.
        /// </summary>
        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("sha1Fingerprint", required: true)]
        public Input<string> Sha1Fingerprint { get; set; } = null!;

        public SslCertArgs()
        {
        }
    }
}
