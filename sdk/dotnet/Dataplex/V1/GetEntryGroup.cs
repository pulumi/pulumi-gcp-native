// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataplex.V1
{
    public static class GetEntryGroup
    {
        /// <summary>
        /// Retrieves a EntryGroup resource.
        /// </summary>
        public static Task<GetEntryGroupResult> InvokeAsync(GetEntryGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntryGroupResult>("google-native:dataplex/v1:getEntryGroup", args ?? new GetEntryGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a EntryGroup resource.
        /// </summary>
        public static Output<GetEntryGroupResult> Invoke(GetEntryGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntryGroupResult>("google-native:dataplex/v1:getEntryGroup", args ?? new GetEntryGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntryGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("entryGroupId", required: true)]
        public string EntryGroupId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetEntryGroupArgs()
        {
        }
        public static new GetEntryGroupArgs Empty => new GetEntryGroupArgs();
    }

    public sealed class GetEntryGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("entryGroupId", required: true)]
        public Input<string> EntryGroupId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetEntryGroupInvokeArgs()
        {
        }
        public static new GetEntryGroupInvokeArgs Empty => new GetEntryGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntryGroupResult
    {
        /// <summary>
        /// The time when the EntryGroup was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Description of the EntryGroup.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. User friendly display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. User-defined labels for the EntryGroup.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Denotes the transfer status of the Entry Group. It is unspecified for Entry Group created from Dataplex API.
        /// </summary>
        public readonly string TransferStatus;
        /// <summary>
        /// System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The time when the EntryGroup was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetEntryGroupResult(
            string createTime,

            string description,

            string displayName,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string transferStatus,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            Etag = etag;
            Labels = labels;
            Name = name;
            TransferStatus = transferStatus;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
