// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataplex.V1
{
    public static class GetDataScan
    {
        /// <summary>
        /// Get dataScan resource.
        /// </summary>
        public static Task<GetDataScanResult> InvokeAsync(GetDataScanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataScanResult>("google-native:dataplex/v1:getDataScan", args ?? new GetDataScanArgs(), options.WithDefaults());

        /// <summary>
        /// Get dataScan resource.
        /// </summary>
        public static Output<GetDataScanResult> Invoke(GetDataScanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataScanResult>("google-native:dataplex/v1:getDataScan", args ?? new GetDataScanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataScanArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataScanId", required: true)]
        public string DataScanId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetDataScanArgs()
        {
        }
        public static new GetDataScanArgs Empty => new GetDataScanArgs();
    }

    public sealed class GetDataScanInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataScanId", required: true)]
        public Input<string> DataScanId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetDataScanInvokeArgs()
        {
        }
        public static new GetDataScanInvokeArgs Empty => new GetDataScanInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataScanResult
    {
        /// <summary>
        /// The time when the scan was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The data source for DataScan.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataSourceResponse Data;
        /// <summary>
        /// The result of the data profile scan.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataProfileResultResponse DataProfileResult;
        /// <summary>
        /// DataProfileScan related setting.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataProfileSpecResponse DataProfileSpec;
        /// <summary>
        /// The result of the data quality scan.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataQualityResultResponse DataQualityResult;
        /// <summary>
        /// DataQualityScan related setting.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataQualitySpecResponse DataQualitySpec;
        /// <summary>
        /// Optional. Description of the scan. * Must be between 1-1024 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. User friendly display name. * Must be between 1-256 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. DataScan execution settings. If not specified, the fields under it will use their default values.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataScanExecutionSpecResponse ExecutionSpec;
        /// <summary>
        /// Status of the data scan execution.
        /// </summary>
        public readonly Outputs.GoogleCloudDataplexV1DataScanExecutionStatusResponse ExecutionStatus;
        /// <summary>
        /// Optional. User-defined labels for the scan.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}. where {project} refers to a project_id or project_number and location_id refers to a GCP region.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Current state of the DataScan.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of DataScan.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The time when the scan was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetDataScanResult(
            string createTime,

            Outputs.GoogleCloudDataplexV1DataSourceResponse data,

            Outputs.GoogleCloudDataplexV1DataProfileResultResponse dataProfileResult,

            Outputs.GoogleCloudDataplexV1DataProfileSpecResponse dataProfileSpec,

            Outputs.GoogleCloudDataplexV1DataQualityResultResponse dataQualityResult,

            Outputs.GoogleCloudDataplexV1DataQualitySpecResponse dataQualitySpec,

            string description,

            string displayName,

            Outputs.GoogleCloudDataplexV1DataScanExecutionSpecResponse executionSpec,

            Outputs.GoogleCloudDataplexV1DataScanExecutionStatusResponse executionStatus,

            ImmutableDictionary<string, string> labels,

            string name,

            string state,

            string type,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            Data = data;
            DataProfileResult = dataProfileResult;
            DataProfileSpec = dataProfileSpec;
            DataQualityResult = dataQualityResult;
            DataQualitySpec = dataQualitySpec;
            Description = description;
            DisplayName = displayName;
            ExecutionSpec = executionSpec;
            ExecutionStatus = executionStatus;
            Labels = labels;
            Name = name;
            State = state;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
