// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataplex.V1
{
    /// <summary>
    /// Creates an AspectType
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:dataplex/v1:AspectType")]
    public partial class AspectType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Required. AspectType identifier.
        /// </summary>
        [Output("aspectTypeId")]
        public Output<string> AspectTypeId { get; private set; } = null!;

        /// <summary>
        /// Immutable. Authorization defined for this type.
        /// </summary>
        [Output("authorization")]
        public Output<Outputs.GoogleCloudDataplexV1AspectTypeAuthorizationResponse> Authorization { get; private set; } = null!;

        /// <summary>
        /// The time when the AspectType was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. Description of the AspectType.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Optional. User friendly display name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Optional. User-defined labels for the AspectType.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// MetadataTemplate of the aspect.
        /// </summary>
        [Output("metadataTemplate")]
        public Output<Outputs.GoogleCloudDataplexV1AspectTypeMetadataTemplateResponse> MetadataTemplate { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the AspectType, of the form: projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Denotes the transfer status of the Aspect Type. It is unspecified for Aspect Types created from Dataplex API.
        /// </summary>
        [Output("transferStatus")]
        public Output<string> TransferStatus { get; private set; } = null!;

        /// <summary>
        /// System generated globally unique ID for the AspectType. This ID will be different if the AspectType is deleted and re-created with the same name.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The time when the AspectType was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a AspectType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AspectType(string name, AspectTypeArgs args, CustomResourceOptions? options = null)
            : base("google-native:dataplex/v1:AspectType", name, args ?? new AspectTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AspectType(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:dataplex/v1:AspectType", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "aspectTypeId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AspectType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AspectType Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AspectType(name, id, options);
        }
    }

    public sealed class AspectTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. AspectType identifier.
        /// </summary>
        [Input("aspectTypeId", required: true)]
        public Input<string> AspectTypeId { get; set; } = null!;

        /// <summary>
        /// Immutable. Authorization defined for this type.
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.GoogleCloudDataplexV1AspectTypeAuthorizationArgs>? Authorization { get; set; }

        /// <summary>
        /// Optional. Description of the AspectType.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Optional. User friendly display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. User-defined labels for the AspectType.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// MetadataTemplate of the aspect.
        /// </summary>
        [Input("metadataTemplate", required: true)]
        public Input<Inputs.GoogleCloudDataplexV1AspectTypeMetadataTemplateArgs> MetadataTemplate { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public AspectTypeArgs()
        {
        }
        public static new AspectTypeArgs Empty => new AspectTypeArgs();
    }
}
