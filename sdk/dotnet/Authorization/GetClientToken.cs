// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Authorization
{
    public static class GetClientToken
    {
        /// <summary>
        /// Use this function to get an Google authentication token for the current login context.
        /// </summary>
        public static Task<GetClientTokenResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClientTokenResult>("google-native:authorization:getClientToken", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetClientTokenResult
    {
        /// <summary>
        /// The OAuth2 access token used by the client to authenticate against the Google Cloud API.
        /// </summary>
        public readonly string AccessToken;
        /// <summary>
        /// Expiry is the optional expiration time of the access token. If zero, TokenSource implementations will reuse the same token forever and RefreshToken or equivalent mechanisms for that TokenSource will not be used.
        /// </summary>
        public readonly string? Expiry;
        /// <summary>
        /// RefreshToken is a token that's used by the application (as opposed to the user) to refresh the access token if it expires.
        /// </summary>
        public readonly string? RefreshToken;
        /// <summary>
        /// The type of auth token. Possible types are "Bearer", "MAC", "Basic".
        /// </summary>
        public readonly string TokenType;

        [OutputConstructor]
        private GetClientTokenResult(
            string accessToken,

            string? expiry,

            string? refreshToken,

            string tokenType)
        {
            AccessToken = accessToken;
            Expiry = expiry;
            RefreshToken = refreshToken;
            TokenType = tokenType;
        }
    }
}
