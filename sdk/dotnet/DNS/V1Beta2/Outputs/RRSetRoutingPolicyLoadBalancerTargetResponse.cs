// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DNS.V1Beta2.Outputs
{

    /// <summary>
    /// The configuration for an individual load balancer to health check.
    /// </summary>
    [OutputType]
    public sealed class RRSetRoutingPolicyLoadBalancerTargetResponse
    {
        /// <summary>
        /// The frontend IP address of the load balancer to health check.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// The protocol of the load balancer to health check.
        /// </summary>
        public readonly string IpProtocol;
        public readonly string Kind;
        /// <summary>
        /// The type of load balancer specified by this target. This value must match the configuration of the load balancer located at the LoadBalancerTarget's IP address, port, and region. Use the following: - *regionalL4ilb*: for a regional internal passthrough Network Load Balancer. - *regionalL7ilb*: for a regional internal Application Load Balancer. - *globalL7ilb*: for a global internal Application Load Balancer. 
        /// </summary>
        public readonly string LoadBalancerType;
        /// <summary>
        /// The fully qualified URL of the network that the load balancer is attached to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} .
        /// </summary>
        public readonly string NetworkUrl;
        /// <summary>
        /// The configured port of the load balancer.
        /// </summary>
        public readonly string Port;
        /// <summary>
        /// The project ID in which the load balancer is located.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The region in which the load balancer is located.
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private RRSetRoutingPolicyLoadBalancerTargetResponse(
            string ipAddress,

            string ipProtocol,

            string kind,

            string loadBalancerType,

            string networkUrl,

            string port,

            string project,

            string region)
        {
            IpAddress = ipAddress;
            IpProtocol = ipProtocol;
            Kind = kind;
            LoadBalancerType = loadBalancerType;
            NetworkUrl = networkUrl;
            Port = port;
            Project = project;
            Region = region;
        }
    }
}
