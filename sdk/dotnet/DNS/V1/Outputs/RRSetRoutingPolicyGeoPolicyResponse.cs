// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DNS.V1.Outputs
{

    /// <summary>
    /// Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.
    /// </summary>
    [OutputType]
    public sealed class RRSetRoutingPolicyGeoPolicyResponse
    {
        /// <summary>
        /// Without fencing, if health check fails for all configured items in the current geo bucket, we'll failover to the next nearest geo bucket. With fencing, if health check is enabled, as long as some targets in the current geo bucket are healthy, we'll return only the healthy targets. However, if they're all unhealthy, we won't failover to the next nearest bucket, we'll simply return all the items in the current bucket even though they're unhealthy.
        /// </summary>
        public readonly bool EnableFencing;
        /// <summary>
        /// The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead.
        /// </summary>
        public readonly ImmutableArray<Outputs.RRSetRoutingPolicyGeoPolicyGeoPolicyItemResponse> Items;
        public readonly string Kind;

        [OutputConstructor]
        private RRSetRoutingPolicyGeoPolicyResponse(
            bool enableFencing,

            ImmutableArray<Outputs.RRSetRoutingPolicyGeoPolicyGeoPolicyItemResponse> items,

            string kind)
        {
            EnableFencing = enableFencing;
            Items = items;
            Kind = kind;
        }
    }
}
