// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.Workflows.V1Beta
{
    public static class GetWorkflow
    {
        /// <summary>
        /// Gets details of a single Workflow.
        /// </summary>
        public static Task<GetWorkflowResult> InvokeAsync(GetWorkflowArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowResult>("google-native:workflows/v1beta:getWorkflow", args ?? new GetWorkflowArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Workflow.
        /// </summary>
        public static Output<GetWorkflowResult> Invoke(GetWorkflowInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkflowResult>("google-native:workflows/v1beta:getWorkflow", args ?? new GetWorkflowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkflowArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("workflowId", required: true)]
        public string WorkflowId { get; set; } = null!;

        public GetWorkflowArgs()
        {
        }
    }

    public sealed class GetWorkflowInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("workflowId", required: true)]
        public Input<string> WorkflowId { get; set; } = null!;

        public GetWorkflowInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkflowResult
    {
        /// <summary>
        /// The timestamp of when the workflow was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores and dashes. Label keys must start with a letter. International characters are allowed.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The timestamp that the latest revision of the workflow was created.
        /// </summary>
        public readonly string RevisionCreateTime;
        /// <summary>
        /// The revision of the workflow. A new revision of a workflow is created as a result of updating the following properties of a workflow: - Service account - Workflow code to be executed The format is "000001-a4d", where the first 6 characters define the zero-padded revision ordinal number. They are followed by a hyphen and 3 hexadecimal random characters.
        /// </summary>
        public readonly string RevisionId;
        /// <summary>
        /// The service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or {account} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Workflow code to be executed. The size limit is 128KB.
        /// </summary>
        public readonly string SourceContents;
        /// <summary>
        /// State of the workflow deployment.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The last update timestamp of the workflow.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetWorkflowResult(
            string createTime,

            string description,

            ImmutableDictionary<string, string> labels,

            string name,

            string revisionCreateTime,

            string revisionId,

            string serviceAccount,

            string sourceContents,

            string state,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Labels = labels;
            Name = name;
            RevisionCreateTime = revisionCreateTime;
            RevisionId = revisionId;
            ServiceAccount = serviceAccount;
            SourceContents = sourceContents;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
