// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.DataCatalog.V1Beta1
{
    /// <summary>
    /// The type of the entry. Only used for Entries with types in the EntryType enum.
    /// </summary>
    [EnumType]
    public readonly struct EntryType : IEquatable<EntryType>
    {
        private readonly string _value;

        private EntryType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default unknown type.
        /// </summary>
        public static EntryType EntryTypeUnspecified { get; } = new EntryType("ENTRY_TYPE_UNSPECIFIED");
        /// <summary>
        /// Output only. The type of entry that has a GoogleSQL schema, including logical views.
        /// </summary>
        public static EntryType Table { get; } = new EntryType("TABLE");
        /// <summary>
        /// Output only. The type of models. https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
        /// </summary>
        public static EntryType Model { get; } = new EntryType("MODEL");
        /// <summary>
        /// Output only. An entry type which is used for streaming entries. Example: Pub/Sub topic.
        /// </summary>
        public static EntryType DataStream { get; } = new EntryType("DATA_STREAM");
        /// <summary>
        /// An entry type which is a set of files or objects. Example: Cloud Storage fileset.
        /// </summary>
        public static EntryType Fileset { get; } = new EntryType("FILESET");

        public static bool operator ==(EntryType left, EntryType right) => left.Equals(right);
        public static bool operator !=(EntryType left, EntryType right) => !left.Equals(right);

        public static explicit operator string(EntryType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntryType other && Equals(other);
        public bool Equals(EntryType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Represents primitive types - string, bool etc.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType : IEquatable<GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// This is the default invalid value for a type.
        /// </summary>
        public static GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType PrimitiveTypeUnspecified { get; } = new GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType("PRIMITIVE_TYPE_UNSPECIFIED");
        /// <summary>
        /// A double precision number.
        /// </summary>
        public static GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType Double { get; } = new GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType("DOUBLE");
        /// <summary>
        /// An UTF-8 string.
        /// </summary>
        public static GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType String { get; } = new GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType("STRING");
        /// <summary>
        /// A boolean value.
        /// </summary>
        public static GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType Bool { get; } = new GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType("BOOL");
        /// <summary>
        /// A timestamp.
        /// </summary>
        public static GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType Timestamp { get; } = new GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType("TIMESTAMP");

        public static bool operator ==(GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType left, GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType left, GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1beta1FieldTypePrimitiveType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TaxonomyActivatedPolicyTypesItem : IEquatable<TaxonomyActivatedPolicyTypesItem>
    {
        private readonly string _value;

        private TaxonomyActivatedPolicyTypesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified policy type.
        /// </summary>
        public static TaxonomyActivatedPolicyTypesItem PolicyTypeUnspecified { get; } = new TaxonomyActivatedPolicyTypesItem("POLICY_TYPE_UNSPECIFIED");
        /// <summary>
        /// Fine grained access control policy, which enables access control on tagged resources.
        /// </summary>
        public static TaxonomyActivatedPolicyTypesItem FineGrainedAccessControl { get; } = new TaxonomyActivatedPolicyTypesItem("FINE_GRAINED_ACCESS_CONTROL");

        public static bool operator ==(TaxonomyActivatedPolicyTypesItem left, TaxonomyActivatedPolicyTypesItem right) => left.Equals(right);
        public static bool operator !=(TaxonomyActivatedPolicyTypesItem left, TaxonomyActivatedPolicyTypesItem right) => !left.Equals(right);

        public static explicit operator string(TaxonomyActivatedPolicyTypesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TaxonomyActivatedPolicyTypesItem other && Equals(other);
        public bool Equals(TaxonomyActivatedPolicyTypesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
