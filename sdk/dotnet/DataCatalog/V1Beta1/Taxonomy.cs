// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DataCatalog.V1Beta1
{
    /// <summary>
    /// Creates a taxonomy in the specified project.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:datacatalog/v1beta1:Taxonomy")]
    public partial class Taxonomy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
        /// </summary>
        [Output("activatedPolicyTypes")]
        public Output<ImmutableArray<string>> ActivatedPolicyTypes { get; private set; } = null!;

        /// <summary>
        /// Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of policy tags contained in this taxonomy.
        /// </summary>
        [Output("policyTagCount")]
        public Output<int> PolicyTagCount { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Identity of the service which owns the Taxonomy. This field is only populated when the taxonomy is created by a GCP service. Currently only 'DATAPLEX' is supported.
        /// </summary>
        [Output("service")]
        public Output<Outputs.GoogleCloudDatacatalogV1beta1TaxonomyServiceResponse> Service { get; private set; } = null!;

        /// <summary>
        /// Timestamps about this taxonomy. Only create_time and update_time are used.
        /// </summary>
        [Output("taxonomyTimestamps")]
        public Output<Outputs.GoogleCloudDatacatalogV1beta1SystemTimestampsResponse> TaxonomyTimestamps { get; private set; } = null!;


        /// <summary>
        /// Create a Taxonomy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Taxonomy(string name, TaxonomyArgs args, CustomResourceOptions? options = null)
            : base("google-native:datacatalog/v1beta1:Taxonomy", name, args ?? new TaxonomyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Taxonomy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:datacatalog/v1beta1:Taxonomy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Taxonomy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Taxonomy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Taxonomy(name, id, options);
        }
    }

    public sealed class TaxonomyArgs : global::Pulumi.ResourceArgs
    {
        [Input("activatedPolicyTypes")]
        private InputList<Pulumi.GoogleNative.DataCatalog.V1Beta1.TaxonomyActivatedPolicyTypesItem>? _activatedPolicyTypes;

        /// <summary>
        /// Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
        /// </summary>
        public InputList<Pulumi.GoogleNative.DataCatalog.V1Beta1.TaxonomyActivatedPolicyTypesItem> ActivatedPolicyTypes
        {
            get => _activatedPolicyTypes ?? (_activatedPolicyTypes = new InputList<Pulumi.GoogleNative.DataCatalog.V1Beta1.TaxonomyActivatedPolicyTypesItem>());
            set => _activatedPolicyTypes = value;
        }

        /// <summary>
        /// Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public TaxonomyArgs()
        {
        }
        public static new TaxonomyArgs Empty => new TaxonomyArgs();
    }
}
