// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DataCatalog.V1.Outputs
{

    /// <summary>
    /// Detailed statistics on the entry's usage. Usage statistics have the following limitations: - Only BigQuery tables have them. - They only include BigQuery query jobs. - They might be underestimated because wildcard table references are not yet counted. For more information, see [Querying multiple tables using a wildcard table] (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDatacatalogV1UsageStatsResponse
    {
        /// <summary>
        /// The number of cancelled attempts to use the underlying entry.
        /// </summary>
        public readonly double TotalCancellations;
        /// <summary>
        /// The number of successful uses of the underlying entry.
        /// </summary>
        public readonly double TotalCompletions;
        /// <summary>
        /// Total time spent only on successful uses, in milliseconds.
        /// </summary>
        public readonly double TotalExecutionTimeForCompletionsMillis;
        /// <summary>
        /// The number of failed attempts to use the underlying entry.
        /// </summary>
        public readonly double TotalFailures;

        [OutputConstructor]
        private GoogleCloudDatacatalogV1UsageStatsResponse(
            double totalCancellations,

            double totalCompletions,

            double totalExecutionTimeForCompletionsMillis,

            double totalFailures)
        {
            TotalCancellations = totalCancellations;
            TotalCompletions = totalCompletions;
            TotalExecutionTimeForCompletionsMillis = totalExecutionTimeForCompletionsMillis;
            TotalFailures = totalFailures;
        }
    }
}
