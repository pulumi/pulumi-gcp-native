// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DataCatalog.V1.Outputs
{

    /// <summary>
    /// The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDatacatalogV1UsageSignalResponse
    {
        /// <summary>
        /// Common usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D", "Lifetime"}`.
        /// </summary>
        public readonly Outputs.GoogleCloudDatacatalogV1CommonUsageStatsResponse CommonUsageWithinTimeRange;
        /// <summary>
        /// Favorite count in the source system.
        /// </summary>
        public readonly string FavoriteCount;
        /// <summary>
        /// The end timestamp of the duration of usage statistics.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// BigQuery usage statistics over each of the predefined time ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
        /// </summary>
        public readonly Outputs.GoogleCloudDatacatalogV1UsageStatsResponse UsageWithinTimeRange;

        [OutputConstructor]
        private GoogleCloudDatacatalogV1UsageSignalResponse(
            Outputs.GoogleCloudDatacatalogV1CommonUsageStatsResponse commonUsageWithinTimeRange,

            string favoriteCount,

            string updateTime,

            Outputs.GoogleCloudDatacatalogV1UsageStatsResponse usageWithinTimeRange)
        {
            CommonUsageWithinTimeRange = commonUsageWithinTimeRange;
            FavoriteCount = favoriteCount;
            UpdateTime = updateTime;
            UsageWithinTimeRange = usageWithinTimeRange;
        }
    }
}
