// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.DataCatalog.V1
{
    /// <summary>
    /// The type of the entry. For details, see [`EntryType`](#entrytype).
    /// </summary>
    [EnumType]
    public readonly struct EntryType : IEquatable<EntryType>
    {
        private readonly string _value;

        private EntryType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default unknown type.
        /// </summary>
        public static EntryType EntryTypeUnspecified { get; } = new EntryType("ENTRY_TYPE_UNSPECIFIED");
        /// <summary>
        /// The entry type that has a GoogleSQL schema, including logical views.
        /// </summary>
        public static EntryType Table { get; } = new EntryType("TABLE");
        /// <summary>
        /// The type of models. For more information, see [Supported models in BigQuery ML](/bigquery/docs/bqml-introduction#supported_models).
        /// </summary>
        public static EntryType Model { get; } = new EntryType("MODEL");
        /// <summary>
        /// An entry type for streaming entries. For example, a Pub/Sub topic.
        /// </summary>
        public static EntryType DataStream { get; } = new EntryType("DATA_STREAM");
        /// <summary>
        /// An entry type for a set of files or objects. For example, a Cloud Storage fileset.
        /// </summary>
        public static EntryType Fileset { get; } = new EntryType("FILESET");
        /// <summary>
        /// A group of servers that work together. For example, a Kafka cluster.
        /// </summary>
        public static EntryType Cluster { get; } = new EntryType("CLUSTER");
        /// <summary>
        /// A database.
        /// </summary>
        public static EntryType Database { get; } = new EntryType("DATABASE");
        /// <summary>
        /// Connection to a data source. For example, a BigQuery connection.
        /// </summary>
        public static EntryType DataSourceConnection { get; } = new EntryType("DATA_SOURCE_CONNECTION");
        /// <summary>
        /// Routine, for example, a BigQuery routine.
        /// </summary>
        public static EntryType Routine { get; } = new EntryType("ROUTINE");
        /// <summary>
        /// A Dataplex lake.
        /// </summary>
        public static EntryType Lake { get; } = new EntryType("LAKE");
        /// <summary>
        /// A Dataplex zone.
        /// </summary>
        public static EntryType Zone { get; } = new EntryType("ZONE");
        /// <summary>
        /// A service, for example, a Dataproc Metastore service.
        /// </summary>
        public static EntryType Service { get; } = new EntryType("SERVICE");
        /// <summary>
        /// Schema within a relational database.
        /// </summary>
        public static EntryType DatabaseSchema { get; } = new EntryType("DATABASE_SCHEMA");
        /// <summary>
        /// A Dashboard, for example from Looker.
        /// </summary>
        public static EntryType Dashboard { get; } = new EntryType("DASHBOARD");
        /// <summary>
        /// A Looker Explore. For more information, see [Looker Explore API] (https://developers.looker.com/api/explorer/4.0/methods/LookmlModel/lookml_model_explore).
        /// </summary>
        public static EntryType Explore { get; } = new EntryType("EXPLORE");
        /// <summary>
        /// A Looker Look. For more information, see [Looker Look API] (https://developers.looker.com/api/explorer/4.0/methods/Look).
        /// </summary>
        public static EntryType Look { get; } = new EntryType("LOOK");

        public static bool operator ==(EntryType left, EntryType right) => left.Equals(right);
        public static bool operator !=(EntryType left, EntryType right) => !left.Equals(right);

        public static explicit operator string(EntryType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EntryType other && Equals(other);
        public bool Equals(EntryType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Most important inclusion of this column.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType : IEquatable<GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType IndexingTypeUnspecified { get; } = new GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType("INDEXING_TYPE_UNSPECIFIED");
        /// <summary>
        /// Column not a part of an index.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType IndexingTypeNone { get; } = new GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType("INDEXING_TYPE_NONE");
        /// <summary>
        /// Column Part of non unique index.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType IndexingTypeNonUnique { get; } = new GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType("INDEXING_TYPE_NON_UNIQUE");
        /// <summary>
        /// Column part of unique index.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType IndexingTypeUnique { get; } = new GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType("INDEXING_TYPE_UNIQUE");
        /// <summary>
        /// Column part of the primary key.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType IndexingTypePrimaryKey { get; } = new GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType("INDEXING_TYPE_PRIMARY_KEY");

        public static bool operator ==(GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType left, GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType left, GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Looker specific column type of this column.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType : IEquatable<GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType LookerColumnTypeUnspecified { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("LOOKER_COLUMN_TYPE_UNSPECIFIED");
        /// <summary>
        /// Dimension.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType Dimension { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("DIMENSION");
        /// <summary>
        /// Dimension group - parent for Dimension.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType DimensionGroup { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("DIMENSION_GROUP");
        /// <summary>
        /// Filter.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType Filter { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("FILTER");
        /// <summary>
        /// Measure.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType Measure { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("MEASURE");
        /// <summary>
        /// Parameter.
        /// </summary>
        public static GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType Parameter { get; } = new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType("PARAMETER");

        public static bool operator ==(GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType left, GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType left, GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpecType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of this view.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType : IEquatable<GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default unknown view type.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType ViewTypeUnspecified { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType("VIEW_TYPE_UNSPECIFIED");
        /// <summary>
        /// Standard view.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType StandardView { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType("STANDARD_VIEW");
        /// <summary>
        /// Materialized view.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType MaterializedView { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType("MATERIALIZED_VIEW");

        public static bool operator ==(GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType left, GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType left, GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpecViewType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of this table.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1DatabaseTableSpecType : IEquatable<GoogleCloudDatacatalogV1DatabaseTableSpecType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1DatabaseTableSpecType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default unknown table type.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecType TableTypeUnspecified { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecType("TABLE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Native table.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecType Native { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecType("NATIVE");
        /// <summary>
        /// External table.
        /// </summary>
        public static GoogleCloudDatacatalogV1DatabaseTableSpecType External { get; } = new GoogleCloudDatacatalogV1DatabaseTableSpecType("EXTERNAL");

        public static bool operator ==(GoogleCloudDatacatalogV1DatabaseTableSpecType left, GoogleCloudDatacatalogV1DatabaseTableSpecType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1DatabaseTableSpecType left, GoogleCloudDatacatalogV1DatabaseTableSpecType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1DatabaseTableSpecType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1DatabaseTableSpecType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1DatabaseTableSpecType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Primitive types, such as string, boolean, etc.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1FieldTypePrimitiveType : IEquatable<GoogleCloudDatacatalogV1FieldTypePrimitiveType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1FieldTypePrimitiveType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default invalid value for a type.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType PrimitiveTypeUnspecified { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("PRIMITIVE_TYPE_UNSPECIFIED");
        /// <summary>
        /// A double precision number.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType Double { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("DOUBLE");
        /// <summary>
        /// An UTF-8 string.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType String { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("STRING");
        /// <summary>
        /// A boolean value.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType Bool { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("BOOL");
        /// <summary>
        /// A timestamp.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType Timestamp { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("TIMESTAMP");
        /// <summary>
        /// A Richtext description.
        /// </summary>
        public static GoogleCloudDatacatalogV1FieldTypePrimitiveType Richtext { get; } = new GoogleCloudDatacatalogV1FieldTypePrimitiveType("RICHTEXT");

        public static bool operator ==(GoogleCloudDatacatalogV1FieldTypePrimitiveType left, GoogleCloudDatacatalogV1FieldTypePrimitiveType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1FieldTypePrimitiveType left, GoogleCloudDatacatalogV1FieldTypePrimitiveType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1FieldTypePrimitiveType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1FieldTypePrimitiveType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1FieldTypePrimitiveType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies whether the argument is input or output.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1RoutineSpecArgumentMode : IEquatable<GoogleCloudDatacatalogV1RoutineSpecArgumentMode>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1RoutineSpecArgumentMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified mode.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecArgumentMode ModeUnspecified { get; } = new GoogleCloudDatacatalogV1RoutineSpecArgumentMode("MODE_UNSPECIFIED");
        /// <summary>
        /// The argument is input-only.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecArgumentMode In { get; } = new GoogleCloudDatacatalogV1RoutineSpecArgumentMode("IN");
        /// <summary>
        /// The argument is output-only.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecArgumentMode Out { get; } = new GoogleCloudDatacatalogV1RoutineSpecArgumentMode("OUT");
        /// <summary>
        /// The argument is both an input and an output.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecArgumentMode Inout { get; } = new GoogleCloudDatacatalogV1RoutineSpecArgumentMode("INOUT");

        public static bool operator ==(GoogleCloudDatacatalogV1RoutineSpecArgumentMode left, GoogleCloudDatacatalogV1RoutineSpecArgumentMode right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1RoutineSpecArgumentMode left, GoogleCloudDatacatalogV1RoutineSpecArgumentMode right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1RoutineSpecArgumentMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1RoutineSpecArgumentMode other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1RoutineSpecArgumentMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of the routine.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1RoutineSpecRoutineType : IEquatable<GoogleCloudDatacatalogV1RoutineSpecRoutineType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1RoutineSpecRoutineType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified type.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecRoutineType RoutineTypeUnspecified { get; } = new GoogleCloudDatacatalogV1RoutineSpecRoutineType("ROUTINE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Non-builtin permanent scalar function.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecRoutineType ScalarFunction { get; } = new GoogleCloudDatacatalogV1RoutineSpecRoutineType("SCALAR_FUNCTION");
        /// <summary>
        /// Stored procedure.
        /// </summary>
        public static GoogleCloudDatacatalogV1RoutineSpecRoutineType Procedure { get; } = new GoogleCloudDatacatalogV1RoutineSpecRoutineType("PROCEDURE");

        public static bool operator ==(GoogleCloudDatacatalogV1RoutineSpecRoutineType left, GoogleCloudDatacatalogV1RoutineSpecRoutineType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1RoutineSpecRoutineType left, GoogleCloudDatacatalogV1RoutineSpecRoutineType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1RoutineSpecRoutineType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1RoutineSpecRoutineType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1RoutineSpecRoutineType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the dataset.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1VertexDatasetSpecDataType : IEquatable<GoogleCloudDatacatalogV1VertexDatasetSpecDataType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1VertexDatasetSpecDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType DataTypeUnspecified { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// Structured data dataset.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Table { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TABLE");
        /// <summary>
        /// Image dataset which supports ImageClassification, ImageObjectDetection and ImageSegmentation problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Image { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("IMAGE");
        /// <summary>
        /// Document dataset which supports TextClassification, TextExtraction and TextSentiment problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Text { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TEXT");
        /// <summary>
        /// Video dataset which supports VideoClassification, VideoObjectTracking and VideoActionRecognition problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Video { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("VIDEO");
        /// <summary>
        /// Conversation dataset which supports conversation problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Conversation { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("CONVERSATION");
        /// <summary>
        /// TimeSeries dataset.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType TimeSeries { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TIME_SERIES");
        /// <summary>
        /// Document dataset which supports DocumentAnnotation problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Document { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("DOCUMENT");
        /// <summary>
        /// TextToSpeech dataset which supports TextToSpeech problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType TextToSpeech { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TEXT_TO_SPEECH");
        /// <summary>
        /// Translation dataset which supports Translation problems.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType Translation { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TRANSLATION");
        /// <summary>
        /// Store Vision dataset which is used for HITL integration.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType StoreVision { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("STORE_VISION");
        /// <summary>
        /// Enterprise Knowledge Graph dataset which is used for HITL labeling integration.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType EnterpriseKnowledgeGraph { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("ENTERPRISE_KNOWLEDGE_GRAPH");
        /// <summary>
        /// Text prompt dataset which supports Large Language Models.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexDatasetSpecDataType TextPrompt { get; } = new GoogleCloudDatacatalogV1VertexDatasetSpecDataType("TEXT_PROMPT");

        public static bool operator ==(GoogleCloudDatacatalogV1VertexDatasetSpecDataType left, GoogleCloudDatacatalogV1VertexDatasetSpecDataType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1VertexDatasetSpecDataType left, GoogleCloudDatacatalogV1VertexDatasetSpecDataType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1VertexDatasetSpecDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1VertexDatasetSpecDataType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1VertexDatasetSpecDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the model source.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType : IEquatable<GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType>
    {
        private readonly string _value;

        private GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Should not be used.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType ModelSourceTypeUnspecified { get; } = new GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType("MODEL_SOURCE_TYPE_UNSPECIFIED");
        /// <summary>
        /// The Model is uploaded by automl training pipeline.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType Automl { get; } = new GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType("AUTOML");
        /// <summary>
        /// The Model is uploaded by user or custom training pipeline.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType Custom { get; } = new GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType("CUSTOM");
        /// <summary>
        /// The Model is registered and sync'ed from BigQuery ML.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType Bqml { get; } = new GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType("BQML");
        /// <summary>
        /// The Model is saved or tuned from Model Garden.
        /// </summary>
        public static GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType ModelGarden { get; } = new GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType("MODEL_GARDEN");

        public static bool operator ==(GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType left, GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType left, GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType other && Equals(other);
        public bool Equals(GoogleCloudDatacatalogV1VertexModelSourceInfoSourceType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct TaxonomyActivatedPolicyTypesItem : IEquatable<TaxonomyActivatedPolicyTypesItem>
    {
        private readonly string _value;

        private TaxonomyActivatedPolicyTypesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified policy type.
        /// </summary>
        public static TaxonomyActivatedPolicyTypesItem PolicyTypeUnspecified { get; } = new TaxonomyActivatedPolicyTypesItem("POLICY_TYPE_UNSPECIFIED");
        /// <summary>
        /// Fine-grained access control policy that enables access control on tagged sub-resources.
        /// </summary>
        public static TaxonomyActivatedPolicyTypesItem FineGrainedAccessControl { get; } = new TaxonomyActivatedPolicyTypesItem("FINE_GRAINED_ACCESS_CONTROL");

        public static bool operator ==(TaxonomyActivatedPolicyTypesItem left, TaxonomyActivatedPolicyTypesItem right) => left.Equals(right);
        public static bool operator !=(TaxonomyActivatedPolicyTypesItem left, TaxonomyActivatedPolicyTypesItem right) => !left.Equals(right);

        public static explicit operator string(TaxonomyActivatedPolicyTypesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TaxonomyActivatedPolicyTypesItem other && Equals(other);
        public bool Equals(TaxonomyActivatedPolicyTypesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
