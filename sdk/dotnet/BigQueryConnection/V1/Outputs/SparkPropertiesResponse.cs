// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQueryConnection.V1.Outputs
{

    /// <summary>
    /// Container for connection properties to execute stored procedures for Apache Spark.
    /// </summary>
    [OutputType]
    public sealed class SparkPropertiesResponse
    {
        /// <summary>
        /// Optional. Dataproc Metastore Service configuration for the connection.
        /// </summary>
        public readonly Outputs.MetastoreServiceConfigResponse MetastoreServiceConfig;
        /// <summary>
        /// The account ID of the service created for the purpose of this connection. The service account does not have any permissions associated with it when it is created. After creation, customers delegate permissions to the service account. When the connection is used in the context of a stored procedure for Apache Spark in BigQuery, the service account is used to connect to the desired resources in Google Cloud. The account ID is in the form of: bqcx--@gcp-sa-bigquery-consp.iam.gserviceaccount.com
        /// </summary>
        public readonly string ServiceAccountId;
        /// <summary>
        /// Optional. Spark History Server configuration for the connection.
        /// </summary>
        public readonly Outputs.SparkHistoryServerConfigResponse SparkHistoryServerConfig;

        [OutputConstructor]
        private SparkPropertiesResponse(
            Outputs.MetastoreServiceConfigResponse metastoreServiceConfig,

            string serviceAccountId,

            Outputs.SparkHistoryServerConfigResponse sparkHistoryServerConfig)
        {
            MetastoreServiceConfig = metastoreServiceConfig;
            ServiceAccountId = serviceAccountId;
            SparkHistoryServerConfig = sparkHistoryServerConfig;
        }
    }
}
