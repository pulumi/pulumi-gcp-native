// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQueryConnection.V1.Outputs
{

    /// <summary>
    /// Container for connection properties specific to Azure.
    /// </summary>
    [OutputType]
    public sealed class AzurePropertiesResponse
    {
        /// <summary>
        /// The name of the Azure Active Directory Application.
        /// </summary>
        public readonly string Application;
        /// <summary>
        /// The client id of the Azure Active Directory Application.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The id of customer's directory that host the data.
        /// </summary>
        public readonly string CustomerTenantId;
        /// <summary>
        /// The client ID of the user's Azure Active Directory Application used for a federated connection.
        /// </summary>
        public readonly string FederatedApplicationClientId;
        /// <summary>
        /// A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user's Azure Active Directory Application.
        /// </summary>
        public readonly string Identity;
        /// <summary>
        /// The object id of the Azure Active Directory Application.
        /// </summary>
        public readonly string ObjectId;
        /// <summary>
        /// The URL user will be redirected to after granting consent during connection setup.
        /// </summary>
        public readonly string RedirectUri;

        [OutputConstructor]
        private AzurePropertiesResponse(
            string application,

            string clientId,

            string customerTenantId,

            string federatedApplicationClientId,

            string identity,

            string objectId,

            string redirectUri)
        {
            Application = application;
            ClientId = clientId;
            CustomerTenantId = customerTenantId;
            FederatedApplicationClientId = federatedApplicationClientId;
            Identity = identity;
            ObjectId = objectId;
            RedirectUri = redirectUri;
        }
    }
}
