// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudIdentity.V1Beta1
{
    public static class GetInboundSsoAssignment
    {
        /// <summary>
        /// Gets an InboundSsoAssignment.
        /// </summary>
        public static Task<GetInboundSsoAssignmentResult> InvokeAsync(GetInboundSsoAssignmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInboundSsoAssignmentResult>("google-native:cloudidentity/v1beta1:getInboundSsoAssignment", args ?? new GetInboundSsoAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an InboundSsoAssignment.
        /// </summary>
        public static Output<GetInboundSsoAssignmentResult> Invoke(GetInboundSsoAssignmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInboundSsoAssignmentResult>("google-native:cloudidentity/v1beta1:getInboundSsoAssignment", args ?? new GetInboundSsoAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInboundSsoAssignmentArgs : global::Pulumi.InvokeArgs
    {
        [Input("inboundSsoAssignmentId", required: true)]
        public string InboundSsoAssignmentId { get; set; } = null!;

        public GetInboundSsoAssignmentArgs()
        {
        }
        public static new GetInboundSsoAssignmentArgs Empty => new GetInboundSsoAssignmentArgs();
    }

    public sealed class GetInboundSsoAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("inboundSsoAssignmentId", required: true)]
        public Input<string> InboundSsoAssignmentId { get; set; } = null!;

        public GetInboundSsoAssignmentInvokeArgs()
        {
        }
        public static new GetInboundSsoAssignmentInvokeArgs Empty => new GetInboundSsoAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetInboundSsoAssignmentResult
    {
        /// <summary>
        /// Immutable. The customer. For example: `customers/C0123abc`.
        /// </summary>
        public readonly string Customer;
        /// <summary>
        /// [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
        /// </summary>
        public readonly int Rank;
        /// <summary>
        /// SAML SSO details. Must be set if and only if `sso_mode` is set to `SAML_SSO`.
        /// </summary>
        public readonly Outputs.SamlSsoInfoResponse SamlSsoInfo;
        /// <summary>
        /// Assertions about users assigned to an IdP will always be accepted from that IdP. This controls whether/when Google should redirect a user to the IdP. Unset (defaults) is the recommended configuration.
        /// </summary>
        public readonly Outputs.SignInBehaviorResponse SignInBehavior;
        /// <summary>
        /// Inbound SSO behavior.
        /// </summary>
        public readonly string SsoMode;
        /// <summary>
        /// Immutable. Must be of the form `groups/{group}`.
        /// </summary>
        public readonly string TargetGroup;
        /// <summary>
        /// Immutable. Must be of the form `orgUnits/{org_unit}`.
        /// </summary>
        public readonly string TargetOrgUnit;

        [OutputConstructor]
        private GetInboundSsoAssignmentResult(
            string customer,

            string name,

            int rank,

            Outputs.SamlSsoInfoResponse samlSsoInfo,

            Outputs.SignInBehaviorResponse signInBehavior,

            string ssoMode,

            string targetGroup,

            string targetOrgUnit)
        {
            Customer = customer;
            Name = name;
            Rank = rank;
            SamlSsoInfo = samlSsoInfo;
            SignInBehavior = signInBehavior;
            SsoMode = ssoMode;
            TargetGroup = targetGroup;
            TargetOrgUnit = targetOrgUnit;
        }
    }
}
