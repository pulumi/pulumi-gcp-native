// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Datafusion.V1
{
    /// <summary>
    /// Creates a new Data Fusion instance in the specified project and location.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:datafusion/v1:Instance")]
    public partial class Instance : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:datafusion/v1:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:datafusion/v1:Instance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, options);
        }
    }

    public sealed class InstanceArgs : Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<Inputs.AcceleratorArgs>? _accelerators;

        /// <summary>
        /// List of accelerators enabled for this CDF instance.
        /// </summary>
        public InputList<Inputs.AcceleratorArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<Inputs.AcceleratorArgs>());
            set => _accelerators = value;
        }

        /// <summary>
        /// Output only. Endpoint on which the REST APIs is accessible.
        /// </summary>
        [Input("apiEndpoint")]
        public Input<string>? ApiEndpoint { get; set; }

        [Input("availableVersion")]
        private InputList<Inputs.VersionArgs>? _availableVersion;

        /// <summary>
        /// Available versions that the instance can be upgraded to using UpdateInstanceRequest.
        /// </summary>
        public InputList<Inputs.VersionArgs> AvailableVersion
        {
            get => _availableVersion ?? (_availableVersion = new InputList<Inputs.VersionArgs>());
            set => _availableVersion = value;
        }

        /// <summary>
        /// Output only. The time the instance was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.
        /// </summary>
        [Input("dataprocServiceAccount")]
        public Input<string>? DataprocServiceAccount { get; set; }

        /// <summary>
        /// A description of this instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name for an instance.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Option to enable granular role-based access control.
        /// </summary>
        [Input("enableRbac")]
        public Input<bool>? EnableRbac { get; set; }

        /// <summary>
        /// Option to enable Stackdriver Logging.
        /// </summary>
        [Input("enableStackdriverLogging")]
        public Input<bool>? EnableStackdriverLogging { get; set; }

        /// <summary>
        /// Option to enable Stackdriver Monitoring.
        /// </summary>
        [Input("enableStackdriverMonitoring")]
        public Input<bool>? EnableStackdriverMonitoring { get; set; }

        /// <summary>
        /// Output only. Cloud Storage bucket generated by Data Fusion in the customer project.
        /// </summary>
        [Input("gcsBucket")]
        public Input<string>? GcsBucket { get; set; }

        [Input("instancesId", required: true)]
        public Input<string> InstancesId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The resource labels for instance to use to annotate any related underlying resources such as GCE VMs. The character '=' is not allowed to be used within the labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// Output only. The name of this instance is in the form of projects/{project}/locations/{location}/instances/{instance}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration options. These are required when a private Data Fusion instance is to be created.
        /// </summary>
        [Input("networkConfig")]
        public Input<Inputs.NetworkConfigArgs>? NetworkConfig { get; set; }

        [Input("options")]
        private InputMap<string>? _options;

        /// <summary>
        /// Map of additional options used to configure the behavior of Data Fusion instance.
        /// </summary>
        public InputMap<string> Options
        {
            get => _options ?? (_options = new InputMap<string>());
            set => _options = value;
        }

        /// <summary>
        /// Output only. P4 service account for the customer project.
        /// </summary>
        [Input("p4ServiceAccount")]
        public Input<string>? P4ServiceAccount { get; set; }

        /// <summary>
        /// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.
        /// </summary>
        [Input("privateInstance")]
        public Input<bool>? PrivateInstance { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// Output only. Deprecated. Use tenant_project_id instead to extract the tenant project ID.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Output only. Endpoint on which the Data Fusion UI is accessible.
        /// </summary>
        [Input("serviceEndpoint")]
        public Input<string>? ServiceEndpoint { get; set; }

        /// <summary>
        /// Output only. The current state of this Data Fusion instance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. Additional information about the current state of this Data Fusion instance if available.
        /// </summary>
        [Input("stateMessage")]
        public Input<string>? StateMessage { get; set; }

        /// <summary>
        /// Output only. The name of the tenant project.
        /// </summary>
        [Input("tenantProjectId")]
        public Input<string>? TenantProjectId { get; set; }

        /// <summary>
        /// Required. Instance type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Output only. The time the instance was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Current version of the Data Fusion. Only specifiable in Update.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceArgs()
        {
        }
    }
}
