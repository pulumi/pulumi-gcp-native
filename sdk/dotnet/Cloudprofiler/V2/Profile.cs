// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Cloudprofiler.V2
{
    /// <summary>
    /// CreateProfile creates a new profile resource in the online mode. The server ensures that the new profiles are created at a constant rate per deployment, so the creation request may hang for some time until the next profile session is available. The request may fail with ABORTED error if the creation is not available within ~1m, the response will indicate the duration of the backoff the client should take before attempting creating a profile again. The backoff duration is returned in google.rpc.RetryInfo extension on the response status. To a gRPC client, the extension will be return as a binary-serialized proto in the trailing metadata item named "google.rpc.retryinfo-bin".
    /// </summary>
    [GoogleCloudResourceType("google-cloud:cloudprofiler/v2:Profile")]
    public partial class Profile : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a Profile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Profile(string name, ProfileArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:cloudprofiler/v2:Profile", name, args ?? new ProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Profile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:cloudprofiler/v2:Profile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Profile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Profile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Profile(name, id, options);
        }
    }

    public sealed class ProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Deployment details.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.DeploymentArgs>? Deployment { get; set; }

        [Input("profileType")]
        private InputList<string>? _profileType;

        /// <summary>
        /// One or more profile types that the agent is capable of providing.
        /// </summary>
        public InputList<string> ProfileType
        {
            get => _profileType ?? (_profileType = new InputList<string>());
            set => _profileType = value;
        }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        public ProfileArgs()
        {
        }
    }
}
