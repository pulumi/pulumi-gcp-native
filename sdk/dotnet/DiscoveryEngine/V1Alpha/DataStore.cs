// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DiscoveryEngine.V1Alpha
{
    /// <summary>
    /// Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or Recommendation use case, an Engine needs to be created separately.
    /// </summary>
    [GoogleNativeResourceType("google-native:discoveryengine/v1alpha:DataStore")]
    public partial class DataStore : global::Pulumi.CustomResource
    {
        [Output("collectionId")]
        public Output<string> CollectionId { get; private set; } = null!;

        /// <summary>
        /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
        /// </summary>
        [Output("contentConfig")]
        public Output<string> ContentConfig { get; private set; } = null!;

        /// <summary>
        /// A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored.
        /// </summary>
        [Output("createAdvancedSiteSearch")]
        public Output<bool?> CreateAdvancedSiteSearch { get; private set; } = null!;

        /// <summary>
        /// Timestamp the DataStore was created at.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Output("dataStoreId")]
        public Output<string> DataStoreId { get; private set; } = null!;

        /// <summary>
        /// The id of the default Schema asscociated to this data store.
        /// </summary>
        [Output("defaultSchemaId")]
        public Output<string> DefaultSchemaId { get; private set; } = null!;

        /// <summary>
        /// The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Immutable. The industry vertical that the data store registers.
        /// </summary>
        [Output("industryVertical")]
        public Output<string> IndustryVertical { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled.
        /// </summary>
        [Output("solutionTypes")]
        public Output<ImmutableArray<string>> SolutionTypes { get; private set; } = null!;


        /// <summary>
        /// Create a DataStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataStore(string name, DataStoreArgs args, CustomResourceOptions? options = null)
            : base("google-native:discoveryengine/v1alpha:DataStore", name, args ?? new DataStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataStore(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:discoveryengine/v1alpha:DataStore", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "collectionId",
                    "dataStoreId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataStore Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataStore(name, id, options);
        }
    }

    public sealed class DataStoreArgs : global::Pulumi.ResourceArgs
    {
        [Input("collectionId", required: true)]
        public Input<string> CollectionId { get; set; } = null!;

        /// <summary>
        /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
        /// </summary>
        [Input("contentConfig")]
        public Input<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.DataStoreContentConfig>? ContentConfig { get; set; }

        /// <summary>
        /// A boolean flag indicating whether user want to directly create an advanced data store for site search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE content_config), this flag will be ignored.
        /// </summary>
        [Input("createAdvancedSiteSearch")]
        public Input<bool>? CreateAdvancedSiteSearch { get; set; }

        /// <summary>
        /// Required. The ID to use for the DataStore, which will become the final component of the DataStore's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Input("dataStoreId", required: true)]
        public Input<string> DataStoreId { get; set; } = null!;

        /// <summary>
        /// The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Immutable. The industry vertical that the data store registers.
        /// </summary>
        [Input("industryVertical")]
        public Input<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.DataStoreIndustryVertical>? IndustryVertical { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("solutionTypes")]
        private InputList<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.DataStoreSolutionTypesItem>? _solutionTypes;

        /// <summary>
        /// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled.
        /// </summary>
        public InputList<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.DataStoreSolutionTypesItem> SolutionTypes
        {
            get => _solutionTypes ?? (_solutionTypes = new InputList<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.DataStoreSolutionTypesItem>());
            set => _solutionTypes = value;
        }

        public DataStoreArgs()
        {
        }
        public static new DataStoreArgs Empty => new DataStoreArgs();
    }
}
