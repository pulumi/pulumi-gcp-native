// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.DiscoveryEngine.V1Alpha
{
    /// <summary>
    /// The state of the Conversation.
    /// </summary>
    [EnumType]
    public readonly struct ConversationState : IEquatable<ConversationState>
    {
        private readonly string _value;

        private ConversationState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unknown.
        /// </summary>
        public static ConversationState StateUnspecified { get; } = new ConversationState("STATE_UNSPECIFIED");
        /// <summary>
        /// Conversation is currently open.
        /// </summary>
        public static ConversationState InProgress { get; } = new ConversationState("IN_PROGRESS");
        /// <summary>
        /// Conversation has been completed.
        /// </summary>
        public static ConversationState Completed { get; } = new ConversationState("COMPLETED");

        public static bool operator ==(ConversationState left, ConversationState right) => left.Equals(right);
        public static bool operator !=(ConversationState left, ConversationState right) => !left.Equals(right);

        public static explicit operator string(ConversationState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ConversationState other && Equals(other);
        public bool Equals(ConversationState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
    /// </summary>
    [EnumType]
    public readonly struct DataStoreContentConfig : IEquatable<DataStoreContentConfig>
    {
        private readonly string _value;

        private DataStoreContentConfig(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value.
        /// </summary>
        public static DataStoreContentConfig ContentConfigUnspecified { get; } = new DataStoreContentConfig("CONTENT_CONFIG_UNSPECIFIED");
        /// <summary>
        /// Only contains documents without any Document.content.
        /// </summary>
        public static DataStoreContentConfig NoContent { get; } = new DataStoreContentConfig("NO_CONTENT");
        /// <summary>
        /// Only contains documents with Document.content.
        /// </summary>
        public static DataStoreContentConfig ContentRequired { get; } = new DataStoreContentConfig("CONTENT_REQUIRED");
        /// <summary>
        /// The data store is used for public website search.
        /// </summary>
        public static DataStoreContentConfig PublicWebsite { get; } = new DataStoreContentConfig("PUBLIC_WEBSITE");

        public static bool operator ==(DataStoreContentConfig left, DataStoreContentConfig right) => left.Equals(right);
        public static bool operator !=(DataStoreContentConfig left, DataStoreContentConfig right) => !left.Equals(right);

        public static explicit operator string(DataStoreContentConfig value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DataStoreContentConfig other && Equals(other);
        public bool Equals(DataStoreContentConfig other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. The industry vertical that the data store registers.
    /// </summary>
    [EnumType]
    public readonly struct DataStoreIndustryVertical : IEquatable<DataStoreIndustryVertical>
    {
        private readonly string _value;

        private DataStoreIndustryVertical(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Value used when unset.
        /// </summary>
        public static DataStoreIndustryVertical IndustryVerticalUnspecified { get; } = new DataStoreIndustryVertical("INDUSTRY_VERTICAL_UNSPECIFIED");
        /// <summary>
        /// The generic vertical for documents that are not specific to any industry vertical.
        /// </summary>
        public static DataStoreIndustryVertical Generic { get; } = new DataStoreIndustryVertical("GENERIC");
        /// <summary>
        /// The media industry vertical.
        /// </summary>
        public static DataStoreIndustryVertical Media { get; } = new DataStoreIndustryVertical("MEDIA");

        public static bool operator ==(DataStoreIndustryVertical left, DataStoreIndustryVertical right) => left.Equals(right);
        public static bool operator !=(DataStoreIndustryVertical left, DataStoreIndustryVertical right) => !left.Equals(right);

        public static explicit operator string(DataStoreIndustryVertical value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DataStoreIndustryVertical other && Equals(other);
        public bool Equals(DataStoreIndustryVertical other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct DataStoreSolutionTypesItem : IEquatable<DataStoreSolutionTypesItem>
    {
        private readonly string _value;

        private DataStoreSolutionTypesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value.
        /// </summary>
        public static DataStoreSolutionTypesItem SolutionTypeUnspecified { get; } = new DataStoreSolutionTypesItem("SOLUTION_TYPE_UNSPECIFIED");
        /// <summary>
        /// Used for Recommendations AI.
        /// </summary>
        public static DataStoreSolutionTypesItem SolutionTypeRecommendation { get; } = new DataStoreSolutionTypesItem("SOLUTION_TYPE_RECOMMENDATION");
        /// <summary>
        /// Used for Discovery Search.
        /// </summary>
        public static DataStoreSolutionTypesItem SolutionTypeSearch { get; } = new DataStoreSolutionTypesItem("SOLUTION_TYPE_SEARCH");
        /// <summary>
        /// Used for use cases related to the Generative AI agent.
        /// </summary>
        public static DataStoreSolutionTypesItem SolutionTypeChat { get; } = new DataStoreSolutionTypesItem("SOLUTION_TYPE_CHAT");

        public static bool operator ==(DataStoreSolutionTypesItem left, DataStoreSolutionTypesItem right) => left.Equals(right);
        public static bool operator !=(DataStoreSolutionTypesItem left, DataStoreSolutionTypesItem right) => !left.Equals(right);

        public static explicit operator string(DataStoreSolutionTypesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DataStoreSolutionTypesItem other && Equals(other);
        public bool Equals(DataStoreSolutionTypesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
    /// </summary>
    [EnumType]
    public readonly struct EngineIndustryVertical : IEquatable<EngineIndustryVertical>
    {
        private readonly string _value;

        private EngineIndustryVertical(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Value used when unset.
        /// </summary>
        public static EngineIndustryVertical IndustryVerticalUnspecified { get; } = new EngineIndustryVertical("INDUSTRY_VERTICAL_UNSPECIFIED");
        /// <summary>
        /// The generic vertical for documents that are not specific to any industry vertical.
        /// </summary>
        public static EngineIndustryVertical Generic { get; } = new EngineIndustryVertical("GENERIC");
        /// <summary>
        /// The media industry vertical.
        /// </summary>
        public static EngineIndustryVertical Media { get; } = new EngineIndustryVertical("MEDIA");

        public static bool operator ==(EngineIndustryVertical left, EngineIndustryVertical right) => left.Equals(right);
        public static bool operator !=(EngineIndustryVertical left, EngineIndustryVertical right) => !left.Equals(right);

        public static explicit operator string(EngineIndustryVertical value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EngineIndustryVertical other && Equals(other);
        public bool Equals(EngineIndustryVertical other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The solutions of the engine.
    /// </summary>
    [EnumType]
    public readonly struct EngineSolutionType : IEquatable<EngineSolutionType>
    {
        private readonly string _value;

        private EngineSolutionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value.
        /// </summary>
        public static EngineSolutionType SolutionTypeUnspecified { get; } = new EngineSolutionType("SOLUTION_TYPE_UNSPECIFIED");
        /// <summary>
        /// Used for Recommendations AI.
        /// </summary>
        public static EngineSolutionType SolutionTypeRecommendation { get; } = new EngineSolutionType("SOLUTION_TYPE_RECOMMENDATION");
        /// <summary>
        /// Used for Discovery Search.
        /// </summary>
        public static EngineSolutionType SolutionTypeSearch { get; } = new EngineSolutionType("SOLUTION_TYPE_SEARCH");
        /// <summary>
        /// Used for use cases related to the Generative AI agent.
        /// </summary>
        public static EngineSolutionType SolutionTypeChat { get; } = new EngineSolutionType("SOLUTION_TYPE_CHAT");

        public static bool operator ==(EngineSolutionType left, EngineSolutionType right) => left.Equals(right);
        public static bool operator !=(EngineSolutionType left, EngineSolutionType right) => !left.Equals(right);

        public static explicit operator string(EngineSolutionType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EngineSolutionType other && Equals(other);
        public bool Equals(EngineSolutionType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState : IEquatable<GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState>
    {
        private readonly string _value;

        private GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified training state.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState TrainingStateUnspecified { get; } = new GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState("TRAINING_STATE_UNSPECIFIED");
        /// <summary>
        /// The engine training is paused.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState Paused { get; } = new GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState("PAUSED");
        /// <summary>
        /// The engine is training.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState Training { get; } = new GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState("TRAINING");

        public static bool operator ==(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState left, GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState left, GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState other && Equals(other);
        public bool Equals(GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem : IEquatable<GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem>
    {
        private readonly string _value;

        private GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value when the enum is unspecified. This is invalid to use.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem SearchAddOnUnspecified { get; } = new GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem("SEARCH_ADD_ON_UNSPECIFIED");
        /// <summary>
        /// Large language model add-on.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem SearchAddOnLlm { get; } = new GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem("SEARCH_ADD_ON_LLM");

        public static bool operator ==(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem left, GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem left, GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem other && Equals(other);
        public bool Equals(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier : IEquatable<GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier>
    {
        private readonly string _value;

        private GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value when the enum is unspecified. This is invalid to use.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier SearchTierUnspecified { get; } = new GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier("SEARCH_TIER_UNSPECIFIED");
        /// <summary>
        /// Standard tier.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier SearchTierStandard { get; } = new GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier("SEARCH_TIER_STANDARD");
        /// <summary>
        /// Enterprise tier.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier SearchTierEnterprise { get; } = new GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier("SEARCH_TIER_ENTERPRISE");

        public static bool operator ==(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier left, GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier left, GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier other && Equals(other);
        public bool Equals(GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem : IEquatable<GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem>
    {
        private readonly string _value;

        private GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. The summary skipped reason is not specified.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem SummarySkippedReasonUnspecified { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("SUMMARY_SKIPPED_REASON_UNSPECIFIED");
        /// <summary>
        /// The adversarial query ignored case. Only populated when SummarySpec.ignore_adversarial_query is set to `true`.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem AdversarialQueryIgnored { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("ADVERSARIAL_QUERY_IGNORED");
        /// <summary>
        /// The non-summary seeking query ignored case. Only populated when SummarySpec.ignore_non_summary_seeking_query is set to `true`.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem NonSummarySeekingQueryIgnored { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("NON_SUMMARY_SEEKING_QUERY_IGNORED");
        /// <summary>
        /// The out-of-domain query ignored case. Google skips the summary if there are no high-relevance search results. For example, the data store contains facts about company A but the user query is asking questions about company B.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem OutOfDomainQueryIgnored { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("OUT_OF_DOMAIN_QUERY_IGNORED");
        /// <summary>
        /// The potential policy violation case. Google skips the summary if there is a potential policy violation detected. This includes content that may be violent or toxic.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem PotentialPolicyViolation { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("POTENTIAL_POLICY_VIOLATION");
        /// <summary>
        /// The LLM addon not enabled case. Google skips the summary if the LLM addon is not enabled.
        /// </summary>
        public static GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem LlmAddonNotEnabled { get; } = new GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem("LLM_ADDON_NOT_ENABLED");

        public static bool operator ==(GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem left, GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem right) => left.Equals(right);
        public static bool operator !=(GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem left, GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem other && Equals(other);
        public bool Equals(GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
