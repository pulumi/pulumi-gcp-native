// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DiscoveryEngine.V1Alpha
{
    /// <summary>
    /// Creates a Engine.
    /// </summary>
    [GoogleNativeResourceType("google-native:discoveryengine/v1alpha:Engine")]
    public partial class Engine : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Output("chatEngineConfig")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigResponse> ChatEngineConfig { get; private set; } = null!;

        /// <summary>
        /// Additional information of the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Output("chatEngineMetadata")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadataResponse> ChatEngineMetadata { get; private set; } = null!;

        [Output("collectionId")]
        public Output<string> CollectionId { get; private set; } = null!;

        /// <summary>
        /// Common config spec that specifies the metadata of the engine.
        /// </summary>
        [Output("commonConfig")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineCommonConfigResponse> CommonConfig { get; private set; } = null!;

        /// <summary>
        /// Timestamp the Recommendation Engine was created at.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary intializations.
        /// </summary>
        [Output("dataStoreIds")]
        public Output<ImmutableArray<string>> DataStoreIds { get; private set; } = null!;

        /// <summary>
        /// The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the Engine, which will become the final component of the Engine's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Output("engineId")]
        public Output<string> EngineId { get; private set; } = null!;

        /// <summary>
        /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
        /// </summary>
        [Output("industryVertical")]
        public Output<string> IndustryVertical { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Configurations for the Media Engine. Only applicable on the data stores with solution_type SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA vertical.
        /// </summary>
        [Output("mediaRecommendationEngineConfig")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigResponse> MediaRecommendationEngineConfig { get; private set; } = null!;

        /// <summary>
        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Additional information of a recommendation engine. Only applicable if solution_type is SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Output("recommendationMetadata")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadataResponse> RecommendationMetadata { get; private set; } = null!;

        /// <summary>
        /// Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Output("searchEngineConfig")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigResponse> SearchEngineConfig { get; private set; } = null!;

        /// <summary>
        /// Additional config specs for a `similar-items` engine.
        /// </summary>
        [Output("similarDocumentsConfig")]
        public Output<Outputs.GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfigResponse> SimilarDocumentsConfig { get; private set; } = null!;

        /// <summary>
        /// The solutions of the engine.
        /// </summary>
        [Output("solutionType")]
        public Output<string> SolutionType { get; private set; } = null!;

        /// <summary>
        /// Timestamp the Recommendation Engine was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Engine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Engine(string name, EngineArgs args, CustomResourceOptions? options = null)
            : base("google-native:discoveryengine/v1alpha:Engine", name, args ?? new EngineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Engine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:discoveryengine/v1alpha:Engine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "collectionId",
                    "engineId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Engine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Engine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Engine(name, id, options);
        }
    }

    public sealed class EngineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Input("chatEngineConfig")]
        public Input<Inputs.GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigArgs>? ChatEngineConfig { get; set; }

        [Input("collectionId", required: true)]
        public Input<string> CollectionId { get; set; } = null!;

        /// <summary>
        /// Common config spec that specifies the metadata of the engine.
        /// </summary>
        [Input("commonConfig")]
        public Input<Inputs.GoogleCloudDiscoveryengineV1alphaEngineCommonConfigArgs>? CommonConfig { get; set; }

        [Input("dataStoreIds")]
        private InputList<string>? _dataStoreIds;

        /// <summary>
        /// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary intializations.
        /// </summary>
        public InputList<string> DataStoreIds
        {
            get => _dataStoreIds ?? (_dataStoreIds = new InputList<string>());
            set => _dataStoreIds = value;
        }

        /// <summary>
        /// The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Required. The ID to use for the Engine, which will become the final component of the Engine's resource name. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Input("engineId", required: true)]
        public Input<string> EngineId { get; set; } = null!;

        /// <summary>
        /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
        /// </summary>
        [Input("industryVertical")]
        public Input<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.EngineIndustryVertical>? IndustryVertical { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Configurations for the Media Engine. Only applicable on the data stores with solution_type SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA vertical.
        /// </summary>
        [Input("mediaRecommendationEngineConfig")]
        public Input<Inputs.GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigArgs>? MediaRecommendationEngineConfig { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Input("searchEngineConfig")]
        public Input<Inputs.GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigArgs>? SearchEngineConfig { get; set; }

        /// <summary>
        /// Additional config specs for a `similar-items` engine.
        /// </summary>
        [Input("similarDocumentsConfig")]
        public Input<Inputs.GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfigArgs>? SimilarDocumentsConfig { get; set; }

        /// <summary>
        /// The solutions of the engine.
        /// </summary>
        [Input("solutionType", required: true)]
        public Input<Pulumi.GoogleNative.DiscoveryEngine.V1Alpha.EngineSolutionType> SolutionType { get; set; } = null!;

        public EngineArgs()
        {
        }
        public static new EngineArgs Empty => new EngineArgs();
    }
}
