// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DiscoveryEngine.V1Beta.Outputs
{

    /// <summary>
    /// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfigResponse
    {
        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
        /// </summary>
        public readonly string Business;
        /// <summary>
        /// The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
        /// </summary>
        public readonly string DefaultLanguageCode;
        /// <summary>
        /// Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfigResponse(
            string business,

            string defaultLanguageCode,

            string location,

            string timeZone)
        {
            Business = business;
            DefaultLanguageCode = defaultLanguageCode;
            Location = location;
            TimeZone = timeZone;
        }
    }
}
