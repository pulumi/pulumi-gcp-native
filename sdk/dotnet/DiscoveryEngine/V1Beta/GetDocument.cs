// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DiscoveryEngine.V1Beta
{
    public static class GetDocument
    {
        /// <summary>
        /// Gets a Document.
        /// </summary>
        public static Task<GetDocumentResult> InvokeAsync(GetDocumentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDocumentResult>("google-native:discoveryengine/v1beta:getDocument", args ?? new GetDocumentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a Document.
        /// </summary>
        public static Output<GetDocumentResult> Invoke(GetDocumentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDocumentResult>("google-native:discoveryengine/v1beta:getDocument", args ?? new GetDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDocumentArgs : global::Pulumi.InvokeArgs
    {
        [Input("branchId", required: true)]
        public string BranchId { get; set; } = null!;

        [Input("collectionId", required: true)]
        public string CollectionId { get; set; } = null!;

        [Input("dataStoreId", required: true)]
        public string DataStoreId { get; set; } = null!;

        [Input("documentId", required: true)]
        public string DocumentId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetDocumentArgs()
        {
        }
        public static new GetDocumentArgs Empty => new GetDocumentArgs();
    }

    public sealed class GetDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("branchId", required: true)]
        public Input<string> BranchId { get; set; } = null!;

        [Input("collectionId", required: true)]
        public Input<string> CollectionId { get; set; } = null!;

        [Input("dataStoreId", required: true)]
        public Input<string> DataStoreId { get; set; } = null!;

        [Input("documentId", required: true)]
        public Input<string> DocumentId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDocumentInvokeArgs()
        {
        }
        public static new GetDocumentInvokeArgs Empty => new GetDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDocumentResult
    {
        /// <summary>
        /// The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
        /// </summary>
        public readonly Outputs.GoogleCloudDiscoveryengineV1betaDocumentContentResponse Content;
        /// <summary>
        /// This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
        /// </summary>
        public readonly ImmutableDictionary<string, object> DerivedStructData;
        /// <summary>
        /// The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
        /// </summary>
        public readonly string JsonData;
        /// <summary>
        /// Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
        /// </summary>
        public readonly string ParentDocumentId;
        /// <summary>
        /// The identifier of the schema located in the same data store.
        /// </summary>
        public readonly string SchemaId;
        /// <summary>
        /// The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
        /// </summary>
        public readonly ImmutableDictionary<string, object> StructData;

        [OutputConstructor]
        private GetDocumentResult(
            Outputs.GoogleCloudDiscoveryengineV1betaDocumentContentResponse content,

            ImmutableDictionary<string, object> derivedStructData,

            string jsonData,

            string name,

            string parentDocumentId,

            string schemaId,

            ImmutableDictionary<string, object> structData)
        {
            Content = content;
            DerivedStructData = derivedStructData;
            JsonData = jsonData;
            Name = name;
            ParentDocumentId = parentDocumentId;
            SchemaId = schemaId;
            StructData = structData;
        }
    }
}
