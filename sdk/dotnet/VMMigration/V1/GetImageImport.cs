// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1
{
    public static class GetImageImport
    {
        /// <summary>
        /// Gets details of a single ImageImport.
        /// </summary>
        public static Task<GetImageImportResult> InvokeAsync(GetImageImportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageImportResult>("google-native:vmmigration/v1:getImageImport", args ?? new GetImageImportArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single ImageImport.
        /// </summary>
        public static Output<GetImageImportResult> Invoke(GetImageImportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageImportResult>("google-native:vmmigration/v1:getImageImport", args ?? new GetImageImportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageImportArgs : global::Pulumi.InvokeArgs
    {
        [Input("imageImportId", required: true)]
        public string ImageImportId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetImageImportArgs()
        {
        }
        public static new GetImageImportArgs Empty => new GetImageImportArgs();
    }

    public sealed class GetImageImportInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("imageImportId", required: true)]
        public Input<string> ImageImportId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetImageImportInvokeArgs()
        {
        }
        public static new GetImageImportInvokeArgs Empty => new GetImageImportInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageImportResult
    {
        /// <summary>
        /// Immutable. The path to the Cloud Storage file from which the image should be imported.
        /// </summary>
        public readonly string CloudStorageUri;
        /// <summary>
        /// The time the image import was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Immutable. Target details for importing a disk image, will be used by ImageImportJob.
        /// </summary>
        public readonly Outputs.DiskImageTargetDetailsResponse DiskImageTargetDefaults;
        /// <summary>
        /// Immutable. The encryption details used by the image import process during the image adaptation for Compute Engine.
        /// </summary>
        public readonly Outputs.EncryptionResponse Encryption;
        /// <summary>
        /// The resource path of the ImageImport.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The result of the most recent runs for this ImageImport. All jobs for this ImageImport can be listed via ListImageImportJobs.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageImportJobResponse> RecentImageImportJobs;

        [OutputConstructor]
        private GetImageImportResult(
            string cloudStorageUri,

            string createTime,

            Outputs.DiskImageTargetDetailsResponse diskImageTargetDefaults,

            Outputs.EncryptionResponse encryption,

            string name,

            ImmutableArray<Outputs.ImageImportJobResponse> recentImageImportJobs)
        {
            CloudStorageUri = cloudStorageUri;
            CreateTime = createTime;
            DiskImageTargetDefaults = diskImageTargetDefaults;
            Encryption = encryption;
            Name = name;
            RecentImageImportJobs = recentImageImportJobs;
        }
    }
}
