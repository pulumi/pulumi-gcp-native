// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1.Outputs
{

    /// <summary>
    /// ImageImportJob describes the progress and result of an image import.
    /// </summary>
    [OutputType]
    public sealed class ImageImportJobResponse
    {
        /// <summary>
        /// The path to the Cloud Storage file from which the image should be imported.
        /// </summary>
        public readonly string CloudStorageUri;
        /// <summary>
        /// The time the image import was created (as an API call, not when it was actually created in the target).
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The resource paths of the resources created by the image import job.
        /// </summary>
        public readonly ImmutableArray<string> CreatedResources;
        /// <summary>
        /// Target details used to import a disk image.
        /// </summary>
        public readonly Outputs.DiskImageTargetDetailsResponse DiskImageTargetDetails;
        /// <summary>
        /// The time the image import was ended.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Provides details on the error that led to the image import state in case of an error.
        /// </summary>
        public readonly ImmutableArray<Outputs.StatusResponse> Errors;
        /// <summary>
        /// The resource path of the ImageImportJob.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The state of the image import.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The image import steps list representing its progress.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageImportStepResponse> Steps;
        /// <summary>
        /// Warnings that occurred during the image import.
        /// </summary>
        public readonly ImmutableArray<Outputs.MigrationWarningResponse> Warnings;

        [OutputConstructor]
        private ImageImportJobResponse(
            string cloudStorageUri,

            string createTime,

            ImmutableArray<string> createdResources,

            Outputs.DiskImageTargetDetailsResponse diskImageTargetDetails,

            string endTime,

            ImmutableArray<Outputs.StatusResponse> errors,

            string name,

            string state,

            ImmutableArray<Outputs.ImageImportStepResponse> steps,

            ImmutableArray<Outputs.MigrationWarningResponse> warnings)
        {
            CloudStorageUri = cloudStorageUri;
            CreateTime = createTime;
            CreatedResources = createdResources;
            DiskImageTargetDetails = diskImageTargetDetails;
            EndTime = endTime;
            Errors = errors;
            Name = name;
            State = state;
            Steps = steps;
            Warnings = warnings;
        }
    }
}
