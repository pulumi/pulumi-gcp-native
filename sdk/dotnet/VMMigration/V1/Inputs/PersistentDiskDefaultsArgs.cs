// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1.Inputs
{

    /// <summary>
    /// Details for creation of a Persistent Disk.
    /// </summary>
    public sealed class PersistentDiskDefaultsArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalLabels")]
        private InputMap<string>? _additionalLabels;

        /// <summary>
        /// A map of labels to associate with the Persistent Disk.
        /// </summary>
        public InputMap<string> AdditionalLabels
        {
            get => _additionalLabels ?? (_additionalLabels = new InputMap<string>());
            set => _additionalLabels = value;
        }

        /// <summary>
        /// Optional. The name of the Persistent Disk to create.
        /// </summary>
        [Input("diskName")]
        public Input<string>? DiskName { get; set; }

        /// <summary>
        /// The disk type to use.
        /// </summary>
        [Input("diskType")]
        public Input<Pulumi.GoogleNative.VMMigration.V1.PersistentDiskDefaultsDiskType>? DiskType { get; set; }

        /// <summary>
        /// Optional. The encryption to apply to the disk.
        /// </summary>
        [Input("encryption")]
        public Input<Inputs.EncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// The ordinal number of the source VM disk.
        /// </summary>
        [Input("sourceDiskNumber", required: true)]
        public Input<int> SourceDiskNumber { get; set; } = null!;

        /// <summary>
        /// Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attacked to a target VM.
        /// </summary>
        [Input("vmAttachmentDetails")]
        public Input<Inputs.VmAttachmentDetailsArgs>? VmAttachmentDetails { get; set; }

        public PersistentDiskDefaultsArgs()
        {
        }
        public static new PersistentDiskDefaultsArgs Empty => new PersistentDiskDefaultsArgs();
    }
}
