// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1Alpha1.Outputs
{

    /// <summary>
    /// VmwareVmDetails describes a VM in vCenter.
    /// </summary>
    [OutputType]
    public sealed class VmwareVmDetailsResponse
    {
        /// <summary>
        /// The VM Boot Option.
        /// </summary>
        public readonly string BootOption;
        /// <summary>
        /// The total size of the storage allocated to the VM in MB.
        /// </summary>
        public readonly string CommittedStorage;
        /// <summary>
        /// The total size of the storage allocated to the VM in MB.
        /// </summary>
        public readonly string CommittedStorageMb;
        /// <summary>
        /// The number of cpus in the VM.
        /// </summary>
        public readonly int CpuCount;
        /// <summary>
        /// The descriptive name of the vCenter's datacenter this VM is contained in.
        /// </summary>
        public readonly string DatacenterDescription;
        /// <summary>
        /// The id of the vCenter's datacenter this VM is contained in.
        /// </summary>
        public readonly string DatacenterId;
        /// <summary>
        /// The number of disks the VM has.
        /// </summary>
        public readonly int DiskCount;
        /// <summary>
        /// The display name of the VM. Note that this is not necessarily unique.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.
        /// </summary>
        public readonly string GuestDescription;
        /// <summary>
        /// The size of the memory of the VM in MB.
        /// </summary>
        public readonly int MemoryMb;
        /// <summary>
        /// The power state of the VM at the moment list was taken.
        /// </summary>
        public readonly string PowerState;
        /// <summary>
        /// The unique identifier of the VM in vCenter.
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.
        /// </summary>
        public readonly string VmId;

        [OutputConstructor]
        private VmwareVmDetailsResponse(
            string bootOption,

            string committedStorage,

            string committedStorageMb,

            int cpuCount,

            string datacenterDescription,

            string datacenterId,

            int diskCount,

            string displayName,

            string guestDescription,

            int memoryMb,

            string powerState,

            string uuid,

            string vmId)
        {
            BootOption = bootOption;
            CommittedStorage = committedStorage;
            CommittedStorageMb = committedStorageMb;
            CpuCount = cpuCount;
            DatacenterDescription = datacenterDescription;
            DatacenterId = datacenterId;
            DiskCount = diskCount;
            DisplayName = displayName;
            GuestDescription = guestDescription;
            MemoryMb = memoryMb;
            PowerState = powerState;
            Uuid = uuid;
            VmId = vmId;
        }
    }
}
