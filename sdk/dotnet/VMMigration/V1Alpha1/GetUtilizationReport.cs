// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1Alpha1
{
    public static class GetUtilizationReport
    {
        /// <summary>
        /// Gets a single Utilization Report.
        /// </summary>
        public static Task<GetUtilizationReportResult> InvokeAsync(GetUtilizationReportArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUtilizationReportResult>("google-native:vmmigration/v1alpha1:getUtilizationReport", args ?? new GetUtilizationReportArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a single Utilization Report.
        /// </summary>
        public static Output<GetUtilizationReportResult> Invoke(GetUtilizationReportInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUtilizationReportResult>("google-native:vmmigration/v1alpha1:getUtilizationReport", args ?? new GetUtilizationReportInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUtilizationReportArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("sourceId", required: true)]
        public string SourceId { get; set; } = null!;

        [Input("utilizationReportId", required: true)]
        public string UtilizationReportId { get; set; } = null!;

        [Input("view")]
        public string? View { get; set; }

        public GetUtilizationReportArgs()
        {
        }
        public static new GetUtilizationReportArgs Empty => new GetUtilizationReportArgs();
    }

    public sealed class GetUtilizationReportInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sourceId", required: true)]
        public Input<string> SourceId { get; set; } = null!;

        [Input("utilizationReportId", required: true)]
        public Input<string> UtilizationReportId { get; set; } = null!;

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetUtilizationReportInvokeArgs()
        {
        }
        public static new GetUtilizationReportInvokeArgs Empty => new GetUtilizationReportInvokeArgs();
    }


    [OutputType]
    public sealed class GetUtilizationReportResult
    {
        /// <summary>
        /// The time the report was created (this refers to the time of the request, not the time the report creation completed).
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The report display name, as assigned by the user.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Provides details on the state of the report in case of an error.
        /// </summary>
        public readonly Outputs.StatusResponse Error;
        /// <summary>
        /// The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the "frame_end_time" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
        /// </summary>
        public readonly string FrameEndTime;
        /// <summary>
        /// The report unique name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Current state of the report.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The time the state was last set.
        /// </summary>
        public readonly string StateTime;
        /// <summary>
        /// Time frame of the report.
        /// </summary>
        public readonly string TimeFrame;
        /// <summary>
        /// Total number of VMs included in the report.
        /// </summary>
        public readonly int VmCount;
        /// <summary>
        /// List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
        /// </summary>
        public readonly ImmutableArray<Outputs.VmUtilizationInfoResponse> Vms;
        /// <summary>
        /// Total number of VMs included in the report.
        /// </summary>
        public readonly int VmsCount;

        [OutputConstructor]
        private GetUtilizationReportResult(
            string createTime,

            string displayName,

            Outputs.StatusResponse error,

            string frameEndTime,

            string name,

            string state,

            string stateTime,

            string timeFrame,

            int vmCount,

            ImmutableArray<Outputs.VmUtilizationInfoResponse> vms,

            int vmsCount)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            Error = error;
            FrameEndTime = frameEndTime;
            Name = name;
            State = state;
            StateTime = stateTime;
            TimeFrame = timeFrame;
            VmCount = vmCount;
            Vms = vms;
            VmsCount = vmsCount;
        }
    }
}
