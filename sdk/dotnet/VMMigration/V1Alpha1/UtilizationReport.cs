// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMMigration.V1Alpha1
{
    /// <summary>
    /// Creates a new UtilizationReport.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:vmmigration/v1alpha1:UtilizationReport")]
    public partial class UtilizationReport : Pulumi.CustomResource
    {
        /// <summary>
        /// The time the report was created (this refers to the time of the request, not the time the report creation completed).
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The report display name, as assigned by the user.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Provides details on the state of the report in case of an error.
        /// </summary>
        [Output("error")]
        public Output<Outputs.StatusResponse> Error { get; private set; } = null!;

        /// <summary>
        /// The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the "frame_end_time" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
        /// </summary>
        [Output("frameEndTime")]
        public Output<string> FrameEndTime { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The report unique name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        [Output("sourceId")]
        public Output<string> SourceId { get; private set; } = null!;

        /// <summary>
        /// Current state of the report.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time the state was last set.
        /// </summary>
        [Output("stateTime")]
        public Output<string> StateTime { get; private set; } = null!;

        /// <summary>
        /// Time frame of the report.
        /// </summary>
        [Output("timeFrame")]
        public Output<string> TimeFrame { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.
        /// </summary>
        [Output("utilizationReportId")]
        public Output<string> UtilizationReportId { get; private set; } = null!;

        /// <summary>
        /// Total number of VMs included in the report.
        /// </summary>
        [Output("vmCount")]
        public Output<int> VmCount { get; private set; } = null!;

        /// <summary>
        /// List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
        /// </summary>
        [Output("vms")]
        public Output<ImmutableArray<Outputs.VmUtilizationInfoResponse>> Vms { get; private set; } = null!;

        /// <summary>
        /// Total number of VMs included in the report.
        /// </summary>
        [Output("vmsCount")]
        public Output<int> VmsCount { get; private set; } = null!;


        /// <summary>
        /// Create a UtilizationReport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UtilizationReport(string name, UtilizationReportArgs args, CustomResourceOptions? options = null)
            : base("google-native:vmmigration/v1alpha1:UtilizationReport", name, args ?? new UtilizationReportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UtilizationReport(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:vmmigration/v1alpha1:UtilizationReport", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UtilizationReport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UtilizationReport Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new UtilizationReport(name, id, options);
        }
    }

    public sealed class UtilizationReportArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The report display name, as assigned by the user.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("sourceId", required: true)]
        public Input<string> SourceId { get; set; } = null!;

        /// <summary>
        /// Time frame of the report.
        /// </summary>
        [Input("timeFrame")]
        public Input<Pulumi.GoogleNative.VMMigration.V1Alpha1.UtilizationReportTimeFrame>? TimeFrame { get; set; }

        /// <summary>
        /// Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.
        /// </summary>
        [Input("utilizationReportId", required: true)]
        public Input<string> UtilizationReportId { get; set; } = null!;

        [Input("vms")]
        private InputList<Inputs.VmUtilizationInfoArgs>? _vms;

        /// <summary>
        /// List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
        /// </summary>
        public InputList<Inputs.VmUtilizationInfoArgs> Vms
        {
            get => _vms ?? (_vms = new InputList<Inputs.VmUtilizationInfoArgs>());
            set => _vms = value;
        }

        public UtilizationReportArgs()
        {
        }
    }
}
