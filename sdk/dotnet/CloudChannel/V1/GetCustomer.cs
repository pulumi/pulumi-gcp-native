// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudChannel.V1
{
    public static class GetCustomer
    {
        /// <summary>
        /// Returns the requested Customer resource. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer resource doesn't exist. Usually the result of an invalid name parameter. Return value: The Customer resource.
        /// </summary>
        public static Task<GetCustomerResult> InvokeAsync(GetCustomerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCustomerResult>("google-native:cloudchannel/v1:getCustomer", args ?? new GetCustomerArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the requested Customer resource. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer resource doesn't exist. Usually the result of an invalid name parameter. Return value: The Customer resource.
        /// </summary>
        public static Output<GetCustomerResult> Invoke(GetCustomerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCustomerResult>("google-native:cloudchannel/v1:getCustomer", args ?? new GetCustomerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomerArgs : Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("channelPartnerLinkId", required: true)]
        public string ChannelPartnerLinkId { get; set; } = null!;

        [Input("customerId", required: true)]
        public string CustomerId { get; set; } = null!;

        public GetCustomerArgs()
        {
        }
    }

    public sealed class GetCustomerInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("channelPartnerLinkId", required: true)]
        public Input<string> ChannelPartnerLinkId { get; set; } = null!;

        [Input("customerId", required: true)]
        public Input<string> CustomerId { get; set; } = null!;

        public GetCustomerInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCustomerResult
    {
        /// <summary>
        /// Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
        /// </summary>
        public readonly string AlternateEmail;
        /// <summary>
        /// Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
        /// </summary>
        public readonly string ChannelPartnerId;
        /// <summary>
        /// The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
        /// </summary>
        public readonly string CloudIdentityId;
        /// <summary>
        /// Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
        /// </summary>
        public readonly Outputs.GoogleCloudChannelV1CloudIdentityInfoResponse CloudIdentityInfo;
        /// <summary>
        /// Time when the customer was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The customer's primary domain. Must match the primary contact email's domain.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        /// </summary>
        public readonly string LanguageCode;
        /// <summary>
        /// Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of the organization that the customer entity represents.
        /// </summary>
        public readonly string OrgDisplayName;
        /// <summary>
        /// The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
        /// </summary>
        public readonly Outputs.GoogleTypePostalAddressResponse OrgPostalAddress;
        /// <summary>
        /// Primary contact info.
        /// </summary>
        public readonly Outputs.GoogleCloudChannelV1ContactInfoResponse PrimaryContactInfo;
        /// <summary>
        /// Time when the customer was updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCustomerResult(
            string alternateEmail,

            string channelPartnerId,

            string cloudIdentityId,

            Outputs.GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo,

            string createTime,

            string domain,

            string languageCode,

            string name,

            string orgDisplayName,

            Outputs.GoogleTypePostalAddressResponse orgPostalAddress,

            Outputs.GoogleCloudChannelV1ContactInfoResponse primaryContactInfo,

            string updateTime)
        {
            AlternateEmail = alternateEmail;
            ChannelPartnerId = channelPartnerId;
            CloudIdentityId = cloudIdentityId;
            CloudIdentityInfo = cloudIdentityInfo;
            CreateTime = createTime;
            Domain = domain;
            LanguageCode = languageCode;
            Name = name;
            OrgDisplayName = orgDisplayName;
            OrgPostalAddress = orgPostalAddress;
            PrimaryContactInfo = primaryContactInfo;
            UpdateTime = updateTime;
        }
    }
}
