// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.File.V1Beta1
{
    public static class GetSnapshot
    {
        /// <summary>
        /// Gets the details of a specific snapshot.
        /// </summary>
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("google-native:file/v1beta1:getSnapshot", args ?? new GetSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of a specific snapshot.
        /// </summary>
        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("google-native:file/v1beta1:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotArgs : Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("snapshotId", required: true)]
        public string SnapshotId { get; set; } = null!;

        public GetSnapshotArgs()
        {
        }
    }

    public sealed class GetSnapshotInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("snapshotId", required: true)]
        public Input<string> SnapshotId { get; set; } = null!;

        public GetSnapshotInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        /// <summary>
        /// The time when the snapshot was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The amount of bytes needed to allocate a full copy of the snapshot content
        /// </summary>
        public readonly string FilesystemUsedBytes;
        /// <summary>
        /// Resource labels to represent user provided metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The snapshot state.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetSnapshotResult(
            string createTime,

            string description,

            string filesystemUsedBytes,

            ImmutableDictionary<string, string> labels,

            string name,

            string state)
        {
            CreateTime = createTime;
            Description = description;
            FilesystemUsedBytes = filesystemUsedBytes;
            Labels = labels;
            Name = name;
            State = state;
        }
    }
}
