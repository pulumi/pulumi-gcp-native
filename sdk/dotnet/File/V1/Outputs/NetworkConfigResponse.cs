// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.File.V1.Outputs
{

    [OutputType]
    public sealed class NetworkConfigResponse
    {
        /// <summary>
        /// IPv4 addresses in the format `{octet1}.{octet2}.{octet3}.{octet4}` or IPv6 addresses in the format `{block1}:{block2}:{block3}:{block4}:{block5}:{block6}:{block7}:{block8}`.
        /// </summary>
        public readonly ImmutableArray<string> IpAddresses;
        /// <summary>
        /// Internet protocol versions for which the instance has IP addresses assigned. For this version, only MODE_IPV4 is supported.
        /// </summary>
        public readonly ImmutableArray<string> Modes;
        /// <summary>
        /// The name of the Google Compute Engine [VPC network](https://cloud.google.com/vpc/docs/vpc) to which the instance is connected.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// A /29 CIDR block in one of the [internal IP address ranges](https://www.arin.net/reference/research/statistics/address_filters/) that identifies the range of IP addresses reserved for this instance. For example, 10.0.0.0/29 or 192.168.0.0/29. The range you specify can't overlap with either existing subnets or assigned IP address ranges for other Cloud Filestore instances in the selected VPC network.
        /// </summary>
        public readonly string ReservedIpRange;

        [OutputConstructor]
        private NetworkConfigResponse(
            ImmutableArray<string> ipAddresses,

            ImmutableArray<string> modes,

            string network,

            string reservedIpRange)
        {
            IpAddresses = ipAddresses;
            Modes = modes;
            Network = network;
            ReservedIpRange = reservedIpRange;
        }
    }
}
