// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ApigeeRegistry.V1
{
    public static class GetInstance
    {
        /// <summary>
        /// Gets details of a single Instance.
        /// </summary>
        public static Task<GetInstanceResult> InvokeAsync(GetInstanceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceResult>("google-native:apigeeregistry/v1:getInstance", args ?? new GetInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Instance.
        /// </summary>
        public static Output<GetInstanceResult> Invoke(GetInstanceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceResult>("google-native:apigeeregistry/v1:getInstance", args ?? new GetInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetInstanceArgs()
        {
        }
        public static new GetInstanceArgs Empty => new GetInstanceArgs();
    }

    public sealed class GetInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetInstanceInvokeArgs()
        {
        }
        public static new GetInstanceInvokeArgs Empty => new GetInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceResult
    {
        /// <summary>
        /// Config of the Instance.
        /// </summary>
        public readonly Outputs.ConfigResponse Config;
        /// <summary>
        /// Creation timestamp.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Format: `projects/*/locations/*/instance`. Currently only locations/global is supported.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the Instance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Extra information of Instance.State if the state is `FAILED`.
        /// </summary>
        public readonly string StateMessage;
        /// <summary>
        /// Last update timestamp.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetInstanceResult(
            Outputs.ConfigResponse config,

            string createTime,

            string name,

            string state,

            string stateMessage,

            string updateTime)
        {
            Config = config;
            CreateTime = createTime;
            Name = name;
            State = state;
            StateMessage = stateMessage;
            UpdateTime = updateTime;
        }
    }
}
