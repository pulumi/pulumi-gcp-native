// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Firebase.V1Beta1
{
    public static class GetIosApp
    {
        /// <summary>
        /// Gets the specified IosApp.
        /// </summary>
        public static Task<GetIosAppResult> InvokeAsync(GetIosAppArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIosAppResult>("google-native:firebase/v1beta1:getIosApp", args ?? new GetIosAppArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified IosApp.
        /// </summary>
        public static Output<GetIosAppResult> Invoke(GetIosAppInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIosAppResult>("google-native:firebase/v1beta1:getIosApp", args ?? new GetIosAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIosAppArgs : Pulumi.InvokeArgs
    {
        [Input("iosAppId", required: true)]
        public string IosAppId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetIosAppArgs()
        {
        }
    }

    public sealed class GetIosAppInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("iosAppId", required: true)]
        public Input<string> IosAppId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetIosAppInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIosAppResult
    {
        /// <summary>
        /// Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
        /// </summary>
        public readonly string AppStoreId;
        /// <summary>
        /// Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
        /// </summary>
        public readonly string BundleId;
        /// <summary>
        /// The user-assigned display name for the `IosApp`.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The Apple Developer Team ID associated with the App in the App Store.
        /// </summary>
        public readonly string TeamId;

        [OutputConstructor]
        private GetIosAppResult(
            string appId,

            string appStoreId,

            string bundleId,

            string displayName,

            string name,

            string project,

            string teamId)
        {
            AppId = appId;
            AppStoreId = appStoreId;
            BundleId = bundleId;
            DisplayName = displayName;
            Name = name;
            Project = project;
            TeamId = teamId;
        }
    }
}
