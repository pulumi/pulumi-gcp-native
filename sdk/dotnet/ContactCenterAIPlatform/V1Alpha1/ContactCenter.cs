// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContactCenterAIPlatform.V1Alpha1
{
    /// <summary>
    /// Creates a new ContactCenter in a given project and location.
    /// </summary>
    [GoogleNativeResourceType("google-native:contactcenteraiplatform/v1alpha1:ContactCenter")]
    public partial class ContactCenter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Info about the first admin user, such as given name and family name.
        /// </summary>
        [Output("adminUser")]
        public Output<Outputs.AdminUserResponse> AdminUser { get; private set; } = null!;

        /// <summary>
        /// Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
        /// </summary>
        [Output("ccaipManagedUsers")]
        public Output<bool> CcaipManagedUsers { get; private set; } = null!;

        /// <summary>
        /// Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC
        /// </summary>
        [Output("contactCenterId")]
        public Output<string> ContactCenterId { get; private set; } = null!;

        /// <summary>
        /// [Output only] Create time stamp
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
        /// </summary>
        [Output("customerDomainPrefix")]
        public Output<string> CustomerDomainPrefix { get; private set; } = null!;

        /// <summary>
        /// A user friendly name for the ContactCenter.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The configuration of this instance, it is currently immutable once created.
        /// </summary>
        [Output("instanceConfig")]
        public Output<Outputs.InstanceConfigResponse> InstanceConfig { get; private set; } = null!;

        /// <summary>
        /// Immutable. The KMS key name to encrypt the user input (`ContactCenter`).
        /// </summary>
        [Output("kmsKey")]
        public Output<string> KmsKey { get; private set; } = null!;

        /// <summary>
        /// Labels as key value pairs
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// name of resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// Optional. Params that sets up Google as IdP.
        /// </summary>
        [Output("samlParams")]
        public Output<Outputs.SAMLParamsResponse> SamlParams { get; private set; } = null!;

        /// <summary>
        /// The state of this contact center.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// [Output only] Update time stamp
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// URIs to access the deployed ContactCenters.
        /// </summary>
        [Output("uris")]
        public Output<Outputs.URIsResponse> Uris { get; private set; } = null!;

        /// <summary>
        /// Optional. Email address of the first admin user.
        /// </summary>
        [Output("userEmail")]
        public Output<string> UserEmail { get; private set; } = null!;


        /// <summary>
        /// Create a ContactCenter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContactCenter(string name, ContactCenterArgs args, CustomResourceOptions? options = null)
            : base("google-native:contactcenteraiplatform/v1alpha1:ContactCenter", name, args ?? new ContactCenterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContactCenter(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:contactcenteraiplatform/v1alpha1:ContactCenter", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "contactCenterId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContactCenter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContactCenter Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContactCenter(name, id, options);
        }
    }

    public sealed class ContactCenterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Info about the first admin user, such as given name and family name.
        /// </summary>
        [Input("adminUser")]
        public Input<Inputs.AdminUserArgs>? AdminUser { get; set; }

        /// <summary>
        /// Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
        /// </summary>
        [Input("ccaipManagedUsers")]
        public Input<bool>? CcaipManagedUsers { get; set; }

        /// <summary>
        /// Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC
        /// </summary>
        [Input("contactCenterId", required: true)]
        public Input<string> ContactCenterId { get; set; } = null!;

        /// <summary>
        /// Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
        /// </summary>
        [Input("customerDomainPrefix", required: true)]
        public Input<string> CustomerDomainPrefix { get; set; } = null!;

        /// <summary>
        /// A user friendly name for the ContactCenter.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The configuration of this instance, it is currently immutable once created.
        /// </summary>
        [Input("instanceConfig")]
        public Input<Inputs.InstanceConfigArgs>? InstanceConfig { get; set; }

        /// <summary>
        /// Immutable. The KMS key name to encrypt the user input (`ContactCenter`).
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels as key value pairs
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// name of resource
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Optional. Params that sets up Google as IdP.
        /// </summary>
        [Input("samlParams")]
        public Input<Inputs.SAMLParamsArgs>? SamlParams { get; set; }

        /// <summary>
        /// Optional. Email address of the first admin user.
        /// </summary>
        [Input("userEmail")]
        public Input<string>? UserEmail { get; set; }

        public ContactCenterArgs()
        {
        }
        public static new ContactCenterArgs Empty => new ContactCenterArgs();
    }
}
