// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DataLabeling.V1Beta1.Outputs
{

    /// <summary>
    /// Configures specific details of how a continuous evaluation job works. Provide this configuration when you create an EvaluationJob.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse
    {
        /// <summary>
        /// Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`: the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection. Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).
        /// </summary>
        public readonly ImmutableDictionary<string, string> BigqueryImportKeys;
        /// <summary>
        /// Specify this field if your model version performs image object detection (bounding box detection). `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse BoundingPolyConfig;
        /// <summary>
        /// Details for calculating evaluation metrics and creating Evaulations. If your model version performs image object detection, you must specify the `boundingBoxEvaluationOptions` field within this configuration. Otherwise, provide an empty object for this configuration.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1EvaluationConfigResponse EvaluationConfig;
        /// <summary>
        /// Optional. Configuration details for evaluation job alerts. Specify this field if you want to receive email alerts if the evaluation job finds that your predictions have low mean average precision during a run.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse EvaluationJobAlertConfig;
        /// <summary>
        /// The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit.
        /// </summary>
        public readonly int ExampleCount;
        /// <summary>
        /// Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to BigQuery.
        /// </summary>
        public readonly double ExampleSamplePercentage;
        /// <summary>
        /// Optional. Details for human annotation of your data. If you set labelMissingGroundTruth to `true` for this evaluation job, then you must specify this field. If you plan to provide your own ground truth labels, then omit this field. Note that you must create an Instruction resource before you can specify this field. Provide the name of the instruction resource in the `instruction` field within this configuration.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse HumanAnnotationConfig;
        /// <summary>
        /// Specify this field if your model version performs image classification or general classification. `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet. `allowMultiLabel` in this configuration must match `classificationMetadata.isMultiLabel` in input_config.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse ImageClassificationConfig;
        /// <summary>
        /// Rquired. Details for the sampled prediction input. Within this configuration, there are requirements for several fields: * `dataType` must be one of `IMAGE`, `TEXT`, or `GENERAL_DATA`. * `annotationType` must be one of `IMAGE_CLASSIFICATION_ANNOTATION`, `TEXT_CLASSIFICATION_ANNOTATION`, `GENERAL_CLASSIFICATION_ANNOTATION`, or `IMAGE_BOUNDING_BOX_ANNOTATION` (image object detection). * If your machine learning model performs classification, you must specify `classificationMetadata.isMultiLabel`. * You must specify `bigquerySource` (not `gcsSource`).
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1InputConfigResponse InputConfig;
        /// <summary>
        /// Specify this field if your model version performs text classification. `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet. `allowMultiLabel` in this configuration must match `classificationMetadata.isMultiLabel` in input_config.
        /// </summary>
        public readonly Outputs.GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse TextClassificationConfig;

        [OutputConstructor]
        private GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse(
            ImmutableDictionary<string, string> bigqueryImportKeys,

            Outputs.GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse boundingPolyConfig,

            Outputs.GoogleCloudDatalabelingV1beta1EvaluationConfigResponse evaluationConfig,

            Outputs.GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse evaluationJobAlertConfig,

            int exampleCount,

            double exampleSamplePercentage,

            Outputs.GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse humanAnnotationConfig,

            Outputs.GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse imageClassificationConfig,

            Outputs.GoogleCloudDatalabelingV1beta1InputConfigResponse inputConfig,

            Outputs.GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse textClassificationConfig)
        {
            BigqueryImportKeys = bigqueryImportKeys;
            BoundingPolyConfig = boundingPolyConfig;
            EvaluationConfig = evaluationConfig;
            EvaluationJobAlertConfig = evaluationJobAlertConfig;
            ExampleCount = exampleCount;
            ExampleSamplePercentage = exampleSamplePercentage;
            HumanAnnotationConfig = humanAnnotationConfig;
            ImageClassificationConfig = imageClassificationConfig;
            InputConfig = inputConfig;
            TextClassificationConfig = textClassificationConfig;
        }
    }
}
