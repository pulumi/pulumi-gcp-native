// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1
{
    public static class GetNodeGroup
    {
        /// <summary>
        /// Gets the resource representation for a node group in a cluster.
        /// </summary>
        public static Task<GetNodeGroupResult> InvokeAsync(GetNodeGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNodeGroupResult>("google-native:dataproc/v1:getNodeGroup", args ?? new GetNodeGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the resource representation for a node group in a cluster.
        /// </summary>
        public static Output<GetNodeGroupResult> Invoke(GetNodeGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNodeGroupResult>("google-native:dataproc/v1:getNodeGroup", args ?? new GetNodeGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNodeGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("nodeGroupId", required: true)]
        public string NodeGroupId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("regionId", required: true)]
        public string RegionId { get; set; } = null!;

        public GetNodeGroupArgs()
        {
        }
        public static new GetNodeGroupArgs Empty => new GetNodeGroupArgs();
    }

    public sealed class GetNodeGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("nodeGroupId", required: true)]
        public Input<string> NodeGroupId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("regionId", required: true)]
        public Input<string> RegionId { get; set; } = null!;

        public GetNodeGroupInvokeArgs()
        {
        }
        public static new GetNodeGroupInvokeArgs Empty => new GetNodeGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNodeGroupResult
    {
        /// <summary>
        /// Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The Node group resource name (https://aip.dev/122).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. The node group instance group configuration.
        /// </summary>
        public readonly Outputs.InstanceGroupConfigResponse NodeGroupConfig;
        /// <summary>
        /// Node group roles.
        /// </summary>
        public readonly ImmutableArray<string> Roles;

        [OutputConstructor]
        private GetNodeGroupResult(
            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.InstanceGroupConfigResponse nodeGroupConfig,

            ImmutableArray<string> roles)
        {
            Labels = labels;
            Name = name;
            NodeGroupConfig = nodeGroupConfig;
            Roles = roles;
        }
    }
}
