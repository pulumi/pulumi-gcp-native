// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1.Inputs
{

    /// <summary>
    /// A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
    /// </summary>
    public sealed class SparkSqlJobArgs : global::Pulumi.ResourceArgs
    {
        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;

        /// <summary>
        /// Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
        /// </summary>
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        /// <summary>
        /// Optional. The runtime log config for job execution.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.LoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        /// <summary>
        /// The HCFS URI of the script that contains SQL queries.
        /// </summary>
        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        /// <summary>
        /// A list of queries.
        /// </summary>
        [Input("queryList")]
        public Input<Inputs.QueryListArgs>? QueryList { get; set; }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;

        /// <summary>
        /// Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
        /// </summary>
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public SparkSqlJobArgs()
        {
        }
        public static new SparkSqlJobArgs Empty => new SparkSqlJobArgs();
    }
}
