// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1.Inputs
{

    /// <summary>
    /// The cluster's GKE config.
    /// </summary>
    public sealed class GkeClusterConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
        /// </summary>
        [Input("gkeClusterTarget")]
        public Input<string>? GkeClusterTarget { get; set; }

        /// <summary>
        /// Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
        /// </summary>
        [Input("namespacedGkeDeploymentTarget")]
        public Input<Inputs.NamespacedGkeDeploymentTargetArgs>? NamespacedGkeDeploymentTarget { get; set; }

        [Input("nodePoolTarget")]
        private InputList<Inputs.GkeNodePoolTargetArgs>? _nodePoolTarget;

        /// <summary>
        /// Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
        /// </summary>
        public InputList<Inputs.GkeNodePoolTargetArgs> NodePoolTarget
        {
            get => _nodePoolTarget ?? (_nodePoolTarget = new InputList<Inputs.GkeNodePoolTargetArgs>());
            set => _nodePoolTarget = value;
        }

        public GkeClusterConfigArgs()
        {
        }
        public static new GkeClusterConfigArgs Empty => new GkeClusterConfigArgs();
    }
}
