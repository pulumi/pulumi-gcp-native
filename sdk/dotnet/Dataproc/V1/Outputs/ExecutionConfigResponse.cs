// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1.Outputs
{

    /// <summary>
    /// Execution configuration for a workload.
    /// </summary>
    [OutputType]
    public sealed class ExecutionConfigResponse
    {
        /// <summary>
        /// Optional. The duration to keep the session alive while it's idling. Passing this threshold will cause the session to be terminated. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 4 hours if not set.
        /// </summary>
        public readonly string IdleTtl;
        /// <summary>
        /// Optional. The Cloud KMS key to use for encryption.
        /// </summary>
        public readonly string KmsKey;
        /// <summary>
        /// Optional. Tags used for network traffic control.
        /// </summary>
        public readonly ImmutableArray<string> NetworkTags;
        /// <summary>
        /// Optional. Network URI to connect workload to.
        /// </summary>
        public readonly string NetworkUri;
        /// <summary>
        /// Optional. Service account that used to execute workload.
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Optional. Subnetwork URI to connect workload to.
        /// </summary>
        public readonly string SubnetworkUri;

        [OutputConstructor]
        private ExecutionConfigResponse(
            string idleTtl,

            string kmsKey,

            ImmutableArray<string> networkTags,

            string networkUri,

            string serviceAccount,

            string subnetworkUri)
        {
            IdleTtl = idleTtl;
            KmsKey = kmsKey;
            NetworkTags = networkTags;
            NetworkUri = networkUri;
            ServiceAccount = serviceAccount;
            SubnetworkUri = subnetworkUri;
        }
    }
}
