// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1
{
    public static class GetSessionTemplate
    {
        /// <summary>
        /// Gets the resource representation for a session template.
        /// </summary>
        public static Task<GetSessionTemplateResult> InvokeAsync(GetSessionTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSessionTemplateResult>("google-native:dataproc/v1:getSessionTemplate", args ?? new GetSessionTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the resource representation for a session template.
        /// </summary>
        public static Output<GetSessionTemplateResult> Invoke(GetSessionTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSessionTemplateResult>("google-native:dataproc/v1:getSessionTemplate", args ?? new GetSessionTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSessionTemplateArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("sessionTemplateId", required: true)]
        public string SessionTemplateId { get; set; } = null!;

        public GetSessionTemplateArgs()
        {
        }
        public static new GetSessionTemplateArgs Empty => new GetSessionTemplateArgs();
    }

    public sealed class GetSessionTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sessionTemplateId", required: true)]
        public Input<string> SessionTemplateId { get; set; } = null!;

        public GetSessionTemplateInvokeArgs()
        {
        }
        public static new GetSessionTemplateInvokeArgs Empty => new GetSessionTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetSessionTemplateResult
    {
        /// <summary>
        /// The time when the template was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The email address of the user who created the template.
        /// </summary>
        public readonly string Creator;
        /// <summary>
        /// Optional. Brief description of the template.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Environment configuration for session execution.
        /// </summary>
        public readonly Outputs.EnvironmentConfigResponse EnvironmentConfig;
        /// <summary>
        /// Optional. Jupyter session config.
        /// </summary>
        public readonly Outputs.JupyterConfigResponse JupyterSession;
        /// <summary>
        /// Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name of the session template.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Runtime configuration for session execution.
        /// </summary>
        public readonly Outputs.RuntimeConfigResponse RuntimeConfig;
        /// <summary>
        /// The time the template was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetSessionTemplateResult(
            string createTime,

            string creator,

            string description,

            Outputs.EnvironmentConfigResponse environmentConfig,

            Outputs.JupyterConfigResponse jupyterSession,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.RuntimeConfigResponse runtimeConfig,

            string updateTime,

            string uuid)
        {
            CreateTime = createTime;
            Creator = creator;
            Description = description;
            EnvironmentConfig = environmentConfig;
            JupyterSession = jupyterSession;
            Labels = labels;
            Name = name;
            RuntimeConfig = runtimeConfig;
            UpdateTime = updateTime;
            Uuid = uuid;
        }
    }
}
