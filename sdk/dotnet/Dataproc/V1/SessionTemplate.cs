// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataproc.V1
{
    /// <summary>
    /// Create a session template synchronously.
    /// </summary>
    [GoogleNativeResourceType("google-native:dataproc/v1:SessionTemplate")]
    public partial class SessionTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the template was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The email address of the user who created the template.
        /// </summary>
        [Output("creator")]
        public Output<string> Creator { get; private set; } = null!;

        /// <summary>
        /// Optional. Brief description of the template.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Optional. Environment configuration for session execution.
        /// </summary>
        [Output("environmentConfig")]
        public Output<Outputs.EnvironmentConfigResponse> EnvironmentConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. Jupyter session config.
        /// </summary>
        [Output("jupyterSession")]
        public Output<Outputs.JupyterConfigResponse> JupyterSession { get; private set; } = null!;

        /// <summary>
        /// Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the session template.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. Runtime configuration for session execution.
        /// </summary>
        [Output("runtimeConfig")]
        public Output<Outputs.RuntimeConfigResponse> RuntimeConfig { get; private set; } = null!;

        /// <summary>
        /// The time the template was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a SessionTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SessionTemplate(string name, SessionTemplateArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:dataproc/v1:SessionTemplate", name, args ?? new SessionTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SessionTemplate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:dataproc/v1:SessionTemplate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SessionTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SessionTemplate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SessionTemplate(name, id, options);
        }
    }

    public sealed class SessionTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Brief description of the template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Optional. Environment configuration for session execution.
        /// </summary>
        [Input("environmentConfig")]
        public Input<Inputs.EnvironmentConfigArgs>? EnvironmentConfig { get; set; }

        /// <summary>
        /// Optional. Jupyter session config.
        /// </summary>
        [Input("jupyterSession")]
        public Input<Inputs.JupyterConfigArgs>? JupyterSession { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the session template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. Runtime configuration for session execution.
        /// </summary>
        [Input("runtimeConfig")]
        public Input<Inputs.RuntimeConfigArgs>? RuntimeConfig { get; set; }

        public SessionTemplateArgs()
        {
        }
        public static new SessionTemplateArgs Empty => new SessionTemplateArgs();
    }
}
