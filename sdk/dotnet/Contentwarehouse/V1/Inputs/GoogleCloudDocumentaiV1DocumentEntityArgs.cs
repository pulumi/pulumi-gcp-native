// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contentwarehouse.V1.Inputs
{

    /// <summary>
    /// An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
    /// </summary>
    public sealed class GoogleCloudDocumentaiV1DocumentEntityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Confidence of detected Schema entity. Range `[0, 1]`.
        /// </summary>
        [Input("confidence")]
        public Input<double>? Confidence { get; set; }

        /// <summary>
        /// Optional. Canonical id. This will be a unique value in the entity list for this document.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Optional. Deprecated. Use `id` field instead.
        /// </summary>
        [Input("mentionId")]
        public Input<string>? MentionId { get; set; }

        /// <summary>
        /// Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
        /// </summary>
        [Input("mentionText")]
        public Input<string>? MentionText { get; set; }

        /// <summary>
        /// Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.
        /// </summary>
        [Input("normalizedValue")]
        public Input<Inputs.GoogleCloudDocumentaiV1DocumentEntityNormalizedValueArgs>? NormalizedValue { get; set; }

        /// <summary>
        /// Optional. Represents the provenance of this entity wrt. the location on the page where it was found.
        /// </summary>
        [Input("pageAnchor")]
        public Input<Inputs.GoogleCloudDocumentaiV1DocumentPageAnchorArgs>? PageAnchor { get; set; }

        [Input("properties")]
        private InputList<Inputs.GoogleCloudDocumentaiV1DocumentEntityArgs>? _properties;

        /// <summary>
        /// Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
        /// </summary>
        public InputList<Inputs.GoogleCloudDocumentaiV1DocumentEntityArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.GoogleCloudDocumentaiV1DocumentEntityArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// Optional. The history of this annotation.
        /// </summary>
        [Input("provenance")]
        public Input<Inputs.GoogleCloudDocumentaiV1DocumentProvenanceArgs>? Provenance { get; set; }

        /// <summary>
        /// Optional. Whether the entity will be redacted for de-identification purposes.
        /// </summary>
        [Input("redacted")]
        public Input<bool>? Redacted { get; set; }

        /// <summary>
        /// Optional. Provenance of the entity. Text anchor indexing into the Document.text.
        /// </summary>
        [Input("textAnchor")]
        public Input<Inputs.GoogleCloudDocumentaiV1DocumentTextAnchorArgs>? TextAnchor { get; set; }

        /// <summary>
        /// Entity type from a schema e.g. `Address`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GoogleCloudDocumentaiV1DocumentEntityArgs()
        {
        }
        public static new GoogleCloudDocumentaiV1DocumentEntityArgs Empty => new GoogleCloudDocumentaiV1DocumentEntityArgs();
    }
}
