// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contentwarehouse.V1.Outputs
{

    /// <summary>
    /// Represents the rule for a content warehouse trigger.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudContentwarehouseV1RuleResponse
    {
        /// <summary>
        /// List of actions that are executed when the rule is satisfied.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudContentwarehouseV1ActionResponse> Actions;
        /// <summary>
        /// Represents the conditional expression to be evaluated. Expression should evaluate to a boolean result. When the condition is true actions are executed. Example: user_role = "hsbc_role_1" AND doc.salary &gt; 20000
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// Short description of the rule and its context.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of the rule. It has to be unique across all the examples. This is managed internally.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// Identifies the trigger type for running the policy.
        /// </summary>
        public readonly string TriggerType;

        [OutputConstructor]
        private GoogleCloudContentwarehouseV1RuleResponse(
            ImmutableArray<Outputs.GoogleCloudContentwarehouseV1ActionResponse> actions,

            string condition,

            string description,

            string ruleId,

            string triggerType)
        {
            Actions = actions;
            Condition = condition;
            Description = description;
            RuleId = ruleId;
            TriggerType = triggerType;
        }
    }
}
