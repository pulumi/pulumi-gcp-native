// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contentwarehouse.V1.Outputs
{

    /// <summary>
    /// A page in a Document.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDocumentaiV1DocumentPageResponse
    {
        /// <summary>
        /// A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageBlockResponse> Blocks;
        /// <summary>
        /// A list of detected barcodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageDetectedBarcodeResponse> DetectedBarcodes;
        /// <summary>
        /// A list of detected languages together with confidence.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageDetectedLanguageResponse> DetectedLanguages;
        /// <summary>
        /// Physical dimension of the page.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentPageDimensionResponse Dimension;
        /// <summary>
        /// A list of visually detected form fields on the page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageFormFieldResponse> FormFields;
        /// <summary>
        /// Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentPageImageResponse Image;
        /// <summary>
        /// Image quality scores.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentPageImageQualityScoresResponse ImageQualityScores;
        /// <summary>
        /// Layout for the page.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentPageLayoutResponse Layout;
        /// <summary>
        /// A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageLineResponse> Lines;
        /// <summary>
        /// 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.
        /// </summary>
        public readonly int PageNumber;
        /// <summary>
        /// A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageParagraphResponse> Paragraphs;
        /// <summary>
        /// The history of this page.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentProvenanceResponse Provenance;
        /// <summary>
        /// A list of visually detected symbols on the page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageSymbolResponse> Symbols;
        /// <summary>
        /// A list of visually detected tables on the page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageTableResponse> Tables;
        /// <summary>
        /// A list of visually detected tokens on the page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageTokenResponse> Tokens;
        /// <summary>
        /// Transformation matrices that were applied to the original document image to produce Page.image.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageMatrixResponse> Transforms;
        /// <summary>
        /// A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageVisualElementResponse> VisualElements;

        [OutputConstructor]
        private GoogleCloudDocumentaiV1DocumentPageResponse(
            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageBlockResponse> blocks,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageDetectedBarcodeResponse> detectedBarcodes,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageDetectedLanguageResponse> detectedLanguages,

            Outputs.GoogleCloudDocumentaiV1DocumentPageDimensionResponse dimension,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageFormFieldResponse> formFields,

            Outputs.GoogleCloudDocumentaiV1DocumentPageImageResponse image,

            Outputs.GoogleCloudDocumentaiV1DocumentPageImageQualityScoresResponse imageQualityScores,

            Outputs.GoogleCloudDocumentaiV1DocumentPageLayoutResponse layout,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageLineResponse> lines,

            int pageNumber,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageParagraphResponse> paragraphs,

            Outputs.GoogleCloudDocumentaiV1DocumentProvenanceResponse provenance,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageSymbolResponse> symbols,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageTableResponse> tables,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageTokenResponse> tokens,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageMatrixResponse> transforms,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentPageVisualElementResponse> visualElements)
        {
            Blocks = blocks;
            DetectedBarcodes = detectedBarcodes;
            DetectedLanguages = detectedLanguages;
            Dimension = dimension;
            FormFields = formFields;
            Image = image;
            ImageQualityScores = imageQualityScores;
            Layout = layout;
            Lines = lines;
            PageNumber = pageNumber;
            Paragraphs = paragraphs;
            Provenance = provenance;
            Symbols = symbols;
            Tables = tables;
            Tokens = tokens;
            Transforms = transforms;
            VisualElements = visualElements;
        }
    }
}
