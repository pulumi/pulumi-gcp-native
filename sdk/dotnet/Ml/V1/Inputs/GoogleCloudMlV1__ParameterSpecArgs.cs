// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Ml.V1.Inputs
{

    /// <summary>
    /// Represents a single hyperparameter to optimize.
    /// </summary>
    public sealed class GoogleCloudMlV1__ParameterSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("categoricalValues")]
        private InputList<string>? _categoricalValues;

        /// <summary>
        /// Required if type is `CATEGORICAL`. The list of possible categories.
        /// </summary>
        public InputList<string> CategoricalValues
        {
            get => _categoricalValues ?? (_categoricalValues = new InputList<string>());
            set => _categoricalValues = value;
        }

        [Input("discreteValues")]
        private InputList<double>? _discreteValues;

        /// <summary>
        /// Required if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
        /// </summary>
        public InputList<double> DiscreteValues
        {
            get => _discreteValues ?? (_discreteValues = new InputList<double>());
            set => _discreteValues = value;
        }

        /// <summary>
        /// Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.
        /// </summary>
        [Input("maxValue")]
        public Input<double>? MaxValue { get; set; }

        /// <summary>
        /// Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is INTEGER.
        /// </summary>
        [Input("minValue")]
        public Input<double>? MinValue { get; set; }

        /// <summary>
        /// The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., "learning_rate".
        /// </summary>
        [Input("parameterName", required: true)]
        public Input<string> ParameterName { get; set; } = null!;

        /// <summary>
        /// Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
        /// </summary>
        [Input("scaleType")]
        public Input<Pulumi.GoogleNative.Ml.V1.GoogleCloudMlV1__ParameterSpecScaleType>? ScaleType { get; set; }

        /// <summary>
        /// The type of the parameter.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.GoogleNative.Ml.V1.GoogleCloudMlV1__ParameterSpecType> Type { get; set; } = null!;

        public GoogleCloudMlV1__ParameterSpecArgs()
        {
        }
        public static new GoogleCloudMlV1__ParameterSpecArgs Empty => new GoogleCloudMlV1__ParameterSpecArgs();
    }
}
