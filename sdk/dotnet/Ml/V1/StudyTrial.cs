// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Ml.V1
{
    /// <summary>
    /// Adds a user provided trial to a study.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:ml/v1:StudyTrial")]
    public partial class StudyTrial : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a StudyTrial resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StudyTrial(string name, StudyTrialArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:ml/v1:StudyTrial", name, args ?? new StudyTrialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StudyTrial(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:ml/v1:StudyTrial", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StudyTrial resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StudyTrial Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StudyTrial(name, id, options);
        }
    }

    public sealed class StudyTrialArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. The identifier of the client that originally requested this trial.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Output only. Time at which the trial's status changed to COMPLETED.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The final measurement containing the objective value.
        /// </summary>
        [Input("finalMeasurement")]
        public Input<Inputs.GoogleCloudMlV1__MeasurementArgs>? FinalMeasurement { get; set; }

        /// <summary>
        /// Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
        /// </summary>
        [Input("infeasibleReason")]
        public Input<string>? InfeasibleReason { get; set; }

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        [Input("measurements")]
        private InputList<Inputs.GoogleCloudMlV1__MeasurementArgs>? _measurements;

        /// <summary>
        /// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
        /// </summary>
        public InputList<Inputs.GoogleCloudMlV1__MeasurementArgs> Measurements
        {
            get => _measurements ?? (_measurements = new InputList<Inputs.GoogleCloudMlV1__MeasurementArgs>());
            set => _measurements = value;
        }

        /// <summary>
        /// Output only. Name of the trial assigned by the service.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputList<Inputs.GoogleCloudMlV1_Trial_ParameterArgs>? _parameters;

        /// <summary>
        /// The parameters of the trial.
        /// </summary>
        public InputList<Inputs.GoogleCloudMlV1_Trial_ParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.GoogleCloudMlV1_Trial_ParameterArgs>());
            set => _parameters = value;
        }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// Output only. Time at which the trial was started.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The detailed state of a trial.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("studiesId", required: true)]
        public Input<string> StudiesId { get; set; } = null!;

        /// <summary>
        /// Output only. If true, the parameters in this trial are not attempted again.
        /// </summary>
        [Input("trialInfeasible")]
        public Input<bool>? TrialInfeasible { get; set; }

        [Input("trialsId", required: true)]
        public Input<string> TrialsId { get; set; } = null!;

        public StudyTrialArgs()
        {
        }
    }
}
