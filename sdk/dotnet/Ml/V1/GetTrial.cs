// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Ml.V1
{
    public static class GetTrial
    {
        /// <summary>
        /// Gets a trial.
        /// </summary>
        public static Task<GetTrialResult> InvokeAsync(GetTrialArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTrialResult>("google-native:ml/v1:getTrial", args ?? new GetTrialArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a trial.
        /// </summary>
        public static Output<GetTrialResult> Invoke(GetTrialInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTrialResult>("google-native:ml/v1:getTrial", args ?? new GetTrialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrialArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("studyId", required: true)]
        public string StudyId { get; set; } = null!;

        [Input("trialId", required: true)]
        public string TrialId { get; set; } = null!;

        public GetTrialArgs()
        {
        }
    }

    public sealed class GetTrialInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("studyId", required: true)]
        public Input<string> StudyId { get; set; } = null!;

        [Input("trialId", required: true)]
        public Input<string> TrialId { get; set; } = null!;

        public GetTrialInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTrialResult
    {
        /// <summary>
        /// The identifier of the client that originally requested this trial.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Time at which the trial's status changed to COMPLETED.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// The final measurement containing the objective value.
        /// </summary>
        public readonly Outputs.GoogleCloudMlV1__MeasurementResponse FinalMeasurement;
        /// <summary>
        /// A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
        /// </summary>
        public readonly string InfeasibleReason;
        /// <summary>
        /// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudMlV1__MeasurementResponse> Measurements;
        /// <summary>
        /// Name of the trial assigned by the service.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The parameters of the trial.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudMlV1_Trial_ParameterResponse> Parameters;
        /// <summary>
        /// Time at which the trial was started.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The detailed state of a trial.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// If true, the parameters in this trial are not attempted again.
        /// </summary>
        public readonly bool TrialInfeasible;

        [OutputConstructor]
        private GetTrialResult(
            string clientId,

            string endTime,

            Outputs.GoogleCloudMlV1__MeasurementResponse finalMeasurement,

            string infeasibleReason,

            ImmutableArray<Outputs.GoogleCloudMlV1__MeasurementResponse> measurements,

            string name,

            ImmutableArray<Outputs.GoogleCloudMlV1_Trial_ParameterResponse> parameters,

            string startTime,

            string state,

            bool trialInfeasible)
        {
            ClientId = clientId;
            EndTime = endTime;
            FinalMeasurement = finalMeasurement;
            InfeasibleReason = infeasibleReason;
            Measurements = measurements;
            Name = name;
            Parameters = parameters;
            StartTime = startTime;
            State = state;
            TrialInfeasible = trialInfeasible;
        }
    }
}
