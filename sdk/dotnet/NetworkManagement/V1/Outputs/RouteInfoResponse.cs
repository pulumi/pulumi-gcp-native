// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkManagement.V1.Outputs
{

    /// <summary>
    /// For display only. Metadata associated with a Compute Engine route.
    /// </summary>
    [OutputType]
    public sealed class RouteInfoResponse
    {
        /// <summary>
        /// Destination IP range of the route.
        /// </summary>
        public readonly string DestIpRange;
        /// <summary>
        /// Destination port ranges of the route. Policy based routes only.
        /// </summary>
        public readonly ImmutableArray<string> DestPortRanges;
        /// <summary>
        /// Name of a route.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Instance tags of the route.
        /// </summary>
        public readonly ImmutableArray<string> InstanceTags;
        /// <summary>
        /// URI of a NCC Hub. NCC_HUB routes only.
        /// </summary>
        public readonly string NccHubUri;
        /// <summary>
        /// URI of a NCC Spoke. NCC_HUB routes only.
        /// </summary>
        public readonly string NccSpokeUri;
        /// <summary>
        /// URI of a Compute Engine network. NETWORK routes only.
        /// </summary>
        public readonly string NetworkUri;
        /// <summary>
        /// Next hop of the route.
        /// </summary>
        public readonly string NextHop;
        /// <summary>
        /// Type of next hop.
        /// </summary>
        public readonly string NextHopType;
        /// <summary>
        /// Priority of the route.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Protocols of the route. Policy based routes only.
        /// </summary>
        public readonly ImmutableArray<string> Protocols;
        /// <summary>
        /// Indicates where route is applicable.
        /// </summary>
        public readonly string RouteScope;
        /// <summary>
        /// Type of route.
        /// </summary>
        public readonly string RouteType;
        /// <summary>
        /// Source IP address range of the route. Policy based routes only.
        /// </summary>
        public readonly string SrcIpRange;
        /// <summary>
        /// Source port ranges of the route. Policy based routes only.
        /// </summary>
        public readonly ImmutableArray<string> SrcPortRanges;
        /// <summary>
        /// URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.
        /// </summary>
        public readonly string Uri;

        [OutputConstructor]
        private RouteInfoResponse(
            string destIpRange,

            ImmutableArray<string> destPortRanges,

            string displayName,

            ImmutableArray<string> instanceTags,

            string nccHubUri,

            string nccSpokeUri,

            string networkUri,

            string nextHop,

            string nextHopType,

            int priority,

            ImmutableArray<string> protocols,

            string routeScope,

            string routeType,

            string srcIpRange,

            ImmutableArray<string> srcPortRanges,

            string uri)
        {
            DestIpRange = destIpRange;
            DestPortRanges = destPortRanges;
            DisplayName = displayName;
            InstanceTags = instanceTags;
            NccHubUri = nccHubUri;
            NccSpokeUri = nccSpokeUri;
            NetworkUri = networkUri;
            NextHop = nextHop;
            NextHopType = nextHopType;
            Priority = priority;
            Protocols = protocols;
            RouteScope = routeScope;
            RouteType = routeType;
            SrcIpRange = srcIpRange;
            SrcPortRanges = srcPortRanges;
            Uri = uri;
        }
    }
}
