// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.FirebaseAppDistribution.V1Alpha
{
    /// <summary>
    /// Run automated test(s) on release.
    /// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
    /// on Google Cloud even though it will be deleted from Pulumi state.
    /// </summary>
    [GoogleNativeResourceType("google-native:firebaseappdistribution/v1alpha:Test")]
    public partial class Test : global::Pulumi.CustomResource
    {
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the test was run.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The results of the test on each device.
        /// </summary>
        [Output("deviceExecutions")]
        public Output<ImmutableArray<Outputs.GoogleFirebaseAppdistroV1alphaDeviceExecutionResponse>> DeviceExecutions { get; private set; } = null!;

        /// <summary>
        /// Optional. Input only. Login credentials for the test. Input only.
        /// </summary>
        [Output("loginCredential")]
        public Output<Outputs.GoogleFirebaseAppdistroV1alphaLoginCredentialResponse> LoginCredential { get; private set; } = null!;

        /// <summary>
        /// The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("releaseId")]
        public Output<string> ReleaseId { get; private set; } = null!;

        /// <summary>
        /// Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated.
        /// </summary>
        [Output("releaseTestId")]
        public Output<string?> ReleaseTestId { get; private set; } = null!;


        /// <summary>
        /// Create a Test resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Test(string name, TestArgs args, CustomResourceOptions? options = null)
            : base("google-native:firebaseappdistribution/v1alpha:Test", name, args ?? new TestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Test(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:firebaseappdistribution/v1alpha:Test", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "appId",
                    "project",
                    "releaseId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Test resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Test Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Test(name, id, options);
        }
    }

    public sealed class TestArgs : global::Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("deviceExecutions", required: true)]
        private InputList<Inputs.GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs>? _deviceExecutions;

        /// <summary>
        /// The results of the test on each device.
        /// </summary>
        public InputList<Inputs.GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs> DeviceExecutions
        {
            get => _deviceExecutions ?? (_deviceExecutions = new InputList<Inputs.GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs>());
            set => _deviceExecutions = value;
        }

        /// <summary>
        /// Optional. Input only. Login credentials for the test. Input only.
        /// </summary>
        [Input("loginCredential")]
        public Input<Inputs.GoogleFirebaseAppdistroV1alphaLoginCredentialArgs>? LoginCredential { get; set; }

        /// <summary>
        /// The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("releaseId", required: true)]
        public Input<string> ReleaseId { get; set; } = null!;

        /// <summary>
        /// Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated.
        /// </summary>
        [Input("releaseTestId")]
        public Input<string>? ReleaseTestId { get; set; }

        public TestArgs()
        {
        }
        public static new TestArgs Empty => new TestArgs();
    }
}
