// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.OSConfig.V1Beta.Inputs
{

    /// <summary>
    /// Sets the time for recurring patch deployments.
    /// </summary>
    public sealed class RecurringScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The end time at which a recurring patch deployment schedule is no longer active.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The frequency unit of this recurring schedule.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<Pulumi.GoogleNative.OSConfig.V1Beta.RecurringScheduleFrequency> Frequency { get; set; } = null!;

        /// <summary>
        /// Schedule with monthly executions.
        /// </summary>
        [Input("monthly", required: true)]
        public Input<Inputs.MonthlyScheduleArgs> Monthly { get; set; } = null!;

        /// <summary>
        /// Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Time of the day to run a recurring deployment.
        /// </summary>
        [Input("timeOfDay", required: true)]
        public Input<Inputs.TimeOfDayArgs> TimeOfDay { get; set; } = null!;

        /// <summary>
        /// Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone.
        /// </summary>
        [Input("timeZone", required: true)]
        public Input<Inputs.TimeZoneArgs> TimeZone { get; set; } = null!;

        /// <summary>
        /// Schedule with weekly executions.
        /// </summary>
        [Input("weekly", required: true)]
        public Input<Inputs.WeeklyScheduleArgs> Weekly { get; set; } = null!;

        public RecurringScheduleArgs()
        {
        }
    }
}
