// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.OSConfig.V1
{
    public static class GetOsPolicyAssignment
    {
        /// <summary>
        /// Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.
        /// </summary>
        public static Task<GetOsPolicyAssignmentResult> InvokeAsync(GetOsPolicyAssignmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOsPolicyAssignmentResult>("google-native:osconfig/v1:getOsPolicyAssignment", args ?? new GetOsPolicyAssignmentArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.
        /// </summary>
        public static Output<GetOsPolicyAssignmentResult> Invoke(GetOsPolicyAssignmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOsPolicyAssignmentResult>("google-native:osconfig/v1:getOsPolicyAssignment", args ?? new GetOsPolicyAssignmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOsPolicyAssignmentArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("osPolicyAssignmentId", required: true)]
        public string OsPolicyAssignmentId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetOsPolicyAssignmentArgs()
        {
        }
        public static new GetOsPolicyAssignmentArgs Empty => new GetOsPolicyAssignmentArgs();
    }

    public sealed class GetOsPolicyAssignmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("osPolicyAssignmentId", required: true)]
        public Input<string> OsPolicyAssignmentId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetOsPolicyAssignmentInvokeArgs()
        {
        }
        public static new GetOsPolicyAssignmentInvokeArgs Empty => new GetOsPolicyAssignmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetOsPolicyAssignmentResult
    {
        /// <summary>
        /// Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.
        /// </summary>
        public readonly bool Baseline;
        /// <summary>
        /// Indicates that this revision deletes the OS policy assignment.
        /// </summary>
        public readonly bool Deleted;
        /// <summary>
        /// OS policy assignment description. Length of the description is limited to 1024 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Filter to select VMs.
        /// </summary>
        public readonly Outputs.OSPolicyAssignmentInstanceFilterResponse InstanceFilter;
        /// <summary>
        /// Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of OS policies to be applied to the VMs.
        /// </summary>
        public readonly ImmutableArray<Outputs.OSPolicyResponse> OsPolicies;
        /// <summary>
        /// Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING
        /// </summary>
        public readonly bool Reconciling;
        /// <summary>
        /// The timestamp that the revision was created.
        /// </summary>
        public readonly string RevisionCreateTime;
        /// <summary>
        /// The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment
        /// </summary>
        public readonly string RevisionId;
        /// <summary>
        /// Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
        /// </summary>
        public readonly Outputs.OSPolicyAssignmentRolloutResponse Rollout;
        /// <summary>
        /// OS policy assignment rollout state
        /// </summary>
        public readonly string RolloutState;
        /// <summary>
        /// Server generated unique id for the OS policy assignment resource.
        /// </summary>
        public readonly string Uid;

        [OutputConstructor]
        private GetOsPolicyAssignmentResult(
            bool baseline,

            bool deleted,

            string description,

            string etag,

            Outputs.OSPolicyAssignmentInstanceFilterResponse instanceFilter,

            string name,

            ImmutableArray<Outputs.OSPolicyResponse> osPolicies,

            bool reconciling,

            string revisionCreateTime,

            string revisionId,

            Outputs.OSPolicyAssignmentRolloutResponse rollout,

            string rolloutState,

            string uid)
        {
            Baseline = baseline;
            Deleted = deleted;
            Description = description;
            Etag = etag;
            InstanceFilter = instanceFilter;
            Name = name;
            OsPolicies = osPolicies;
            Reconciling = reconciling;
            RevisionCreateTime = revisionCreateTime;
            RevisionId = revisionId;
            Rollout = rollout;
            RolloutState = rolloutState;
            Uid = uid;
        }
    }
}
