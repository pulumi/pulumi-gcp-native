// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.OSConfig.V1Alpha.Inputs
{

    /// <summary>
    /// Message to represent the filters to select VMs for an assignment
    /// </summary>
    public sealed class OSPolicyAssignmentInstanceFilterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Target all VMs in the project. If true, no other criteria is permitted.
        /// </summary>
        [Input("all")]
        public Input<bool>? All { get; set; }

        [Input("exclusionLabels")]
        private InputList<Inputs.OSPolicyAssignmentLabelSetArgs>? _exclusionLabels;

        /// <summary>
        /// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM. This filter is applied last in the filtering chain and therefore a VM is guaranteed to be excluded if it satisfies one of the below label sets.
        /// </summary>
        public InputList<Inputs.OSPolicyAssignmentLabelSetArgs> ExclusionLabels
        {
            get => _exclusionLabels ?? (_exclusionLabels = new InputList<Inputs.OSPolicyAssignmentLabelSetArgs>());
            set => _exclusionLabels = value;
        }

        [Input("inclusionLabels")]
        private InputList<Inputs.OSPolicyAssignmentLabelSetArgs>? _inclusionLabels;

        /// <summary>
        /// List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.
        /// </summary>
        public InputList<Inputs.OSPolicyAssignmentLabelSetArgs> InclusionLabels
        {
            get => _inclusionLabels ?? (_inclusionLabels = new InputList<Inputs.OSPolicyAssignmentLabelSetArgs>());
            set => _inclusionLabels = value;
        }

        [Input("osShortNames")]
        private InputList<string>? _osShortNames;

        /// <summary>
        /// A VM is included if it's OS short name matches with any of the values provided in this list.
        /// </summary>
        public InputList<string> OsShortNames
        {
            get => _osShortNames ?? (_osShortNames = new InputList<string>());
            set => _osShortNames = value;
        }

        public OSPolicyAssignmentInstanceFilterArgs()
        {
        }
    }
}
