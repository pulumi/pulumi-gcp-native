// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CertificateManager.V1
{
    /// <summary>
    /// Creates a new TrustConfig in a given project and location.
    /// </summary>
    [GoogleNativeResourceType("google-native:certificatemanager/v1:TrustConfig")]
    public partial class TrustConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of a TrustConfig.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// One or more paragraphs of text description of a TrustConfig.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Set of labels associated with a TrustConfig.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Required. A user-provided name of the TrustConfig.
        /// </summary>
        [Output("trustConfigId")]
        public Output<string> TrustConfigId { get; private set; } = null!;

        /// <summary>
        /// Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.
        /// </summary>
        [Output("trustStores")]
        public Output<ImmutableArray<Outputs.TrustStoreResponse>> TrustStores { get; private set; } = null!;

        /// <summary>
        /// The last update timestamp of a TrustConfig.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a TrustConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrustConfig(string name, TrustConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:certificatemanager/v1:TrustConfig", name, args ?? new TrustConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrustConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:certificatemanager/v1:TrustConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                    "trustConfigId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrustConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrustConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TrustConfig(name, id, options);
        }
    }

    public sealed class TrustConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// One or more paragraphs of text description of a TrustConfig.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of labels associated with a TrustConfig.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Required. A user-provided name of the TrustConfig.
        /// </summary>
        [Input("trustConfigId", required: true)]
        public Input<string> TrustConfigId { get; set; } = null!;

        [Input("trustStores")]
        private InputList<Inputs.TrustStoreArgs>? _trustStores;

        /// <summary>
        /// Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.
        /// </summary>
        public InputList<Inputs.TrustStoreArgs> TrustStores
        {
            get => _trustStores ?? (_trustStores = new InputList<Inputs.TrustStoreArgs>());
            set => _trustStores = value;
        }

        public TrustConfigArgs()
        {
        }
        public static new TrustConfigArgs Empty => new TrustConfigArgs();
    }
}
