// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CertificateManager.V1
{
    public static class GetTrustConfig
    {
        /// <summary>
        /// Gets details of a single TrustConfig.
        /// </summary>
        public static Task<GetTrustConfigResult> InvokeAsync(GetTrustConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrustConfigResult>("google-native:certificatemanager/v1:getTrustConfig", args ?? new GetTrustConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single TrustConfig.
        /// </summary>
        public static Output<GetTrustConfigResult> Invoke(GetTrustConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrustConfigResult>("google-native:certificatemanager/v1:getTrustConfig", args ?? new GetTrustConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrustConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("trustConfigId", required: true)]
        public string TrustConfigId { get; set; } = null!;

        public GetTrustConfigArgs()
        {
        }
        public static new GetTrustConfigArgs Empty => new GetTrustConfigArgs();
    }

    public sealed class GetTrustConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("trustConfigId", required: true)]
        public Input<string> TrustConfigId { get; set; } = null!;

        public GetTrustConfigInvokeArgs()
        {
        }
        public static new GetTrustConfigInvokeArgs Empty => new GetTrustConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrustConfigResult
    {
        /// <summary>
        /// The creation timestamp of a TrustConfig.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// One or more paragraphs of text description of a TrustConfig.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Set of labels associated with a TrustConfig.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrustStoreResponse> TrustStores;
        /// <summary>
        /// The last update timestamp of a TrustConfig.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetTrustConfigResult(
            string createTime,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            ImmutableArray<Outputs.TrustStoreResponse> trustStores,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            TrustStores = trustStores;
            UpdateTime = updateTime;
        }
    }
}
