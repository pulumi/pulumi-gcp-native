// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Translate.V3
{
    /// <summary>
    /// Creates a glossary entry.
    /// </summary>
    [GoogleNativeResourceType("google-native:translate/v3:GlossaryEntry")]
    public partial class GlossaryEntry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the glossary entry.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("glossaryId")]
        public Output<string> GlossaryId { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the entry. Format: "projects/*/locations/*/glossaries/*/glossaryEntries/*"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Used for an unidirectional glossary.
        /// </summary>
        [Output("termsPair")]
        public Output<Outputs.GlossaryTermsPairResponse> TermsPair { get; private set; } = null!;

        /// <summary>
        /// Used for an equivalent term sets glossary.
        /// </summary>
        [Output("termsSet")]
        public Output<Outputs.GlossaryTermsSetResponse> TermsSet { get; private set; } = null!;


        /// <summary>
        /// Create a GlossaryEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlossaryEntry(string name, GlossaryEntryArgs args, CustomResourceOptions? options = null)
            : base("google-native:translate/v3:GlossaryEntry", name, args ?? new GlossaryEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlossaryEntry(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:translate/v3:GlossaryEntry", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "glossaryId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlossaryEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlossaryEntry Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GlossaryEntry(name, id, options);
        }
    }

    public sealed class GlossaryEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the glossary entry.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("glossaryId", required: true)]
        public Input<string> GlossaryId { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the entry. Format: "projects/*/locations/*/glossaries/*/glossaryEntries/*"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Used for an unidirectional glossary.
        /// </summary>
        [Input("termsPair")]
        public Input<Inputs.GlossaryTermsPairArgs>? TermsPair { get; set; }

        /// <summary>
        /// Used for an equivalent term sets glossary.
        /// </summary>
        [Input("termsSet")]
        public Input<Inputs.GlossaryTermsSetArgs>? TermsSet { get; set; }

        public GlossaryEntryArgs()
        {
        }
        public static new GlossaryEntryArgs Empty => new GlossaryEntryArgs();
    }
}
