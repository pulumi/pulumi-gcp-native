// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Translate.V3
{
    public static class GetModel
    {
        /// <summary>
        /// Gets a model.
        /// </summary>
        public static Task<GetModelResult> InvokeAsync(GetModelArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelResult>("google-native:translate/v3:getModel", args ?? new GetModelArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a model.
        /// </summary>
        public static Output<GetModelResult> Invoke(GetModelInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelResult>("google-native:translate/v3:getModel", args ?? new GetModelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("modelId", required: true)]
        public string ModelId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetModelArgs()
        {
        }
        public static new GetModelArgs Empty => new GetModelArgs();
    }

    public sealed class GetModelInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("modelId", required: true)]
        public Input<string> ModelId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetModelInvokeArgs()
        {
        }
        public static new GetModelInvokeArgs Empty => new GetModelInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelResult
    {
        /// <summary>
        /// Timestamp when the model resource was created, which is also when the training started.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The dataset from which the model is trained, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`
        /// </summary>
        public readonly string Dataset;
        /// <summary>
        /// Timestamp when the model training finished and ready to be used for translation.
        /// </summary>
        public readonly string DeployTime;
        /// <summary>
        /// The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The resource name of the model, in form of `projects/{project-number-or-id}/locations/{location_id}/models/{model_id}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The BCP-47 language code of the source language.
        /// </summary>
        public readonly string SourceLanguageCode;
        /// <summary>
        /// The BCP-47 language code of the target language.
        /// </summary>
        public readonly string TargetLanguageCode;
        /// <summary>
        /// Number of examples (sentence pairs) used to test the model.
        /// </summary>
        public readonly int TestExampleCount;
        /// <summary>
        /// Number of examples (sentence pairs) used to train the model.
        /// </summary>
        public readonly int TrainExampleCount;
        /// <summary>
        /// Timestamp when this model was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Number of examples (sentence pairs) used to validate the model.
        /// </summary>
        public readonly int ValidateExampleCount;

        [OutputConstructor]
        private GetModelResult(
            string createTime,

            string dataset,

            string deployTime,

            string displayName,

            string name,

            string sourceLanguageCode,

            string targetLanguageCode,

            int testExampleCount,

            int trainExampleCount,

            string updateTime,

            int validateExampleCount)
        {
            CreateTime = createTime;
            Dataset = dataset;
            DeployTime = deployTime;
            DisplayName = displayName;
            Name = name;
            SourceLanguageCode = sourceLanguageCode;
            TargetLanguageCode = targetLanguageCode;
            TestExampleCount = testExampleCount;
            TrainExampleCount = trainExampleCount;
            UpdateTime = updateTime;
            ValidateExampleCount = validateExampleCount;
        }
    }
}
