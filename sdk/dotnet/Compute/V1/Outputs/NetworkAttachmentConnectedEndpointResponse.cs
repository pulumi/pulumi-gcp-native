// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.V1.Outputs
{

    /// <summary>
    /// [Output Only] A connection connected to this network attachment.
    /// </summary>
    [OutputType]
    public sealed class NetworkAttachmentConnectedEndpointResponse
    {
        /// <summary>
        /// The IPv4 address assigned to the producer instance network interface. This value will be a range in case of Serverless.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// The IPv6 address assigned to the producer instance network interface. This is only assigned when the stack types of both the instance network interface and the consumer subnet are IPv4_IPv6.
        /// </summary>
        public readonly string Ipv6Address;
        /// <summary>
        /// The project id or number of the interface to which the IP was assigned.
        /// </summary>
        public readonly string ProjectIdOrNum;
        /// <summary>
        /// Alias IP ranges from the same subnetwork.
        /// </summary>
        public readonly ImmutableArray<string> SecondaryIpCidrRanges;
        /// <summary>
        /// The status of a connected endpoint to this network attachment.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The subnetwork used to assign the IP to the producer instance network interface.
        /// </summary>
        public readonly string Subnetwork;
        /// <summary>
        /// The CIDR range of the subnet from which the IPv4 internal IP was allocated from.
        /// </summary>
        public readonly string SubnetworkCidrRange;

        [OutputConstructor]
        private NetworkAttachmentConnectedEndpointResponse(
            string ipAddress,

            string ipv6Address,

            string projectIdOrNum,

            ImmutableArray<string> secondaryIpCidrRanges,

            string status,

            string subnetwork,

            string subnetworkCidrRange)
        {
            IpAddress = ipAddress;
            Ipv6Address = ipv6Address;
            ProjectIdOrNum = projectIdOrNum;
            SecondaryIpCidrRanges = secondaryIpCidrRanges;
            Status = status;
            Subnetwork = subnetwork;
            SubnetworkCidrRange = subnetworkCidrRange;
        }
    }
}
