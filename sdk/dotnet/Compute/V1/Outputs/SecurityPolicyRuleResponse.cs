// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.V1.Outputs
{

    /// <summary>
    /// Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
    /// </summary>
    [OutputType]
    public sealed class SecurityPolicyRuleResponse
    {
        /// <summary>
        /// The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this. 
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional, additional actions that are performed on headers.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleHttpHeaderActionResponse HeaderAction;
        /// <summary>
        /// [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleMatcherResponse Match;
        /// <summary>
        /// If set to true, the specified action is not enforced.
        /// </summary>
        public readonly bool Preview;
        /// <summary>
        /// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleRateLimitOptionsResponse RateLimitOptions;
        /// <summary>
        /// Parameters defining the redirect action. Cannot be specified for any other actions.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleRedirectOptionsResponse RedirectOptions;

        [OutputConstructor]
        private SecurityPolicyRuleResponse(
            string action,

            string description,

            Outputs.SecurityPolicyRuleHttpHeaderActionResponse headerAction,

            string kind,

            Outputs.SecurityPolicyRuleMatcherResponse match,

            bool preview,

            int priority,

            Outputs.SecurityPolicyRuleRateLimitOptionsResponse rateLimitOptions,

            Outputs.SecurityPolicyRuleRedirectOptionsResponse redirectOptions)
        {
            Action = action;
            Description = description;
            HeaderAction = headerAction;
            Kind = kind;
            Match = match;
            Preview = preview;
            Priority = priority;
            RateLimitOptions = rateLimitOptions;
            RedirectOptions = redirectOptions;
        }
    }
}
