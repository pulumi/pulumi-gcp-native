// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.V1.Inputs
{

    /// <summary>
    /// A network interface resource attached to an instance.
    /// </summary>
    public sealed class NetworkInterfaceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessConfigs")]
        private InputList<Inputs.AccessConfigArgs>? _accessConfigs;

        /// <summary>
        /// An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
        /// </summary>
        public InputList<Inputs.AccessConfigArgs> AccessConfigs
        {
            get => _accessConfigs ?? (_accessConfigs = new InputList<Inputs.AccessConfigArgs>());
            set => _accessConfigs = value;
        }

        [Input("aliasIpRanges")]
        private InputList<Inputs.AliasIpRangeArgs>? _aliasIpRanges;

        /// <summary>
        /// An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
        /// </summary>
        public InputList<Inputs.AliasIpRangeArgs> AliasIpRanges
        {
            get => _aliasIpRanges ?? (_aliasIpRanges = new InputList<Inputs.AliasIpRangeArgs>());
            set => _aliasIpRanges = value;
        }

        /// <summary>
        /// The prefix length of the primary internal IPv6 range.
        /// </summary>
        [Input("internalIpv6PrefixLength")]
        public Input<int>? InternalIpv6PrefixLength { get; set; }

        [Input("ipv6AccessConfigs")]
        private InputList<Inputs.AccessConfigArgs>? _ipv6AccessConfigs;

        /// <summary>
        /// An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.
        /// </summary>
        public InputList<Inputs.AccessConfigArgs> Ipv6AccessConfigs
        {
            get => _ipv6AccessConfigs ?? (_ipv6AccessConfigs = new InputList<Inputs.AccessConfigArgs>());
            set => _ipv6AccessConfigs = value;
        }

        /// <summary>
        /// An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.
        /// </summary>
        [Input("ipv6Address")]
        public Input<string>? Ipv6Address { get; set; }

        /// <summary>
        /// URL of the VPC network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used. If the selected project doesn't have the default network, you must specify a network or subnet. If the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default 
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
        /// </summary>
        [Input("networkAttachment")]
        public Input<string>? NetworkAttachment { get; set; }

        /// <summary>
        /// An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
        /// </summary>
        [Input("networkIP")]
        public Input<string>? NetworkIP { get; set; }

        /// <summary>
        /// The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
        /// </summary>
        [Input("nicType")]
        public Input<Pulumi.GoogleNative.Compute.V1.NetworkInterfaceNicType>? NicType { get; set; }

        /// <summary>
        /// The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.
        /// </summary>
        [Input("queueCount")]
        public Input<int>? QueueCount { get; set; }

        /// <summary>
        /// The stack type for this network interface. To assign only IPv4 addresses, use IPV4_ONLY. To assign both IPv4 and IPv6 addresses, use IPV4_IPV6. If not specified, IPV4_ONLY is used. This field can be both set at instance creation and update network interface operations.
        /// </summary>
        [Input("stackType")]
        public Input<Pulumi.GoogleNative.Compute.V1.NetworkInterfaceStackType>? StackType { get; set; }

        /// <summary>
        /// The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork 
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        public NetworkInterfaceArgs()
        {
        }
        public static new NetworkInterfaceArgs Empty => new NetworkInterfaceArgs();
    }
}
