// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha
{
    /// <summary>
    /// Creates a new Future Reservation.
    /// </summary>
    [GoogleNativeResourceType("google-native:compute/alpha:FutureReservation")]
    public partial class FutureReservation : Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp for this future reservation in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the future reservation.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Type of the resource. Always compute#futureReservation for future reservations.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
        /// </summary>
        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        /// <summary>
        /// Server-defined fully-qualified URL for this resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Server-defined URL for this resource with the resource id.
        /// </summary>
        [Output("selfLinkWithId")]
        public Output<string> SelfLinkWithId { get; private set; } = null!;

        /// <summary>
        /// List of Projects/Folders to share with.
        /// </summary>
        [Output("shareSettings")]
        public Output<Outputs.ShareSettingsResponse> ShareSettings { get; private set; } = null!;

        /// <summary>
        /// Future Reservation configuration to indicate instance properties and total count.
        /// </summary>
        [Output("specificSkuProperties")]
        public Output<Outputs.FutureReservationSpecificSKUPropertiesResponse> SpecificSkuProperties { get; private set; } = null!;

        /// <summary>
        /// [Output only] Status of the Future Reservation
        /// </summary>
        [Output("status")]
        public Output<Outputs.FutureReservationStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// Time window for this Future Reservation.
        /// </summary>
        [Output("timeWindow")]
        public Output<Outputs.FutureReservationTimeWindowResponse> TimeWindow { get; private set; } = null!;

        /// <summary>
        /// URL of the Zone where this future reservation resides.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a FutureReservation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FutureReservation(string name, FutureReservationArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:compute/alpha:FutureReservation", name, args ?? new FutureReservationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FutureReservation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:compute/alpha:FutureReservation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FutureReservation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FutureReservation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FutureReservation(name, id, options);
        }
    }

    public sealed class FutureReservationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional description of this resource. Provide this property when you create the future reservation.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// List of Projects/Folders to share with.
        /// </summary>
        [Input("shareSettings")]
        public Input<Inputs.ShareSettingsArgs>? ShareSettings { get; set; }

        /// <summary>
        /// Future Reservation configuration to indicate instance properties and total count.
        /// </summary>
        [Input("specificSkuProperties")]
        public Input<Inputs.FutureReservationSpecificSKUPropertiesArgs>? SpecificSkuProperties { get; set; }

        /// <summary>
        /// Time window for this Future Reservation.
        /// </summary>
        [Input("timeWindow")]
        public Input<Inputs.FutureReservationTimeWindowArgs>? TimeWindow { get; set; }

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public FutureReservationArgs()
        {
        }
    }
}
