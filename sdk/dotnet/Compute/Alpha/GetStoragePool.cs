// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha
{
    public static class GetStoragePool
    {
        /// <summary>
        /// Returns a specified storage pool. Gets a list of available storage pools by making a list() request.
        /// </summary>
        public static Task<GetStoragePoolResult> InvokeAsync(GetStoragePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStoragePoolResult>("google-native:compute/alpha:getStoragePool", args ?? new GetStoragePoolArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a specified storage pool. Gets a list of available storage pools by making a list() request.
        /// </summary>
        public static Output<GetStoragePoolResult> Invoke(GetStoragePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStoragePoolResult>("google-native:compute/alpha:getStoragePool", args ?? new GetStoragePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStoragePoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("project")]
        public string? Project { get; set; }

        [Input("storagePool", required: true)]
        public string StoragePool { get; set; } = null!;

        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetStoragePoolArgs()
        {
        }
        public static new GetStoragePoolArgs Empty => new GetStoragePoolArgs();
    }

    public sealed class GetStoragePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("storagePool", required: true)]
        public Input<string> StoragePool { get; set; } = null!;

        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetStoragePoolInvokeArgs()
        {
        }
        public static new GetStoragePoolInvokeArgs Empty => new GetStoragePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetStoragePoolResult
    {
        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        public readonly string CreationTimestamp;
        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Type of the resource. Always compute#storagePool for storage pools.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// A fingerprint for the labels being applied to this storage pool, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a storage pool.
        /// </summary>
        public readonly string LabelFingerprint;
        /// <summary>
        /// Labels to apply to this storage pool. These can be later modified by the setLabels method.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Provsioned IOPS of the storage pool.
        /// </summary>
        public readonly string ProvisionedIops;
        /// <summary>
        /// Status information for the storage pool resource.
        /// </summary>
        public readonly Outputs.StoragePoolResourceStatusResponse ResourceStatus;
        /// <summary>
        /// Server-defined fully-qualified URL for this resource.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// Server-defined URL for this resource's resource id.
        /// </summary>
        public readonly string SelfLinkWithId;
        /// <summary>
        /// Size, in GiB, of the storage pool.
        /// </summary>
        public readonly string SizeGb;
        /// <summary>
        /// The status of storage pool creation. - CREATING: Storage pool is provisioning. storagePool. - FAILED: Storage pool creation failed. - READY: Storage pool is ready for use. - DELETING: Storage pool is deleting. 
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Type of the storage pool
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// URL of the zone where the storage pool resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetStoragePoolResult(
            string creationTimestamp,

            string description,

            string kind,

            string labelFingerprint,

            ImmutableDictionary<string, string> labels,

            string name,

            string provisionedIops,

            Outputs.StoragePoolResourceStatusResponse resourceStatus,

            string selfLink,

            string selfLinkWithId,

            string sizeGb,

            string state,

            string type,

            string zone)
        {
            CreationTimestamp = creationTimestamp;
            Description = description;
            Kind = kind;
            LabelFingerprint = labelFingerprint;
            Labels = labels;
            Name = name;
            ProvisionedIops = provisionedIops;
            ResourceStatus = resourceStatus;
            SelfLink = selfLink;
            SelfLinkWithId = selfLinkWithId;
            SizeGb = sizeGb;
            State = state;
            Type = type;
            Zone = zone;
        }
    }
}
