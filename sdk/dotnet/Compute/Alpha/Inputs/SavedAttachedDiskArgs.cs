// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Compute.Alpha.Inputs
{

    /// <summary>
    /// An instance-attached disk resource.
    /// </summary>
    public sealed class SavedAttachedDiskArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
        /// </summary>
        [Input("autoDelete")]
        public Input<bool>? AutoDelete { get; set; }

        /// <summary>
        /// Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
        /// </summary>
        [Input("boot")]
        public Input<bool>? Boot { get; set; }

        /// <summary>
        /// Specifies the name of the disk attached to the source instance.
        /// </summary>
        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        /// <summary>
        /// The encryption key for the disk.
        /// </summary>
        [Input("diskEncryptionKey")]
        public Input<Inputs.CustomerEncryptionKeyArgs>? DiskEncryptionKey { get; set; }

        /// <summary>
        /// The size of the disk in base-2 GB.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<string>? DiskSizeGb { get; set; }

        /// <summary>
        /// [Output Only] URL of the disk type resource. For example: projects/project/zones/zone/diskTypes/pd-standard or pd-ssd
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        [Input("guestOsFeatures")]
        private InputList<Inputs.GuestOsFeatureArgs>? _guestOsFeatures;

        /// <summary>
        /// A list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.
        /// </summary>
        public InputList<Inputs.GuestOsFeatureArgs> GuestOsFeatures
        {
            get => _guestOsFeatures ?? (_guestOsFeatures = new InputList<Inputs.GuestOsFeatureArgs>());
            set => _guestOsFeatures = value;
        }

        /// <summary>
        /// Specifies zero-based index of the disk that is attached to the source instance.
        /// </summary>
        [Input("index")]
        public Input<int>? Index { get; set; }

        /// <summary>
        /// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        /// <summary>
        /// [Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("licenses")]
        private InputList<string>? _licenses;

        /// <summary>
        /// [Output Only] Any valid publicly visible licenses.
        /// </summary>
        public InputList<string> Licenses
        {
            get => _licenses ?? (_licenses = new InputList<string>());
            set => _licenses = value;
        }

        /// <summary>
        /// The mode in which this disk is attached to the source instance, either READ_WRITE or READ_ONLY.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Specifies a URL of the disk attached to the source instance.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// [Output Only] A size of the storage used by the disk's snapshot by this machine image.
        /// </summary>
        [Input("storageBytes")]
        public Input<string>? StorageBytes { get; set; }

        /// <summary>
        /// [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
        /// </summary>
        [Input("storageBytesStatus")]
        public Input<string>? StorageBytesStatus { get; set; }

        /// <summary>
        /// Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SavedAttachedDiskArgs()
        {
        }
    }
}
