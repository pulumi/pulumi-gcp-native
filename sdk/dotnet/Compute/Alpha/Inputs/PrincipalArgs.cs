// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Inputs
{

    /// <summary>
    /// [Deprecated] All fields defined in a principal are ANDed.
    /// </summary>
    public sealed class PrincipalArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An expression to specify custom condition.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        [Input("groups")]
        private InputList<string>? _groups;

        /// <summary>
        /// The groups the principal belongs to. Exact match, prefix match, and suffix match are supported.
        /// </summary>
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// IPv4 or IPv6 address or range (In CIDR format)
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        [Input("namespaces")]
        private InputList<string>? _namespaces;

        /// <summary>
        /// The namespaces. Exact match, prefix match, and suffix match are supported.
        /// </summary>
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        [Input("notGroups")]
        private InputList<string>? _notGroups;

        /// <summary>
        /// Negate of groups. Specifies exclusions.
        /// </summary>
        public InputList<string> NotGroups
        {
            get => _notGroups ?? (_notGroups = new InputList<string>());
            set => _notGroups = value;
        }

        [Input("notIps")]
        private InputList<string>? _notIps;

        /// <summary>
        /// Negate of IPs. Specifies exclusions.
        /// </summary>
        public InputList<string> NotIps
        {
            get => _notIps ?? (_notIps = new InputList<string>());
            set => _notIps = value;
        }

        [Input("notNamespaces")]
        private InputList<string>? _notNamespaces;

        /// <summary>
        /// Negate of namespaces. Specifies exclusions.
        /// </summary>
        public InputList<string> NotNamespaces
        {
            get => _notNamespaces ?? (_notNamespaces = new InputList<string>());
            set => _notNamespaces = value;
        }

        [Input("notUsers")]
        private InputList<string>? _notUsers;

        /// <summary>
        /// Negate of users. Specifies exclusions.
        /// </summary>
        public InputList<string> NotUsers
        {
            get => _notUsers ?? (_notUsers = new InputList<string>());
            set => _notUsers = value;
        }

        [Input("properties")]
        private InputMap<string>? _properties;

        /// <summary>
        /// A map of Istio attribute to expected values. Exact match, prefix match, and suffix match are supported for values. For example, `request.headers[version]: "v1"`. The properties are ANDed together.
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("users")]
        private InputList<string>? _users;

        /// <summary>
        /// The user names/IDs or service accounts. Exact match, prefix match, and suffix match are supported.
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public PrincipalArgs()
        {
        }
    }
}
