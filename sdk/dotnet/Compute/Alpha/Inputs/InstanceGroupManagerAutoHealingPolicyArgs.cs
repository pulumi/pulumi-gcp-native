// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Inputs
{

    public sealed class InstanceGroupManagerAutoHealingPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Restricts what triggers autohealing.
        /// </summary>
        [Input("autoHealingTriggers")]
        public Input<Inputs.InstanceGroupManagerAutoHealingPolicyAutoHealingTriggersArgs>? AutoHealingTriggers { get; set; }

        /// <summary>
        /// The URL for the health check that signals autohealing.
        /// </summary>
        [Input("healthCheck")]
        public Input<string>? HealthCheck { get; set; }

        /// <summary>
        /// The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
        /// </summary>
        [Input("initialDelaySec")]
        public Input<int>? InitialDelaySec { get; set; }

        /// <summary>
        /// Maximum number of instances that can be unavailable when autohealing. When 'percent' is used, the value is rounded if necessary. The instance is considered available if all of the following conditions are satisfied: 1. Instance's status is RUNNING. 2. Instance's currentAction is NONE (in particular its liveness health check result was observed to be HEALTHY at least once as it passed VERIFYING). 3. There is no outgoing action on an instance triggered by IGM. By default, number of concurrently autohealed instances is smaller than the managed instance group target size. However, if a zonal managed instance group has only one instance, or a regional managed instance group has only one instance per zone, autohealing will recreate these instances when they become unhealthy.
        /// </summary>
        [Input("maxUnavailable")]
        public Input<Inputs.FixedOrPercentArgs>? MaxUnavailable { get; set; }

        public InstanceGroupManagerAutoHealingPolicyArgs()
        {
        }
        public static new InstanceGroupManagerAutoHealingPolicyArgs Empty => new InstanceGroupManagerAutoHealingPolicyArgs();
    }
}
