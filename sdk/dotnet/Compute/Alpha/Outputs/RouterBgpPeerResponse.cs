// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    [OutputType]
    public sealed class RouterBgpPeerResponse
    {
        /// <summary>
        /// User-specified flag to indicate which mode to use for advertisement.
        /// </summary>
        public readonly string AdvertiseMode;
        /// <summary>
        /// User-specified list of prefix groups to advertise in custom mode, which currently supports the following option: - ALL_SUBNETS: Advertises all of the router's own VPC subnets. This excludes any routes learned for subnets that use VPC Network Peering. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
        /// </summary>
        public readonly ImmutableArray<string> AdvertisedGroups;
        /// <summary>
        /// User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These IP ranges are advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.
        /// </summary>
        public readonly ImmutableArray<Outputs.RouterAdvertisedIpRangeResponse> AdvertisedIpRanges;
        /// <summary>
        /// The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the routes with the lowest priority value win.
        /// </summary>
        public readonly int AdvertisedRoutePriority;
        /// <summary>
        /// BFD configuration for the BGP peering.
        /// </summary>
        public readonly Outputs.RouterBgpPeerBfdResponse Bfd;
        /// <summary>
        /// A list of user-defined custom learned route IP address ranges for a BGP session.
        /// </summary>
        public readonly ImmutableArray<Outputs.RouterBgpPeerCustomLearnedIpRangeResponse> CustomLearnedIpRanges;
        /// <summary>
        /// The user-defined custom learned route priority for a BGP session. This value is applied to all custom learned route ranges for the session. You can choose a value from `0` to `65335`. If you don't provide a value, Google Cloud assigns a priority of `100` to the ranges.
        /// </summary>
        public readonly int CustomLearnedRoutePriority;
        /// <summary>
        /// The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
        /// </summary>
        public readonly string Enable;
        /// <summary>
        /// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
        /// </summary>
        public readonly bool EnableIpv4;
        /// <summary>
        /// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
        /// </summary>
        public readonly bool EnableIpv6;
        /// <summary>
        /// List of export policies applied to this peer, in the order they must be evaluated. The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
        /// </summary>
        public readonly ImmutableArray<string> ExportPolicies;
        /// <summary>
        /// List of import policies applied to this peer, in the order they must be evaluated. The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
        /// </summary>
        public readonly ImmutableArray<string> ImportPolicies;
        /// <summary>
        /// Name of the interface the BGP peer is associated with.
        /// </summary>
        public readonly string InterfaceName;
        /// <summary>
        /// IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// IPv4 address of the interface inside Google Cloud Platform.
        /// </summary>
        public readonly string Ipv4NexthopAddress;
        /// <summary>
        /// IPv6 address of the interface inside Google Cloud Platform.
        /// </summary>
        public readonly string Ipv6NexthopAddress;
        /// <summary>
        /// The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted. 
        /// </summary>
        public readonly string ManagementType;
        /// <summary>
        /// Present if MD5 authentication is enabled for the peering. Must be the name of one of the entries in the Router.md5_authentication_keys. The field must comply with RFC1035.
        /// </summary>
        public readonly string Md5AuthenticationKeyName;
        /// <summary>
        /// Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
        /// </summary>
        public readonly int PeerAsn;
        /// <summary>
        /// IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
        /// </summary>
        public readonly string PeerIpAddress;
        /// <summary>
        /// IPv4 address of the BGP interface outside Google Cloud Platform.
        /// </summary>
        public readonly string PeerIpv4NexthopAddress;
        /// <summary>
        /// IPv6 address of the BGP interface outside Google Cloud Platform.
        /// </summary>
        public readonly string PeerIpv6NexthopAddress;
        /// <summary>
        /// URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance must be located in zones contained in the same region as this Cloud Router. The VM instance is the peer side of the BGP session.
        /// </summary>
        public readonly string RouterApplianceInstance;

        [OutputConstructor]
        private RouterBgpPeerResponse(
            string advertiseMode,

            ImmutableArray<string> advertisedGroups,

            ImmutableArray<Outputs.RouterAdvertisedIpRangeResponse> advertisedIpRanges,

            int advertisedRoutePriority,

            Outputs.RouterBgpPeerBfdResponse bfd,

            ImmutableArray<Outputs.RouterBgpPeerCustomLearnedIpRangeResponse> customLearnedIpRanges,

            int customLearnedRoutePriority,

            string enable,

            bool enableIpv4,

            bool enableIpv6,

            ImmutableArray<string> exportPolicies,

            ImmutableArray<string> importPolicies,

            string interfaceName,

            string ipAddress,

            string ipv4NexthopAddress,

            string ipv6NexthopAddress,

            string managementType,

            string md5AuthenticationKeyName,

            string name,

            int peerAsn,

            string peerIpAddress,

            string peerIpv4NexthopAddress,

            string peerIpv6NexthopAddress,

            string routerApplianceInstance)
        {
            AdvertiseMode = advertiseMode;
            AdvertisedGroups = advertisedGroups;
            AdvertisedIpRanges = advertisedIpRanges;
            AdvertisedRoutePriority = advertisedRoutePriority;
            Bfd = bfd;
            CustomLearnedIpRanges = customLearnedIpRanges;
            CustomLearnedRoutePriority = customLearnedRoutePriority;
            Enable = enable;
            EnableIpv4 = enableIpv4;
            EnableIpv6 = enableIpv6;
            ExportPolicies = exportPolicies;
            ImportPolicies = importPolicies;
            InterfaceName = interfaceName;
            IpAddress = ipAddress;
            Ipv4NexthopAddress = ipv4NexthopAddress;
            Ipv6NexthopAddress = ipv6NexthopAddress;
            ManagementType = managementType;
            Md5AuthenticationKeyName = md5AuthenticationKeyName;
            Name = name;
            PeerAsn = peerAsn;
            PeerIpAddress = peerIpAddress;
            PeerIpv4NexthopAddress = peerIpv4NexthopAddress;
            PeerIpv6NexthopAddress = peerIpv6NexthopAddress;
            RouterApplianceInstance = routerApplianceInstance;
        }
    }
}
