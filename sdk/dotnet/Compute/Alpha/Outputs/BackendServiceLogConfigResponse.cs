// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    /// <summary>
    /// The available logging options for the load balancer traffic served by this backend service.
    /// </summary>
    [OutputType]
    public sealed class BackendServiceLogConfigResponse
    {
        /// <summary>
        /// Denotes whether to enable logging for the load balancer traffic served by this backend service. The default value is false.
        /// </summary>
        public readonly bool Enable;
        /// <summary>
        /// This field can only be specified if logging is enabled for this backend service. Configures whether all, none or a subset of optional fields should be added to the reported logs. One of [INCLUDE_ALL_OPTIONAL, EXCLUDE_ALL_OPTIONAL, CUSTOM]. Default is EXCLUDE_ALL_OPTIONAL.
        /// </summary>
        public readonly string Optional;
        /// <summary>
        /// This field can only be specified if logging is enabled for this backend service and "logConfig.optional" was set to CUSTOM. Contains a list of optional fields you want to include in the logs. For example: serverInstance, serverGkeDetails.cluster, serverGkeDetails.pod.podNamespace
        /// </summary>
        public readonly ImmutableArray<string> OptionalFields;
        /// <summary>
        /// This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0.
        /// </summary>
        public readonly double SampleRate;

        [OutputConstructor]
        private BackendServiceLogConfigResponse(
            bool enable,

            string optional,

            ImmutableArray<string> optionalFields,

            double sampleRate)
        {
            Enable = enable;
            Optional = optional;
            OptionalFields = optionalFields;
            SampleRate = sampleRate;
        }
    }
}
