// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    /// <summary>
    /// This reservation type is specified by total resource amounts (e.g. total count of CPUs) and can account for multiple instance SKUs. In other words, one can create instances of varying shapes against this reservation.
    /// </summary>
    [OutputType]
    public sealed class AllocationAggregateReservationResponse
    {
        /// <summary>
        /// [Output only] List of resources currently in use.
        /// </summary>
        public readonly ImmutableArray<Outputs.AllocationAggregateReservationReservedResourceInfoResponse> InUseResources;
        /// <summary>
        /// List of reserved resources (CPUs, memory, accelerators).
        /// </summary>
        public readonly ImmutableArray<Outputs.AllocationAggregateReservationReservedResourceInfoResponse> ReservedResources;
        /// <summary>
        /// The VM family that all instances scheduled against this reservation must belong to.
        /// </summary>
        public readonly string VmFamily;

        [OutputConstructor]
        private AllocationAggregateReservationResponse(
            ImmutableArray<Outputs.AllocationAggregateReservationReservedResourceInfoResponse> inUseResources,

            ImmutableArray<Outputs.AllocationAggregateReservationReservedResourceInfoResponse> reservedResources,

            string vmFamily)
        {
            InUseResources = inUseResources;
            ReservedResources = reservedResources;
            VmFamily = vmFamily;
        }
    }
}
