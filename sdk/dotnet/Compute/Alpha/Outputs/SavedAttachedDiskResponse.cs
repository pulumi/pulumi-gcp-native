// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    /// <summary>
    /// DEPRECATED: Please use compute#savedDisk instead. An instance-attached disk resource.
    /// </summary>
    [OutputType]
    public sealed class SavedAttachedDiskResponse
    {
        /// <summary>
        /// Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
        /// </summary>
        public readonly bool AutoDelete;
        /// <summary>
        /// Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
        /// </summary>
        public readonly bool Boot;
        /// <summary>
        /// Specifies the name of the disk attached to the source instance.
        /// </summary>
        public readonly string DeviceName;
        /// <summary>
        /// The encryption key for the disk.
        /// </summary>
        public readonly Outputs.CustomerEncryptionKeyResponse DiskEncryptionKey;
        /// <summary>
        /// The size of the disk in base-2 GB.
        /// </summary>
        public readonly string DiskSizeGb;
        /// <summary>
        /// URL of the disk type resource. For example: projects/project /zones/zone/diskTypes/pd-standard or pd-ssd
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
        /// </summary>
        public readonly ImmutableArray<Outputs.GuestOsFeatureResponse> GuestOsFeatures;
        /// <summary>
        /// Specifies zero-based index of the disk that is attached to the source instance.
        /// </summary>
        public readonly int Index;
        /// <summary>
        /// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.
        /// </summary>
        public readonly string Interface;
        /// <summary>
        /// Type of the resource. Always compute#attachedDisk for attached disks.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Any valid publicly visible licenses.
        /// </summary>
        public readonly ImmutableArray<string> Licenses;
        /// <summary>
        /// The mode in which this disk is attached to the source instance, either READ_WRITE or READ_ONLY.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// Specifies a URL of the disk attached to the source instance.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// A size of the storage used by the disk's snapshot by this machine image.
        /// </summary>
        public readonly string StorageBytes;
        /// <summary>
        /// An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
        /// </summary>
        public readonly string StorageBytesStatus;
        /// <summary>
        /// Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private SavedAttachedDiskResponse(
            bool autoDelete,

            bool boot,

            string deviceName,

            Outputs.CustomerEncryptionKeyResponse diskEncryptionKey,

            string diskSizeGb,

            string diskType,

            ImmutableArray<Outputs.GuestOsFeatureResponse> guestOsFeatures,

            int index,

            string @interface,

            string kind,

            ImmutableArray<string> licenses,

            string mode,

            string source,

            string storageBytes,

            string storageBytesStatus,

            string type)
        {
            AutoDelete = autoDelete;
            Boot = boot;
            DeviceName = deviceName;
            DiskEncryptionKey = diskEncryptionKey;
            DiskSizeGb = diskSizeGb;
            DiskType = diskType;
            GuestOsFeatures = guestOsFeatures;
            Index = index;
            Interface = @interface;
            Kind = kind;
            Licenses = licenses;
            Mode = mode;
            Source = source;
            StorageBytes = storageBytes;
            StorageBytesStatus = storageBytesStatus;
            Type = type;
        }
    }
}
