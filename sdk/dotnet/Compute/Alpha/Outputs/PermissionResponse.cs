// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    /// <summary>
    /// [Deprecated] All fields defined in a permission are ANDed.
    /// </summary>
    [OutputType]
    public sealed class PermissionResponse
    {
        /// <summary>
        /// Extra custom constraints. The constraints are ANDed together.
        /// </summary>
        public readonly ImmutableArray<Outputs.PermissionConstraintResponse> Constraints;
        /// <summary>
        /// Used in Ingress or Egress Gateway cases to specify hosts that the policy applies to. Exact match, prefix match, and suffix match are supported.
        /// </summary>
        public readonly ImmutableArray<string> Hosts;
        /// <summary>
        /// HTTP method.
        /// </summary>
        public readonly ImmutableArray<string> Methods;
        /// <summary>
        /// Negate of hosts. Specifies exclusions.
        /// </summary>
        public readonly ImmutableArray<string> NotHosts;
        /// <summary>
        /// Negate of methods. Specifies exclusions.
        /// </summary>
        public readonly ImmutableArray<string> NotMethods;
        /// <summary>
        /// Negate of paths. Specifies exclusions.
        /// </summary>
        public readonly ImmutableArray<string> NotPaths;
        /// <summary>
        /// Negate of ports. Specifies exclusions.
        /// </summary>
        public readonly ImmutableArray<string> NotPorts;
        /// <summary>
        /// HTTP request paths or gRPC methods. Exact match, prefix match, and suffix match are supported.
        /// </summary>
        public readonly ImmutableArray<string> Paths;
        /// <summary>
        /// Port names or numbers.
        /// </summary>
        public readonly ImmutableArray<string> Ports;

        [OutputConstructor]
        private PermissionResponse(
            ImmutableArray<Outputs.PermissionConstraintResponse> constraints,

            ImmutableArray<string> hosts,

            ImmutableArray<string> methods,

            ImmutableArray<string> notHosts,

            ImmutableArray<string> notMethods,

            ImmutableArray<string> notPaths,

            ImmutableArray<string> notPorts,

            ImmutableArray<string> paths,

            ImmutableArray<string> ports)
        {
            Constraints = constraints;
            Hosts = hosts;
            Methods = methods;
            NotHosts = notHosts;
            NotMethods = notMethods;
            NotPaths = notPaths;
            NotPorts = notPorts;
            Paths = paths;
            Ports = ports;
        }
    }
}
