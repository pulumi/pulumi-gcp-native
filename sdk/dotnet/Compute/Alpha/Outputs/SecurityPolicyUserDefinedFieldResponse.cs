// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Alpha.Outputs
{

    [OutputType]
    public sealed class SecurityPolicyUserDefinedFieldResponse
    {
        /// <summary>
        /// The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
        /// </summary>
        public readonly string Base;
        /// <summary>
        /// If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
        /// </summary>
        public readonly string Mask;
        /// <summary>
        /// The name of this field. Must be unique within the policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Offset of the first byte of the field (in network byte order) relative to 'base'.
        /// </summary>
        public readonly int Offset;
        /// <summary>
        /// Size of the field in bytes. Valid values: 1-4.
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private SecurityPolicyUserDefinedFieldResponse(
            string @base,

            string mask,

            string name,

            int offset,

            int size)
        {
            Base = @base;
            Mask = mask;
            Name = name;
            Offset = offset;
            Size = size;
        }
    }
}
