// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Compute.Beta.Inputs
{

    /// <summary>
    /// Message containing what to include in the cache key for a request for Cloud CDN.
    /// </summary>
    public sealed class CacheKeyPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, requests to different hosts will be cached separately.
        /// </summary>
        [Input("includeHost")]
        public Input<bool>? IncludeHost { get; set; }

        /// <summary>
        /// If true, http and https requests will be cached separately.
        /// </summary>
        [Input("includeProtocol")]
        public Input<bool>? IncludeProtocol { get; set; }

        /// <summary>
        /// If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.
        /// </summary>
        [Input("includeQueryString")]
        public Input<bool>? IncludeQueryString { get; set; }

        [Input("queryStringBlacklist")]
        private InputList<string>? _queryStringBlacklist;

        /// <summary>
        /// Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&amp;' and '=' will be percent encoded and not treated as delimiters.
        /// </summary>
        public InputList<string> QueryStringBlacklist
        {
            get => _queryStringBlacklist ?? (_queryStringBlacklist = new InputList<string>());
            set => _queryStringBlacklist = value;
        }

        [Input("queryStringWhitelist")]
        private InputList<string>? _queryStringWhitelist;

        /// <summary>
        /// Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&amp;' and '=' will be percent encoded and not treated as delimiters.
        /// </summary>
        public InputList<string> QueryStringWhitelist
        {
            get => _queryStringWhitelist ?? (_queryStringWhitelist = new InputList<string>());
            set => _queryStringWhitelist = value;
        }

        public CacheKeyPolicyArgs()
        {
        }
    }
}
