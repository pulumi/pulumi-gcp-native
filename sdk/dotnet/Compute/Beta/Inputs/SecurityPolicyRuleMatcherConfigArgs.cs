// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta.Inputs
{

    public sealed class SecurityPolicyRuleMatcherConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("destIpRanges")]
        private InputList<string>? _destIpRanges;

        /// <summary>
        /// CIDR IP address range. This field may only be specified when versioned_expr is set to FIREWALL.
        /// </summary>
        public InputList<string> DestIpRanges
        {
            get => _destIpRanges ?? (_destIpRanges = new InputList<string>());
            set => _destIpRanges = value;
        }

        [Input("layer4Configs")]
        private InputList<Inputs.SecurityPolicyRuleMatcherConfigLayer4ConfigArgs>? _layer4Configs;

        /// <summary>
        /// Pairs of IP protocols and ports that the rule should match. This field may only be specified when versioned_expr is set to FIREWALL.
        /// </summary>
        public InputList<Inputs.SecurityPolicyRuleMatcherConfigLayer4ConfigArgs> Layer4Configs
        {
            get => _layer4Configs ?? (_layer4Configs = new InputList<Inputs.SecurityPolicyRuleMatcherConfigLayer4ConfigArgs>());
            set => _layer4Configs = value;
        }

        [Input("srcIpRanges")]
        private InputList<string>? _srcIpRanges;

        /// <summary>
        /// CIDR IP address range. Maximum number of src_ip_ranges allowed is 10.
        /// </summary>
        public InputList<string> SrcIpRanges
        {
            get => _srcIpRanges ?? (_srcIpRanges = new InputList<string>());
            set => _srcIpRanges = value;
        }

        public SecurityPolicyRuleMatcherConfigArgs()
        {
        }
        public static new SecurityPolicyRuleMatcherConfigArgs Empty => new SecurityPolicyRuleMatcherConfigArgs();
    }
}
