// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta.Inputs
{

    public sealed class RouterBgpPeerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-specified flag to indicate which mode to use for advertisement.
        /// </summary>
        [Input("advertiseMode")]
        public Input<Pulumi.GoogleNative.Compute.Beta.RouterBgpPeerAdvertiseMode>? AdvertiseMode { get; set; }

        [Input("advertisedGroups")]
        private InputList<Pulumi.GoogleNative.Compute.Beta.RouterBgpPeerAdvertisedGroupsItem>? _advertisedGroups;

        /// <summary>
        /// User-specified list of prefix groups to advertise in custom mode, which currently supports the following option: - ALL_SUBNETS: Advertises all of the router's own VPC subnets. This excludes any routes learned for subnets that use VPC Network Peering. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
        /// </summary>
        public InputList<Pulumi.GoogleNative.Compute.Beta.RouterBgpPeerAdvertisedGroupsItem> AdvertisedGroups
        {
            get => _advertisedGroups ?? (_advertisedGroups = new InputList<Pulumi.GoogleNative.Compute.Beta.RouterBgpPeerAdvertisedGroupsItem>());
            set => _advertisedGroups = value;
        }

        [Input("advertisedIpRanges")]
        private InputList<Inputs.RouterAdvertisedIpRangeArgs>? _advertisedIpRanges;

        /// <summary>
        /// User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These IP ranges are advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.
        /// </summary>
        public InputList<Inputs.RouterAdvertisedIpRangeArgs> AdvertisedIpRanges
        {
            get => _advertisedIpRanges ?? (_advertisedIpRanges = new InputList<Inputs.RouterAdvertisedIpRangeArgs>());
            set => _advertisedIpRanges = value;
        }

        /// <summary>
        /// The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the routes with the lowest priority value win.
        /// </summary>
        [Input("advertisedRoutePriority")]
        public Input<int>? AdvertisedRoutePriority { get; set; }

        /// <summary>
        /// BFD configuration for the BGP peering.
        /// </summary>
        [Input("bfd")]
        public Input<Inputs.RouterBgpPeerBfdArgs>? Bfd { get; set; }

        [Input("customLearnedIpRanges")]
        private InputList<Inputs.RouterBgpPeerCustomLearnedIpRangeArgs>? _customLearnedIpRanges;

        /// <summary>
        /// A list of user-defined custom learned route IP address ranges for a BGP session.
        /// </summary>
        public InputList<Inputs.RouterBgpPeerCustomLearnedIpRangeArgs> CustomLearnedIpRanges
        {
            get => _customLearnedIpRanges ?? (_customLearnedIpRanges = new InputList<Inputs.RouterBgpPeerCustomLearnedIpRangeArgs>());
            set => _customLearnedIpRanges = value;
        }

        /// <summary>
        /// The user-defined custom learned route priority for a BGP session. This value is applied to all custom learned route ranges for the session. You can choose a value from `0` to `65335`. If you don't provide a value, Google Cloud assigns a priority of `100` to the ranges.
        /// </summary>
        [Input("customLearnedRoutePriority")]
        public Input<int>? CustomLearnedRoutePriority { get; set; }

        /// <summary>
        /// The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
        /// </summary>
        [Input("enable")]
        public Input<Pulumi.GoogleNative.Compute.Beta.RouterBgpPeerEnable>? Enable { get; set; }

        /// <summary>
        /// Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
        /// </summary>
        [Input("enableIpv4")]
        public Input<bool>? EnableIpv4 { get; set; }

        /// <summary>
        /// Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
        /// </summary>
        [Input("enableIpv6")]
        public Input<bool>? EnableIpv6 { get; set; }

        /// <summary>
        /// Name of the interface the BGP peer is associated with.
        /// </summary>
        [Input("interfaceName")]
        public Input<string>? InterfaceName { get; set; }

        /// <summary>
        /// IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// IPv4 address of the interface inside Google Cloud Platform.
        /// </summary>
        [Input("ipv4NexthopAddress")]
        public Input<string>? Ipv4NexthopAddress { get; set; }

        /// <summary>
        /// IPv6 address of the interface inside Google Cloud Platform.
        /// </summary>
        [Input("ipv6NexthopAddress")]
        public Input<string>? Ipv6NexthopAddress { get; set; }

        /// <summary>
        /// Present if MD5 authentication is enabled for the peering. Must be the name of one of the entries in the Router.md5_authentication_keys. The field must comply with RFC1035.
        /// </summary>
        [Input("md5AuthenticationKeyName")]
        public Input<string>? Md5AuthenticationKeyName { get; set; }

        /// <summary>
        /// Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.
        /// </summary>
        [Input("peerAsn")]
        public Input<int>? PeerAsn { get; set; }

        /// <summary>
        /// IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.
        /// </summary>
        [Input("peerIpAddress")]
        public Input<string>? PeerIpAddress { get; set; }

        /// <summary>
        /// IPv4 address of the BGP interface outside Google Cloud Platform.
        /// </summary>
        [Input("peerIpv4NexthopAddress")]
        public Input<string>? PeerIpv4NexthopAddress { get; set; }

        /// <summary>
        /// IPv6 address of the BGP interface outside Google Cloud Platform.
        /// </summary>
        [Input("peerIpv6NexthopAddress")]
        public Input<string>? PeerIpv6NexthopAddress { get; set; }

        /// <summary>
        /// URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance must be located in zones contained in the same region as this Cloud Router. The VM instance is the peer side of the BGP session.
        /// </summary>
        [Input("routerApplianceInstance")]
        public Input<string>? RouterApplianceInstance { get; set; }

        public RouterBgpPeerArgs()
        {
        }
        public static new RouterBgpPeerArgs Empty => new RouterBgpPeerArgs();
    }
}
