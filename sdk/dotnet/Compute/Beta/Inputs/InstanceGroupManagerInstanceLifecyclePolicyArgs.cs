// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta.Inputs
{

    public sealed class InstanceGroupManagerInstanceLifecyclePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action that a MIG performs on a failed or an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid values are - REPAIR (default): MIG automatically repairs a failed or an unhealthy VM by recreating it. For more information, see About repairing VMs in a MIG. - DO_NOTHING: MIG does not repair a failed or an unhealthy VM. 
        /// </summary>
        [Input("defaultActionOnFailure")]
        public Input<Pulumi.GoogleNative.Compute.Beta.InstanceGroupManagerInstanceLifecyclePolicyDefaultActionOnFailure>? DefaultActionOnFailure { get; set; }

        /// <summary>
        /// A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair. 
        /// </summary>
        [Input("forceUpdateOnRepair")]
        public Input<Pulumi.GoogleNative.Compute.Beta.InstanceGroupManagerInstanceLifecyclePolicyForceUpdateOnRepair>? ForceUpdateOnRepair { get; set; }

        public InstanceGroupManagerInstanceLifecyclePolicyArgs()
        {
        }
        public static new InstanceGroupManagerInstanceLifecyclePolicyArgs Empty => new InstanceGroupManagerInstanceLifecyclePolicyArgs();
    }
}
