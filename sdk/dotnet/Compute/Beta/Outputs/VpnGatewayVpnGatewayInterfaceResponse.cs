// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta.Outputs
{

    /// <summary>
    /// A VPN gateway interface.
    /// </summary>
    [OutputType]
    public sealed class VpnGatewayVpnGatewayInterfaceResponse
    {
        /// <summary>
        /// URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for HA VPN over Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource.
        /// </summary>
        public readonly string InterconnectAttachment;
        /// <summary>
        /// IP address for this VPN interface associated with the VPN gateway. The IP address could be either a regional external IP address or a regional internal IP address. The two IP addresses for a VPN gateway must be all regional external or regional internal IP addresses. There cannot be a mix of regional external IP addresses and regional internal IP addresses. For HA VPN over Cloud Interconnect, the IP addresses for both interfaces could either be regional internal IP addresses or regional external IP addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels, the IP address must be a regional external IP address.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// IPv6 address for this VPN interface associated with the VPN gateway. The IPv6 address must be a regional external IPv6 address. The format is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
        /// </summary>
        public readonly string Ipv6Address;

        [OutputConstructor]
        private VpnGatewayVpnGatewayInterfaceResponse(
            string interconnectAttachment,

            string ipAddress,

            string ipv6Address)
        {
            InterconnectAttachment = interconnectAttachment;
            IpAddress = ipAddress;
            Ipv6Address = ipv6Address;
        }
    }
}
