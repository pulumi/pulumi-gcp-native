// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta
{
    /// <summary>
    /// Creates a network in the specified project using the data included in the request.
    /// </summary>
    [GoogleNativeResourceType("google-native:compute/beta:Network")]
    public partial class Network : Pulumi.CustomResource
    {
        /// <summary>
        /// Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
        /// </summary>
        [Output("IPv4Range")]
        public Output<string> IPv4Range { get; private set; } = null!;

        /// <summary>
        /// Must be set to create a VPC network. If not set, a legacy network is created.
        /// 
        /// When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode.
        /// 
        /// An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
        /// 
        /// For custom mode VPC networks, you can add subnets using the subnetworks insert method.
        /// </summary>
        [Output("autoCreateSubnetworks")]
        public Output<bool> AutoCreateSubnetworks { get; private set; } = null!;

        /// <summary>
        /// [Output Only] Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this field when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// [Output Only] The gateway address for default routing out of the network, selected by GCP.
        /// </summary>
        [Output("gatewayIPv4")]
        public Output<string> GatewayIPv4 { get; private set; } = null!;

        /// <summary>
        /// [Output Only] Type of the resource. Always compute#network for networks.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes.
        /// </summary>
        [Output("mtu")]
        public Output<int> Mtu { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [Output Only] A list of network peerings for the resource.
        /// </summary>
        [Output("peerings")]
        public Output<ImmutableArray<Outputs.NetworkPeeringResponse>> Peerings { get; private set; } = null!;

        /// <summary>
        /// The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
        /// </summary>
        [Output("routingConfig")]
        public Output<Outputs.NetworkRoutingConfigResponse> RoutingConfig { get; private set; } = null!;

        /// <summary>
        /// [Output Only] Server-defined URL for the resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// [Output Only] Server-defined fully-qualified URLs for all subnetworks in this VPC network.
        /// </summary>
        [Output("subnetworks")]
        public Output<ImmutableArray<string>> Subnetworks { get; private set; } = null!;


        /// <summary>
        /// Create a Network resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Network(string name, NetworkArgs args, CustomResourceOptions? options = null)
            : base("google-native:compute/beta:Network", name, args ?? new NetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Network(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:compute/beta:Network", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Network resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Network Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Network(name, id, options);
        }
    }

    public sealed class NetworkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
        /// </summary>
        [Input("IPv4Range")]
        public Input<string>? IPv4Range { get; set; }

        /// <summary>
        /// Must be set to create a VPC network. If not set, a legacy network is created.
        /// 
        /// When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode.
        /// 
        /// An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
        /// 
        /// For custom mode VPC networks, you can add subnets using the subnetworks insert method.
        /// </summary>
        [Input("autoCreateSubnetworks")]
        public Input<bool>? AutoCreateSubnetworks { get; set; }

        /// <summary>
        /// [Output Only] Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this field when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// [Output Only] The gateway address for default routing out of the network, selected by GCP.
        /// </summary>
        [Input("gatewayIPv4")]
        public Input<string>? GatewayIPv4 { get; set; }

        /// <summary>
        /// [Output Only] The unique identifier for the resource. This identifier is defined by the server.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// [Output Only] Type of the resource. Always compute#network for networks.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes.
        /// </summary>
        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        [Input("peerings")]
        private InputList<Inputs.NetworkPeeringArgs>? _peerings;

        /// <summary>
        /// [Output Only] A list of network peerings for the resource.
        /// </summary>
        public InputList<Inputs.NetworkPeeringArgs> Peerings
        {
            get => _peerings ?? (_peerings = new InputList<Inputs.NetworkPeeringArgs>());
            set => _peerings = value;
        }

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.
        /// </summary>
        [Input("routingConfig")]
        public Input<Inputs.NetworkRoutingConfigArgs>? RoutingConfig { get; set; }

        /// <summary>
        /// [Output Only] Server-defined URL for the resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("subnetworks")]
        private InputList<string>? _subnetworks;

        /// <summary>
        /// [Output Only] Server-defined fully-qualified URLs for all subnetworks in this VPC network.
        /// </summary>
        public InputList<string> Subnetworks
        {
            get => _subnetworks ?? (_subnetworks = new InputList<string>());
            set => _subnetworks = value;
        }

        public NetworkArgs()
        {
        }
    }
}
