// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Compute.Beta
{
    /// <summary>
    /// Creates a NetworkAttachment in the specified project in the given scope using the parameters that are included in the request.
    /// </summary>
    [GoogleNativeResourceType("google-native:compute/beta:NetworkAttachment")]
    public partial class NetworkAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of connections for all the producers connected to this network attachment.
        /// </summary>
        [Output("connectionEndpoints")]
        public Output<ImmutableArray<Outputs.NetworkAttachmentConnectedEndpointResponse>> ConnectionEndpoints { get; private set; } = null!;

        [Output("connectionPreference")]
        public Output<string> ConnectionPreference { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        [Output("producerAcceptLists")]
        public Output<ImmutableArray<string>> ProducerAcceptLists { get; private set; } = null!;

        /// <summary>
        /// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        [Output("producerRejectLists")]
        public Output<ImmutableArray<string>> ProducerRejectLists { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// Server-defined URL for the resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Server-defined URL for this resource's resource id.
        /// </summary>
        [Output("selfLinkWithId")]
        public Output<string> SelfLinkWithId { get; private set; } = null!;

        /// <summary>
        /// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
        /// </summary>
        [Output("subnetworks")]
        public Output<ImmutableArray<string>> Subnetworks { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAttachment(string name, NetworkAttachmentArgs args, CustomResourceOptions? options = null)
            : base("google-native:compute/beta:NetworkAttachment", name, args ?? new NetworkAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAttachment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:compute/beta:NetworkAttachment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "project",
                    "region",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAttachment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new NetworkAttachment(name, id, options);
        }
    }

    public sealed class NetworkAttachmentArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectionPreference")]
        public Input<Pulumi.GoogleNative.Compute.Beta.NetworkAttachmentConnectionPreference>? ConnectionPreference { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("producerAcceptLists")]
        private InputList<string>? _producerAcceptLists;

        /// <summary>
        /// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerAcceptLists
        {
            get => _producerAcceptLists ?? (_producerAcceptLists = new InputList<string>());
            set => _producerAcceptLists = value;
        }

        [Input("producerRejectLists")]
        private InputList<string>? _producerRejectLists;

        /// <summary>
        /// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerRejectLists
        {
            get => _producerRejectLists ?? (_producerRejectLists = new InputList<string>());
            set => _producerRejectLists = value;
        }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        [Input("subnetworks")]
        private InputList<string>? _subnetworks;

        /// <summary>
        /// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
        /// </summary>
        public InputList<string> Subnetworks
        {
            get => _subnetworks ?? (_subnetworks = new InputList<string>());
            set => _subnetworks = value;
        }

        public NetworkAttachmentArgs()
        {
        }
        public static new NetworkAttachmentArgs Empty => new NetworkAttachmentArgs();
    }
}
