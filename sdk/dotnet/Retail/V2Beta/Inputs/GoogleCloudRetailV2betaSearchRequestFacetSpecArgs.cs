// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Retail.V2Beta.Inputs
{

    /// <summary>
    /// A facet specification to perform faceted search.
    /// </summary>
    public sealed class GoogleCloudRetailV2betaSearchRequestFacetSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It will be ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response will be the same as in the request, and it will be ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response will be determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which will generate a facet 'gender'. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" will always be ranked at 1st and 2nd position since their enable_dynamic_position are false.
        /// </summary>
        [Input("enableDynamicPosition")]
        public Input<bool>? EnableDynamicPosition { get; set; }

        [Input("excludedFilterKeys")]
        private InputList<string>? _excludedFilterKeys;

        /// <summary>
        /// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        public InputList<string> ExcludedFilterKeys
        {
            get => _excludedFilterKeys ?? (_excludedFilterKeys = new InputList<string>());
            set => _excludedFilterKeys = value;
        }

        /// <summary>
        /// The facet key specification.
        /// </summary>
        [Input("facetKey", required: true)]
        public Input<Inputs.GoogleCloudRetailV2betaSearchRequestFacetSpecFacetKeyArgs> FacetKey { get; set; } = null!;

        /// <summary>
        /// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        public GoogleCloudRetailV2betaSearchRequestFacetSpecArgs()
        {
        }
        public static new GoogleCloudRetailV2betaSearchRequestFacetSpecArgs Empty => new GoogleCloudRetailV2betaSearchRequestFacetSpecArgs();
    }
}
