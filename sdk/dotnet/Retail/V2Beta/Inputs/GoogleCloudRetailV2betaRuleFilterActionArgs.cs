// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Retail.V2Beta.Inputs
{

    /// <summary>
    /// * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided is combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
    /// </summary>
    public sealed class GoogleCloudRetailV2betaRuleFilterActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. See more details at the Retail Search [user guide](/retail/search/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        public GoogleCloudRetailV2betaRuleFilterActionArgs()
        {
        }
        public static new GoogleCloudRetailV2betaRuleFilterActionArgs Empty => new GoogleCloudRetailV2betaRuleFilterActionArgs();
    }
}
