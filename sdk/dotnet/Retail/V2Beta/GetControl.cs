// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Retail.V2Beta
{
    public static class GetControl
    {
        /// <summary>
        /// Gets a Control.
        /// </summary>
        public static Task<GetControlResult> InvokeAsync(GetControlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetControlResult>("google-native:retail/v2beta:getControl", args ?? new GetControlArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a Control.
        /// </summary>
        public static Output<GetControlResult> Invoke(GetControlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlResult>("google-native:retail/v2beta:getControl", args ?? new GetControlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetControlArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalogId", required: true)]
        public string CatalogId { get; set; } = null!;

        [Input("controlId", required: true)]
        public string ControlId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetControlArgs()
        {
        }
        public static new GetControlArgs Empty => new GetControlArgs();
    }

    public sealed class GetControlInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalogId", required: true)]
        public Input<string> CatalogId { get; set; } = null!;

        [Input("controlId", required: true)]
        public Input<string> ControlId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetControlInvokeArgs()
        {
        }
        public static new GetControlInvokeArgs Empty => new GetControlInvokeArgs();
    }


    [OutputType]
    public sealed class GetControlResult
    {
        /// <summary>
        /// List of serving config ids that are associated with this control in the same Catalog. Note the association is managed via the ServingConfig, this is an output only denormalized view.
        /// </summary>
        public readonly ImmutableArray<string> AssociatedServingConfigIds;
        /// <summary>
        /// The human readable control display name. Used in Retail UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is thrown.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A facet specification to perform faceted search. Note that this field is deprecated and will throw NOT_IMPLEMENTED if used for creating a control.
        /// </summary>
        public readonly Outputs.GoogleCloudRetailV2betaSearchRequestFacetSpecResponse FacetSpec;
        /// <summary>
        /// Immutable. Fully qualified name `projects/*/locations/global/catalogs/*/controls/*`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A rule control - a condition-action pair. Enacts a set action when the condition is triggered. For example: Boost "gShoe" when query full matches "Running Shoes".
        /// </summary>
        public readonly Outputs.GoogleCloudRetailV2betaRuleResponse Rule;
        /// <summary>
        /// Specifies the use case for the control. Affects what condition fields can be set. Only settable by search controls. Will default to SEARCH_SOLUTION_USE_CASE_SEARCH if not specified. Currently only allow one search_solution_use_case per control.
        /// </summary>
        public readonly ImmutableArray<string> SearchSolutionUseCase;
        /// <summary>
        /// Immutable. The solution types that the control is used for. Currently we support setting only one type of solution at creation time. Only `SOLUTION_TYPE_SEARCH` value is supported at the moment. If no solution type is provided at creation time, will default to SOLUTION_TYPE_SEARCH.
        /// </summary>
        public readonly ImmutableArray<string> SolutionTypes;

        [OutputConstructor]
        private GetControlResult(
            ImmutableArray<string> associatedServingConfigIds,

            string displayName,

            Outputs.GoogleCloudRetailV2betaSearchRequestFacetSpecResponse facetSpec,

            string name,

            Outputs.GoogleCloudRetailV2betaRuleResponse rule,

            ImmutableArray<string> searchSolutionUseCase,

            ImmutableArray<string> solutionTypes)
        {
            AssociatedServingConfigIds = associatedServingConfigIds;
            DisplayName = displayName;
            FacetSpec = facetSpec;
            Name = name;
            Rule = rule;
            SearchSolutionUseCase = searchSolutionUseCase;
            SolutionTypes = solutionTypes;
        }
    }
}
