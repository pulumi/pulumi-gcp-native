// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Managedidentities.V1Alpha1.Outputs
{

    /// <summary>
    /// Represents a relationship between two domains which makes it possible for users in one domain to be authenticated by a dc in another domain. Refer https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc731335(v%3dws.10) If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.
    /// </summary>
    [OutputType]
    public sealed class TrustResponse
    {
        /// <summary>
        /// The time the instance was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The last heartbeat time when the trust was known to be connected.
        /// </summary>
        public readonly string LastKnownTrustConnectedHeartbeatTime;
        /// <summary>
        /// The trust authentication type which decides whether the trusted side has forest/domain wide access or selective access to approved set of resources.
        /// </summary>
        public readonly bool SelectiveAuthentication;
        /// <summary>
        /// The current state of this trust.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Additional information about the current state of this trust, if available.
        /// </summary>
        public readonly string StateDescription;
        /// <summary>
        /// The target dns server ip addresses which can resolve the remote domain involved in trust.
        /// </summary>
        public readonly ImmutableArray<string> TargetDnsIpAddresses;
        /// <summary>
        /// The fully qualified target domain name which will be in trust with current domain.
        /// </summary>
        public readonly string TargetDomainName;
        /// <summary>
        /// The trust direction decides the current domain is trusted, trusting or both.
        /// </summary>
        public readonly string TrustDirection;
        /// <summary>
        /// Input only, and will not be stored. The trust secret used for handshake with target domain.
        /// </summary>
        public readonly string TrustHandshakeSecret;
        /// <summary>
        /// The type of trust represented by the trust resource.
        /// </summary>
        public readonly string TrustType;
        /// <summary>
        /// Last update time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private TrustResponse(
            string createTime,

            string lastKnownTrustConnectedHeartbeatTime,

            bool selectiveAuthentication,

            string state,

            string stateDescription,

            ImmutableArray<string> targetDnsIpAddresses,

            string targetDomainName,

            string trustDirection,

            string trustHandshakeSecret,

            string trustType,

            string updateTime)
        {
            CreateTime = createTime;
            LastKnownTrustConnectedHeartbeatTime = lastKnownTrustConnectedHeartbeatTime;
            SelectiveAuthentication = selectiveAuthentication;
            State = state;
            StateDescription = stateDescription;
            TargetDnsIpAddresses = targetDnsIpAddresses;
            TargetDomainName = targetDomainName;
            TrustDirection = trustDirection;
            TrustHandshakeSecret = trustHandshakeSecret;
            TrustType = trustType;
            UpdateTime = updateTime;
        }
    }
}
