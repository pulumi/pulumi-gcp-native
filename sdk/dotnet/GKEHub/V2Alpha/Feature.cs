// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V2Alpha
{
    /// <summary>
    /// Creates membershipFeature under a given parent.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:gkehub/v2alpha:Feature")]
    public partial class Feature : Pulumi.CustomResource
    {
        /// <summary>
        /// When the MembershipFeature resource was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// When the MembershipFeature resource was deleted.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// Reference information for a FeatureConfig applied on the MembershipFeature.
        /// </summary>
        [Output("featureConfigRef")]
        public Output<Outputs.FeatureConfigRefResponse> FeatureConfigRef { get; private set; } = null!;

        /// <summary>
        /// GCP labels for this MembershipFeature.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name of the membershipFeature, in the format: `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`. Note that `membershipFeatures` is shortened to `features` in the resource name. (see http://go/aip/122#collection-identifiers)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Lifecycle information of the resource itself.
        /// </summary>
        [Output("resourceState")]
        public Output<Outputs.ResourceStateResponse> ResourceState { get; private set; } = null!;

        /// <summary>
        /// Spec of this membershipFeature.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.FeatureSpecResponse> Spec { get; private set; } = null!;

        /// <summary>
        /// State of the this membershipFeature.
        /// </summary>
        [Output("state")]
        public Output<Outputs.FeatureStateResponse> State { get; private set; } = null!;

        /// <summary>
        /// When the MembershipFeature resource was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Feature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Feature(string name, FeatureArgs args, CustomResourceOptions? options = null)
            : base("google-native:gkehub/v2alpha:Feature", name, args ?? new FeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Feature(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:gkehub/v2alpha:Feature", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Feature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Feature Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Feature(name, id, options);
        }
    }

    public sealed class FeatureArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Reference information for a FeatureConfig applied on the MembershipFeature.
        /// </summary>
        [Input("featureConfigRef")]
        public Input<Inputs.FeatureConfigRefArgs>? FeatureConfigRef { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// GCP labels for this MembershipFeature.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Idempotent request UUID.
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Lifecycle information of the resource itself.
        /// </summary>
        [Input("resourceState")]
        public Input<Inputs.ResourceStateArgs>? ResourceState { get; set; }

        public FeatureArgs()
        {
        }
    }
}
