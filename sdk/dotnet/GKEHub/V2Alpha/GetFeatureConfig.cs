// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V2Alpha
{
    public static class GetFeatureConfig
    {
        /// <summary>
        /// ========= FeatureConfig Services ========= Gets details of a featureConfig.
        /// </summary>
        public static Task<GetFeatureConfigResult> InvokeAsync(GetFeatureConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFeatureConfigResult>("google-native:gkehub/v2alpha:getFeatureConfig", args ?? new GetFeatureConfigArgs(), options.WithDefaults());

        /// <summary>
        /// ========= FeatureConfig Services ========= Gets details of a featureConfig.
        /// </summary>
        public static Output<GetFeatureConfigResult> Invoke(GetFeatureConfigInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFeatureConfigResult>("google-native:gkehub/v2alpha:getFeatureConfig", args ?? new GetFeatureConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureConfigArgs : Pulumi.InvokeArgs
    {
        [Input("featureConfigId", required: true)]
        public string FeatureConfigId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeatureConfigArgs()
        {
        }
    }

    public sealed class GetFeatureConfigInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("featureConfigId", required: true)]
        public Input<string> FeatureConfigId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeatureConfigInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFeatureConfigResult
    {
        /// <summary>
        /// When the FeatureConfig resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// When the FeatureConfig resource was deleted.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// GCP labels for this FeatureConfig.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Resource name of this FeatureConfig, in the format: `projects/{project}/locations/global/FeatureConfigs/{feature_type}/{feature_config}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Input only. Immutable. User input of feature spec. Note that this field is immutable. Must create a new FeatureConfig if a new feature spec is needed.
        /// </summary>
        public readonly Outputs.FeatureSpecResponse Spec;
        /// <summary>
        /// Lifecycle information of the FeatureConfig.
        /// </summary>
        public readonly Outputs.FeatureConfigStateResponse State;
        /// <summary>
        /// Google-generated UUID for this resource. This is unique across all FeatureConfig resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.
        /// </summary>
        public readonly string UniqueId;
        /// <summary>
        /// When the FeatureConfig resource was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetFeatureConfigResult(
            string createTime,

            string deleteTime,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.FeatureSpecResponse spec,

            Outputs.FeatureConfigStateResponse state,

            string uniqueId,

            string updateTime)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Labels = labels;
            Name = name;
            Spec = spec;
            State = state;
            UniqueId = uniqueId;
            UpdateTime = updateTime;
        }
    }
}
