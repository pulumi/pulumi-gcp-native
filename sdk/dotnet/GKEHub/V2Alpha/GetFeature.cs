// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V2Alpha
{
    public static class GetFeature
    {
        /// <summary>
        /// ========= MembershipFeature Services ========= Gets details of a membershipFeature.
        /// </summary>
        public static Task<GetFeatureResult> InvokeAsync(GetFeatureArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFeatureResult>("google-native:gkehub/v2alpha:getFeature", args ?? new GetFeatureArgs(), options.WithDefaults());

        /// <summary>
        /// ========= MembershipFeature Services ========= Gets details of a membershipFeature.
        /// </summary>
        public static Output<GetFeatureResult> Invoke(GetFeatureInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFeatureResult>("google-native:gkehub/v2alpha:getFeature", args ?? new GetFeatureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFeatureArgs : Pulumi.InvokeArgs
    {
        [Input("featureId", required: true)]
        public string FeatureId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("membershipId", required: true)]
        public string MembershipId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetFeatureArgs()
        {
        }
    }

    public sealed class GetFeatureInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("featureId", required: true)]
        public Input<string> FeatureId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetFeatureInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFeatureResult
    {
        /// <summary>
        /// When the MembershipFeature resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// When the MembershipFeature resource was deleted.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// Reference information for a FeatureConfig applied on the MembershipFeature.
        /// </summary>
        public readonly Outputs.FeatureConfigRefResponse FeatureConfigRef;
        /// <summary>
        /// GCP labels for this MembershipFeature.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name of the membershipFeature, in the format: `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`. Note that `membershipFeatures` is shortened to `features` in the resource name. (see http://go/aip/122#collection-identifiers)
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Lifecycle information of the resource itself.
        /// </summary>
        public readonly Outputs.ResourceStateResponse ResourceState;
        /// <summary>
        /// Spec of this membershipFeature.
        /// </summary>
        public readonly Outputs.FeatureSpecResponse Spec;
        /// <summary>
        /// State of the this membershipFeature.
        /// </summary>
        public readonly Outputs.FeatureStateResponse State;
        /// <summary>
        /// When the MembershipFeature resource was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetFeatureResult(
            string createTime,

            string deleteTime,

            Outputs.FeatureConfigRefResponse featureConfigRef,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.ResourceStateResponse resourceState,

            Outputs.FeatureSpecResponse spec,

            Outputs.FeatureStateResponse state,

            string updateTime)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            FeatureConfigRef = featureConfigRef;
            Labels = labels;
            Name = name;
            ResourceState = resourceState;
            Spec = spec;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
