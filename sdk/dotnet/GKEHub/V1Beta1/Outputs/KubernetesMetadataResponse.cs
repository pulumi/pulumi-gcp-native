// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta1.Outputs
{

    /// <summary>
    /// KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
    /// </summary>
    [OutputType]
    public sealed class KubernetesMetadataResponse
    {
        /// <summary>
        /// Kubernetes API server version string as reported by '/version'.
        /// </summary>
        public readonly string KubernetesApiServerVersion;
        /// <summary>
        /// The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
        /// </summary>
        public readonly int MemoryMb;
        /// <summary>
        /// Node count as reported by Kubernetes nodes resources.
        /// </summary>
        public readonly int NodeCount;
        /// <summary>
        /// Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
        /// </summary>
        public readonly string NodeProviderId;
        /// <summary>
        /// The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// vCPU count as reported by Kubernetes nodes resources.
        /// </summary>
        public readonly int VcpuCount;

        [OutputConstructor]
        private KubernetesMetadataResponse(
            string kubernetesApiServerVersion,

            int memoryMb,

            int nodeCount,

            string nodeProviderId,

            string updateTime,

            int vcpuCount)
        {
            KubernetesApiServerVersion = kubernetesApiServerVersion;
            MemoryMb = memoryMb;
            NodeCount = nodeCount;
            NodeProviderId = nodeProviderId;
            UpdateTime = updateTime;
            VcpuCount = vcpuCount;
        }
    }
}
