// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.GKEHub.V1Alpha2
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The infrastructure type this Membership is running on.
    /// </summary>
    [EnumType]
    public readonly struct MembershipInfrastructureType : IEquatable<MembershipInfrastructureType>
    {
        private readonly string _value;

        private MembershipInfrastructureType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// No type was specified. Some Hub functionality may require a type be specified, and will not support Memberships with this value.
        /// </summary>
        public static MembershipInfrastructureType InfrastructureTypeUnspecified { get; } = new MembershipInfrastructureType("INFRASTRUCTURE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Private infrastructure that is owned or operated by customer. This includes GKE distributions such as GKE-OnPrem and GKE-OnBareMetal.
        /// </summary>
        public static MembershipInfrastructureType OnPrem { get; } = new MembershipInfrastructureType("ON_PREM");
        /// <summary>
        /// Public cloud infrastructure.
        /// </summary>
        public static MembershipInfrastructureType MultiCloud { get; } = new MembershipInfrastructureType("MULTI_CLOUD");

        public static bool operator ==(MembershipInfrastructureType left, MembershipInfrastructureType right) => left.Equals(right);
        public static bool operator !=(MembershipInfrastructureType left, MembershipInfrastructureType right) => !left.Equals(right);

        public static explicit operator string(MembershipInfrastructureType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is MembershipInfrastructureType other && Equals(other);
        public bool Equals(MembershipInfrastructureType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
