// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta.Inputs
{

    /// <summary>
    /// Configuration for OIDC Auth flow.
    /// </summary>
    public sealed class IdentityServiceOidcConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// PEM-encoded CA for OIDC provider.
        /// </summary>
        [Input("certificateAuthorityData")]
        public Input<string>? CertificateAuthorityData { get; set; }

        /// <summary>
        /// ID for OIDC client application.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
        /// </summary>
        [Input("deployCloudConsoleProxy")]
        public Input<bool>? DeployCloudConsoleProxy { get; set; }

        /// <summary>
        /// Enable access token.
        /// </summary>
        [Input("enableAccessToken")]
        public Input<bool>? EnableAccessToken { get; set; }

        /// <summary>
        /// Comma-separated list of key-value pairs.
        /// </summary>
        [Input("extraParams")]
        public Input<string>? ExtraParams { get; set; }

        /// <summary>
        /// Prefix to prepend to group name.
        /// </summary>
        [Input("groupPrefix")]
        public Input<string>? GroupPrefix { get; set; }

        /// <summary>
        /// Claim in OIDC ID token that holds group information.
        /// </summary>
        [Input("groupsClaim")]
        public Input<string>? GroupsClaim { get; set; }

        /// <summary>
        /// URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
        /// </summary>
        [Input("issuerUri")]
        public Input<string>? IssuerUri { get; set; }

        /// <summary>
        /// Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
        /// </summary>
        [Input("kubectlRedirectUri")]
        public Input<string>? KubectlRedirectUri { get; set; }

        /// <summary>
        /// Comma-separated list of identifiers.
        /// </summary>
        [Input("scopes")]
        public Input<string>? Scopes { get; set; }

        /// <summary>
        /// Claim in OIDC ID token that holds username.
        /// </summary>
        [Input("userClaim")]
        public Input<string>? UserClaim { get; set; }

        /// <summary>
        /// Prefix to prepend to user name.
        /// </summary>
        [Input("userPrefix")]
        public Input<string>? UserPrefix { get; set; }

        public IdentityServiceOidcConfigArgs()
        {
        }
        public static new IdentityServiceOidcConfigArgs Empty => new IdentityServiceOidcConfigArgs();
    }
}
