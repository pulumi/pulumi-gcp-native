// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta.Inputs
{

    /// <summary>
    /// **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
    /// </summary>
    public sealed class ConfigManagementMembershipSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Binauthz conifguration for the cluster. Deprecated: This field will be ignored and should not be set.
        /// </summary>
        [Input("binauthz")]
        public Input<Inputs.ConfigManagementBinauthzConfigArgs>? Binauthz { get; set; }

        /// <summary>
        /// The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector.
        /// </summary>
        [Input("cluster")]
        public Input<string>? Cluster { get; set; }

        /// <summary>
        /// Config Sync configuration for the cluster.
        /// </summary>
        [Input("configSync")]
        public Input<Inputs.ConfigManagementConfigSyncArgs>? ConfigSync { get; set; }

        /// <summary>
        /// Hierarchy Controller configuration for the cluster.
        /// </summary>
        [Input("hierarchyController")]
        public Input<Inputs.ConfigManagementHierarchyControllerConfigArgs>? HierarchyController { get; set; }

        /// <summary>
        /// Policy Controller configuration for the cluster.
        /// </summary>
        [Input("policyController")]
        public Input<Inputs.ConfigManagementPolicyControllerArgs>? PolicyController { get; set; }

        /// <summary>
        /// Version of ACM installed.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ConfigManagementMembershipSpecArgs()
        {
        }
        public static new ConfigManagementMembershipSpecArgs Empty => new ConfigManagementMembershipSpecArgs();
    }
}
