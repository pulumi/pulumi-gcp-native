// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta.Inputs
{

    /// <summary>
    /// Configuration for Policy Controller
    /// </summary>
    public sealed class PolicyControllerHubConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.
        /// </summary>
        [Input("auditIntervalSeconds")]
        public Input<string>? AuditIntervalSeconds { get; set; }

        /// <summary>
        /// The maximum number of audit violations to be stored in a constraint. If not set, the internal default (currently 20) will be used.
        /// </summary>
        [Input("constraintViolationLimit")]
        public Input<string>? ConstraintViolationLimit { get; set; }

        [Input("deploymentConfigs")]
        private InputMap<Inputs.PolicyControllerPolicyControllerDeploymentConfigArgs>? _deploymentConfigs;

        /// <summary>
        /// Map of deployment configs to deployments ("admission", "audit", "mutation').
        /// </summary>
        public InputMap<Inputs.PolicyControllerPolicyControllerDeploymentConfigArgs> DeploymentConfigs
        {
            get => _deploymentConfigs ?? (_deploymentConfigs = new InputMap<Inputs.PolicyControllerPolicyControllerDeploymentConfigArgs>());
            set => _deploymentConfigs = value;
        }

        [Input("exemptableNamespaces")]
        private InputList<string>? _exemptableNamespaces;

        /// <summary>
        /// The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.
        /// </summary>
        public InputList<string> ExemptableNamespaces
        {
            get => _exemptableNamespaces ?? (_exemptableNamespaces = new InputList<string>());
            set => _exemptableNamespaces = value;
        }

        /// <summary>
        /// The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.
        /// </summary>
        [Input("installSpec")]
        public Input<Pulumi.GoogleNative.GKEHub.V1Beta.PolicyControllerHubConfigInstallSpec>? InstallSpec { get; set; }

        /// <summary>
        /// Logs all denies and dry run failures.
        /// </summary>
        [Input("logDeniesEnabled")]
        public Input<bool>? LogDeniesEnabled { get; set; }

        /// <summary>
        /// Monitoring specifies the configuration of monitoring.
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.PolicyControllerMonitoringConfigArgs>? Monitoring { get; set; }

        /// <summary>
        /// Enables the ability to mutate resources using Policy Controller.
        /// </summary>
        [Input("mutationEnabled")]
        public Input<bool>? MutationEnabled { get; set; }

        /// <summary>
        /// Specifies the desired policy content on the cluster
        /// </summary>
        [Input("policyContent")]
        public Input<Inputs.PolicyControllerPolicyContentSpecArgs>? PolicyContent { get; set; }

        /// <summary>
        /// Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.
        /// </summary>
        [Input("referentialRulesEnabled")]
        public Input<bool>? ReferentialRulesEnabled { get; set; }

        public PolicyControllerHubConfigArgs()
        {
        }
        public static new PolicyControllerHubConfigArgs Empty => new PolicyControllerHubConfigArgs();
    }
}
