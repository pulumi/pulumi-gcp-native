// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta
{
    public static class GetNamespace
    {
        /// <summary>
        /// Returns the details of a fleet namespace.
        /// </summary>
        public static Task<GetNamespaceResult> InvokeAsync(GetNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespaceResult>("google-native:gkehub/v1beta:getNamespace", args ?? new GetNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the details of a fleet namespace.
        /// </summary>
        public static Output<GetNamespaceResult> Invoke(GetNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespaceResult>("google-native:gkehub/v1beta:getNamespace", args ?? new GetNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespaceArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("namespaceId", required: true)]
        public string NamespaceId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetNamespaceArgs()
        {
        }
        public static new GetNamespaceArgs Empty => new GetNamespaceArgs();
    }

    public sealed class GetNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetNamespaceInvokeArgs()
        {
        }
        public static new GetNamespaceInvokeArgs Empty => new GetNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespaceResult
    {
        /// <summary>
        /// When the namespace was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// When the namespace was deleted.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Scope associated with the namespace
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// State of the namespace resource.
        /// </summary>
        public readonly Outputs.NamespaceLifecycleStateResponse State;
        /// <summary>
        /// Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// When the namespace was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetNamespaceResult(
            string createTime,

            string deleteTime,

            string name,

            string scope,

            Outputs.NamespaceLifecycleStateResponse state,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Name = name;
            Scope = scope;
            State = state;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
