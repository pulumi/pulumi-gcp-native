// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Beta
{
    public static class GetRbacrolebinding
    {
        /// <summary>
        /// Returns the details of a RBACRoleBinding.
        /// </summary>
        public static Task<GetRbacrolebindingResult> InvokeAsync(GetRbacrolebindingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRbacrolebindingResult>("google-native:gkehub/v1beta:getRbacrolebinding", args ?? new GetRbacrolebindingArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the details of a RBACRoleBinding.
        /// </summary>
        public static Output<GetRbacrolebindingResult> Invoke(GetRbacrolebindingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRbacrolebindingResult>("google-native:gkehub/v1beta:getRbacrolebinding", args ?? new GetRbacrolebindingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRbacrolebindingArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("namespaceId", required: true)]
        public string NamespaceId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("rbacrolebindingId", required: true)]
        public string RbacrolebindingId { get; set; } = null!;

        public GetRbacrolebindingArgs()
        {
        }
        public static new GetRbacrolebindingArgs Empty => new GetRbacrolebindingArgs();
    }

    public sealed class GetRbacrolebindingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("rbacrolebindingId", required: true)]
        public Input<string> RbacrolebindingId { get; set; } = null!;

        public GetRbacrolebindingInvokeArgs()
        {
        }
        public static new GetRbacrolebindingInvokeArgs Empty => new GetRbacrolebindingInvokeArgs();
    }


    [OutputType]
    public sealed class GetRbacrolebindingResult
    {
        /// <summary>
        /// When the rbacrolebinding was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// When the rbacrolebinding was deleted.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// group is the group, as seen by the kubernetes cluster.
        /// </summary>
        public readonly string Group;
        /// <summary>
        /// The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Role to bind to the principal
        /// </summary>
        public readonly Outputs.RoleResponse Role;
        /// <summary>
        /// State of the rbacrolebinding resource.
        /// </summary>
        public readonly Outputs.RBACRoleBindingLifecycleStateResponse State;
        /// <summary>
        /// Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// When the rbacrolebinding was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
        /// </summary>
        public readonly string User;

        [OutputConstructor]
        private GetRbacrolebindingResult(
            string createTime,

            string deleteTime,

            string group,

            string name,

            Outputs.RoleResponse role,

            Outputs.RBACRoleBindingLifecycleStateResponse state,

            string uid,

            string updateTime,

            string user)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Group = group;
            Name = name;
            Role = role;
            State = state;
            Uid = uid;
            UpdateTime = updateTime;
            User = user;
        }
    }
}
