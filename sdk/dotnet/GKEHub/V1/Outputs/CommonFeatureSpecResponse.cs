// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1.Outputs
{

    /// <summary>
    /// CommonFeatureSpec contains Hub-wide configuration information
    /// </summary>
    [OutputType]
    public sealed class CommonFeatureSpecResponse
    {
        /// <summary>
        /// Appdevexperience specific spec.
        /// </summary>
        public readonly Outputs.AppDevExperienceFeatureSpecResponse Appdevexperience;
        /// <summary>
        /// ClusterUpgrade (fleet-based) feature spec.
        /// </summary>
        public readonly Outputs.ClusterUpgradeFleetSpecResponse Clusterupgrade;
        /// <summary>
        /// DataplaneV2 feature spec.
        /// </summary>
        public readonly Outputs.DataplaneV2FeatureSpecResponse Dataplanev2;
        /// <summary>
        /// FleetObservability feature spec.
        /// </summary>
        public readonly Outputs.FleetObservabilityFeatureSpecResponse Fleetobservability;
        /// <summary>
        /// Multicluster Ingress-specific spec.
        /// </summary>
        public readonly Outputs.MultiClusterIngressFeatureSpecResponse Multiclusteringress;

        [OutputConstructor]
        private CommonFeatureSpecResponse(
            Outputs.AppDevExperienceFeatureSpecResponse appdevexperience,

            Outputs.ClusterUpgradeFleetSpecResponse clusterupgrade,

            Outputs.DataplaneV2FeatureSpecResponse dataplanev2,

            Outputs.FleetObservabilityFeatureSpecResponse fleetobservability,

            Outputs.MultiClusterIngressFeatureSpecResponse multiclusteringress)
        {
            Appdevexperience = appdevexperience;
            Clusterupgrade = clusterupgrade;
            Dataplanev2 = dataplanev2;
            Fleetobservability = fleetobservability;
            Multiclusteringress = multiclusteringress;
        }
    }
}
