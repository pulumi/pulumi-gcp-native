// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1.Outputs
{

    /// <summary>
    /// MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
    /// </summary>
    [OutputType]
    public sealed class MembershipEndpointResponse
    {
        /// <summary>
        /// Optional. Specific information for a Google Edge cluster.
        /// </summary>
        public readonly Outputs.EdgeClusterResponse EdgeCluster;
        /// <summary>
        /// Optional. Specific information for a GKE-on-GCP cluster.
        /// </summary>
        public readonly Outputs.GkeClusterResponse GkeCluster;
        /// <summary>
        /// Useful Kubernetes-specific metadata.
        /// </summary>
        public readonly Outputs.KubernetesMetadataResponse KubernetesMetadata;
        /// <summary>
        /// Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
        /// </summary>
        public readonly Outputs.KubernetesResourceResponse KubernetesResource;
        /// <summary>
        /// Optional. Specific information for a GKE Multi-Cloud cluster.
        /// </summary>
        public readonly Outputs.MultiCloudClusterResponse MultiCloudCluster;
        /// <summary>
        /// Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
        /// </summary>
        public readonly Outputs.OnPremClusterResponse OnPremCluster;

        [OutputConstructor]
        private MembershipEndpointResponse(
            Outputs.EdgeClusterResponse edgeCluster,

            Outputs.GkeClusterResponse gkeCluster,

            Outputs.KubernetesMetadataResponse kubernetesMetadata,

            Outputs.KubernetesResourceResponse kubernetesResource,

            Outputs.MultiCloudClusterResponse multiCloudCluster,

            Outputs.OnPremClusterResponse onPremCluster)
        {
            EdgeCluster = edgeCluster;
            GkeCluster = gkeCluster;
            KubernetesMetadata = kubernetesMetadata;
            KubernetesResource = kubernetesResource;
            MultiCloudCluster = multiCloudCluster;
            OnPremCluster = onPremCluster;
        }
    }
}
