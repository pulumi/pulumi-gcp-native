// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.GKEHub.V1
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Immutable. The on prem cluster's type.
    /// </summary>
    [EnumType]
    public readonly struct OnPremClusterClusterType : IEquatable<OnPremClusterClusterType>
    {
        private readonly string _value;

        private OnPremClusterClusterType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The ClusterType is not set.
        /// </summary>
        public static OnPremClusterClusterType ClustertypeUnspecified { get; } = new OnPremClusterClusterType("CLUSTERTYPE_UNSPECIFIED");
        /// <summary>
        /// The ClusterType is bootstrap cluster.
        /// </summary>
        public static OnPremClusterClusterType Bootstrap { get; } = new OnPremClusterClusterType("BOOTSTRAP");
        /// <summary>
        /// The ClusterType is baremetal hybrid cluster.
        /// </summary>
        public static OnPremClusterClusterType Hybrid { get; } = new OnPremClusterClusterType("HYBRID");
        /// <summary>
        /// The ClusterType is baremetal standalone cluster.
        /// </summary>
        public static OnPremClusterClusterType Standalone { get; } = new OnPremClusterClusterType("STANDALONE");
        /// <summary>
        /// The ClusterType is user cluster.
        /// </summary>
        public static OnPremClusterClusterType User { get; } = new OnPremClusterClusterType("USER");

        public static bool operator ==(OnPremClusterClusterType left, OnPremClusterClusterType right) => left.Equals(right);
        public static bool operator !=(OnPremClusterClusterType left, OnPremClusterClusterType right) => !left.Equals(right);

        public static explicit operator string(OnPremClusterClusterType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OnPremClusterClusterType other && Equals(other);
        public bool Equals(OnPremClusterClusterType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
