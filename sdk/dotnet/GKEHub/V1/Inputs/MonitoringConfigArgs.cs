// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1.Inputs
{

    /// <summary>
    /// MonitoringConfig informs Fleet-based applications/services/UIs how the metrics for the underlying cluster is reported to cloud monitoring services. It can be set from empty to non-empty, but can't be mutated directly to prevent accidentally breaking the constinousty of metrics.
    /// </summary>
    public sealed class MonitoringConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Cluster name used to report metrics. For Anthos on VMWare/Baremetal/MultiCloud clusters, it would be in format {cluster_type}/{cluster_name}, e.g., "awsClusters/cluster_1".
        /// </summary>
        [Input("cluster")]
        public Input<string>? Cluster { get; set; }

        /// <summary>
        /// Optional. For GKE and Multicloud clusters, this is the UUID of the cluster resource. For VMWare and Baremetal clusters, this is the kube-system UID.
        /// </summary>
        [Input("clusterHash")]
        public Input<string>? ClusterHash { get; set; }

        /// <summary>
        /// Optional. Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos.
        /// </summary>
        [Input("kubernetesMetricsPrefix")]
        public Input<string>? KubernetesMetricsPrefix { get; set; }

        /// <summary>
        /// Optional. Location used to report Metrics
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. Project used to report Metrics
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public MonitoringConfigArgs()
        {
        }
        public static new MonitoringConfigArgs Empty => new MonitoringConfigArgs();
    }
}
