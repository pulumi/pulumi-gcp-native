// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.GKEHub.V1Alpha.Outputs
{

    /// <summary>
    /// MembershipFeatureSpec contains configuration information for a single Membership. NOTE: Please use snake case in your feature name.
    /// </summary>
    [OutputType]
    public sealed class MembershipFeatureSpecResponse
    {
        /// <summary>
        /// Anthos Observability-specific spec
        /// </summary>
        public readonly Outputs.AnthosObservabilityMembershipSpecResponse Anthosobservability;
        /// <summary>
        /// Cloud Build-specific spec
        /// </summary>
        public readonly Outputs.CloudBuildMembershipSpecResponse Cloudbuild;
        /// <summary>
        /// Config Management-specific spec.
        /// </summary>
        public readonly Outputs.ConfigManagementMembershipSpecResponse Configmanagement;
        /// <summary>
        /// Fleet observability membership spec
        /// </summary>
        public readonly Outputs.FleetObservabilityMembershipSpecResponse Fleetobservability;
        /// <summary>
        /// Identity Service-specific spec.
        /// </summary>
        public readonly Outputs.IdentityServiceMembershipSpecResponse Identityservice;
        /// <summary>
        /// Anthos Service Mesh-specific spec
        /// </summary>
        public readonly Outputs.ServiceMeshMembershipSpecResponse Mesh;
        /// <summary>
        /// FNS Actuation membership spec
        /// </summary>
        public readonly Outputs.NamespaceActuationMembershipSpecResponse Namespaceactuation;
        /// <summary>
        /// Whether this per-Membership spec was inherited from a fleet-level default. This field can be updated by users by either overriding a Membership config (updated to USER implicitly) or setting to FLEET explicitly.
        /// </summary>
        public readonly Outputs.OriginResponse Origin;
        /// <summary>
        /// Policy Controller spec.
        /// </summary>
        public readonly Outputs.PolicyControllerMembershipSpecResponse Policycontroller;
        /// <summary>
        /// Workload Certificate spec.
        /// </summary>
        public readonly Outputs.MembershipSpecResponse Workloadcertificate;

        [OutputConstructor]
        private MembershipFeatureSpecResponse(
            Outputs.AnthosObservabilityMembershipSpecResponse anthosobservability,

            Outputs.CloudBuildMembershipSpecResponse cloudbuild,

            Outputs.ConfigManagementMembershipSpecResponse configmanagement,

            Outputs.FleetObservabilityMembershipSpecResponse fleetobservability,

            Outputs.IdentityServiceMembershipSpecResponse identityservice,

            Outputs.ServiceMeshMembershipSpecResponse mesh,

            Outputs.NamespaceActuationMembershipSpecResponse namespaceactuation,

            Outputs.OriginResponse origin,

            Outputs.PolicyControllerMembershipSpecResponse policycontroller,

            Outputs.MembershipSpecResponse workloadcertificate)
        {
            Anthosobservability = anthosobservability;
            Cloudbuild = cloudbuild;
            Configmanagement = configmanagement;
            Fleetobservability = fleetobservability;
            Identityservice = identityservice;
            Mesh = mesh;
            Namespaceactuation = namespaceactuation;
            Origin = origin;
            Policycontroller = policycontroller;
            Workloadcertificate = workloadcertificate;
        }
    }
}
