// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudAsset.V1
{
    public static class GetSavedQuery
    {
        /// <summary>
        /// Gets details about a saved query.
        /// </summary>
        public static Task<GetSavedQueryResult> InvokeAsync(GetSavedQueryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSavedQueryResult>("google-native:cloudasset/v1:getSavedQuery", args ?? new GetSavedQueryArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details about a saved query.
        /// </summary>
        public static Output<GetSavedQueryResult> Invoke(GetSavedQueryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSavedQueryResult>("google-native:cloudasset/v1:getSavedQuery", args ?? new GetSavedQueryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSavedQueryArgs : global::Pulumi.InvokeArgs
    {
        [Input("savedQueryId", required: true)]
        public string SavedQueryId { get; set; } = null!;

        [Input("v1Id", required: true)]
        public string V1Id { get; set; } = null!;

        [Input("v1Id1", required: true)]
        public string V1Id1 { get; set; } = null!;

        public GetSavedQueryArgs()
        {
        }
        public static new GetSavedQueryArgs Empty => new GetSavedQueryArgs();
    }

    public sealed class GetSavedQueryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("savedQueryId", required: true)]
        public Input<string> SavedQueryId { get; set; } = null!;

        [Input("v1Id", required: true)]
        public Input<string> V1Id { get; set; } = null!;

        [Input("v1Id1", required: true)]
        public Input<string> V1Id1 { get; set; } = null!;

        public GetSavedQueryInvokeArgs()
        {
        }
        public static new GetSavedQueryInvokeArgs Empty => new GetSavedQueryInvokeArgs();
    }


    [OutputType]
    public sealed class GetSavedQueryResult
    {
        /// <summary>
        /// The query content.
        /// </summary>
        public readonly Outputs.QueryContentResponse Content;
        /// <summary>
        /// The create time of this saved query.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The account's email address who has created this saved query.
        /// </summary>
        public readonly string Creator;
        /// <summary>
        /// The description of this saved query. This value should be fewer than 255 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Labels applied on the resource. This value should not contain more than 10 entries. The key and value of each entry must be non-empty and fewer than 64 characters.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The last update time of this saved query.
        /// </summary>
        public readonly string LastUpdateTime;
        /// <summary>
        /// The account's email address who has updated this saved query most recently.
        /// </summary>
        public readonly string LastUpdater;
        /// <summary>
        /// The resource name of the saved query. The format must be: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetSavedQueryResult(
            Outputs.QueryContentResponse content,

            string createTime,

            string creator,

            string description,

            ImmutableDictionary<string, string> labels,

            string lastUpdateTime,

            string lastUpdater,

            string name)
        {
            Content = content;
            CreateTime = createTime;
            Creator = creator;
            Description = description;
            Labels = labels;
            LastUpdateTime = lastUpdateTime;
            LastUpdater = lastUpdater;
            Name = name;
        }
    }
}
