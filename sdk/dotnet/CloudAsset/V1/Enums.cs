// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.CloudAsset.V1
{
    /// <summary>
    /// Asset content type. If not specified, no content but the asset name and type will be returned.
    /// </summary>
    [EnumType]
    public readonly struct FeedContentType : IEquatable<FeedContentType>
    {
        private readonly string _value;

        private FeedContentType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified content type.
        /// </summary>
        public static FeedContentType ContentTypeUnspecified { get; } = new FeedContentType("CONTENT_TYPE_UNSPECIFIED");
        /// <summary>
        /// Resource metadata.
        /// </summary>
        public static FeedContentType Resource { get; } = new FeedContentType("RESOURCE");
        /// <summary>
        /// The actual IAM policy set on a resource.
        /// </summary>
        public static FeedContentType IamPolicy { get; } = new FeedContentType("IAM_POLICY");
        /// <summary>
        /// The organization policy set on an asset.
        /// </summary>
        public static FeedContentType OrgPolicy { get; } = new FeedContentType("ORG_POLICY");
        /// <summary>
        /// The Access Context Manager policy set on an asset.
        /// </summary>
        public static FeedContentType AccessPolicy { get; } = new FeedContentType("ACCESS_POLICY");
        /// <summary>
        /// The runtime OS Inventory information.
        /// </summary>
        public static FeedContentType OsInventory { get; } = new FeedContentType("OS_INVENTORY");
        /// <summary>
        /// The related resources.
        /// </summary>
        public static FeedContentType Relationship { get; } = new FeedContentType("RELATIONSHIP");

        public static bool operator ==(FeedContentType left, FeedContentType right) => left.Equals(right);
        public static bool operator !=(FeedContentType left, FeedContentType right) => !left.Equals(right);

        public static explicit operator string(FeedContentType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FeedContentType other && Equals(other);
        public bool Equals(FeedContentType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
