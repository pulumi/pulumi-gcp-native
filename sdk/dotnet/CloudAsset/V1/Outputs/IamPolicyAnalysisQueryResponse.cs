// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudAsset.V1.Outputs
{

    /// <summary>
    /// IAM policy analysis query message.
    /// </summary>
    [OutputType]
    public sealed class IamPolicyAnalysisQueryResponse
    {
        /// <summary>
        /// Optional. Specifies roles or permissions for analysis. This is optional.
        /// </summary>
        public readonly Outputs.AccessSelectorResponse AccessSelector;
        /// <summary>
        /// Optional. The hypothetical context for IAM conditions evaluation.
        /// </summary>
        public readonly Outputs.ConditionContextResponse ConditionContext;
        /// <summary>
        /// Optional. Specifies an identity for analysis.
        /// </summary>
        public readonly Outputs.IdentitySelectorResponse IdentitySelector;
        /// <summary>
        /// Optional. The query options.
        /// </summary>
        public readonly Outputs.OptionsResponse Options;
        /// <summary>
        /// Optional. Specifies a resource for analysis.
        /// </summary>
        public readonly Outputs.ResourceSelectorResponse ResourceSelector;
        /// <summary>
        /// The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as "organizations/123"), a folder number (such as "folders/123"), a project ID (such as "projects/my-project-id"), or a project number (such as "projects/12345"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
        /// </summary>
        public readonly string Scope;

        [OutputConstructor]
        private IamPolicyAnalysisQueryResponse(
            Outputs.AccessSelectorResponse accessSelector,

            Outputs.ConditionContextResponse conditionContext,

            Outputs.IdentitySelectorResponse identitySelector,

            Outputs.OptionsResponse options,

            Outputs.ResourceSelectorResponse resourceSelector,

            string scope)
        {
            AccessSelector = accessSelector;
            ConditionContext = conditionContext;
            IdentitySelector = identitySelector;
            Options = options;
            ResourceSelector = resourceSelector;
            Scope = scope;
        }
    }
}
