// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Domains.V1.Outputs
{

    /// <summary>
    /// Defines renewal, billing, and transfer settings for a `Registration`.
    /// </summary>
    [OutputType]
    public sealed class ManagementSettingsResponse
    {
        /// <summary>
        /// Optional. The desired renewal method for this `Registration`. The actual `renewal_method` is automatically updated to reflect this choice. If unset or equal to `RENEWAL_METHOD_UNSPECIFIED`, it will be treated as if it were set to `AUTOMATIC_RENEWAL`. Can't be set to `RENEWAL_DISABLED` during resource creation and can only be updated when the `Registration` resource has state `ACTIVE` or `SUSPENDED`. When `preferred_renewal_method` is set to `AUTOMATIC_RENEWAL` the actual `renewal_method` can be set to `RENEWAL_DISABLED` in case of e.g. problems with the Billing Account or reported domain abuse. In such cases check the `issues` field on the `Registration`. After the problem is resolved the `renewal_method` will be automatically updated to `preferred_renewal_method` in a few hours.
        /// </summary>
        public readonly string PreferredRenewalMethod;
        /// <summary>
        /// The actual renewal method for this `Registration`. When `preferred_renewal_method` is set to `AUTOMATIC_RENEWAL` the actual `renewal_method` can be equal to `RENEWAL_DISABLED` in case of e.g. problems with the Billing Account or reported domain abuse. In such cases check the `issues` field on the `Registration`. After the problem is resolved the `renewal_method` will be automatically updated to `preferred_renewal_method` in a few hours.
        /// </summary>
        public readonly string RenewalMethod;
        /// <summary>
        /// Controls whether the domain can be transferred to another registrar.
        /// </summary>
        public readonly string TransferLockState;

        [OutputConstructor]
        private ManagementSettingsResponse(
            string preferredRenewalMethod,

            string renewalMethod,

            string transferLockState)
        {
            PreferredRenewalMethod = preferredRenewalMethod;
            RenewalMethod = renewalMethod;
            TransferLockState = transferLockState;
        }
    }
}
