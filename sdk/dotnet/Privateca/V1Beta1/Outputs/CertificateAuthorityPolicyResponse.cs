// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Privateca.V1Beta1.Outputs
{

    /// <summary>
    /// The issuing policy for a CertificateAuthority. Certificates will not be successfully issued from this CertificateAuthority if they violate the policy.
    /// </summary>
    [OutputType]
    public sealed class CertificateAuthorityPolicyResponse
    {
        /// <summary>
        /// Optional. If any value is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed value. If no value is specified, all values will be allowed for this fied. Glob patterns are also supported.
        /// </summary>
        public readonly ImmutableArray<string> AllowedCommonNames;
        /// <summary>
        /// Optional. All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper in the list.
        /// </summary>
        public readonly Outputs.AllowedConfigListResponse AllowedConfigList;
        /// <summary>
        /// Optional. If specified, then only methods allowed in the IssuanceModes may be used to issue Certificates.
        /// </summary>
        public readonly Outputs.IssuanceModesResponse AllowedIssuanceModes;
        /// <summary>
        /// Optional. If any Subject is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed Subject. If a Subject has an empty field, any value will be allowed for that field.
        /// </summary>
        public readonly ImmutableArray<Outputs.SubjectResponse> AllowedLocationsAndOrganizations;
        /// <summary>
        /// Optional. If a AllowedSubjectAltNames is specified here, then all Certificates issued by the CertificateAuthority must match AllowedSubjectAltNames. If no value or an empty value is specified, any value will be allowed for the SubjectAltNames field.
        /// </summary>
        public readonly Outputs.AllowedSubjectAltNamesResponse AllowedSans;
        /// <summary>
        /// Optional. The maximum lifetime allowed by the CertificateAuthority. Note that if the any part if the issuing chain expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated.
        /// </summary>
        public readonly string MaximumLifetime;
        /// <summary>
        /// Optional. All Certificates issued by the CertificateAuthority will use the provided configuration values, overwriting any requested configuration values.
        /// </summary>
        public readonly Outputs.ReusableConfigWrapperResponse OverwriteConfigValues;

        [OutputConstructor]
        private CertificateAuthorityPolicyResponse(
            ImmutableArray<string> allowedCommonNames,

            Outputs.AllowedConfigListResponse allowedConfigList,

            Outputs.IssuanceModesResponse allowedIssuanceModes,

            ImmutableArray<Outputs.SubjectResponse> allowedLocationsAndOrganizations,

            Outputs.AllowedSubjectAltNamesResponse allowedSans,

            string maximumLifetime,

            Outputs.ReusableConfigWrapperResponse overwriteConfigValues)
        {
            AllowedCommonNames = allowedCommonNames;
            AllowedConfigList = allowedConfigList;
            AllowedIssuanceModes = allowedIssuanceModes;
            AllowedLocationsAndOrganizations = allowedLocationsAndOrganizations;
            AllowedSans = allowedSans;
            MaximumLifetime = maximumLifetime;
            OverwriteConfigValues = overwriteConfigValues;
        }
    }
}
