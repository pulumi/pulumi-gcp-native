// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Privateca.V1
{
    /// <summary>
    /// Create a CaPool.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:privateca/v1:CaPool")]
    public partial class CaPool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
        /// </summary>
        [Output("caPoolId")]
        public Output<string> CaPoolId { get; private set; } = null!;

        /// <summary>
        /// Optional. The IssuancePolicy to control how Certificates will be issued from this CaPool.
        /// </summary>
        [Output("issuancePolicy")]
        public Output<Outputs.IssuancePolicyResponse> IssuancePolicy { get; private set; } = null!;

        /// <summary>
        /// Optional. Labels with user-defined metadata.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name for this CaPool in the format `projects/*/locations/*/caPools/*`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        /// </summary>
        [Output("publishingOptions")]
        public Output<Outputs.PublishingOptionsResponse> PublishingOptions { get; private set; } = null!;

        /// <summary>
        /// Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// Immutable. The Tier of this CaPool.
        /// </summary>
        [Output("tier")]
        public Output<string> Tier { get; private set; } = null!;


        /// <summary>
        /// Create a CaPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CaPool(string name, CaPoolArgs args, CustomResourceOptions? options = null)
            : base("google-native:privateca/v1:CaPool", name, args ?? new CaPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CaPool(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:privateca/v1:CaPool", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "caPoolId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CaPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CaPool Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CaPool(name, id, options);
        }
    }

    public sealed class CaPoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
        /// </summary>
        [Input("caPoolId", required: true)]
        public Input<string> CaPoolId { get; set; } = null!;

        /// <summary>
        /// Optional. The IssuancePolicy to control how Certificates will be issued from this CaPool.
        /// </summary>
        [Input("issuancePolicy")]
        public Input<Inputs.IssuancePolicyArgs>? IssuancePolicy { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Labels with user-defined metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        /// </summary>
        [Input("publishingOptions")]
        public Input<Inputs.PublishingOptionsArgs>? PublishingOptions { get; set; }

        /// <summary>
        /// Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Immutable. The Tier of this CaPool.
        /// </summary>
        [Input("tier", required: true)]
        public Input<Pulumi.GoogleNative.Privateca.V1.CaPoolTier> Tier { get; set; } = null!;

        public CaPoolArgs()
        {
        }
        public static new CaPoolArgs Empty => new CaPoolArgs();
    }
}
