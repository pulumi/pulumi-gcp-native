// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.Privateca.V1
{
    public static class GetCertificateTemplate
    {
        /// <summary>
        /// Returns a CertificateTemplate.
        /// </summary>
        public static Task<GetCertificateTemplateResult> InvokeAsync(GetCertificateTemplateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateTemplateResult>("google-native:privateca/v1:getCertificateTemplate", args ?? new GetCertificateTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Returns a CertificateTemplate.
        /// </summary>
        public static Output<GetCertificateTemplateResult> Invoke(GetCertificateTemplateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCertificateTemplateResult>("google-native:privateca/v1:getCertificateTemplate", args ?? new GetCertificateTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateTemplateArgs : Pulumi.InvokeArgs
    {
        [Input("certificateTemplateId", required: true)]
        public string CertificateTemplateId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCertificateTemplateArgs()
        {
        }
    }

    public sealed class GetCertificateTemplateInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("certificateTemplateId", required: true)]
        public Input<string> CertificateTemplateId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCertificateTemplateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateTemplateResult
    {
        /// <summary>
        /// The time at which this CertificateTemplate was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. A human-readable description of scenarios this template is intended for.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Describes constraints on identities that may be appear in Certificates issued using this template. If this is omitted, then this template will not add restrictions on a certificate's identity.
        /// </summary>
        public readonly Outputs.CertificateIdentityConstraintsResponse IdentityConstraints;
        /// <summary>
        /// Optional. Labels with user-defined metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name for this CertificateTemplate in the format `projects/*/locations/*/certificateTemplates/*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Describes the set of X.509 extensions that may appear in a Certificate issued using this CertificateTemplate. If a certificate request sets extensions that don't appear in the passthrough_extensions, those extensions will be dropped. If the issuing CaPool's IssuancePolicy defines baseline_values that don't appear here, the certificate issuance request will fail. If this is omitted, then this template will not add restrictions on a certificate's X.509 extensions. These constraints do not apply to X.509 extensions set in this CertificateTemplate's predefined_values.
        /// </summary>
        public readonly Outputs.CertificateExtensionConstraintsResponse PassthroughExtensions;
        /// <summary>
        /// Optional. A set of X.509 values that will be applied to all issued certificates that use this template. If the certificate request includes conflicting values for the same properties, they will be overwritten by the values defined here. If the issuing CaPool's IssuancePolicy defines conflicting baseline_values for the same properties, the certificate issuance request will fail.
        /// </summary>
        public readonly Outputs.X509ParametersResponse PredefinedValues;
        /// <summary>
        /// The time at which this CertificateTemplate was updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCertificateTemplateResult(
            string createTime,

            string description,

            Outputs.CertificateIdentityConstraintsResponse identityConstraints,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.CertificateExtensionConstraintsResponse passthroughExtensions,

            Outputs.X509ParametersResponse predefinedValues,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            IdentityConstraints = identityConstraints;
            Labels = labels;
            Name = name;
            PassthroughExtensions = passthroughExtensions;
            PredefinedValues = predefinedValues;
            UpdateTime = updateTime;
        }
    }
}
