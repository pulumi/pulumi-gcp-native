// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BinaryAuthorization.V1.Outputs
{

    /// <summary>
    /// An attestation authenticator that will be used to verify attestations. Typically this is just a set of public keys. Conceptually, an authenticator can be treated as always returning either "authenticated" or "not authenticated" when presented with a signed attestation (almost always assumed to be a [DSSE](https://github.com/secure-systems-lab/dsse) attestation). The details of how an authenticator makes this decision are specific to the type of 'authenticator' that this message wraps.
    /// </summary>
    [OutputType]
    public sealed class AttestationAuthenticatorResponse
    {
        /// <summary>
        /// Optional. A user-provided name for this `AttestationAuthenticator`. This field has no effect on the policy evaluation behavior except to improve readability of messages in evaluation results.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. A set of raw PKIX SubjectPublicKeyInfo format public keys. If any public key in the set validates the attestation signature, then the signature is considered authenticated (i.e. any one key is sufficient to authenticate).
        /// </summary>
        public readonly Outputs.PkixPublicKeySetResponse PkixPublicKeySet;

        [OutputConstructor]
        private AttestationAuthenticatorResponse(
            string displayName,

            Outputs.PkixPublicKeySetResponse pkixPublicKeySet)
        {
            DisplayName = displayName;
            PkixPublicKeySet = pkixPublicKeySet;
        }
    }
}
