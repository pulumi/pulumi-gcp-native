// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BinaryAuthorization.V1.Inputs
{

    /// <summary>
    /// A trusted directory check, which rejects images that do not come from the set of user-configured trusted directories.
    /// </summary>
    public sealed class TrustedDirectoryCheckArgs : global::Pulumi.ResourceArgs
    {
        [Input("trustedDirPatterns", required: true)]
        private InputList<string>? _trustedDirPatterns;

        /// <summary>
        /// List of trusted directory patterns. A pattern is in the form "registry/path/to/directory". The registry domain part is defined as two or more dot-separated words, e.g., `us.pkg.dev`, or `gcr.io`. Additionally, `*` can be used in three ways as wildcards: 1. leading `*` to match varying prefixes in registry subdomain (useful for location prefixes); 2. trailing `*` after registry/ to match varying endings; 3. trailing `**` after registry/ to match "/" as well. For example: -- `gcr.io/my-project/my-repo` is valid to match a single directory -- `*-docker.pkg.dev/my-project/my-repo` or `*.gcr.io/my-project` are valid to match varying prefixes -- `gcr.io/my-project/*` will match all direct directories in `my-project` -- `gcr.io/my-project/**` would match all directories in `my-project` -- `gcr.i*` is not allowed since the registry is not completely specified -- `sub*domain.gcr.io/nginx` is not valid because only leading `*` or trailing `*` are allowed. -- `*pkg.dev/my-project/my-repo` is not valid because leading `*` can only match subdomain -- `**-docker.pkg.dev` is not valid because one leading `*` is allowed, and that it cannot match `/`
        /// </summary>
        public InputList<string> TrustedDirPatterns
        {
            get => _trustedDirPatterns ?? (_trustedDirPatterns = new InputList<string>());
            set => _trustedDirPatterns = value;
        }

        public TrustedDirectoryCheckArgs()
        {
        }
        public static new TrustedDirectoryCheckArgs Empty => new TrustedDirectoryCheckArgs();
    }
}
