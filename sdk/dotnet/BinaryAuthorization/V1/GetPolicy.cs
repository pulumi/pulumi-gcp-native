// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BinaryAuthorization.V1
{
    public static class GetPolicy
    {
        /// <summary>
        /// Gets a platform policy. Returns `NOT_FOUND` if the policy doesn't exist.
        /// </summary>
        public static Task<GetPolicyResult> InvokeAsync(GetPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyResult>("google-native:binaryauthorization/v1:getPolicy", args ?? new GetPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a platform policy. Returns `NOT_FOUND` if the policy doesn't exist.
        /// </summary>
        public static Output<GetPolicyResult> Invoke(GetPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyResult>("google-native:binaryauthorization/v1:getPolicy", args ?? new GetPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("platformId", required: true)]
        public string PlatformId { get; set; } = null!;

        [Input("policyId", required: true)]
        public string PolicyId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetPolicyArgs()
        {
        }
        public static new GetPolicyArgs Empty => new GetPolicyArgs();
    }

    public sealed class GetPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("platformId", required: true)]
        public Input<string> PlatformId { get; set; } = null!;

        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetPolicyInvokeArgs()
        {
        }
        public static new GetPolicyInvokeArgs Empty => new GetPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyResult
    {
        /// <summary>
        /// Optional. A description comment about the policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. GKE platform-specific policy.
        /// </summary>
        public readonly Outputs.GkePolicyResponse GkePolicy;
        /// <summary>
        /// The relative resource name of the Binary Authorization platform policy, in the form of `projects/*/platforms/*/policies/*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Time when the policy was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetPolicyResult(
            string description,

            Outputs.GkePolicyResponse gkePolicy,

            string name,

            string updateTime)
        {
            Description = description;
            GkePolicy = gkePolicy;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
