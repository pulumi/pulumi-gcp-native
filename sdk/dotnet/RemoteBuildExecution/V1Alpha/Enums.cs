// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.RemoteBuildExecution.V1Alpha
{
    /// <summary>
    /// The policy of the feature.
    /// </summary>
    [EnumType]
    public readonly struct GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy : IEquatable<GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy>
    {
        private readonly string _value;

        private GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value, if not explicitly set. Equivalent to FORBIDDEN, unless otherwise documented on a specific Feature.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy PolicyUnspecified { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("POLICY_UNSPECIFIED");
        /// <summary>
        /// Feature is explicitly allowed.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy Allowed { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("ALLOWED");
        /// <summary>
        /// Feature is forbidden. Requests attempting to leverage it will get an FailedPrecondition error, with a message like: "Feature forbidden by FeaturePolicy: Feature on instance "
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy Forbidden { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("FORBIDDEN");
        /// <summary>
        /// Only the values specified in the `allowed_values` are allowed.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy Restricted { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy("RESTRICTED");

        public static bool operator ==(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy left, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy right) => left.Equals(right);
        public static bool operator !=(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy left, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy right) => !left.Equals(right);

        public static explicit operator string(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy other && Equals(other);
        public bool Equals(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// linux_isolation allows overriding the docker runtime used for containers started on Linux.
    /// </summary>
    [EnumType]
    public readonly struct GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation : IEquatable<GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation>
    {
        private readonly string _value;

        private GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. Will be using Linux default runtime.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation LinuxIsolationUnspecified { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("LINUX_ISOLATION_UNSPECIFIED");
        /// <summary>
        /// Use gVisor runsc runtime.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation Gvisor { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("GVISOR");
        /// <summary>
        /// Use stardard Linux runtime. This has the same behaviour as unspecified, but it can be used to revert back from gVisor.
        /// </summary>
        public static GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation Off { get; } = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation("OFF");

        public static bool operator ==(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation left, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation right) => left.Equals(right);
        public static bool operator !=(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation left, GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation right) => !left.Equals(right);

        public static explicit operator string(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation other && Equals(other);
        public bool Equals(GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyLinuxIsolation other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
