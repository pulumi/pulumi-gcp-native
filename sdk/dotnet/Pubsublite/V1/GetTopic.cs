// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.Pubsublite.V1
{
    public static class GetTopic
    {
        /// <summary>
        /// Returns the topic configuration.
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("google-native:pubsublite/v1:getTopic", args ?? new GetTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Returns the topic configuration.
        /// </summary>
        public static Output<GetTopicResult> Invoke(GetTopicInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTopicResult>("google-native:pubsublite/v1:getTopic", args ?? new GetTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("topicId", required: true)]
        public string TopicId { get; set; } = null!;

        public GetTopicArgs()
        {
        }
    }

    public sealed class GetTopicInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        public GetTopicInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        /// <summary>
        /// The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The settings for this topic's partitions.
        /// </summary>
        public readonly Outputs.PartitionConfigResponse PartitionConfig;
        /// <summary>
        /// The settings for this topic's Reservation usage.
        /// </summary>
        public readonly Outputs.ReservationConfigResponse ReservationConfig;
        /// <summary>
        /// The settings for this topic's message retention.
        /// </summary>
        public readonly Outputs.RetentionConfigResponse RetentionConfig;

        [OutputConstructor]
        private GetTopicResult(
            string name,

            Outputs.PartitionConfigResponse partitionConfig,

            Outputs.ReservationConfigResponse reservationConfig,

            Outputs.RetentionConfigResponse retentionConfig)
        {
            Name = name;
            PartitionConfig = partitionConfig;
            ReservationConfig = reservationConfig;
            RetentionConfig = retentionConfig;
        }
    }
}
