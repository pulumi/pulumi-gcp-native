// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Pubsublite.V1.Inputs
{

    /// <summary>
    /// The settings for a topic's partitions.
    /// </summary>
    public sealed class PartitionConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The capacity configuration.
        /// </summary>
        [Input("capacity")]
        public Input<Inputs.CapacityArgs>? Capacity { get; set; }

        /// <summary>
        /// The number of partitions in the topic. Must be at least 1. Once a topic has been created the number of partitions can be increased but not decreased. Message ordering is not guaranteed across a topic resize. For more information see https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity
        /// </summary>
        [Input("count")]
        public Input<string>? Count { get; set; }

        /// <summary>
        /// DEPRECATED: Use capacity instead which can express a superset of configurations. Every partition in the topic is allocated throughput equivalent to `scale` times the standard partition throughput (4 MiB/s). This is also reflected in the cost of this topic; a topic with `scale` of 2 and count of 10 is charged for 20 partitions. This value must be in the range [1,4].
        /// </summary>
        [Input("scale")]
        public Input<int>? Scale { get; set; }

        public PartitionConfigArgs()
        {
        }
    }
}
