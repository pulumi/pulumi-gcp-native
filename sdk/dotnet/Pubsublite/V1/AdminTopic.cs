// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GcpNative.Pubsublite.V1
{
    /// <summary>
    /// Creates a new topic.
    /// </summary>
    [GcpNativeResourceType("gcp-native:pubsublite/v1:AdminTopic")]
    public partial class AdminTopic : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The settings for this topic's partitions.
        /// </summary>
        [Output("partitionConfig")]
        public Output<Outputs.PartitionConfigResponse> PartitionConfig { get; private set; } = null!;

        /// <summary>
        /// The settings for this topic's message retention.
        /// </summary>
        [Output("retentionConfig")]
        public Output<Outputs.RetentionConfigResponse> RetentionConfig { get; private set; } = null!;


        /// <summary>
        /// Create a AdminTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AdminTopic(string name, AdminTopicArgs args, CustomResourceOptions? options = null)
            : base("gcp-native:pubsublite/v1:AdminTopic", name, args ?? new AdminTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AdminTopic(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("gcp-native:pubsublite/v1:AdminTopic", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AdminTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AdminTopic Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AdminTopic(name, id, options);
        }
    }

    public sealed class AdminTopicArgs : Pulumi.ResourceArgs
    {
        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The settings for this topic's partitions.
        /// </summary>
        [Input("partitionConfig")]
        public Input<Inputs.PartitionConfigArgs>? PartitionConfig { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        /// <summary>
        /// The settings for this topic's message retention.
        /// </summary>
        [Input("retentionConfig")]
        public Input<Inputs.RetentionConfigArgs>? RetentionConfig { get; set; }

        [Input("topicsId", required: true)]
        public Input<string> TopicsId { get; set; } = null!;

        public AdminTopicArgs()
        {
        }
    }
}
