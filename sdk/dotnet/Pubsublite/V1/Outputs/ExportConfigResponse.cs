// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Pubsublite.V1.Outputs
{

    /// <summary>
    /// Configuration for a Pub/Sub Lite subscription that writes messages to a destination. User subscriber clients must not connect to this subscription.
    /// </summary>
    [OutputType]
    public sealed class ExportConfigResponse
    {
        /// <summary>
        /// The current state of the export, which may be different to the desired state due to errors. This field is output only.
        /// </summary>
        public readonly string CurrentState;
        /// <summary>
        /// Optional. The name of an optional Pub/Sub Lite topic to publish messages that can not be exported to the destination. For example, the message can not be published to the Pub/Sub service because it does not satisfy the constraints documented at https://cloud.google.com/pubsub/docs/publisher. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}. Must be within the same project and location as the subscription. The topic may be changed or removed.
        /// </summary>
        public readonly string DeadLetterTopic;
        /// <summary>
        /// The desired state of this export. Setting this to values other than `ACTIVE` and `PAUSED` will result in an error.
        /// </summary>
        public readonly string DesiredState;
        /// <summary>
        /// Messages are automatically written from the Pub/Sub Lite topic associated with this subscription to a Pub/Sub topic.
        /// </summary>
        public readonly Outputs.PubSubConfigResponse PubsubConfig;

        [OutputConstructor]
        private ExportConfigResponse(
            string currentState,

            string deadLetterTopic,

            string desiredState,

            Outputs.PubSubConfigResponse pubsubConfig)
        {
            CurrentState = currentState;
            DeadLetterTopic = deadLetterTopic;
            DesiredState = desiredState;
            PubsubConfig = pubsubConfig;
        }
    }
}
