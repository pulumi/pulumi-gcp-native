// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AnalyticsHub.V1Beta1
{
    public static class GetDataExchange
    {
        /// <summary>
        /// Gets the details of a data exchange.
        /// </summary>
        public static Task<GetDataExchangeResult> InvokeAsync(GetDataExchangeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataExchangeResult>("google-native:analyticshub/v1beta1:getDataExchange", args ?? new GetDataExchangeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the details of a data exchange.
        /// </summary>
        public static Output<GetDataExchangeResult> Invoke(GetDataExchangeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataExchangeResult>("google-native:analyticshub/v1beta1:getDataExchange", args ?? new GetDataExchangeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataExchangeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataExchangeId", required: true)]
        public string DataExchangeId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetDataExchangeArgs()
        {
        }
        public static new GetDataExchangeArgs Empty => new GetDataExchangeArgs();
    }

    public sealed class GetDataExchangeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataExchangeId", required: true)]
        public Input<string> DataExchangeId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDataExchangeInvokeArgs()
        {
        }
        public static new GetDataExchangeInvokeArgs Empty => new GetDataExchangeInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataExchangeResult
    {
        /// <summary>
        /// Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&amp;) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. Documentation describing the data exchange.
        /// </summary>
        public readonly string Documentation;
        /// <summary>
        /// Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.
        /// </summary>
        public readonly string Icon;
        /// <summary>
        /// Number of listings contained in the data exchange.
        /// </summary>
        public readonly int ListingCount;
        /// <summary>
        /// The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.
        /// </summary>
        public readonly string PrimaryContact;

        [OutputConstructor]
        private GetDataExchangeResult(
            string description,

            string displayName,

            string documentation,

            string icon,

            int listingCount,

            string name,

            string primaryContact)
        {
            Description = description;
            DisplayName = displayName;
            Documentation = documentation;
            Icon = icon;
            ListingCount = listingCount;
            Name = name;
            PrimaryContact = primaryContact;
        }
    }
}
