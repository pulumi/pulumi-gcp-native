// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AnalyticsHub.V1Beta1
{
    /// <summary>
    /// Creates a new data exchange.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:analyticshub/v1beta1:DataExchange")]
    public partial class DataExchange : Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Optional. Documentation describing the data exchange.
        /// </summary>
        [Output("documentation")]
        public Output<string> Documentation { get; private set; } = null!;

        /// <summary>
        /// Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.
        /// </summary>
        [Output("icon")]
        public Output<string> Icon { get; private set; } = null!;

        /// <summary>
        /// Number of listings contained in the data exchange.
        /// </summary>
        [Output("listingCount")]
        public Output<int> ListingCount { get; private set; } = null!;

        /// <summary>
        /// The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.
        /// </summary>
        [Output("primaryContact")]
        public Output<string> PrimaryContact { get; private set; } = null!;


        /// <summary>
        /// Create a DataExchange resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataExchange(string name, DataExchangeArgs args, CustomResourceOptions? options = null)
            : base("google-native:analyticshub/v1beta1:DataExchange", name, args ?? new DataExchangeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataExchange(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:analyticshub/v1beta1:DataExchange", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataExchange resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataExchange Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataExchange(name, id, options);
        }
    }

    public sealed class DataExchangeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes.
        /// </summary>
        [Input("dataExchangeId", required: true)]
        public Input<string> DataExchangeId { get; set; } = null!;

        /// <summary>
        /// Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Optional. Documentation describing the data exchange.
        /// </summary>
        [Input("documentation")]
        public Input<string>? Documentation { get; set; }

        /// <summary>
        /// Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.
        /// </summary>
        [Input("icon")]
        public Input<string>? Icon { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.
        /// </summary>
        [Input("primaryContact")]
        public Input<string>? PrimaryContact { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public DataExchangeArgs()
        {
        }
    }
}
