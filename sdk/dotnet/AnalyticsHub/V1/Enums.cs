// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.AnalyticsHub.V1
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ListingCategoriesItem : IEquatable<ListingCategoriesItem>
    {
        private readonly string _value;

        private ListingCategoriesItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ListingCategoriesItem CategoryUnspecified { get; } = new ListingCategoriesItem("CATEGORY_UNSPECIFIED");
        public static ListingCategoriesItem CategoryOthers { get; } = new ListingCategoriesItem("CATEGORY_OTHERS");
        public static ListingCategoriesItem CategoryAdvertisingAndMarketing { get; } = new ListingCategoriesItem("CATEGORY_ADVERTISING_AND_MARKETING");
        public static ListingCategoriesItem CategoryCommerce { get; } = new ListingCategoriesItem("CATEGORY_COMMERCE");
        public static ListingCategoriesItem CategoryClimateAndEnvironment { get; } = new ListingCategoriesItem("CATEGORY_CLIMATE_AND_ENVIRONMENT");
        public static ListingCategoriesItem CategoryDemographics { get; } = new ListingCategoriesItem("CATEGORY_DEMOGRAPHICS");
        public static ListingCategoriesItem CategoryEconomics { get; } = new ListingCategoriesItem("CATEGORY_ECONOMICS");
        public static ListingCategoriesItem CategoryEducation { get; } = new ListingCategoriesItem("CATEGORY_EDUCATION");
        public static ListingCategoriesItem CategoryEnergy { get; } = new ListingCategoriesItem("CATEGORY_ENERGY");
        public static ListingCategoriesItem CategoryFinancial { get; } = new ListingCategoriesItem("CATEGORY_FINANCIAL");
        public static ListingCategoriesItem CategoryGaming { get; } = new ListingCategoriesItem("CATEGORY_GAMING");
        public static ListingCategoriesItem CategoryGeospatial { get; } = new ListingCategoriesItem("CATEGORY_GEOSPATIAL");
        public static ListingCategoriesItem CategoryHealthcareAndLifeScience { get; } = new ListingCategoriesItem("CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE");
        public static ListingCategoriesItem CategoryMedia { get; } = new ListingCategoriesItem("CATEGORY_MEDIA");
        public static ListingCategoriesItem CategoryPublicSector { get; } = new ListingCategoriesItem("CATEGORY_PUBLIC_SECTOR");
        public static ListingCategoriesItem CategoryRetail { get; } = new ListingCategoriesItem("CATEGORY_RETAIL");
        public static ListingCategoriesItem CategorySports { get; } = new ListingCategoriesItem("CATEGORY_SPORTS");
        public static ListingCategoriesItem CategoryScienceAndResearch { get; } = new ListingCategoriesItem("CATEGORY_SCIENCE_AND_RESEARCH");
        public static ListingCategoriesItem CategoryTransportationAndLogistics { get; } = new ListingCategoriesItem("CATEGORY_TRANSPORTATION_AND_LOGISTICS");
        public static ListingCategoriesItem CategoryTravelAndTourism { get; } = new ListingCategoriesItem("CATEGORY_TRAVEL_AND_TOURISM");

        public static bool operator ==(ListingCategoriesItem left, ListingCategoriesItem right) => left.Equals(right);
        public static bool operator !=(ListingCategoriesItem left, ListingCategoriesItem right) => !left.Equals(right);

        public static explicit operator string(ListingCategoriesItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ListingCategoriesItem other && Equals(other);
        public bool Equals(ListingCategoriesItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
