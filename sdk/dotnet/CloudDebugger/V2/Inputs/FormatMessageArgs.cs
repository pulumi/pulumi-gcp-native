// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GcpNative.CloudDebugger.V2.Inputs
{

    /// <summary>
    /// Represents a message with parameters.
    /// </summary>
    public sealed class FormatMessageArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Format template for the message. The `format` uses placeholders `$0`, `$1`, etc. to reference parameters. `$$` can be used to denote the `$` character. Examples: * `Failed to load '$0' which helps debug $1 the first time it is loaded. Again, $0 is very important.` * `Please pay $$10 to use $0 instead of $1.`
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        [Input("parameters")]
        private InputList<string>? _parameters;

        /// <summary>
        /// Optional parameters to be embedded into the message.
        /// </summary>
        public InputList<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<string>());
            set => _parameters = value;
        }

        public FormatMessageArgs()
        {
        }
    }
}
