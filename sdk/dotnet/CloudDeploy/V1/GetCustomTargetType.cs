// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudDeploy.V1
{
    public static class GetCustomTargetType
    {
        /// <summary>
        /// Gets details of a single CustomTargetType.
        /// </summary>
        public static Task<GetCustomTargetTypeResult> InvokeAsync(GetCustomTargetTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomTargetTypeResult>("google-native:clouddeploy/v1:getCustomTargetType", args ?? new GetCustomTargetTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single CustomTargetType.
        /// </summary>
        public static Output<GetCustomTargetTypeResult> Invoke(GetCustomTargetTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomTargetTypeResult>("google-native:clouddeploy/v1:getCustomTargetType", args ?? new GetCustomTargetTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomTargetTypeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customTargetTypeId", required: true)]
        public string CustomTargetTypeId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCustomTargetTypeArgs()
        {
        }
        public static new GetCustomTargetTypeArgs Empty => new GetCustomTargetTypeArgs();
    }

    public sealed class GetCustomTargetTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customTargetTypeId", required: true)]
        public Input<string> CustomTargetTypeId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCustomTargetTypeInvokeArgs()
        {
        }
        public static new GetCustomTargetTypeInvokeArgs Empty => new GetCustomTargetTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomTargetTypeResult
    {
        /// <summary>
        /// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Time at which the `CustomTargetType` was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
        /// </summary>
        public readonly Outputs.CustomTargetSkaffoldActionsResponse CustomActions;
        /// <summary>
        /// Resource id of the `CustomTargetType`.
        /// </summary>
        public readonly string CustomTargetTypeId;
        /// <summary>
        /// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Unique identifier of the `CustomTargetType`.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Most recent time at which the `CustomTargetType` was updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCustomTargetTypeResult(
            ImmutableDictionary<string, string> annotations,

            string createTime,

            Outputs.CustomTargetSkaffoldActionsResponse customActions,

            string customTargetTypeId,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string uid,

            string updateTime)
        {
            Annotations = annotations;
            CreateTime = createTime;
            CustomActions = customActions;
            CustomTargetTypeId = customTargetTypeId;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
