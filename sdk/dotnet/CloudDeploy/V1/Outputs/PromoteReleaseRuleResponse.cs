// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudDeploy.V1.Outputs
{

    /// <summary>
    /// `PromoteRelease` rule will automatically promote a release from the current target to a specified target.
    /// </summary>
    [OutputType]
    public sealed class PromoteReleaseRuleResponse
    {
        /// <summary>
        /// Information around the state of the Automation rule.
        /// </summary>
        public readonly Outputs.AutomationRuleConditionResponse Condition;
        /// <summary>
        /// Optional. The starting phase of the rollout created by this operation. Default to the first phase.
        /// </summary>
        public readonly string DestinationPhase;
        /// <summary>
        /// Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * "@next", the next target in the promotion sequence.
        /// </summary>
        public readonly string DestinationTargetId;
        /// <summary>
        /// Optional. How long the release need to be paused until being promoted to the next target.
        /// </summary>
        public readonly string Wait;

        [OutputConstructor]
        private PromoteReleaseRuleResponse(
            Outputs.AutomationRuleConditionResponse condition,

            string destinationPhase,

            string destinationTargetId,

            string wait)
        {
            Condition = condition;
            DestinationPhase = destinationPhase;
            DestinationTargetId = destinationTargetId;
            Wait = wait;
        }
    }
}
