// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.FirebaseDynamicLinks.V1
{
    /// <summary>
    /// Creates a short Dynamic Link given either a valid long Dynamic Link or details such as Dynamic Link domain, Android and iOS app information. The created short Dynamic Link will not expire. Repeated calls with the same long Dynamic Link or Dynamic Link information will produce the same short Dynamic Link. The Dynamic Link domain in the request must be owned by requester's Firebase project.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:firebasedynamiclinks/v1:ShortLink")]
    public partial class ShortLink : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a ShortLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ShortLink(string name, ShortLinkArgs? args = null, CustomResourceOptions? options = null)
            : base("google-cloud:firebasedynamiclinks/v1:ShortLink", name, args ?? new ShortLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ShortLink(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:firebasedynamiclinks/v1:ShortLink", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ShortLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ShortLink Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ShortLink(name, id, options);
        }
    }

    public sealed class ShortLinkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the Dynamic Link to be shortened. [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
        /// </summary>
        [Input("dynamicLinkInfo")]
        public Input<Inputs.DynamicLinkInfoArgs>? DynamicLinkInfo { get; set; }

        /// <summary>
        /// Full long Dynamic Link URL with desired query parameters specified. For example, "https://sample.app.goo.gl/?link=http://www.google.com&amp;apn=com.sample", [Learn more](https://firebase.google.com/docs/reference/dynamic-links/link-shortener).
        /// </summary>
        [Input("longDynamicLink")]
        public Input<string>? LongDynamicLink { get; set; }

        /// <summary>
        /// Google SDK version. Version takes the form "$major.$minor.$patch"
        /// </summary>
        [Input("sdkVersion")]
        public Input<string>? SdkVersion { get; set; }

        /// <summary>
        /// Short Dynamic Link suffix. Optional.
        /// </summary>
        [Input("suffix")]
        public Input<Inputs.SuffixArgs>? Suffix { get; set; }

        public ShortLinkArgs()
        {
        }
    }
}
