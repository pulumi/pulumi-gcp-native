// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Testing.V1.Outputs
{

    /// <summary>
    /// A single test executed in a single environment.
    /// </summary>
    [OutputType]
    public sealed class TestExecutionResponse
    {
        /// <summary>
        /// How the host machine(s) are configured.
        /// </summary>
        public readonly Outputs.EnvironmentResponse Environment;
        /// <summary>
        /// Id of the containing TestMatrix.
        /// </summary>
        public readonly string MatrixId;
        /// <summary>
        /// The cloud project that owns the test execution.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Details about the shard.
        /// </summary>
        public readonly Outputs.ShardResponse Shard;
        /// <summary>
        /// Indicates the current progress of the test execution (e.g., FINISHED).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Additional details about the running test.
        /// </summary>
        public readonly Outputs.TestDetailsResponse TestDetails;
        /// <summary>
        /// How to run the test.
        /// </summary>
        public readonly Outputs.TestSpecificationResponse TestSpecification;
        /// <summary>
        /// The time this test execution was initially created.
        /// </summary>
        public readonly string Timestamp;
        /// <summary>
        /// Where the results for this execution are written.
        /// </summary>
        public readonly Outputs.ToolResultsStepResponse ToolResultsStep;

        [OutputConstructor]
        private TestExecutionResponse(
            Outputs.EnvironmentResponse environment,

            string matrixId,

            string project,

            Outputs.ShardResponse shard,

            string state,

            Outputs.TestDetailsResponse testDetails,

            Outputs.TestSpecificationResponse testSpecification,

            string timestamp,

            Outputs.ToolResultsStepResponse toolResultsStep)
        {
            Environment = environment;
            MatrixId = matrixId;
            Project = project;
            Shard = shard;
            State = state;
            TestDetails = testDetails;
            TestSpecification = testSpecification;
            Timestamp = timestamp;
            ToolResultsStep = toolResultsStep;
        }
    }
}
