// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Testing.V1.Outputs
{

    /// <summary>
    /// A description of how to set up an iOS device prior to running the test.
    /// </summary>
    [OutputType]
    public sealed class IosTestSetupResponse
    {
        /// <summary>
        /// iOS apps to install in addition to those being directly tested.
        /// </summary>
        public readonly ImmutableArray<Outputs.FileReferenceResponse> AdditionalIpas;
        /// <summary>
        /// The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
        /// </summary>
        public readonly string NetworkProfile;
        /// <summary>
        /// List of directories on the device to upload to Cloud Storage at the end of the test. Directories should either be in a shared directory (such as /private/var/mobile/Media) or within an accessible directory inside the app's filesystem (such as /Documents) by specifying the bundle ID.
        /// </summary>
        public readonly ImmutableArray<Outputs.IosDeviceFileResponse> PullDirectories;
        /// <summary>
        /// List of files to push to the device before starting the test.
        /// </summary>
        public readonly ImmutableArray<Outputs.IosDeviceFileResponse> PushFiles;

        [OutputConstructor]
        private IosTestSetupResponse(
            ImmutableArray<Outputs.FileReferenceResponse> additionalIpas,

            string networkProfile,

            ImmutableArray<Outputs.IosDeviceFileResponse> pullDirectories,

            ImmutableArray<Outputs.IosDeviceFileResponse> pushFiles)
        {
            AdditionalIpas = additionalIpas;
            NetworkProfile = networkProfile;
            PullDirectories = pullDirectories;
            PushFiles = pushFiles;
        }
    }
}
