// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Testing.V1.Outputs
{

    /// <summary>
    /// A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being.
    /// </summary>
    [OutputType]
    public sealed class AndroidTestLoopResponse
    {
        /// <summary>
        /// The APK for the application under test.
        /// </summary>
        public readonly Outputs.FileReferenceResponse AppApk;
        /// <summary>
        /// A multi-apk app bundle for the application under test.
        /// </summary>
        public readonly Outputs.AppBundleResponse AppBundle;
        /// <summary>
        /// The java package for the application under test. The default is determined by examining the application's manifest.
        /// </summary>
        public readonly string AppPackageId;
        /// <summary>
        /// The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application's manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field.
        /// </summary>
        public readonly ImmutableArray<string> ScenarioLabels;
        /// <summary>
        /// The list of scenarios that should be run during the test. The default is all test loops, derived from the application's manifest.
        /// </summary>
        public readonly ImmutableArray<int> Scenarios;

        [OutputConstructor]
        private AndroidTestLoopResponse(
            Outputs.FileReferenceResponse appApk,

            Outputs.AppBundleResponse appBundle,

            string appPackageId,

            ImmutableArray<string> scenarioLabels,

            ImmutableArray<int> scenarios)
        {
            AppApk = appApk;
            AppBundle = appBundle;
            AppPackageId = appPackageId;
            ScenarioLabels = scenarioLabels;
            Scenarios = scenarios;
        }
    }
}
