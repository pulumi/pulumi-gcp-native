// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Testing.V1.Inputs
{

    /// <summary>
    /// A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being.
    /// </summary>
    public sealed class AndroidTestLoopArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The APK for the application under test.
        /// </summary>
        [Input("appApk")]
        public Input<Inputs.FileReferenceArgs>? AppApk { get; set; }

        /// <summary>
        /// A multi-apk app bundle for the application under test.
        /// </summary>
        [Input("appBundle")]
        public Input<Inputs.AppBundleArgs>? AppBundle { get; set; }

        /// <summary>
        /// The java package for the application under test. The default is determined by examining the application's manifest.
        /// </summary>
        [Input("appPackageId")]
        public Input<string>? AppPackageId { get; set; }

        [Input("scenarioLabels")]
        private InputList<string>? _scenarioLabels;

        /// <summary>
        /// The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application's manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field.
        /// </summary>
        public InputList<string> ScenarioLabels
        {
            get => _scenarioLabels ?? (_scenarioLabels = new InputList<string>());
            set => _scenarioLabels = value;
        }

        [Input("scenarios")]
        private InputList<int>? _scenarios;

        /// <summary>
        /// The list of scenarios that should be run during the test. The default is all test loops, derived from the application's manifest.
        /// </summary>
        public InputList<int> Scenarios
        {
            get => _scenarios ?? (_scenarios = new InputList<int>());
            set => _scenarios = value;
        }

        public AndroidTestLoopArgs()
        {
        }
    }
}
