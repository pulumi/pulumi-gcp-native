// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Testing.V1.Inputs
{

    /// <summary>
    /// A description of how to set up an iOS device prior to running the test.
    /// </summary>
    public sealed class IosTestSetupArgs : Pulumi.ResourceArgs
    {
        [Input("additionalIpas")]
        private InputList<Inputs.FileReferenceArgs>? _additionalIpas;

        /// <summary>
        /// iOS apps to install in addition to those being directly tested.
        /// </summary>
        public InputList<Inputs.FileReferenceArgs> AdditionalIpas
        {
            get => _additionalIpas ?? (_additionalIpas = new InputList<Inputs.FileReferenceArgs>());
            set => _additionalIpas = value;
        }

        /// <summary>
        /// The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
        /// </summary>
        [Input("networkProfile")]
        public Input<string>? NetworkProfile { get; set; }

        [Input("pullDirectories")]
        private InputList<Inputs.IosDeviceFileArgs>? _pullDirectories;

        /// <summary>
        /// List of directories on the device to upload to Cloud Storage at the end of the test. Directories should either be in a shared directory (such as /private/var/mobile/Media) or within an accessible directory inside the app's filesystem (such as /Documents) by specifying the bundle ID.
        /// </summary>
        public InputList<Inputs.IosDeviceFileArgs> PullDirectories
        {
            get => _pullDirectories ?? (_pullDirectories = new InputList<Inputs.IosDeviceFileArgs>());
            set => _pullDirectories = value;
        }

        [Input("pushFiles")]
        private InputList<Inputs.IosDeviceFileArgs>? _pushFiles;

        /// <summary>
        /// List of files to push to the device before starting the test.
        /// </summary>
        public InputList<Inputs.IosDeviceFileArgs> PushFiles
        {
            get => _pushFiles ?? (_pushFiles = new InputList<Inputs.IosDeviceFileArgs>());
            set => _pushFiles = value;
        }

        public IosTestSetupArgs()
        {
        }
    }
}
