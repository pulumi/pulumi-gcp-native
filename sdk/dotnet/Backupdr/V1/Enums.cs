// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Backupdr.V1
{
    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct AuditLogConfigLogType : IEquatable<AuditLogConfigLogType>
    {
        private readonly string _value;

        private AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static AuditLogConfigLogType LogTypeUnspecified { get; } = new AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static AuditLogConfigLogType AdminRead { get; } = new AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static AuditLogConfigLogType DataWrite { get; } = new AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static AuditLogConfigLogType DataRead { get; } = new AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(AuditLogConfigLogType left, AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(AuditLogConfigLogType left, AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuditLogConfigLogType other && Equals(other);
        public bool Equals(AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The type of the ManagementServer resource.
    /// </summary>
    [EnumType]
    public readonly struct ManagementServerType : IEquatable<ManagementServerType>
    {
        private readonly string _value;

        private ManagementServerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Instance type is not mentioned.
        /// </summary>
        public static ManagementServerType InstanceTypeUnspecified { get; } = new ManagementServerType("INSTANCE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Instance for backup and restore management (i.e., AGM).
        /// </summary>
        public static ManagementServerType BackupRestore { get; } = new ManagementServerType("BACKUP_RESTORE");

        public static bool operator ==(ManagementServerType left, ManagementServerType right) => left.Equals(right);
        public static bool operator !=(ManagementServerType left, ManagementServerType right) => !left.Equals(right);

        public static explicit operator string(ManagementServerType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ManagementServerType other && Equals(other);
        public bool Equals(ManagementServerType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The network connect mode of the ManagementServer instance. For this version, only PRIVATE_SERVICE_ACCESS is supported.
    /// </summary>
    [EnumType]
    public readonly struct NetworkConfigPeeringMode : IEquatable<NetworkConfigPeeringMode>
    {
        private readonly string _value;

        private NetworkConfigPeeringMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Peering mode not set.
        /// </summary>
        public static NetworkConfigPeeringMode PeeringModeUnspecified { get; } = new NetworkConfigPeeringMode("PEERING_MODE_UNSPECIFIED");
        /// <summary>
        /// Connect using Private Service Access to the Management Server. Private services access provides an IP address range for multiple Google Cloud services, including Cloud BackupDR.
        /// </summary>
        public static NetworkConfigPeeringMode PrivateServiceAccess { get; } = new NetworkConfigPeeringMode("PRIVATE_SERVICE_ACCESS");

        public static bool operator ==(NetworkConfigPeeringMode left, NetworkConfigPeeringMode right) => left.Equals(right);
        public static bool operator !=(NetworkConfigPeeringMode left, NetworkConfigPeeringMode right) => !left.Equals(right);

        public static explicit operator string(NetworkConfigPeeringMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is NetworkConfigPeeringMode other && Equals(other);
        public bool Equals(NetworkConfigPeeringMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
