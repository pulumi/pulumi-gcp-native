// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Container.V1.Outputs
{

    /// <summary>
    /// Configuration for controlling how IPs are allocated in the cluster.
    /// </summary>
    [OutputType]
    public sealed class IPAllocationPolicyResponse
    {
        /// <summary>
        /// This field is deprecated, use cluster_ipv4_cidr_block.
        /// </summary>
        public readonly string ClusterIpv4Cidr;
        /// <summary>
        /// The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
        /// </summary>
        public readonly string ClusterIpv4CidrBlock;
        /// <summary>
        /// The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
        /// </summary>
        public readonly string ClusterSecondaryRangeName;
        /// <summary>
        /// Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true.
        /// </summary>
        public readonly bool CreateSubnetwork;
        /// <summary>
        /// The ipv6 access type (internal or external) when create_subnetwork is true
        /// </summary>
        public readonly string Ipv6AccessType;
        /// <summary>
        /// This field is deprecated, use node_ipv4_cidr_block.
        /// </summary>
        public readonly string NodeIpv4Cidr;
        /// <summary>
        /// The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
        /// </summary>
        public readonly string NodeIpv4CidrBlock;
        /// <summary>
        /// This field is deprecated, use services_ipv4_cidr_block.
        /// </summary>
        public readonly string ServicesIpv4Cidr;
        /// <summary>
        /// The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
        /// </summary>
        public readonly string ServicesIpv4CidrBlock;
        /// <summary>
        /// [Output only] The services IPv6 CIDR block for the cluster.
        /// </summary>
        public readonly string ServicesIpv6CidrBlock;
        /// <summary>
        /// The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases is true and create_subnetwork is false.
        /// </summary>
        public readonly string ServicesSecondaryRangeName;
        /// <summary>
        /// The IP stack type of the cluster
        /// </summary>
        public readonly string StackType;
        /// <summary>
        /// [Output only] The subnet's IPv6 CIDR block used by nodes and pods.
        /// </summary>
        public readonly string SubnetIpv6CidrBlock;
        /// <summary>
        /// A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork.
        /// </summary>
        public readonly string SubnetworkName;
        /// <summary>
        /// The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.
        /// </summary>
        public readonly string TpuIpv4CidrBlock;
        /// <summary>
        /// Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
        /// </summary>
        public readonly bool UseIpAliases;
        /// <summary>
        /// Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode
        /// </summary>
        public readonly bool UseRoutes;

        [OutputConstructor]
        private IPAllocationPolicyResponse(
            string clusterIpv4Cidr,

            string clusterIpv4CidrBlock,

            string clusterSecondaryRangeName,

            bool createSubnetwork,

            string ipv6AccessType,

            string nodeIpv4Cidr,

            string nodeIpv4CidrBlock,

            string servicesIpv4Cidr,

            string servicesIpv4CidrBlock,

            string servicesIpv6CidrBlock,

            string servicesSecondaryRangeName,

            string stackType,

            string subnetIpv6CidrBlock,

            string subnetworkName,

            string tpuIpv4CidrBlock,

            bool useIpAliases,

            bool useRoutes)
        {
            ClusterIpv4Cidr = clusterIpv4Cidr;
            ClusterIpv4CidrBlock = clusterIpv4CidrBlock;
            ClusterSecondaryRangeName = clusterSecondaryRangeName;
            CreateSubnetwork = createSubnetwork;
            Ipv6AccessType = ipv6AccessType;
            NodeIpv4Cidr = nodeIpv4Cidr;
            NodeIpv4CidrBlock = nodeIpv4CidrBlock;
            ServicesIpv4Cidr = servicesIpv4Cidr;
            ServicesIpv4CidrBlock = servicesIpv4CidrBlock;
            ServicesIpv6CidrBlock = servicesIpv6CidrBlock;
            ServicesSecondaryRangeName = servicesSecondaryRangeName;
            StackType = stackType;
            SubnetIpv6CidrBlock = subnetIpv6CidrBlock;
            SubnetworkName = subnetworkName;
            TpuIpv4CidrBlock = tpuIpv4CidrBlock;
            UseIpAliases = useIpAliases;
            UseRoutes = useRoutes;
        }
    }
}
