// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Container.V1.Inputs
{

    /// <summary>
    /// Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.
    /// </summary>
    public sealed class NodeConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<Inputs.AcceleratorConfigArgs>? _accelerators;

        /// <summary>
        /// A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
        /// </summary>
        public InputList<Inputs.AcceleratorConfigArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<Inputs.AcceleratorConfigArgs>());
            set => _accelerators = value;
        }

        /// <summary>
        /// Advanced features for the Compute Engine VM.
        /// </summary>
        [Input("advancedMachineFeatures")]
        public Input<Inputs.AdvancedMachineFeaturesArgs>? AdvancedMachineFeatures { get; set; }

        /// <summary>
        ///  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
        /// </summary>
        [Input("bootDiskKmsKey")]
        public Input<string>? BootDiskKmsKey { get; set; }

        /// <summary>
        /// Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
        /// </summary>
        [Input("confidentialNodes")]
        public Input<Inputs.ConfidentialNodesArgs>? ConfidentialNodes { get; set; }

        /// <summary>
        /// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        /// <summary>
        /// Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk.
        /// </summary>
        [Input("ephemeralStorageLocalSsdConfig")]
        public Input<Inputs.EphemeralStorageLocalSsdConfigArgs>? EphemeralStorageLocalSsdConfig { get; set; }

        /// <summary>
        /// Enable or disable NCCL fast socket for the node pool.
        /// </summary>
        [Input("fastSocket")]
        public Input<Inputs.FastSocketArgs>? FastSocket { get; set; }

        /// <summary>
        /// Google Container File System (image streaming) configs.
        /// </summary>
        [Input("gcfsConfig")]
        public Input<Inputs.GcfsConfigArgs>? GcfsConfig { get; set; }

        /// <summary>
        /// Enable or disable gvnic in the node pool.
        /// </summary>
        [Input("gvnic")]
        public Input<Inputs.VirtualNICArgs>? Gvnic { get; set; }

        /// <summary>
        /// The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
        /// </summary>
        [Input("imageType")]
        public Input<string>? ImageType { get; set; }

        /// <summary>
        /// Node kubelet configs.
        /// </summary>
        [Input("kubeletConfig")]
        public Input<Inputs.NodeKubeletConfigArgs>? KubeletConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Parameters that can be configured on Linux nodes.
        /// </summary>
        [Input("linuxNodeConfig")]
        public Input<Inputs.LinuxNodeConfigArgs>? LinuxNodeConfig { get; set; }

        /// <summary>
        /// Parameters for using raw-block Local NVMe SSDs.
        /// </summary>
        [Input("localNvmeSsdBlockConfig")]
        public Input<Inputs.LocalNvmeSsdBlockConfigArgs>? LocalNvmeSsdBlockConfig { get; set; }

        /// <summary>
        /// The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
        /// </summary>
        [Input("localSsdCount")]
        public Input<int>? LocalSsdCount { get; set; }

        /// <summary>
        /// Logging configuration.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.NodePoolLoggingConfigArgs>? LoggingConfig { get; set; }

        /// <summary>
        /// The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) If unspecified, the default machine type is `e2-medium`.
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - "cluster-location" - "cluster-name" - "cluster-uid" - "configure-sh" - "containerd-configure-sh" - "enable-os-login" - "gci-ensure-gke-docker" - "gci-metrics-enabled" - "gci-update-strategy" - "instance-template" - "kube-env" - "startup-script" - "user-data" - "disable-address-manager" - "windows-startup-script-ps1" - "common-psm1" - "k8s-node-setup-psm1" - "install-ssh-psm1" - "user-profile-psm1" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
        /// </summary>
        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        /// <summary>
        /// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
        /// </summary>
        [Input("nodeGroup")]
        public Input<string>? NodeGroup { get; set; }

        [Input("oauthScopes")]
        private InputList<string>? _oauthScopes;

        /// <summary>
        /// The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
        /// </summary>
        public InputList<string> OauthScopes
        {
            get => _oauthScopes ?? (_oauthScopes = new InputList<string>());
            set => _oauthScopes = value;
        }

        /// <summary>
        /// Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.
        /// </summary>
        [Input("preemptible")]
        public Input<bool>? Preemptible { get; set; }

        /// <summary>
        /// The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
        /// </summary>
        [Input("reservationAffinity")]
        public Input<Inputs.ReservationAffinityArgs>? ReservationAffinity { get; set; }

        [Input("resourceLabels")]
        private InputMap<string>? _resourceLabels;

        /// <summary>
        /// The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
        /// </summary>
        public InputMap<string> ResourceLabels
        {
            get => _resourceLabels ?? (_resourceLabels = new InputMap<string>());
            set => _resourceLabels = value;
        }

        /// <summary>
        /// A map of resource manager tag keys and values to be attached to the nodes.
        /// </summary>
        [Input("resourceManagerTags")]
        public Input<Inputs.ResourceManagerTagsArgs>? ResourceManagerTags { get; set; }

        /// <summary>
        /// Sandbox configuration for this node.
        /// </summary>
        [Input("sandboxConfig")]
        public Input<Inputs.SandboxConfigArgs>? SandboxConfig { get; set; }

        /// <summary>
        /// The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Shielded Instance options.
        /// </summary>
        [Input("shieldedInstanceConfig")]
        public Input<Inputs.ShieldedInstanceConfigArgs>? ShieldedInstanceConfig { get; set; }

        /// <summary>
        /// Parameters for node pools to be backed by shared sole tenant node groups.
        /// </summary>
        [Input("soleTenantConfig")]
        public Input<Inputs.SoleTenantConfigArgs>? SoleTenantConfig { get; set; }

        /// <summary>
        /// Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
        /// </summary>
        [Input("spot")]
        public Input<bool>? Spot { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("taints")]
        private InputList<Inputs.NodeTaintArgs>? _taints;

        /// <summary>
        /// List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        /// </summary>
        public InputList<Inputs.NodeTaintArgs> Taints
        {
            get => _taints ?? (_taints = new InputList<Inputs.NodeTaintArgs>());
            set => _taints = value;
        }

        /// <summary>
        /// Parameters that can be configured on Windows nodes.
        /// </summary>
        [Input("windowsNodeConfig")]
        public Input<Inputs.WindowsNodeConfigArgs>? WindowsNodeConfig { get; set; }

        /// <summary>
        /// The workload metadata configuration for this node.
        /// </summary>
        [Input("workloadMetadataConfig")]
        public Input<Inputs.WorkloadMetadataConfigArgs>? WorkloadMetadataConfig { get; set; }

        public NodeConfigArgs()
        {
        }
        public static new NodeConfigArgs Empty => new NodeConfigArgs();
    }
}
