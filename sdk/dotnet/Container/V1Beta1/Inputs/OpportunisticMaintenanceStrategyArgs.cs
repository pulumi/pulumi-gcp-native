// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Container.V1Beta1.Inputs
{

    /// <summary>
    /// Strategy that will trigger maintenance on behalf of the customer.
    /// </summary>
    public sealed class OpportunisticMaintenanceStrategyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The window of time that opportunistic maintenance can run. Example: A setting of 14 days implies that opportunistic maintenance can only be ran in the 2 weeks leading up to the scheduled maintenance date. Setting 28 days allows opportunistic maintenance to run at any time in the scheduled maintenance window (all `PERIODIC` maintenance is set 28 days in advance).
        /// </summary>
        [Input("maintenanceAvailabilityWindow")]
        public Input<string>? MaintenanceAvailabilityWindow { get; set; }

        /// <summary>
        /// The minimum nodes required to be available in a pool. Blocks maintenance if it would cause the number of running nodes to dip below this value.
        /// </summary>
        [Input("minNodesPerPool")]
        public Input<string>? MinNodesPerPool { get; set; }

        /// <summary>
        /// The amount of time that a node can remain idle (no customer owned workloads running), before triggering maintenance.
        /// </summary>
        [Input("nodeIdleTimeWindow")]
        public Input<string>? NodeIdleTimeWindow { get; set; }

        public OpportunisticMaintenanceStrategyArgs()
        {
        }
        public static new OpportunisticMaintenanceStrategyArgs Empty => new OpportunisticMaintenanceStrategyArgs();
    }
}
