// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Container.V1Beta1.Outputs
{

    /// <summary>
    /// Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.
    /// </summary>
    [OutputType]
    public sealed class NodeConfigResponse
    {
        /// <summary>
        /// A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
        /// </summary>
        public readonly ImmutableArray<Outputs.AcceleratorConfigResponse> Accelerators;
        /// <summary>
        /// Advanced features for the Compute Engine VM.
        /// </summary>
        public readonly Outputs.AdvancedMachineFeaturesResponse AdvancedMachineFeatures;
        /// <summary>
        ///  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
        /// </summary>
        public readonly string BootDiskKmsKey;
        /// <summary>
        /// Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.
        /// </summary>
        public readonly Outputs.ConfidentialNodesResponse ConfidentialNodes;
        /// <summary>
        /// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
        /// </summary>
        public readonly int DiskSizeGb;
        /// <summary>
        /// Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// Optional. Enable confidential storage on Hyperdisk. boot_disk_kms_key is required when enable_confidential_storage is true. This is only available for private preview.
        /// </summary>
        public readonly bool EnableConfidentialStorage;
        /// <summary>
        /// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
        /// </summary>
        public readonly Outputs.EphemeralStorageConfigResponse EphemeralStorageConfig;
        /// <summary>
        /// Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk. This field is functionally equivalent to the ephemeral_storage_config
        /// </summary>
        public readonly Outputs.EphemeralStorageLocalSsdConfigResponse EphemeralStorageLocalSsdConfig;
        /// <summary>
        /// Enable or disable NCCL fast socket for the node pool.
        /// </summary>
        public readonly Outputs.FastSocketResponse FastSocket;
        /// <summary>
        /// GCFS (Google Container File System) configs.
        /// </summary>
        public readonly Outputs.GcfsConfigResponse GcfsConfig;
        /// <summary>
        /// Enable or disable gvnic on the node pool.
        /// </summary>
        public readonly Outputs.VirtualNICResponse Gvnic;
        /// <summary>
        /// HostMaintenancePolicy contains the desired maintenance policy for the Google Compute Engine hosts.
        /// </summary>
        public readonly Outputs.HostMaintenancePolicyResponse HostMaintenancePolicy;
        /// <summary>
        /// The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// Node kubelet configs.
        /// </summary>
        public readonly Outputs.NodeKubeletConfigResponse KubeletConfig;
        /// <summary>
        /// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Parameters that can be configured on Linux nodes.
        /// </summary>
        public readonly Outputs.LinuxNodeConfigResponse LinuxNodeConfig;
        /// <summary>
        /// Parameters for using raw-block Local NVMe SSDs.
        /// </summary>
        public readonly Outputs.LocalNvmeSsdBlockConfigResponse LocalNvmeSsdBlockConfig;
        /// <summary>
        /// The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
        /// </summary>
        public readonly int LocalSsdCount;
        /// <summary>
        /// Logging configuration.
        /// </summary>
        public readonly Outputs.NodePoolLoggingConfigResponse LoggingConfig;
        /// <summary>
        /// The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types). If unspecified, the default machine type is `e2-medium`.
        /// </summary>
        public readonly string MachineType;
        /// <summary>
        /// The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - "cluster-location" - "cluster-name" - "cluster-uid" - "configure-sh" - "containerd-configure-sh" - "enable-oslogin" - "gci-ensure-gke-docker" - "gci-metrics-enabled" - "gci-update-strategy" - "instance-template" - "kube-env" - "startup-script" - "user-data" - "disable-address-manager" - "windows-startup-script-ps1" - "common-psm1" - "k8s-node-setup-psm1" - "install-ssh-psm1" - "user-profile-psm1" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
        /// </summary>
        public readonly string MinCpuPlatform;
        /// <summary>
        /// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
        /// </summary>
        public readonly string NodeGroup;
        /// <summary>
        /// The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
        /// </summary>
        public readonly ImmutableArray<string> OauthScopes;
        /// <summary>
        /// Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.
        /// </summary>
        public readonly bool Preemptible;
        /// <summary>
        /// The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
        /// </summary>
        public readonly Outputs.ReservationAffinityResponse ReservationAffinity;
        /// <summary>
        /// The resource labels for the node pool to use to annotate any related Google Compute Engine resources.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ResourceLabels;
        /// <summary>
        /// A map of resource manager tag keys and values to be attached to the nodes.
        /// </summary>
        public readonly Outputs.ResourceManagerTagsResponse ResourceManagerTags;
        /// <summary>
        /// Sandbox configuration for this node.
        /// </summary>
        public readonly Outputs.SandboxConfigResponse SandboxConfig;
        /// <summary>
        /// The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Shielded Instance options.
        /// </summary>
        public readonly Outputs.ShieldedInstanceConfigResponse ShieldedInstanceConfig;
        /// <summary>
        /// Parameters for node pools to be backed by shared sole tenant node groups.
        /// </summary>
        public readonly Outputs.SoleTenantConfigResponse SoleTenantConfig;
        /// <summary>
        /// Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
        /// </summary>
        public readonly bool Spot;
        /// <summary>
        /// The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        /// </summary>
        public readonly ImmutableArray<Outputs.NodeTaintResponse> Taints;
        /// <summary>
        /// Parameters that can be configured on Windows nodes.
        /// </summary>
        public readonly Outputs.WindowsNodeConfigResponse WindowsNodeConfig;
        /// <summary>
        /// The workload metadata configuration for this node.
        /// </summary>
        public readonly Outputs.WorkloadMetadataConfigResponse WorkloadMetadataConfig;

        [OutputConstructor]
        private NodeConfigResponse(
            ImmutableArray<Outputs.AcceleratorConfigResponse> accelerators,

            Outputs.AdvancedMachineFeaturesResponse advancedMachineFeatures,

            string bootDiskKmsKey,

            Outputs.ConfidentialNodesResponse confidentialNodes,

            int diskSizeGb,

            string diskType,

            bool enableConfidentialStorage,

            Outputs.EphemeralStorageConfigResponse ephemeralStorageConfig,

            Outputs.EphemeralStorageLocalSsdConfigResponse ephemeralStorageLocalSsdConfig,

            Outputs.FastSocketResponse fastSocket,

            Outputs.GcfsConfigResponse gcfsConfig,

            Outputs.VirtualNICResponse gvnic,

            Outputs.HostMaintenancePolicyResponse hostMaintenancePolicy,

            string imageType,

            Outputs.NodeKubeletConfigResponse kubeletConfig,

            ImmutableDictionary<string, string> labels,

            Outputs.LinuxNodeConfigResponse linuxNodeConfig,

            Outputs.LocalNvmeSsdBlockConfigResponse localNvmeSsdBlockConfig,

            int localSsdCount,

            Outputs.NodePoolLoggingConfigResponse loggingConfig,

            string machineType,

            ImmutableDictionary<string, string> metadata,

            string minCpuPlatform,

            string nodeGroup,

            ImmutableArray<string> oauthScopes,

            bool preemptible,

            Outputs.ReservationAffinityResponse reservationAffinity,

            ImmutableDictionary<string, string> resourceLabels,

            Outputs.ResourceManagerTagsResponse resourceManagerTags,

            Outputs.SandboxConfigResponse sandboxConfig,

            string serviceAccount,

            Outputs.ShieldedInstanceConfigResponse shieldedInstanceConfig,

            Outputs.SoleTenantConfigResponse soleTenantConfig,

            bool spot,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.NodeTaintResponse> taints,

            Outputs.WindowsNodeConfigResponse windowsNodeConfig,

            Outputs.WorkloadMetadataConfigResponse workloadMetadataConfig)
        {
            Accelerators = accelerators;
            AdvancedMachineFeatures = advancedMachineFeatures;
            BootDiskKmsKey = bootDiskKmsKey;
            ConfidentialNodes = confidentialNodes;
            DiskSizeGb = diskSizeGb;
            DiskType = diskType;
            EnableConfidentialStorage = enableConfidentialStorage;
            EphemeralStorageConfig = ephemeralStorageConfig;
            EphemeralStorageLocalSsdConfig = ephemeralStorageLocalSsdConfig;
            FastSocket = fastSocket;
            GcfsConfig = gcfsConfig;
            Gvnic = gvnic;
            HostMaintenancePolicy = hostMaintenancePolicy;
            ImageType = imageType;
            KubeletConfig = kubeletConfig;
            Labels = labels;
            LinuxNodeConfig = linuxNodeConfig;
            LocalNvmeSsdBlockConfig = localNvmeSsdBlockConfig;
            LocalSsdCount = localSsdCount;
            LoggingConfig = loggingConfig;
            MachineType = machineType;
            Metadata = metadata;
            MinCpuPlatform = minCpuPlatform;
            NodeGroup = nodeGroup;
            OauthScopes = oauthScopes;
            Preemptible = preemptible;
            ReservationAffinity = reservationAffinity;
            ResourceLabels = resourceLabels;
            ResourceManagerTags = resourceManagerTags;
            SandboxConfig = sandboxConfig;
            ServiceAccount = serviceAccount;
            ShieldedInstanceConfig = shieldedInstanceConfig;
            SoleTenantConfig = soleTenantConfig;
            Spot = spot;
            Tags = tags;
            Taints = taints;
            WindowsNodeConfig = windowsNodeConfig;
            WorkloadMetadataConfig = workloadMetadataConfig;
        }
    }
}
