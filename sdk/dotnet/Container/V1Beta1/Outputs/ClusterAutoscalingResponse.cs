// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Container.V1Beta1.Outputs
{

    /// <summary>
    /// ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
    /// </summary>
    [OutputType]
    public sealed class ClusterAutoscalingResponse
    {
        /// <summary>
        /// The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.
        /// </summary>
        public readonly ImmutableArray<string> AutoprovisioningLocations;
        /// <summary>
        /// AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.
        /// </summary>
        public readonly Outputs.AutoprovisioningNodePoolDefaultsResponse AutoprovisioningNodePoolDefaults;
        /// <summary>
        /// Defines autoscaling behaviour.
        /// </summary>
        public readonly string AutoscalingProfile;
        /// <summary>
        /// Enables automatic node pool creation and deletion.
        /// </summary>
        public readonly bool EnableNodeAutoprovisioning;
        /// <summary>
        /// Contains global constraints regarding minimum and maximum amount of resources in the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.ResourceLimitResponse> ResourceLimits;

        [OutputConstructor]
        private ClusterAutoscalingResponse(
            ImmutableArray<string> autoprovisioningLocations,

            Outputs.AutoprovisioningNodePoolDefaultsResponse autoprovisioningNodePoolDefaults,

            string autoscalingProfile,

            bool enableNodeAutoprovisioning,

            ImmutableArray<Outputs.ResourceLimitResponse> resourceLimits)
        {
            AutoprovisioningLocations = autoprovisioningLocations;
            AutoprovisioningNodePoolDefaults = autoprovisioningNodePoolDefaults;
            AutoscalingProfile = autoscalingProfile;
            EnableNodeAutoprovisioning = enableNodeAutoprovisioning;
            ResourceLimits = resourceLimits;
        }
    }
}
