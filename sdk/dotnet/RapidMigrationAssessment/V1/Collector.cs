// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.RapidMigrationAssessment.V1
{
    /// <summary>
    /// Create a Collector to manage the on-prem appliance which collects information about Customer assets.
    /// </summary>
    [GoogleNativeResourceType("google-native:rapidmigrationassessment/v1:Collector")]
    public partial class Collector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Store cloud storage bucket name (which is a guid) created with this Collector.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Client version.
        /// </summary>
        [Output("clientVersion")]
        public Output<string> ClientVersion { get; private set; } = null!;

        /// <summary>
        /// How many days to collect data.
        /// </summary>
        [Output("collectionDays")]
        public Output<int> CollectionDays { get; private set; } = null!;

        /// <summary>
        /// Required. Id of the requesting object.
        /// </summary>
        [Output("collectorId")]
        public Output<string> CollectorId { get; private set; } = null!;

        /// <summary>
        /// Create time stamp.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// User specified description of the Collector.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// User specified name of the Collector.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Uri for EULA (End User License Agreement) from customer.
        /// </summary>
        [Output("eulaUri")]
        public Output<string> EulaUri { get; private set; } = null!;

        /// <summary>
        /// User specified expected asset count.
        /// </summary>
        [Output("expectedAssetCount")]
        public Output<string> ExpectedAssetCount { get; private set; } = null!;

        /// <summary>
        /// Reference to MC Source Guest Os Scan.
        /// </summary>
        [Output("guestOsScan")]
        public Output<Outputs.GuestOsScanResponse> GuestOsScan { get; private set; } = null!;

        /// <summary>
        /// Labels as key value pairs.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// name of resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. An optional request ID to identify requests.
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// Service Account email used to ingest data to this Collector.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// State of the Collector.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Update time stamp.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Reference to MC Source vsphere_scan.
        /// </summary>
        [Output("vsphereScan")]
        public Output<Outputs.VSphereScanResponse> VsphereScan { get; private set; } = null!;


        /// <summary>
        /// Create a Collector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Collector(string name, CollectorArgs args, CustomResourceOptions? options = null)
            : base("google-native:rapidmigrationassessment/v1:Collector", name, args ?? new CollectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Collector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:rapidmigrationassessment/v1:Collector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "collectorId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Collector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Collector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Collector(name, id, options);
        }
    }

    public sealed class CollectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How many days to collect data.
        /// </summary>
        [Input("collectionDays")]
        public Input<int>? CollectionDays { get; set; }

        /// <summary>
        /// Required. Id of the requesting object.
        /// </summary>
        [Input("collectorId", required: true)]
        public Input<string> CollectorId { get; set; } = null!;

        /// <summary>
        /// User specified description of the Collector.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User specified name of the Collector.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Uri for EULA (End User License Agreement) from customer.
        /// </summary>
        [Input("eulaUri")]
        public Input<string>? EulaUri { get; set; }

        /// <summary>
        /// User specified expected asset count.
        /// </summary>
        [Input("expectedAssetCount")]
        public Input<string>? ExpectedAssetCount { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels as key value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// name of resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. An optional request ID to identify requests.
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Service Account email used to ingest data to this Collector.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        public CollectorArgs()
        {
        }
        public static new CollectorArgs Empty => new CollectorArgs();
    }
}
