// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Looker.V1
{
    /// <summary>
    /// Creates a new Instance in a given project and location.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:looker/v1:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Looker Instance Admin settings.
        /// </summary>
        [Output("adminSettings")]
        public Output<Outputs.AdminSettingsResponse> AdminSettings { get; private set; } = null!;

        /// <summary>
        /// Network name in the consumer project. Format: `projects/{project}/global/networks/{network}`. Note that the consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
        /// </summary>
        [Output("consumerNetwork")]
        public Output<string> ConsumerNetwork { get; private set; } = null!;

        /// <summary>
        /// The time when the Looker instance provisioning was first requested.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("customDomain")]
        public Output<Outputs.CustomDomainResponse> CustomDomain { get; private set; } = null!;

        /// <summary>
        /// Maintenance denial period for this instance.
        /// </summary>
        [Output("denyMaintenancePeriod")]
        public Output<Outputs.DenyMaintenancePeriodResponse> DenyMaintenancePeriod { get; private set; } = null!;

        /// <summary>
        /// Public Egress IP (IPv4).
        /// </summary>
        [Output("egressPublicIp")]
        public Output<string> EgressPublicIp { get; private set; } = null!;

        /// <summary>
        /// Encryption configuration (CMEK). Only set if CMEK has been enabled on the instance.
        /// </summary>
        [Output("encryptionConfig")]
        public Output<Outputs.EncryptionConfigResponse> EncryptionConfig { get; private set; } = null!;

        /// <summary>
        /// Private Ingress IP (IPv4).
        /// </summary>
        [Output("ingressPrivateIp")]
        public Output<string> IngressPrivateIp { get; private set; } = null!;

        /// <summary>
        /// Public Ingress IP (IPv4).
        /// </summary>
        [Output("ingressPublicIp")]
        public Output<string> IngressPublicIp { get; private set; } = null!;

        /// <summary>
        /// Required. The unique instance identifier. Must contain only lowercase letters, numbers, or hyphens, with the first character a letter and the last a letter or a number. 63 characters maximum.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Last computed maintenance denial period for this instance.
        /// </summary>
        [Output("lastDenyMaintenancePeriod")]
        public Output<Outputs.DenyMaintenancePeriodResponse> LastDenyMaintenancePeriod { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Looker instance URI which can be used to access the Looker Instance UI.
        /// </summary>
        [Output("lookerUri")]
        public Output<string> LookerUri { get; private set; } = null!;

        /// <summary>
        /// The Looker version that the instance is using.
        /// </summary>
        [Output("lookerVersion")]
        public Output<string> LookerVersion { get; private set; } = null!;

        /// <summary>
        /// Maintenance schedule for this instance.
        /// </summary>
        [Output("maintenanceSchedule")]
        public Output<Outputs.MaintenanceScheduleResponse> MaintenanceSchedule { get; private set; } = null!;

        /// <summary>
        /// Maintenance window for this instance.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.MaintenanceWindowResponse> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// Format: `projects/{project}/locations/{location}/instances/{instance}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Looker instance OAuth login settings.
        /// </summary>
        [Output("oauthConfig")]
        public Output<Outputs.OAuthConfigResponse> OauthConfig { get; private set; } = null!;

        /// <summary>
        /// Platform edition.
        /// </summary>
        [Output("platformEdition")]
        public Output<string> PlatformEdition { get; private set; } = null!;

        /// <summary>
        /// Whether private IP is enabled on the Looker instance.
        /// </summary>
        [Output("privateIpEnabled")]
        public Output<bool> PrivateIpEnabled { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Whether public IP is enabled on the Looker instance.
        /// </summary>
        [Output("publicIpEnabled")]
        public Output<bool> PublicIpEnabled { get; private set; } = null!;

        /// <summary>
        /// Name of a reserved IP address range within the Instance.consumer_network, to be used for private services access connection. May or may not be specified in a create request.
        /// </summary>
        [Output("reservedRange")]
        public Output<string> ReservedRange { get; private set; } = null!;

        /// <summary>
        /// The state of the instance.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time when the Looker instance was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// User metadata.
        /// </summary>
        [Output("userMetadata")]
        public Output<Outputs.UserMetadataResponse> UserMetadata { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("google-native:looker/v1:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:looker/v1:Instance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "instanceId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Looker Instance Admin settings.
        /// </summary>
        [Input("adminSettings")]
        public Input<Inputs.AdminSettingsArgs>? AdminSettings { get; set; }

        /// <summary>
        /// Network name in the consumer project. Format: `projects/{project}/global/networks/{network}`. Note that the consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
        /// </summary>
        [Input("consumerNetwork")]
        public Input<string>? ConsumerNetwork { get; set; }

        [Input("customDomain")]
        public Input<Inputs.CustomDomainArgs>? CustomDomain { get; set; }

        /// <summary>
        /// Maintenance denial period for this instance.
        /// </summary>
        [Input("denyMaintenancePeriod")]
        public Input<Inputs.DenyMaintenancePeriodArgs>? DenyMaintenancePeriod { get; set; }

        /// <summary>
        /// Encryption configuration (CMEK). Only set if CMEK has been enabled on the instance.
        /// </summary>
        [Input("encryptionConfig")]
        public Input<Inputs.EncryptionConfigArgs>? EncryptionConfig { get; set; }

        /// <summary>
        /// Required. The unique instance identifier. Must contain only lowercase letters, numbers, or hyphens, with the first character a letter and the last a letter or a number. 63 characters maximum.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maintenance schedule for this instance.
        /// </summary>
        [Input("maintenanceSchedule")]
        public Input<Inputs.MaintenanceScheduleArgs>? MaintenanceSchedule { get; set; }

        /// <summary>
        /// Maintenance window for this instance.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.MaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// Looker instance OAuth login settings.
        /// </summary>
        [Input("oauthConfig")]
        public Input<Inputs.OAuthConfigArgs>? OauthConfig { get; set; }

        /// <summary>
        /// Platform edition.
        /// </summary>
        [Input("platformEdition")]
        public Input<Pulumi.GoogleNative.Looker.V1.InstancePlatformEdition>? PlatformEdition { get; set; }

        /// <summary>
        /// Whether private IP is enabled on the Looker instance.
        /// </summary>
        [Input("privateIpEnabled")]
        public Input<bool>? PrivateIpEnabled { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Whether public IP is enabled on the Looker instance.
        /// </summary>
        [Input("publicIpEnabled")]
        public Input<bool>? PublicIpEnabled { get; set; }

        /// <summary>
        /// Name of a reserved IP address range within the Instance.consumer_network, to be used for private services access connection. May or may not be specified in a create request.
        /// </summary>
        [Input("reservedRange")]
        public Input<string>? ReservedRange { get; set; }

        /// <summary>
        /// User metadata.
        /// </summary>
        [Input("userMetadata")]
        public Input<Inputs.UserMetadataArgs>? UserMetadata { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }
}
