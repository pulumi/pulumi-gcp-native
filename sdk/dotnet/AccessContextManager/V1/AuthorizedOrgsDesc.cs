// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AccessContextManager.V1
{
    /// <summary>
    /// Creates a authorized orgs desc. The long-running operation from this RPC has a successful status after the authorized orgs desc propagates to long-lasting storage. If a authorized orgs desc contains errors, an error response is returned for the first error encountered. The name of this `AuthorizedOrgsDesc` will be assigned during creation.
    /// </summary>
    [GoogleNativeResourceType("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc")]
    public partial class AuthorizedOrgsDesc : global::Pulumi.CustomResource
    {
        [Output("accessPolicyId")]
        public Output<string> AccessPolicyId { get; private set; } = null!;

        /// <summary>
        /// The asset type of this authorized orgs desc. e.g. device, credential strength.
        /// </summary>
        [Output("assetType")]
        public Output<string> AssetType { get; private set; } = null!;

        /// <summary>
        /// Authorization direction of this authorization relationship. i.e. Whether to allow specified orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order for this relationship to take effect.
        /// </summary>
        [Output("authorizationDirection")]
        public Output<string> AuthorizationDirection { get; private set; } = null!;

        /// <summary>
        /// The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or logging.
        /// </summary>
        [Output("authorizationType")]
        public Output<string> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc.
        /// </summary>
        [Output("orgs")]
        public Output<ImmutableArray<string>> Orgs { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizedOrgsDesc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizedOrgsDesc(string name, AuthorizedOrgsDescArgs args, CustomResourceOptions? options = null)
            : base("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, args ?? new AuthorizedOrgsDescArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizedOrgsDesc(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "accessPolicyId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizedOrgsDesc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizedOrgsDesc Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AuthorizedOrgsDesc(name, id, options);
        }
    }

    public sealed class AuthorizedOrgsDescArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicyId", required: true)]
        public Input<string> AccessPolicyId { get; set; } = null!;

        /// <summary>
        /// The asset type of this authorized orgs desc. e.g. device, credential strength.
        /// </summary>
        [Input("assetType")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAssetType>? AssetType { get; set; }

        /// <summary>
        /// Authorization direction of this authorization relationship. i.e. Whether to allow specified orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order for this relationship to take effect.
        /// </summary>
        [Input("authorizationDirection")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAuthorizationDirection>? AuthorizationDirection { get; set; }

        /// <summary>
        /// The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or logging.
        /// </summary>
        [Input("authorizationType")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAuthorizationType>? AuthorizationType { get; set; }

        /// <summary>
        /// Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgs")]
        private InputList<string>? _orgs;

        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc.
        /// </summary>
        public InputList<string> Orgs
        {
            get => _orgs ?? (_orgs = new InputList<string>());
            set => _orgs = value;
        }

        public AuthorizedOrgsDescArgs()
        {
        }
        public static new AuthorizedOrgsDescArgs Empty => new AuthorizedOrgsDescArgs();
    }
}
