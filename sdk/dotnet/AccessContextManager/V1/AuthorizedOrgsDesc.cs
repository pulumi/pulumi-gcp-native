// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AccessContextManager.V1
{
    /// <summary>
    /// Creates an authorized orgs desc. The long-running operation from this RPC has a successful status after the authorized orgs desc propagates to long-lasting storage. If a authorized orgs desc contains errors, an error response is returned for the first error encountered. The name of this `AuthorizedOrgsDesc` will be assigned during creation.
    /// </summary>
    [GoogleNativeResourceType("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc")]
    public partial class AuthorizedOrgsDesc : global::Pulumi.CustomResource
    {
        [Output("accessPolicyId")]
        public Output<string> AccessPolicyId { get; private set; } = null!;

        /// <summary>
        /// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
        /// </summary>
        [Output("assetType")]
        public Output<string> AssetType { get; private set; } = null!;

        /// <summary>
        /// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
        /// </summary>
        [Output("authorizationDirection")]
        public Output<string> AuthorizationDirection { get; private set; } = null!;

        /// <summary>
        /// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
        /// </summary>
        [Output("authorizationType")]
        public Output<string> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
        /// </summary>
        [Output("orgs")]
        public Output<ImmutableArray<string>> Orgs { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizedOrgsDesc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizedOrgsDesc(string name, AuthorizedOrgsDescArgs args, CustomResourceOptions? options = null)
            : base("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, args ?? new AuthorizedOrgsDescArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizedOrgsDesc(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:accesscontextmanager/v1:AuthorizedOrgsDesc", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "accessPolicyId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizedOrgsDesc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizedOrgsDesc Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AuthorizedOrgsDesc(name, id, options);
        }
    }

    public sealed class AuthorizedOrgsDescArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicyId", required: true)]
        public Input<string> AccessPolicyId { get; set; } = null!;

        /// <summary>
        /// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
        /// </summary>
        [Input("assetType")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAssetType>? AssetType { get; set; }

        /// <summary>
        /// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
        /// </summary>
        [Input("authorizationDirection")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAuthorizationDirection>? AuthorizationDirection { get; set; }

        /// <summary>
        /// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
        /// </summary>
        [Input("authorizationType")]
        public Input<Pulumi.GoogleNative.AccessContextManager.V1.AuthorizedOrgsDescAuthorizationType>? AuthorizationType { get; set; }

        /// <summary>
        /// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgs")]
        private InputList<string>? _orgs;

        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
        /// </summary>
        public InputList<string> Orgs
        {
            get => _orgs ?? (_orgs = new InputList<string>());
            set => _orgs = value;
        }

        public AuthorizedOrgsDescArgs()
        {
        }
        public static new AuthorizedOrgsDescArgs Empty => new AuthorizedOrgsDescArgs();
    }
}
