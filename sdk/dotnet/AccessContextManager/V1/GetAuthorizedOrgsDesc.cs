// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AccessContextManager.V1
{
    public static class GetAuthorizedOrgsDesc
    {
        /// <summary>
        /// Gets an authorized orgs desc based on the resource name.
        /// </summary>
        public static Task<GetAuthorizedOrgsDescResult> InvokeAsync(GetAuthorizedOrgsDescArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizedOrgsDescResult>("google-native:accesscontextmanager/v1:getAuthorizedOrgsDesc", args ?? new GetAuthorizedOrgsDescArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an authorized orgs desc based on the resource name.
        /// </summary>
        public static Output<GetAuthorizedOrgsDescResult> Invoke(GetAuthorizedOrgsDescInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizedOrgsDescResult>("google-native:accesscontextmanager/v1:getAuthorizedOrgsDesc", args ?? new GetAuthorizedOrgsDescInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizedOrgsDescArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessPolicyId", required: true)]
        public string AccessPolicyId { get; set; } = null!;

        [Input("authorizedOrgsDescId", required: true)]
        public string AuthorizedOrgsDescId { get; set; } = null!;

        public GetAuthorizedOrgsDescArgs()
        {
        }
        public static new GetAuthorizedOrgsDescArgs Empty => new GetAuthorizedOrgsDescArgs();
    }

    public sealed class GetAuthorizedOrgsDescInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessPolicyId", required: true)]
        public Input<string> AccessPolicyId { get; set; } = null!;

        [Input("authorizedOrgsDescId", required: true)]
        public Input<string> AuthorizedOrgsDescId { get; set; } = null!;

        public GetAuthorizedOrgsDescInvokeArgs()
        {
        }
        public static new GetAuthorizedOrgsDescInvokeArgs Empty => new GetAuthorizedOrgsDescInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizedOrgsDescResult
    {
        /// <summary>
        /// The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
        /// </summary>
        public readonly string AssetType;
        /// <summary>
        /// The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
        /// </summary>
        public readonly string AuthorizationDirection;
        /// <summary>
        /// A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
        /// </summary>
        public readonly string AuthorizationType;
        /// <summary>
        /// Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
        /// </summary>
        public readonly ImmutableArray<string> Orgs;

        [OutputConstructor]
        private GetAuthorizedOrgsDescResult(
            string assetType,

            string authorizationDirection,

            string authorizationType,

            string name,

            ImmutableArray<string> orgs)
        {
            AssetType = assetType;
            AuthorizationDirection = authorizationDirection;
            AuthorizationType = authorizationType;
            Name = name;
            Orgs = orgs;
        }
    }
}
