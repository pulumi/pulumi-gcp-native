// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AccessContextManager.V1
{
    public static class GetAuthorizedOrgsDesc
    {
        /// <summary>
        /// Gets a authorized orgs desc based on the resource name.
        /// </summary>
        public static Task<GetAuthorizedOrgsDescResult> InvokeAsync(GetAuthorizedOrgsDescArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizedOrgsDescResult>("google-native:accesscontextmanager/v1:getAuthorizedOrgsDesc", args ?? new GetAuthorizedOrgsDescArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a authorized orgs desc based on the resource name.
        /// </summary>
        public static Output<GetAuthorizedOrgsDescResult> Invoke(GetAuthorizedOrgsDescInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizedOrgsDescResult>("google-native:accesscontextmanager/v1:getAuthorizedOrgsDesc", args ?? new GetAuthorizedOrgsDescInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizedOrgsDescArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessPolicyId", required: true)]
        public string AccessPolicyId { get; set; } = null!;

        [Input("authorizedOrgsDescId", required: true)]
        public string AuthorizedOrgsDescId { get; set; } = null!;

        public GetAuthorizedOrgsDescArgs()
        {
        }
        public static new GetAuthorizedOrgsDescArgs Empty => new GetAuthorizedOrgsDescArgs();
    }

    public sealed class GetAuthorizedOrgsDescInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessPolicyId", required: true)]
        public Input<string> AccessPolicyId { get; set; } = null!;

        [Input("authorizedOrgsDescId", required: true)]
        public Input<string> AuthorizedOrgsDescId { get; set; } = null!;

        public GetAuthorizedOrgsDescInvokeArgs()
        {
        }
        public static new GetAuthorizedOrgsDescInvokeArgs Empty => new GetAuthorizedOrgsDescInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizedOrgsDescResult
    {
        /// <summary>
        /// The asset type of this authorized orgs desc. e.g. device, credential strength.
        /// </summary>
        public readonly string AssetType;
        /// <summary>
        /// Authorization direction of this authorization relationship. i.e. Whether to allow specified orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order for this relationship to take effect.
        /// </summary>
        public readonly string AuthorizationDirection;
        /// <summary>
        /// The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or logging.
        /// </summary>
        public readonly string AuthorizationType;
        /// <summary>
        /// Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The list of organization ids in this AuthorizedOrgsDesc.
        /// </summary>
        public readonly ImmutableArray<string> Orgs;

        [OutputConstructor]
        private GetAuthorizedOrgsDescResult(
            string assetType,

            string authorizationDirection,

            string authorizationType,

            string name,

            ImmutableArray<string> orgs)
        {
            AssetType = assetType;
            AuthorizationDirection = authorizationDirection;
            AuthorizationType = authorizationType;
            Name = name;
            Orgs = orgs;
        }
    }
}
