// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AccessContextManager.V1.Inputs
{

    /// <summary>
    /// `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
    /// </summary>
    public sealed class ServicePerimeterConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessLevels")]
        private InputList<string>? _accessLevels;

        /// <summary>
        /// A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.
        /// </summary>
        public InputList<string> AccessLevels
        {
            get => _accessLevels ?? (_accessLevels = new InputList<string>());
            set => _accessLevels = value;
        }

        [Input("egressPolicies")]
        private InputList<Inputs.EgressPolicyArgs>? _egressPolicies;

        /// <summary>
        /// List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
        /// </summary>
        public InputList<Inputs.EgressPolicyArgs> EgressPolicies
        {
            get => _egressPolicies ?? (_egressPolicies = new InputList<Inputs.EgressPolicyArgs>());
            set => _egressPolicies = value;
        }

        [Input("ingressPolicies")]
        private InputList<Inputs.IngressPolicyArgs>? _ingressPolicies;

        /// <summary>
        /// List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
        /// </summary>
        public InputList<Inputs.IngressPolicyArgs> IngressPolicies
        {
            get => _ingressPolicies ?? (_ingressPolicies = new InputList<Inputs.IngressPolicyArgs>());
            set => _ingressPolicies = value;
        }

        [Input("resources")]
        private InputList<string>? _resources;

        /// <summary>
        /// A list of Google Cloud resources that are inside of the service perimeter. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
        /// </summary>
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        [Input("restrictedServices")]
        private InputList<string>? _restrictedServices;

        /// <summary>
        /// Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.
        /// </summary>
        public InputList<string> RestrictedServices
        {
            get => _restrictedServices ?? (_restrictedServices = new InputList<string>());
            set => _restrictedServices = value;
        }

        /// <summary>
        /// Configuration for APIs allowed within Perimeter.
        /// </summary>
        [Input("vpcAccessibleServices")]
        public Input<Inputs.VpcAccessibleServicesArgs>? VpcAccessibleServices { get; set; }

        public ServicePerimeterConfigArgs()
        {
        }
        public static new ServicePerimeterConfigArgs Empty => new ServicePerimeterConfigArgs();
    }
}
