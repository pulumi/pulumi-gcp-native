// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.BigLake.V1
{
    /// <summary>
    /// The database type.
    /// </summary>
    [EnumType]
    public readonly struct DatabaseType : IEquatable<DatabaseType>
    {
        private readonly string _value;

        private DatabaseType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The type is not specified.
        /// </summary>
        public static DatabaseType TypeUnspecified { get; } = new DatabaseType("TYPE_UNSPECIFIED");
        /// <summary>
        /// Represents a database storing tables compatible with Hive Metastore tables.
        /// </summary>
        public static DatabaseType Hive { get; } = new DatabaseType("HIVE");

        public static bool operator ==(DatabaseType left, DatabaseType right) => left.Equals(right);
        public static bool operator !=(DatabaseType left, DatabaseType right) => !left.Equals(right);

        public static explicit operator string(DatabaseType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is DatabaseType other && Equals(other);
        public bool Equals(DatabaseType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The table type.
    /// </summary>
    [EnumType]
    public readonly struct TableType : IEquatable<TableType>
    {
        private readonly string _value;

        private TableType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The type is not specified.
        /// </summary>
        public static TableType TypeUnspecified { get; } = new TableType("TYPE_UNSPECIFIED");
        /// <summary>
        /// Represents a table compatible with Hive Metastore tables.
        /// </summary>
        public static TableType Hive { get; } = new TableType("HIVE");

        public static bool operator ==(TableType left, TableType right) => left.Equals(right);
        public static bool operator !=(TableType left, TableType right) => !left.Equals(right);

        public static explicit operator string(TableType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TableType other && Equals(other);
        public bool Equals(TableType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
