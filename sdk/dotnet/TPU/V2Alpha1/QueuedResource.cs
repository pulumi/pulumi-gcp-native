// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.TPU.V2Alpha1
{
    /// <summary>
    /// Creates a QueuedResource TPU instance.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:tpu/v2alpha1:QueuedResource")]
    public partial class QueuedResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The BestEffort tier.
        /// </summary>
        [Output("bestEffort")]
        public Output<Outputs.BestEffortResponse> BestEffort { get; private set; } = null!;

        /// <summary>
        /// The time when the QueuedResource was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The Guaranteed tier.
        /// </summary>
        [Output("guaranteed")]
        public Output<Outputs.GuaranteedResponse> Guaranteed { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Immutable. The name of the QueuedResource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
        /// </summary>
        [Output("queuedResourceId")]
        public Output<string?> QueuedResourceId { get; private set; } = null!;

        /// <summary>
        /// The queueing policy of the QueuedRequest.
        /// </summary>
        [Output("queueingPolicy")]
        public Output<Outputs.QueueingPolicyResponse> QueueingPolicy { get; private set; } = null!;

        /// <summary>
        /// Idempotent request UUID.
        /// </summary>
        [Output("requestId")]
        public Output<string?> RequestId { get; private set; } = null!;

        /// <summary>
        /// Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
        /// </summary>
        [Output("reservationName")]
        public Output<string> ReservationName { get; private set; } = null!;

        /// <summary>
        /// Optional. The Spot tier.
        /// </summary>
        [Output("spot")]
        public Output<Outputs.SpotResponse> Spot { get; private set; } = null!;

        /// <summary>
        /// State of the QueuedResource request.
        /// </summary>
        [Output("state")]
        public Output<Outputs.QueuedResourceStateResponse> State { get; private set; } = null!;

        /// <summary>
        /// Defines a TPU resource.
        /// </summary>
        [Output("tpu")]
        public Output<Outputs.TpuResponse> Tpu { get; private set; } = null!;


        /// <summary>
        /// Create a QueuedResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QueuedResource(string name, QueuedResourceArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:tpu/v2alpha1:QueuedResource", name, args ?? new QueuedResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QueuedResource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:tpu/v2alpha1:QueuedResource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QueuedResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QueuedResource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new QueuedResource(name, id, options);
        }
    }

    public sealed class QueuedResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BestEffort tier.
        /// </summary>
        [Input("bestEffort")]
        public Input<Inputs.BestEffortArgs>? BestEffort { get; set; }

        /// <summary>
        /// The Guaranteed tier.
        /// </summary>
        [Input("guaranteed")]
        public Input<Inputs.GuaranteedArgs>? Guaranteed { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The unqualified resource name. Should follow the `^[A-Za-z0-9_.~+%-]+$` regex format.
        /// </summary>
        [Input("queuedResourceId")]
        public Input<string>? QueuedResourceId { get; set; }

        /// <summary>
        /// The queueing policy of the QueuedRequest.
        /// </summary>
        [Input("queueingPolicy")]
        public Input<Inputs.QueueingPolicyArgs>? QueueingPolicy { get; set; }

        /// <summary>
        /// Idempotent request UUID.
        /// </summary>
        [Input("requestId")]
        public Input<string>? RequestId { get; set; }

        /// <summary>
        /// Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
        /// </summary>
        [Input("reservationName")]
        public Input<string>? ReservationName { get; set; }

        /// <summary>
        /// Optional. The Spot tier.
        /// </summary>
        [Input("spot")]
        public Input<Inputs.SpotArgs>? Spot { get; set; }

        /// <summary>
        /// Defines a TPU resource.
        /// </summary>
        [Input("tpu")]
        public Input<Inputs.TpuArgs>? Tpu { get; set; }

        public QueuedResourceArgs()
        {
        }
        public static new QueuedResourceArgs Empty => new QueuedResourceArgs();
    }
}
