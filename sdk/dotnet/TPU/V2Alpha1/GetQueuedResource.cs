// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.TPU.V2Alpha1
{
    public static class GetQueuedResource
    {
        /// <summary>
        /// Gets details of a queued resource.
        /// </summary>
        public static Task<GetQueuedResourceResult> InvokeAsync(GetQueuedResourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueuedResourceResult>("google-native:tpu/v2alpha1:getQueuedResource", args ?? new GetQueuedResourceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a queued resource.
        /// </summary>
        public static Output<GetQueuedResourceResult> Invoke(GetQueuedResourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueuedResourceResult>("google-native:tpu/v2alpha1:getQueuedResource", args ?? new GetQueuedResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueuedResourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("queuedResourceId", required: true)]
        public string QueuedResourceId { get; set; } = null!;

        public GetQueuedResourceArgs()
        {
        }
        public static new GetQueuedResourceArgs Empty => new GetQueuedResourceArgs();
    }

    public sealed class GetQueuedResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("queuedResourceId", required: true)]
        public Input<string> QueuedResourceId { get; set; } = null!;

        public GetQueuedResourceInvokeArgs()
        {
        }
        public static new GetQueuedResourceInvokeArgs Empty => new GetQueuedResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueuedResourceResult
    {
        /// <summary>
        /// The BestEffort tier.
        /// </summary>
        public readonly Outputs.BestEffortResponse BestEffort;
        /// <summary>
        /// The time when the QueuedResource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The Guaranteed tier.
        /// </summary>
        public readonly Outputs.GuaranteedResponse Guaranteed;
        /// <summary>
        /// Immutable. The name of the QueuedResource.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The queueing policy of the QueuedRequest.
        /// </summary>
        public readonly Outputs.QueueingPolicyResponse QueueingPolicy;
        /// <summary>
        /// Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
        /// </summary>
        public readonly string ReservationName;
        /// <summary>
        /// Optional. The Spot tier.
        /// </summary>
        public readonly Outputs.SpotResponse Spot;
        /// <summary>
        /// State of the QueuedResource request.
        /// </summary>
        public readonly Outputs.QueuedResourceStateResponse State;
        /// <summary>
        /// Defines a TPU resource.
        /// </summary>
        public readonly Outputs.TpuResponse Tpu;

        [OutputConstructor]
        private GetQueuedResourceResult(
            Outputs.BestEffortResponse bestEffort,

            string createTime,

            Outputs.GuaranteedResponse guaranteed,

            string name,

            Outputs.QueueingPolicyResponse queueingPolicy,

            string reservationName,

            Outputs.SpotResponse spot,

            Outputs.QueuedResourceStateResponse state,

            Outputs.TpuResponse tpu)
        {
            BestEffort = bestEffort;
            CreateTime = createTime;
            Guaranteed = guaranteed;
            Name = name;
            QueueingPolicy = queueingPolicy;
            ReservationName = reservationName;
            Spot = spot;
            State = state;
            Tpu = tpu;
        }
    }
}
