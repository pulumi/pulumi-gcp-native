// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudTasks.V2Beta3.Outputs
{

    /// <summary>
    /// HTTP target. When specified as a Queue, all the tasks with [HttpRequest] will be overridden according to the target.
    /// </summary>
    [OutputType]
    public sealed class HttpTargetResponse
    {
        /// <summary>
        /// HTTP target headers. This map contains the header field names and values. Headers will be set when running the CreateTask and/or BufferTask. These headers represent a subset of the headers that will be configured for the task's HTTP request. Some HTTP request headers will be ignored or replaced. A partial list of headers that will be ignored or replaced is: * Several predefined headers, prefixed with "X-CloudTasks-", can be used to define properties of the task. * Host: This will be computed by Cloud Tasks and derived from HttpRequest.url. * Content-Length: This will be computed by Cloud Tasks. `Content-Type` won't be set by Cloud Tasks. You can explicitly set `Content-Type` to a media type when the task is created. For example,`Content-Type` can be set to `"application/octet-stream"` or `"application/json"`. The default value is set to `"application/json"`. * User-Agent: This will be set to `"Google-Cloud-Tasks"`. Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values. The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
        /// </summary>
        public readonly ImmutableArray<Outputs.HeaderOverrideResponse> HeaderOverrides;
        /// <summary>
        /// The HTTP method to use for the request. When specified, it overrides HttpRequest for the task. Note that if the value is set to HttpMethod the HttpRequest of the task will be ignored at execution time.
        /// </summary>
        public readonly string HttpMethod;
        /// <summary>
        /// If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) will be generated and attached as the `Authorization` header in the HTTP request. This type of authorization should generally only be used when calling Google APIs hosted on *.googleapis.com.
        /// </summary>
        public readonly Outputs.OAuthTokenResponse OauthToken;
        /// <summary>
        /// If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
        /// </summary>
        public readonly Outputs.OidcTokenResponse OidcToken;
        /// <summary>
        /// URI override. When specified, overrides the execution URI for all the tasks in the queue.
        /// </summary>
        public readonly Outputs.UriOverrideResponse UriOverride;

        [OutputConstructor]
        private HttpTargetResponse(
            ImmutableArray<Outputs.HeaderOverrideResponse> headerOverrides,

            string httpMethod,

            Outputs.OAuthTokenResponse oauthToken,

            Outputs.OidcTokenResponse oidcToken,

            Outputs.UriOverrideResponse uriOverride)
        {
            HeaderOverrides = headerOverrides;
            HttpMethod = httpMethod;
            OauthToken = oauthToken;
            OidcToken = oidcToken;
            UriOverride = uriOverride;
        }
    }
}
