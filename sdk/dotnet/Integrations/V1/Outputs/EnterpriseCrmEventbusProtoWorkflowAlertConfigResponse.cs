// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1.Outputs
{

    /// <summary>
    /// Message to be used to configure custom alerting in the {@code EventConfig} protos for an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
    /// </summary>
    [OutputType]
    public sealed class EnterpriseCrmEventbusProtoWorkflowAlertConfigResponse
    {
        /// <summary>
        /// For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
        /// </summary>
        public readonly string AggregationPeriod;
        /// <summary>
        /// Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
        /// </summary>
        public readonly bool AlertDisabled;
        /// <summary>
        /// A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
        /// </summary>
        public readonly string AlertName;
        /// <summary>
        /// Client associated with this alert configuration.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
        /// </summary>
        public readonly string DurationThresholdMs;
        public readonly Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListResponse ErrorEnumList;
        public readonly string MetricType;
        /// <summary>
        /// For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
        /// </summary>
        public readonly int NumAggregationPeriods;
        /// <summary>
        /// For either events or tasks, depending on the type of alert, count only final attempts, not retries.
        /// </summary>
        public readonly bool OnlyFinalAttempt;
        /// <summary>
        /// Link to a playbook for resolving the issue that triggered this alert.
        /// </summary>
        public readonly string PlaybookUrl;
        /// <summary>
        /// The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
        /// </summary>
        public readonly string ThresholdType;
        /// <summary>
        /// The metric value, above or below which the alert should be triggered. See go/eventbus-alert-config-examples.
        /// </summary>
        public readonly Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValueResponse ThresholdValue;
        public readonly Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListResponse WarningEnumList;

        [OutputConstructor]
        private EnterpriseCrmEventbusProtoWorkflowAlertConfigResponse(
            string aggregationPeriod,

            bool alertDisabled,

            string alertName,

            string clientId,

            string durationThresholdMs,

            Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListResponse errorEnumList,

            string metricType,

            int numAggregationPeriods,

            bool onlyFinalAttempt,

            string playbookUrl,

            string thresholdType,

            Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValueResponse thresholdValue,

            Outputs.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListResponse warningEnumList)
        {
            AggregationPeriod = aggregationPeriod;
            AlertDisabled = alertDisabled;
            AlertName = alertName;
            ClientId = clientId;
            DurationThresholdMs = durationThresholdMs;
            ErrorEnumList = errorEnumList;
            MetricType = metricType;
            NumAggregationPeriods = numAggregationPeriods;
            OnlyFinalAttempt = onlyFinalAttempt;
            PlaybookUrl = playbookUrl;
            ThresholdType = thresholdType;
            ThresholdValue = thresholdValue;
            WarningEnumList = warningEnumList;
        }
    }
}
