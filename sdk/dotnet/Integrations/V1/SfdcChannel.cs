// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1
{
    /// <summary>
    /// Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:integrations/v1:SfdcChannel")]
    public partial class SfdcChannel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Channel topic defined by salesforce once an channel is opened
        /// </summary>
        [Output("channelTopic")]
        public Output<string> ChannelTopic { get; private set; } = null!;

        /// <summary>
        /// Time when the channel is created
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Time when the channel was deleted. Empty if not deleted.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// The description for this channel
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Client level unique name/alias to easily reference a channel.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Indicated if a channel has any active integrations referencing it. Set to false when the channel is created, and set to true if there is any integration published with the channel configured in it.
        /// </summary>
        [Output("isActive")]
        public Output<bool> IsActive { get; private set; } = null!;

        /// <summary>
        /// Last sfdc messsage replay id for channel
        /// </summary>
        [Output("lastReplayId")]
        public Output<string> LastReplayId { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("sfdcInstanceId")]
        public Output<string> SfdcInstanceId { get; private set; } = null!;

        /// <summary>
        /// Time when the channel was last updated
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SfdcChannel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SfdcChannel(string name, SfdcChannelArgs args, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1:SfdcChannel", name, args ?? new SfdcChannelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SfdcChannel(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1:SfdcChannel", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "productId",
                    "project",
                    "sfdcInstanceId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SfdcChannel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SfdcChannel Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SfdcChannel(name, id, options);
        }
    }

    public sealed class SfdcChannelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Channel topic defined by salesforce once an channel is opened
        /// </summary>
        [Input("channelTopic")]
        public Input<string>? ChannelTopic { get; set; }

        /// <summary>
        /// The description for this channel
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Client level unique name/alias to easily reference a channel.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Indicated if a channel has any active integrations referencing it. Set to false when the channel is created, and set to true if there is any integration published with the channel configured in it.
        /// </summary>
        [Input("isActive")]
        public Input<bool>? IsActive { get; set; }

        /// <summary>
        /// Last sfdc messsage replay id for channel
        /// </summary>
        [Input("lastReplayId")]
        public Input<string>? LastReplayId { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sfdcInstanceId", required: true)]
        public Input<string> SfdcInstanceId { get; set; } = null!;

        public SfdcChannelArgs()
        {
        }
        public static new SfdcChannelArgs Empty => new SfdcChannelArgs();
    }
}
