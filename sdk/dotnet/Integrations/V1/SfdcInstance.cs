// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1
{
    /// <summary>
    /// Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:integrations/v1:SfdcInstance")]
    public partial class SfdcInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of AuthConfigs that can be tried to open the channel to SFDC
        /// </summary>
        [Output("authConfigId")]
        public Output<ImmutableArray<string>> AuthConfigId { get; private set; } = null!;

        /// <summary>
        /// Time when the instance is created
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Time when the instance was deleted. Empty if not deleted.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// A description of the sfdc instance.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// User selected unique name/alias to easily reference an instance.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig).
        /// </summary>
        [Output("serviceAuthority")]
        public Output<string> ServiceAuthority { get; private set; } = null!;

        /// <summary>
        /// The SFDC Org Id. This is defined in salesforce.
        /// </summary>
        [Output("sfdcOrgId")]
        public Output<string> SfdcOrgId { get; private set; } = null!;

        /// <summary>
        /// Time when the instance was last updated
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SfdcInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SfdcInstance(string name, SfdcInstanceArgs args, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1:SfdcInstance", name, args ?? new SfdcInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SfdcInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1:SfdcInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "productId",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SfdcInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SfdcInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SfdcInstance(name, id, options);
        }
    }

    public sealed class SfdcInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("authConfigId")]
        private InputList<string>? _authConfigId;

        /// <summary>
        /// A list of AuthConfigs that can be tried to open the channel to SFDC
        /// </summary>
        public InputList<string> AuthConfigId
        {
            get => _authConfigId ?? (_authConfigId = new InputList<string>());
            set => _authConfigId = value;
        }

        /// <summary>
        /// A description of the sfdc instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User selected unique name/alias to easily reference an instance.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig).
        /// </summary>
        [Input("serviceAuthority")]
        public Input<string>? ServiceAuthority { get; set; }

        /// <summary>
        /// The SFDC Org Id. This is defined in salesforce.
        /// </summary>
        [Input("sfdcOrgId")]
        public Input<string>? SfdcOrgId { get; set; }

        public SfdcInstanceArgs()
        {
        }
        public static new SfdcInstanceArgs Empty => new SfdcInstanceArgs();
    }
}
