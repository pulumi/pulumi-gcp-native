// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1Alpha
{
    public static class GetTestCase
    {
        /// <summary>
        /// Get a test case
        /// </summary>
        public static Task<GetTestCaseResult> InvokeAsync(GetTestCaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTestCaseResult>("google-native:integrations/v1alpha:getTestCase", args ?? new GetTestCaseArgs(), options.WithDefaults());

        /// <summary>
        /// Get a test case
        /// </summary>
        public static Output<GetTestCaseResult> Invoke(GetTestCaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTestCaseResult>("google-native:integrations/v1alpha:getTestCase", args ?? new GetTestCaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTestCaseArgs : global::Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public string IntegrationId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("testCaseId", required: true)]
        public string TestCaseId { get; set; } = null!;

        [Input("versionId", required: true)]
        public string VersionId { get; set; } = null!;

        public GetTestCaseArgs()
        {
        }
        public static new GetTestCaseArgs Empty => new GetTestCaseArgs();
    }

    public sealed class GetTestCaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("testCaseId", required: true)]
        public Input<string> TestCaseId { get; set; } = null!;

        [Input("versionId", required: true)]
        public Input<string> VersionId { get; set; } = null!;

        public GetTestCaseInvokeArgs()
        {
        }
        public static new GetTestCaseInvokeArgs Empty => new GetTestCaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetTestCaseResult
    {
        /// <summary>
        /// Auto-generated.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        public readonly string CreatorEmail;
        /// <summary>
        /// Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
        /// </summary>
        public readonly string DatabasePersistencePolicy;
        /// <summary>
        /// Optional. Description of the test case.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of test case.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        public readonly string LastModifierEmail;
        /// <summary>
        /// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        public readonly string LockHolderEmail;
        /// <summary>
        /// Auto-generated primary key.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaIntegrationParameterResponse> TestInputParameters;
        /// <summary>
        /// Optional. However, the test case doesn't mock or assert anything without test_task_configs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaTestTaskConfigResponse> TestTaskConfigs;
        /// <summary>
        /// This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
        /// </summary>
        public readonly string TriggerId;
        /// <summary>
        /// Auto-generated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// ID of the workflow with which this test case is associated
        /// </summary>
        public readonly string WorkflowId;

        [OutputConstructor]
        private GetTestCaseResult(
            string createTime,

            string creatorEmail,

            string databasePersistencePolicy,

            string description,

            string displayName,

            string lastModifierEmail,

            string lockHolderEmail,

            string name,

            ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaIntegrationParameterResponse> testInputParameters,

            ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaTestTaskConfigResponse> testTaskConfigs,

            string triggerId,

            string updateTime,

            string workflowId)
        {
            CreateTime = createTime;
            CreatorEmail = creatorEmail;
            DatabasePersistencePolicy = databasePersistencePolicy;
            Description = description;
            DisplayName = displayName;
            LastModifierEmail = lastModifierEmail;
            LockHolderEmail = lockHolderEmail;
            Name = name;
            TestInputParameters = testInputParameters;
            TestTaskConfigs = testTaskConfigs;
            TriggerId = triggerId;
            UpdateTime = updateTime;
            WorkflowId = workflowId;
        }
    }
}
