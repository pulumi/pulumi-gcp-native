// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1Alpha.Outputs
{

    /// <summary>
    /// The access token represents the authorization of a specific application to access specific parts of a userâ€™s data.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudIntegrationsV1alphaAccessTokenResponse
    {
        /// <summary>
        /// The access token encapsulating the security identity of a process or thread.
        /// </summary>
        public readonly string AccessToken;
        /// <summary>
        /// The approximate time until the access token retrieved is valid.
        /// </summary>
        public readonly string AccessTokenExpireTime;
        /// <summary>
        /// If the access token will expire, use the refresh token to obtain another access token.
        /// </summary>
        public readonly string RefreshToken;
        /// <summary>
        /// The approximate time until the refresh token retrieved is valid.
        /// </summary>
        public readonly string RefreshTokenExpireTime;
        /// <summary>
        /// Only support "bearer" token in v1 as bearer token is the predominant type used with OAuth 2.0.
        /// </summary>
        public readonly string TokenType;

        [OutputConstructor]
        private GoogleCloudIntegrationsV1alphaAccessTokenResponse(
            string accessToken,

            string accessTokenExpireTime,

            string refreshToken,

            string refreshTokenExpireTime,

            string tokenType)
        {
            AccessToken = accessToken;
            AccessTokenExpireTime = accessTokenExpireTime;
            RefreshToken = refreshToken;
            RefreshTokenExpireTime = refreshTokenExpireTime;
            TokenType = tokenType;
        }
    }
}
