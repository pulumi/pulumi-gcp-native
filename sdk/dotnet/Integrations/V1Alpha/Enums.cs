// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.Integrations.V1Alpha
{
    /// <summary>
    /// Credential type of the encrypted credential.
    /// </summary>
    [EnumType]
    public readonly struct AuthConfigCredentialType : IEquatable<AuthConfigCredentialType>
    {
        private readonly string _value;

        private AuthConfigCredentialType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified credential type
        /// </summary>
        public static AuthConfigCredentialType CredentialTypeUnspecified { get; } = new AuthConfigCredentialType("CREDENTIAL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Regular username/password pair.
        /// </summary>
        public static AuthConfigCredentialType UsernameAndPassword { get; } = new AuthConfigCredentialType("USERNAME_AND_PASSWORD");
        /// <summary>
        /// API key.
        /// </summary>
        public static AuthConfigCredentialType ApiKey { get; } = new AuthConfigCredentialType("API_KEY");
        /// <summary>
        /// OAuth 2.0 Authorization Code Grant Type.
        /// </summary>
        public static AuthConfigCredentialType Oauth2AuthorizationCode { get; } = new AuthConfigCredentialType("OAUTH2_AUTHORIZATION_CODE");
        /// <summary>
        /// OAuth 2.0 Implicit Grant Type.
        /// </summary>
        public static AuthConfigCredentialType Oauth2Implicit { get; } = new AuthConfigCredentialType("OAUTH2_IMPLICIT");
        /// <summary>
        /// OAuth 2.0 Client Credentials Grant Type.
        /// </summary>
        public static AuthConfigCredentialType Oauth2ClientCredentials { get; } = new AuthConfigCredentialType("OAUTH2_CLIENT_CREDENTIALS");
        /// <summary>
        /// OAuth 2.0 Resource Owner Credentials Grant Type.
        /// </summary>
        public static AuthConfigCredentialType Oauth2ResourceOwnerCredentials { get; } = new AuthConfigCredentialType("OAUTH2_RESOURCE_OWNER_CREDENTIALS");
        /// <summary>
        /// JWT Token.
        /// </summary>
        public static AuthConfigCredentialType Jwt { get; } = new AuthConfigCredentialType("JWT");
        /// <summary>
        /// Auth Token, e.g. bearer token.
        /// </summary>
        public static AuthConfigCredentialType AuthToken { get; } = new AuthConfigCredentialType("AUTH_TOKEN");
        /// <summary>
        /// Service Account which can be used to generate token for authentication.
        /// </summary>
        public static AuthConfigCredentialType ServiceAccount { get; } = new AuthConfigCredentialType("SERVICE_ACCOUNT");
        /// <summary>
        /// Client Certificate only.
        /// </summary>
        public static AuthConfigCredentialType ClientCertificateOnly { get; } = new AuthConfigCredentialType("CLIENT_CERTIFICATE_ONLY");
        /// <summary>
        /// Google OIDC ID Token
        /// </summary>
        public static AuthConfigCredentialType OidcToken { get; } = new AuthConfigCredentialType("OIDC_TOKEN");

        public static bool operator ==(AuthConfigCredentialType left, AuthConfigCredentialType right) => left.Equals(right);
        public static bool operator !=(AuthConfigCredentialType left, AuthConfigCredentialType right) => !left.Equals(right);

        public static explicit operator string(AuthConfigCredentialType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuthConfigCredentialType other && Equals(other);
        public bool Equals(AuthConfigCredentialType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The status of the auth config.
    /// </summary>
    [EnumType]
    public readonly struct AuthConfigState : IEquatable<AuthConfigState>
    {
        private readonly string _value;

        private AuthConfigState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Status not specified.
        /// </summary>
        public static AuthConfigState StateUnspecified { get; } = new AuthConfigState("STATE_UNSPECIFIED");
        /// <summary>
        /// Valid Auth config.
        /// </summary>
        public static AuthConfigState Valid { get; } = new AuthConfigState("VALID");
        /// <summary>
        /// General invalidity, if it doesn't fits in the detailed issue below.
        /// </summary>
        public static AuthConfigState Invalid { get; } = new AuthConfigState("INVALID");
        /// <summary>
        /// Auth config soft deleted.
        /// </summary>
        public static AuthConfigState SoftDeleted { get; } = new AuthConfigState("SOFT_DELETED");
        /// <summary>
        /// Auth config expired.
        /// </summary>
        public static AuthConfigState Expired { get; } = new AuthConfigState("EXPIRED");
        /// <summary>
        /// Auth config unauthorized.
        /// </summary>
        public static AuthConfigState Unauthorized { get; } = new AuthConfigState("UNAUTHORIZED");
        /// <summary>
        /// Auth config not supported.
        /// </summary>
        public static AuthConfigState Unsupported { get; } = new AuthConfigState("UNSUPPORTED");

        public static bool operator ==(AuthConfigState left, AuthConfigState right) => left.Equals(right);
        public static bool operator !=(AuthConfigState left, AuthConfigState right) => !left.Equals(right);

        public static explicit operator string(AuthConfigState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuthConfigState other && Equals(other);
        public bool Equals(AuthConfigState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The visibility of the auth config.
    /// </summary>
    [EnumType]
    public readonly struct AuthConfigVisibility : IEquatable<AuthConfigVisibility>
    {
        private readonly string _value;

        private AuthConfigVisibility(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Visibility not specified.
        /// </summary>
        public static AuthConfigVisibility AuthConfigVisibilityUnspecified { get; } = new AuthConfigVisibility("AUTH_CONFIG_VISIBILITY_UNSPECIFIED");
        /// <summary>
        /// Profile visible to the creator only.
        /// </summary>
        public static AuthConfigVisibility Private { get; } = new AuthConfigVisibility("PRIVATE");
        /// <summary>
        /// Profile visible within the client.
        /// </summary>
        public static AuthConfigVisibility ClientVisible { get; } = new AuthConfigVisibility("CLIENT_VISIBLE");

        public static bool operator ==(AuthConfigVisibility left, AuthConfigVisibility right) => left.Equals(right);
        public static bool operator !=(AuthConfigVisibility left, AuthConfigVisibility right) => !left.Equals(right);

        public static explicit operator string(AuthConfigVisibility value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AuthConfigVisibility other && Equals(other);
        public bool Equals(AuthConfigVisibility other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Status of the certificate
    /// </summary>
    [EnumType]
    public readonly struct CertificateCertificateStatus : IEquatable<CertificateCertificateStatus>
    {
        private readonly string _value;

        private CertificateCertificateStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified certificate status
        /// </summary>
        public static CertificateCertificateStatus StateUnspecified { get; } = new CertificateCertificateStatus("STATE_UNSPECIFIED");
        /// <summary>
        /// Certificate in active state will be able to use
        /// </summary>
        public static CertificateCertificateStatus Active { get; } = new CertificateCertificateStatus("ACTIVE");
        /// <summary>
        /// Certificate in expired state needs to be updated
        /// </summary>
        public static CertificateCertificateStatus Expired { get; } = new CertificateCertificateStatus("EXPIRED");

        public static bool operator ==(CertificateCertificateStatus left, CertificateCertificateStatus right) => left.Equals(right);
        public static bool operator !=(CertificateCertificateStatus left, CertificateCertificateStatus right) => !left.Equals(right);

        public static explicit operator string(CertificateCertificateStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CertificateCertificateStatus other && Equals(other);
        public bool Equals(CertificateCertificateStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Things like URL, Email, Currency, Timestamp (rather than string, int64...)
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoAttributesDataType : IEquatable<EnterpriseCrmEventbusProtoAttributesDataType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoAttributesDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoAttributesDataType DataTypeUnspecified { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("DATA_TYPE_UNSPECIFIED");
        public static EnterpriseCrmEventbusProtoAttributesDataType Email { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("EMAIL");
        public static EnterpriseCrmEventbusProtoAttributesDataType Url { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("URL");
        public static EnterpriseCrmEventbusProtoAttributesDataType Currency { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("CURRENCY");
        public static EnterpriseCrmEventbusProtoAttributesDataType Timestamp { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("TIMESTAMP");
        /// <summary>
        /// Domain is a web url string with one top-level private domain and a suffix (for example: google.com, walmart.com)
        /// </summary>
        public static EnterpriseCrmEventbusProtoAttributesDataType DomainName { get; } = new EnterpriseCrmEventbusProtoAttributesDataType("DOMAIN_NAME");

        public static bool operator ==(EnterpriseCrmEventbusProtoAttributesDataType left, EnterpriseCrmEventbusProtoAttributesDataType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoAttributesDataType left, EnterpriseCrmEventbusProtoAttributesDataType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoAttributesDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoAttributesDataType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoAttributesDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoAttributesSearchable : IEquatable<EnterpriseCrmEventbusProtoAttributesSearchable>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoAttributesSearchable(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoAttributesSearchable Unspecified { get; } = new EnterpriseCrmEventbusProtoAttributesSearchable("UNSPECIFIED");
        /// <summary>
        /// If yes, the parameter key and value will be full-text indexed. In a proto, this value will propagate to all children whose searchable is unspecified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoAttributesSearchable Yes { get; } = new EnterpriseCrmEventbusProtoAttributesSearchable("YES");
        /// <summary>
        /// If no, the parameter key and value will not be full-text indexed. In a proto, this value will propagate to all children whose searchable is unspecified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoAttributesSearchable No { get; } = new EnterpriseCrmEventbusProtoAttributesSearchable("NO");

        public static bool operator ==(EnterpriseCrmEventbusProtoAttributesSearchable left, EnterpriseCrmEventbusProtoAttributesSearchable right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoAttributesSearchable left, EnterpriseCrmEventbusProtoAttributesSearchable right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoAttributesSearchable value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoAttributesSearchable other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoAttributesSearchable other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType : IEquatable<EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType DefaultInclusive { get; } = new EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType("DEFAULT_INCLUSIVE");
        public static EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType Exclusive { get; } = new EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType("EXCLUSIVE");

        public static bool operator ==(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType left, EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType left, EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoConditionOperator : IEquatable<EnterpriseCrmEventbusProtoConditionOperator>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoConditionOperator(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoConditionOperator Unset { get; } = new EnterpriseCrmEventbusProtoConditionOperator("UNSET");
        public static EnterpriseCrmEventbusProtoConditionOperator EqualsValue { get; } = new EnterpriseCrmEventbusProtoConditionOperator("EQUALS");
        public static EnterpriseCrmEventbusProtoConditionOperator Contains { get; } = new EnterpriseCrmEventbusProtoConditionOperator("CONTAINS");
        public static EnterpriseCrmEventbusProtoConditionOperator LessThan { get; } = new EnterpriseCrmEventbusProtoConditionOperator("LESS_THAN");
        public static EnterpriseCrmEventbusProtoConditionOperator GreaterThan { get; } = new EnterpriseCrmEventbusProtoConditionOperator("GREATER_THAN");
        public static EnterpriseCrmEventbusProtoConditionOperator Exists { get; } = new EnterpriseCrmEventbusProtoConditionOperator("EXISTS");
        public static EnterpriseCrmEventbusProtoConditionOperator DoesNotExist { get; } = new EnterpriseCrmEventbusProtoConditionOperator("DOES_NOT_EXIST");
        public static EnterpriseCrmEventbusProtoConditionOperator IsEmpty { get; } = new EnterpriseCrmEventbusProtoConditionOperator("IS_EMPTY");
        public static EnterpriseCrmEventbusProtoConditionOperator IsNotEmpty { get; } = new EnterpriseCrmEventbusProtoConditionOperator("IS_NOT_EMPTY");

        public static bool operator ==(EnterpriseCrmEventbusProtoConditionOperator left, EnterpriseCrmEventbusProtoConditionOperator right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoConditionOperator left, EnterpriseCrmEventbusProtoConditionOperator right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoConditionOperator value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoConditionOperator other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoConditionOperator other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines what happens to the task upon failure.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy : IEquatable<EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy Unspecified { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("UNSPECIFIED");
        /// <summary>
        /// Ignores the failure of this task. The rest of the workflow will be executed Assuming this task succeeded.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy Ignore { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("IGNORE");
        /// <summary>
        /// Causes a permanent failure of the task. However, if the last task(s) of event was successfully completed despite the failure of this task, it has no impact on the workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy None { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("NONE");
        /// <summary>
        /// Causes a permanent failure of the event. It is different from NONE because this will mark the event as FAILED by shutting down the event execution.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy Fatal { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("FATAL");
        /// <summary>
        /// The task will be retried from the failed task onwards after a fixed delay. A max-retry count is required to be specified with this strategy. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. Max_num_retries and interval_in_seconds must be specified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy FixedInterval { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("FIXED_INTERVAL");
        /// <summary>
        /// The task will be retried from the failed task onwards after a fixed delay that linearly increases with each retry attempt. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. A max-retry count is required to be specified with this strategy. Max_num_retries and interval_in_seconds must be specified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy LinearBackoff { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("LINEAR_BACKOFF");
        /// <summary>
        /// The task will be retried after an exponentially increasing period of time with each failure. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. A max-retry count is required to be specified with this strategy. `max_num_retries` and `interval_in_seconds` must be specified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy ExponentialBackoff { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("EXPONENTIAL_BACKOFF");
        /// <summary>
        /// The entire workflow will be restarted with the initial parameters that were set when the event was fired. A max-retry count is required to be specified with this strategy. `max_num_retries` and `interval_in_seconds` must be specified.
        /// </summary>
        public static EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy RestartWorkflowWithBackoff { get; } = new EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy("RESTART_WORKFLOW_WITH_BACKOFF");

        public static bool operator ==(EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy left, EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy left, EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoLogSettingsSeedPeriod : IEquatable<EnterpriseCrmEventbusProtoLogSettingsSeedPeriod>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoLogSettingsSeedPeriod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoLogSettingsSeedPeriod SeedPeriodUnspecified { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedPeriod("SEED_PERIOD_UNSPECIFIED");
        /// <summary>
        /// Sanitized values remain constant for the day of the event.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedPeriod Day { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedPeriod("DAY");
        /// <summary>
        /// Sanitized values remain constant for the week of the event; may cross month boundaries.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedPeriod Week { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedPeriod("WEEK");
        /// <summary>
        /// Sanitized values remain constant for the month of the event.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedPeriod Month { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedPeriod("MONTH");

        public static bool operator ==(EnterpriseCrmEventbusProtoLogSettingsSeedPeriod left, EnterpriseCrmEventbusProtoLogSettingsSeedPeriod right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoLogSettingsSeedPeriod left, EnterpriseCrmEventbusProtoLogSettingsSeedPeriod right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoLogSettingsSeedPeriod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoLogSettingsSeedPeriod other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoLogSettingsSeedPeriod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoLogSettingsSeedScope : IEquatable<EnterpriseCrmEventbusProtoLogSettingsSeedScope>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoLogSettingsSeedScope(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoLogSettingsSeedScope SeedScopeUnspecified { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedScope("SEED_SCOPE_UNSPECIFIED");
        /// <summary>
        /// Hash computations include the event name.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedScope EventName { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedScope("EVENT_NAME");
        /// <summary>
        /// Hash computations include a time period.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedScope TimePeriod { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedScope("TIME_PERIOD");
        /// <summary>
        /// Hash computations include the param name.
        /// </summary>
        public static EnterpriseCrmEventbusProtoLogSettingsSeedScope ParamName { get; } = new EnterpriseCrmEventbusProtoLogSettingsSeedScope("PARAM_NAME");

        public static bool operator ==(EnterpriseCrmEventbusProtoLogSettingsSeedScope left, EnterpriseCrmEventbusProtoLogSettingsSeedScope right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoLogSettingsSeedScope left, EnterpriseCrmEventbusProtoLogSettingsSeedScope right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoLogSettingsSeedScope value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoLogSettingsSeedScope other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoLogSettingsSeedScope other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Destination node where the edge ends. It can only be a task config.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoNodeIdentifierElementType : IEquatable<EnterpriseCrmEventbusProtoNodeIdentifierElementType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoNodeIdentifierElementType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoNodeIdentifierElementType UnknownType { get; } = new EnterpriseCrmEventbusProtoNodeIdentifierElementType("UNKNOWN_TYPE");
        public static EnterpriseCrmEventbusProtoNodeIdentifierElementType TaskConfig { get; } = new EnterpriseCrmEventbusProtoNodeIdentifierElementType("TASK_CONFIG");
        public static EnterpriseCrmEventbusProtoNodeIdentifierElementType TriggerConfig { get; } = new EnterpriseCrmEventbusProtoNodeIdentifierElementType("TRIGGER_CONFIG");

        public static bool operator ==(EnterpriseCrmEventbusProtoNodeIdentifierElementType left, EnterpriseCrmEventbusProtoNodeIdentifierElementType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoNodeIdentifierElementType left, EnterpriseCrmEventbusProtoNodeIdentifierElementType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoNodeIdentifierElementType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoNodeIdentifierElementType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoNodeIdentifierElementType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption : IEquatable<EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// A single-line input for strings, a numeric input box for numbers, or a checkbox for booleans.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption Default { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption("DEFAULT");
        /// <summary>
        /// A multi-line input box for longer strings/string templates.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption StringMultiLine { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption("STRING_MULTI_LINE");
        /// <summary>
        /// A slider to select a numerical value. The default range is [0, 100].
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption NumberSlider { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption("NUMBER_SLIDER");
        /// <summary>
        /// A toggle button for boolean parameters.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption BooleanToggle { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption("BOOLEAN_TOGGLE");

        public static bool operator ==(EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption left, EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption left, EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption : IEquatable<EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// This field is not a parameter name.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption DefaultNotParameterName { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption("DEFAULT_NOT_PARAMETER_NAME");
        /// <summary>
        /// If this field is a string and this option is selected, the field will be interpreted as a parameter name. Users will be able to choose a variable using the autocomplete, but the name will be stored as a literal string.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption IsParameterName { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption("IS_PARAMETER_NAME");
        /// <summary>
        /// If this field is a ParameterMap and this option is selected, the map's keys will be interpreted as parameter names. Ignored if this field is not a ParameterMap.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption KeyIsParameterName { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption("KEY_IS_PARAMETER_NAME");
        /// <summary>
        /// If this field is a ParameterMap and this option is selected, the map's values will be interpreted as parameter names. Ignored if this field is not a ParameterMap.
        /// </summary>
        public static EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption ValueIsParameterName { get; } = new EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption("VALUE_IS_PARAMETER_NAME");

        public static bool operator ==(EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption left, EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption left, EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// State to which the execution snapshot status will be set if the task succeeds.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoSuccessPolicyFinalState : IEquatable<EnterpriseCrmEventbusProtoSuccessPolicyFinalState>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoSuccessPolicyFinalState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoSuccessPolicyFinalState Unspecified { get; } = new EnterpriseCrmEventbusProtoSuccessPolicyFinalState("UNSPECIFIED");
        /// <summary>
        /// The default behavior, where successful tasks will be marked as SUCCEEDED.
        /// </summary>
        public static EnterpriseCrmEventbusProtoSuccessPolicyFinalState Succeeded { get; } = new EnterpriseCrmEventbusProtoSuccessPolicyFinalState("SUCCEEDED");
        /// <summary>
        /// Sets the state to SUSPENDED after executing. This is required for SuspensionTask; event execution will continue once the user calls ResolveSuspensions with the event_execution_info_id and the task number.
        /// </summary>
        public static EnterpriseCrmEventbusProtoSuccessPolicyFinalState Suspended { get; } = new EnterpriseCrmEventbusProtoSuccessPolicyFinalState("SUSPENDED");

        public static bool operator ==(EnterpriseCrmEventbusProtoSuccessPolicyFinalState left, EnterpriseCrmEventbusProtoSuccessPolicyFinalState right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoSuccessPolicyFinalState left, EnterpriseCrmEventbusProtoSuccessPolicyFinalState right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoSuccessPolicyFinalState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoSuccessPolicyFinalState other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoSuccessPolicyFinalState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskAlertConfigMetricType : IEquatable<EnterpriseCrmEventbusProtoTaskAlertConfigMetricType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskAlertConfigMetricType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default value. Metric type should always be set to one of the other non-default values, otherwise it will result in an INVALID_ARGUMENT error.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType MetricTypeUnspecified { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("METRIC_TYPE_UNSPECIFIED");
        /// <summary>
        /// Specifies alerting on the rate of errors (potentially for a specific set of enum values) for the enclosing TaskConfig.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType TaskErrorRate { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("TASK_ERROR_RATE");
        /// <summary>
        /// Specifies alerting on the rate of warnings (potentially for a specific set of enum values) for the enclosing TaskConfig. Warnings use the same enum values as errors.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType TaskWarningRate { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("TASK_WARNING_RATE");
        /// <summary>
        /// Specifies alerting on the number of instances for the enclosing TaskConfig executed in the given aggregation_period.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType TaskRate { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("TASK_RATE");
        /// <summary>
        /// Specifies alerting on the average duration of execution for the enclosing task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType TaskAverageDuration { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("TASK_AVERAGE_DURATION");
        /// <summary>
        /// Specifies alerting on the duration of a particular percentile of task executions. E.g. If 10% or more of the task executions have durations above 5 seconds, alert.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigMetricType TaskPercentileDuration { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigMetricType("TASK_PERCENTILE_DURATION");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskAlertConfigMetricType left, EnterpriseCrmEventbusProtoTaskAlertConfigMetricType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskAlertConfigMetricType left, EnterpriseCrmEventbusProtoTaskAlertConfigMetricType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskAlertConfigMetricType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskAlertConfigMetricType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskAlertConfigMetricType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType : IEquatable<EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType UnspecifiedThresholdType { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType("UNSPECIFIED_THRESHOLD_TYPE");
        /// <summary>
        /// Note that this field will only trigger alerts if the workflow specifying it runs at least once in 24 hours (which is our in-memory retention period for monarch streams). Also note that `aggregation_period` for this alert configuration must be less than 24 hours.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType ExpectedMin { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType("EXPECTED_MIN");
        public static EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType ExpectedMax { get; } = new EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType("EXPECTED_MAX");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType left, EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType left, EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskMetadataCategory : IEquatable<EnterpriseCrmEventbusProtoTaskMetadataCategory>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskMetadataCategory(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoTaskMetadataCategory UnspecifiedCategory { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("UNSPECIFIED_CATEGORY");
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory Custom { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("CUSTOM");
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory FlowControl { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("FLOW_CONTROL");
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory DataManipulation { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("DATA_MANIPULATION");
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory Scripting { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("SCRIPTING");
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory Connector { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("CONNECTOR");
        /// <summary>
        /// Internal IP tasks that should not be available in the UI.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory Hidden { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("HIDDEN");
        /// <summary>
        /// Tasks that are relevant to cloud systems teams and typically
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory CloudSystems { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("CLOUD_SYSTEMS");
        /// <summary>
        /// include connecting to Vector salesforce, CRM Hub Spanner etc. Task entities that derive from a custom task template.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory CustomTaskTemplate { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("CUSTOM_TASK_TEMPLATE");
        /// <summary>
        /// Category to show task recommendations
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataCategory TaskRecommendations { get; } = new EnterpriseCrmEventbusProtoTaskMetadataCategory("TASK_RECOMMENDATIONS");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskMetadataCategory left, EnterpriseCrmEventbusProtoTaskMetadataCategory right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskMetadataCategory left, EnterpriseCrmEventbusProtoTaskMetadataCategory right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskMetadataCategory value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskMetadataCategory other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskMetadataCategory other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption : IEquatable<EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// As per the default behavior, no validation will be run. Will not override any option set in a Task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption UnspecifiedJsonValidationOption { get; } = new EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption("UNSPECIFIED_JSON_VALIDATION_OPTION");
        /// <summary>
        /// Do not run any validation against JSON schemas.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption Skip { get; } = new EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption("SKIP");
        /// <summary>
        /// Validate all potential input JSON parameters against schemas specified in WorkflowParameters.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption PreExecution { get; } = new EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption("PRE_EXECUTION");
        /// <summary>
        /// Validate all potential output JSON parameters against schemas specified in WorkflowParameters.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption PostExecution { get; } = new EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption("POST_EXECUTION");
        /// <summary>
        /// Perform both PRE_EXECUTION and POST_EXECUTION validations.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption PrePostExecution { get; } = new EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption("PRE_POST_EXECUTION");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption left, EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption left, EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskMetadataExternalCategory : IEquatable<EnterpriseCrmEventbusProtoTaskMetadataExternalCategory>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskMetadataExternalCategory(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoTaskMetadataExternalCategory UnspecifiedExternalCategory { get; } = new EnterpriseCrmEventbusProtoTaskMetadataExternalCategory("UNSPECIFIED_EXTERNAL_CATEGORY");
        public static EnterpriseCrmEventbusProtoTaskMetadataExternalCategory Core { get; } = new EnterpriseCrmEventbusProtoTaskMetadataExternalCategory("CORE");
        public static EnterpriseCrmEventbusProtoTaskMetadataExternalCategory Connectors { get; } = new EnterpriseCrmEventbusProtoTaskMetadataExternalCategory("CONNECTORS");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskMetadataExternalCategory left, EnterpriseCrmEventbusProtoTaskMetadataExternalCategory right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskMetadataExternalCategory left, EnterpriseCrmEventbusProtoTaskMetadataExternalCategory right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskMetadataExternalCategory value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskMetadataExternalCategory other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskMetadataExternalCategory other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskMetadataStatus : IEquatable<EnterpriseCrmEventbusProtoTaskMetadataStatus>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskMetadataStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. Actual Task Status should always be set to either INACTIVE or ACTIVE. If none is specified at runtime, it will be set to INACTIVE.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataStatus UnspecifiedStatus { get; } = new EnterpriseCrmEventbusProtoTaskMetadataStatus("UNSPECIFIED_STATUS");
        /// <summary>
        /// Still in-progress or incomplete, and not intended for use.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataStatus DefaultInactive { get; } = new EnterpriseCrmEventbusProtoTaskMetadataStatus("DEFAULT_INACTIVE");
        /// <summary>
        /// Available for use.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskMetadataStatus Active { get; } = new EnterpriseCrmEventbusProtoTaskMetadataStatus("ACTIVE");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskMetadataStatus left, EnterpriseCrmEventbusProtoTaskMetadataStatus right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskMetadataStatus left, EnterpriseCrmEventbusProtoTaskMetadataStatus right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskMetadataStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskMetadataStatus other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskMetadataStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskMetadataSystem : IEquatable<EnterpriseCrmEventbusProtoTaskMetadataSystem>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskMetadataSystem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoTaskMetadataSystem UnspecifiedSystem { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("UNSPECIFIED_SYSTEM");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Generic { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("GENERIC");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Buganizer { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("BUGANIZER");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Salesforce { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("SALESFORCE");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem CloudSql { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("CLOUD_SQL");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Plx { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("PLX");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Sheets { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("SHEETS");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem GoogleGroups { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("GOOGLE_GROUPS");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Email { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("EMAIL");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem Spanner { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("SPANNER");
        public static EnterpriseCrmEventbusProtoTaskMetadataSystem DataBridge { get; } = new EnterpriseCrmEventbusProtoTaskMetadataSystem("DATA_BRIDGE");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskMetadataSystem left, EnterpriseCrmEventbusProtoTaskMetadataSystem right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskMetadataSystem left, EnterpriseCrmEventbusProtoTaskMetadataSystem right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskMetadataSystem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskMetadataSystem other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskMetadataSystem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// ID of the config module.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId : IEquatable<EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId UnspecifiedTaskModule { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("UNSPECIFIED_TASK_MODULE");
        /// <summary>
        /// Supports editing label of a task config.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId Label { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("LABEL");
        /// <summary>
        /// Supports editing error handling settings such as retry strategy.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId ErrorHandling { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("ERROR_HANDLING");
        /// <summary>
        /// Supports adding, removing and editing task parameter values in a table with little assistance or restriction.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId TaskParamTable { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("TASK_PARAM_TABLE");
        /// <summary>
        /// Supports editing values of declared input parameters of a task. Think of it as a "strongly typed" upgrade to the TASK_PARAM_TABLE.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId TaskParamForm { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("TASK_PARAM_FORM");
        /// <summary>
        /// Supports editing preconditions of a task config.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId Precondition { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("PRECONDITION");
        /// <summary>
        /// Supports adding, editing, and deleting the scripts associated with a script task, as well as modifying the input/output parameters.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId ScriptEditor { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("SCRIPT_EDITOR");
        /// <summary>
        /// Supports editing task parameters associated with an RPC/stubby task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId Rpc { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("RPC");
        /// <summary>
        /// Contains readonly task information, including input/output type info.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId TaskSummary { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("TASK_SUMMARY");
        /// <summary>
        /// Configures a SuspensionTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId Suspension { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("SUSPENSION");
        /// <summary>
        /// Configures a GenericStubbyTypedTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId RpcTyped { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("RPC_TYPED");
        /// <summary>
        /// Configures a SubWorkflowExecutorTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId SubWorkflow { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("SUB_WORKFLOW");
        /// <summary>
        /// Supports navigating to Apps Script editor
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId AppsScriptNavigator { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("APPS_SCRIPT_NAVIGATOR");
        /// <summary>
        /// Configures a SubWorkflowForEachLoopTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId SubWorkflowForEachLoop { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("SUB_WORKFLOW_FOR_EACH_LOOP");
        /// <summary>
        /// Configures a FieldMappingTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId FieldMapping { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("FIELD_MAPPING");
        /// <summary>
        /// Contains embedded in-product documentation for a task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId Readme { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("README");
        /// <summary>
        /// UI widget for the rest caller task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId RestCaller { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("REST_CALLER");
        /// <summary>
        /// Configures a SubWorkflowScatterGatherTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId SubWorkflowScatterGather { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("SUB_WORKFLOW_SCATTER_GATHER");
        /// <summary>
        /// Configures a CloudSql Task.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId CloudSql { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("CLOUD_SQL");
        /// <summary>
        /// Configure a GenericConnectorTask.
        /// </summary>
        public static EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId GenericConnectorTask { get; } = new EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId("GENERIC_CONNECTOR_TASK");

        public static bool operator ==(EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId left, EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId left, EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType : IEquatable<EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default value. Metric type should always be set to one of the other non-default values, otherwise it will result in an INVALID_ARGUMENT error.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType MetricTypeUnspecified { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("METRIC_TYPE_UNSPECIFIED");
        /// <summary>
        /// Specifies alerting on the rate of errors for the enclosing workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType EventErrorRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("EVENT_ERROR_RATE");
        /// <summary>
        /// Specifies alerting on the rate of warnings for the enclosing workflow. Warnings use the same enum values as errors.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType EventWarningRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("EVENT_WARNING_RATE");
        /// <summary>
        /// Specifies alerting on the rate of errors for any task in the enclosing workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType TaskErrorRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("TASK_ERROR_RATE");
        /// <summary>
        /// Specifies alerting on the rate of warnings for any task in the enclosing workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType TaskWarningRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("TASK_WARNING_RATE");
        /// <summary>
        /// Specifies alerting on the rate of executions over all tasks in the enclosing workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType TaskRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("TASK_RATE");
        /// <summary>
        /// Specifies alerting on the number of events executed in the given aggregation_period.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType EventRate { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("EVENT_RATE");
        /// <summary>
        /// Specifies alerting on the average duration of executions for this workflow.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType EventAverageDuration { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("EVENT_AVERAGE_DURATION");
        /// <summary>
        /// Specifies alerting on the duration value of a particular percentile of workflow executions. E.g. If 10% or more of the workflow executions have durations above 5 seconds, alert.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType EventPercentileDuration { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("EVENT_PERCENTILE_DURATION");
        /// <summary>
        /// Specifies alerting on the average duration of any task in the enclosing workflow,
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType TaskAverageDuration { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("TASK_AVERAGE_DURATION");
        /// <summary>
        /// Specifies alerting on the duration value of a particular percentile of any task executions within the enclosing workflow. E.g. If 10% or more of the task executions in the workflow have durations above 5 seconds, alert.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType TaskPercentileDuration { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType("TASK_PERCENTILE_DURATION");

        public static bool operator ==(EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType left, EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType left, EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType : IEquatable<EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType UnspecifiedThresholdType { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType("UNSPECIFIED_THRESHOLD_TYPE");
        /// <summary>
        /// Note that this field will only trigger alerts if the workflow specifying it runs at least once in 24 hours (which is our in-memory retention period for monarch streams). Also note that `aggregation_period` for this alert configuration must be less than 24 hours.
        /// </summary>
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType ExpectedMin { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType("EXPECTED_MIN");
        public static EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType ExpectedMax { get; } = new EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType("EXPECTED_MAX");

        public static bool operator ==(EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType left, EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType left, EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Whether to include or exclude the enums matching the regex.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmEventbusStatsDimensionsEnumFilterType : IEquatable<EnterpriseCrmEventbusStatsDimensionsEnumFilterType>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusStatsDimensionsEnumFilterType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusStatsDimensionsEnumFilterType DefaultInclusive { get; } = new EnterpriseCrmEventbusStatsDimensionsEnumFilterType("DEFAULT_INCLUSIVE");
        public static EnterpriseCrmEventbusStatsDimensionsEnumFilterType Exclusive { get; } = new EnterpriseCrmEventbusStatsDimensionsEnumFilterType("EXCLUSIVE");

        public static bool operator ==(EnterpriseCrmEventbusStatsDimensionsEnumFilterType left, EnterpriseCrmEventbusStatsDimensionsEnumFilterType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusStatsDimensionsEnumFilterType left, EnterpriseCrmEventbusStatsDimensionsEnumFilterType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusStatsDimensionsEnumFilterType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusStatsDimensionsEnumFilterType other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusStatsDimensionsEnumFilterType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmEventbusStatsDimensionsRetryAttempt : IEquatable<EnterpriseCrmEventbusStatsDimensionsRetryAttempt>
    {
        private readonly string _value;

        private EnterpriseCrmEventbusStatsDimensionsRetryAttempt(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmEventbusStatsDimensionsRetryAttempt Unspecified { get; } = new EnterpriseCrmEventbusStatsDimensionsRetryAttempt("UNSPECIFIED");
        /// <summary>
        /// Task has completed successfully or has depleted all retry attempts.
        /// </summary>
        public static EnterpriseCrmEventbusStatsDimensionsRetryAttempt Final { get; } = new EnterpriseCrmEventbusStatsDimensionsRetryAttempt("FINAL");
        /// <summary>
        /// Task has failed but may be retried.
        /// </summary>
        public static EnterpriseCrmEventbusStatsDimensionsRetryAttempt Retryable { get; } = new EnterpriseCrmEventbusStatsDimensionsRetryAttempt("RETRYABLE");
        /// <summary>
        /// Task has been deliberately canceled.
        /// </summary>
        public static EnterpriseCrmEventbusStatsDimensionsRetryAttempt Canceled { get; } = new EnterpriseCrmEventbusStatsDimensionsRetryAttempt("CANCELED");

        public static bool operator ==(EnterpriseCrmEventbusStatsDimensionsRetryAttempt left, EnterpriseCrmEventbusStatsDimensionsRetryAttempt right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmEventbusStatsDimensionsRetryAttempt left, EnterpriseCrmEventbusStatsDimensionsRetryAttempt right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmEventbusStatsDimensionsRetryAttempt value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmEventbusStatsDimensionsRetryAttempt other && Equals(other);
        public bool Equals(EnterpriseCrmEventbusStatsDimensionsRetryAttempt other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The data type of the parameter.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType : IEquatable<EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType DataTypeUnspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("DATA_TYPE_UNSPECIFIED");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType StringValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("STRING_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType IntValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("INT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType DoubleValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("DOUBLE_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType BooleanValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("BOOLEAN_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType ProtoValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("PROTO_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType SerializedObjectValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("SERIALIZED_OBJECT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType StringArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("STRING_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType IntArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("INT_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType DoubleArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("DOUBLE_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType ProtoArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("PROTO_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType ProtoEnum { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("PROTO_ENUM");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType BooleanArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("BOOLEAN_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType ProtoEnumArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("PROTO_ENUM_ARRAY");
        /// <summary>
        /// BYTES and BYTES_ARRAY data types are not allowed for top-level params. They're only meant to support protobufs with BYTES (sub)fields.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType Bytes { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("BYTES");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType BytesArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("BYTES_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType NonSerializableObject { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("NON_SERIALIZABLE_OBJECT");
        public static EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType JsonValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType("JSON_VALUE");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType left, EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType left, EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Explicitly getting the type of the parameter.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType : IEquatable<EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType DataTypeUnspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("DATA_TYPE_UNSPECIFIED");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType StringValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("STRING_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType IntValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("INT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType DoubleValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("DOUBLE_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType BooleanValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("BOOLEAN_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType ProtoValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("PROTO_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType SerializedObjectValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("SERIALIZED_OBJECT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType StringArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("STRING_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType IntArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("INT_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType DoubleArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("DOUBLE_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType ProtoArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("PROTO_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType ProtoEnum { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("PROTO_ENUM");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType BooleanArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("BOOLEAN_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType ProtoEnumArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("PROTO_ENUM_ARRAY");
        /// <summary>
        /// BYTES and BYTES_ARRAY data types are not allowed for top-level params. They're only meant to support protobufs with BYTES (sub)fields.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType Bytes { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("BYTES");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType BytesArray { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("BYTES_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType NonSerializableObject { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("NON_SERIALIZABLE_OBJECT");
        public static EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType JsonValue { get; } = new EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType("JSON_VALUE");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType left, EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType left, EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. External task type is not specified
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType ExternalTaskTypeUnspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType("EXTERNAL_TASK_TYPE_UNSPECIFIED");
        /// <summary>
        /// Tasks belongs to the normal task flows
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType NormalTask { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType("NORMAL_TASK");
        /// <summary>
        /// Task belongs to the error catch task flows
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType ErrorTask { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType("ERROR_TASK");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskConfigExternalTaskType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// If set, overrides the option configured in the Task implementation class.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// As per the default behavior, no validation will be run. Will not override any option set in a Task.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption UnspecifiedJsonValidationOption { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption("UNSPECIFIED_JSON_VALIDATION_OPTION");
        /// <summary>
        /// Do not run any validation against JSON schemas.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption Skip { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption("SKIP");
        /// <summary>
        /// Validate all potential input JSON parameters against schemas specified in WorkflowParameters.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption PreExecution { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption("PRE_EXECUTION");
        /// <summary>
        /// Validate all potential output JSON parameters against schemas specified in WorkflowParameters.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption PostExecution { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption("POST_EXECUTION");
        /// <summary>
        /// Perform both PRE_EXECUTION and POST_EXECUTION validations.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption PrePostExecution { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption("PRE_POST_EXECUTION");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption left, EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption left, EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The policy dictating the execution of the next set of tasks for the current task.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy Unspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy("UNSPECIFIED");
        /// <summary>
        /// Execute all the tasks that satisfy their associated condition.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy RunAllMatch { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy("RUN_ALL_MATCH");
        /// <summary>
        /// Execute the first task that satisfies the associated condition.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy RunFirstMatch { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy("RUN_FIRST_MATCH");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy left, EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy left, EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The policy dictating the execution strategy of this task.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Wait until all of its previous tasks finished execution, then verify at least one of the edge conditions is met, and execute if possible. This should be considered as WHEN_ALL_TASKS_SUCCEED.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy WhenAllSucceed { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy("WHEN_ALL_SUCCEED");
        /// <summary>
        /// Start execution as long as any of its previous tasks finished execution and the corresponding edge condition is met (since we will execute if only that succeeding edge condition is met).
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy WhenAnySucceed { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy("WHEN_ANY_SUCCEED");
        /// <summary>
        /// Wait until all of its previous tasks finished execution, then verify the all edge conditions are met and execute if possible.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy WhenAllTasksAndConditionsSucceed { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy("WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy left, EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy left, EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines the type of the task
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Normal IP task
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType Task { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType("TASK");
        /// <summary>
        /// Task is of As-Is Template type
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType AsisTemplate { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType("ASIS_TEMPLATE");
        /// <summary>
        /// Task is of I/O template type with a different underlying task
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType IoTemplate { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType("IO_TEMPLATE");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines the type of the task
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType : IEquatable<EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Normal IP task
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType Task { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType("TASK");
        /// <summary>
        /// Task is of As-Is Template type
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType AsisTemplate { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType("ASIS_TEMPLATE");
        /// <summary>
        /// Task is of I/O template type with a different underlying task
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType IoTemplate { get; } = new EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType("IO_TEMPLATE");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType left, EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Dictates how next tasks will be executed.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy : IEquatable<EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy Unspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy("UNSPECIFIED");
        /// <summary>
        /// Execute all the tasks that satisfy their associated condition.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy RunAllMatch { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy("RUN_ALL_MATCH");
        /// <summary>
        /// Execute the first task that satisfies the associated condition.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy RunFirstMatch { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy("RUN_FIRST_MATCH");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy left, EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy left, EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType : IEquatable<EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType Unknown { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("UNKNOWN");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType CloudPubsub { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("CLOUD_PUBSUB");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType Goops { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("GOOPS");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType SfdcSync { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("SFDC_SYNC");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType Cron { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("CRON");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType Api { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("API");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType ManifoldTrigger { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("MANIFOLD_TRIGGER");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType DatalayerDataChange { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("DATALAYER_DATA_CHANGE");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType SfdcChannel { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("SFDC_CHANNEL");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType CloudPubsubExternal { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("CLOUD_PUBSUB_EXTERNAL");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType SfdcCdcChannel { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("SFDC_CDC_CHANNEL");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType SfdcPlatformEventsChannel { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("SFDC_PLATFORM_EVENTS_CHANNEL");
        public static EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType CloudScheduler { get; } = new EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType("CLOUD_SCHEDULER");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType left, EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType left, EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The data type of the parameter.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType : IEquatable<EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType DataTypeUnspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("DATA_TYPE_UNSPECIFIED");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType StringValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("STRING_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType IntValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("INT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType DoubleValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("DOUBLE_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType BooleanValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("BOOLEAN_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType ProtoValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("PROTO_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType SerializedObjectValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("SERIALIZED_OBJECT_VALUE");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType StringArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("STRING_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType IntArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("INT_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType DoubleArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("DOUBLE_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType ProtoArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("PROTO_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType ProtoEnum { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("PROTO_ENUM");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType BooleanArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("BOOLEAN_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType ProtoEnumArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("PROTO_ENUM_ARRAY");
        /// <summary>
        /// BYTES and BYTES_ARRAY data types are not allowed for top-level params. They're only meant to support protobufs with BYTES (sub)fields.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType Bytes { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("BYTES");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType BytesArray { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("BYTES_ARRAY");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType NonSerializableObject { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("NON_SERIALIZABLE_OBJECT");
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType JsonValue { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType("JSON_VALUE");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType left, EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType left, EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the input/output type for the parameter.
    /// </summary>
    [EnumType]
    public readonly struct EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType : IEquatable<EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType>
    {
        private readonly string _value;

        private EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType InOutTypeUnspecified { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType("IN_OUT_TYPE_UNSPECIFIED");
        /// <summary>
        /// Input parameters for the workflow. EventBus validates that these parameters exist in the workflows before execution.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType In { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType("IN");
        /// <summary>
        /// Output Parameters for the workflow. EventBus will only return the workflow parameters tagged with OUT in the response back.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType Out { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType("OUT");
        /// <summary>
        /// Input or Output Parameters. These can be used as both input and output. EventBus will validate for the existence of these parameters before execution and will also return this parameter back in the response.
        /// </summary>
        public static EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType InOut { get; } = new EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType("IN_OUT");

        public static bool operator ==(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType left, EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType left, EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType other && Equals(other);
        public bool Equals(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsFieldLimitsLogAction : IEquatable<EnterpriseCrmLoggingGwsFieldLimitsLogAction>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsFieldLimitsLogAction(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsFieldLimitsLogAction LogActionUnspecified { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogAction("LOG_ACTION_UNSPECIFIED");
        public static EnterpriseCrmLoggingGwsFieldLimitsLogAction DontLog { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogAction("DONT_LOG");
        public static EnterpriseCrmLoggingGwsFieldLimitsLogAction Log { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogAction("LOG");

        public static bool operator ==(EnterpriseCrmLoggingGwsFieldLimitsLogAction left, EnterpriseCrmLoggingGwsFieldLimitsLogAction right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsFieldLimitsLogAction left, EnterpriseCrmLoggingGwsFieldLimitsLogAction right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsFieldLimitsLogAction value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsFieldLimitsLogAction other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsFieldLimitsLogAction other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem : IEquatable<EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem LogTypeUnspecified { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Limits apply when log detail records are written to GWS.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem Gws { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem("GWS");
        /// <summary>
        /// Limits apply when log detail records are written to GTS (e.g., RecordIO files).
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem Gts { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem("GTS");
        /// <summary>
        /// Limits apply to *all* output log types.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem All { get; } = new EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem("ALL");

        public static bool operator ==(EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem left, EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem left, EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsFieldLimitsShortenerType : IEquatable<EnterpriseCrmLoggingGwsFieldLimitsShortenerType>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsFieldLimitsShortenerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType ShortenerTypeUnspecified { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTENER_TYPE_UNSPECIFIED");
        /// <summary>
        /// String is shortened to max_string_length.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType Shorten { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTEN");
        /// <summary>
        /// String is replaced by its hex-string hash.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType Hash { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("HASH");
        /// <summary>
        /// String is replaced by a combination of string shortening and a hex-string hash.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType ShortenWithHash { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTEN_WITH_HASH");
        /// <summary>
        /// String shortening for email addresses. Shortening may be done on the user and/or domain portion of the email address.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType ShortenEmail { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTEN_EMAIL");
        /// <summary>
        /// String is replaced by a combination of string shortening and a hex-string hash for an email address.
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType ShortenEmailWithHash { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTEN_EMAIL_WITH_HASH");
        /// <summary>
        /// Shortens a domain name (e.g., as part of an email address or URL).
        /// </summary>
        public static EnterpriseCrmLoggingGwsFieldLimitsShortenerType ShortenDomain { get; } = new EnterpriseCrmLoggingGwsFieldLimitsShortenerType("SHORTEN_DOMAIN");

        public static bool operator ==(EnterpriseCrmLoggingGwsFieldLimitsShortenerType left, EnterpriseCrmLoggingGwsFieldLimitsShortenerType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsFieldLimitsShortenerType left, EnterpriseCrmLoggingGwsFieldLimitsShortenerType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsFieldLimitsShortenerType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsFieldLimitsShortenerType other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsFieldLimitsShortenerType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem : IEquatable<EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem LogTypeUnspecified { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Limits apply when log detail records are written to GWS.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem Gws { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem("GWS");
        /// <summary>
        /// Limits apply when log detail records are written to GTS (e.g., RecordIO files).
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem Gts { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem("GTS");
        /// <summary>
        /// Limits apply to *all* output log types.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem All { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem("ALL");

        public static bool operator ==(EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem left, EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem left, EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy : IEquatable<EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy PrivacyTypeUnspecified { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy("PRIVACY_TYPE_UNSPECIFIED");
        /// <summary>
        /// Field does *NOT* contain PII or sensitive data.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy NotPii { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy("NOT_PII");
        /// <summary>
        /// Field contains PII.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy Pii { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy("PII");
        /// <summary>
        /// Field contains Sensitive PII.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy Spii { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy("SPII");
        /// <summary>
        /// Unsure if field contains PII.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy Unsure { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy("UNSURE");

        public static bool operator ==(EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy left, EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy left, EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType : IEquatable<EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType>
    {
        private readonly string _value;

        private EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType SanitizeTypeUnspecified { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("SANITIZE_TYPE_UNSPECIFIED");
        /// <summary>
        /// Replace value with a scrubbed value (usu. a constant).
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType Scrub { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("SCRUB");
        /// <summary>
        /// Transform a value so that it cannot be tracked across events. However, a given value, is transformed to the same value *within* an event. E.g., "foo.com" is transformed to "0xabcdef" for event 1001, and to "0xfedcba" for event 1002.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType Anonymize { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("ANONYMIZE");
        /// <summary>
        /// Transform values as with ANONYMIZER, but the same transformation is repeated for a limited time (e.g., 1 day).
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType AnonymizeLimitedRepeatable { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("ANONYMIZE_LIMITED_REPEATABLE");
        /// <summary>
        /// The value is transformed using a well-defined obfuscator (e.g., D3_CUSTOMER_ID).
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType Obfuscate { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("OBFUSCATE");
        /// <summary>
        /// The value is encrypted.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType Encrypt { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("ENCRYPT");
        /// <summary>
        /// No sanitization is required.
        /// </summary>
        public static EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType DoNotSanitize { get; } = new EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType("DO_NOT_SANITIZE");

        public static bool operator ==(EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType left, EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType right) => left.Equals(right);
        public static bool operator !=(EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType left, EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType right) => !left.Equals(right);

        public static explicit operator string(EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType other && Equals(other);
        public bool Equals(EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Credential type associated with auth config.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaCredentialCredentialType : IEquatable<GoogleCloudIntegrationsV1alphaCredentialCredentialType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaCredentialCredentialType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified credential type
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType CredentialTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("CREDENTIAL_TYPE_UNSPECIFIED");
        /// <summary>
        /// Regular username/password pair.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType UsernameAndPassword { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("USERNAME_AND_PASSWORD");
        /// <summary>
        /// API key.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType ApiKey { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("API_KEY");
        /// <summary>
        /// OAuth 2.0 Authorization Code Grant Type.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType Oauth2AuthorizationCode { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("OAUTH2_AUTHORIZATION_CODE");
        /// <summary>
        /// OAuth 2.0 Implicit Grant Type.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType Oauth2Implicit { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("OAUTH2_IMPLICIT");
        /// <summary>
        /// OAuth 2.0 Client Credentials Grant Type.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType Oauth2ClientCredentials { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("OAUTH2_CLIENT_CREDENTIALS");
        /// <summary>
        /// OAuth 2.0 Resource Owner Credentials Grant Type.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType Oauth2ResourceOwnerCredentials { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("OAUTH2_RESOURCE_OWNER_CREDENTIALS");
        /// <summary>
        /// JWT Token.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType Jwt { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("JWT");
        /// <summary>
        /// Auth Token, e.g. bearer token.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType AuthToken { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("AUTH_TOKEN");
        /// <summary>
        /// Service Account which can be used to generate token for authentication.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType ServiceAccount { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("SERVICE_ACCOUNT");
        /// <summary>
        /// Client Certificate only.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType ClientCertificateOnly { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("CLIENT_CERTIFICATE_ONLY");
        /// <summary>
        /// Google OIDC ID Token
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaCredentialCredentialType OidcToken { get; } = new GoogleCloudIntegrationsV1alphaCredentialCredentialType("OIDC_TOKEN");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaCredentialCredentialType left, GoogleCloudIntegrationsV1alphaCredentialCredentialType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaCredentialCredentialType left, GoogleCloudIntegrationsV1alphaCredentialCredentialType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaCredentialCredentialType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaCredentialCredentialType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaCredentialCredentialType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Defines what happens to the task upon failure.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy : IEquatable<GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// UNSPECIFIED.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy RetryStrategyUnspecified { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("RETRY_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Ignores the failure of this task. The rest of the integration will be executed Assuming this task succeeded.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy Ignore { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("IGNORE");
        /// <summary>
        /// Causes a permanent failure of the task. However, if the last task(s) of event was successfully completed despite the failure of this task, it has no impact on the integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy None { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("NONE");
        /// <summary>
        /// Causes a permanent failure of the event. It is different from NONE because this will mark the event as FAILED by shutting down the event execution.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy Fatal { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("FATAL");
        /// <summary>
        /// The task will be retried from the failed task onwards after a fixed delay. A max-retry count is required to be specified with this strategy. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. max_retries and interval_in_seconds must be specified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy FixedInterval { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("FIXED_INTERVAL");
        /// <summary>
        /// The task will be retried from the failed task onwards after a fixed delay that linearly increases with each retry attempt. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. A max-retry count is required to be specified with this strategy. max_retries and interval_in_seconds must be specified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy LinearBackoff { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("LINEAR_BACKOFF");
        /// <summary>
        /// The task will be retried after an exponentially increasing period of time with each failure. A jitter is added to each exponential interval so that concurrently failing tasks of the same type do not end up retrying after the exact same exponential interval. A max-retry count is required to be specified with this strategy. `max_retries` and `interval_in_seconds` must be specified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy ExponentialBackoff { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("EXPONENTIAL_BACKOFF");
        /// <summary>
        /// The entire integration will be restarted with the initial parameters that were set when the event was fired. A max-retry count is required to be specified with this strategy. `max_retries` and `interval_in_seconds` must be specified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy RestartIntegrationWithBackoff { get; } = new GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy("RESTART_INTEGRATION_WITH_BACKOFF");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy left, GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy left, GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The type of metric.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType : IEquatable<GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The default value. Metric type should always be set to one of the other non-default values, otherwise it will result in an INVALID_ARGUMENT error.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType MetricTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("METRIC_TYPE_UNSPECIFIED");
        /// <summary>
        /// Specifies alerting on the rate of errors for the enclosing integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType EventErrorRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("EVENT_ERROR_RATE");
        /// <summary>
        /// Specifies alerting on the rate of warnings for the enclosing integration. Warnings use the same enum values as errors.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType EventWarningRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("EVENT_WARNING_RATE");
        /// <summary>
        /// Specifies alerting on the rate of errors for any task in the enclosing integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType TaskErrorRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("TASK_ERROR_RATE");
        /// <summary>
        /// Specifies alerting on the rate of warnings for any task in the enclosing integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType TaskWarningRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("TASK_WARNING_RATE");
        /// <summary>
        /// Specifies alerting on the rate of executions over all tasks in the enclosing integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType TaskRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("TASK_RATE");
        /// <summary>
        /// Specifies alerting on the number of events executed in the given aggregation_period.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType EventRate { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("EVENT_RATE");
        /// <summary>
        /// Specifies alerting on the average duration of executions for this integration.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType EventAverageDuration { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("EVENT_AVERAGE_DURATION");
        /// <summary>
        /// Specifies alerting on the duration value of a particular percentile of integration executions. E.g. If 10% or more of the integration executions have durations above 5 seconds, alert.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType EventPercentileDuration { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("EVENT_PERCENTILE_DURATION");
        /// <summary>
        /// Specifies alerting on the average duration of any task in the enclosing integration,
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType TaskAverageDuration { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("TASK_AVERAGE_DURATION");
        /// <summary>
        /// Specifies alerting on the duration value of a particular percentile of any task executions within the enclosing integration. E.g. If 10% or more of the task executions in the integration have durations above 5 seconds, alert.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType TaskPercentileDuration { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType("TASK_PERCENTILE_DURATION");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType left, GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType left, GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType : IEquatable<GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType ThresholdTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType("THRESHOLD_TYPE_UNSPECIFIED");
        /// <summary>
        /// Note that this field will only trigger alerts if the integration specifying it runs at least once in 24 hours (which is our in-memory retention period for monarch streams). Also note that `aggregation_period` for this alert configuration must be less than 24 hours. Min value threshold.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType ExpectedMin { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType("EXPECTED_MIN");
        /// <summary>
        /// Max value threshold.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType ExpectedMax { get; } = new GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType("EXPECTED_MAX");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType left, GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType left, GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Type of the parameter.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaIntegrationParameterDataType : IEquatable<GoogleCloudIntegrationsV1alphaIntegrationParameterDataType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaIntegrationParameterDataType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType IntegrationParameterDataTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// String.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType StringValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("STRING_VALUE");
        /// <summary>
        /// Integer.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType IntValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("INT_VALUE");
        /// <summary>
        /// Double Number.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType DoubleValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("DOUBLE_VALUE");
        /// <summary>
        /// Boolean.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType BooleanValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("BOOLEAN_VALUE");
        /// <summary>
        /// String Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType StringArray { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("STRING_ARRAY");
        /// <summary>
        /// Integer Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType IntArray { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("INT_ARRAY");
        /// <summary>
        /// Double Number Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType DoubleArray { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("DOUBLE_ARRAY");
        /// <summary>
        /// Boolean Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType BooleanArray { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("BOOLEAN_ARRAY");
        /// <summary>
        /// Json.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType JsonValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("JSON_VALUE");
        /// <summary>
        /// Proto Value (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType ProtoValue { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("PROTO_VALUE");
        /// <summary>
        /// Proto Array (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterDataType ProtoArray { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterDataType("PROTO_ARRAY");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaIntegrationParameterDataType left, GoogleCloudIntegrationsV1alphaIntegrationParameterDataType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaIntegrationParameterDataType left, GoogleCloudIntegrationsV1alphaIntegrationParameterDataType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaIntegrationParameterDataType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaIntegrationParameterDataType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaIntegrationParameterDataType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Specifies the input/output type for the parameter.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType : IEquatable<GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType InOutTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType("IN_OUT_TYPE_UNSPECIFIED");
        /// <summary>
        /// Input parameters for the integration. EventBus validates that these parameters exist in the integrations before execution.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType In { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType("IN");
        /// <summary>
        /// Output Parameters for the integration. EventBus will only return the integration parameters tagged with OUT in the response back.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType Out { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType("OUT");
        /// <summary>
        /// Input and Output Parameters. These can be used as both input and output. EventBus will validate for the existence of these parameters before execution and will also return this parameter back in the response.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType InOut { get; } = new GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType("IN_OUT");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType left, GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType left, GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Represent how to pass parameters to fetch access token
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType : IEquatable<GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified request type
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType RequestTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType("REQUEST_TYPE_UNSPECIFIED");
        /// <summary>
        /// To pass all the parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType RequestBody { get; } = new GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType("REQUEST_BODY");
        /// <summary>
        /// To pass all the parameters as a part of query parameter.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType QueryParameters { get; } = new GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType("QUERY_PARAMETERS");
        /// <summary>
        /// To pass client id and client secret as base 64 encoding of client_id:client_password and rest parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType EncodedHeader { get; } = new GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType("ENCODED_HEADER");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType left, GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType left, GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Represent how to pass parameters to fetch access token
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType : IEquatable<GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified request type
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType RequestTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType("REQUEST_TYPE_UNSPECIFIED");
        /// <summary>
        /// To pass all the parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType RequestBody { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType("REQUEST_BODY");
        /// <summary>
        /// To pass all the parameters as a part of query parameter.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType QueryParameters { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType("QUERY_PARAMETERS");
        /// <summary>
        /// To pass client id and client secret as base 64 encoding of client_id:client_password and rest parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType EncodedHeader { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType("ENCODED_HEADER");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType left, GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType left, GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Represent how to pass parameters to fetch access token
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType : IEquatable<GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified request type
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType RequestTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType("REQUEST_TYPE_UNSPECIFIED");
        /// <summary>
        /// To pass all the parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType RequestBody { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType("REQUEST_BODY");
        /// <summary>
        /// To pass all the parameters as a part of query parameter.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType QueryParameters { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType("QUERY_PARAMETERS");
        /// <summary>
        /// To pass client id and client secret as base 64 encoding of client_id:client_password and rest parameters in post body.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType EncodedHeader { get; } = new GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType("ENCODED_HEADER");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType left, GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType left, GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaParameterMapKeyType : IEquatable<GoogleCloudIntegrationsV1alphaParameterMapKeyType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaParameterMapKeyType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType IntegrationParameterDataTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// String.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType StringValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("STRING_VALUE");
        /// <summary>
        /// Integer.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType IntValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("INT_VALUE");
        /// <summary>
        /// Double Number.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType DoubleValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("DOUBLE_VALUE");
        /// <summary>
        /// Boolean.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType BooleanValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("BOOLEAN_VALUE");
        /// <summary>
        /// String Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType StringArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("STRING_ARRAY");
        /// <summary>
        /// Integer Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType IntArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("INT_ARRAY");
        /// <summary>
        /// Double Number Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType DoubleArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("DOUBLE_ARRAY");
        /// <summary>
        /// Boolean Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType BooleanArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("BOOLEAN_ARRAY");
        /// <summary>
        /// Json.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType JsonValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("JSON_VALUE");
        /// <summary>
        /// Proto Value (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType ProtoValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("PROTO_VALUE");
        /// <summary>
        /// Proto Array (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapKeyType ProtoArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapKeyType("PROTO_ARRAY");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaParameterMapKeyType left, GoogleCloudIntegrationsV1alphaParameterMapKeyType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaParameterMapKeyType left, GoogleCloudIntegrationsV1alphaParameterMapKeyType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaParameterMapKeyType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaParameterMapKeyType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaParameterMapKeyType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaParameterMapValueType : IEquatable<GoogleCloudIntegrationsV1alphaParameterMapValueType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaParameterMapValueType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unspecified.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType IntegrationParameterDataTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED");
        /// <summary>
        /// String.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType StringValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("STRING_VALUE");
        /// <summary>
        /// Integer.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType IntValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("INT_VALUE");
        /// <summary>
        /// Double Number.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType DoubleValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("DOUBLE_VALUE");
        /// <summary>
        /// Boolean.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType BooleanValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("BOOLEAN_VALUE");
        /// <summary>
        /// String Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType StringArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("STRING_ARRAY");
        /// <summary>
        /// Integer Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType IntArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("INT_ARRAY");
        /// <summary>
        /// Double Number Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType DoubleArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("DOUBLE_ARRAY");
        /// <summary>
        /// Boolean Array.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType BooleanArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("BOOLEAN_ARRAY");
        /// <summary>
        /// Json.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType JsonValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("JSON_VALUE");
        /// <summary>
        /// Proto Value (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType ProtoValue { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("PROTO_VALUE");
        /// <summary>
        /// Proto Array (Internal use only).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaParameterMapValueType ProtoArray { get; } = new GoogleCloudIntegrationsV1alphaParameterMapValueType("PROTO_ARRAY");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaParameterMapValueType left, GoogleCloudIntegrationsV1alphaParameterMapValueType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaParameterMapValueType left, GoogleCloudIntegrationsV1alphaParameterMapValueType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaParameterMapValueType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaParameterMapValueType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaParameterMapValueType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// State to which the execution snapshot status will be set if the task succeeds.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState : IEquatable<GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// UNSPECIFIED.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState FinalStateUnspecified { get; } = new GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState("FINAL_STATE_UNSPECIFIED");
        /// <summary>
        /// The default behavior, where successful tasks will be marked as SUCCEEDED.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState Succeeded { get; } = new GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState("SUCCEEDED");
        /// <summary>
        /// Sets the state to SUSPENDED after executing. This is required for SuspensionTask; event execution will continue once the user calls ResolveSuspensions with the event_execution_info_id and the task number.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState Suspended { get; } = new GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState("SUSPENDED");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState left, GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState left, GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. External task type of the task
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType : IEquatable<GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. External task type is not specified
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType ExternalTaskTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType("EXTERNAL_TASK_TYPE_UNSPECIFIED");
        /// <summary>
        /// Tasks belongs to the normal task flows
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType NormalTask { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType("NORMAL_TASK");
        /// <summary>
        /// Task belongs to the error catch task flows
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType ErrorTask { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType("ERROR_TASK");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType left, GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType left, GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTaskConfigExternalTaskType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. If set, overrides the option configured in the Task implementation class.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption : IEquatable<GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// As per the default behavior, no validation will be run. Will not override any option set in a Task.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption JsonValidationOptionUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption("JSON_VALIDATION_OPTION_UNSPECIFIED");
        /// <summary>
        /// Do not run any validation against JSON schemas.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption Skip { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption("SKIP");
        /// <summary>
        /// Validate all potential input JSON parameters against schemas specified in IntegrationParameter.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption PreExecution { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption("PRE_EXECUTION");
        /// <summary>
        /// Validate all potential output JSON parameters against schemas specified in IntegrationParameter.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption PostExecution { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption("POST_EXECUTION");
        /// <summary>
        /// Perform both PRE_EXECUTION and POST_EXECUTION validations.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption PrePostExecution { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption("PRE_POST_EXECUTION");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption left, GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption left, GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The policy dictating the execution of the next set of tasks for the current task.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy : IEquatable<GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy NextTasksExecutionPolicyUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy("NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED");
        /// <summary>
        /// Execute all the tasks that satisfy their associated condition.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy RunAllMatch { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy("RUN_ALL_MATCH");
        /// <summary>
        /// Execute the first task that satisfies the associated condition.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy RunFirstMatch { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy("RUN_FIRST_MATCH");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy left, GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy left, GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The policy dictating the execution strategy of this task.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy : IEquatable<GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default. If the strategy is not set explicitly, it will default to `WHEN_ALL_SUCCEED`.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy TaskExecutionStrategyUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy("TASK_EXECUTION_STRATEGY_UNSPECIFIED");
        /// <summary>
        /// Wait until all of its previous tasks finished execution, then verify at least one of the edge conditions is met, and execute if possible. This should be considered as WHEN_ALL_TASKS_SUCCEED.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy WhenAllSucceed { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy("WHEN_ALL_SUCCEED");
        /// <summary>
        /// Start execution as long as any of its previous tasks finished execution and the corresponding edge condition is met (since we will execute if only that succeeding edge condition is met).
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy WhenAnySucceed { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy("WHEN_ANY_SUCCEED");
        /// <summary>
        /// Wait until all of its previous tasks finished execution, then verify the all edge conditions are met and execute if possible.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy WhenAllTasksAndConditionsSucceed { get; } = new GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy("WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy left, GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy left, GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Dictates how next tasks will be executed.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy : IEquatable<GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy NextTasksExecutionPolicyUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy("NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED");
        /// <summary>
        /// Execute all the tasks that satisfy their associated condition.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy RunAllMatch { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy("RUN_ALL_MATCH");
        /// <summary>
        /// Execute the first task that satisfies the associated condition.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy RunFirstMatch { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy("RUN_FIRST_MATCH");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy left, GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy left, GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Type of trigger
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType : IEquatable<GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType>
    {
        private readonly string _value;

        private GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Unknown.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType TriggerTypeUnspecified { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("TRIGGER_TYPE_UNSPECIFIED");
        /// <summary>
        /// Trigger by scheduled time.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType Cron { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("CRON");
        /// <summary>
        /// Trigger by API call.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType Api { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("API");
        /// <summary>
        /// Trigger by Salesforce Channel.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType SfdcChannel { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("SFDC_CHANNEL");
        /// <summary>
        /// Trigger by Pub/Sub external.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType CloudPubsubExternal { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("CLOUD_PUBSUB_EXTERNAL");
        /// <summary>
        /// SFDC Channel Trigger for CDC.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType SfdcCdcChannel { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("SFDC_CDC_CHANNEL");
        /// <summary>
        /// Trigger by Cloud Scheduler job.
        /// </summary>
        public static GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType CloudScheduler { get; } = new GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType("CLOUD_SCHEDULER");

        public static bool operator ==(GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType left, GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType left, GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType other && Equals(other);
        public bool Equals(GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
    /// </summary>
    [EnumType]
    public readonly struct TemplatesVersionDatabasePersistencePolicy : IEquatable<TemplatesVersionDatabasePersistencePolicy>
    {
        private readonly string _value;

        private TemplatesVersionDatabasePersistencePolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Enables persistence for all execution data.
        /// </summary>
        public static TemplatesVersionDatabasePersistencePolicy DatabasePersistencePolicyUnspecified { get; } = new TemplatesVersionDatabasePersistencePolicy("DATABASE_PERSISTENCE_POLICY_UNSPECIFIED");
        /// <summary>
        /// Disables persistence for all execution data.
        /// </summary>
        public static TemplatesVersionDatabasePersistencePolicy DatabasePersistenceDisabled { get; } = new TemplatesVersionDatabasePersistencePolicy("DATABASE_PERSISTENCE_DISABLED");

        public static bool operator ==(TemplatesVersionDatabasePersistencePolicy left, TemplatesVersionDatabasePersistencePolicy right) => left.Equals(right);
        public static bool operator !=(TemplatesVersionDatabasePersistencePolicy left, TemplatesVersionDatabasePersistencePolicy right) => !left.Equals(right);

        public static explicit operator string(TemplatesVersionDatabasePersistencePolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TemplatesVersionDatabasePersistencePolicy other && Equals(other);
        public bool Equals(TemplatesVersionDatabasePersistencePolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Generated by eventbus. User should not set it as an input.
    /// </summary>
    [EnumType]
    public readonly struct TemplatesVersionStatus : IEquatable<TemplatesVersionStatus>
    {
        private readonly string _value;

        private TemplatesVersionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TemplatesVersionStatus Unknown { get; } = new TemplatesVersionStatus("UNKNOWN");
        public static TemplatesVersionStatus Draft { get; } = new TemplatesVersionStatus("DRAFT");
        public static TemplatesVersionStatus Active { get; } = new TemplatesVersionStatus("ACTIVE");
        public static TemplatesVersionStatus Archived { get; } = new TemplatesVersionStatus("ARCHIVED");
        public static TemplatesVersionStatus Snapshot { get; } = new TemplatesVersionStatus("SNAPSHOT");

        public static bool operator ==(TemplatesVersionStatus left, TemplatesVersionStatus right) => left.Equals(right);
        public static bool operator !=(TemplatesVersionStatus left, TemplatesVersionStatus right) => !left.Equals(right);

        public static explicit operator string(TemplatesVersionStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TemplatesVersionStatus other && Equals(other);
        public bool Equals(TemplatesVersionStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
    /// </summary>
    [EnumType]
    public readonly struct VersionDatabasePersistencePolicy : IEquatable<VersionDatabasePersistencePolicy>
    {
        private readonly string _value;

        private VersionDatabasePersistencePolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Enables persistence for all execution data.
        /// </summary>
        public static VersionDatabasePersistencePolicy DatabasePersistencePolicyUnspecified { get; } = new VersionDatabasePersistencePolicy("DATABASE_PERSISTENCE_POLICY_UNSPECIFIED");
        /// <summary>
        /// Disables persistence for all execution data.
        /// </summary>
        public static VersionDatabasePersistencePolicy DatabasePersistenceDisabled { get; } = new VersionDatabasePersistencePolicy("DATABASE_PERSISTENCE_DISABLED");

        public static bool operator ==(VersionDatabasePersistencePolicy left, VersionDatabasePersistencePolicy right) => left.Equals(right);
        public static bool operator !=(VersionDatabasePersistencePolicy left, VersionDatabasePersistencePolicy right) => !left.Equals(right);

        public static explicit operator string(VersionDatabasePersistencePolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is VersionDatabasePersistencePolicy other && Equals(other);
        public bool Equals(VersionDatabasePersistencePolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Optional. The origin that indicates where this integration is coming from.
    /// </summary>
    [EnumType]
    public readonly struct VersionOrigin : IEquatable<VersionOrigin>
    {
        private readonly string _value;

        private VersionOrigin(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static VersionOrigin Unspecified { get; } = new VersionOrigin("UNSPECIFIED");
        /// <summary>
        /// Workflow is being created via event bus UI.
        /// </summary>
        public static VersionOrigin Ui { get; } = new VersionOrigin("UI");
        /// <summary>
        /// User checked in this workflow in Piper as v2 textproto format and we synced it into spanner.
        /// </summary>
        public static VersionOrigin PiperV2 { get; } = new VersionOrigin("PIPER_V2");
        /// <summary>
        /// User checked in this workflow in piper as v3 textproto format and we synced it into spanner.
        /// </summary>
        public static VersionOrigin PiperV3 { get; } = new VersionOrigin("PIPER_V3");
        /// <summary>
        /// Workflow is being created via Standalone IP Provisioning
        /// </summary>
        public static VersionOrigin ApplicationIpProvisioning { get; } = new VersionOrigin("APPLICATION_IP_PROVISIONING");

        public static bool operator ==(VersionOrigin left, VersionOrigin right) => left.Equals(right);
        public static bool operator !=(VersionOrigin left, VersionOrigin right) => !left.Equals(right);

        public static explicit operator string(VersionOrigin value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is VersionOrigin other && Equals(other);
        public bool Equals(VersionOrigin other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
