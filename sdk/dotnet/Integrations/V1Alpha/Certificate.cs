// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1Alpha
{
    /// <summary>
    /// Creates a new certificate. The certificate will be registered to the trawler service and will be encrypted using cloud KMS and stored in Spanner Returns the certificate.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:integrations/v1alpha:Certificate")]
    public partial class Certificate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Status of the certificate
        /// </summary>
        [Output("certificateStatus")]
        public Output<string> CertificateStatus { get; private set; } = null!;

        /// <summary>
        /// Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
        /// </summary>
        [Output("credentialId")]
        public Output<string> CredentialId { get; private set; } = null!;

        /// <summary>
        /// Description of the certificate
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the certificate
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Auto generated primary key
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Input only. Raw client certificate which would be registered with trawler
        /// </summary>
        [Output("rawCertificate")]
        public Output<Outputs.GoogleCloudIntegrationsV1alphaClientCertificateResponse> RawCertificate { get; private set; } = null!;

        /// <summary>
        /// Immutable. Requestor ID to be used to register certificate with trawler
        /// </summary>
        [Output("requestorId")]
        public Output<string> RequestorId { get; private set; } = null!;

        /// <summary>
        /// The timestamp after which certificate will expire
        /// </summary>
        [Output("validEndTime")]
        public Output<string> ValidEndTime { get; private set; } = null!;

        /// <summary>
        /// The timestamp after which certificate will be valid
        /// </summary>
        [Output("validStartTime")]
        public Output<string> ValidStartTime { get; private set; } = null!;


        /// <summary>
        /// Create a Certificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Certificate(string name, CertificateArgs args, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1alpha:Certificate", name, args ?? new CertificateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Certificate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1alpha:Certificate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "productId",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Certificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Certificate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Certificate(name, id, options);
        }
    }

    public sealed class CertificateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Status of the certificate
        /// </summary>
        [Input("certificateStatus")]
        public Input<Pulumi.GoogleNative.Integrations.V1Alpha.CertificateCertificateStatus>? CertificateStatus { get; set; }

        /// <summary>
        /// Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
        /// </summary>
        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        /// <summary>
        /// Description of the certificate
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the certificate
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Input only. Raw client certificate which would be registered with trawler
        /// </summary>
        [Input("rawCertificate")]
        public Input<Inputs.GoogleCloudIntegrationsV1alphaClientCertificateArgs>? RawCertificate { get; set; }

        /// <summary>
        /// Immutable. Requestor ID to be used to register certificate with trawler
        /// </summary>
        [Input("requestorId")]
        public Input<string>? RequestorId { get; set; }

        public CertificateArgs()
        {
        }
        public static new CertificateArgs Empty => new CertificateArgs();
    }
}
