// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1Alpha
{
    /// <summary>
    /// Creates a new test case
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:integrations/v1alpha:TestCase")]
    public partial class TestCase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Auto-generated.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Output("creatorEmail")]
        public Output<string> CreatorEmail { get; private set; } = null!;

        /// <summary>
        /// Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
        /// </summary>
        [Output("databasePersistencePolicy")]
        public Output<string> DatabasePersistencePolicy { get; private set; } = null!;

        /// <summary>
        /// Optional. Description of the test case.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of test case.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("integrationId")]
        public Output<string> IntegrationId { get; private set; } = null!;

        /// <summary>
        /// The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Output("lastModifierEmail")]
        public Output<string> LastModifierEmail { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Output("lockHolderEmail")]
        public Output<string> LockHolderEmail { get; private set; } = null!;

        /// <summary>
        /// Auto-generated primary key.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Required. Required
        /// </summary>
        [Output("testCaseId")]
        public Output<string> TestCaseId { get; private set; } = null!;

        /// <summary>
        /// Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
        /// </summary>
        [Output("testInputParameters")]
        public Output<ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaIntegrationParameterResponse>> TestInputParameters { get; private set; } = null!;

        /// <summary>
        /// Optional. However, the test case doesn't mock or assert anything without test_task_configs.
        /// </summary>
        [Output("testTaskConfigs")]
        public Output<ImmutableArray<Outputs.GoogleCloudIntegrationsV1alphaTestTaskConfigResponse>> TestTaskConfigs { get; private set; } = null!;

        /// <summary>
        /// This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
        /// </summary>
        [Output("triggerId")]
        public Output<string> TriggerId { get; private set; } = null!;

        /// <summary>
        /// Auto-generated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;

        /// <summary>
        /// ID of the workflow with which this test case is associated
        /// </summary>
        [Output("workflowId")]
        public Output<string> WorkflowId { get; private set; } = null!;


        /// <summary>
        /// Create a TestCase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TestCase(string name, TestCaseArgs args, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1alpha:TestCase", name, args ?? new TestCaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TestCase(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:integrations/v1alpha:TestCase", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "integrationId",
                    "location",
                    "project",
                    "testCaseId",
                    "versionId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TestCase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TestCase Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TestCase(name, id, options);
        }
    }

    public sealed class TestCaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto-generated.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Input("creatorEmail")]
        public Input<string>? CreatorEmail { get; set; }

        /// <summary>
        /// Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
        /// </summary>
        [Input("databasePersistencePolicy")]
        public Input<Pulumi.GoogleNative.Integrations.V1Alpha.TestCaseDatabasePersistencePolicy>? DatabasePersistencePolicy { get; set; }

        /// <summary>
        /// Optional. Description of the test case.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of test case.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("integrationId", required: true)]
        public Input<string> IntegrationId { get; set; } = null!;

        /// <summary>
        /// The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Input("lastModifierEmail")]
        public Input<string>? LastModifierEmail { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        /// </summary>
        [Input("lockHolderEmail")]
        public Input<string>? LockHolderEmail { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Required. Required
        /// </summary>
        [Input("testCaseId", required: true)]
        public Input<string> TestCaseId { get; set; } = null!;

        [Input("testInputParameters")]
        private InputList<Inputs.GoogleCloudIntegrationsV1alphaIntegrationParameterArgs>? _testInputParameters;

        /// <summary>
        /// Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
        /// </summary>
        public InputList<Inputs.GoogleCloudIntegrationsV1alphaIntegrationParameterArgs> TestInputParameters
        {
            get => _testInputParameters ?? (_testInputParameters = new InputList<Inputs.GoogleCloudIntegrationsV1alphaIntegrationParameterArgs>());
            set => _testInputParameters = value;
        }

        [Input("testTaskConfigs")]
        private InputList<Inputs.GoogleCloudIntegrationsV1alphaTestTaskConfigArgs>? _testTaskConfigs;

        /// <summary>
        /// Optional. However, the test case doesn't mock or assert anything without test_task_configs.
        /// </summary>
        public InputList<Inputs.GoogleCloudIntegrationsV1alphaTestTaskConfigArgs> TestTaskConfigs
        {
            get => _testTaskConfigs ?? (_testTaskConfigs = new InputList<Inputs.GoogleCloudIntegrationsV1alphaTestTaskConfigArgs>());
            set => _testTaskConfigs = value;
        }

        /// <summary>
        /// This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
        /// </summary>
        [Input("triggerId", required: true)]
        public Input<string> TriggerId { get; set; } = null!;

        /// <summary>
        /// Auto-generated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("versionId", required: true)]
        public Input<string> VersionId { get; set; } = null!;

        /// <summary>
        /// ID of the workflow with which this test case is associated
        /// </summary>
        [Input("workflowId")]
        public Input<string>? WorkflowId { get; set; }

        public TestCaseArgs()
        {
        }
        public static new TestCaseArgs Empty => new TestCaseArgs();
    }
}
