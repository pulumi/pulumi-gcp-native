// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Integrations.V1Alpha
{
    public static class GetCertificate
    {
        /// <summary>
        /// Get a certificates in the specified project.
        /// </summary>
        public static Task<GetCertificateResult> InvokeAsync(GetCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateResult>("google-native:integrations/v1alpha:getCertificate", args ?? new GetCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Get a certificates in the specified project.
        /// </summary>
        public static Output<GetCertificateResult> Invoke(GetCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateResult>("google-native:integrations/v1alpha:getCertificate", args ?? new GetCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public string CertificateId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("productId", required: true)]
        public string ProductId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCertificateArgs()
        {
        }
        public static new GetCertificateArgs Empty => new GetCertificateArgs();
    }

    public sealed class GetCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCertificateInvokeArgs()
        {
        }
        public static new GetCertificateInvokeArgs Empty => new GetCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateResult
    {
        /// <summary>
        /// Status of the certificate
        /// </summary>
        public readonly string CertificateStatus;
        /// <summary>
        /// Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
        /// </summary>
        public readonly string CredentialId;
        /// <summary>
        /// Description of the certificate
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Name of the certificate
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Auto generated primary key
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Input only. Raw client certificate which would be registered with trawler
        /// </summary>
        public readonly Outputs.GoogleCloudIntegrationsV1alphaClientCertificateResponse RawCertificate;
        /// <summary>
        /// Immutable. Requestor ID to be used to register certificate with trawler
        /// </summary>
        public readonly string RequestorId;
        /// <summary>
        /// The timestamp after which certificate will expire
        /// </summary>
        public readonly string ValidEndTime;
        /// <summary>
        /// The timestamp after which certificate will be valid
        /// </summary>
        public readonly string ValidStartTime;

        [OutputConstructor]
        private GetCertificateResult(
            string certificateStatus,

            string credentialId,

            string description,

            string displayName,

            string name,

            Outputs.GoogleCloudIntegrationsV1alphaClientCertificateResponse rawCertificate,

            string requestorId,

            string validEndTime,

            string validStartTime)
        {
            CertificateStatus = certificateStatus;
            CredentialId = credentialId;
            Description = description;
            DisplayName = displayName;
            Name = name;
            RawCertificate = rawCertificate;
            RequestorId = requestorId;
            ValidEndTime = validEndTime;
            ValidStartTime = validStartTime;
        }
    }
}
