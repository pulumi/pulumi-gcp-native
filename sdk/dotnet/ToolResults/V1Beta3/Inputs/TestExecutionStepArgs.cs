// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ToolResults.V1Beta3.Inputs
{

    /// <summary>
    /// A step that represents running tests. It accepts ant-junit xml files which will be parsed into structured test results by the service. Xml file paths are updated in order to append more files, however they can't be deleted. Users can also add test results manually by using the test_result field.
    /// </summary>
    public sealed class TestExecutionStepArgs : Pulumi.ResourceArgs
    {
        [Input("testIssues")]
        private InputList<Inputs.TestIssueArgs>? _testIssues;

        /// <summary>
        /// Issues observed during the test execution. For example, if the mobile app under test crashed during the test, the error message and the stack trace content can be recorded here to assist debugging. - In response: present if set by create or update - In create/update request: optional
        /// </summary>
        public InputList<Inputs.TestIssueArgs> TestIssues
        {
            get => _testIssues ?? (_testIssues = new InputList<Inputs.TestIssueArgs>());
            set => _testIssues = value;
        }

        [Input("testSuiteOverviews")]
        private InputList<Inputs.TestSuiteOverviewArgs>? _testSuiteOverviews;

        /// <summary>
        /// List of test suite overview contents. This could be parsed from xUnit XML log by server, or uploaded directly by user. This references should only be called when test suites are fully parsed or uploaded. The maximum allowed number of test suite overviews per step is 1000. - In response: always set - In create request: optional - In update request: never (use publishXunitXmlFiles custom method instead)
        /// </summary>
        public InputList<Inputs.TestSuiteOverviewArgs> TestSuiteOverviews
        {
            get => _testSuiteOverviews ?? (_testSuiteOverviews = new InputList<Inputs.TestSuiteOverviewArgs>());
            set => _testSuiteOverviews = value;
        }

        /// <summary>
        /// The timing break down of the test execution. - In response: present if set by create or update - In create/update request: optional
        /// </summary>
        [Input("testTiming")]
        public Input<Inputs.TestTimingArgs>? TestTiming { get; set; }

        /// <summary>
        /// Represents the execution of the test runner. The exit code of this tool will be used to determine if the test passed. - In response: always set - In create/update request: optional
        /// </summary>
        [Input("toolExecution")]
        public Input<Inputs.ToolExecutionArgs>? ToolExecution { get; set; }

        public TestExecutionStepArgs()
        {
        }
    }
}
