// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.ToolResults.V1Beta3
{
    public static class GetHistory
    {
        /// <summary>
        /// Gets a History. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the History does not exist
        /// </summary>
        public static Task<GetHistoryResult> InvokeAsync(GetHistoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetHistoryResult>("google-native:toolresults/v1beta3:getHistory", args ?? new GetHistoryArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a History. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the History does not exist
        /// </summary>
        public static Output<GetHistoryResult> Invoke(GetHistoryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetHistoryResult>("google-native:toolresults/v1beta3:getHistory", args ?? new GetHistoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHistoryArgs : Pulumi.InvokeArgs
    {
        [Input("historyId", required: true)]
        public string HistoryId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetHistoryArgs()
        {
        }
    }

    public sealed class GetHistoryInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("historyId", required: true)]
        public Input<string> HistoryId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetHistoryInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetHistoryResult
    {
        /// <summary>
        /// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
        /// </summary>
        public readonly string HistoryId;
        /// <summary>
        /// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
        /// </summary>
        public readonly string TestPlatform;

        [OutputConstructor]
        private GetHistoryResult(
            string displayName,

            string historyId,

            string name,

            string testPlatform)
        {
            DisplayName = displayName;
            HistoryId = historyId;
            Name = name;
            TestPlatform = testPlatform;
        }
    }
}
