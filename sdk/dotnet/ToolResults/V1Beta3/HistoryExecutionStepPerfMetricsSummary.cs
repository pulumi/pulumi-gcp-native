// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.ToolResults.V1Beta3
{
    /// <summary>
    /// Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not exist
    /// </summary>
    [GoogleCloudResourceType("google-cloud:toolresults/v1beta3:HistoryExecutionStepPerfMetricsSummary")]
    public partial class HistoryExecutionStepPerfMetricsSummary : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a HistoryExecutionStepPerfMetricsSummary resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HistoryExecutionStepPerfMetricsSummary(string name, HistoryExecutionStepPerfMetricsSummaryArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:toolresults/v1beta3:HistoryExecutionStepPerfMetricsSummary", name, args ?? new HistoryExecutionStepPerfMetricsSummaryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HistoryExecutionStepPerfMetricsSummary(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:toolresults/v1beta3:HistoryExecutionStepPerfMetricsSummary", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HistoryExecutionStepPerfMetricsSummary resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HistoryExecutionStepPerfMetricsSummary Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new HistoryExecutionStepPerfMetricsSummary(name, id, options);
        }
    }

    public sealed class HistoryExecutionStepPerfMetricsSummaryArgs : Pulumi.ResourceArgs
    {
        [Input("appStartTime")]
        public Input<Inputs.AppStartTimeArgs>? AppStartTime { get; set; }

        /// <summary>
        /// A tool results execution ID. @OutputOnly
        /// </summary>
        [Input("executionId", required: true)]
        public Input<string> ExecutionId { get; set; } = null!;

        /// <summary>
        /// Graphics statistics for the entire run. Statistics are reset at the beginning of the run and collected at the end of the run.
        /// </summary>
        [Input("graphicsStats")]
        public Input<Inputs.GraphicsStatsArgs>? GraphicsStats { get; set; }

        /// <summary>
        /// A tool results history ID. @OutputOnly
        /// </summary>
        [Input("historyId", required: true)]
        public Input<string> HistoryId { get; set; } = null!;

        /// <summary>
        /// Describes the environment in which the performance metrics were collected
        /// </summary>
        [Input("perfEnvironment")]
        public Input<Inputs.PerfEnvironmentArgs>? PerfEnvironment { get; set; }

        [Input("perfMetrics")]
        private InputList<string>? _perfMetrics;

        /// <summary>
        /// Set of resource collected
        /// </summary>
        public InputList<string> PerfMetrics
        {
            get => _perfMetrics ?? (_perfMetrics = new InputList<string>());
            set => _perfMetrics = value;
        }

        /// <summary>
        /// The cloud project @OutputOnly
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// A tool results step ID. @OutputOnly
        /// </summary>
        [Input("stepId", required: true)]
        public Input<string> StepId { get; set; } = null!;

        public HistoryExecutionStepPerfMetricsSummaryArgs()
        {
        }
    }
}
