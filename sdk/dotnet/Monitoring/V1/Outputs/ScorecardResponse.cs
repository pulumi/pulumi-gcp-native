// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V1.Outputs
{

    /// <summary>
    /// A widget showing the latest value of a metric, and how this value relates to one or more thresholds.
    /// </summary>
    [OutputType]
    public sealed class ScorecardResponse
    {
        /// <summary>
        /// Will cause the scorecard to show a gauge chart.
        /// </summary>
        public readonly Outputs.GaugeViewResponse GaugeView;
        /// <summary>
        /// Will cause the scorecard to show a spark chart.
        /// </summary>
        public readonly Outputs.SparkChartViewResponse SparkChartView;
        /// <summary>
        /// The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)As an example, consider a scorecard with the following four thresholds: { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', }Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state.
        /// </summary>
        public readonly ImmutableArray<Outputs.ThresholdResponse> Thresholds;
        /// <summary>
        /// Fields for querying time series data from the Stackdriver metrics API.
        /// </summary>
        public readonly Outputs.TimeSeriesQueryResponse TimeSeriesQuery;

        [OutputConstructor]
        private ScorecardResponse(
            Outputs.GaugeViewResponse gaugeView,

            Outputs.SparkChartViewResponse sparkChartView,

            ImmutableArray<Outputs.ThresholdResponse> thresholds,

            Outputs.TimeSeriesQueryResponse timeSeriesQuery)
        {
            GaugeView = gaugeView;
            SparkChartView = sparkChartView;
            Thresholds = thresholds;
            TimeSeriesQuery = timeSeriesQuery;
        }
    }
}
