// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3.Outputs
{

    /// <summary>
    /// A WindowsBasedSli defines good_service as the count of time windows for which the provided service was of good quality. Criteria for determining if service was good are embedded in the window_criterion.
    /// </summary>
    [OutputType]
    public sealed class WindowsBasedSliResponse
    {
        /// <summary>
        /// A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
        /// </summary>
        public readonly string GoodBadMetricFilter;
        /// <summary>
        /// A window is good if its performance is high enough.
        /// </summary>
        public readonly Outputs.PerformanceThresholdResponse GoodTotalRatioThreshold;
        /// <summary>
        /// A window is good if the metric's value is in a good range, averaged across returned streams.
        /// </summary>
        public readonly Outputs.MetricRangeResponse MetricMeanInRange;
        /// <summary>
        /// A window is good if the metric's value is in a good range, summed across returned streams.
        /// </summary>
        public readonly Outputs.MetricRangeResponse MetricSumInRange;
        /// <summary>
        /// Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
        /// </summary>
        public readonly string WindowPeriod;

        [OutputConstructor]
        private WindowsBasedSliResponse(
            string goodBadMetricFilter,

            Outputs.PerformanceThresholdResponse goodTotalRatioThreshold,

            Outputs.MetricRangeResponse metricMeanInRange,

            Outputs.MetricRangeResponse metricSumInRange,

            string windowPeriod)
        {
            GoodBadMetricFilter = goodBadMetricFilter;
            GoodTotalRatioThreshold = goodTotalRatioThreshold;
            MetricMeanInRange = metricMeanInRange;
            MetricSumInRange = metricSumInRange;
            WindowPeriod = windowPeriod;
        }
    }
}
