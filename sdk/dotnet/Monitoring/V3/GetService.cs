// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3
{
    public static class GetService
    {
        /// <summary>
        /// Get the named Service.
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("google-native:monitoring/v3:getService", args ?? new GetServiceArgs(), options.WithVersion());
    }


    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        [Input("v3Id", required: true)]
        public string V3Id { get; set; } = null!;

        [Input("v3Id1", required: true)]
        public string V3Id1 { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        /// <summary>
        /// Type used for App Engine services.
        /// </summary>
        public readonly Outputs.AppEngineResponse AppEngine;
        /// <summary>
        /// Type used for Cloud Endpoints services.
        /// </summary>
        public readonly Outputs.CloudEndpointsResponse CloudEndpoints;
        /// <summary>
        /// Type used for Istio services that live in a Kubernetes cluster.
        /// </summary>
        public readonly Outputs.ClusterIstioResponse ClusterIstio;
        /// <summary>
        /// Custom service type.
        /// </summary>
        public readonly Outputs.CustomResponse Custom;
        /// <summary>
        /// Name used for UI elements listing this Service.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
        /// </summary>
        public readonly Outputs.IstioCanonicalServiceResponse IstioCanonicalService;
        /// <summary>
        /// Type used for Istio services scoped to an Istio mesh.
        /// </summary>
        public readonly Outputs.MeshIstioResponse MeshIstio;
        /// <summary>
        /// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID] 
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configuration for how to query telemetry on a Service.
        /// </summary>
        public readonly Outputs.TelemetryResponse Telemetry;

        [OutputConstructor]
        private GetServiceResult(
            Outputs.AppEngineResponse appEngine,

            Outputs.CloudEndpointsResponse cloudEndpoints,

            Outputs.ClusterIstioResponse clusterIstio,

            Outputs.CustomResponse custom,

            string displayName,

            Outputs.IstioCanonicalServiceResponse istioCanonicalService,

            Outputs.MeshIstioResponse meshIstio,

            string name,

            Outputs.TelemetryResponse telemetry)
        {
            AppEngine = appEngine;
            CloudEndpoints = cloudEndpoints;
            ClusterIstio = clusterIstio;
            Custom = custom;
            DisplayName = displayName;
            IstioCanonicalService = istioCanonicalService;
            MeshIstio = meshIstio;
            Name = name;
            Telemetry = telemetry;
        }
    }
}
