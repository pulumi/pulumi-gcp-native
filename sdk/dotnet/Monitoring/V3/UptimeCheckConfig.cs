// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3
{
    /// <summary>
    /// Creates a new Uptime check configuration.
    /// </summary>
    [GoogleNativeResourceType("google-native:monitoring/v3:UptimeCheckConfig")]
    public partial class UptimeCheckConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// The type of checkers to use to execute the Uptime check.
        /// </summary>
        [Output("checkerType")]
        public Output<string> CheckerType { get; private set; } = null!;

        /// <summary>
        /// The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
        /// </summary>
        [Output("contentMatchers")]
        public Output<ImmutableArray<Outputs.ContentMatcherResponse>> ContentMatchers { get; private set; } = null!;

        /// <summary>
        /// A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Contains information needed to make an HTTP or HTTPS check.
        /// </summary>
        [Output("httpCheck")]
        public Output<Outputs.HttpCheckResponse> HttpCheck { get; private set; } = null!;

        /// <summary>
        /// The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
        /// </summary>
        [Output("internalCheckers")]
        public Output<ImmutableArray<Outputs.InternalCheckerResponse>> InternalCheckers { get; private set; } = null!;

        /// <summary>
        /// If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
        /// </summary>
        [Output("isInternal")]
        public Output<bool> IsInternal { get; private set; } = null!;

        /// <summary>
        /// The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are valid for this field: uptime_url, gce_instance, gae_app, aws_ec2_instance, aws_elb_load_balancer k8s_service servicedirectory_service
        /// </summary>
        [Output("monitoredResource")]
        public Output<Outputs.MonitoredResourceResponse> MonitoredResource { get; private set; } = null!;

        /// <summary>
        /// A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
        /// </summary>
        [Output("period")]
        public Output<string> Period { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The group resource associated with the configuration.
        /// </summary>
        [Output("resourceGroup")]
        public Output<Outputs.ResourceGroupResponse> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
        /// </summary>
        [Output("selectedRegions")]
        public Output<ImmutableArray<string>> SelectedRegions { get; private set; } = null!;

        /// <summary>
        /// Contains information needed to make a TCP check.
        /// </summary>
        [Output("tcpCheck")]
        public Output<Outputs.TcpCheckResponse> TcpCheck { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
        /// </summary>
        [Output("timeout")]
        public Output<string> Timeout { get; private set; } = null!;


        /// <summary>
        /// Create a UptimeCheckConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UptimeCheckConfig(string name, UptimeCheckConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:monitoring/v3:UptimeCheckConfig", name, args ?? new UptimeCheckConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UptimeCheckConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:monitoring/v3:UptimeCheckConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UptimeCheckConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UptimeCheckConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new UptimeCheckConfig(name, id, options);
        }
    }

    public sealed class UptimeCheckConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of checkers to use to execute the Uptime check.
        /// </summary>
        [Input("checkerType")]
        public Input<Pulumi.GoogleNative.Monitoring.V3.UptimeCheckConfigCheckerType>? CheckerType { get; set; }

        [Input("contentMatchers")]
        private InputList<Inputs.ContentMatcherArgs>? _contentMatchers;

        /// <summary>
        /// The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
        /// </summary>
        public InputList<Inputs.ContentMatcherArgs> ContentMatchers
        {
            get => _contentMatchers ?? (_contentMatchers = new InputList<Inputs.ContentMatcherArgs>());
            set => _contentMatchers = value;
        }

        /// <summary>
        /// A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Contains information needed to make an HTTP or HTTPS check.
        /// </summary>
        [Input("httpCheck")]
        public Input<Inputs.HttpCheckArgs>? HttpCheck { get; set; }

        [Input("internalCheckers")]
        private InputList<Inputs.InternalCheckerArgs>? _internalCheckers;

        /// <summary>
        /// The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
        /// </summary>
        public InputList<Inputs.InternalCheckerArgs> InternalCheckers
        {
            get => _internalCheckers ?? (_internalCheckers = new InputList<Inputs.InternalCheckerArgs>());
            set => _internalCheckers = value;
        }

        /// <summary>
        /// If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
        /// </summary>
        [Input("isInternal")]
        public Input<bool>? IsInternal { get; set; }

        /// <summary>
        /// The monitored resource (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The following monitored resource types are valid for this field: uptime_url, gce_instance, gae_app, aws_ec2_instance, aws_elb_load_balancer k8s_service servicedirectory_service
        /// </summary>
        [Input("monitoredResource")]
        public Input<Inputs.MonitoredResourceArgs>? MonitoredResource { get; set; }

        /// <summary>
        /// A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The group resource associated with the configuration.
        /// </summary>
        [Input("resourceGroup")]
        public Input<Inputs.ResourceGroupArgs>? ResourceGroup { get; set; }

        [Input("selectedRegions")]
        private InputList<Pulumi.GoogleNative.Monitoring.V3.UptimeCheckConfigSelectedRegionsItem>? _selectedRegions;

        /// <summary>
        /// The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
        /// </summary>
        public InputList<Pulumi.GoogleNative.Monitoring.V3.UptimeCheckConfigSelectedRegionsItem> SelectedRegions
        {
            get => _selectedRegions ?? (_selectedRegions = new InputList<Pulumi.GoogleNative.Monitoring.V3.UptimeCheckConfigSelectedRegionsItem>());
            set => _selectedRegions = value;
        }

        /// <summary>
        /// Contains information needed to make a TCP check.
        /// </summary>
        [Input("tcpCheck")]
        public Input<Inputs.TcpCheckArgs>? TcpCheck { get; set; }

        /// <summary>
        /// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        public UptimeCheckConfigArgs()
        {
        }
    }
}
