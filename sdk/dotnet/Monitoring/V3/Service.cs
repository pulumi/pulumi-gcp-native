// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3
{
    /// <summary>
    /// Create a Service.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:monitoring/v3:Service")]
    public partial class Service : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Type used for App Engine services.
        /// </summary>
        [Output("appEngine")]
        public Output<Outputs.AppEngineResponse> AppEngine { get; private set; } = null!;

        /// <summary>
        /// Type used for Cloud Endpoints services.
        /// </summary>
        [Output("cloudEndpoints")]
        public Output<Outputs.CloudEndpointsResponse> CloudEndpoints { get; private set; } = null!;

        /// <summary>
        /// Type used for Cloud Run services.
        /// </summary>
        [Output("cloudRun")]
        public Output<Outputs.CloudRunResponse> CloudRun { get; private set; } = null!;

        /// <summary>
        /// Type used for Istio services that live in a Kubernetes cluster.
        /// </summary>
        [Output("clusterIstio")]
        public Output<Outputs.ClusterIstioResponse> ClusterIstio { get; private set; } = null!;

        /// <summary>
        /// Custom service type.
        /// </summary>
        [Output("custom")]
        public Output<Outputs.CustomResponse> Custom { get; private set; } = null!;

        /// <summary>
        /// Name used for UI elements listing this Service.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Type used for GKE Namespaces.
        /// </summary>
        [Output("gkeNamespace")]
        public Output<Outputs.GkeNamespaceResponse> GkeNamespace { get; private set; } = null!;

        /// <summary>
        /// Type used for GKE Services (the Kubernetes concept of a service).
        /// </summary>
        [Output("gkeService")]
        public Output<Outputs.GkeServiceResponse> GkeService { get; private set; } = null!;

        /// <summary>
        /// Type used for GKE Workloads.
        /// </summary>
        [Output("gkeWorkload")]
        public Output<Outputs.GkeWorkloadResponse> GkeWorkload { get; private set; } = null!;

        /// <summary>
        /// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
        /// </summary>
        [Output("istioCanonicalService")]
        public Output<Outputs.IstioCanonicalServiceResponse> IstioCanonicalService { get; private set; } = null!;

        /// <summary>
        /// Type used for Istio services scoped to an Istio mesh.
        /// </summary>
        [Output("meshIstio")]
        public Output<Outputs.MeshIstioResponse> MeshIstio { get; private set; } = null!;

        /// <summary>
        /// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID] 
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
        /// </summary>
        [Output("serviceId")]
        public Output<string?> ServiceId { get; private set; } = null!;

        /// <summary>
        /// Configuration for how to query telemetry on a Service.
        /// </summary>
        [Output("telemetry")]
        public Output<Outputs.TelemetryResponse> Telemetry { get; private set; } = null!;

        /// <summary>
        /// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
        /// </summary>
        [Output("userLabels")]
        public Output<ImmutableDictionary<string, string>> UserLabels { get; private set; } = null!;

        [Output("v3Id")]
        public Output<string> V3Id { get; private set; } = null!;

        [Output("v3Id1")]
        public Output<string> V3Id1 { get; private set; } = null!;


        /// <summary>
        /// Create a Service resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Service(string name, ServiceArgs args, CustomResourceOptions? options = null)
            : base("google-native:monitoring/v3:Service", name, args ?? new ServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Service(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:monitoring/v3:Service", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "v3Id",
                    "v3Id1",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Service resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Service Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Service(name, id, options);
        }
    }

    public sealed class ServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type used for App Engine services.
        /// </summary>
        [Input("appEngine")]
        public Input<Inputs.AppEngineArgs>? AppEngine { get; set; }

        /// <summary>
        /// Type used for Cloud Endpoints services.
        /// </summary>
        [Input("cloudEndpoints")]
        public Input<Inputs.CloudEndpointsArgs>? CloudEndpoints { get; set; }

        /// <summary>
        /// Type used for Cloud Run services.
        /// </summary>
        [Input("cloudRun")]
        public Input<Inputs.CloudRunArgs>? CloudRun { get; set; }

        /// <summary>
        /// Type used for Istio services that live in a Kubernetes cluster.
        /// </summary>
        [Input("clusterIstio")]
        public Input<Inputs.ClusterIstioArgs>? ClusterIstio { get; set; }

        /// <summary>
        /// Custom service type.
        /// </summary>
        [Input("custom")]
        public Input<Inputs.CustomArgs>? Custom { get; set; }

        /// <summary>
        /// Name used for UI elements listing this Service.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Type used for GKE Namespaces.
        /// </summary>
        [Input("gkeNamespace")]
        public Input<Inputs.GkeNamespaceArgs>? GkeNamespace { get; set; }

        /// <summary>
        /// Type used for GKE Services (the Kubernetes concept of a service).
        /// </summary>
        [Input("gkeService")]
        public Input<Inputs.GkeServiceArgs>? GkeService { get; set; }

        /// <summary>
        /// Type used for GKE Workloads.
        /// </summary>
        [Input("gkeWorkload")]
        public Input<Inputs.GkeWorkloadArgs>? GkeWorkload { get; set; }

        /// <summary>
        /// Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
        /// </summary>
        [Input("istioCanonicalService")]
        public Input<Inputs.IstioCanonicalServiceArgs>? IstioCanonicalService { get; set; }

        /// <summary>
        /// Type used for Istio services scoped to an Istio mesh.
        /// </summary>
        [Input("meshIstio")]
        public Input<Inputs.MeshIstioArgs>? MeshIstio { get; set; }

        /// <summary>
        /// Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID] 
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional. The Service id to use for this Service. If omitted, an id will be generated instead. Must match the pattern [a-z0-9\-]+
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        /// <summary>
        /// Configuration for how to query telemetry on a Service.
        /// </summary>
        [Input("telemetry")]
        public Input<Inputs.TelemetryArgs>? Telemetry { get; set; }

        [Input("userLabels")]
        private InputMap<string>? _userLabels;

        /// <summary>
        /// Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
        /// </summary>
        public InputMap<string> UserLabels
        {
            get => _userLabels ?? (_userLabels = new InputMap<string>());
            set => _userLabels = value;
        }

        [Input("v3Id", required: true)]
        public Input<string> V3Id { get; set; } = null!;

        [Input("v3Id1", required: true)]
        public Input<string> V3Id1 { get; set; } = null!;

        public ServiceArgs()
        {
        }
        public static new ServiceArgs Empty => new ServiceArgs();
    }
}
