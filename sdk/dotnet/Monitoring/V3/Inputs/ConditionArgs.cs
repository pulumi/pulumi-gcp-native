// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3.Inputs
{

    /// <summary>
    /// A condition is a true/false test that determines when an alerting policy should open an incident. If a condition evaluates to true, it signifies that something is wrong.
    /// </summary>
    public sealed class ConditionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A condition that checks that a time series continues to receive new data points.
        /// </summary>
        [Input("conditionAbsent")]
        public Input<Inputs.MetricAbsenceArgs>? ConditionAbsent { get; set; }

        /// <summary>
        /// A condition that checks for log messages matching given constraints. If set, no other conditions can be present.
        /// </summary>
        [Input("conditionMatchedLog")]
        public Input<Inputs.LogMatchArgs>? ConditionMatchedLog { get; set; }

        /// <summary>
        /// A condition that uses the Monitoring Query Language to define alerts.
        /// </summary>
        [Input("conditionMonitoringQueryLanguage")]
        public Input<Inputs.MonitoringQueryLanguageConditionArgs>? ConditionMonitoringQueryLanguage { get; set; }

        /// <summary>
        /// A condition that compares a time series against a threshold.
        /// </summary>
        [Input("conditionThreshold")]
        public Input<Inputs.MetricThresholdArgs>? ConditionThreshold { get; set; }

        /// <summary>
        /// A short name or phrase used to identify the condition in dashboards, notifications, and incidents. To avoid confusion, don't use the same display name for multiple conditions in the same policy.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Required if the condition exists. The unique resource name for this condition. Its format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID] [CONDITION_ID] is assigned by Cloud Monitoring when the condition is created as part of a new or updated alerting policy.When calling the alertPolicies.create method, do not include the name field in the conditions of the requested alerting policy. Cloud Monitoring creates the condition identifiers and includes them in the new policy.When calling the alertPolicies.update method to update a policy, including a condition name causes the existing condition to be updated. Conditions without names are added to the updated policy. Existing conditions are deleted if they are not updated.Best practice is to preserve [CONDITION_ID] if you make only small changes, such as those to condition thresholds, durations, or trigger values. Otherwise, treat the change as a new condition and let the existing condition be deleted.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConditionArgs()
        {
        }
    }
}
