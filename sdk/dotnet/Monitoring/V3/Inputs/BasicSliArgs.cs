// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Monitoring.V3.Inputs
{

    /// <summary>
    /// An SLI measuring performance on a well-known service type. Performance will be computed on the basis of pre-defined metrics. The type of the service_resource determines the metrics to use and the service_resource.labels and metric_labels are used to construct a monitoring filter to filter that metric down to just the data relevant to this service.
    /// </summary>
    public sealed class BasicSliArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Good service is defined to be the count of requests made to this service that return successfully.
        /// </summary>
        [Input("availability")]
        public Input<Inputs.AvailabilityCriteriaArgs>? Availability { get; set; }

        /// <summary>
        /// Good service is defined to be the count of requests made to this service that are fast enough with respect to latency.threshold.
        /// </summary>
        [Input("latency")]
        public Input<Inputs.LatencyCriteriaArgs>? Latency { get; set; }

        [Input("location")]
        private InputList<string>? _location;

        /// <summary>
        /// OPTIONAL: The set of locations to which this SLI is relevant. Telemetry from other locations will not be used to calculate performance for this SLI. If omitted, this SLI applies to all locations in which the Service has activity. For service types that don't support breaking down by location, setting this field will result in an error.
        /// </summary>
        public InputList<string> Location
        {
            get => _location ?? (_location = new InputList<string>());
            set => _location = value;
        }

        [Input("method")]
        private InputList<string>? _method;

        /// <summary>
        /// OPTIONAL: The set of RPCs to which this SLI is relevant. Telemetry from other methods will not be used to calculate performance for this SLI. If omitted, this SLI applies to all the Service's methods. For service types that don't support breaking down by method, setting this field will result in an error.
        /// </summary>
        public InputList<string> Method
        {
            get => _method ?? (_method = new InputList<string>());
            set => _method = value;
        }

        [Input("version")]
        private InputList<string>? _version;

        /// <summary>
        /// OPTIONAL: The set of API versions to which this SLI is relevant. Telemetry from other API versions will not be used to calculate performance for this SLI. If omitted, this SLI applies to all API versions. For service types that don't support breaking down by version, setting this field will result in an error.
        /// </summary>
        public InputList<string> Version
        {
            get => _version ?? (_version = new InputList<string>());
            set => _version = value;
        }

        public BasicSliArgs()
        {
        }
    }
}
