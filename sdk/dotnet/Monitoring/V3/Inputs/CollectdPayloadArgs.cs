// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GcpNative.Monitoring.V3.Inputs
{

    /// <summary>
    /// A collection of data points sent from a collectd-based plugin. See the collectd documentation for more information.
    /// </summary>
    public sealed class CollectdPayloadArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The end time of the interval.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The measurement metadata. Example: "process_id" -&gt; 12345
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The name of the plugin. Example: "disk".
        /// </summary>
        [Input("plugin")]
        public Input<string>? Plugin { get; set; }

        /// <summary>
        /// The instance name of the plugin Example: "hdcl".
        /// </summary>
        [Input("pluginInstance")]
        public Input<string>? PluginInstance { get; set; }

        /// <summary>
        /// The start time of the interval.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The measurement type. Example: "memory".
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The measurement type instance. Example: "used".
        /// </summary>
        [Input("typeInstance")]
        public Input<string>? TypeInstance { get; set; }

        [Input("values")]
        private InputList<Inputs.CollectdValueArgs>? _values;

        /// <summary>
        /// The measured values during this time interval. Each value must have a different data_source_name.
        /// </summary>
        public InputList<Inputs.CollectdValueArgs> Values
        {
            get => _values ?? (_values = new InputList<Inputs.CollectdValueArgs>());
            set => _values = value;
        }

        public CollectdPayloadArgs()
        {
        }
    }
}
