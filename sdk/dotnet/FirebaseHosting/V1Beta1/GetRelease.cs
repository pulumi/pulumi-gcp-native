// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.FirebaseHosting.V1Beta1
{
    public static class GetRelease
    {
        /// <summary>
        /// Gets the specified release for a site or channel. When used to get a release for a site, this can get releases for both the default `live` channel and any active preview channels for the specified site.
        /// </summary>
        public static Task<GetReleaseResult> InvokeAsync(GetReleaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReleaseResult>("google-native:firebasehosting/v1beta1:getRelease", args ?? new GetReleaseArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified release for a site or channel. When used to get a release for a site, this can get releases for both the default `live` channel and any active preview channels for the specified site.
        /// </summary>
        public static Output<GetReleaseResult> Invoke(GetReleaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReleaseResult>("google-native:firebasehosting/v1beta1:getRelease", args ?? new GetReleaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReleaseArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelId", required: true)]
        public string ChannelId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("releaseId", required: true)]
        public string ReleaseId { get; set; } = null!;

        [Input("siteId", required: true)]
        public string SiteId { get; set; } = null!;

        public GetReleaseArgs()
        {
        }
        public static new GetReleaseArgs Empty => new GetReleaseArgs();
    }

    public sealed class GetReleaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelId", required: true)]
        public Input<string> ChannelId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("releaseId", required: true)]
        public Input<string> ReleaseId { get; set; } = null!;

        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        public GetReleaseInvokeArgs()
        {
        }
        public static new GetReleaseInvokeArgs Empty => new GetReleaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetReleaseResult
    {
        /// <summary>
        /// The deploy description when the release was created. The value can be up to 512 characters.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The time at which the version is set to be public.
        /// </summary>
        public readonly string ReleaseTime;
        /// <summary>
        /// Identifies the user who created the release.
        /// </summary>
        public readonly Outputs.ActingUserResponse ReleaseUser;
        /// <summary>
        /// Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The configuration and content that was released.
        /// </summary>
        public readonly Outputs.VersionResponse Version;

        [OutputConstructor]
        private GetReleaseResult(
            string message,

            string name,

            string releaseTime,

            Outputs.ActingUserResponse releaseUser,

            string type,

            Outputs.VersionResponse version)
        {
            Message = message;
            Name = name;
            ReleaseTime = releaseTime;
            ReleaseUser = releaseUser;
            Type = type;
            Version = version;
        }
    }
}
