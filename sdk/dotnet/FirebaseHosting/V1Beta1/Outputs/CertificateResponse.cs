// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.FirebaseHosting.V1Beta1.Outputs
{

    /// <summary>
    /// An SSL certificate used to provide end-to-end encryption for requests against your domain name. A `Certificate` can be an actual SSL certificate or, for newly-created custom domains, Hosting's intent to create one.
    /// </summary>
    [OutputType]
    public sealed class CertificateResponse
    {
        /// <summary>
        /// The certificate's creation time. For `TEMPORARY` certs this is the time Hosting first generated challenges for your domain name. For all other cert types, it's the time the actual cert was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The certificate's expiration time. After this time, the cert can no longer be used to provide secure communication between Hosting and your site's visitors.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// A set of errors Hosting encountered when attempting to create a cert for your domain name. Resolve these issues to ensure Hosting is able to provide secure communication with your site's visitors.
        /// </summary>
        public readonly ImmutableArray<Outputs.StatusResponse> Issues;
        /// <summary>
        /// The state of the certificate. Only the `CERT_ACTIVE` and `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name. If the state is `PROPAGATING` and Hosting had an active cert for the domain name before, that formerly-active cert provides SSL coverage for the domain name until the current cert propagates.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The certificate's type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A set of ACME challenges you can add to your DNS records or existing, non-Hosting hosting provider to allow Hosting to create an SSL certificate for your domain name before you point traffic toward hosting. You can use thse challenges as part of a zero downtime transition from your old provider to Hosting.
        /// </summary>
        public readonly Outputs.CertVerificationResponse Verification;

        [OutputConstructor]
        private CertificateResponse(
            string createTime,

            string expireTime,

            ImmutableArray<Outputs.StatusResponse> issues,

            string state,

            string type,

            Outputs.CertVerificationResponse verification)
        {
            CreateTime = createTime;
            ExpireTime = expireTime;
            Issues = issues;
            State = state;
            Type = type;
            Verification = verification;
        }
    }
}
