// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.PolicySimulator.V1Beta
{
    public static class GetOrgPolicyViolationsPreview
    {
        /// <summary>
        /// GetOrgPolicyViolationsPreview gets the specified OrgPolicyViolationsPreview. Each OrgPolicyViolationsPreview is available for at least 7 days.
        /// </summary>
        public static Task<GetOrgPolicyViolationsPreviewResult> InvokeAsync(GetOrgPolicyViolationsPreviewArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrgPolicyViolationsPreviewResult>("google-native:policysimulator/v1beta:getOrgPolicyViolationsPreview", args ?? new GetOrgPolicyViolationsPreviewArgs(), options.WithDefaults());

        /// <summary>
        /// GetOrgPolicyViolationsPreview gets the specified OrgPolicyViolationsPreview. Each OrgPolicyViolationsPreview is available for at least 7 days.
        /// </summary>
        public static Output<GetOrgPolicyViolationsPreviewResult> Invoke(GetOrgPolicyViolationsPreviewInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrgPolicyViolationsPreviewResult>("google-native:policysimulator/v1beta:getOrgPolicyViolationsPreview", args ?? new GetOrgPolicyViolationsPreviewInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrgPolicyViolationsPreviewArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("orgPolicyViolationsPreviewId", required: true)]
        public string OrgPolicyViolationsPreviewId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrgPolicyViolationsPreviewArgs()
        {
        }
        public static new GetOrgPolicyViolationsPreviewArgs Empty => new GetOrgPolicyViolationsPreviewArgs();
    }

    public sealed class GetOrgPolicyViolationsPreviewInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("orgPolicyViolationsPreviewId", required: true)]
        public Input<string> OrgPolicyViolationsPreviewId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrgPolicyViolationsPreviewInvokeArgs()
        {
        }
        public static new GetOrgPolicyViolationsPreviewInvokeArgs Empty => new GetOrgPolicyViolationsPreviewInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrgPolicyViolationsPreviewResult
    {
        /// <summary>
        /// Time when this `OrgPolicyViolationsPreview` was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The names of the constraints against which all `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains `PolicyOverlay` then it contains the name of the configured custom constraint, applicable to the specified policies. Otherwise it contains the name of the constraint specified in `CustomConstraintOverlay`. Format: `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
        /// </summary>
        public readonly ImmutableArray<string> CustomConstraints;
        /// <summary>
        /// The resource name of the `OrgPolicyViolationsPreview`. It has the following format: `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example: `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The proposed changes we are previewing violations for.
        /// </summary>
        public readonly Outputs.GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayResponse Overlay;
        /// <summary>
        /// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
        /// </summary>
        public readonly Outputs.GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCountsResponse ResourceCounts;
        /// <summary>
        /// The state of the `OrgPolicyViolationsPreview`.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple constraints.
        /// </summary>
        public readonly int ViolationsCount;

        [OutputConstructor]
        private GetOrgPolicyViolationsPreviewResult(
            string createTime,

            ImmutableArray<string> customConstraints,

            string name,

            Outputs.GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayResponse overlay,

            Outputs.GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCountsResponse resourceCounts,

            string state,

            int violationsCount)
        {
            CreateTime = createTime;
            CustomConstraints = customConstraints;
            Name = name;
            Overlay = overlay;
            ResourceCounts = resourceCounts;
            State = state;
            ViolationsCount = violationsCount;
        }
    }
}
