// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.PolicySimulator.V1
{
    /// <summary>
    /// CreateOrgPolicyViolationsPreview creates an OrgPolicyViolationsPreview for the proposed changes in the provided OrgPolicyViolationsPreview.OrgPolicyOverlay. The changes to OrgPolicy are specified by this `OrgPolicyOverlay`. The resources to scan are inferred from these specified changes.
    /// Auto-naming is currently not supported for this resource.
    /// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
    /// on Google Cloud even though it will be deleted from Pulumi state.
    /// </summary>
    [GoogleNativeResourceType("google-native:policysimulator/v1:OrgPolicyViolationsPreview")]
    public partial class OrgPolicyViolationsPreview : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time when this `OrgPolicyViolationsPreview` was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The names of the constraints against which all `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains `PolicyOverlay` then it contains the name of the configured custom constraint, applicable to the specified policies. Otherwise it contains the name of the constraint specified in `CustomConstraintOverlay`. Format: `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
        /// </summary>
        [Output("customConstraints")]
        public Output<ImmutableArray<string>> CustomConstraints { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the `OrgPolicyViolationsPreview`. It has the following format: `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example: `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional. An optional user-specified ID for the OrgPolicyViolationsPreview. If not provided, a random ID will be generated.
        /// </summary>
        [Output("orgPolicyViolationsPreviewId")]
        public Output<string?> OrgPolicyViolationsPreviewId { get; private set; } = null!;

        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The proposed changes we are previewing violations for.
        /// </summary>
        [Output("overlay")]
        public Output<Outputs.GoogleCloudPolicysimulatorV1OrgPolicyOverlayResponse> Overlay { get; private set; } = null!;

        /// <summary>
        /// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
        /// </summary>
        [Output("resourceCounts")]
        public Output<Outputs.GoogleCloudPolicysimulatorV1OrgPolicyViolationsPreviewResourceCountsResponse> ResourceCounts { get; private set; } = null!;

        /// <summary>
        /// The state of the `OrgPolicyViolationsPreview`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple constraints.
        /// </summary>
        [Output("violationsCount")]
        public Output<int> ViolationsCount { get; private set; } = null!;


        /// <summary>
        /// Create a OrgPolicyViolationsPreview resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrgPolicyViolationsPreview(string name, OrgPolicyViolationsPreviewArgs args, CustomResourceOptions? options = null)
            : base("google-native:policysimulator/v1:OrgPolicyViolationsPreview", name, args ?? new OrgPolicyViolationsPreviewArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrgPolicyViolationsPreview(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:policysimulator/v1:OrgPolicyViolationsPreview", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "organizationId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrgPolicyViolationsPreview resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrgPolicyViolationsPreview Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OrgPolicyViolationsPreview(name, id, options);
        }
    }

    public sealed class OrgPolicyViolationsPreviewArgs : global::Pulumi.ResourceArgs
    {
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. An optional user-specified ID for the OrgPolicyViolationsPreview. If not provided, a random ID will be generated.
        /// </summary>
        [Input("orgPolicyViolationsPreviewId")]
        public Input<string>? OrgPolicyViolationsPreviewId { get; set; }

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The proposed changes we are previewing violations for.
        /// </summary>
        [Input("overlay", required: true)]
        public Input<Inputs.GoogleCloudPolicysimulatorV1OrgPolicyOverlayArgs> Overlay { get; set; } = null!;

        public OrgPolicyViolationsPreviewArgs()
        {
        }
        public static new OrgPolicyViolationsPreviewArgs Empty => new OrgPolicyViolationsPreviewArgs();
    }
}
