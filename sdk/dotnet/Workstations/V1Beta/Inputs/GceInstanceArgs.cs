// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Workstations.V1Beta.Inputs
{

    /// <summary>
    /// A runtime using a Compute Engine instance.
    /// </summary>
    public sealed class GceInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<Inputs.AcceleratorArgs>? _accelerators;

        /// <summary>
        /// A list of the type and count of accelerator cards attached to the instance.
        /// </summary>
        public InputList<Inputs.AcceleratorArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<Inputs.AcceleratorArgs>());
            set => _accelerators = value;
        }

        /// <summary>
        /// Size of the boot disk in GB. Defaults to 50.
        /// </summary>
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        /// <summary>
        /// A set of Compute Engine Confidential VM instance options.
        /// </summary>
        [Input("confidentialInstanceConfig")]
        public Input<Inputs.GceConfidentialInstanceConfigArgs>? ConfidentialInstanceConfig { get; set; }

        /// <summary>
        /// Whether instances have no public IP address.
        /// </summary>
        [Input("disablePublicIpAddresses")]
        public Input<bool>? DisablePublicIpAddresses { get; set; }

        /// <summary>
        /// The name of a Compute Engine machine type.
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        /// <summary>
        /// Number of instances to pool for faster workstation startup.
        /// </summary>
        [Input("poolSize")]
        public Input<int>? PoolSize { get; set; }

        /// <summary>
        /// Email address of the service account used on VM instances used to support this configuration. If not set, VMs run with a Google-managed service account. This service account must have permission to pull the specified container image; otherwise, the image must be publicly accessible.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// A set of Compute Engine Shielded instance options.
        /// </summary>
        [Input("shieldedInstanceConfig")]
        public Input<Inputs.GceShieldedInstanceConfigArgs>? ShieldedInstanceConfig { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Network tags to add to the Compute Engine machines backing the Workstations.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GceInstanceArgs()
        {
        }
        public static new GceInstanceArgs Empty => new GceInstanceArgs();
    }
}
