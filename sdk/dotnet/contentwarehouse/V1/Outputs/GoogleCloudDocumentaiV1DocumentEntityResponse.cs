// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.contentwarehouse.V1.Outputs
{

    /// <summary>
    /// An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudDocumentaiV1DocumentEntityResponse
    {
        /// <summary>
        /// Optional. Confidence of detected Schema entity. Range [0, 1].
        /// </summary>
        public readonly double Confidence;
        /// <summary>
        /// Optional. Deprecated. Use `id` field instead.
        /// </summary>
        public readonly string MentionId;
        /// <summary>
        /// Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
        /// </summary>
        public readonly string MentionText;
        /// <summary>
        /// Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentEntityNormalizedValueResponse NormalizedValue;
        /// <summary>
        /// Optional. Represents the provenance of this entity wrt. the location on the page where it was found.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentPageAnchorResponse PageAnchor;
        /// <summary>
        /// Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentEntityResponse> Properties;
        /// <summary>
        /// Optional. The history of this annotation.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentProvenanceResponse Provenance;
        /// <summary>
        /// Optional. Whether the entity will be redacted for de-identification purposes.
        /// </summary>
        public readonly bool Redacted;
        /// <summary>
        /// Optional. Provenance of the entity. Text anchor indexing into the Document.text.
        /// </summary>
        public readonly Outputs.GoogleCloudDocumentaiV1DocumentTextAnchorResponse TextAnchor;
        /// <summary>
        /// Entity type from a schema e.g. `Address`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GoogleCloudDocumentaiV1DocumentEntityResponse(
            double confidence,

            string mentionId,

            string mentionText,

            Outputs.GoogleCloudDocumentaiV1DocumentEntityNormalizedValueResponse normalizedValue,

            Outputs.GoogleCloudDocumentaiV1DocumentPageAnchorResponse pageAnchor,

            ImmutableArray<Outputs.GoogleCloudDocumentaiV1DocumentEntityResponse> properties,

            Outputs.GoogleCloudDocumentaiV1DocumentProvenanceResponse provenance,

            bool redacted,

            Outputs.GoogleCloudDocumentaiV1DocumentTextAnchorResponse textAnchor,

            string type)
        {
            Confidence = confidence;
            MentionId = mentionId;
            MentionText = mentionText;
            NormalizedValue = normalizedValue;
            PageAnchor = pageAnchor;
            Properties = properties;
            Provenance = provenance;
            Redacted = redacted;
            TextAnchor = textAnchor;
            Type = type;
        }
    }
}
