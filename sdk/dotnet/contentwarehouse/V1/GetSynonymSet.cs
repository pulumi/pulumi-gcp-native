// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.contentwarehouse.V1
{
    public static class GetSynonymSet
    {
        /// <summary>
        /// Gets a SynonymSet for a particular context. Throws a NOT_FOUND exception if the Synonymset does not exist
        /// </summary>
        public static Task<GetSynonymSetResult> InvokeAsync(GetSynonymSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSynonymSetResult>("google-native:contentwarehouse/v1:getSynonymSet", args ?? new GetSynonymSetArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a SynonymSet for a particular context. Throws a NOT_FOUND exception if the Synonymset does not exist
        /// </summary>
        public static Output<GetSynonymSetResult> Invoke(GetSynonymSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSynonymSetResult>("google-native:contentwarehouse/v1:getSynonymSet", args ?? new GetSynonymSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSynonymSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("synonymSetId", required: true)]
        public string SynonymSetId { get; set; } = null!;

        public GetSynonymSetArgs()
        {
        }
        public static new GetSynonymSetArgs Empty => new GetSynonymSetArgs();
    }

    public sealed class GetSynonymSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("synonymSetId", required: true)]
        public Input<string> SynonymSetId { get; set; } = null!;

        public GetSynonymSetInvokeArgs()
        {
        }
        public static new GetSynonymSetInvokeArgs Empty => new GetSynonymSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSynonymSetResult
    {
        /// <summary>
        /// This is a freeform field. Example contexts can be "sales," "engineering," "real estate," "accounting," etc. The context can be supplied during search requests.
        /// </summary>
        public readonly string Context;
        /// <summary>
        /// The resource name of the SynonymSet This is mandatory for google.api.resource. Format: projects/{project_number}/locations/{location}/synonymSets/{context}.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of Synonyms for the context.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudContentwarehouseV1SynonymSetSynonymResponse> Synonyms;

        [OutputConstructor]
        private GetSynonymSetResult(
            string context,

            string name,

            ImmutableArray<Outputs.GoogleCloudContentwarehouseV1SynonymSetSynonymResponse> synonyms)
        {
            Context = context;
            Name = name;
            Synonyms = synonyms;
        }
    }
}
