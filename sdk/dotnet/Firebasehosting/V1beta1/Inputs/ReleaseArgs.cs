// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Firebasehosting.V1beta1.Inputs
{

    /// <summary>
    ///  A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.
    /// </summary>
    public sealed class ReleaseArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The deploy description when the release was created. The value can be up to 512 characters.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Output only. The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Output only. The time at which the version is set to be public.
        /// </summary>
        [Input("releaseTime")]
        public Input<string>? ReleaseTime { get; set; }

        /// <summary>
        /// Output only. Identifies the user who created the release.
        /// </summary>
        [Input("releaseUser")]
        public Input<Inputs.ActingUserArgs>? ReleaseUser { get; set; }

        /// <summary>
        /// Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Output only. The configuration and content that was released.
        /// </summary>
        [Input("version")]
        public Input<Inputs.VersionArgs>? Version { get; set; }

        public ReleaseArgs()
        {
        }
    }
}
