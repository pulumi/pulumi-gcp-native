// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkSecurity.V1.Outputs
{

    /// <summary>
    /// Specification of traffic destination attributes.
    /// </summary>
    [OutputType]
    public sealed class DestinationResponse
    {
        /// <summary>
        /// List of host names to match. Matched against the ":authority" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example "mydomain.*") or a suffix match (example // *.myorg.com") or a presence(any) match "*".
        /// </summary>
        public readonly ImmutableArray<string> Hosts;
        /// <summary>
        /// Optional. Match against key:value pair in http header. Provides a flexible match based on HTTP headers, for potentially advanced use cases. At least one header should match. Avoid using header matches to make authorization decisions unless there is a strong guarantee that requests arrive through a trusted client or proxy.
        /// </summary>
        public readonly Outputs.HttpHeaderMatchResponse HttpHeaderMatch;
        /// <summary>
        /// Optional. A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
        /// </summary>
        public readonly ImmutableArray<string> Methods;
        /// <summary>
        /// List of destination ports to match. At least one port should match.
        /// </summary>
        public readonly ImmutableArray<int> Ports;

        [OutputConstructor]
        private DestinationResponse(
            ImmutableArray<string> hosts,

            Outputs.HttpHeaderMatchResponse httpHeaderMatch,

            ImmutableArray<string> methods,

            ImmutableArray<int> ports)
        {
            Hosts = hosts;
            HttpHeaderMatch = httpHeaderMatch;
            Methods = methods;
            Ports = ports;
        }
    }
}
