// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkSecurity.V1Beta1
{
    public static class GetSecurityProfileGroup
    {
        /// <summary>
        /// Gets details of a single SecurityProfileGroup.
        /// </summary>
        public static Task<GetSecurityProfileGroupResult> InvokeAsync(GetSecurityProfileGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityProfileGroupResult>("google-native:networksecurity/v1beta1:getSecurityProfileGroup", args ?? new GetSecurityProfileGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single SecurityProfileGroup.
        /// </summary>
        public static Output<GetSecurityProfileGroupResult> Invoke(GetSecurityProfileGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityProfileGroupResult>("google-native:networksecurity/v1beta1:getSecurityProfileGroup", args ?? new GetSecurityProfileGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityProfileGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("securityProfileGroupId", required: true)]
        public string SecurityProfileGroupId { get; set; } = null!;

        public GetSecurityProfileGroupArgs()
        {
        }
        public static new GetSecurityProfileGroupArgs Empty => new GetSecurityProfileGroupArgs();
    }

    public sealed class GetSecurityProfileGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("securityProfileGroupId", required: true)]
        public Input<string> SecurityProfileGroupId { get; set; } = null!;

        public GetSecurityProfileGroupInvokeArgs()
        {
        }
        public static new GetSecurityProfileGroupInvokeArgs Empty => new GetSecurityProfileGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityProfileGroupResult
    {
        /// <summary>
        /// Resource creation timestamp.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. An optional description of the profile group. Max length 2048 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. Labels as key value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Immutable. Identifier. Name of the SecurityProfileGroup resource. It matches pattern `projects|organizations/*/locations/{location}/securityProfileGroups/{security_profile_group}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
        /// </summary>
        public readonly string ThreatPreventionProfile;
        /// <summary>
        /// Last resource update timestamp.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSecurityProfileGroupResult(
            string createTime,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            string threatPreventionProfile,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            ThreatPreventionProfile = threatPreventionProfile;
            UpdateTime = updateTime;
        }
    }
}
