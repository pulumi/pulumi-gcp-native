// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkSecurity.V1Beta1
{
    public static class GetSecurityProfile
    {
        /// <summary>
        /// Gets details of a single SecurityProfile.
        /// </summary>
        public static Task<GetSecurityProfileResult> InvokeAsync(GetSecurityProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityProfileResult>("google-native:networksecurity/v1beta1:getSecurityProfile", args ?? new GetSecurityProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single SecurityProfile.
        /// </summary>
        public static Output<GetSecurityProfileResult> Invoke(GetSecurityProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityProfileResult>("google-native:networksecurity/v1beta1:getSecurityProfile", args ?? new GetSecurityProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("securityProfileId", required: true)]
        public string SecurityProfileId { get; set; } = null!;

        public GetSecurityProfileArgs()
        {
        }
        public static new GetSecurityProfileArgs Empty => new GetSecurityProfileArgs();
    }

    public sealed class GetSecurityProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("securityProfileId", required: true)]
        public Input<string> SecurityProfileId { get; set; } = null!;

        public GetSecurityProfileInvokeArgs()
        {
        }
        public static new GetSecurityProfileInvokeArgs Empty => new GetSecurityProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityProfileResult
    {
        /// <summary>
        /// Resource creation timestamp.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. An optional description of the profile. Max length 512 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Optional. Labels as key value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Immutable. Identifier. Name of the SecurityProfile resource. It matches pattern `projects|organizations/*/locations/{location}/securityProfiles/{security_profile}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The threat prevention configuration for the SecurityProfile.
        /// </summary>
        public readonly Outputs.ThreatPreventionProfileResponse ThreatPreventionProfile;
        /// <summary>
        /// Immutable. The single ProfileType that the SecurityProfile resource configures.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Last resource update timestamp.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSecurityProfileResult(
            string createTime,

            string description,

            string etag,

            ImmutableDictionary<string, string> labels,

            string name,

            Outputs.ThreatPreventionProfileResponse threatPreventionProfile,

            string type,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Etag = etag;
            Labels = labels;
            Name = name;
            ThreatPreventionProfile = threatPreventionProfile;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
