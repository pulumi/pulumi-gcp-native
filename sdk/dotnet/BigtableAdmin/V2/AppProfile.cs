// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigtableAdmin.V2
{
    /// <summary>
    /// Creates an app profile within an instance.
    /// </summary>
    [GoogleNativeResourceType("google-native:bigtableadmin/v2:AppProfile")]
    public partial class AppProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Required. The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile` rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`.
        /// </summary>
        [Output("appProfileId")]
        public Output<string> AppProfileId { get; private set; } = null!;

        /// <summary>
        /// Long form description of the use case for this AppProfile.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// If true, ignore safety checks when creating the app profile.
        /// </summary>
        [Output("ignoreWarnings")]
        public Output<string?> IgnoreWarnings { get; private set; } = null!;

        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Use a multi-cluster routing policy.
        /// </summary>
        [Output("multiClusterRoutingUseAny")]
        public Output<Outputs.MultiClusterRoutingUseAnyResponse> MultiClusterRoutingUseAny { get; private set; } = null!;

        /// <summary>
        /// The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Use a single-cluster routing policy.
        /// </summary>
        [Output("singleClusterRouting")]
        public Output<Outputs.SingleClusterRoutingResponse> SingleClusterRouting { get; private set; } = null!;


        /// <summary>
        /// Create a AppProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppProfile(string name, AppProfileArgs args, CustomResourceOptions? options = null)
            : base("google-native:bigtableadmin/v2:AppProfile", name, args ?? new AppProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppProfile(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:bigtableadmin/v2:AppProfile", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "appProfileId",
                    "instanceId",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppProfile Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AppProfile(name, id, options);
        }
    }

    public sealed class AppProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile` rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`.
        /// </summary>
        [Input("appProfileId", required: true)]
        public Input<string> AppProfileId { get; set; } = null!;

        /// <summary>
        /// Long form description of the use case for this AppProfile.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// If true, ignore safety checks when creating the app profile.
        /// </summary>
        [Input("ignoreWarnings")]
        public Input<string>? IgnoreWarnings { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Use a multi-cluster routing policy.
        /// </summary>
        [Input("multiClusterRoutingUseAny")]
        public Input<Inputs.MultiClusterRoutingUseAnyArgs>? MultiClusterRoutingUseAny { get; set; }

        /// <summary>
        /// The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Use a single-cluster routing policy.
        /// </summary>
        [Input("singleClusterRouting")]
        public Input<Inputs.SingleClusterRoutingArgs>? SingleClusterRouting { get; set; }

        public AppProfileArgs()
        {
        }
        public static new AppProfileArgs Empty => new AppProfileArgs();
    }
}
