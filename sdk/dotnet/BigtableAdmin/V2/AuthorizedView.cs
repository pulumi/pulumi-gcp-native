// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigtableAdmin.V2
{
    /// <summary>
    /// Creates a new AuthorizedView in a table.
    /// </summary>
    [GoogleNativeResourceType("google-native:bigtableadmin/v2:AuthorizedView")]
    public partial class AuthorizedView : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Required. The id of the AuthorizedView to create. This AuthorizedView must not already exist. The `authorized_view_id` appended to `parent` forms the full AuthorizedView name of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedView/{authorized_view}`.
        /// </summary>
        [Output("authorizedViewId")]
        public Output<string> AuthorizedViewId { get; private set; } = null!;

        /// <summary>
        /// Set to true to make the AuthorizedView protected against deletion. The parent Table and containing Instance cannot be deleted if an AuthorizedView has this bit set.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// The etag for this AuthorizedView. If this is provided on update, it must match the server's etag. The server returns ABORTED error on a mismatched etag.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of this AuthorizedView. Values are of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// An AuthorizedView permitting access to an explicit subset of a Table.
        /// </summary>
        [Output("subsetView")]
        public Output<Outputs.GoogleBigtableAdminV2AuthorizedViewSubsetViewResponse> SubsetView { get; private set; } = null!;

        [Output("tableId")]
        public Output<string> TableId { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizedView resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizedView(string name, AuthorizedViewArgs args, CustomResourceOptions? options = null)
            : base("google-native:bigtableadmin/v2:AuthorizedView", name, args ?? new AuthorizedViewArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizedView(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:bigtableadmin/v2:AuthorizedView", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "authorizedViewId",
                    "instanceId",
                    "project",
                    "tableId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizedView resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizedView Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AuthorizedView(name, id, options);
        }
    }

    public sealed class AuthorizedViewArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. The id of the AuthorizedView to create. This AuthorizedView must not already exist. The `authorized_view_id` appended to `parent` forms the full AuthorizedView name of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedView/{authorized_view}`.
        /// </summary>
        [Input("authorizedViewId", required: true)]
        public Input<string> AuthorizedViewId { get; set; } = null!;

        /// <summary>
        /// Set to true to make the AuthorizedView protected against deletion. The parent Table and containing Instance cannot be deleted if an AuthorizedView has this bit set.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// The etag for this AuthorizedView. If this is provided on update, it must match the server's etag. The server returns ABORTED error on a mismatched etag.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Identifier. The name of this AuthorizedView. Values are of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// An AuthorizedView permitting access to an explicit subset of a Table.
        /// </summary>
        [Input("subsetView")]
        public Input<Inputs.GoogleBigtableAdminV2AuthorizedViewSubsetViewArgs>? SubsetView { get; set; }

        [Input("tableId", required: true)]
        public Input<string> TableId { get; set; } = null!;

        public AuthorizedViewArgs()
        {
        }
        public static new AuthorizedViewArgs Empty => new AuthorizedViewArgs();
    }
}
