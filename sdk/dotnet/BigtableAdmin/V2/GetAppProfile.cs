// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigtableAdmin.V2
{
    public static class GetAppProfile
    {
        /// <summary>
        /// Gets information about an app profile.
        /// </summary>
        public static Task<GetAppProfileResult> InvokeAsync(GetAppProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppProfileResult>("google-native:bigtableadmin/v2:getAppProfile", args ?? new GetAppProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about an app profile.
        /// </summary>
        public static Output<GetAppProfileResult> Invoke(GetAppProfileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppProfileResult>("google-native:bigtableadmin/v2:getAppProfile", args ?? new GetAppProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("appProfileId", required: true)]
        public string AppProfileId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetAppProfileArgs()
        {
        }
        public static new GetAppProfileArgs Empty => new GetAppProfileArgs();
    }

    public sealed class GetAppProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("appProfileId", required: true)]
        public Input<string> AppProfileId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetAppProfileInvokeArgs()
        {
        }
        public static new GetAppProfileInvokeArgs Empty => new GetAppProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppProfileResult
    {
        /// <summary>
        /// Long form description of the use case for this AppProfile.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Use a multi-cluster routing policy.
        /// </summary>
        public readonly Outputs.MultiClusterRoutingUseAnyResponse MultiClusterRoutingUseAny;
        /// <summary>
        /// The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Use a single-cluster routing policy.
        /// </summary>
        public readonly Outputs.SingleClusterRoutingResponse SingleClusterRouting;

        [OutputConstructor]
        private GetAppProfileResult(
            string description,

            string etag,

            Outputs.MultiClusterRoutingUseAnyResponse multiClusterRoutingUseAny,

            string name,

            Outputs.SingleClusterRoutingResponse singleClusterRouting)
        {
            Description = description;
            Etag = etag;
            MultiClusterRoutingUseAny = multiClusterRoutingUseAny;
            Name = name;
            SingleClusterRouting = singleClusterRouting;
        }
    }
}
