// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataform.V1Beta1
{
    /// <summary>
    /// Creates a new ReleaseConfig in a given Repository.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:dataform/v1beta1:ReleaseConfig")]
    public partial class ReleaseConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
        /// </summary>
        [Output("codeCompilationConfig")]
        public Output<Outputs.CodeCompilationConfigResponse> CodeCompilationConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Output("cronSchedule")]
        public Output<string> CronSchedule { get; private set; } = null!;

        /// <summary>
        /// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
        /// </summary>
        [Output("gitCommitish")]
        public Output<string> GitCommitish { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The release config's name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Records of the 10 most recent scheduled release attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
        /// </summary>
        [Output("recentScheduledReleaseRecords")]
        public Output<ImmutableArray<Outputs.ScheduledReleaseRecordResponse>> RecentScheduledReleaseRecords { get; private set; } = null!;

        /// <summary>
        /// Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is created from this release config, or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
        /// </summary>
        [Output("releaseCompilationResult")]
        public Output<string> ReleaseCompilationResult { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the release config, which will become the final component of the release config's resource name.
        /// </summary>
        [Output("releaseConfigId")]
        public Output<string> ReleaseConfigId { get; private set; } = null!;

        [Output("repositoryId")]
        public Output<string> RepositoryId { get; private set; } = null!;

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Output("timeZone")]
        public Output<string> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a ReleaseConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReleaseConfig(string name, ReleaseConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:dataform/v1beta1:ReleaseConfig", name, args ?? new ReleaseConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReleaseConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:dataform/v1beta1:ReleaseConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                    "releaseConfigId",
                    "repositoryId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReleaseConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReleaseConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ReleaseConfig(name, id, options);
        }
    }

    public sealed class ReleaseConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
        /// </summary>
        [Input("codeCompilationConfig")]
        public Input<Inputs.CodeCompilationConfigArgs>? CodeCompilationConfig { get; set; }

        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Input("cronSchedule")]
        public Input<string>? CronSchedule { get; set; }

        /// <summary>
        /// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
        /// </summary>
        [Input("gitCommitish", required: true)]
        public Input<string> GitCommitish { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is created from this release config, or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
        /// </summary>
        [Input("releaseCompilationResult")]
        public Input<string>? ReleaseCompilationResult { get; set; }

        /// <summary>
        /// Required. The ID to use for the release config, which will become the final component of the release config's resource name.
        /// </summary>
        [Input("releaseConfigId", required: true)]
        public Input<string> ReleaseConfigId { get; set; } = null!;

        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public ReleaseConfigArgs()
        {
        }
        public static new ReleaseConfigArgs Empty => new ReleaseConfigArgs();
    }
}
