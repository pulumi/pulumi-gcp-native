// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Dataform.V1Beta1
{
    public static class GetWorkflowConfig
    {
        /// <summary>
        /// Fetches a single WorkflowConfig.
        /// </summary>
        public static Task<GetWorkflowConfigResult> InvokeAsync(GetWorkflowConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkflowConfigResult>("google-native:dataform/v1beta1:getWorkflowConfig", args ?? new GetWorkflowConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Fetches a single WorkflowConfig.
        /// </summary>
        public static Output<GetWorkflowConfigResult> Invoke(GetWorkflowConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkflowConfigResult>("google-native:dataform/v1beta1:getWorkflowConfig", args ?? new GetWorkflowConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkflowConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        [Input("workflowConfigId", required: true)]
        public string WorkflowConfigId { get; set; } = null!;

        public GetWorkflowConfigArgs()
        {
        }
        public static new GetWorkflowConfigArgs Empty => new GetWorkflowConfigArgs();
    }

    public sealed class GetWorkflowConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        [Input("workflowConfigId", required: true)]
        public Input<string> WorkflowConfigId { get; set; } = null!;

        public GetWorkflowConfigInvokeArgs()
        {
        }
        public static new GetWorkflowConfigInvokeArgs Empty => new GetWorkflowConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkflowConfigResult
    {
        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
        /// </summary>
        public readonly string CronSchedule;
        /// <summary>
        /// Optional. If left unset, a default InvocationConfig will be used.
        /// </summary>
        public readonly Outputs.InvocationConfigResponse InvocationConfig;
        /// <summary>
        /// The workflow config's name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Records of the 10 most recent scheduled execution attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScheduledExecutionRecordResponse> RecentScheduledExecutionRecords;
        /// <summary>
        /// The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*/locations/*/repositories/*/releaseConfigs/*`.
        /// </summary>
        public readonly string ReleaseConfig;
        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private GetWorkflowConfigResult(
            string cronSchedule,

            Outputs.InvocationConfigResponse invocationConfig,

            string name,

            ImmutableArray<Outputs.ScheduledExecutionRecordResponse> recentScheduledExecutionRecords,

            string releaseConfig,

            string timeZone)
        {
            CronSchedule = cronSchedule;
            InvocationConfig = invocationConfig;
            Name = name;
            RecentScheduledExecutionRecords = recentScheduledExecutionRecords;
            ReleaseConfig = releaseConfig;
            TimeZone = timeZone;
        }
    }
}
