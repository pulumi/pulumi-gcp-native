// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IAM.V1.Inputs
{

    /// <summary>
    /// Represents an OpenId Connect 1.0 identity provider.
    /// </summary>
    public sealed class GoogleIamAdminV1WorkforcePoolProviderOidcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The client ID. Must match the audience claim of the JWT issued by the identity provider.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The optional client secret. Required to enable Authorization Code flow for web sign-in.
        /// </summary>
        [Input("clientSecret")]
        public Input<Inputs.GoogleIamAdminV1WorkforcePoolProviderOidcClientSecretArgs>? ClientSecret { get; set; }

        /// <summary>
        /// The OIDC issuer URI. Must be a valid URI using the 'https' scheme.
        /// </summary>
        [Input("issuerUri", required: true)]
        public Input<string> IssuerUri { get; set; } = null!;

        /// <summary>
        /// OIDC JWKs in JSON String format. For details on the definition of a JWK, see https://tools.ietf.org/html/rfc7517. If not set, the `jwks_uri` from the discovery document(fetched from the .well-known path of the `issuer_uri`) will be used. Currently, RSA and EC asymmetric keys are supported. The JWK must use following format and include only the following fields: { "keys": [ { "kty": "RSA/EC", "alg": "", "use": "sig", "kid": "", "n": "", "e": "", "x": "", "y": "", "crv": "" } ] }
        /// </summary>
        [Input("jwksJson")]
        public Input<string>? JwksJson { get; set; }

        /// <summary>
        /// Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
        /// </summary>
        [Input("webSsoConfig", required: true)]
        public Input<Inputs.GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfigArgs> WebSsoConfig { get; set; } = null!;

        public GoogleIamAdminV1WorkforcePoolProviderOidcArgs()
        {
        }
        public static new GoogleIamAdminV1WorkforcePoolProviderOidcArgs Empty => new GoogleIamAdminV1WorkforcePoolProviderOidcArgs();
    }
}
