// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.IAM.V1
{
    /// <summary>
    /// Creates a ServiceAccountKey.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:iam/v1:ServiceAccountKey")]
    public partial class ServiceAccountKey : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the algorithm (and possibly key size) for the key.
        /// </summary>
        [Output("keyAlgorithm")]
        public Output<string> KeyAlgorithm { get; private set; } = null!;

        /// <summary>
        /// The key origin.
        /// </summary>
        [Output("keyOrigin")]
        public Output<string> KeyOrigin { get; private set; } = null!;

        /// <summary>
        /// The key type.
        /// </summary>
        [Output("keyType")]
        public Output<string> KeyType { get; private set; } = null!;

        /// <summary>
        /// The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account.
        /// </summary>
        [Output("privateKeyData")]
        public Output<string> PrivateKeyData { get; private set; } = null!;

        /// <summary>
        /// The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.
        /// </summary>
        [Output("privateKeyType")]
        public Output<string> PrivateKeyType { get; private set; } = null!;

        /// <summary>
        /// The public key data. Only provided in `GetServiceAccountKey` responses.
        /// </summary>
        [Output("publicKeyData")]
        public Output<string> PublicKeyData { get; private set; } = null!;

        /// <summary>
        /// The key can be used after this timestamp.
        /// </summary>
        [Output("validAfterTime")]
        public Output<string> ValidAfterTime { get; private set; } = null!;

        /// <summary>
        /// The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time.
        /// </summary>
        [Output("validBeforeTime")]
        public Output<string> ValidBeforeTime { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceAccountKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceAccountKey(string name, ServiceAccountKeyArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:iam/v1:ServiceAccountKey", name, args ?? new ServiceAccountKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceAccountKey(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:iam/v1:ServiceAccountKey", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceAccountKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceAccountKey Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServiceAccountKey(name, id, options);
        }
    }

    public sealed class ServiceAccountKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
        /// </summary>
        [Input("keyAlgorithm")]
        public Input<string>? KeyAlgorithm { get; set; }

        [Input("keysId", required: true)]
        public Input<string> KeysId { get; set; } = null!;

        /// <summary>
        /// The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
        /// </summary>
        [Input("privateKeyType")]
        public Input<string>? PrivateKeyType { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        [Input("serviceAccountsId", required: true)]
        public Input<string> ServiceAccountsId { get; set; } = null!;

        public ServiceAccountKeyArgs()
        {
        }
    }
}
