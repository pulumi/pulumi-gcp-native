// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IAM.V1.Outputs
{

    /// <summary>
    /// Represents an OpenId Connect 1.0 identity provider.
    /// </summary>
    [OutputType]
    public sealed class OidcResponse
    {
        /// <summary>
        /// Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```
        /// </summary>
        public readonly ImmutableArray<string> AllowedAudiences;
        /// <summary>
        /// The OIDC issuer URL. Must be an HTTPS endpoint.
        /// </summary>
        public readonly string IssuerUri;
        /// <summary>
        /// Optional. OIDC JWKs in JSON String format. For details on the definition of a JWK, see https://tools.ietf.org/html/rfc7517. If not set, the `jwks_uri` from the discovery document(fetched from the .well-known path of the `issuer_uri`) will be used. Currently, RSA and EC asymmetric keys are supported. The JWK must use following format and include only the following fields: { "keys": [ { "kty": "RSA/EC", "alg": "", "use": "sig", "kid": "", "n": "", "e": "", "x": "", "y": "", "crv": "" } ] }
        /// </summary>
        public readonly string JwksJson;

        [OutputConstructor]
        private OidcResponse(
            ImmutableArray<string> allowedAudiences,

            string issuerUri,

            string jwksJson)
        {
            AllowedAudiences = allowedAudiences;
            IssuerUri = issuerUri;
            JwksJson = jwksJson;
        }
    }
}
