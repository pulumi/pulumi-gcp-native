// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IAM.V1
{
    public static class GetWorkforcePool
    {
        /// <summary>
        /// Gets an individual WorkforcePool.
        /// </summary>
        public static Task<GetWorkforcePoolResult> InvokeAsync(GetWorkforcePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkforcePoolResult>("google-native:iam/v1:getWorkforcePool", args ?? new GetWorkforcePoolArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an individual WorkforcePool.
        /// </summary>
        public static Output<GetWorkforcePoolResult> Invoke(GetWorkforcePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkforcePoolResult>("google-native:iam/v1:getWorkforcePool", args ?? new GetWorkforcePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkforcePoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("workforcePoolId", required: true)]
        public string WorkforcePoolId { get; set; } = null!;

        public GetWorkforcePoolArgs()
        {
        }
        public static new GetWorkforcePoolArgs Empty => new GetWorkforcePoolArgs();
    }

    public sealed class GetWorkforcePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("workforcePoolId", required: true)]
        public Input<string> WorkforcePoolId { get; set; } = null!;

        public GetWorkforcePoolInvokeArgs()
        {
        }
        public static new GetWorkforcePoolInvokeArgs Empty => new GetWorkforcePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkforcePoolResult
    {
        /// <summary>
        /// A user-specified description of the pool. Cannot exceed 256 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again.
        /// </summary>
        public readonly bool Disabled;
        /// <summary>
        /// A user-specified display name of the pool in Google Cloud Console. Cannot exceed 32 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The resource name of the pool. Format: `locations/{location}/workforcePools/{workforce_pool_id}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Immutable. The resource name of the parent. Format: `organizations/{org-id}`.
        /// </summary>
        public readonly string Parent;
        /// <summary>
        /// Duration that the Google Cloud access tokens, console sign-in sessions, and `gcloud` sign-in sessions from this pool are valid. Must be greater than 15 minutes (900s) and less than 12 hours (43200s). If `session_duration` is not configured, minted credentials have a default duration of one hour (3600s). For SAML providers, the lifetime of the token is the minimum of the `session_duration` and the `SessionNotOnOrAfter` claim in the SAML assertion.
        /// </summary>
        public readonly string SessionDuration;
        /// <summary>
        /// The state of the pool.
        /// </summary>
        public readonly string State;

        [OutputConstructor]
        private GetWorkforcePoolResult(
            string description,

            bool disabled,

            string displayName,

            string name,

            string parent,

            string sessionDuration,

            string state)
        {
            Description = description;
            Disabled = disabled;
            DisplayName = displayName;
            Name = name;
            Parent = parent;
            SessionDuration = sessionDuration;
            State = state;
        }
    }
}
