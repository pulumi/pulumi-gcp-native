// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BareMetalSolution.V2.Outputs
{

    /// <summary>
    /// A storage volume.
    /// </summary>
    [OutputType]
    public sealed class VolumeResponse
    {
        /// <summary>
        /// The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
        /// </summary>
        public readonly string AutoGrownSizeGib;
        /// <summary>
        /// Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.
        /// </summary>
        public readonly bool BootVolume;
        /// <summary>
        /// The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
        /// </summary>
        public readonly string CurrentSizeGib;
        /// <summary>
        /// Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
        /// </summary>
        public readonly string EmergencySizeGib;
        /// <summary>
        /// Labels as key value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Maximum size volume can be expanded to in case of evergency, in GiB.
        /// </summary>
        public readonly string MaxSizeGib;
        /// <summary>
        /// The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.
        /// </summary>
        public readonly string Notes;
        /// <summary>
        /// Originally requested size, in GiB.
        /// </summary>
        public readonly string OriginallyRequestedSizeGib;
        /// <summary>
        /// Immutable. Performance tier of the Volume. Default is SHARED.
        /// </summary>
        public readonly string PerformanceTier;
        /// <summary>
        /// Immutable. Pod name.
        /// </summary>
        public readonly string Pod;
        /// <summary>
        /// Storage protocol for the Volume.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
        /// </summary>
        public readonly string RemainingSpaceGib;
        /// <summary>
        /// The requested size of this storage volume, in GiB.
        /// </summary>
        public readonly string RequestedSizeGib;
        /// <summary>
        /// The behavior to use when snapshot reserved space is full.
        /// </summary>
        public readonly string SnapshotAutoDeleteBehavior;
        /// <summary>
        /// Whether snapshots are enabled.
        /// </summary>
        public readonly bool SnapshotEnabled;
        /// <summary>
        /// Details about snapshot space reservation and usage on the storage volume.
        /// </summary>
        public readonly Outputs.SnapshotReservationDetailResponse SnapshotReservationDetail;
        /// <summary>
        /// The name of the snapshot schedule policy in use for this volume, if any.
        /// </summary>
        public readonly string SnapshotSchedulePolicy;
        /// <summary>
        /// The state of this storage volume.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The storage type for this volume.
        /// </summary>
        public readonly string StorageType;

        [OutputConstructor]
        private VolumeResponse(
            string autoGrownSizeGib,

            bool bootVolume,

            string currentSizeGib,

            string emergencySizeGib,

            ImmutableDictionary<string, string> labels,

            string maxSizeGib,

            string name,

            string notes,

            string originallyRequestedSizeGib,

            string performanceTier,

            string pod,

            string protocol,

            string remainingSpaceGib,

            string requestedSizeGib,

            string snapshotAutoDeleteBehavior,

            bool snapshotEnabled,

            Outputs.SnapshotReservationDetailResponse snapshotReservationDetail,

            string snapshotSchedulePolicy,

            string state,

            string storageType)
        {
            AutoGrownSizeGib = autoGrownSizeGib;
            BootVolume = bootVolume;
            CurrentSizeGib = currentSizeGib;
            EmergencySizeGib = emergencySizeGib;
            Labels = labels;
            MaxSizeGib = maxSizeGib;
            Name = name;
            Notes = notes;
            OriginallyRequestedSizeGib = originallyRequestedSizeGib;
            PerformanceTier = performanceTier;
            Pod = pod;
            Protocol = protocol;
            RemainingSpaceGib = remainingSpaceGib;
            RequestedSizeGib = requestedSizeGib;
            SnapshotAutoDeleteBehavior = snapshotAutoDeleteBehavior;
            SnapshotEnabled = snapshotEnabled;
            SnapshotReservationDetail = snapshotReservationDetail;
            SnapshotSchedulePolicy = snapshotSchedulePolicy;
            State = state;
            StorageType = storageType;
        }
    }
}
