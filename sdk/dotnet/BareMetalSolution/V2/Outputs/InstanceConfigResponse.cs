// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BareMetalSolution.V2.Outputs
{

    /// <summary>
    /// Configuration parameters for a new instance.
    /// </summary>
    [OutputType]
    public sealed class InstanceConfigResponse
    {
        /// <summary>
        /// Client network address.
        /// </summary>
        public readonly Outputs.NetworkAddressResponse ClientNetwork;
        /// <summary>
        /// Whether the instance should be provisioned with Hyperthreading enabled.
        /// </summary>
        public readonly bool Hyperthreading;
        /// <summary>
        /// Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The name of the instance config.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        /// </summary>
        public readonly string OsImage;
        /// <summary>
        /// Private network address, if any.
        /// </summary>
        public readonly Outputs.NetworkAddressResponse PrivateNetwork;
        /// <summary>
        /// User note field, it can be used by customers to add additional information for the BMS Ops team .
        /// </summary>
        public readonly string UserNote;

        [OutputConstructor]
        private InstanceConfigResponse(
            Outputs.NetworkAddressResponse clientNetwork,

            bool hyperthreading,

            string instanceType,

            string name,

            string osImage,

            Outputs.NetworkAddressResponse privateNetwork,

            string userNote)
        {
            ClientNetwork = clientNetwork;
            Hyperthreading = hyperthreading;
            InstanceType = instanceType;
            Name = name;
            OsImage = osImage;
            PrivateNetwork = privateNetwork;
            UserNote = userNote;
        }
    }
}
