// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BareMetalSolution.V2.Outputs
{

    /// <summary>
    /// A Network.
    /// </summary>
    [OutputType]
    public sealed class NetworkResponse
    {
        /// <summary>
        /// The cidr of the Network.
        /// </summary>
        public readonly string Cidr;
        /// <summary>
        /// IP address configured.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Whether network uses standard frames or jumbo ones.
        /// </summary>
        public readonly bool JumboFramesEnabled;
        /// <summary>
        /// Labels as key value pairs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// List of physical interfaces.
        /// </summary>
        public readonly ImmutableArray<string> MacAddress;
        /// <summary>
        /// Input only. List of mount points to attach the network to.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkMountPointResponse> MountPoints;
        /// <summary>
        /// The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Pod name.
        /// </summary>
        public readonly string Pod;
        /// <summary>
        /// List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkAddressReservationResponse> Reservations;
        /// <summary>
        /// IP range for reserved for services (e.g. NFS).
        /// </summary>
        public readonly string ServicesCidr;
        /// <summary>
        /// The Network state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of this network.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The vlan id of the Network.
        /// </summary>
        public readonly string VlanId;
        /// <summary>
        /// The vrf for the Network.
        /// </summary>
        public readonly Outputs.VRFResponse Vrf;

        [OutputConstructor]
        private NetworkResponse(
            string cidr,

            string ipAddress,

            bool jumboFramesEnabled,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<string> macAddress,

            ImmutableArray<Outputs.NetworkMountPointResponse> mountPoints,

            string name,

            string pod,

            ImmutableArray<Outputs.NetworkAddressReservationResponse> reservations,

            string servicesCidr,

            string state,

            string type,

            string vlanId,

            Outputs.VRFResponse vrf)
        {
            Cidr = cidr;
            IpAddress = ipAddress;
            JumboFramesEnabled = jumboFramesEnabled;
            Labels = labels;
            MacAddress = macAddress;
            MountPoints = mountPoints;
            Name = name;
            Pod = pod;
            Reservations = reservations;
            ServicesCidr = servicesCidr;
            State = state;
            Type = type;
            VlanId = vlanId;
            Vrf = vrf;
        }
    }
}
