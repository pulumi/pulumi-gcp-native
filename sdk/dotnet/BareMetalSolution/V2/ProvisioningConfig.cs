// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BareMetalSolution.V2
{
    /// <summary>
    /// Create new ProvisioningConfig.
    /// Auto-naming is currently not supported for this resource.
    /// Note - this resource's API doesn't support deletion. When deleted, the resource will persist
    /// on Google Cloud even though it will be deleted from Pulumi state.
    /// </summary>
    [GoogleNativeResourceType("google-native:baremetalsolution/v2:ProvisioningConfig")]
    public partial class ProvisioningConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// URI to Cloud Console UI view of this provisioning config.
        /// </summary>
        [Output("cloudConsoleUri")]
        public Output<string> CloudConsoleUri { get; private set; } = null!;

        /// <summary>
        /// Optional. The user-defined identifier of the provisioning config.
        /// </summary>
        [Output("customId")]
        public Output<string> CustomId { get; private set; } = null!;

        /// <summary>
        /// Optional. Email provided to send a confirmation with provisioning config to.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// A service account to enable customers to access instance credentials upon handover.
        /// </summary>
        [Output("handoverServiceAccount")]
        public Output<string> HandoverServiceAccount { get; private set; } = null!;

        /// <summary>
        /// Instances to be created.
        /// </summary>
        [Output("instances")]
        public Output<ImmutableArray<Outputs.InstanceConfigResponse>> Instances { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The system-generated name of the provisioning config. This follows the UUID format.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Networks to be created.
        /// </summary>
        [Output("networks")]
        public Output<ImmutableArray<Outputs.NetworkConfigResponse>> Networks { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// State of ProvisioningConfig.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Optional status messages associated with the FAILED state.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// A generated ticket id to track provisioning request.
        /// </summary>
        [Output("ticketId")]
        public Output<string> TicketId { get; private set; } = null!;

        /// <summary>
        /// Last update timestamp.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Volumes to be created.
        /// </summary>
        [Output("volumes")]
        public Output<ImmutableArray<Outputs.VolumeConfigResponse>> Volumes { get; private set; } = null!;

        /// <summary>
        /// If true, VPC SC is enabled for the cluster.
        /// </summary>
        [Output("vpcScEnabled")]
        public Output<bool> VpcScEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a ProvisioningConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProvisioningConfig(string name, ProvisioningConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:baremetalsolution/v2:ProvisioningConfig", name, args ?? new ProvisioningConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProvisioningConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:baremetalsolution/v2:ProvisioningConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProvisioningConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProvisioningConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ProvisioningConfig(name, id, options);
        }
    }

    public sealed class ProvisioningConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The user-defined identifier of the provisioning config.
        /// </summary>
        [Input("customId")]
        public Input<string>? CustomId { get; set; }

        /// <summary>
        /// Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// A service account to enable customers to access instance credentials upon handover.
        /// </summary>
        [Input("handoverServiceAccount")]
        public Input<string>? HandoverServiceAccount { get; set; }

        [Input("instances")]
        private InputList<Inputs.InstanceConfigArgs>? _instances;

        /// <summary>
        /// Instances to be created.
        /// </summary>
        public InputList<Inputs.InstanceConfigArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.InstanceConfigArgs>());
            set => _instances = value;
        }

        /// <summary>
        /// Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("networks")]
        private InputList<Inputs.NetworkConfigArgs>? _networks;

        /// <summary>
        /// Networks to be created.
        /// </summary>
        public InputList<Inputs.NetworkConfigArgs> Networks
        {
            get => _networks ?? (_networks = new InputList<Inputs.NetworkConfigArgs>());
            set => _networks = value;
        }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional status messages associated with the FAILED state.
        /// </summary>
        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        /// <summary>
        /// A generated ticket id to track provisioning request.
        /// </summary>
        [Input("ticketId")]
        public Input<string>? TicketId { get; set; }

        [Input("volumes")]
        private InputList<Inputs.VolumeConfigArgs>? _volumes;

        /// <summary>
        /// Volumes to be created.
        /// </summary>
        public InputList<Inputs.VolumeConfigArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.VolumeConfigArgs>());
            set => _volumes = value;
        }

        /// <summary>
        /// If true, VPC SC is enabled for the cluster.
        /// </summary>
        [Input("vpcScEnabled")]
        public Input<bool>? VpcScEnabled { get; set; }

        public ProvisioningConfigArgs()
        {
        }
        public static new ProvisioningConfigArgs Empty => new ProvisioningConfigArgs();
    }
}
