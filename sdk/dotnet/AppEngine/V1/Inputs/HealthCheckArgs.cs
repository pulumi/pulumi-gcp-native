// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AppEngine.V1.Inputs
{

    /// <summary>
    /// Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment.
    /// </summary>
    public sealed class HealthCheckArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Interval between health checks.
        /// </summary>
        [Input("checkInterval")]
        public Input<string>? CheckInterval { get; set; }

        /// <summary>
        /// Whether to explicitly disable health checks for this instance.
        /// </summary>
        [Input("disableHealthCheck")]
        public Input<bool>? DisableHealthCheck { get; set; }

        /// <summary>
        /// Number of consecutive successful health checks required before receiving traffic.
        /// </summary>
        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        /// <summary>
        /// Host header to send when performing an HTTP health check. Example: "myapp.appspot.com"
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Number of consecutive failed health checks required before an instance is restarted.
        /// </summary>
        [Input("restartThreshold")]
        public Input<int>? RestartThreshold { get; set; }

        /// <summary>
        /// Time before the health check is considered failed.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        /// <summary>
        /// Number of consecutive failed health checks required before removing traffic.
        /// </summary>
        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public HealthCheckArgs()
        {
        }
    }
}
