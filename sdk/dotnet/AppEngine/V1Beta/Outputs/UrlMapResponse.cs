// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.AppEngine.V1Beta.Outputs
{

    /// <summary>
    /// URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code or by serving static files uploaded with the version, such as images, CSS, or JavaScript.
    /// </summary>
    [OutputType]
    public sealed class UrlMapResponse
    {
        /// <summary>
        /// Uses API Endpoints to handle requests.
        /// </summary>
        public readonly Outputs.ApiEndpointHandlerResponse ApiEndpoint;
        /// <summary>
        /// Action to take when users access resources that require authentication. Defaults to redirect.
        /// </summary>
        public readonly string AuthFailAction;
        /// <summary>
        /// Level of login required to access this resource. Not supported for Node.js in the App Engine standard environment.
        /// </summary>
        public readonly string Login;
        /// <summary>
        /// 30x code to use when performing redirects for the secure field. Defaults to 302.
        /// </summary>
        public readonly string RedirectHttpResponseCode;
        /// <summary>
        /// Executes a script to handle the requests that match this URL pattern. Only the auto value is supported for Node.js in the App Engine standard environment, for example "script": "auto".
        /// </summary>
        public readonly Outputs.ScriptHandlerResponse Script;
        /// <summary>
        /// Security (HTTPS) enforcement for this URL.
        /// </summary>
        public readonly string SecurityLevel;
        /// <summary>
        /// Returns the contents of a file, such as an image, as the response.
        /// </summary>
        public readonly Outputs.StaticFilesHandlerResponse StaticFiles;
        /// <summary>
        /// URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings. All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
        /// </summary>
        public readonly string UrlRegex;

        [OutputConstructor]
        private UrlMapResponse(
            Outputs.ApiEndpointHandlerResponse apiEndpoint,

            string authFailAction,

            string login,

            string redirectHttpResponseCode,

            Outputs.ScriptHandlerResponse script,

            string securityLevel,

            Outputs.StaticFilesHandlerResponse staticFiles,

            string urlRegex)
        {
            ApiEndpoint = apiEndpoint;
            AuthFailAction = authFailAction;
            Login = login;
            RedirectHttpResponseCode = redirectHttpResponseCode;
            Script = script;
            SecurityLevel = securityLevel;
            StaticFiles = staticFiles;
            UrlRegex = urlRegex;
        }
    }
}
