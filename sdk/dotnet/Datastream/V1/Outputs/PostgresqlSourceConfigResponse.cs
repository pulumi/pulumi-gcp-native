// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Datastream.V1.Outputs
{

    /// <summary>
    /// PostgreSQL data source configuration
    /// </summary>
    [OutputType]
    public sealed class PostgresqlSourceConfigResponse
    {
        /// <summary>
        /// PostgreSQL objects to exclude from the stream.
        /// </summary>
        public readonly Outputs.PostgresqlRdbmsResponse ExcludeObjects;
        /// <summary>
        /// PostgreSQL objects to include in the stream.
        /// </summary>
        public readonly Outputs.PostgresqlRdbmsResponse IncludeObjects;
        /// <summary>
        /// Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.
        /// </summary>
        public readonly int MaxConcurrentBackfillTasks;
        /// <summary>
        /// The name of the publication that includes the set of all tables that are defined in the stream's include_objects.
        /// </summary>
        public readonly string Publication;
        /// <summary>
        /// Immutable. The name of the logical replication slot that's configured with the pgoutput plugin.
        /// </summary>
        public readonly string ReplicationSlot;

        [OutputConstructor]
        private PostgresqlSourceConfigResponse(
            Outputs.PostgresqlRdbmsResponse excludeObjects,

            Outputs.PostgresqlRdbmsResponse includeObjects,

            int maxConcurrentBackfillTasks,

            string publication,

            string replicationSlot)
        {
            ExcludeObjects = excludeObjects;
            IncludeObjects = includeObjects;
            MaxConcurrentBackfillTasks = maxConcurrentBackfillTasks;
            Publication = publication;
            ReplicationSlot = replicationSlot;
        }
    }
}
