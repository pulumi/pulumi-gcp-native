// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkeonprem.V1
{
    public static class GetBareMetalNodePool
    {
        /// <summary>
        /// Gets details of a single bare metal node pool.
        /// </summary>
        public static Task<GetBareMetalNodePoolResult> InvokeAsync(GetBareMetalNodePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBareMetalNodePoolResult>("google-native:gkeonprem/v1:getBareMetalNodePool", args ?? new GetBareMetalNodePoolArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single bare metal node pool.
        /// </summary>
        public static Output<GetBareMetalNodePoolResult> Invoke(GetBareMetalNodePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBareMetalNodePoolResult>("google-native:gkeonprem/v1:getBareMetalNodePool", args ?? new GetBareMetalNodePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBareMetalNodePoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("bareMetalClusterId", required: true)]
        public string BareMetalClusterId { get; set; } = null!;

        [Input("bareMetalNodePoolId", required: true)]
        public string BareMetalNodePoolId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetBareMetalNodePoolArgs()
        {
        }
        public static new GetBareMetalNodePoolArgs Empty => new GetBareMetalNodePoolArgs();
    }

    public sealed class GetBareMetalNodePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bareMetalClusterId", required: true)]
        public Input<string> BareMetalClusterId { get; set; } = null!;

        [Input("bareMetalNodePoolId", required: true)]
        public Input<string> BareMetalNodePoolId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetBareMetalNodePoolInvokeArgs()
        {
        }
        public static new GetBareMetalNodePoolInvokeArgs Empty => new GetBareMetalNodePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetBareMetalNodePoolResult
    {
        /// <summary>
        /// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// The time at which this bare metal node pool was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// The display name for the bare metal node pool.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Immutable. The bare metal node pool resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Node pool configuration.
        /// </summary>
        public readonly Outputs.BareMetalNodePoolConfigResponse NodePoolConfig;
        /// <summary>
        /// If set, there are currently changes in flight to the bare metal node pool.
        /// </summary>
        public readonly bool Reconciling;
        /// <summary>
        /// The current state of the bare metal node pool.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// ResourceStatus representing the detailed node pool status.
        /// </summary>
        public readonly Outputs.ResourceStatusResponse Status;
        /// <summary>
        /// The unique identifier of the bare metal node pool.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The time at which this bare metal node pool was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The worker node pool upgrade policy.
        /// </summary>
        public readonly Outputs.BareMetalNodePoolUpgradePolicyResponse UpgradePolicy;

        [OutputConstructor]
        private GetBareMetalNodePoolResult(
            ImmutableDictionary<string, string> annotations,

            string createTime,

            string deleteTime,

            string displayName,

            string etag,

            string name,

            Outputs.BareMetalNodePoolConfigResponse nodePoolConfig,

            bool reconciling,

            string state,

            Outputs.ResourceStatusResponse status,

            string uid,

            string updateTime,

            Outputs.BareMetalNodePoolUpgradePolicyResponse upgradePolicy)
        {
            Annotations = annotations;
            CreateTime = createTime;
            DeleteTime = deleteTime;
            DisplayName = displayName;
            Etag = etag;
            Name = name;
            NodePoolConfig = nodePoolConfig;
            Reconciling = reconciling;
            State = state;
            Status = status;
            Uid = uid;
            UpdateTime = updateTime;
            UpgradePolicy = upgradePolicy;
        }
    }
}
