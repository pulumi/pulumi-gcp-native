// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkeonprem.V1
{
    /// <summary>
    /// Creates a new bare metal cluster in a given project and location.
    /// </summary>
    [GoogleNativeResourceType("google-native:gkeonprem/v1:BareMetalCluster")]
    public partial class BareMetalCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
        /// </summary>
        [Output("adminClusterMembership")]
        public Output<string> AdminClusterMembership { get; private set; } = null!;

        /// <summary>
        /// The resource name of the bare metal admin cluster managing this user cluster.
        /// </summary>
        [Output("adminClusterName")]
        public Output<string> AdminClusterName { get; private set; } = null!;

        /// <summary>
        /// Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>> Annotations { get; private set; } = null!;

        /// <summary>
        /// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
        /// </summary>
        [Output("bareMetalClusterId")]
        public Output<string> BareMetalClusterId { get; private set; } = null!;

        /// <summary>
        /// The Anthos clusters on bare metal version for your user cluster.
        /// </summary>
        [Output("bareMetalVersion")]
        public Output<string> BareMetalVersion { get; private set; } = null!;

        /// <summary>
        /// Cluster operations configuration.
        /// </summary>
        [Output("clusterOperations")]
        public Output<Outputs.BareMetalClusterOperationsConfigResponse> ClusterOperations { get; private set; } = null!;

        /// <summary>
        /// Control plane configuration.
        /// </summary>
        [Output("controlPlane")]
        public Output<Outputs.BareMetalControlPlaneConfigResponse> ControlPlane { get; private set; } = null!;

        /// <summary>
        /// The time when the bare metal user cluster was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// A human readable description of this bare metal user cluster.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The IP address of the bare metal user cluster's API server.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Fleet configuration for the cluster.
        /// </summary>
        [Output("fleet")]
        public Output<Outputs.FleetResponse> Fleet { get; private set; } = null!;

        /// <summary>
        /// Load balancer configuration.
        /// </summary>
        [Output("loadBalancer")]
        public Output<Outputs.BareMetalLoadBalancerConfigResponse> LoadBalancer { get; private set; } = null!;

        /// <summary>
        /// The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl.
        /// </summary>
        [Output("localName")]
        public Output<string> LocalName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Maintenance configuration.
        /// </summary>
        [Output("maintenanceConfig")]
        public Output<Outputs.BareMetalMaintenanceConfigResponse> MaintenanceConfig { get; private set; } = null!;

        /// <summary>
        /// Status of on-going maintenance tasks.
        /// </summary>
        [Output("maintenanceStatus")]
        public Output<Outputs.BareMetalMaintenanceStatusResponse> MaintenanceStatus { get; private set; } = null!;

        /// <summary>
        /// Immutable. The bare metal user cluster resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network configuration.
        /// </summary>
        [Output("networkConfig")]
        public Output<Outputs.BareMetalNetworkConfigResponse> NetworkConfig { get; private set; } = null!;

        /// <summary>
        /// Node access related configurations.
        /// </summary>
        [Output("nodeAccessConfig")]
        public Output<Outputs.BareMetalNodeAccessConfigResponse> NodeAccessConfig { get; private set; } = null!;

        /// <summary>
        /// Workload node configuration.
        /// </summary>
        [Output("nodeConfig")]
        public Output<Outputs.BareMetalWorkloadNodeConfigResponse> NodeConfig { get; private set; } = null!;

        /// <summary>
        /// OS environment related configurations.
        /// </summary>
        [Output("osEnvironmentConfig")]
        public Output<Outputs.BareMetalOsEnvironmentConfigResponse> OsEnvironmentConfig { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Proxy configuration.
        /// </summary>
        [Output("proxy")]
        public Output<Outputs.BareMetalProxyConfigResponse> Proxy { get; private set; } = null!;

        /// <summary>
        /// If set, there are currently changes in flight to the bare metal user cluster.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// Security related setting configuration.
        /// </summary>
        [Output("securityConfig")]
        public Output<Outputs.BareMetalSecurityConfigResponse> SecurityConfig { get; private set; } = null!;

        /// <summary>
        /// The current state of the bare metal user cluster.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Detailed cluster status.
        /// </summary>
        [Output("status")]
        public Output<Outputs.ResourceStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// Storage configuration.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.BareMetalStorageConfigResponse> Storage { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the bare metal user cluster.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The time when the bare metal user cluster was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The result of the preflight check.
        /// </summary>
        [Output("validationCheck")]
        public Output<Outputs.ValidationCheckResponse> ValidationCheck { get; private set; } = null!;


        /// <summary>
        /// Create a BareMetalCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BareMetalCluster(string name, BareMetalClusterArgs args, CustomResourceOptions? options = null)
            : base("google-native:gkeonprem/v1:BareMetalCluster", name, args ?? new BareMetalClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BareMetalCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:gkeonprem/v1:BareMetalCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "bareMetalClusterId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BareMetalCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BareMetalCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BareMetalCluster(name, id, options);
        }
    }

    public sealed class BareMetalClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
        /// </summary>
        [Input("adminClusterMembership", required: true)]
        public Input<string> AdminClusterMembership { get; set; } = null!;

        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/
        /// </summary>
        [Input("bareMetalClusterId", required: true)]
        public Input<string> BareMetalClusterId { get; set; } = null!;

        /// <summary>
        /// The Anthos clusters on bare metal version for your user cluster.
        /// </summary>
        [Input("bareMetalVersion", required: true)]
        public Input<string> BareMetalVersion { get; set; } = null!;

        /// <summary>
        /// Cluster operations configuration.
        /// </summary>
        [Input("clusterOperations")]
        public Input<Inputs.BareMetalClusterOperationsConfigArgs>? ClusterOperations { get; set; }

        /// <summary>
        /// Control plane configuration.
        /// </summary>
        [Input("controlPlane", required: true)]
        public Input<Inputs.BareMetalControlPlaneConfigArgs> ControlPlane { get; set; } = null!;

        /// <summary>
        /// A human readable description of this bare metal user cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Load balancer configuration.
        /// </summary>
        [Input("loadBalancer", required: true)]
        public Input<Inputs.BareMetalLoadBalancerConfigArgs> LoadBalancer { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maintenance configuration.
        /// </summary>
        [Input("maintenanceConfig")]
        public Input<Inputs.BareMetalMaintenanceConfigArgs>? MaintenanceConfig { get; set; }

        /// <summary>
        /// Immutable. The bare metal user cluster resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration.
        /// </summary>
        [Input("networkConfig", required: true)]
        public Input<Inputs.BareMetalNetworkConfigArgs> NetworkConfig { get; set; } = null!;

        /// <summary>
        /// Node access related configurations.
        /// </summary>
        [Input("nodeAccessConfig")]
        public Input<Inputs.BareMetalNodeAccessConfigArgs>? NodeAccessConfig { get; set; }

        /// <summary>
        /// Workload node configuration.
        /// </summary>
        [Input("nodeConfig")]
        public Input<Inputs.BareMetalWorkloadNodeConfigArgs>? NodeConfig { get; set; }

        /// <summary>
        /// OS environment related configurations.
        /// </summary>
        [Input("osEnvironmentConfig")]
        public Input<Inputs.BareMetalOsEnvironmentConfigArgs>? OsEnvironmentConfig { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Proxy configuration.
        /// </summary>
        [Input("proxy")]
        public Input<Inputs.BareMetalProxyConfigArgs>? Proxy { get; set; }

        /// <summary>
        /// Security related setting configuration.
        /// </summary>
        [Input("securityConfig")]
        public Input<Inputs.BareMetalSecurityConfigArgs>? SecurityConfig { get; set; }

        /// <summary>
        /// Storage configuration.
        /// </summary>
        [Input("storage", required: true)]
        public Input<Inputs.BareMetalStorageConfigArgs> Storage { get; set; } = null!;

        public BareMetalClusterArgs()
        {
        }
        public static new BareMetalClusterArgs Empty => new BareMetalClusterArgs();
    }
}
