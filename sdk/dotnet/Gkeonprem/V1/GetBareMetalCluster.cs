// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkeonprem.V1
{
    public static class GetBareMetalCluster
    {
        /// <summary>
        /// Gets details of a single bare metal Cluster.
        /// </summary>
        public static Task<GetBareMetalClusterResult> InvokeAsync(GetBareMetalClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBareMetalClusterResult>("google-native:gkeonprem/v1:getBareMetalCluster", args ?? new GetBareMetalClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single bare metal Cluster.
        /// </summary>
        public static Output<GetBareMetalClusterResult> Invoke(GetBareMetalClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBareMetalClusterResult>("google-native:gkeonprem/v1:getBareMetalCluster", args ?? new GetBareMetalClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBareMetalClusterArgs : global::Pulumi.InvokeArgs
    {
        [Input("bareMetalClusterId", required: true)]
        public string BareMetalClusterId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetBareMetalClusterArgs()
        {
        }
        public static new GetBareMetalClusterArgs Empty => new GetBareMetalClusterArgs();
    }

    public sealed class GetBareMetalClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bareMetalClusterId", required: true)]
        public Input<string> BareMetalClusterId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetBareMetalClusterInvokeArgs()
        {
        }
        public static new GetBareMetalClusterInvokeArgs Empty => new GetBareMetalClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetBareMetalClusterResult
    {
        /// <summary>
        /// The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
        /// </summary>
        public readonly string AdminClusterMembership;
        /// <summary>
        /// The resource name of the bare metal admin cluster managing this user cluster.
        /// </summary>
        public readonly string AdminClusterName;
        /// <summary>
        /// Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// The Anthos clusters on bare metal version for your user cluster.
        /// </summary>
        public readonly string BareMetalVersion;
        /// <summary>
        /// Binary Authorization related configurations.
        /// </summary>
        public readonly Outputs.BinaryAuthorizationResponse BinaryAuthorization;
        /// <summary>
        /// Cluster operations configuration.
        /// </summary>
        public readonly Outputs.BareMetalClusterOperationsConfigResponse ClusterOperations;
        /// <summary>
        /// Control plane configuration.
        /// </summary>
        public readonly Outputs.BareMetalControlPlaneConfigResponse ControlPlane;
        /// <summary>
        /// The time when the bare metal user cluster was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// A human readable description of this bare metal user cluster.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The IP address of the bare metal user cluster's API server.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Fleet configuration for the cluster.
        /// </summary>
        public readonly Outputs.FleetResponse Fleet;
        /// <summary>
        /// Load balancer configuration.
        /// </summary>
        public readonly Outputs.BareMetalLoadBalancerConfigResponse LoadBalancer;
        /// <summary>
        /// The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl.
        /// </summary>
        public readonly string LocalName;
        /// <summary>
        /// Maintenance configuration.
        /// </summary>
        public readonly Outputs.BareMetalMaintenanceConfigResponse MaintenanceConfig;
        /// <summary>
        /// Status of on-going maintenance tasks.
        /// </summary>
        public readonly Outputs.BareMetalMaintenanceStatusResponse MaintenanceStatus;
        /// <summary>
        /// Immutable. The bare metal user cluster resource name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network configuration.
        /// </summary>
        public readonly Outputs.BareMetalNetworkConfigResponse NetworkConfig;
        /// <summary>
        /// Node access related configurations.
        /// </summary>
        public readonly Outputs.BareMetalNodeAccessConfigResponse NodeAccessConfig;
        /// <summary>
        /// Workload node configuration.
        /// </summary>
        public readonly Outputs.BareMetalWorkloadNodeConfigResponse NodeConfig;
        /// <summary>
        /// OS environment related configurations.
        /// </summary>
        public readonly Outputs.BareMetalOsEnvironmentConfigResponse OsEnvironmentConfig;
        /// <summary>
        /// Proxy configuration.
        /// </summary>
        public readonly Outputs.BareMetalProxyConfigResponse Proxy;
        /// <summary>
        /// If set, there are currently changes in flight to the bare metal user cluster.
        /// </summary>
        public readonly bool Reconciling;
        /// <summary>
        /// Security related setting configuration.
        /// </summary>
        public readonly Outputs.BareMetalSecurityConfigResponse SecurityConfig;
        /// <summary>
        /// The current state of the bare metal user cluster.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Detailed cluster status.
        /// </summary>
        public readonly Outputs.ResourceStatusResponse Status;
        /// <summary>
        /// Storage configuration.
        /// </summary>
        public readonly Outputs.BareMetalStorageConfigResponse Storage;
        /// <summary>
        /// The unique identifier of the bare metal user cluster.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The time when the bare metal user cluster was last updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The cluster upgrade policy.
        /// </summary>
        public readonly Outputs.BareMetalClusterUpgradePolicyResponse UpgradePolicy;
        /// <summary>
        /// The result of the preflight check.
        /// </summary>
        public readonly Outputs.ValidationCheckResponse ValidationCheck;

        [OutputConstructor]
        private GetBareMetalClusterResult(
            string adminClusterMembership,

            string adminClusterName,

            ImmutableDictionary<string, string> annotations,

            string bareMetalVersion,

            Outputs.BinaryAuthorizationResponse binaryAuthorization,

            Outputs.BareMetalClusterOperationsConfigResponse clusterOperations,

            Outputs.BareMetalControlPlaneConfigResponse controlPlane,

            string createTime,

            string deleteTime,

            string description,

            string endpoint,

            string etag,

            Outputs.FleetResponse fleet,

            Outputs.BareMetalLoadBalancerConfigResponse loadBalancer,

            string localName,

            Outputs.BareMetalMaintenanceConfigResponse maintenanceConfig,

            Outputs.BareMetalMaintenanceStatusResponse maintenanceStatus,

            string name,

            Outputs.BareMetalNetworkConfigResponse networkConfig,

            Outputs.BareMetalNodeAccessConfigResponse nodeAccessConfig,

            Outputs.BareMetalWorkloadNodeConfigResponse nodeConfig,

            Outputs.BareMetalOsEnvironmentConfigResponse osEnvironmentConfig,

            Outputs.BareMetalProxyConfigResponse proxy,

            bool reconciling,

            Outputs.BareMetalSecurityConfigResponse securityConfig,

            string state,

            Outputs.ResourceStatusResponse status,

            Outputs.BareMetalStorageConfigResponse storage,

            string uid,

            string updateTime,

            Outputs.BareMetalClusterUpgradePolicyResponse upgradePolicy,

            Outputs.ValidationCheckResponse validationCheck)
        {
            AdminClusterMembership = adminClusterMembership;
            AdminClusterName = adminClusterName;
            Annotations = annotations;
            BareMetalVersion = bareMetalVersion;
            BinaryAuthorization = binaryAuthorization;
            ClusterOperations = clusterOperations;
            ControlPlane = controlPlane;
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Description = description;
            Endpoint = endpoint;
            Etag = etag;
            Fleet = fleet;
            LoadBalancer = loadBalancer;
            LocalName = localName;
            MaintenanceConfig = maintenanceConfig;
            MaintenanceStatus = maintenanceStatus;
            Name = name;
            NetworkConfig = networkConfig;
            NodeAccessConfig = nodeAccessConfig;
            NodeConfig = nodeConfig;
            OsEnvironmentConfig = osEnvironmentConfig;
            Proxy = proxy;
            Reconciling = reconciling;
            SecurityConfig = securityConfig;
            State = state;
            Status = status;
            Storage = storage;
            Uid = uid;
            UpdateTime = updateTime;
            UpgradePolicy = upgradePolicy;
            ValidationCheck = validationCheck;
        }
    }
}
