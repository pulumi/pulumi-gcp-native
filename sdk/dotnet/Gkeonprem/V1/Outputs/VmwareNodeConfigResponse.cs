// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Gkeonprem.V1.Outputs
{

    /// <summary>
    /// Parameters that describe the configuration of all nodes within a given node pool.
    /// </summary>
    [OutputType]
    public sealed class VmwareNodeConfigResponse
    {
        /// <summary>
        /// VMware disk size to be used during creation.
        /// </summary>
        public readonly string BootDiskSizeGb;
        /// <summary>
        /// The number of CPUs for each node in the node pool.
        /// </summary>
        public readonly string Cpus;
        /// <summary>
        /// Allow node pool traffic to be load balanced. Only works for clusters with MetalLB load balancers.
        /// </summary>
        public readonly bool EnableLoadBalancer;
        /// <summary>
        /// The OS image name in vCenter, only valid when using Windows.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The OS image to be used for each node in a node pool. Currently `cos`, `ubuntu`, `ubuntu_containerd` and `windows` are supported.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The megabytes of memory for each node in the node pool.
        /// </summary>
        public readonly string MemoryMb;
        /// <summary>
        /// The number of nodes in the node pool.
        /// </summary>
        public readonly string Replicas;
        /// <summary>
        /// The initial taints assigned to nodes of this node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.NodeTaintResponse> Taints;
        /// <summary>
        /// Specifies the vSphere config for node pool.
        /// </summary>
        public readonly Outputs.VmwareVsphereConfigResponse VsphereConfig;

        [OutputConstructor]
        private VmwareNodeConfigResponse(
            string bootDiskSizeGb,

            string cpus,

            bool enableLoadBalancer,

            string image,

            string imageType,

            ImmutableDictionary<string, string> labels,

            string memoryMb,

            string replicas,

            ImmutableArray<Outputs.NodeTaintResponse> taints,

            Outputs.VmwareVsphereConfigResponse vsphereConfig)
        {
            BootDiskSizeGb = bootDiskSizeGb;
            Cpus = cpus;
            EnableLoadBalancer = enableLoadBalancer;
            Image = image;
            ImageType = imageType;
            Labels = labels;
            MemoryMb = memoryMb;
            Replicas = replicas;
            Taints = taints;
            VsphereConfig = vsphereConfig;
        }
    }
}
