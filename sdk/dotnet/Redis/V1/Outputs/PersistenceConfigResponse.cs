// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Redis.V1.Outputs
{

    /// <summary>
    /// Configuration of the persistence functionality.
    /// </summary>
    [OutputType]
    public sealed class PersistenceConfigResponse
    {
        /// <summary>
        /// Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
        /// </summary>
        public readonly string PersistenceMode;
        /// <summary>
        /// The next time that a snapshot attempt is scheduled to occur.
        /// </summary>
        public readonly string RdbNextSnapshotTime;
        /// <summary>
        /// Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
        /// </summary>
        public readonly string RdbSnapshotPeriod;
        /// <summary>
        /// Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.
        /// </summary>
        public readonly string RdbSnapshotStartTime;

        [OutputConstructor]
        private PersistenceConfigResponse(
            string persistenceMode,

            string rdbNextSnapshotTime,

            string rdbSnapshotPeriod,

            string rdbSnapshotStartTime)
        {
            PersistenceMode = persistenceMode;
            RdbNextSnapshotTime = rdbNextSnapshotTime;
            RdbSnapshotPeriod = rdbSnapshotPeriod;
            RdbSnapshotStartTime = rdbSnapshotStartTime;
        }
    }
}
