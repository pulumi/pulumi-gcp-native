// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Jobs.V3.Outputs
{

    /// <summary>
    /// Custom attribute values that are either filterable or non-filterable.
    /// </summary>
    [OutputType]
    public sealed class CustomAttributeResponse
    {
        /// <summary>
        /// Optional. If the `filterable` flag is true, the custom field values may be used for custom attribute filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom attribute filters. Default is false.
        /// </summary>
        public readonly bool Filterable;
        /// <summary>
        /// Optional but exactly one of string_values or long_values must be specified. This field is used to perform number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at most 1 long_values is supported.
        /// </summary>
        public readonly ImmutableArray<string> LongValues;
        /// <summary>
        /// Optional but exactly one of string_values or long_values must be specified. This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size of unfilterable `string_values` is 50KB. Empty string is not allowed.
        /// </summary>
        public readonly ImmutableArray<string> StringValues;

        [OutputConstructor]
        private CustomAttributeResponse(
            bool filterable,

            ImmutableArray<string> longValues,

            ImmutableArray<string> stringValues)
        {
            Filterable = filterable;
            LongValues = longValues;
            StringValues = stringValues;
        }
    }
}
