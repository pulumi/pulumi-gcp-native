// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMwareEngine.V1
{
    public static class GetExternalAccessRule
    {
        /// <summary>
        /// Gets details of a single external access rule.
        /// </summary>
        public static Task<GetExternalAccessRuleResult> InvokeAsync(GetExternalAccessRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalAccessRuleResult>("google-native:vmwareengine/v1:getExternalAccessRule", args ?? new GetExternalAccessRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single external access rule.
        /// </summary>
        public static Output<GetExternalAccessRuleResult> Invoke(GetExternalAccessRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalAccessRuleResult>("google-native:vmwareengine/v1:getExternalAccessRule", args ?? new GetExternalAccessRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalAccessRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("externalAccessRuleId", required: true)]
        public string ExternalAccessRuleId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("networkPolicyId", required: true)]
        public string NetworkPolicyId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetExternalAccessRuleArgs()
        {
        }
        public static new GetExternalAccessRuleArgs Empty => new GetExternalAccessRuleArgs();
    }

    public sealed class GetExternalAccessRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("externalAccessRuleId", required: true)]
        public Input<string> ExternalAccessRuleId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("networkPolicyId", required: true)]
        public Input<string> NetworkPolicyId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetExternalAccessRuleInvokeArgs()
        {
        }
        public static new GetExternalAccessRuleInvokeArgs Empty => new GetExternalAccessRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalAccessRuleResult
    {
        /// <summary>
        /// The action that the external access rule performs.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// Creation time of this resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// User-provided description for this external access rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// If destination ranges are specified, the external access rule applies only to the traffic that has a destination IP address in these ranges. The specified IP addresses must have reserved external IP addresses in the scope of the parent network policy. To match all external IP addresses in the scope of the parent network policy, specify `0.0.0.0/0`. To match a specific external IP address, specify it using the `IpRange.external_address` property.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpRangeResponse> DestinationIpRanges;
        /// <summary>
        /// A list of destination ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all destination ports, specify `["0-65535"]`.
        /// </summary>
        public readonly ImmutableArray<string> DestinationPorts;
        /// <summary>
        /// The IP protocol to which the external access rule applies. This value can be one of the following three protocol strings (not case-sensitive): `tcp`, `udp`, or `icmp`.
        /// </summary>
        public readonly string IpProtocol;
        /// <summary>
        /// The resource name of this external access rule. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// External access rule priority, which determines the external access rule to use when multiple rules apply. If multiple rules have the same priority, their ordering is non-deterministic. If specific ordering is required, assign unique priorities to enforce such ordering. The external access rule priority is an integer from 100 to 4096, both inclusive. Lower integers indicate higher precedence. For example, a rule with priority `100` has higher precedence than a rule with priority `101`.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// If source ranges are specified, the external access rule applies only to traffic that has a source IP address in these ranges. These ranges can either be expressed in the CIDR format or as an IP address. As only inbound rules are supported, `ExternalAddress` resources cannot be the source IP addresses of an external access rule. To match all source addresses, specify `0.0.0.0/0`.
        /// </summary>
        public readonly ImmutableArray<Outputs.IpRangeResponse> SourceIpRanges;
        /// <summary>
        /// A list of source ports to which the external access rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. For example: `["22"]`, `["80","443"]`, or `["12345-12349"]`. To match all source ports, specify `["0-65535"]`.
        /// </summary>
        public readonly ImmutableArray<string> SourcePorts;
        /// <summary>
        /// The state of the resource.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Last update time of this resource.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetExternalAccessRuleResult(
            string action,

            string createTime,

            string description,

            ImmutableArray<Outputs.IpRangeResponse> destinationIpRanges,

            ImmutableArray<string> destinationPorts,

            string ipProtocol,

            string name,

            int priority,

            ImmutableArray<Outputs.IpRangeResponse> sourceIpRanges,

            ImmutableArray<string> sourcePorts,

            string state,

            string uid,

            string updateTime)
        {
            Action = action;
            CreateTime = createTime;
            Description = description;
            DestinationIpRanges = destinationIpRanges;
            DestinationPorts = destinationPorts;
            IpProtocol = ipProtocol;
            Name = name;
            Priority = priority;
            SourceIpRanges = sourceIpRanges;
            SourcePorts = sourcePorts;
            State = state;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
