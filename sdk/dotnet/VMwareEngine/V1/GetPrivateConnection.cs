// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMwareEngine.V1
{
    public static class GetPrivateConnection
    {
        /// <summary>
        /// Retrieves a `PrivateConnection` resource by its resource name. The resource contains details of the private connection, such as connected network, routing mode and state.
        /// </summary>
        public static Task<GetPrivateConnectionResult> InvokeAsync(GetPrivateConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateConnectionResult>("google-native:vmwareengine/v1:getPrivateConnection", args ?? new GetPrivateConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a `PrivateConnection` resource by its resource name. The resource contains details of the private connection, such as connected network, routing mode and state.
        /// </summary>
        public static Output<GetPrivateConnectionResult> Invoke(GetPrivateConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateConnectionResult>("google-native:vmwareengine/v1:getPrivateConnection", args ?? new GetPrivateConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateConnectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("privateConnectionId", required: true)]
        public string PrivateConnectionId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetPrivateConnectionArgs()
        {
        }
        public static new GetPrivateConnectionArgs Empty => new GetPrivateConnectionArgs();
    }

    public sealed class GetPrivateConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("privateConnectionId", required: true)]
        public Input<string> PrivateConnectionId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetPrivateConnectionInvokeArgs()
        {
        }
        public static new GetPrivateConnectionInvokeArgs Empty => new GetPrivateConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateConnectionResult
    {
        /// <summary>
        /// Creation time of this resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. User-provided description for this private connection.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The resource name of the private connection. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/privateConnections/my-connection`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// VPC network peering id between given network VPC and VMwareEngineNetwork.
        /// </summary>
        public readonly string PeeringId;
        /// <summary>
        /// Peering state between service network and VMware Engine network.
        /// </summary>
        public readonly string PeeringState;
        /// <summary>
        /// Optional. Routing Mode. Default value is set to GLOBAL. For type = PRIVATE_SERVICE_ACCESS, this field can be set to GLOBAL or REGIONAL, for other types only GLOBAL is supported.
        /// </summary>
        public readonly string RoutingMode;
        /// <summary>
        /// Service network to create private connection. Specify the name in the following form: `projects/{project}/global/networks/{network_id}` For type = PRIVATE_SERVICE_ACCESS, this field represents servicenetworking VPC, e.g. projects/project-tp/global/networks/servicenetworking. For type = NETAPP_CLOUD_VOLUME, this field represents NetApp service VPC, e.g. projects/project-tp/global/networks/netapp-tenant-vpc. For type = DELL_POWERSCALE, this field represent Dell service VPC, e.g. projects/project-tp/global/networks/dell-tenant-vpc. For type= THIRD_PARTY_SERVICE, this field could represent a consumer VPC or any other producer VPC to which the VMware Engine Network needs to be connected, e.g. projects/project/global/networks/vpc.
        /// </summary>
        public readonly string ServiceNetwork;
        /// <summary>
        /// State of the private connection.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Private connection type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Last update time of this resource.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The relative resource name of Legacy VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}`, `{location}` will be same as specified in private connection resource name and `{vmware_engine_network_id}` will be in the form of `{location}`-default e.g. projects/project/locations/us-central1/vmwareEngineNetworks/us-central1-default.
        /// </summary>
        public readonly string VmwareEngineNetwork;
        /// <summary>
        /// The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
        /// </summary>
        public readonly string VmwareEngineNetworkCanonical;

        [OutputConstructor]
        private GetPrivateConnectionResult(
            string createTime,

            string description,

            string name,

            string peeringId,

            string peeringState,

            string routingMode,

            string serviceNetwork,

            string state,

            string type,

            string uid,

            string updateTime,

            string vmwareEngineNetwork,

            string vmwareEngineNetworkCanonical)
        {
            CreateTime = createTime;
            Description = description;
            Name = name;
            PeeringId = peeringId;
            PeeringState = peeringState;
            RoutingMode = routingMode;
            ServiceNetwork = serviceNetwork;
            State = state;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
            VmwareEngineNetwork = vmwareEngineNetwork;
            VmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
        }
    }
}
