// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMwareEngine.V1
{
    public static class GetLoggingServer
    {
        /// <summary>
        /// Gets details of a logging server.
        /// </summary>
        public static Task<GetLoggingServerResult> InvokeAsync(GetLoggingServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLoggingServerResult>("google-native:vmwareengine/v1:getLoggingServer", args ?? new GetLoggingServerArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a logging server.
        /// </summary>
        public static Output<GetLoggingServerResult> Invoke(GetLoggingServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLoggingServerResult>("google-native:vmwareengine/v1:getLoggingServer", args ?? new GetLoggingServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoggingServerArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("loggingServerId", required: true)]
        public string LoggingServerId { get; set; } = null!;

        [Input("privateCloudId", required: true)]
        public string PrivateCloudId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetLoggingServerArgs()
        {
        }
        public static new GetLoggingServerArgs Empty => new GetLoggingServerArgs();
    }

    public sealed class GetLoggingServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("loggingServerId", required: true)]
        public Input<string> LoggingServerId { get; set; } = null!;

        [Input("privateCloudId", required: true)]
        public Input<string> PrivateCloudId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetLoggingServerInvokeArgs()
        {
        }
        public static new GetLoggingServerInvokeArgs Empty => new GetLoggingServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLoggingServerResult
    {
        /// <summary>
        /// Creation time of this resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Fully-qualified domain name (FQDN) or IP Address of the logging server.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The resource name of this logging server. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Port number at which the logging server receives logs.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// Protocol used by vCenter to send logs to a logging server.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The type of component that produces logs that will be forwarded to this logging server.
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Last update time of this resource.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetLoggingServerResult(
            string createTime,

            string hostname,

            string name,

            int port,

            string protocol,

            string sourceType,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            Hostname = hostname;
            Name = name;
            Port = port;
            Protocol = protocol;
            SourceType = sourceType;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
