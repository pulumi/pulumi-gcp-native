// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMwareEngine.V1
{
    public static class GetNetworkPolicy
    {
        /// <summary>
        /// Retrieves a `NetworkPolicy` resource by its resource name.
        /// </summary>
        public static Task<GetNetworkPolicyResult> InvokeAsync(GetNetworkPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkPolicyResult>("google-native:vmwareengine/v1:getNetworkPolicy", args ?? new GetNetworkPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a `NetworkPolicy` resource by its resource name.
        /// </summary>
        public static Output<GetNetworkPolicyResult> Invoke(GetNetworkPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPolicyResult>("google-native:vmwareengine/v1:getNetworkPolicy", args ?? new GetNetworkPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("networkPolicyId", required: true)]
        public string NetworkPolicyId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetNetworkPolicyArgs()
        {
        }
        public static new GetNetworkPolicyArgs Empty => new GetNetworkPolicyArgs();
    }

    public sealed class GetNetworkPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("networkPolicyId", required: true)]
        public Input<string> NetworkPolicyId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetNetworkPolicyInvokeArgs()
        {
        }
        public static new GetNetworkPolicyInvokeArgs Empty => new GetNetworkPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkPolicyResult
    {
        /// <summary>
        /// Creation time of this resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. User-provided description for this network policy.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
        /// </summary>
        public readonly string EdgeServicesCidr;
        /// <summary>
        /// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled when `internet_access` is also enabled.
        /// </summary>
        public readonly Outputs.NetworkServiceResponse ExternalIp;
        /// <summary>
        /// Network service that allows VMware workloads to access the internet.
        /// </summary>
        public readonly Outputs.NetworkServiceResponse InternetAccess;
        /// <summary>
        /// The resource name of this network policy. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Last update time of this resource.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Optional. The relative resource name of the VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}` can either be a project number or a project ID.
        /// </summary>
        public readonly string VmwareEngineNetwork;
        /// <summary>
        /// The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`
        /// </summary>
        public readonly string VmwareEngineNetworkCanonical;

        [OutputConstructor]
        private GetNetworkPolicyResult(
            string createTime,

            string description,

            string edgeServicesCidr,

            Outputs.NetworkServiceResponse externalIp,

            Outputs.NetworkServiceResponse internetAccess,

            string name,

            string uid,

            string updateTime,

            string vmwareEngineNetwork,

            string vmwareEngineNetworkCanonical)
        {
            CreateTime = createTime;
            Description = description;
            EdgeServicesCidr = edgeServicesCidr;
            ExternalIp = externalIp;
            InternetAccess = internetAccess;
            Name = name;
            Uid = uid;
            UpdateTime = updateTime;
            VmwareEngineNetwork = vmwareEngineNetwork;
            VmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
        }
    }
}
