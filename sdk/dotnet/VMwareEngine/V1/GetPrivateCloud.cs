// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.VMwareEngine.V1
{
    public static class GetPrivateCloud
    {
        /// <summary>
        /// Retrieves a `PrivateCloud` resource by its resource name.
        /// </summary>
        public static Task<GetPrivateCloudResult> InvokeAsync(GetPrivateCloudArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrivateCloudResult>("google-native:vmwareengine/v1:getPrivateCloud", args ?? new GetPrivateCloudArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves a `PrivateCloud` resource by its resource name.
        /// </summary>
        public static Output<GetPrivateCloudResult> Invoke(GetPrivateCloudInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrivateCloudResult>("google-native:vmwareengine/v1:getPrivateCloud", args ?? new GetPrivateCloudInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrivateCloudArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("privateCloudId", required: true)]
        public string PrivateCloudId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetPrivateCloudArgs()
        {
        }
        public static new GetPrivateCloudArgs Empty => new GetPrivateCloudArgs();
    }

    public sealed class GetPrivateCloudInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("privateCloudId", required: true)]
        public Input<string> PrivateCloudId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetPrivateCloudInvokeArgs()
        {
        }
        public static new GetPrivateCloudInvokeArgs Empty => new GetPrivateCloudInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrivateCloudResult
    {
        /// <summary>
        /// Creation time of this resource.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Time when the resource was scheduled for deletion.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// User-provided description for this private cloud.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Time when the resource will be irreversibly deleted.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// HCX appliance.
        /// </summary>
        public readonly Outputs.HcxResponse Hcx;
        /// <summary>
        /// Input only. The management cluster for this private cloud. This field is required during creation of the private cloud to provide details for the default cluster. The following fields can't be changed after private cloud creation: `ManagementCluster.clusterId`, `ManagementCluster.nodeTypeId`.
        /// </summary>
        public readonly Outputs.ManagementClusterResponse ManagementCluster;
        /// <summary>
        /// The resource name of this private cloud. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network configuration of the private cloud.
        /// </summary>
        public readonly Outputs.NetworkConfigResponse NetworkConfig;
        /// <summary>
        /// NSX appliance.
        /// </summary>
        public readonly Outputs.NsxResponse Nsx;
        /// <summary>
        /// State of the resource. New values may be added to this enum when appropriate.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Optional. Type of the private cloud. Defaults to STANDARD.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Last update time of this resource.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Vcenter appliance.
        /// </summary>
        public readonly Outputs.VcenterResponse Vcenter;

        [OutputConstructor]
        private GetPrivateCloudResult(
            string createTime,

            string deleteTime,

            string description,

            string expireTime,

            Outputs.HcxResponse hcx,

            Outputs.ManagementClusterResponse managementCluster,

            string name,

            Outputs.NetworkConfigResponse networkConfig,

            Outputs.NsxResponse nsx,

            string state,

            string type,

            string uid,

            string updateTime,

            Outputs.VcenterResponse vcenter)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Description = description;
            ExpireTime = expireTime;
            Hcx = hcx;
            ManagementCluster = managementCluster;
            Name = name;
            NetworkConfig = networkConfig;
            Nsx = nsx;
            State = state;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
            Vcenter = vcenter;
        }
    }
}
