// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.GoogleNative.APIGateway.V1
{
    public static class GetConfig
    {
        /// <summary>
        /// Gets details of a single ApiConfig.
        /// </summary>
        public static Task<GetConfigResult> InvokeAsync(GetConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetConfigResult>("google-native:apigateway/v1:getConfig", args ?? new GetConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single ApiConfig.
        /// </summary>
        public static Output<GetConfigResult> Invoke(GetConfigInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetConfigResult>("google-native:apigateway/v1:getConfig", args ?? new GetConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigArgs : Pulumi.InvokeArgs
    {
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        [Input("configId", required: true)]
        public string ConfigId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("view")]
        public string? View { get; set; }

        public GetConfigArgs()
        {
        }
    }

    public sealed class GetConfigInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("configId", required: true)]
        public Input<string> ConfigId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("view")]
        public Input<string>? View { get; set; }

        public GetConfigInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetConfigResult
    {
        /// <summary>
        /// Created time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Immutable. The Google Cloud IAM Service Account that Gateways serving this config should use to authenticate to other services. This may either be the Service Account's email (`{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`) or its full resource name (`projects/{PROJECT}/accounts/{UNIQUE_ID}`). This is most often used when the service is a GCP resource such as a Cloud Run Service or an IAP-secured service.
        /// </summary>
        public readonly string GatewayServiceAccount;
        /// <summary>
        /// Optional. gRPC service definition files. If specified, openapi_documents must not be included.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApigatewayApiConfigGrpcServiceDefinitionResponse> GrpcServices;
        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Optional. Service Configuration files. At least one must be included when using gRPC service definitions. See https://cloud.google.com/endpoints/docs/grpc/grpc-service-config#service_configuration_overview for the expected file contents. If multiple files are specified, the files are merged with the following rules: * All singular scalar fields are merged using "last one wins" semantics in the order of the files uploaded. * Repeated fields are concatenated. * Singular embedded messages are merged using these rules for nested fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApigatewayApiConfigFileResponse> ManagedServiceConfigs;
        /// <summary>
        /// Resource name of the API Config. Format: projects/{project}/locations/global/apis/{api}/configs/{api_config}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. OpenAPI specification documents. If specified, grpc_services and managed_service_configs must not be included.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApigatewayApiConfigOpenApiDocumentResponse> OpenapiDocuments;
        /// <summary>
        /// The ID of the associated Service Config ( https://cloud.google.com/service-infrastructure/docs/glossary#config).
        /// </summary>
        public readonly string ServiceConfigId;
        /// <summary>
        /// State of the API Config.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Updated time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetConfigResult(
            string createTime,

            string displayName,

            string gatewayServiceAccount,

            ImmutableArray<Outputs.ApigatewayApiConfigGrpcServiceDefinitionResponse> grpcServices,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.ApigatewayApiConfigFileResponse> managedServiceConfigs,

            string name,

            ImmutableArray<Outputs.ApigatewayApiConfigOpenApiDocumentResponse> openapiDocuments,

            string serviceConfigId,

            string state,

            string updateTime)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            GatewayServiceAccount = gatewayServiceAccount;
            GrpcServices = grpcServices;
            Labels = labels;
            ManagedServiceConfigs = managedServiceConfigs;
            Name = name;
            OpenapiDocuments = openapiDocuments;
            ServiceConfigId = serviceConfigId;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
