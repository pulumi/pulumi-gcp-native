// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Transcoder.V1
{
    /// <summary>
    /// Creates a job template in the specified region.
    /// </summary>
    [GoogleNativeResourceType("google-native:transcoder/v1:JobTemplate")]
    public partial class JobTemplate : Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration for this template.
        /// </summary>
        [Output("config")]
        public Output<Outputs.JobConfigResponse> Config { get; private set; } = null!;

        /// <summary>
        /// The labels associated with this job template. You can use these to organize and group your job templates.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a JobTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobTemplate(string name, JobTemplateArgs args, CustomResourceOptions? options = null)
            : base("google-native:transcoder/v1:JobTemplate", name, args ?? new JobTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobTemplate(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:transcoder/v1:JobTemplate", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobTemplate Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new JobTemplate(name, id, options);
        }
    }

    public sealed class JobTemplateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration for this template.
        /// </summary>
        [Input("config")]
        public Input<Inputs.JobConfigArgs>? Config { get; set; }

        /// <summary>
        /// Required. The ID to use for the job template, which will become the final component of the job template's resource name. This value should be 4-63 characters, and valid characters must match the regular expression `a-zA-Z*`.
        /// </summary>
        [Input("jobTemplateId", required: true)]
        public Input<string> JobTemplateId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The labels associated with this job template. You can use these to organize and group your job templates.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public JobTemplateArgs()
        {
        }
    }
}
