// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Genomics.V1Alpha2.Outputs
{

    /// <summary>
    /// A Google Compute Engine disk resource specification.
    /// </summary>
    [OutputType]
    public sealed class DiskResponse
    {
        /// <summary>
        /// Required at create time and cannot be overridden at run time. Specifies the path in the docker container where files on this disk should be located. For example, if `mountPoint` is `/mnt/disk`, and the parameter has `localPath` `inputs/file.txt`, the docker container can access the data at `/mnt/disk/inputs/file.txt`.
        /// </summary>
        public readonly string MountPoint;
        /// <summary>
        /// The name of the disk that can be used in the pipeline parameters. Must be 1 - 63 characters. The name "boot" is reserved for system use.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies how a sourced-base persistent disk will be mounted. See https://cloud.google.com/compute/docs/disks/persistent-disks#use_multi_instances for more details. Can only be set at create time.
        /// </summary>
        public readonly bool ReadOnly;
        /// <summary>
        /// The size of the disk. Defaults to 500 (GB). This field is not applicable for local SSD.
        /// </summary>
        public readonly int SizeGb;
        /// <summary>
        /// The full or partial URL of the persistent disk to attach. See https://cloud.google.com/compute/docs/reference/latest/instances#resource and https://cloud.google.com/compute/docs/disks/persistent-disks#snapshots for more details.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// The type of the disk to create.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private DiskResponse(
            string mountPoint,

            string name,

            bool readOnly,

            int sizeGb,

            string source,

            string type)
        {
            MountPoint = mountPoint;
            Name = name;
            ReadOnly = readOnly;
            SizeGb = sizeGb;
            Source = source;
            Type = type;
        }
    }
}
