// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Metastore.V1Alpha.Outputs
{

    /// <summary>
    /// This specifies the configuration of scheduled backup.
    /// </summary>
    [OutputType]
    public sealed class ScheduledBackupResponse
    {
        /// <summary>
        /// Optional. A Cloud Storage URI of a folder, in the format gs:///. A sub-folder containing backup files will be stored below it.
        /// </summary>
        public readonly string BackupLocation;
        /// <summary>
        /// Optional. The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron The default is empty: scheduled backup is not enabled. Must be specified to enable scheduled backups.
        /// </summary>
        public readonly string CronSchedule;
        /// <summary>
        /// Optional. Defines whether the scheduled backup is enabled. The default value is false.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The details of the latest scheduled backup.
        /// </summary>
        public readonly Outputs.LatestBackupResponse LatestBackup;
        /// <summary>
        /// The time when the next backups execution is scheduled to start.
        /// </summary>
        public readonly string NextScheduledTime;
        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified, the default is UTC.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private ScheduledBackupResponse(
            string backupLocation,

            string cronSchedule,

            bool enabled,

            Outputs.LatestBackupResponse latestBackup,

            string nextScheduledTime,

            string timeZone)
        {
            BackupLocation = backupLocation;
            CronSchedule = cronSchedule;
            Enabled = enabled;
            LatestBackup = latestBackup;
            NextScheduledTime = nextScheduledTime;
            TimeZone = timeZone;
        }
    }
}
