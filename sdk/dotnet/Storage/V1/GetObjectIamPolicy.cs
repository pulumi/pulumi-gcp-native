// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Storage.V1
{
    public static class GetObjectIamPolicy
    {
        /// <summary>
        /// Returns an IAM policy for the specified object.
        /// </summary>
        public static Task<GetObjectIamPolicyResult> InvokeAsync(GetObjectIamPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetObjectIamPolicyResult>("google-native:storage/v1:getObjectIamPolicy", args ?? new GetObjectIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Returns an IAM policy for the specified object.
        /// </summary>
        public static Output<GetObjectIamPolicyResult> Invoke(GetObjectIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetObjectIamPolicyResult>("google-native:storage/v1:getObjectIamPolicy", args ?? new GetObjectIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        [Input("generation")]
        public string? Generation { get; set; }

        [Input("object", required: true)]
        public string Object { get; set; } = null!;

        [Input("userProject")]
        public string? UserProject { get; set; }

        public GetObjectIamPolicyArgs()
        {
        }
        public static new GetObjectIamPolicyArgs Empty => new GetObjectIamPolicyArgs();
    }

    public sealed class GetObjectIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("generation")]
        public Input<string>? Generation { get; set; }

        [Input("object", required: true)]
        public Input<string> Object { get; set; } = null!;

        [Input("userProject")]
        public Input<string>? UserProject { get; set; }

        public GetObjectIamPolicyInvokeArgs()
        {
        }
        public static new GetObjectIamPolicyInvokeArgs Empty => new GetObjectIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectIamPolicyResult
    {
        /// <summary>
        /// An association between a role, which comes with a set of permissions, and members who may assume that role.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObjectIamPolicyBindingsItemResponse> Bindings;
        /// <summary>
        /// HTTP 1.1  Entity tag for the policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The IAM policy format version.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetObjectIamPolicyResult(
            ImmutableArray<Outputs.ObjectIamPolicyBindingsItemResponse> bindings,

            string etag,

            string kind,

            string resourceId,

            int version)
        {
            Bindings = bindings;
            Etag = etag;
            Kind = kind;
            ResourceId = resourceId;
            Version = version;
        }
    }
}
