// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Storage.V1
{
    public static class GetManagedFolderIamPolicy
    {
        /// <summary>
        /// Returns an IAM policy for the specified managed folder.
        /// </summary>
        public static Task<GetManagedFolderIamPolicyResult> InvokeAsync(GetManagedFolderIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedFolderIamPolicyResult>("google-native:storage/v1:getManagedFolderIamPolicy", args ?? new GetManagedFolderIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Returns an IAM policy for the specified managed folder.
        /// </summary>
        public static Output<GetManagedFolderIamPolicyResult> Invoke(GetManagedFolderIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedFolderIamPolicyResult>("google-native:storage/v1:getManagedFolderIamPolicy", args ?? new GetManagedFolderIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedFolderIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        [Input("managedFolder", required: true)]
        public string ManagedFolder { get; set; } = null!;

        [Input("optionsRequestedPolicyVersion")]
        public int? OptionsRequestedPolicyVersion { get; set; }

        [Input("userProject")]
        public string? UserProject { get; set; }

        public GetManagedFolderIamPolicyArgs()
        {
        }
        public static new GetManagedFolderIamPolicyArgs Empty => new GetManagedFolderIamPolicyArgs();
    }

    public sealed class GetManagedFolderIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("managedFolder", required: true)]
        public Input<string> ManagedFolder { get; set; } = null!;

        [Input("optionsRequestedPolicyVersion")]
        public Input<int>? OptionsRequestedPolicyVersion { get; set; }

        [Input("userProject")]
        public Input<string>? UserProject { get; set; }

        public GetManagedFolderIamPolicyInvokeArgs()
        {
        }
        public static new GetManagedFolderIamPolicyInvokeArgs Empty => new GetManagedFolderIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedFolderIamPolicyResult
    {
        /// <summary>
        /// An association between a role, which comes with a set of permissions, and members who may assume that role.
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagedFolderIamPolicyBindingsItemResponse> Bindings;
        /// <summary>
        /// HTTP 1.1  Entity tag for the policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, projects/_/buckets/bucket/objects/object for objects, and projects/_/buckets/bucket/managedFolders/managedFolder. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
        /// </summary>
        public readonly string ResourceId;
        /// <summary>
        /// The IAM policy format version.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetManagedFolderIamPolicyResult(
            ImmutableArray<Outputs.ManagedFolderIamPolicyBindingsItemResponse> bindings,

            string etag,

            string kind,

            string resourceId,

            int version)
        {
            Bindings = bindings;
            Etag = etag;
            Kind = kind;
            ResourceId = resourceId;
            Version = version;
        }
    }
}
