// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Storage.V1
{
    /// <summary>
    /// Updates an IAM policy for the specified bucket.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:storage/v1:BucketIamPolicy")]
    public partial class BucketIamPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a BucketIamPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketIamPolicy(string name, BucketIamPolicyArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:storage/v1:BucketIamPolicy", name, args ?? new BucketIamPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketIamPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:storage/v1:BucketIamPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketIamPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketIamPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BucketIamPolicy(name, id, options);
        }
    }

    public sealed class BucketIamPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("bindings")]
        private InputList<ImmutableDictionary<string, string>>? _bindings;

        /// <summary>
        /// An association between a role, which comes with a set of permissions, and members who may assume that role.
        /// </summary>
        public InputList<ImmutableDictionary<string, string>> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<ImmutableDictionary<string, string>>());
            set => _bindings = value;
        }

        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// HTTP 1.1  Entity tag for the policy.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// The IAM policy format version.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public BucketIamPolicyArgs()
        {
        }
    }
}
