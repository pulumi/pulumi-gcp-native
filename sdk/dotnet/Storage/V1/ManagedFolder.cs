// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Storage.V1
{
    /// <summary>
    /// Creates a new managed folder.
    /// </summary>
    [GoogleNativeResourceType("google-native:storage/v1:ManagedFolder")]
    public partial class ManagedFolder : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The creation time of the managed folder in RFC 3339 format.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The kind of item this is. For managed folders, this is always storage#managedFolder.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.
        /// </summary>
        [Output("metageneration")]
        public Output<string> Metageneration { get; private set; } = null!;

        /// <summary>
        /// The name of the managed folder. Required if not specified by URL parameter.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The link to this managed folder.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// The last update time of the managed folder metadata in RFC 3339 format.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedFolder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedFolder(string name, ManagedFolderArgs args, CustomResourceOptions? options = null)
            : base("google-native:storage/v1:ManagedFolder", name, args ?? new ManagedFolderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedFolder(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:storage/v1:ManagedFolder", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "bucket",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedFolder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedFolder Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ManagedFolder(name, id, options);
        }
    }

    public sealed class ManagedFolderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket containing this managed folder.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The creation time of the managed folder in RFC 3339 format.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID of the managed folder, including the bucket name and managed folder name.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The kind of item this is. For managed folders, this is always storage#managedFolder.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The version of the metadata for this managed folder. Used for preconditions and for detecting changes in metadata.
        /// </summary>
        [Input("metageneration")]
        public Input<string>? Metageneration { get; set; }

        /// <summary>
        /// The name of the managed folder. Required if not specified by URL parameter.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The link to this managed folder.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// The last update time of the managed folder metadata in RFC 3339 format.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ManagedFolderArgs()
        {
        }
        public static new ManagedFolderArgs Empty => new ManagedFolderArgs();
    }
}
