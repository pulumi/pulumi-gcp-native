// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Storage.V1
{
    /// <summary>
    /// Creates a notification subscription for a given bucket.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:storage/v1:Notification")]
    public partial class Notification : Pulumi.CustomResource
    {
        /// <summary>
        /// An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
        /// </summary>
        [Output("customAttributes")]
        public Output<ImmutableDictionary<string, string>> CustomAttributes { get; private set; } = null!;

        /// <summary>
        /// HTTP 1.1 Entity tag for this subscription notification.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// If present, only send notifications about listed event types. If empty, sent notifications for all event types.
        /// </summary>
        [Output("eventTypes")]
        public Output<ImmutableArray<string>> EventTypes { get; private set; } = null!;

        /// <summary>
        /// The kind of item this is. For notifications, this is always storage#notification.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// If present, only apply this notification configuration to object names that begin with this prefix.
        /// </summary>
        [Output("objectNamePrefix")]
        public Output<string> ObjectNamePrefix { get; private set; } = null!;

        /// <summary>
        /// The desired content of the Payload.
        /// </summary>
        [Output("payloadFormat")]
        public Output<string> PayloadFormat { get; private set; } = null!;

        /// <summary>
        /// The canonical URL of this notification.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
        /// </summary>
        [Output("topic")]
        public Output<string> Topic { get; private set; } = null!;


        /// <summary>
        /// Create a Notification resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Notification(string name, NotificationArgs args, CustomResourceOptions? options = null)
            : base("google-native:storage/v1:Notification", name, args ?? new NotificationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Notification(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:storage/v1:Notification", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Notification resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Notification Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Notification(name, id, options);
        }
    }

    public sealed class NotificationArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("customAttributes")]
        private InputMap<string>? _customAttributes;

        /// <summary>
        /// An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
        /// </summary>
        public InputMap<string> CustomAttributes
        {
            get => _customAttributes ?? (_customAttributes = new InputMap<string>());
            set => _customAttributes = value;
        }

        /// <summary>
        /// HTTP 1.1 Entity tag for this subscription notification.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("eventTypes")]
        private InputList<string>? _eventTypes;

        /// <summary>
        /// If present, only send notifications about listed event types. If empty, sent notifications for all event types.
        /// </summary>
        public InputList<string> EventTypes
        {
            get => _eventTypes ?? (_eventTypes = new InputList<string>());
            set => _eventTypes = value;
        }

        /// <summary>
        /// The ID of the notification.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The kind of item this is. For notifications, this is always storage#notification.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// If present, only apply this notification configuration to object names that begin with this prefix.
        /// </summary>
        [Input("objectNamePrefix")]
        public Input<string>? ObjectNamePrefix { get; set; }

        /// <summary>
        /// The desired content of the Payload.
        /// </summary>
        [Input("payloadFormat")]
        public Input<string>? PayloadFormat { get; set; }

        [Input("provisionalUserProject")]
        public Input<string>? ProvisionalUserProject { get; set; }

        /// <summary>
        /// The canonical URL of this notification.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        [Input("userProject")]
        public Input<string>? UserProject { get; set; }

        public NotificationArgs()
        {
        }
    }
}
