// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Cloudtasks.V2
{
    /// <summary>
    /// Sets the access control policy for a Queue. Replaces any existing policy. Note: The Cloud Console does not check queue-level IAM permissions yet. Project-level permissions are required to use the Cloud Console. Authorization requires the following [Google IAM](https://cloud.google.com/iam) permission on the specified resource parent: * `cloudtasks.queues.setIamPolicy`
    /// </summary>
    [GoogleCloudResourceType("google-cloud:cloudtasks/v2:QueueIamPolicy")]
    public partial class QueueIamPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a QueueIamPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QueueIamPolicy(string name, QueueIamPolicyArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:cloudtasks/v2:QueueIamPolicy", name, args ?? new QueueIamPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QueueIamPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:cloudtasks/v2:QueueIamPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QueueIamPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QueueIamPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new QueueIamPolicy(name, id, options);
        }
    }

    public sealed class QueueIamPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.
        /// </summary>
        [Input("policy")]
        public Input<Inputs.PolicyArgs>? Policy { get; set; }

        [Input("projectsId", required: true)]
        public Input<string> ProjectsId { get; set; } = null!;

        [Input("queuesId", required: true)]
        public Input<string> QueuesId { get; set; } = null!;

        public QueueIamPolicyArgs()
        {
        }
    }
}
