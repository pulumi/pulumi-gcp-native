// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V2.Outputs
{

    /// <summary>
    /// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
    /// </summary>
    [OutputType]
    public sealed class GoogleDevtoolsCloudbuildV2GitLabConfigResponse
    {
        /// <summary>
        /// A GitLab personal access token with the `api` scope access.
        /// </summary>
        public readonly Outputs.UserCredentialResponse AuthorizerCredential;
        /// <summary>
        /// The URI of the GitLab Enterprise host this connection is for. If not specified, the default value is https://gitlab.com.
        /// </summary>
        public readonly string HostUri;
        /// <summary>
        /// A GitLab personal access token with the minimum `read_api` scope access.
        /// </summary>
        public readonly Outputs.UserCredentialResponse ReadAuthorizerCredential;
        /// <summary>
        /// Version of the GitLab Enterprise server running on the `host_uri`.
        /// </summary>
        public readonly string ServerVersion;
        /// <summary>
        /// Configuration for using Service Directory to privately connect to a GitLab Enterprise server. This should only be set if the GitLab Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the GitLab Enterprise server will be made over the public internet.
        /// </summary>
        public readonly Outputs.GoogleDevtoolsCloudbuildV2ServiceDirectoryConfigResponse ServiceDirectoryConfig;
        /// <summary>
        /// SSL certificate to use for requests to GitLab Enterprise.
        /// </summary>
        public readonly string SslCa;
        /// <summary>
        /// Immutable. SecretManager resource containing the webhook secret of a GitLab Enterprise project, formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        public readonly string WebhookSecretSecretVersion;

        [OutputConstructor]
        private GoogleDevtoolsCloudbuildV2GitLabConfigResponse(
            Outputs.UserCredentialResponse authorizerCredential,

            string hostUri,

            Outputs.UserCredentialResponse readAuthorizerCredential,

            string serverVersion,

            Outputs.GoogleDevtoolsCloudbuildV2ServiceDirectoryConfigResponse serviceDirectoryConfig,

            string sslCa,

            string webhookSecretSecretVersion)
        {
            AuthorizerCredential = authorizerCredential;
            HostUri = hostUri;
            ReadAuthorizerCredential = readAuthorizerCredential;
            ServerVersion = serverVersion;
            ServiceDirectoryConfig = serviceDirectoryConfig;
            SslCa = sslCa;
            WebhookSecretSecretVersion = webhookSecretSecretVersion;
        }
    }
}
