// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V2.Inputs
{

    /// <summary>
    /// Configuration for connections to Bitbucket Cloud.
    /// </summary>
    public sealed class BitbucketCloudConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An access token with the `webhook`, `repository`, `repository:admin` and `pullrequest` scope access. It can be either a workspace, project or repository access token. It's recommended to use a system account to generate these credentials.
        /// </summary>
        [Input("authorizerCredential", required: true)]
        public Input<Inputs.UserCredentialArgs> AuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// An access token with the `repository` access. It can be either a workspace, project or repository access token. It's recommended to use a system account to generate the credentials.
        /// </summary>
        [Input("readAuthorizerCredential", required: true)]
        public Input<Inputs.UserCredentialArgs> ReadAuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// SecretManager resource containing the webhook secret used to verify webhook events, formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        [Input("webhookSecretSecretVersion", required: true)]
        public Input<string> WebhookSecretSecretVersion { get; set; } = null!;

        /// <summary>
        /// The Bitbucket Cloud Workspace ID to be connected to Google Cloud Platform.
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public BitbucketCloudConfigArgs()
        {
        }
        public static new BitbucketCloudConfigArgs Empty => new BitbucketCloudConfigArgs();
    }
}
