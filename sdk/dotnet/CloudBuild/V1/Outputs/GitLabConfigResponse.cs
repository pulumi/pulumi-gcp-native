// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V1.Outputs
{

    /// <summary>
    /// GitLabConfig represents the configuration for a GitLab integration.
    /// </summary>
    [OutputType]
    public sealed class GitLabConfigResponse
    {
        /// <summary>
        /// Connected GitLab.com or GitLabEnterprise repositories for this config.
        /// </summary>
        public readonly ImmutableArray<Outputs.GitLabRepositoryIdResponse> ConnectedRepositories;
        /// <summary>
        /// Time when the config was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. GitLabEnterprise config.
        /// </summary>
        public readonly Outputs.GitLabEnterpriseConfigResponse EnterpriseConfig;
        /// <summary>
        /// The resource name for the config.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Secret Manager secrets needed by the config.
        /// </summary>
        public readonly Outputs.GitLabSecretsResponse Secrets;
        /// <summary>
        /// Username of the GitLab.com or GitLab Enterprise account Cloud Build will use.
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// UUID included in webhook requests. The UUID is used to look up the corresponding config.
        /// </summary>
        public readonly string WebhookKey;

        [OutputConstructor]
        private GitLabConfigResponse(
            ImmutableArray<Outputs.GitLabRepositoryIdResponse> connectedRepositories,

            string createTime,

            Outputs.GitLabEnterpriseConfigResponse enterpriseConfig,

            string name,

            Outputs.GitLabSecretsResponse secrets,

            string username,

            string webhookKey)
        {
            ConnectedRepositories = connectedRepositories;
            CreateTime = createTime;
            EnterpriseConfig = enterpriseConfig;
            Name = name;
            Secrets = secrets;
            Username = username;
            WebhookKey = webhookKey;
        }
    }
}
