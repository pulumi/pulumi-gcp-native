// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V1.Outputs
{

    /// <summary>
    /// BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.
    /// </summary>
    [OutputType]
    public sealed class BitbucketServerTriggerConfigResponse
    {
        /// <summary>
        /// The BitbucketServerConfig specified in the bitbucket_server_config_resource field.
        /// </summary>
        public readonly Outputs.BitbucketServerConfigResponse BitbucketServerConfig;
        /// <summary>
        /// The Bitbucket server config resource that this trigger config maps to.
        /// </summary>
        public readonly string BitbucketServerConfigResource;
        /// <summary>
        /// Key of the project that the repo is in. For example: The key for http://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
        /// </summary>
        public readonly string ProjectKey;
        /// <summary>
        /// Filter to match changes in pull requests.
        /// </summary>
        public readonly Outputs.PullRequestFilterResponse PullRequest;
        /// <summary>
        /// Filter to match changes in refs like branches, tags.
        /// </summary>
        public readonly Outputs.PushFilterResponse Push;
        /// <summary>
        /// Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL. For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in http://mybitbucket.server/projects/TEST/repos/test-repo.
        /// </summary>
        public readonly string RepoSlug;

        [OutputConstructor]
        private BitbucketServerTriggerConfigResponse(
            Outputs.BitbucketServerConfigResponse bitbucketServerConfig,

            string bitbucketServerConfigResource,

            string projectKey,

            Outputs.PullRequestFilterResponse pullRequest,

            Outputs.PushFilterResponse push,

            string repoSlug)
        {
            BitbucketServerConfig = bitbucketServerConfig;
            BitbucketServerConfigResource = bitbucketServerConfigResource;
            ProjectKey = projectKey;
            PullRequest = pullRequest;
            Push = push;
            RepoSlug = repoSlug;
        }
    }
}
