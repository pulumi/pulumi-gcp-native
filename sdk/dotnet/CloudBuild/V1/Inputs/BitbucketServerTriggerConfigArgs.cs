// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V1.Inputs
{

    /// <summary>
    /// BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.
    /// </summary>
    public sealed class BitbucketServerTriggerConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Bitbucket server config resource that this trigger config maps to.
        /// </summary>
        [Input("bitbucketServerConfigResource", required: true)]
        public Input<string> BitbucketServerConfigResource { get; set; } = null!;

        /// <summary>
        /// Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
        /// </summary>
        [Input("projectKey", required: true)]
        public Input<string> ProjectKey { get; set; } = null!;

        /// <summary>
        /// Filter to match changes in pull requests.
        /// </summary>
        [Input("pullRequest")]
        public Input<Inputs.PullRequestFilterArgs>? PullRequest { get; set; }

        /// <summary>
        /// Filter to match changes in refs like branches, tags.
        /// </summary>
        [Input("push")]
        public Input<Inputs.PushFilterArgs>? Push { get; set; }

        /// <summary>
        /// Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL. For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
        /// </summary>
        [Input("repoSlug", required: true)]
        public Input<string> RepoSlug { get; set; } = null!;

        public BitbucketServerTriggerConfigArgs()
        {
        }
        public static new BitbucketServerTriggerConfigArgs Empty => new BitbucketServerTriggerConfigArgs();
    }
}
