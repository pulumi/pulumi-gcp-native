// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudBuild.V1Alpha2
{
    public static class GetWorkerPool
    {
        /// <summary>
        /// Returns details of a `WorkerPool`.
        /// </summary>
        public static Task<GetWorkerPoolResult> InvokeAsync(GetWorkerPoolArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkerPoolResult>("google-native:cloudbuild/v1alpha2:getWorkerPool", args ?? new GetWorkerPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Returns details of a `WorkerPool`.
        /// </summary>
        public static Output<GetWorkerPoolResult> Invoke(GetWorkerPoolInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkerPoolResult>("google-native:cloudbuild/v1alpha2:getWorkerPool", args ?? new GetWorkerPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkerPoolArgs : Pulumi.InvokeArgs
    {
        [Input("project")]
        public string? Project { get; set; }

        [Input("workerPoolId", required: true)]
        public string WorkerPoolId { get; set; } = null!;

        public GetWorkerPoolArgs()
        {
        }
    }

    public sealed class GetWorkerPoolInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("workerPoolId", required: true)]
        public Input<string> WorkerPoolId { get; set; } = null!;

        public GetWorkerPoolInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkerPoolResult
    {
        /// <summary>
        /// Time at which the request to create the `WorkerPool` was received.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Time at which the request to delete the `WorkerPool` was received.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Network configuration for the `WorkerPool`.
        /// </summary>
        public readonly Outputs.NetworkConfigResponse NetworkConfig;
        /// <summary>
        /// Immutable. The region where the `WorkerPool` runs. Only "us-central1" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// WorkerPool state.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Time at which the request to update the `WorkerPool` was received.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Worker configuration for the `WorkerPool`.
        /// </summary>
        public readonly Outputs.WorkerConfigResponse WorkerConfig;

        [OutputConstructor]
        private GetWorkerPoolResult(
            string createTime,

            string deleteTime,

            string name,

            Outputs.NetworkConfigResponse networkConfig,

            string region,

            string state,

            string updateTime,

            Outputs.WorkerConfigResponse workerConfig)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            Name = name;
            NetworkConfig = networkConfig;
            Region = region;
            State = state;
            UpdateTime = updateTime;
            WorkerConfig = workerConfig;
        }
    }
}
