// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BeyondCorp.V1
{
    public static class GetAppGateway
    {
        /// <summary>
        /// Gets details of a single AppGateway.
        /// </summary>
        public static Task<GetAppGatewayResult> InvokeAsync(GetAppGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppGatewayResult>("google-native:beyondcorp/v1:getAppGateway", args ?? new GetAppGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single AppGateway.
        /// </summary>
        public static Output<GetAppGatewayResult> Invoke(GetAppGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppGatewayResult>("google-native:beyondcorp/v1:getAppGateway", args ?? new GetAppGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppGatewayArgs : global::Pulumi.InvokeArgs
    {
        [Input("appGatewayId", required: true)]
        public string AppGatewayId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetAppGatewayArgs()
        {
        }
        public static new GetAppGatewayArgs Empty => new GetAppGatewayArgs();
    }

    public sealed class GetAppGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("appGatewayId", required: true)]
        public Input<string> AppGatewayId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetAppGatewayInvokeArgs()
        {
        }
        public static new GetAppGatewayInvokeArgs Empty => new GetAppGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppGatewayResult
    {
        /// <summary>
        /// A list of connections allocated for the Gateway
        /// </summary>
        public readonly ImmutableArray<Outputs.AllocatedConnectionResponse> AllocatedConnections;
        /// <summary>
        /// Timestamp when the resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The type of hosting used by the AppGateway.
        /// </summary>
        public readonly string HostType;
        /// <summary>
        /// Optional. Resource labels to represent user provided metadata.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The current state of the AppGateway.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The type of network connectivity used by the AppGateway.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A unique identifier for the instance generated by the system.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// Timestamp when the resource was last modified.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Server-defined URI for this resource.
        /// </summary>
        public readonly string Uri;

        [OutputConstructor]
        private GetAppGatewayResult(
            ImmutableArray<Outputs.AllocatedConnectionResponse> allocatedConnections,

            string createTime,

            string displayName,

            string hostType,

            ImmutableDictionary<string, string> labels,

            string name,

            string state,

            string type,

            string uid,

            string updateTime,

            string uri)
        {
            AllocatedConnections = allocatedConnections;
            CreateTime = createTime;
            DisplayName = displayName;
            HostType = hostType;
            Labels = labels;
            Name = name;
            State = state;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
            Uri = uri;
        }
    }
}
