// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.GoogleNative.BeyondCorp.V1
{
    /// <summary>
    /// Required. The type of network connectivity used by the AppConnection.
    /// </summary>
    [EnumType]
    public readonly struct AppConnectionType : IEquatable<AppConnectionType>
    {
        private readonly string _value;

        private AppConnectionType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static AppConnectionType TypeUnspecified { get; } = new AppConnectionType("TYPE_UNSPECIFIED");
        /// <summary>
        /// TCP Proxy based BeyondCorp AppConnection. API will default to this if unset.
        /// </summary>
        public static AppConnectionType TcpProxy { get; } = new AppConnectionType("TCP_PROXY");

        public static bool operator ==(AppConnectionType left, AppConnectionType right) => left.Equals(right);
        public static bool operator !=(AppConnectionType left, AppConnectionType right) => !left.Equals(right);

        public static explicit operator string(AppConnectionType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AppConnectionType other && Equals(other);
        public bool Equals(AppConnectionType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The type of hosting used by the AppGateway.
    /// </summary>
    [EnumType]
    public readonly struct AppGatewayHostType : IEquatable<AppGatewayHostType>
    {
        private readonly string _value;

        private AppGatewayHostType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static AppGatewayHostType HostTypeUnspecified { get; } = new AppGatewayHostType("HOST_TYPE_UNSPECIFIED");
        /// <summary>
        /// AppGateway hosted in a GCP regional managed instance group.
        /// </summary>
        public static AppGatewayHostType GcpRegionalMig { get; } = new AppGatewayHostType("GCP_REGIONAL_MIG");

        public static bool operator ==(AppGatewayHostType left, AppGatewayHostType right) => left.Equals(right);
        public static bool operator !=(AppGatewayHostType left, AppGatewayHostType right) => !left.Equals(right);

        public static explicit operator string(AppGatewayHostType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AppGatewayHostType other && Equals(other);
        public bool Equals(AppGatewayHostType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The type of network connectivity used by the AppGateway.
    /// </summary>
    [EnumType]
    public readonly struct AppGatewayType : IEquatable<AppGatewayType>
    {
        private readonly string _value;

        private AppGatewayType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static AppGatewayType TypeUnspecified { get; } = new AppGatewayType("TYPE_UNSPECIFIED");
        /// <summary>
        /// TCP Proxy based BeyondCorp Connection. API will default to this if unset.
        /// </summary>
        public static AppGatewayType TcpProxy { get; } = new AppGatewayType("TCP_PROXY");

        public static bool operator ==(AppGatewayType left, AppGatewayType right) => left.Equals(right);
        public static bool operator !=(AppGatewayType left, AppGatewayType right) => !left.Equals(right);

        public static explicit operator string(AppGatewayType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AppGatewayType other && Equals(other);
        public bool Equals(AppGatewayType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Required. The type of hosting used by the gateway.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType : IEquatable<GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType>
    {
        private readonly string _value;

        private GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType TypeUnspecified { get; } = new GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType("TYPE_UNSPECIFIED");
        /// <summary>
        /// Gateway hosted in a GCP regional managed instance group.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType GcpRegionalMig { get; } = new GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType("GCP_REGIONAL_MIG");

        public static bool operator ==(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType left, GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType right) => left.Equals(right);
        public static bool operator !=(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType left, GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType other && Equals(other);
        public bool Equals(GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Overall health status. Overall status is derived based on the status of each sub level resources.
    /// </summary>
    [EnumType]
    public readonly struct GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus : IEquatable<GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus>
    {
        private readonly string _value;

        private GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Health status is unknown: not initialized or failed to retrieve.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus HealthStatusUnspecified { get; } = new GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus("HEALTH_STATUS_UNSPECIFIED");
        /// <summary>
        /// The resource is healthy.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus Healthy { get; } = new GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus("HEALTHY");
        /// <summary>
        /// The resource is unhealthy.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus Unhealthy { get; } = new GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus("UNHEALTHY");
        /// <summary>
        /// The resource is unresponsive.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus Unresponsive { get; } = new GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus("UNRESPONSIVE");
        /// <summary>
        /// Some sub-resources are UNHEALTHY.
        /// </summary>
        public static GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus Degraded { get; } = new GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus("DEGRADED");

        public static bool operator ==(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus left, GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus right) => left.Equals(right);
        public static bool operator !=(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus left, GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus right) => !left.Equals(right);

        public static explicit operator string(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus other && Equals(other);
        public bool Equals(GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The log type that this config enables.
    /// </summary>
    [EnumType]
    public readonly struct GoogleIamV1AuditLogConfigLogType : IEquatable<GoogleIamV1AuditLogConfigLogType>
    {
        private readonly string _value;

        private GoogleIamV1AuditLogConfigLogType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Default case. Should never be this.
        /// </summary>
        public static GoogleIamV1AuditLogConfigLogType LogTypeUnspecified { get; } = new GoogleIamV1AuditLogConfigLogType("LOG_TYPE_UNSPECIFIED");
        /// <summary>
        /// Admin reads. Example: CloudIAM getIamPolicy
        /// </summary>
        public static GoogleIamV1AuditLogConfigLogType AdminRead { get; } = new GoogleIamV1AuditLogConfigLogType("ADMIN_READ");
        /// <summary>
        /// Data writes. Example: CloudSQL Users create
        /// </summary>
        public static GoogleIamV1AuditLogConfigLogType DataWrite { get; } = new GoogleIamV1AuditLogConfigLogType("DATA_WRITE");
        /// <summary>
        /// Data reads. Example: CloudSQL Users list
        /// </summary>
        public static GoogleIamV1AuditLogConfigLogType DataRead { get; } = new GoogleIamV1AuditLogConfigLogType("DATA_READ");

        public static bool operator ==(GoogleIamV1AuditLogConfigLogType left, GoogleIamV1AuditLogConfigLogType right) => left.Equals(right);
        public static bool operator !=(GoogleIamV1AuditLogConfigLogType left, GoogleIamV1AuditLogConfigLogType right) => !left.Equals(right);

        public static explicit operator string(GoogleIamV1AuditLogConfigLogType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is GoogleIamV1AuditLogConfigLogType other && Equals(other);
        public bool Equals(GoogleIamV1AuditLogConfigLogType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
