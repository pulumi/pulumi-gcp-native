// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BeyondCorp.V1Alpha
{
    public static class GetSubscription
    {
        /// <summary>
        /// Gets details of a single Subscription.
        /// </summary>
        public static Task<GetSubscriptionResult> InvokeAsync(GetSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionResult>("google-native:beyondcorp/v1alpha:getSubscription", args ?? new GetSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single Subscription.
        /// </summary>
        public static Output<GetSubscriptionResult> Invoke(GetSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionResult>("google-native:beyondcorp/v1alpha:getSubscription", args ?? new GetSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("subscriptionId", required: true)]
        public string SubscriptionId { get; set; } = null!;

        public GetSubscriptionArgs()
        {
        }
        public static new GetSubscriptionArgs Empty => new GetSubscriptionArgs();
    }

    public sealed class GetSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public GetSubscriptionInvokeArgs()
        {
        }
        public static new GetSubscriptionInvokeArgs Empty => new GetSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionResult
    {
        /// <summary>
        /// Represents that, if subscription will renew or end when the term ends.
        /// </summary>
        public readonly bool AutoRenewEnabled;
        /// <summary>
        /// Create time of the subscription.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// End time of the subscription.
        /// </summary>
        public readonly string EndTime;
        /// <summary>
        /// Unique resource name of the Subscription. The name is ignored when creating a subscription.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of seats in the subscription.
        /// </summary>
        public readonly string SeatCount;
        /// <summary>
        /// SKU of subscription.
        /// </summary>
        public readonly string Sku;
        /// <summary>
        /// Start time of the subscription.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The current state of the subscription.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Type of subscription.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSubscriptionResult(
            bool autoRenewEnabled,

            string createTime,

            string endTime,

            string name,

            string seatCount,

            string sku,

            string startTime,

            string state,

            string type)
        {
            AutoRenewEnabled = autoRenewEnabled;
            CreateTime = createTime;
            EndTime = endTime;
            Name = name;
            SeatCount = seatCount;
            Sku = sku;
            StartTime = startTime;
            State = state;
            Type = type;
        }
    }
}
