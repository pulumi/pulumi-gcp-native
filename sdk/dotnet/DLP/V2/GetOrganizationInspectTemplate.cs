// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2
{
    public static class GetOrganizationInspectTemplate
    {
        /// <summary>
        /// Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
        /// </summary>
        public static Task<GetOrganizationInspectTemplateResult> InvokeAsync(GetOrganizationInspectTemplateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationInspectTemplateResult>("google-native:dlp/v2:getOrganizationInspectTemplate", args ?? new GetOrganizationInspectTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
        /// </summary>
        public static Output<GetOrganizationInspectTemplateResult> Invoke(GetOrganizationInspectTemplateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOrganizationInspectTemplateResult>("google-native:dlp/v2:getOrganizationInspectTemplate", args ?? new GetOrganizationInspectTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationInspectTemplateArgs : Pulumi.InvokeArgs
    {
        [Input("inspectTemplateId", required: true)]
        public string InspectTemplateId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrganizationInspectTemplateArgs()
        {
        }
    }

    public sealed class GetOrganizationInspectTemplateInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("inspectTemplateId", required: true)]
        public Input<string> InspectTemplateId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrganizationInspectTemplateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrganizationInspectTemplateResult
    {
        /// <summary>
        /// The creation timestamp of an inspectTemplate.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Short description (max 256 chars).
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display name (max 256 chars).
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The core content of the template. Configuration of the scanning process.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2InspectConfigResponse InspectConfig;
        /// <summary>
        /// The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The last update timestamp of an inspectTemplate.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetOrganizationInspectTemplateResult(
            string createTime,

            string description,

            string displayName,

            Outputs.GooglePrivacyDlpV2InspectConfigResponse inspectConfig,

            string name,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            InspectConfig = inspectConfig;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
