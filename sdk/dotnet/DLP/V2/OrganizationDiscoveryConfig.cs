// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2
{
    /// <summary>
    /// Creates a config for discovery to scan and profile storage.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:dlp/v2:OrganizationDiscoveryConfig")]
    public partial class OrganizationDiscoveryConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Actions to execute at the completion of scanning.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.GooglePrivacyDlpV2DataProfileActionResponse>> Actions { get; private set; } = null!;

        /// <summary>
        /// The creation timestamp of a DiscoveryConfig.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Display name (max 100 chars)
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<Outputs.GooglePrivacyDlpV2ErrorResponse>> Errors { get; private set; } = null!;

        /// <summary>
        /// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
        /// </summary>
        [Output("inspectTemplates")]
        public Output<ImmutableArray<string>> InspectTemplates { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the last time this config was executed.
        /// </summary>
        [Output("lastRunTime")]
        public Output<string> LastRunTime { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Only set when the parent is an org.
        /// </summary>
        [Output("orgConfig")]
        public Output<Outputs.GooglePrivacyDlpV2OrgConfigResponse> OrgConfig { get; private set; } = null!;

        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// A status for this configuration.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Target to match against for determining what to scan and how frequently.
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<Outputs.GooglePrivacyDlpV2DiscoveryTargetResponse>> Targets { get; private set; } = null!;

        /// <summary>
        /// The last update timestamp of a DiscoveryConfig.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationDiscoveryConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationDiscoveryConfig(string name, OrganizationDiscoveryConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:dlp/v2:OrganizationDiscoveryConfig", name, args ?? new OrganizationDiscoveryConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationDiscoveryConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:dlp/v2:OrganizationDiscoveryConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "organizationId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationDiscoveryConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationDiscoveryConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OrganizationDiscoveryConfig(name, id, options);
        }
    }

    public sealed class OrganizationDiscoveryConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.GooglePrivacyDlpV2DataProfileActionArgs>? _actions;

        /// <summary>
        /// Actions to execute at the completion of scanning.
        /// </summary>
        public InputList<Inputs.GooglePrivacyDlpV2DataProfileActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.GooglePrivacyDlpV2DataProfileActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
        /// </summary>
        [Input("configId")]
        public Input<string>? ConfigId { get; set; }

        /// <summary>
        /// Display name (max 100 chars)
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("inspectTemplates")]
        private InputList<string>? _inspectTemplates;

        /// <summary>
        /// Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
        /// </summary>
        public InputList<string> InspectTemplates
        {
            get => _inspectTemplates ?? (_inspectTemplates = new InputList<string>());
            set => _inspectTemplates = value;
        }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Only set when the parent is an org.
        /// </summary>
        [Input("orgConfig")]
        public Input<Inputs.GooglePrivacyDlpV2OrgConfigArgs>? OrgConfig { get; set; }

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// A status for this configuration.
        /// </summary>
        [Input("status", required: true)]
        public Input<Pulumi.GoogleNative.DLP.V2.OrganizationDiscoveryConfigStatus> Status { get; set; } = null!;

        [Input("targets")]
        private InputList<Inputs.GooglePrivacyDlpV2DiscoveryTargetArgs>? _targets;

        /// <summary>
        /// Target to match against for determining what to scan and how frequently.
        /// </summary>
        public InputList<Inputs.GooglePrivacyDlpV2DiscoveryTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.GooglePrivacyDlpV2DiscoveryTargetArgs>());
            set => _targets = value;
        }

        public OrganizationDiscoveryConfigArgs()
        {
        }
        public static new OrganizationDiscoveryConfigArgs Empty => new OrganizationDiscoveryConfigArgs();
    }
}
