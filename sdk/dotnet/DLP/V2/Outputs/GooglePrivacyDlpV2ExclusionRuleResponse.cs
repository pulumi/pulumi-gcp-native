// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2.Outputs
{

    /// <summary>
    /// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
    /// </summary>
    [OutputType]
    public sealed class GooglePrivacyDlpV2ExclusionRuleResponse
    {
        /// <summary>
        /// Dictionary which defines the rule.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2DictionaryResponse Dictionary;
        /// <summary>
        /// Drop if the hotword rule is contained in the proximate context. For tabular data, the context includes the column name.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2ExcludeByHotwordResponse ExcludeByHotword;
        /// <summary>
        /// Set of infoTypes for which findings would affect this rule.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2ExcludeInfoTypesResponse ExcludeInfoTypes;
        /// <summary>
        /// How the rule is applied, see MatchingType documentation for details.
        /// </summary>
        public readonly string MatchingType;
        /// <summary>
        /// Regular expression which defines the rule.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2RegexResponse Regex;

        [OutputConstructor]
        private GooglePrivacyDlpV2ExclusionRuleResponse(
            Outputs.GooglePrivacyDlpV2DictionaryResponse dictionary,

            Outputs.GooglePrivacyDlpV2ExcludeByHotwordResponse excludeByHotword,

            Outputs.GooglePrivacyDlpV2ExcludeInfoTypesResponse excludeInfoTypes,

            string matchingType,

            Outputs.GooglePrivacyDlpV2RegexResponse regex)
        {
            Dictionary = dictionary;
            ExcludeByHotword = excludeByHotword;
            ExcludeInfoTypes = excludeInfoTypes;
            MatchingType = matchingType;
            Regex = regex;
        }
    }
}
