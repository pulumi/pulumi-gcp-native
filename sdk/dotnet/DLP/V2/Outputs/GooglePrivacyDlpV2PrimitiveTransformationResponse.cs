// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2.Outputs
{

    /// <summary>
    /// A rule for transforming a value.
    /// </summary>
    [OutputType]
    public sealed class GooglePrivacyDlpV2PrimitiveTransformationResponse
    {
        /// <summary>
        /// Bucketing
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2BucketingConfigResponse BucketingConfig;
        /// <summary>
        /// Mask
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2CharacterMaskConfigResponse CharacterMaskConfig;
        /// <summary>
        /// Deterministic Crypto
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2CryptoDeterministicConfigResponse CryptoDeterministicConfig;
        /// <summary>
        /// Crypto
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2CryptoHashConfigResponse CryptoHashConfig;
        /// <summary>
        /// Ffx-Fpe
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse CryptoReplaceFfxFpeConfig;
        /// <summary>
        /// Date Shift
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2DateShiftConfigResponse DateShiftConfig;
        /// <summary>
        /// Fixed size bucketing
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2FixedSizeBucketingConfigResponse FixedSizeBucketingConfig;
        /// <summary>
        /// Redact
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2RedactConfigResponse RedactConfig;
        /// <summary>
        /// Replace with a specified value.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2ReplaceValueConfigResponse ReplaceConfig;
        /// <summary>
        /// Replace with a value randomly drawn (with replacement) from a dictionary.
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2ReplaceDictionaryConfigResponse ReplaceDictionaryConfig;
        /// <summary>
        /// Replace with infotype
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse ReplaceWithInfoTypeConfig;
        /// <summary>
        /// Time extraction
        /// </summary>
        public readonly Outputs.GooglePrivacyDlpV2TimePartConfigResponse TimePartConfig;

        [OutputConstructor]
        private GooglePrivacyDlpV2PrimitiveTransformationResponse(
            Outputs.GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig,

            Outputs.GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig,

            Outputs.GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig,

            Outputs.GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig,

            Outputs.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig,

            Outputs.GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig,

            Outputs.GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig,

            Outputs.GooglePrivacyDlpV2RedactConfigResponse redactConfig,

            Outputs.GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig,

            Outputs.GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig,

            Outputs.GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig,

            Outputs.GooglePrivacyDlpV2TimePartConfigResponse timePartConfig)
        {
            BucketingConfig = bucketingConfig;
            CharacterMaskConfig = characterMaskConfig;
            CryptoDeterministicConfig = cryptoDeterministicConfig;
            CryptoHashConfig = cryptoHashConfig;
            CryptoReplaceFfxFpeConfig = cryptoReplaceFfxFpeConfig;
            DateShiftConfig = dateShiftConfig;
            FixedSizeBucketingConfig = fixedSizeBucketingConfig;
            RedactConfig = redactConfig;
            ReplaceConfig = replaceConfig;
            ReplaceDictionaryConfig = replaceDictionaryConfig;
            ReplaceWithInfoTypeConfig = replaceWithInfoTypeConfig;
            TimePartConfig = timePartConfig;
        }
    }
}
