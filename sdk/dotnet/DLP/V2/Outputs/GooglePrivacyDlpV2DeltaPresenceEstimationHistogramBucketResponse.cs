// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2.Outputs
{

    /// <summary>
    /// A DeltaPresenceEstimationHistogramBucket message with the following values: min_probability: 0.1 max_probability: 0.2 frequency: 42 means that there are 42 records for which Î´ is in [0.1, 0.2). An important particular case is when min_probability = max_probability = 1: then, every individual who shares this quasi-identifier combination is in the dataset.
    /// </summary>
    [OutputType]
    public sealed class GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse
    {
        /// <summary>
        /// Number of records within these probability bounds.
        /// </summary>
        public readonly string BucketSize;
        /// <summary>
        /// Total number of distinct quasi-identifier tuple values in this bucket.
        /// </summary>
        public readonly string BucketValueCount;
        /// <summary>
        /// Sample of quasi-identifier tuple values in this bucket. The total number of classes returned per bucket is capped at 20.
        /// </summary>
        public readonly ImmutableArray<Outputs.GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse> BucketValues;
        /// <summary>
        /// Always greater than or equal to min_probability.
        /// </summary>
        public readonly double MaxProbability;
        /// <summary>
        /// Between 0 and 1.
        /// </summary>
        public readonly double MinProbability;

        [OutputConstructor]
        private GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucketResponse(
            string bucketSize,

            string bucketValueCount,

            ImmutableArray<Outputs.GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValuesResponse> bucketValues,

            double maxProbability,

            double minProbability)
        {
            BucketSize = bucketSize;
            BucketValueCount = bucketValueCount;
            BucketValues = bucketValues;
            MaxProbability = maxProbability;
            MinProbability = minProbability;
        }
    }
}
