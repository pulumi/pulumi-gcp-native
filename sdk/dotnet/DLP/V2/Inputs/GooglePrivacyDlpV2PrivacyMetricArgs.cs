// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2.Inputs
{

    /// <summary>
    /// Privacy metric to compute for reidentification risk analysis.
    /// </summary>
    public sealed class GooglePrivacyDlpV2PrivacyMetricArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Categorical stats
        /// </summary>
        [Input("categoricalStatsConfig")]
        public Input<Inputs.GooglePrivacyDlpV2CategoricalStatsConfigArgs>? CategoricalStatsConfig { get; set; }

        /// <summary>
        /// delta-presence
        /// </summary>
        [Input("deltaPresenceEstimationConfig")]
        public Input<Inputs.GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs>? DeltaPresenceEstimationConfig { get; set; }

        /// <summary>
        /// K-anonymity
        /// </summary>
        [Input("kAnonymityConfig")]
        public Input<Inputs.GooglePrivacyDlpV2KAnonymityConfigArgs>? KAnonymityConfig { get; set; }

        /// <summary>
        /// k-map
        /// </summary>
        [Input("kMapEstimationConfig")]
        public Input<Inputs.GooglePrivacyDlpV2KMapEstimationConfigArgs>? KMapEstimationConfig { get; set; }

        /// <summary>
        /// l-diversity
        /// </summary>
        [Input("lDiversityConfig")]
        public Input<Inputs.GooglePrivacyDlpV2LDiversityConfigArgs>? LDiversityConfig { get; set; }

        /// <summary>
        /// Numerical stats
        /// </summary>
        [Input("numericalStatsConfig")]
        public Input<Inputs.GooglePrivacyDlpV2NumericalStatsConfigArgs>? NumericalStatsConfig { get; set; }

        public GooglePrivacyDlpV2PrivacyMetricArgs()
        {
        }
        public static new GooglePrivacyDlpV2PrivacyMetricArgs Empty => new GooglePrivacyDlpV2PrivacyMetricArgs();
    }
}
