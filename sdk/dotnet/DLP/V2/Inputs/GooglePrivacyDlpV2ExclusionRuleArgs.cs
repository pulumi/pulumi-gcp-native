// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.DLP.V2.Inputs
{

    /// <summary>
    /// The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
    /// </summary>
    public sealed class GooglePrivacyDlpV2ExclusionRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dictionary which defines the rule.
        /// </summary>
        [Input("dictionary")]
        public Input<Inputs.GooglePrivacyDlpV2DictionaryArgs>? Dictionary { get; set; }

        /// <summary>
        /// Drop if the hotword rule is contained in the proximate context. For tabular data, the context includes the column name.
        /// </summary>
        [Input("excludeByHotword")]
        public Input<Inputs.GooglePrivacyDlpV2ExcludeByHotwordArgs>? ExcludeByHotword { get; set; }

        /// <summary>
        /// Set of infoTypes for which findings would affect this rule.
        /// </summary>
        [Input("excludeInfoTypes")]
        public Input<Inputs.GooglePrivacyDlpV2ExcludeInfoTypesArgs>? ExcludeInfoTypes { get; set; }

        /// <summary>
        /// How the rule is applied, see MatchingType documentation for details.
        /// </summary>
        [Input("matchingType")]
        public Input<Pulumi.GoogleNative.DLP.V2.GooglePrivacyDlpV2ExclusionRuleMatchingType>? MatchingType { get; set; }

        /// <summary>
        /// Regular expression which defines the rule.
        /// </summary>
        [Input("regex")]
        public Input<Inputs.GooglePrivacyDlpV2RegexArgs>? Regex { get; set; }

        public GooglePrivacyDlpV2ExclusionRuleArgs()
        {
        }
        public static new GooglePrivacyDlpV2ExclusionRuleArgs Empty => new GooglePrivacyDlpV2ExclusionRuleArgs();
    }
}
