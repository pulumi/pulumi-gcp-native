// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IdentityToolkit.V2
{
    /// <summary>
    /// Create a default supported Idp configuration for an Identity Toolkit project.
    /// </summary>
    [GoogleNativeResourceType("google-native:identitytoolkit/v2:DefaultSupportedIdpConfig")]
    public partial class DefaultSupportedIdpConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Additional config for Apple-based projects.
        /// </summary>
        [Output("appleSignInConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigResponse> AppleSignInConfig { get; private set; } = null!;

        /// <summary>
        /// OAuth client ID.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// OAuth client secret.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// True if allows the user to sign in with the provider.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.
        /// </summary>
        [Output("idpId")]
        public Output<string?> IdpId { get; private set; } = null!;

        /// <summary>
        /// The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultSupportedIdpConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultSupportedIdpConfig(string name, DefaultSupportedIdpConfigArgs args, CustomResourceOptions? options = null)
            : base("google-native:identitytoolkit/v2:DefaultSupportedIdpConfig", name, args ?? new DefaultSupportedIdpConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultSupportedIdpConfig(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:identitytoolkit/v2:DefaultSupportedIdpConfig", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "project",
                    "tenantId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultSupportedIdpConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultSupportedIdpConfig Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DefaultSupportedIdpConfig(name, id, options);
        }
    }

    public sealed class DefaultSupportedIdpConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Additional config for Apple-based projects.
        /// </summary>
        [Input("appleSignInConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs>? AppleSignInConfig { get; set; }

        /// <summary>
        /// OAuth client ID.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// OAuth client secret.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// True if allows the user to sign in with the provider.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The id of the Idp to create a config for. Call ListDefaultSupportedIdps for list of all default supported Idps.
        /// </summary>
        [Input("idpId")]
        public Input<string>? IdpId { get; set; }

        /// <summary>
        /// The name of the DefaultSupportedIdpConfig resource, for example: "projects/my-awesome-project/defaultSupportedIdpConfigs/google.com"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("tenantId", required: true)]
        public Input<string> TenantId { get; set; } = null!;

        public DefaultSupportedIdpConfigArgs()
        {
        }
        public static new DefaultSupportedIdpConfigArgs Empty => new DefaultSupportedIdpConfigArgs();
    }
}
