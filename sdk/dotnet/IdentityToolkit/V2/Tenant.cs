// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IdentityToolkit.V2
{
    /// <summary>
    /// Create a tenant. Requires write permission on the Agent project.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:identitytoolkit/v2:Tenant")]
    public partial class Tenant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to allow email/password user authentication.
        /// </summary>
        [Output("allowPasswordSignup")]
        public Output<bool> AllowPasswordSignup { get; private set; } = null!;

        /// <summary>
        /// Whether anonymous users will be auto-deleted after a period of 30 days.
        /// </summary>
        [Output("autodeleteAnonymousUsers")]
        public Output<bool> AutodeleteAnonymousUsers { get; private set; } = null!;

        /// <summary>
        /// Options related to how clients making requests on behalf of a project should be configured.
        /// </summary>
        [Output("client")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponse> Client { get; private set; } = null!;

        /// <summary>
        /// Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
        /// </summary>
        [Output("disableAuth")]
        public Output<bool> DisableAuth { get; private set; } = null!;

        /// <summary>
        /// Display name of the tenant.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Configuration for settings related to email privacy and public visibility.
        /// </summary>
        [Output("emailPrivacyConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfigResponse> EmailPrivacyConfig { get; private set; } = null!;

        /// <summary>
        /// Whether to enable anonymous user authentication.
        /// </summary>
        [Output("enableAnonymousUser")]
        public Output<bool> EnableAnonymousUser { get; private set; } = null!;

        /// <summary>
        /// Whether to enable email link user authentication.
        /// </summary>
        [Output("enableEmailLinkSignin")]
        public Output<bool> EnableEmailLinkSignin { get; private set; } = null!;

        /// <summary>
        /// Hash config information of a tenant for display on Pantheon. This can only be displayed on Pantheon to avoid the sensitive information to get accidentally leaked. Only returned in GetTenant response to restrict reading of this information. Requires firebaseauth.configs.getHashConfig permission on the agent project for returning this field.
        /// </summary>
        [Output("hashConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2HashConfigResponse> HashConfig { get; private set; } = null!;

        /// <summary>
        /// Specify the settings that the tenant could inherit.
        /// </summary>
        [Output("inheritance")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2InheritanceResponse> Inheritance { get; private set; } = null!;

        /// <summary>
        /// The tenant-level configuration of MFA options.
        /// </summary>
        [Output("mfaConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse> MfaConfig { get; private set; } = null!;

        /// <summary>
        /// Configuration related to monitoring project activity.
        /// </summary>
        [Output("monitoring")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponse> Monitoring { get; private set; } = null!;

        /// <summary>
        /// Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The tenant-level password policy config
        /// </summary>
        [Output("passwordPolicyConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfigResponse> PasswordPolicyConfig { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The tenant-level reCAPTCHA config.
        /// </summary>
        [Output("recaptchaConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigResponse> RecaptchaConfig { get; private set; } = null!;

        /// <summary>
        /// Configures which regions are enabled for SMS verification code sending.
        /// </summary>
        [Output("smsRegionConfig")]
        public Output<Outputs.GoogleCloudIdentitytoolkitAdminV2SmsRegionConfigResponse> SmsRegionConfig { get; private set; } = null!;

        /// <summary>
        /// A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
        /// </summary>
        [Output("testPhoneNumbers")]
        public Output<ImmutableDictionary<string, string>> TestPhoneNumbers { get; private set; } = null!;


        /// <summary>
        /// Create a Tenant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Tenant(string name, TenantArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:identitytoolkit/v2:Tenant", name, args ?? new TenantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Tenant(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:identitytoolkit/v2:Tenant", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Tenant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Tenant Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Tenant(name, id, options);
        }
    }

    public sealed class TenantArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to allow email/password user authentication.
        /// </summary>
        [Input("allowPasswordSignup")]
        public Input<bool>? AllowPasswordSignup { get; set; }

        /// <summary>
        /// Whether anonymous users will be auto-deleted after a period of 30 days.
        /// </summary>
        [Input("autodeleteAnonymousUsers")]
        public Input<bool>? AutodeleteAnonymousUsers { get; set; }

        /// <summary>
        /// Options related to how clients making requests on behalf of a project should be configured.
        /// </summary>
        [Input("client")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs>? Client { get; set; }

        /// <summary>
        /// Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
        /// </summary>
        [Input("disableAuth")]
        public Input<bool>? DisableAuth { get; set; }

        /// <summary>
        /// Display name of the tenant.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Configuration for settings related to email privacy and public visibility.
        /// </summary>
        [Input("emailPrivacyConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2EmailPrivacyConfigArgs>? EmailPrivacyConfig { get; set; }

        /// <summary>
        /// Whether to enable anonymous user authentication.
        /// </summary>
        [Input("enableAnonymousUser")]
        public Input<bool>? EnableAnonymousUser { get; set; }

        /// <summary>
        /// Whether to enable email link user authentication.
        /// </summary>
        [Input("enableEmailLinkSignin")]
        public Input<bool>? EnableEmailLinkSignin { get; set; }

        /// <summary>
        /// Specify the settings that the tenant could inherit.
        /// </summary>
        [Input("inheritance")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2InheritanceArgs>? Inheritance { get; set; }

        /// <summary>
        /// The tenant-level configuration of MFA options.
        /// </summary>
        [Input("mfaConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs>? MfaConfig { get; set; }

        /// <summary>
        /// Configuration related to monitoring project activity.
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs>? Monitoring { get; set; }

        /// <summary>
        /// The tenant-level password policy config
        /// </summary>
        [Input("passwordPolicyConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2PasswordPolicyConfigArgs>? PasswordPolicyConfig { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The tenant-level reCAPTCHA config.
        /// </summary>
        [Input("recaptchaConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigArgs>? RecaptchaConfig { get; set; }

        /// <summary>
        /// Configures which regions are enabled for SMS verification code sending.
        /// </summary>
        [Input("smsRegionConfig")]
        public Input<Inputs.GoogleCloudIdentitytoolkitAdminV2SmsRegionConfigArgs>? SmsRegionConfig { get; set; }

        [Input("testPhoneNumbers")]
        private InputMap<string>? _testPhoneNumbers;

        /// <summary>
        /// A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
        /// </summary>
        public InputMap<string> TestPhoneNumbers
        {
            get => _testPhoneNumbers ?? (_testPhoneNumbers = new InputMap<string>());
            set => _testPhoneNumbers = value;
        }

        public TenantArgs()
        {
        }
        public static new TenantArgs Empty => new TenantArgs();
    }
}
