// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.IdentityToolkit.V2.Outputs
{

    /// <summary>
    /// The reCAPTCHA Enterprise integration config.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigResponse
    {
        /// <summary>
        /// The reCAPTCHA config for email/password provider, containing the enforcement status. The email/password provider contains all related user flows protected by reCAPTCHA.
        /// </summary>
        public readonly string EmailPasswordEnforcementState;
        /// <summary>
        /// The managed rules for authentication action based on reCAPTCHA scores. The rules are shared across providers for a given tenant project.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleResponse> ManagedRules;
        /// <summary>
        /// The reCAPTCHA keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyResponse> RecaptchaKeys;
        /// <summary>
        /// Whether to use the account defender for reCAPTCHA assessment. Defaults to `false`.
        /// </summary>
        public readonly bool UseAccountDefender;

        [OutputConstructor]
        private GoogleCloudIdentitytoolkitAdminV2RecaptchaConfigResponse(
            string emailPasswordEnforcementState,

            ImmutableArray<Outputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleResponse> managedRules,

            ImmutableArray<Outputs.GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyResponse> recaptchaKeys,

            bool useAccountDefender)
        {
            EmailPasswordEnforcementState = emailPasswordEnforcementState;
            ManagedRules = managedRules;
            RecaptchaKeys = recaptchaKeys;
            UseAccountDefender = useAccountDefender;
        }
    }
}
