// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Apigee.V1
{
    public static class GetSecurityAction
    {
        /// <summary>
        /// Get a SecurityAction by name.
        /// </summary>
        public static Task<GetSecurityActionResult> InvokeAsync(GetSecurityActionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityActionResult>("google-native:apigee/v1:getSecurityAction", args ?? new GetSecurityActionArgs(), options.WithDefaults());

        /// <summary>
        /// Get a SecurityAction by name.
        /// </summary>
        public static Output<GetSecurityActionResult> Invoke(GetSecurityActionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityActionResult>("google-native:apigee/v1:getSecurityAction", args ?? new GetSecurityActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityActionArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentId", required: true)]
        public string EnvironmentId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("securityActionId", required: true)]
        public string SecurityActionId { get; set; } = null!;

        public GetSecurityActionArgs()
        {
        }
        public static new GetSecurityActionArgs Empty => new GetSecurityActionArgs();
    }

    public sealed class GetSecurityActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("securityActionId", required: true)]
        public Input<string> SecurityActionId { get; set; } = null!;

        public GetSecurityActionInvokeArgs()
        {
        }
        public static new GetSecurityActionInvokeArgs Empty => new GetSecurityActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityActionResult
    {
        /// <summary>
        /// Allow a request through if it matches this SecurityAction.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1SecurityActionAllowResponse Allow;
        /// <summary>
        /// A valid SecurityAction must contain at least one condition.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1SecurityActionConditionConfigResponse ConditionConfig;
        /// <summary>
        /// The create time for this SecurityAction.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Deny a request through if it matches this SecurityAction.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1SecurityActionDenyResponse Deny;
        /// <summary>
        /// Optional. An optional user provided description of the SecurityAction.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The expiration for this SecurityAction.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// Flag a request through if it matches this SecurityAction.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1SecurityActionFlagResponse Flag;
        /// <summary>
        /// Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Input only. The TTL for this SecurityAction.
        /// </summary>
        public readonly string Ttl;
        /// <summary>
        /// The update time for this SecurityAction. This reflects when this SecurityAction changed states.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSecurityActionResult(
            Outputs.GoogleCloudApigeeV1SecurityActionAllowResponse allow,

            Outputs.GoogleCloudApigeeV1SecurityActionConditionConfigResponse conditionConfig,

            string createTime,

            Outputs.GoogleCloudApigeeV1SecurityActionDenyResponse deny,

            string description,

            string expireTime,

            Outputs.GoogleCloudApigeeV1SecurityActionFlagResponse flag,

            string name,

            string state,

            string ttl,

            string updateTime)
        {
            Allow = allow;
            ConditionConfig = conditionConfig;
            CreateTime = createTime;
            Deny = deny;
            Description = description;
            ExpireTime = expireTime;
            Flag = flag;
            Name = name;
            State = state;
            Ttl = ttl;
            UpdateTime = updateTime;
        }
    }
}
