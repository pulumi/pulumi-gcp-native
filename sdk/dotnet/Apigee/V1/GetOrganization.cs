// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Apigee.V1
{
    public static class GetOrganization
    {
        /// <summary>
        /// Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("google-native:apigee/v1:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("google-native:apigee/v1:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : Pulumi.InvokeArgs
    {
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrganizationArgs()
        {
        }
    }

    public sealed class GetOrganizationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrganizationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Addon configurations of the Apigee organization.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1AddonsConfigResponse AddonsConfig;
        /// <summary>
        /// Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
        /// </summary>
        public readonly string AnalyticsRegion;
        /// <summary>
        /// Not used by Apigee.
        /// </summary>
        public readonly ImmutableArray<string> Attributes;
        /// <summary>
        /// Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.
        /// </summary>
        public readonly string AuthorizedNetwork;
        /// <summary>
        /// Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
        /// </summary>
        public readonly string BillingType;
        /// <summary>
        /// Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.
        /// </summary>
        public readonly string CaCertificate;
        /// <summary>
        /// Time that the Apigee organization was created in milliseconds since epoch.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Not used by Apigee.
        /// </summary>
        public readonly string CustomerName;
        /// <summary>
        /// Description of the Apigee organization.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Display name for the Apigee organization. Unused, but reserved for future use.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// List of environments in the Apigee organization.
        /// </summary>
        public readonly ImmutableArray<string> Environments;
        /// <summary>
        /// Time that the Apigee organization is scheduled for deletion.
        /// </summary>
        public readonly string ExpiresAt;
        /// <summary>
        /// Time that the Apigee organization was last modified in milliseconds since epoch.
        /// </summary>
        public readonly string LastModifiedAt;
        /// <summary>
        /// Name of the Apigee organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configuration for the Portals settings.
        /// </summary>
        public readonly bool PortalDisabled;
        /// <summary>
        /// Project ID associated with the Apigee organization.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// Properties defined in the Apigee organization profile.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1PropertiesResponse Properties;
        /// <summary>
        /// Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: "projects/foo/locations/us/keyRings/bar/cryptoKeys/baz". **Note:** Not supported for Apigee hybrid.
        /// </summary>
        public readonly string RuntimeDatabaseEncryptionKeyName;
        /// <summary>
        /// Runtime type of the Apigee organization based on the Apigee subscription purchased.
        /// </summary>
        public readonly string RuntimeType;
        /// <summary>
        /// State of the organization. Values other than ACTIVE means the resource is not ready to use.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Not used by Apigee.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetOrganizationResult(
            Outputs.GoogleCloudApigeeV1AddonsConfigResponse addonsConfig,

            string analyticsRegion,

            ImmutableArray<string> attributes,

            string authorizedNetwork,

            string billingType,

            string caCertificate,

            string createdAt,

            string customerName,

            string description,

            string displayName,

            ImmutableArray<string> environments,

            string expiresAt,

            string lastModifiedAt,

            string name,

            bool portalDisabled,

            string project,

            Outputs.GoogleCloudApigeeV1PropertiesResponse properties,

            string runtimeDatabaseEncryptionKeyName,

            string runtimeType,

            string state,

            string type)
        {
            AddonsConfig = addonsConfig;
            AnalyticsRegion = analyticsRegion;
            Attributes = attributes;
            AuthorizedNetwork = authorizedNetwork;
            BillingType = billingType;
            CaCertificate = caCertificate;
            CreatedAt = createdAt;
            CustomerName = customerName;
            Description = description;
            DisplayName = displayName;
            Environments = environments;
            ExpiresAt = expiresAt;
            LastModifiedAt = lastModifiedAt;
            Name = name;
            PortalDisabled = portalDisabled;
            Project = project;
            Properties = properties;
            RuntimeDatabaseEncryptionKeyName = runtimeDatabaseEncryptionKeyName;
            RuntimeType = runtimeType;
            State = state;
            Type = type;
        }
    }
}
