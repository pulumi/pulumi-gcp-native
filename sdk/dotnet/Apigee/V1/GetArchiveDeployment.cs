// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Apigee.V1
{
    public static class GetArchiveDeployment
    {
        /// <summary>
        /// Gets the specified ArchiveDeployment.
        /// </summary>
        public static Task<GetArchiveDeploymentResult> InvokeAsync(GetArchiveDeploymentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetArchiveDeploymentResult>("google-native:apigee/v1:getArchiveDeployment", args ?? new GetArchiveDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified ArchiveDeployment.
        /// </summary>
        public static Output<GetArchiveDeploymentResult> Invoke(GetArchiveDeploymentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetArchiveDeploymentResult>("google-native:apigee/v1:getArchiveDeployment", args ?? new GetArchiveDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetArchiveDeploymentArgs : global::Pulumi.InvokeArgs
    {
        [Input("archiveDeploymentId", required: true)]
        public string ArchiveDeploymentId { get; set; } = null!;

        [Input("environmentId", required: true)]
        public string EnvironmentId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetArchiveDeploymentArgs()
        {
        }
        public static new GetArchiveDeploymentArgs Empty => new GetArchiveDeploymentArgs();
    }

    public sealed class GetArchiveDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("archiveDeploymentId", required: true)]
        public Input<string> ArchiveDeploymentId { get; set; } = null!;

        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetArchiveDeploymentInvokeArgs()
        {
        }
        public static new GetArchiveDeploymentInvokeArgs Empty => new GetArchiveDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetArchiveDeploymentResult
    {
        /// <summary>
        /// The time at which the Archive Deployment was created in milliseconds since the epoch.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Input only. The Google Cloud Storage signed URL returned from GenerateUploadUrl and used to upload the Archive zip file.
        /// </summary>
        public readonly string GcsUri;
        /// <summary>
        /// User-supplied key-value pairs used to organize ArchiveDeployments. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A reference to the LRO that created this Archive Deployment in the following format: `organizations/{org}/operations/{id}`
        /// </summary>
        public readonly string Operation;
        /// <summary>
        /// The time at which the Archive Deployment was updated in milliseconds since the epoch.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetArchiveDeploymentResult(
            string createdAt,

            string gcsUri,

            ImmutableDictionary<string, string> labels,

            string name,

            string operation,

            string updatedAt)
        {
            CreatedAt = createdAt;
            GcsUri = gcsUri;
            Labels = labels;
            Name = name;
            Operation = operation;
            UpdatedAt = updatedAt;
        }
    }
}
