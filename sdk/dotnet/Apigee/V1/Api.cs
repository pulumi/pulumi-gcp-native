// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Apigee.V1
{
    /// <summary>
    /// Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.
    /// </summary>
    [GoogleNativeResourceType("google-native:apigee/v1:Api")]
    public partial class Api : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// The type of the API proxy.
        /// </summary>
        [Output("apiProxyType")]
        public Output<string> ApiProxyType { get; private set; } = null!;

        /// <summary>
        /// User labels applied to this API Proxy.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The id of the most recently created revision for this api proxy.
        /// </summary>
        [Output("latestRevisionId")]
        public Output<string> LatestRevisionId { get; private set; } = null!;

        /// <summary>
        /// Metadata describing the API proxy.
        /// </summary>
        [Output("metaData")]
        public Output<Outputs.GoogleCloudApigeeV1EntityMetadataResponse> MetaData { get; private set; } = null!;

        /// <summary>
        /// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive.
        /// </summary>
        [Output("readOnly")]
        public Output<bool> ReadOnly { get; private set; } = null!;

        /// <summary>
        /// List of revisions defined for the API proxy.
        /// </summary>
        [Output("revision")]
        public Output<ImmutableArray<string>> Revision { get; private set; } = null!;

        /// <summary>
        /// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
        /// </summary>
        [Output("validate")]
        public Output<bool?> Validate { get; private set; } = null!;


        /// <summary>
        /// Create a Api resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Api(string name, ApiArgs args, CustomResourceOptions? options = null)
            : base("google-native:apigee/v1:Api", name, args ?? new ApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Api(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:apigee/v1:Api", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "organizationId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Api resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Api Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Api(name, id, options);
        }
    }

    public sealed class ApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The HTTP Content-Type header value specifying the content type of the body.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// The HTTP request/response body as raw binary.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        [Input("extensions")]
        private InputList<ImmutableDictionary<string, object>>? _extensions;

        /// <summary>
        /// Application specific response metadata. Must be set in the first response for streaming APIs.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<ImmutableDictionary<string, object>>());
            set => _extensions = value;
        }

        /// <summary>
        /// File to upload.
        /// </summary>
        [Input("file")]
        public Input<AssetOrArchive>? File { get; set; }

        /// <summary>
        /// Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.
        /// </summary>
        [Input("validate")]
        public Input<bool>? Validate { get; set; }

        public ApiArgs()
        {
        }
        public static new ApiArgs Empty => new ApiArgs();
    }
}
