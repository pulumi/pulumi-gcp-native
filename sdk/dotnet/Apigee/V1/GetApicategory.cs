// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Apigee.V1
{
    public static class GetApicategory
    {
        /// <summary>
        /// Gets an API category.
        /// </summary>
        public static Task<GetApicategoryResult> InvokeAsync(GetApicategoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApicategoryResult>("google-native:apigee/v1:getApicategory", args ?? new GetApicategoryArgs(), options.WithDefaults());

        /// <summary>
        /// Gets an API category.
        /// </summary>
        public static Output<GetApicategoryResult> Invoke(GetApicategoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApicategoryResult>("google-native:apigee/v1:getApicategory", args ?? new GetApicategoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApicategoryArgs : global::Pulumi.InvokeArgs
    {
        [Input("apicategoryId", required: true)]
        public string ApicategoryId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        [Input("siteId", required: true)]
        public string SiteId { get; set; } = null!;

        public GetApicategoryArgs()
        {
        }
        public static new GetApicategoryArgs Empty => new GetApicategoryArgs();
    }

    public sealed class GetApicategoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apicategoryId", required: true)]
        public Input<string> ApicategoryId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        public GetApicategoryInvokeArgs()
        {
        }
        public static new GetApicategoryInvokeArgs Empty => new GetApicategoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetApicategoryResult
    {
        /// <summary>
        /// The API category resource.
        /// </summary>
        public readonly Outputs.GoogleCloudApigeeV1ApiCategoryResponse Data;
        /// <summary>
        /// Unique error code for the request, if any.
        /// </summary>
        public readonly string ErrorCode;
        /// <summary>
        /// Description of the operation.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// Unique ID of the request.
        /// </summary>
        public readonly string RequestId;
        /// <summary>
        /// Status of the operation.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetApicategoryResult(
            Outputs.GoogleCloudApigeeV1ApiCategoryResponse data,

            string errorCode,

            string message,

            string requestId,

            string status)
        {
            Data = data;
            ErrorCode = errorCode;
            Message = message;
            RequestId = requestId;
            Status = status;
        }
    }
}
