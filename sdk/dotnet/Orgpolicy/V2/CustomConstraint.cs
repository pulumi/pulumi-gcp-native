// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Orgpolicy.V2
{
    /// <summary>
    /// Creates a CustomConstraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the organization does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.
    /// </summary>
    [GoogleNativeResourceType("google-native:orgpolicy/v2:CustomConstraint")]
    public partial class CustomConstraint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Allow or deny type.
        /// </summary>
        [Output("actionType")]
        public Output<string> ActionType { get; private set; } = null!;

        /// <summary>
        /// Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true`
        /// </summary>
        [Output("condition")]
        public Output<string> Condition { get; private set; } = null!;

        /// <summary>
        /// Detailed information about this custom policy constraint.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// One line display name for the UI.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// All the operations being applied for this constraint.
        /// </summary>
        [Output("methodTypes")]
        public Output<ImmutableArray<string>> MethodTypes { get; private set; } = null!;

        /// <summary>
        /// Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example : "organizations/123/customConstraints/custom.createOnlyE2TypeVms"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Immutable. The Resource Instance type on which this policy applies to. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.
        /// </summary>
        [Output("resourceTypes")]
        public Output<ImmutableArray<string>> ResourceTypes { get; private set; } = null!;


        /// <summary>
        /// Create a CustomConstraint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomConstraint(string name, CustomConstraintArgs args, CustomResourceOptions? options = null)
            : base("google-native:orgpolicy/v2:CustomConstraint", name, args ?? new CustomConstraintArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomConstraint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:orgpolicy/v2:CustomConstraint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "organizationId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomConstraint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomConstraint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CustomConstraint(name, id, options);
        }
    }

    public sealed class CustomConstraintArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow or deny type.
        /// </summary>
        [Input("actionType")]
        public Input<Pulumi.GoogleNative.Orgpolicy.V2.CustomConstraintActionType>? ActionType { get; set; }

        /// <summary>
        /// Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true`
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// Detailed information about this custom policy constraint.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// One line display name for the UI.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("methodTypes")]
        private InputList<Pulumi.GoogleNative.Orgpolicy.V2.CustomConstraintMethodTypesItem>? _methodTypes;

        /// <summary>
        /// All the operations being applied for this constraint.
        /// </summary>
        public InputList<Pulumi.GoogleNative.Orgpolicy.V2.CustomConstraintMethodTypesItem> MethodTypes
        {
            get => _methodTypes ?? (_methodTypes = new InputList<Pulumi.GoogleNative.Orgpolicy.V2.CustomConstraintMethodTypesItem>());
            set => _methodTypes = value;
        }

        /// <summary>
        /// Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example : "organizations/123/customConstraints/custom.createOnlyE2TypeVms"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Immutable. The Resource Instance type on which this policy applies to. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        public CustomConstraintArgs()
        {
        }
        public static new CustomConstraintArgs Empty => new CustomConstraintArgs();
    }
}
