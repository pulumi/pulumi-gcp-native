// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Orgpolicy.V2
{
    public static class GetCustomConstraint
    {
        /// <summary>
        /// Gets a CustomConstraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the CustomConstraint does not exist.
        /// </summary>
        public static Task<GetCustomConstraintResult> InvokeAsync(GetCustomConstraintArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomConstraintResult>("google-native:orgpolicy/v2:getCustomConstraint", args ?? new GetCustomConstraintArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a CustomConstraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the CustomConstraint does not exist.
        /// </summary>
        public static Output<GetCustomConstraintResult> Invoke(GetCustomConstraintInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomConstraintResult>("google-native:orgpolicy/v2:getCustomConstraint", args ?? new GetCustomConstraintInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomConstraintArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConstraintId", required: true)]
        public string CustomConstraintId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetCustomConstraintArgs()
        {
        }
        public static new GetCustomConstraintArgs Empty => new GetCustomConstraintArgs();
    }

    public sealed class GetCustomConstraintInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConstraintId", required: true)]
        public Input<string> CustomConstraintId { get; set; } = null!;

        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetCustomConstraintInvokeArgs()
        {
        }
        public static new GetCustomConstraintInvokeArgs Empty => new GetCustomConstraintInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomConstraintResult
    {
        /// <summary>
        /// Allow or deny type.
        /// </summary>
        public readonly string ActionType;
        /// <summary>
        /// Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters.
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// Detailed information about this custom policy constraint. The max length of the description is 2000 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// One line display name for the UI. The max length of the display_name is 200 characters.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// All the operations being applied for this constraint.
        /// </summary>
        public readonly ImmutableArray<string> MethodTypes;
        /// <summary>
        /// Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example : "organizations/123/customConstraints/custom.createOnlyE2TypeVms" The max length is 100 characters and the min length is 1. Note that the prefix "organizations/{organization_id}/customConstraints/" is not counted.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Immutable. The Resource Instance type on which this policy applies to. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.
        /// </summary>
        public readonly ImmutableArray<string> ResourceTypes;
        /// <summary>
        /// The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCustomConstraintResult(
            string actionType,

            string condition,

            string description,

            string displayName,

            ImmutableArray<string> methodTypes,

            string name,

            ImmutableArray<string> resourceTypes,

            string updateTime)
        {
            ActionType = actionType;
            Condition = condition;
            Description = description;
            DisplayName = displayName;
            MethodTypes = methodTypes;
            Name = name;
            ResourceTypes = resourceTypes;
            UpdateTime = updateTime;
        }
    }
}
