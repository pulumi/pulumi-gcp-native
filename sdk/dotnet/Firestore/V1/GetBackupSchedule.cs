// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Firestore.V1
{
    public static class GetBackupSchedule
    {
        /// <summary>
        /// Gets information about a backup schedule.
        /// </summary>
        public static Task<GetBackupScheduleResult> InvokeAsync(GetBackupScheduleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupScheduleResult>("google-native:firestore/v1:getBackupSchedule", args ?? new GetBackupScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a backup schedule.
        /// </summary>
        public static Output<GetBackupScheduleResult> Invoke(GetBackupScheduleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupScheduleResult>("google-native:firestore/v1:getBackupSchedule", args ?? new GetBackupScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupScheduleArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupScheduleId", required: true)]
        public string BackupScheduleId { get; set; } = null!;

        [Input("databaseId", required: true)]
        public string DatabaseId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetBackupScheduleArgs()
        {
        }
        public static new GetBackupScheduleArgs Empty => new GetBackupScheduleArgs();
    }

    public sealed class GetBackupScheduleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupScheduleId", required: true)]
        public Input<string> BackupScheduleId { get; set; } = null!;

        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBackupScheduleInvokeArgs()
        {
        }
        public static new GetBackupScheduleInvokeArgs Empty => new GetBackupScheduleInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupScheduleResult
    {
        /// <summary>
        /// The timestamp at which this backup schedule was created and effective since. No backups will be created for this schedule before this time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// For a schedule that runs daily at a specified time.
        /// </summary>
        public readonly Outputs.GoogleFirestoreAdminV1DailyRecurrenceResponse DailyRecurrence;
        /// <summary>
        /// The unique backup schedule identifier across all locations and databases for the given project. This will be auto-assigned. Format is `projects/{project}/databases/{database}/backupSchedules/{backup_schedule}`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// At what relative time in the future, compared to the creation time of the backup should the backup be deleted, i.e. keep backups for 7 days.
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// The timestamp at which this backup schedule was most recently updated. When a backup schedule is first created, this is the same as create_time.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// For a schedule that runs weekly on a specific day and time.
        /// </summary>
        public readonly Outputs.GoogleFirestoreAdminV1WeeklyRecurrenceResponse WeeklyRecurrence;

        [OutputConstructor]
        private GetBackupScheduleResult(
            string createTime,

            Outputs.GoogleFirestoreAdminV1DailyRecurrenceResponse dailyRecurrence,

            string name,

            string retention,

            string updateTime,

            Outputs.GoogleFirestoreAdminV1WeeklyRecurrenceResponse weeklyRecurrence)
        {
            CreateTime = createTime;
            DailyRecurrence = dailyRecurrence;
            Name = name;
            Retention = retention;
            UpdateTime = updateTime;
            WeeklyRecurrence = weeklyRecurrence;
        }
    }
}
