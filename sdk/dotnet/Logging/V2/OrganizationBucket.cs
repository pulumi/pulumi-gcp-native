// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Logging.V2
{
    /// <summary>
    /// Creates a bucket that can be used to store log entries. Once a bucket has been created, the region cannot be changed.
    /// </summary>
    [GoogleNativeResourceType("google-native:logging/v2:OrganizationBucket")]
    public partial class OrganizationBucket : Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp of the bucket. This is not set for any of the default buckets.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Describes this bucket.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The bucket lifecycle state.
        /// </summary>
        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        /// <summary>
        /// Whether the bucket has been locked. The retention period on a locked bucket may not be changed. Locked buckets may only be deleted if they are empty.
        /// </summary>
        [Output("locked")]
        public Output<bool> Locked { get; private set; } = null!;

        /// <summary>
        /// The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id" The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1.For the location of global it is unspecified where logs are actually stored. Once a bucket has been created, the location can not be changed.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Log entry field paths that are denied access in this bucket. The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation. Restricting a repeated field will restrict all values. Adding a parent will block all child fields e.g. foo.bar will block foo.bar.baz.
        /// </summary>
        [Output("restrictedFields")]
        public Output<ImmutableArray<string>> RestrictedFields { get; private set; } = null!;

        /// <summary>
        /// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
        /// </summary>
        [Output("retentionDays")]
        public Output<int> RetentionDays { get; private set; } = null!;

        /// <summary>
        /// The last update timestamp of the bucket.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationBucket(string name, OrganizationBucketArgs args, CustomResourceOptions? options = null)
            : base("google-native:logging/v2:OrganizationBucket", name, args ?? new OrganizationBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationBucket(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:logging/v2:OrganizationBucket", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationBucket Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new OrganizationBucket(name, id, options);
        }
    }

    public sealed class OrganizationBucketArgs : Pulumi.ResourceArgs
    {
        [Input("bucketId", required: true)]
        public Input<string> BucketId { get; set; } = null!;

        [Input("bucketsId", required: true)]
        public Input<string> BucketsId { get; set; } = null!;

        /// <summary>
        /// Describes this bucket.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("locationsId", required: true)]
        public Input<string> LocationsId { get; set; } = null!;

        /// <summary>
        /// Whether the bucket has been locked. The retention period on a locked bucket may not be changed. Locked buckets may only be deleted if they are empty.
        /// </summary>
        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("organizationsId", required: true)]
        public Input<string> OrganizationsId { get; set; } = null!;

        [Input("restrictedFields")]
        private InputList<string>? _restrictedFields;

        /// <summary>
        /// Log entry field paths that are denied access in this bucket. The following fields and their children are eligible: textPayload, jsonPayload, protoPayload, httpRequest, labels, sourceLocation. Restricting a repeated field will restrict all values. Adding a parent will block all child fields e.g. foo.bar will block foo.bar.baz.
        /// </summary>
        public InputList<string> RestrictedFields
        {
            get => _restrictedFields ?? (_restrictedFields = new InputList<string>());
            set => _restrictedFields = value;
        }

        /// <summary>
        /// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        public OrganizationBucketArgs()
        {
        }
    }
}
