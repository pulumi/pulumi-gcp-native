// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.FirebaseAppCheck.V1Beta
{
    public static class GetDebugToken
    {
        /// <summary>
        /// Gets the specified DebugToken. For security reasons, the `token` field is never populated in the response.
        /// </summary>
        public static Task<GetDebugTokenResult> InvokeAsync(GetDebugTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDebugTokenResult>("google-native:firebaseappcheck/v1beta:getDebugToken", args ?? new GetDebugTokenArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the specified DebugToken. For security reasons, the `token` field is never populated in the response.
        /// </summary>
        public static Output<GetDebugTokenResult> Invoke(GetDebugTokenInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDebugTokenResult>("google-native:firebaseappcheck/v1beta:getDebugToken", args ?? new GetDebugTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDebugTokenArgs : Pulumi.InvokeArgs
    {
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        [Input("debugTokenId", required: true)]
        public string DebugTokenId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetDebugTokenArgs()
        {
        }
    }

    public sealed class GetDebugTokenInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("debugTokenId", required: true)]
        public Input<string> DebugTokenId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDebugTokenInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDebugTokenResult
    {
        /// <summary>
        /// A human readable display name used to identify this debug token.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response.
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private GetDebugTokenResult(
            string displayName,

            string name,

            string token)
        {
            DisplayName = displayName;
            Name = name;
            Token = token;
        }
    }
}
