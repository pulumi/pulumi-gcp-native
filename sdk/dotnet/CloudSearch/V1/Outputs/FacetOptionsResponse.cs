// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.CloudSearch.V1.Outputs
{

    /// <summary>
    /// Specifies operators to return facet results for. There will be one FacetResult for every source_name/object_type/operator_name combination.
    /// </summary>
    [OutputType]
    public sealed class FacetOptionsResponse
    {
        /// <summary>
        /// If set, describes integer faceting options for the given integer property. The corresponding integer property in the schema should be marked isFacetable. The number of buckets returned would be minimum of this and num_facet_buckets.
        /// </summary>
        public readonly Outputs.IntegerFacetingOptionsResponse IntegerFacetingOptions;
        /// <summary>
        /// Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.
        /// </summary>
        public readonly int NumFacetBuckets;
        /// <summary>
        /// If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.
        /// </summary>
        public readonly string ObjectType;
        /// <summary>
        /// The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
        /// </summary>
        public readonly string OperatorName;
        /// <summary>
        /// Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.
        /// </summary>
        public readonly string SourceName;

        [OutputConstructor]
        private FacetOptionsResponse(
            Outputs.IntegerFacetingOptionsResponse integerFacetingOptions,

            int numFacetBuckets,

            string objectType,

            string operatorName,

            string sourceName)
        {
            IntegerFacetingOptions = integerFacetingOptions;
            NumFacetBuckets = numFacetBuckets;
            ObjectType = objectType;
            OperatorName = operatorName;
            SourceName = sourceName;
        }
    }
}
