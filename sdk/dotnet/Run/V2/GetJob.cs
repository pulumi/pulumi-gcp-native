// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Run.V2
{
    public static class GetJob
    {
        /// <summary>
        /// Gets information about a Job.
        /// </summary>
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("google-native:run/v2:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        /// <summary>
        /// Gets information about a Job.
        /// </summary>
        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetJobResult>("google-native:run/v2:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public string JobId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        /// <summary>
        /// KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using 'run.googleapis.com' or 'serving.knative.dev' namespaces. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Settings for the Binary Authorization feature.
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2BinaryAuthorizationResponse BinaryAuthorization;
        /// <summary>
        /// Arbitrary identifier for the API client.
        /// </summary>
        public readonly string Client;
        /// <summary>
        /// Arbitrary version identifier for the API client.
        /// </summary>
        public readonly string ClientVersion;
        /// <summary>
        /// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudRunV2ConditionResponse> Conditions;
        /// <summary>
        /// The creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Email address of the authenticated creator.
        /// </summary>
        public readonly string Creator;
        /// <summary>
        /// The deletion time.
        /// </summary>
        public readonly string DeleteTime;
        /// <summary>
        /// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Number of executions created for this job.
        /// </summary>
        public readonly int ExecutionCount;
        /// <summary>
        /// For a deleted resource, the time after which it will be permamently deleted.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// A number that monotonically increases every time the user modifies the desired state.
        /// </summary>
        public readonly string Generation;
        /// <summary>
        /// KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with 'run.googleapis.com' or 'serving.knative.dev' namespaces. Those labels are read-only, and user changes will not be preserved.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Email address of the last authenticated modifier.
        /// </summary>
        public readonly string LastModifier;
        /// <summary>
        /// Name of the last created execution.
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ExecutionReferenceResponse LatestCreatedExecution;
        /// <summary>
        /// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
        /// </summary>
        public readonly string LaunchStage;
        /// <summary>
        /// The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
        /// </summary>
        public readonly string ObservedGeneration;
        /// <summary>
        /// Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.
        /// </summary>
        public readonly bool Reconciling;
        /// <summary>
        /// The template used to create executions for this Job.
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ExecutionTemplateResponse Template;
        /// <summary>
        /// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ConditionResponse TerminalCondition;
        /// <summary>
        /// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        /// </summary>
        public readonly string Uid;
        /// <summary>
        /// The last-modified time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetJobResult(
            ImmutableDictionary<string, string> annotations,

            Outputs.GoogleCloudRunV2BinaryAuthorizationResponse binaryAuthorization,

            string client,

            string clientVersion,

            ImmutableArray<Outputs.GoogleCloudRunV2ConditionResponse> conditions,

            string createTime,

            string creator,

            string deleteTime,

            string etag,

            int executionCount,

            string expireTime,

            string generation,

            ImmutableDictionary<string, string> labels,

            string lastModifier,

            Outputs.GoogleCloudRunV2ExecutionReferenceResponse latestCreatedExecution,

            string launchStage,

            string name,

            string observedGeneration,

            bool reconciling,

            Outputs.GoogleCloudRunV2ExecutionTemplateResponse template,

            Outputs.GoogleCloudRunV2ConditionResponse terminalCondition,

            string uid,

            string updateTime)
        {
            Annotations = annotations;
            BinaryAuthorization = binaryAuthorization;
            Client = client;
            ClientVersion = clientVersion;
            Conditions = conditions;
            CreateTime = createTime;
            Creator = creator;
            DeleteTime = deleteTime;
            Etag = etag;
            ExecutionCount = executionCount;
            ExpireTime = expireTime;
            Generation = generation;
            Labels = labels;
            LastModifier = lastModifier;
            LatestCreatedExecution = latestCreatedExecution;
            LaunchStage = launchStage;
            Name = name;
            ObservedGeneration = observedGeneration;
            Reconciling = reconciling;
            Template = template;
            TerminalCondition = terminalCondition;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
