// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Run.V2.Outputs
{

    /// <summary>
    /// A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudRunV2ContainerResponse
    {
        /// <summary>
        /// Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
        /// </summary>
        public readonly ImmutableArray<string> Command;
        /// <summary>
        /// List of environment variables to set in the container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudRunV2EnvVarResponse> Env;
        /// <summary>
        /// Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed. More info: https://kubernetes.io/docs/concepts/containers/images
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ProbeResponse LivenessProbe;
        /// <summary>
        /// Name of the container specified as a DNS_LABEL (RFC 1123).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudRunV2ContainerPortResponse> Ports;
        /// <summary>
        /// Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ResourceRequirementsResponse Resources;
        /// <summary>
        /// Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        public readonly Outputs.GoogleCloudRunV2ProbeResponse StartupProbe;
        /// <summary>
        /// Volume to mount into the container's filesystem.
        /// </summary>
        public readonly ImmutableArray<Outputs.GoogleCloudRunV2VolumeMountResponse> VolumeMounts;
        /// <summary>
        /// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
        /// </summary>
        public readonly string WorkingDir;

        [OutputConstructor]
        private GoogleCloudRunV2ContainerResponse(
            ImmutableArray<string> args,

            ImmutableArray<string> command,

            ImmutableArray<Outputs.GoogleCloudRunV2EnvVarResponse> env,

            string image,

            Outputs.GoogleCloudRunV2ProbeResponse livenessProbe,

            string name,

            ImmutableArray<Outputs.GoogleCloudRunV2ContainerPortResponse> ports,

            Outputs.GoogleCloudRunV2ResourceRequirementsResponse resources,

            Outputs.GoogleCloudRunV2ProbeResponse startupProbe,

            ImmutableArray<Outputs.GoogleCloudRunV2VolumeMountResponse> volumeMounts,

            string workingDir)
        {
            Args = args;
            Command = command;
            Env = env;
            Image = image;
            LivenessProbe = livenessProbe;
            Name = name;
            Ports = ports;
            Resources = resources;
            StartupProbe = startupProbe;
            VolumeMounts = volumeMounts;
            WorkingDir = workingDir;
        }
    }
}
