// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Run.V1Alpha1.Inputs
{

    /// <summary>
    /// JobStatus represents the current state of a Job.
    /// </summary>
    public sealed class JobStatusArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The number of actively running instances. +optional
        /// </summary>
        [Input("active")]
        public Input<int>? Active { get; set; }

        /// <summary>
        /// Optional. Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
        /// </summary>
        [Input("completionTime")]
        public Input<string>? CompletionTime { get; set; }

        [Input("conditions")]
        private InputList<Inputs.JobConditionArgs>? _conditions;

        /// <summary>
        /// Optional. The latest available observations of a job's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional
        /// </summary>
        public InputList<Inputs.JobConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.JobConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Optional. The number of instances which reached phase Failed. +optional
        /// </summary>
        [Input("failed")]
        public Input<int>? Failed { get; set; }

        /// <summary>
        /// Optional. ImageDigest holds the resolved digest for the image specified within .Spec.Template.Spec.Container.Image. The digest is resolved during the creation of the Job. This field holds the digest value regardless of whether a tag or digest was originally specified in the Container object.
        /// </summary>
        [Input("imageDigest")]
        public Input<string>? ImageDigest { get; set; }

        [Input("instances")]
        private InputList<Inputs.InstanceStatusArgs>? _instances;

        /// <summary>
        /// Optional. Status of completed, failed, and running instances. +optional
        /// </summary>
        public InputList<Inputs.InstanceStatusArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.InstanceStatusArgs>());
            set => _instances = value;
        }

        /// <summary>
        /// Optional. The 'generation' of the job that was last processed by the controller.
        /// </summary>
        [Input("observedGeneration")]
        public Input<int>? ObservedGeneration { get; set; }

        /// <summary>
        /// Optional. Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Optional. The number of instances which reached phase Succeeded. +optional
        /// </summary>
        [Input("succeeded")]
        public Input<int>? Succeeded { get; set; }

        public JobStatusArgs()
        {
        }
    }
}
