// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Run.V1Alpha1.Outputs
{

    [OutputType]
    public sealed class LifecycleResponse
    {
        /// <summary>
        /// PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks +optional
        /// </summary>
        public readonly Outputs.HandlerResponse PostStart;
        /// <summary>
        /// PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks +optional
        /// </summary>
        public readonly Outputs.HandlerResponse PreStop;

        [OutputConstructor]
        private LifecycleResponse(
            Outputs.HandlerResponse postStart,

            Outputs.HandlerResponse preStop)
        {
            PostStart = postStart;
            PreStop = preStop;
        }
    }
}
