// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Run.V1alpha1.Outputs
{

    [OutputType]
    public sealed class ServiceConditionResponse
    {
        /// <summary>
        /// Last time the condition transitioned from one status to another. +optional
        /// </summary>
        public readonly string LastTransitionTime;
        /// <summary>
        /// Human-readable message indicating details about last transition. +optional
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// One-word CamelCase reason for the condition's last transition. +optional
        /// </summary>
        public readonly string Reason;
        /// <summary>
        /// How to interpret failures of this condition, one of Error, Warning, Info +optional
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// Status of the condition, one of True, False, Unknown.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// ServiceConditionType is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include: "Ready", "ConfigurationsReady", and "RoutesReady". "Ready" will be true when the underlying Route and Configuration are ready.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private ServiceConditionResponse(
            string lastTransitionTime,

            string message,

            string reason,

            string severity,

            string status,

            string type)
        {
            LastTransitionTime = lastTransitionTime;
            Message = message;
            Reason = reason;
            Severity = severity;
            Status = status;
            Type = type;
        }
    }
}
