// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Run.V1.Inputs
{

    /// <summary>
    /// TrafficTarget holds a single entry of the routing table for a Route.
    /// </summary>
    public sealed class TrafficTargetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the "status.latestReadyRevisionName" of the referenced configuration changes, we will automatically migrate traffic from the prior "latest ready" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName.
        /// </summary>
        [Input("configurationName")]
        public Input<string>? ConfigurationName { get; set; }

        /// <summary>
        /// Optional. LatestRevision may be provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.
        /// </summary>
        [Input("latestRevision")]
        public Input<bool>? LatestRevision { get; set; }

        /// <summary>
        /// Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified.
        /// </summary>
        [Input("percent")]
        public Input<int>? Percent { get; set; }

        /// <summary>
        /// RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName.
        /// </summary>
        [Input("revisionName")]
        public Input<string>? RevisionName { get; set; }

        /// <summary>
        /// Optional. Tag is used to expose a dedicated url for referencing this target exclusively.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public TrafficTargetArgs()
        {
        }
    }
}
