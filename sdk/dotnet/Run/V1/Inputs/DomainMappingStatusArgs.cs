// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Run.V1.Inputs
{

    /// <summary>
    /// The current state of the Domain Mapping.
    /// </summary>
    public sealed class DomainMappingStatusArgs : Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.GoogleCloudRunV1ConditionArgs>? _conditions;

        /// <summary>
        /// Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.
        /// </summary>
        public InputList<Inputs.GoogleCloudRunV1ConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.GoogleCloudRunV1ConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The name of the route that the mapping currently points to.
        /// </summary>
        [Input("mappedRouteName")]
        public Input<string>? MappedRouteName { get; set; }

        /// <summary>
        /// ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.
        /// </summary>
        [Input("observedGeneration")]
        public Input<int>? ObservedGeneration { get; set; }

        [Input("resourceRecords")]
        private InputList<Inputs.ResourceRecordArgs>? _resourceRecords;

        /// <summary>
        /// The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.
        /// </summary>
        public InputList<Inputs.ResourceRecordArgs> ResourceRecords
        {
            get => _resourceRecords ?? (_resourceRecords = new InputList<Inputs.ResourceRecordArgs>());
            set => _resourceRecords = value;
        }

        /// <summary>
        /// Optional. Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public DomainMappingStatusArgs()
        {
        }
    }
}
