// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleCloud.Bigquery.V2
{
    /// <summary>
    /// Starts a new asynchronous job. Requires the Can View project role.
    /// </summary>
    [GoogleCloudResourceType("google-cloud:bigquery/v2:Job")]
    public partial class Job : Pulumi.CustomResource
    {
        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("google-cloud:bigquery/v2:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-cloud:bigquery/v2:Job", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Job(name, id, options);
        }
    }

    public sealed class JobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Required] Describes the job configuration.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.JobConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// [Output-only] A hash of this resource.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// [Output-only] Opaque ID field of the job
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        /// <summary>
        /// [Optional] Reference describing the unique-per-user name of the job.
        /// </summary>
        [Input("jobReference")]
        public Input<Inputs.JobReferenceArgs>? JobReference { get; set; }

        /// <summary>
        /// [Output-only] The type of the resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// [Output-only] A URL that can be used to access this resource again.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// [Output-only] Information about the job, including starting time and ending time of the job.
        /// </summary>
        [Input("statistics")]
        public Input<Inputs.JobStatisticsArgs>? Statistics { get; set; }

        /// <summary>
        /// [Output-only] The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.
        /// </summary>
        [Input("status")]
        public Input<Inputs.JobStatusArgs>? Status { get; set; }

        /// <summary>
        /// [Output-only] Email address of the user who ran the job.
        /// </summary>
        [Input("user_email")]
        public Input<string>? User_email { get; set; }

        public JobArgs()
        {
        }
    }
}
