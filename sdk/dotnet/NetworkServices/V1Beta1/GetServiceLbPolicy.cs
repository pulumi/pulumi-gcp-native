// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkServices.V1Beta1
{
    public static class GetServiceLbPolicy
    {
        /// <summary>
        /// Gets details of a single ServiceLbPolicy.
        /// </summary>
        public static Task<GetServiceLbPolicyResult> InvokeAsync(GetServiceLbPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceLbPolicyResult>("google-native:networkservices/v1beta1:getServiceLbPolicy", args ?? new GetServiceLbPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single ServiceLbPolicy.
        /// </summary>
        public static Output<GetServiceLbPolicyResult> Invoke(GetServiceLbPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceLbPolicyResult>("google-native:networkservices/v1beta1:getServiceLbPolicy", args ?? new GetServiceLbPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceLbPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("serviceLbPolicyId", required: true)]
        public string ServiceLbPolicyId { get; set; } = null!;

        public GetServiceLbPolicyArgs()
        {
        }
        public static new GetServiceLbPolicyArgs Empty => new GetServiceLbPolicyArgs();
    }

    public sealed class GetServiceLbPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("serviceLbPolicyId", required: true)]
        public Input<string> ServiceLbPolicyId { get; set; } = null!;

        public GetServiceLbPolicyInvokeArgs()
        {
        }
        public static new GetServiceLbPolicyInvokeArgs Empty => new GetServiceLbPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceLbPolicyResult
    {
        /// <summary>
        /// Optional. Configuration to automatically move traffic away for unhealthy IG/NEG for the associated Backend Service.
        /// </summary>
        public readonly Outputs.ServiceLbPolicyAutoCapacityDrainResponse AutoCapacityDrain;
        /// <summary>
        /// The timestamp when this resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. A free-text description of the resource. Max length 1024 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Configuration related to health based failover.
        /// </summary>
        public readonly Outputs.ServiceLbPolicyFailoverConfigResponse FailoverConfig;
        /// <summary>
        /// Optional. Set of label tags associated with the ServiceLbPolicy resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Optional. The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION.
        /// </summary>
        public readonly string LoadBalancingAlgorithm;
        /// <summary>
        /// Name of the ServiceLbPolicy resource. It matches pattern `projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The timestamp when this resource was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetServiceLbPolicyResult(
            Outputs.ServiceLbPolicyAutoCapacityDrainResponse autoCapacityDrain,

            string createTime,

            string description,

            Outputs.ServiceLbPolicyFailoverConfigResponse failoverConfig,

            ImmutableDictionary<string, string> labels,

            string loadBalancingAlgorithm,

            string name,

            string updateTime)
        {
            AutoCapacityDrain = autoCapacityDrain;
            CreateTime = createTime;
            Description = description;
            FailoverConfig = failoverConfig;
            Labels = labels;
            LoadBalancingAlgorithm = loadBalancingAlgorithm;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
