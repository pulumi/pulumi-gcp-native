// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkServices.V1Beta1.Inputs
{

    /// <summary>
    /// A single extension chain wrapper that contains the match conditions and extensions to execute.
    /// </summary>
    public sealed class ExtensionChainArgs : global::Pulumi.ResourceArgs
    {
        [Input("extensions", required: true)]
        private InputList<Inputs.ExtensionChainExtensionArgs>? _extensions;

        /// <summary>
        /// A set of extensions to execute for the matching request. At least one extension is required. Up to 3 extensions can be defined for each extension chain for `LbTrafficExtension` resource. `LbRouteExtension` chains are limited to 1 extension per extension chain.
        /// </summary>
        public InputList<Inputs.ExtensionChainExtensionArgs> Extensions
        {
            get => _extensions ?? (_extensions = new InputList<Inputs.ExtensionChainExtensionArgs>());
            set => _extensions = value;
        }

        /// <summary>
        /// Conditions under which this chain is invoked for a request.
        /// </summary>
        [Input("matchCondition", required: true)]
        public Input<Inputs.ExtensionChainMatchConditionArgs> MatchCondition { get; set; } = null!;

        /// <summary>
        /// The name for this extension chain. The name is logged as part of the HTTP request logs. The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens, and can have a maximum length of 63 characters. Additionally, the first character must be a letter and the last a letter or a number.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ExtensionChainArgs()
        {
        }
        public static new ExtensionChainArgs Empty => new ExtensionChainArgs();
    }
}
