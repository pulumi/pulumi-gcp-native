// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkServices.V1
{
    public static class GetEndpointPolicy
    {
        /// <summary>
        /// Gets details of a single EndpointPolicy.
        /// </summary>
        public static Task<GetEndpointPolicyResult> InvokeAsync(GetEndpointPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEndpointPolicyResult>("google-native:networkservices/v1:getEndpointPolicy", args ?? new GetEndpointPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single EndpointPolicy.
        /// </summary>
        public static Output<GetEndpointPolicyResult> Invoke(GetEndpointPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEndpointPolicyResult>("google-native:networkservices/v1:getEndpointPolicy", args ?? new GetEndpointPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("endpointPolicyId", required: true)]
        public string EndpointPolicyId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetEndpointPolicyArgs()
        {
        }
    }

    public sealed class GetEndpointPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("endpointPolicyId", required: true)]
        public Input<string> EndpointPolicyId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetEndpointPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEndpointPolicyResult
    {
        /// <summary>
        /// Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint.
        /// </summary>
        public readonly string AuthorizationPolicy;
        /// <summary>
        /// Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.
        /// </summary>
        public readonly string ClientTlsPolicy;
        /// <summary>
        /// The timestamp when the resource was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. A free-text description of the resource. Max length 1024 characters.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// A matcher that selects endpoints to which the policies should be applied.
        /// </summary>
        public readonly Outputs.EndpointMatcherResponse EndpointMatcher;
        /// <summary>
        /// Optional. Set of label tags associated with the EndpointPolicy resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.
        /// </summary>
        public readonly string ServerTlsPolicy;
        /// <summary>
        /// Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
        /// </summary>
        public readonly Outputs.TrafficPortSelectorResponse TrafficPortSelector;
        /// <summary>
        /// The type of endpoint policy. This is primarily used to validate the configuration.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The timestamp when the resource was updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetEndpointPolicyResult(
            string authorizationPolicy,

            string clientTlsPolicy,

            string createTime,

            string description,

            Outputs.EndpointMatcherResponse endpointMatcher,

            ImmutableDictionary<string, string> labels,

            string name,

            string serverTlsPolicy,

            Outputs.TrafficPortSelectorResponse trafficPortSelector,

            string type,

            string updateTime)
        {
            AuthorizationPolicy = authorizationPolicy;
            ClientTlsPolicy = clientTlsPolicy;
            CreateTime = createTime;
            Description = description;
            EndpointMatcher = endpointMatcher;
            Labels = labels;
            Name = name;
            ServerTlsPolicy = serverTlsPolicy;
            TrafficPortSelector = trafficPortSelector;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
