// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.NetworkServices.V1.Inputs
{

    /// <summary>
    /// The specifications for retries.
    /// </summary>
    public sealed class GrpcRouteRetryPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the allowed number of retries. This number must be &gt; 0. If not specified, default to 1.
        /// </summary>
        [Input("numRetries")]
        public Input<int>? NumRetries { get; set; }

        [Input("retryConditions")]
        private InputList<string>? _retryConditions;

        /// <summary>
        /// - connect-failure: Router will retry on failures connecting to Backend Services, for example due to connection timeouts. - refused-stream: Router will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: Router will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Router will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Router will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Router will retry if the gRPC status code in the response header is set to unavailable
        /// </summary>
        public InputList<string> RetryConditions
        {
            get => _retryConditions ?? (_retryConditions = new InputList<string>());
            set => _retryConditions = value;
        }

        public GrpcRouteRetryPolicyArgs()
        {
        }
        public static new GrpcRouteRetryPolicyArgs Empty => new GrpcRouteRetryPolicyArgs();
    }
}
