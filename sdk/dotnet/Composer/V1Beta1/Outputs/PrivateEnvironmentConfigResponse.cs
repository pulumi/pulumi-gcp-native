// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Composer.V1Beta1.Outputs
{

    [OutputType]
    public sealed class PrivateEnvironmentConfigResponse
    {
        /// <summary>
        /// Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
        /// </summary>
        public readonly string CloudComposerNetworkIpv4CidrBlock;
        /// <summary>
        /// The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
        /// </summary>
        public readonly string CloudComposerNetworkIpv4ReservedRange;
        /// <summary>
        /// Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
        /// </summary>
        public readonly string CloudSqlIpv4CidrBlock;
        /// <summary>
        /// Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true .
        /// </summary>
        public readonly bool EnablePrivateEnvironment;
        /// <summary>
        /// Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.
        /// </summary>
        public readonly Outputs.PrivateClusterConfigResponse PrivateClusterConfig;
        /// <summary>
        /// Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
        /// </summary>
        public readonly string WebServerIpv4CidrBlock;
        /// <summary>
        /// The IP range reserved for the tenant project's App Engine VMs.
        /// </summary>
        public readonly string WebServerIpv4ReservedRange;

        [OutputConstructor]
        private PrivateEnvironmentConfigResponse(
            string cloudComposerNetworkIpv4CidrBlock,

            string cloudComposerNetworkIpv4ReservedRange,

            string cloudSqlIpv4CidrBlock,

            bool enablePrivateEnvironment,

            Outputs.PrivateClusterConfigResponse privateClusterConfig,

            string webServerIpv4CidrBlock,

            string webServerIpv4ReservedRange)
        {
            CloudComposerNetworkIpv4CidrBlock = cloudComposerNetworkIpv4CidrBlock;
            CloudComposerNetworkIpv4ReservedRange = cloudComposerNetworkIpv4ReservedRange;
            CloudSqlIpv4CidrBlock = cloudSqlIpv4CidrBlock;
            EnablePrivateEnvironment = enablePrivateEnvironment;
            PrivateClusterConfig = privateClusterConfig;
            WebServerIpv4CidrBlock = webServerIpv4CidrBlock;
            WebServerIpv4ReservedRange = webServerIpv4ReservedRange;
        }
    }
}
