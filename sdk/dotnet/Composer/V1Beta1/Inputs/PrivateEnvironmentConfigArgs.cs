// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Composer.V1Beta1.Inputs
{

    /// <summary>
    /// The configuration information for configuring a Private IP Cloud Composer environment.
    /// </summary>
    public sealed class PrivateEnvironmentConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.
        /// </summary>
        [Input("cloudComposerConnectionSubnetwork")]
        public Input<string>? CloudComposerConnectionSubnetwork { get; set; }

        /// <summary>
        /// Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
        /// </summary>
        [Input("cloudComposerNetworkIpv4CidrBlock")]
        public Input<string>? CloudComposerNetworkIpv4CidrBlock { get; set; }

        /// <summary>
        /// Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
        /// </summary>
        [Input("cloudSqlIpv4CidrBlock")]
        public Input<string>? CloudSqlIpv4CidrBlock { get; set; }

        /// <summary>
        /// Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
        /// </summary>
        [Input("enablePrivateEnvironment")]
        public Input<bool>? EnablePrivateEnvironment { get; set; }

        /// <summary>
        /// Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`.
        /// </summary>
        [Input("enablePrivatelyUsedPublicIps")]
        public Input<bool>? EnablePrivatelyUsedPublicIps { get; set; }

        /// <summary>
        /// Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.
        /// </summary>
        [Input("privateClusterConfig")]
        public Input<Inputs.PrivateClusterConfigArgs>? PrivateClusterConfig { get; set; }

        /// <summary>
        /// Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
        /// </summary>
        [Input("webServerIpv4CidrBlock")]
        public Input<string>? WebServerIpv4CidrBlock { get; set; }

        public PrivateEnvironmentConfigArgs()
        {
        }
    }
}
