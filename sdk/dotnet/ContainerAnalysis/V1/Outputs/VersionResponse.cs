// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1.Outputs
{

    /// <summary>
    /// Version contains structured information about the version of a package.
    /// </summary>
    [OutputType]
    public sealed class VersionResponse
    {
        /// <summary>
        /// Used to correct mistakes in the version numbering scheme.
        /// </summary>
        public readonly int Epoch;
        /// <summary>
        /// Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
        /// </summary>
        public readonly string FullName;
        /// <summary>
        /// Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.
        /// </summary>
        public readonly bool Inclusive;
        /// <summary>
        /// Distinguishes between sentinel MIN/MAX versions and normal versions.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Required only when version kind is NORMAL. The main part of the version name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The iteration of the package build from the above version.
        /// </summary>
        public readonly string Revision;

        [OutputConstructor]
        private VersionResponse(
            int epoch,

            string fullName,

            bool inclusive,

            string kind,

            string name,

            string revision)
        {
            Epoch = epoch;
            FullName = fullName;
            Inclusive = inclusive;
            Kind = kind;
            Name = name;
            Revision = revision;
        }
    }
}
