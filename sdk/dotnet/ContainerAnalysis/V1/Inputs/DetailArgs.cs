// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1.Inputs
{

    /// <summary>
    /// A detail for a distro and package affected by this vulnerability and its associated fix (if one is available).
    /// </summary>
    public sealed class DetailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability affects.
        /// </summary>
        [Input("affectedCpeUri", required: true)]
        public Input<string> AffectedCpeUri { get; set; } = null!;

        /// <summary>
        /// The package this vulnerability affects.
        /// </summary>
        [Input("affectedPackage", required: true)]
        public Input<string> AffectedPackage { get; set; } = null!;

        /// <summary>
        /// The version number at the end of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
        /// </summary>
        [Input("affectedVersionEnd")]
        public Input<Inputs.VersionArgs>? AffectedVersionEnd { get; set; }

        /// <summary>
        /// The version number at the start of an interval in which this vulnerability exists. A vulnerability can affect a package between version numbers that are disjoint sets of intervals (example: [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its own Detail. If a specific affected version is provided by a vulnerability database, affected_version_start and affected_version_end will be the same in that Detail.
        /// </summary>
        [Input("affectedVersionStart")]
        public Input<Inputs.VersionArgs>? AffectedVersionStart { get; set; }

        /// <summary>
        /// A vendor-specific description of this vulnerability.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The distro recommended [CPE URI](https://cpe.mitre.org/specification/) to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_cpe_uri.
        /// </summary>
        [Input("fixedCpeUri")]
        public Input<string>? FixedCpeUri { get; set; }

        /// <summary>
        /// The distro recommended package to update to that contains a fix for this vulnerability. It is possible for this to be different from the affected_package.
        /// </summary>
        [Input("fixedPackage")]
        public Input<string>? FixedPackage { get; set; }

        /// <summary>
        /// The distro recommended version to update to that contains a fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no such version is yet available.
        /// </summary>
        [Input("fixedVersion")]
        public Input<Inputs.VersionArgs>? FixedVersion { get; set; }

        /// <summary>
        /// Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
        /// </summary>
        [Input("isObsolete")]
        public Input<bool>? IsObsolete { get; set; }

        /// <summary>
        /// The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// The distro assigned severity of this vulnerability.
        /// </summary>
        [Input("severityName")]
        public Input<string>? SeverityName { get; set; }

        /// <summary>
        /// The source from which the information in this Detail was obtained.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
        /// </summary>
        [Input("sourceUpdateTime")]
        public Input<string>? SourceUpdateTime { get; set; }

        /// <summary>
        /// The name of the vendor of the product.
        /// </summary>
        [Input("vendor")]
        public Input<string>? Vendor { get; set; }

        public DetailArgs()
        {
        }
        public static new DetailArgs Empty => new DetailArgs();
    }
}
