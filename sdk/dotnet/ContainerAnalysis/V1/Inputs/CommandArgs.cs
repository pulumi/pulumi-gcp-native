// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1.Inputs
{

    /// <summary>
    /// Command describes a step performed as part of the build pipeline.
    /// </summary>
    public sealed class CommandArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;

        /// <summary>
        /// Command-line arguments used when executing this command.
        /// </summary>
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        /// <summary>
        /// Working directory (relative to project source root) used when running this command.
        /// </summary>
        [Input("dir")]
        public Input<string>? Dir { get; set; }

        [Input("env")]
        private InputList<string>? _env;

        /// <summary>
        /// Environment variables set before running this command.
        /// </summary>
        public InputList<string> Env
        {
            get => _env ?? (_env = new InputList<string>());
            set => _env = value;
        }

        /// <summary>
        /// Optional unique identifier for this command, used in wait_for to reference this command as a dependency.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the command, as presented on the command line, or if the command is packaged as a Docker container, as presented to `docker pull`.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("waitFor")]
        private InputList<string>? _waitFor;

        /// <summary>
        /// The ID(s) of the command(s) that this command depends on.
        /// </summary>
        public InputList<string> WaitFor
        {
            get => _waitFor ?? (_waitFor = new InputList<string>());
            set => _waitFor = value;
        }

        public CommandArgs()
        {
        }
    }
}
