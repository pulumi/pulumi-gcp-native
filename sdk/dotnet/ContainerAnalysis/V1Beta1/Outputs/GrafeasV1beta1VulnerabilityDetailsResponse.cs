// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.Outputs
{

    /// <summary>
    /// Details of a vulnerability Occurrence.
    /// </summary>
    [OutputType]
    public sealed class GrafeasV1beta1VulnerabilityDetailsResponse
    {
        /// <summary>
        /// The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
        /// </summary>
        public readonly double CvssScore;
        /// <summary>
        /// The cvss v2 score for the vulnerability.
        /// </summary>
        public readonly Outputs.CVSSResponse CvssV2;
        /// <summary>
        /// The cvss v3 score for the vulnerability.
        /// </summary>
        public readonly Outputs.CVSSResponse CvssV3;
        /// <summary>
        /// CVSS version used to populate cvss_score and severity.
        /// </summary>
        public readonly string CvssVersion;
        /// <summary>
        /// The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
        /// </summary>
        public readonly string EffectiveSeverity;
        /// <summary>
        /// Occurrence-specific extra details about the vulnerability.
        /// </summary>
        public readonly string ExtraDetails;
        /// <summary>
        /// A detailed description of this vulnerability.
        /// </summary>
        public readonly string LongDescription;
        /// <summary>
        /// The set of affected locations and their fixes (if available) within the associated resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.PackageIssueResponse> PackageIssue;
        /// <summary>
        /// URLs related to this vulnerability.
        /// </summary>
        public readonly ImmutableArray<Outputs.RelatedUrlResponse> RelatedUrls;
        /// <summary>
        /// The note provider assigned Severity of the vulnerability.
        /// </summary>
        public readonly string Severity;
        /// <summary>
        /// A one sentence description of this vulnerability.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The type of package; whether native or non native(ruby gems, node.js packages etc)
        /// </summary>
        public readonly string Type;
        public readonly Outputs.VexAssessmentResponse VexAssessment;

        [OutputConstructor]
        private GrafeasV1beta1VulnerabilityDetailsResponse(
            double cvssScore,

            Outputs.CVSSResponse cvssV2,

            Outputs.CVSSResponse cvssV3,

            string cvssVersion,

            string effectiveSeverity,

            string extraDetails,

            string longDescription,

            ImmutableArray<Outputs.PackageIssueResponse> packageIssue,

            ImmutableArray<Outputs.RelatedUrlResponse> relatedUrls,

            string severity,

            string shortDescription,

            string type,

            Outputs.VexAssessmentResponse vexAssessment)
        {
            CvssScore = cvssScore;
            CvssV2 = cvssV2;
            CvssV3 = cvssV3;
            CvssVersion = cvssVersion;
            EffectiveSeverity = effectiveSeverity;
            ExtraDetails = extraDetails;
            LongDescription = longDescription;
            PackageIssue = packageIssue;
            RelatedUrls = relatedUrls;
            Severity = severity;
            ShortDescription = shortDescription;
            Type = type;
            VexAssessment = vexAssessment;
        }
    }
}
