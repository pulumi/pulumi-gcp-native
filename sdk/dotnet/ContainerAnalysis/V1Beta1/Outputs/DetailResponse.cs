// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.Outputs
{

    /// <summary>
    /// Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2
    /// </summary>
    [OutputType]
    public sealed class DetailResponse
    {
        /// <summary>
        /// The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
        /// </summary>
        public readonly string CpeUri;
        /// <summary>
        /// A vendor-specific description of this note.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The fix for this specific package version.
        /// </summary>
        public readonly Outputs.VulnerabilityLocationResponse FixedLocation;
        /// <summary>
        /// Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
        /// </summary>
        public readonly bool IsObsolete;
        /// <summary>
        /// The max version of the package in which the vulnerability exists.
        /// </summary>
        public readonly Outputs.VersionResponse MaxAffectedVersion;
        /// <summary>
        /// The min version of the package in which the vulnerability exists.
        /// </summary>
        public readonly Outputs.VersionResponse MinAffectedVersion;
        /// <summary>
        /// The name of the package where the vulnerability was found.
        /// </summary>
        public readonly string Package;
        /// <summary>
        /// The type of package; whether native or non native(ruby gems, node.js packages etc).
        /// </summary>
        public readonly string PackageType;
        /// <summary>
        /// The severity (eg: distro assigned severity) for this vulnerability.
        /// </summary>
        public readonly string SeverityName;
        /// <summary>
        /// The source from which the information in this Detail was obtained.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
        /// </summary>
        public readonly string SourceUpdateTime;
        /// <summary>
        /// The name of the vendor of the product.
        /// </summary>
        public readonly string Vendor;

        [OutputConstructor]
        private DetailResponse(
            string cpeUri,

            string description,

            Outputs.VulnerabilityLocationResponse fixedLocation,

            bool isObsolete,

            Outputs.VersionResponse maxAffectedVersion,

            Outputs.VersionResponse minAffectedVersion,

            string package,

            string packageType,

            string severityName,

            string source,

            string sourceUpdateTime,

            string vendor)
        {
            CpeUri = cpeUri;
            Description = description;
            FixedLocation = fixedLocation;
            IsObsolete = isObsolete;
            MaxAffectedVersion = maxAffectedVersion;
            MinAffectedVersion = minAffectedVersion;
            Package = package;
            PackageType = packageType;
            SeverityName = severityName;
            Source = source;
            SourceUpdateTime = sourceUpdateTime;
            Vendor = vendor;
        }
    }
}
