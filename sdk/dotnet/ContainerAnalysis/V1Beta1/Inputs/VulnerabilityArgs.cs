// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.Inputs
{

    /// <summary>
    /// Vulnerability provides metadata about a security vulnerability in a Note.
    /// </summary>
    public sealed class VulnerabilityArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CVSS score for this vulnerability.
        /// </summary>
        [Input("cvssScore")]
        public Input<double>? CvssScore { get; set; }

        /// <summary>
        /// The full description of the CVSSv3.
        /// </summary>
        [Input("cvssV3")]
        public Input<Inputs.CVSSv3Args>? CvssV3 { get; set; }

        [Input("details")]
        private InputList<Inputs.DetailArgs>? _details;

        /// <summary>
        /// All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
        /// </summary>
        public InputList<Inputs.DetailArgs> Details
        {
            get => _details ?? (_details = new InputList<Inputs.DetailArgs>());
            set => _details = value;
        }

        /// <summary>
        /// Note provider assigned impact of the vulnerability.
        /// </summary>
        [Input("severity")]
        public Input<Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.VulnerabilitySeverity>? Severity { get; set; }

        /// <summary>
        /// The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
        /// </summary>
        [Input("sourceUpdateTime")]
        public Input<string>? SourceUpdateTime { get; set; }

        [Input("windowsDetails")]
        private InputList<Inputs.WindowsDetailArgs>? _windowsDetails;

        /// <summary>
        /// Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
        /// </summary>
        public InputList<Inputs.WindowsDetailArgs> WindowsDetails
        {
            get => _windowsDetails ?? (_windowsDetails = new InputList<Inputs.WindowsDetailArgs>());
            set => _windowsDetails = value;
        }

        public VulnerabilityArgs()
        {
        }
    }
}
