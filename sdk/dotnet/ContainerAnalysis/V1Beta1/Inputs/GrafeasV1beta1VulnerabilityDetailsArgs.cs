// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.Inputs
{

    /// <summary>
    /// Details of a vulnerability Occurrence.
    /// </summary>
    public sealed class GrafeasV1beta1VulnerabilityDetailsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
        /// </summary>
        [Input("effectiveSeverity")]
        public Input<Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity>? EffectiveSeverity { get; set; }

        [Input("packageIssue", required: true)]
        private InputList<Inputs.PackageIssueArgs>? _packageIssue;

        /// <summary>
        /// The set of affected locations and their fixes (if available) within the associated resource.
        /// </summary>
        public InputList<Inputs.PackageIssueArgs> PackageIssue
        {
            get => _packageIssue ?? (_packageIssue = new InputList<Inputs.PackageIssueArgs>());
            set => _packageIssue = value;
        }

        /// <summary>
        /// The type of package; whether native or non native(ruby gems, node.js packages etc)
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GrafeasV1beta1VulnerabilityDetailsArgs()
        {
        }
        public static new GrafeasV1beta1VulnerabilityDetailsArgs Empty => new GrafeasV1beta1VulnerabilityDetailsArgs();
    }
}
