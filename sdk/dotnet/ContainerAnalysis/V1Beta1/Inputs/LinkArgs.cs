// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Beta1.Inputs
{

    /// <summary>
    /// This corresponds to an in-toto link.
    /// </summary>
    public sealed class LinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step.
        /// </summary>
        [Input("byproducts")]
        public Input<Inputs.ByProductsArgs>? Byproducts { get; set; }

        [Input("command")]
        private InputList<string>? _command;

        /// <summary>
        /// This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren't directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: "command": ["git", "clone", "https://github.com/in-toto/demo-project.git"]
        /// </summary>
        public InputList<string> Command
        {
            get => _command ?? (_command = new InputList<string>());
            set => _command = value;
        }

        /// <summary>
        /// This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: "environment": { "custom_values": { "variables": "", "filesystem": "", "workdir": "", "": "..." } }
        /// </summary>
        [Input("environment")]
        public Input<Inputs.EnvironmentArgs>? Environment { get; set; }

        [Input("materials")]
        private InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs>? _materials;

        /// <summary>
        /// Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: "materials": [ { "resource_uri": "foo/bar", "hashes": { "sha256": "ebebf...", : } } ]
        /// </summary>
        public InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs> Materials
        {
            get => _materials ?? (_materials = new InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs>());
            set => _materials = value;
        }

        [Input("products")]
        private InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs>? _products;

        /// <summary>
        /// Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials.
        /// </summary>
        public InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs> Products
        {
            get => _products ?? (_products = new InputList<Inputs.GrafeasV1beta1IntotoArtifactArgs>());
            set => _products = value;
        }

        public LinkArgs()
        {
        }
        public static new LinkArgs Empty => new LinkArgs();
    }
}
