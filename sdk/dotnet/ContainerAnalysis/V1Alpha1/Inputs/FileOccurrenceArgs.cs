// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Alpha1.Inputs
{

    /// <summary>
    /// FileOccurrence represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/
    /// </summary>
    public sealed class FileOccurrenceArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributions")]
        private InputList<string>? _attributions;

        /// <summary>
        /// This field provides a place for the SPDX data creator to record, at the file level, acknowledgements that may be needed to be communicated in some contexts
        /// </summary>
        public InputList<string> Attributions
        {
            get => _attributions ?? (_attributions = new InputList<string>());
            set => _attributions = value;
        }

        /// <summary>
        /// This field provides a place for the SPDX file creator to record any general comments about the file
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("contributors")]
        private InputList<string>? _contributors;

        /// <summary>
        /// This field provides a place for the SPDX file creator to record file contributors
        /// </summary>
        public InputList<string> Contributors
        {
            get => _contributors ?? (_contributors = new InputList<string>());
            set => _contributors = value;
        }

        /// <summary>
        /// Identify the copyright holder of the file, as well as any dates present
        /// </summary>
        [Input("copyright")]
        public Input<string>? Copyright { get; set; }

        [Input("filesLicenseInfo")]
        private InputList<string>? _filesLicenseInfo;

        /// <summary>
        /// This field contains the license information actually found in the file, if any
        /// </summary>
        public InputList<string> FilesLicenseInfo
        {
            get => _filesLicenseInfo ?? (_filesLicenseInfo = new InputList<string>());
            set => _filesLicenseInfo = value;
        }

        /// <summary>
        /// Uniquely identify any element in an SPDX document which may be referenced by other elements
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// This field contains the license the SPDX file creator has concluded as governing the file or alternative values if the governing license cannot be determined
        /// </summary>
        [Input("licenseConcluded")]
        public Input<Inputs.LicenseArgs>? LicenseConcluded { get; set; }

        /// <summary>
        /// This field provides a place for the SPDX file creator to record license notices or other such related notices found in the file
        /// </summary>
        [Input("notice")]
        public Input<string>? Notice { get; set; }

        public FileOccurrenceArgs()
        {
        }
        public static new FileOccurrenceArgs Empty => new FileOccurrenceArgs();
    }
}
