// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Alpha1.Inputs
{

    /// <summary>
    /// Version contains structured information about the version of the package. For a discussion of this in Debian/Ubuntu: http://serverfault.com/questions/604541/debian-packages-version-convention For a discussion of this in Redhat/Fedora/Centos: http://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/
    /// </summary>
    public sealed class VersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Used to correct mistakes in the version numbering scheme.
        /// </summary>
        [Input("epoch")]
        public Input<int>? Epoch { get; set; }

        /// <summary>
        /// Whether this version is vulnerable, when defining the version bounds. For example, if the minimum version is 2.0, inclusive=true would say 2.0 is vulnerable, while inclusive=false would say it's not
        /// </summary>
        [Input("inclusive")]
        public Input<bool>? Inclusive { get; set; }

        /// <summary>
        /// Distinguish between sentinel MIN/MAX versions and normal versions. If kind is not NORMAL, then the other fields are ignored.
        /// </summary>
        [Input("kind")]
        public Input<Pulumi.GoogleNative.ContainerAnalysis.V1Alpha1.VersionKind>? Kind { get; set; }

        /// <summary>
        /// The main part of the version name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The iteration of the package build from the above version.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        public VersionArgs()
        {
        }
        public static new VersionArgs Empty => new VersionArgs();
    }
}
