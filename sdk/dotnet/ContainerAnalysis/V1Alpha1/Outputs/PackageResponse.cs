// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Alpha1.Outputs
{

    /// <summary>
    /// This represents a particular package that is distributed over various channels. e.g. glibc (aka libc6) is distributed by many, at various versions.
    /// </summary>
    [OutputType]
    public sealed class PackageResponse
    {
        /// <summary>
        /// The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.
        /// </summary>
        public readonly string CpeUri;
        /// <summary>
        /// The description of this package.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Hash value, typically a file digest, that allows unique identification a specific package.
        /// </summary>
        public readonly ImmutableArray<Outputs.DigestResponse> Digest;
        /// <summary>
        /// The various channels by which a package is distributed.
        /// </summary>
        public readonly ImmutableArray<Outputs.DistributionResponse> Distribution;
        /// <summary>
        /// Licenses that have been declared by the authors of the package.
        /// </summary>
        public readonly Outputs.LicenseResponse License;
        /// <summary>
        /// A freeform text denoting the maintainer of this package.
        /// </summary>
        public readonly string Maintainer;
        /// <summary>
        /// The name of the package.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
        /// </summary>
        public readonly string PackageType;
        /// <summary>
        /// The homepage for this package.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// The version of the package.
        /// </summary>
        public readonly Outputs.VersionResponse Version;

        [OutputConstructor]
        private PackageResponse(
            string architecture,

            string cpeUri,

            string description,

            ImmutableArray<Outputs.DigestResponse> digest,

            ImmutableArray<Outputs.DistributionResponse> distribution,

            Outputs.LicenseResponse license,

            string maintainer,

            string name,

            string packageType,

            string url,

            Outputs.VersionResponse version)
        {
            Architecture = architecture;
            CpeUri = cpeUri;
            Description = description;
            Digest = digest;
            Distribution = distribution;
            License = license;
            Maintainer = maintainer;
            Name = name;
            PackageType = packageType;
            Url = url;
            Version = version;
        }
    }
}
