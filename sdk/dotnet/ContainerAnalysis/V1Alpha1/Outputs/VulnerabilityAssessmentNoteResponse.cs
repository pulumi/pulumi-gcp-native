// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.ContainerAnalysis.V1Alpha1.Outputs
{

    /// <summary>
    /// A single VulnerabilityAssessmentNote represents one particular product's vulnerability assessment for one CVE. Multiple VulnerabilityAssessmentNotes together form a Vex statement. Please go/sds-vex-example for a sample Vex statement in the CSAF format.
    /// </summary>
    [OutputType]
    public sealed class VulnerabilityAssessmentNoteResponse
    {
        /// <summary>
        /// Represents a vulnerability assessment for the product.
        /// </summary>
        public readonly Outputs.AssessmentResponse Assessment;
        /// <summary>
        /// Identifies the language used by this document, corresponding to IETF BCP 47 / RFC 5646.
        /// </summary>
        public readonly string LanguageCode;
        /// <summary>
        /// A detailed description of this Vex.
        /// </summary>
        public readonly string LongDescription;
        /// <summary>
        /// The product affected by this vex.
        /// </summary>
        public readonly Outputs.ProductResponse Product;
        /// <summary>
        /// Publisher details of this Note.
        /// </summary>
        public readonly Outputs.PublisherResponse Publisher;
        /// <summary>
        /// A one sentence description of this Vex.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The title of the note. E.g. `Vex-Debian-11.4`
        /// </summary>
        public readonly string Title;

        [OutputConstructor]
        private VulnerabilityAssessmentNoteResponse(
            Outputs.AssessmentResponse assessment,

            string languageCode,

            string longDescription,

            Outputs.ProductResponse product,

            Outputs.PublisherResponse publisher,

            string shortDescription,

            string title)
        {
            Assessment = assessment;
            LanguageCode = languageCode;
            LongDescription = longDescription;
            Product = product;
            Publisher = publisher;
            ShortDescription = shortDescription;
            Title = title;
        }
    }
}
