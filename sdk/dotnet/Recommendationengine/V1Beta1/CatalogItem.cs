// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Recommendationengine.V1Beta1
{
    /// <summary>
    /// Creates a catalog item.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:recommendationengine/v1beta1:CatalogItem")]
    public partial class CatalogItem : Pulumi.CustomResource
    {
        [Output("catalogId")]
        public Output<string> CatalogId { get; private set; } = null!;

        /// <summary>
        /// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes &amp; Accessories" -&gt; "Shoes"] and ["Sports &amp; Fitness" -&gt; "Athletic Clothing" -&gt; "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes &amp; Accessories", "Shoes"]}, { "categories": ["Sports &amp; Fitness", "Athletic Clothing", "Shoes"] } ]
        /// </summary>
        [Output("categoryHierarchies")]
        public Output<ImmutableArray<Outputs.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyResponse>> CategoryHierarchies { get; private set; } = null!;

        /// <summary>
        /// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
        /// </summary>
        [Output("itemAttributes")]
        public Output<Outputs.GoogleCloudRecommendationengineV1beta1FeatureMapResponse> ItemAttributes { get; private set; } = null!;

        /// <summary>
        /// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
        /// </summary>
        [Output("itemGroupId")]
        public Output<string> ItemGroupId { get; private set; } = null!;

        /// <summary>
        /// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
        /// </summary>
        [Output("languageCode")]
        public Output<string> LanguageCode { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Optional. Metadata specific to retail products.
        /// </summary>
        [Output("productMetadata")]
        public Output<Outputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse> ProductMetadata { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;


        /// <summary>
        /// Create a CatalogItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CatalogItem(string name, CatalogItemArgs args, CustomResourceOptions? options = null)
            : base("google-native:recommendationengine/v1beta1:CatalogItem", name, args ?? new CatalogItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CatalogItem(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:recommendationengine/v1beta1:CatalogItem", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CatalogItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CatalogItem Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CatalogItem(name, id, options);
        }
    }

    public sealed class CatalogItemArgs : Pulumi.ResourceArgs
    {
        [Input("catalogId", required: true)]
        public Input<string> CatalogId { get; set; } = null!;

        [Input("categoryHierarchies", required: true)]
        private InputList<Inputs.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyArgs>? _categoryHierarchies;

        /// <summary>
        /// Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes &amp; Accessories" -&gt; "Shoes"] and ["Sports &amp; Fitness" -&gt; "Athletic Clothing" -&gt; "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes &amp; Accessories", "Shoes"]}, { "categories": ["Sports &amp; Fitness", "Athletic Clothing", "Shoes"] } ]
        /// </summary>
        public InputList<Inputs.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyArgs> CategoryHierarchies
        {
            get => _categoryHierarchies ?? (_categoryHierarchies = new InputList<Inputs.GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchyArgs>());
            set => _categoryHierarchies = value;
        }

        /// <summary>
        /// Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Optional. Highly encouraged. Extra catalog item attributes to be included in the recommendation model. For example, for retail products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the item attributes here.
        /// </summary>
        [Input("itemAttributes")]
        public Input<Inputs.GoogleCloudRecommendationengineV1beta1FeatureMapArgs>? ItemAttributes { get; set; }

        /// <summary>
        /// Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
        /// </summary>
        [Input("itemGroupId")]
        public Input<string>? ItemGroupId { get; set; }

        /// <summary>
        /// Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
        /// </summary>
        [Input("languageCode")]
        public Input<string>? LanguageCode { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. Metadata specific to retail products.
        /// </summary>
        [Input("productMetadata")]
        public Input<Inputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemArgs>? ProductMetadata { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public CatalogItemArgs()
        {
        }
    }
}
