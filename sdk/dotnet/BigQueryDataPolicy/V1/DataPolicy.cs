// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQueryDataPolicy.V1
{
    /// <summary>
    /// Creates a new data policy under a project with the given `dataPolicyId` (used as the display name), policy tag, and data policy type.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:bigquerydatapolicy/v1:DataPolicy")]
    public partial class DataPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// </summary>
        [Output("dataMaskingPolicy")]
        public Output<Outputs.DataMaskingPolicyResponse> DataMaskingPolicy { get; private set; } = null!;

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {data_policy_id} in part of the resource name.
        /// </summary>
        [Output("dataPolicyId")]
        public Output<string> DataPolicyId { get; private set; } = null!;

        /// <summary>
        /// Type of data policy.
        /// </summary>
        [Output("dataPolicyType")]
        public Output<string> DataPolicyType { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of this data policy, in the format of `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Policy tag resource name, in the format of `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
        /// </summary>
        [Output("policyTag")]
        public Output<string> PolicyTag { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a DataPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataPolicy(string name, DataPolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("google-native:bigquerydatapolicy/v1:DataPolicy", name, args ?? new DataPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:bigquerydatapolicy/v1:DataPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataPolicy(name, id, options);
        }
    }

    public sealed class DataPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// </summary>
        [Input("dataMaskingPolicy")]
        public Input<Inputs.DataMaskingPolicyArgs>? DataMaskingPolicy { get; set; }

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {data_policy_id} in part of the resource name.
        /// </summary>
        [Input("dataPolicyId")]
        public Input<string>? DataPolicyId { get; set; }

        /// <summary>
        /// Type of data policy.
        /// </summary>
        [Input("dataPolicyType")]
        public Input<Pulumi.GoogleNative.BigQueryDataPolicy.V1.DataPolicyDataPolicyType>? DataPolicyType { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Policy tag resource name, in the format of `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
        /// </summary>
        [Input("policyTag")]
        public Input<string>? PolicyTag { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public DataPolicyArgs()
        {
        }
        public static new DataPolicyArgs Empty => new DataPolicyArgs();
    }
}
