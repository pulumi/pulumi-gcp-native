// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.BigQueryDataPolicy.V1
{
    public static class GetDataPolicy
    {
        /// <summary>
        /// Gets the data policy specified by its resource name.
        /// </summary>
        public static Task<GetDataPolicyResult> InvokeAsync(GetDataPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataPolicyResult>("google-native:bigquerydatapolicy/v1:getDataPolicy", args ?? new GetDataPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the data policy specified by its resource name.
        /// </summary>
        public static Output<GetDataPolicyResult> Invoke(GetDataPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataPolicyResult>("google-native:bigquerydatapolicy/v1:getDataPolicy", args ?? new GetDataPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataPolicyId", required: true)]
        public string DataPolicyId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetDataPolicyArgs()
        {
        }
        public static new GetDataPolicyArgs Empty => new GetDataPolicyArgs();
    }

    public sealed class GetDataPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dataPolicyId", required: true)]
        public Input<string> DataPolicyId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDataPolicyInvokeArgs()
        {
        }
        public static new GetDataPolicyInvokeArgs Empty => new GetDataPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataPolicyResult
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// </summary>
        public readonly Outputs.DataMaskingPolicyResponse DataMaskingPolicy;
        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {data_policy_id} in part of the resource name.
        /// </summary>
        public readonly string DataPolicyId;
        /// <summary>
        /// Type of data policy.
        /// </summary>
        public readonly string DataPolicyType;
        /// <summary>
        /// Resource name of this data policy, in the format of `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Policy tag resource name, in the format of `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
        /// </summary>
        public readonly string PolicyTag;

        [OutputConstructor]
        private GetDataPolicyResult(
            Outputs.DataMaskingPolicyResponse dataMaskingPolicy,

            string dataPolicyId,

            string dataPolicyType,

            string name,

            string policyTag)
        {
            DataMaskingPolicy = dataMaskingPolicy;
            DataPolicyId = dataPolicyId;
            DataPolicyType = dataPolicyType;
            Name = name;
            PolicyTag = policyTag;
        }
    }
}
