// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1
{
    public static class GetCustomConnectorVersion
    {
        /// <summary>
        /// Gets details of a single CustomConnectorVersion.
        /// </summary>
        public static Task<GetCustomConnectorVersionResult> InvokeAsync(GetCustomConnectorVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomConnectorVersionResult>("google-native:connectors/v1:getCustomConnectorVersion", args ?? new GetCustomConnectorVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single CustomConnectorVersion.
        /// </summary>
        public static Output<GetCustomConnectorVersionResult> Invoke(GetCustomConnectorVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomConnectorVersionResult>("google-native:connectors/v1:getCustomConnectorVersion", args ?? new GetCustomConnectorVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomConnectorVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConnectorId", required: true)]
        public string CustomConnectorId { get; set; } = null!;

        [Input("customConnectorVersionId", required: true)]
        public string CustomConnectorVersionId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCustomConnectorVersionArgs()
        {
        }
        public static new GetCustomConnectorVersionArgs Empty => new GetCustomConnectorVersionArgs();
    }

    public sealed class GetCustomConnectorVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConnectorId", required: true)]
        public Input<string> CustomConnectorId { get; set; } = null!;

        [Input("customConnectorVersionId", required: true)]
        public Input<string> CustomConnectorVersionId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCustomConnectorVersionInvokeArgs()
        {
        }
        public static new GetCustomConnectorVersionInvokeArgs Empty => new GetCustomConnectorVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomConnectorVersionResult
    {
        /// <summary>
        /// Configuration for establishing the authentication to the connector destination.
        /// </summary>
        public readonly Outputs.AuthConfigResponse AuthConfig;
        /// <summary>
        /// Created time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Configuration of the customConnector's destination.
        /// </summary>
        public readonly Outputs.DestinationConfigResponse DestinationConfig;
        /// <summary>
        /// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
        /// </summary>
        public readonly bool EnableBackendDestinationConfig;
        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Optional. Location of the custom connector spec.
        /// </summary>
        public readonly string SpecLocation;
        /// <summary>
        /// Type of the customConnector.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Updated time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCustomConnectorVersionResult(
            Outputs.AuthConfigResponse authConfig,

            string createTime,

            Outputs.DestinationConfigResponse destinationConfig,

            bool enableBackendDestinationConfig,

            ImmutableDictionary<string, string> labels,

            string name,

            string specLocation,

            string type,

            string updateTime)
        {
            AuthConfig = authConfig;
            CreateTime = createTime;
            DestinationConfig = destinationConfig;
            EnableBackendDestinationConfig = enableBackendDestinationConfig;
            Labels = labels;
            Name = name;
            SpecLocation = specLocation;
            Type = type;
            UpdateTime = updateTime;
        }
    }
}
