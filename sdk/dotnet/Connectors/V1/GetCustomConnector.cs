// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1
{
    public static class GetCustomConnector
    {
        /// <summary>
        /// Gets details of a single CustomConnector.
        /// </summary>
        public static Task<GetCustomConnectorResult> InvokeAsync(GetCustomConnectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomConnectorResult>("google-native:connectors/v1:getCustomConnector", args ?? new GetCustomConnectorArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single CustomConnector.
        /// </summary>
        public static Output<GetCustomConnectorResult> Invoke(GetCustomConnectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomConnectorResult>("google-native:connectors/v1:getCustomConnector", args ?? new GetCustomConnectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomConnectorArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConnectorId", required: true)]
        public string CustomConnectorId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetCustomConnectorArgs()
        {
        }
        public static new GetCustomConnectorArgs Empty => new GetCustomConnectorArgs();
    }

    public sealed class GetCustomConnectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customConnectorId", required: true)]
        public Input<string> CustomConnectorId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCustomConnectorInvokeArgs()
        {
        }
        public static new GetCustomConnectorInvokeArgs Empty => new GetCustomConnectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomConnectorResult
    {
        /// <summary>
        /// Created time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Type of the custom connector.
        /// </summary>
        public readonly string CustomConnectorType;
        /// <summary>
        /// Optional. Description of the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Optional. Display name.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Launch stage.
        /// </summary>
        public readonly string LaunchStage;
        /// <summary>
        /// Optional. Logo of the resource.
        /// </summary>
        public readonly string Logo;
        /// <summary>
        /// Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Updated time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCustomConnectorResult(
            string createTime,

            string customConnectorType,

            string description,

            string displayName,

            ImmutableDictionary<string, string> labels,

            string launchStage,

            string logo,

            string name,

            string updateTime)
        {
            CreateTime = createTime;
            CustomConnectorType = customConnectorType;
            Description = description;
            DisplayName = displayName;
            Labels = labels;
            LaunchStage = launchStage;
            Logo = logo;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
