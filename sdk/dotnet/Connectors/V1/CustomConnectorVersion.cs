// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1
{
    /// <summary>
    /// Creates a new CustomConnectorVersion in a given project and location.
    /// Auto-naming is currently not supported for this resource.
    /// </summary>
    [GoogleNativeResourceType("google-native:connectors/v1:CustomConnectorVersion")]
    public partial class CustomConnectorVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration for establishing the authentication to the connector destination.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.AuthConfigResponse> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// Created time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("customConnectorId")]
        public Output<string> CustomConnectorId { get; private set; } = null!;

        /// <summary>
        /// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
        /// </summary>
        [Output("customConnectorVersionId")]
        public Output<string> CustomConnectorVersionId { get; private set; } = null!;

        /// <summary>
        /// Configuration of the customConnector's destination.
        /// </summary>
        [Output("destinationConfig")]
        public Output<Outputs.DestinationConfigResponse> DestinationConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
        /// </summary>
        [Output("enableBackendDestinationConfig")]
        public Output<bool> EnableBackendDestinationConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Service account needed for runtime plane to access Custom Connector secrets.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// Optional. Location of the custom connector spec.
        /// </summary>
        [Output("specLocation")]
        public Output<string> SpecLocation { get; private set; } = null!;

        /// <summary>
        /// Updated time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a CustomConnectorVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomConnectorVersion(string name, CustomConnectorVersionArgs args, CustomResourceOptions? options = null)
            : base("google-native:connectors/v1:CustomConnectorVersion", name, args ?? new CustomConnectorVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomConnectorVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:connectors/v1:CustomConnectorVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "customConnectorId",
                    "customConnectorVersionId",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomConnectorVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomConnectorVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CustomConnectorVersion(name, id, options);
        }
    }

    public sealed class CustomConnectorVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for establishing the authentication to the connector destination.
        /// </summary>
        [Input("authConfig", required: true)]
        public Input<Inputs.AuthConfigArgs> AuthConfig { get; set; } = null!;

        [Input("customConnectorId", required: true)]
        public Input<string> CustomConnectorId { get; set; } = null!;

        /// <summary>
        /// Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
        /// </summary>
        [Input("customConnectorVersionId", required: true)]
        public Input<string> CustomConnectorVersionId { get; set; } = null!;

        /// <summary>
        /// Configuration of the customConnector's destination.
        /// </summary>
        [Input("destinationConfig", required: true)]
        public Input<Inputs.DestinationConfigArgs> DestinationConfig { get; set; } = null!;

        /// <summary>
        /// Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
        /// </summary>
        [Input("enableBackendDestinationConfig")]
        public Input<bool>? EnableBackendDestinationConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Service account needed for runtime plane to access Custom Connector secrets.
        /// </summary>
        [Input("serviceAccount", required: true)]
        public Input<string> ServiceAccount { get; set; } = null!;

        /// <summary>
        /// Optional. Location of the custom connector spec.
        /// </summary>
        [Input("specLocation")]
        public Input<string>? SpecLocation { get; set; }

        public CustomConnectorVersionArgs()
        {
        }
        public static new CustomConnectorVersionArgs Empty => new CustomConnectorVersionArgs();
    }
}
