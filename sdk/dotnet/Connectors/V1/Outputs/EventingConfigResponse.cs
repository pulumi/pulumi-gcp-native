// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1.Outputs
{

    /// <summary>
    /// Eventing Configuration of a connection
    /// </summary>
    [OutputType]
    public sealed class EventingConfigResponse
    {
        /// <summary>
        /// Additional eventing related field values
        /// </summary>
        public readonly ImmutableArray<Outputs.ConfigVariableResponse> AdditionalVariables;
        /// <summary>
        /// Auth details for the webhook adapter.
        /// </summary>
        public readonly Outputs.AuthConfigResponse AuthConfig;
        /// <summary>
        /// Optional. Dead letter configuration for eventing of a connection.
        /// </summary>
        public readonly Outputs.DeadLetterConfigResponse DeadLetterConfig;
        /// <summary>
        /// Enrichment Enabled.
        /// </summary>
        public readonly bool EnrichmentEnabled;
        /// <summary>
        /// Optional. Ingress endpoint of the event listener. This is used only when private connectivity is enabled.
        /// </summary>
        public readonly string EventsListenerIngressEndpoint;
        /// <summary>
        /// Optional. Auth details for the event listener.
        /// </summary>
        public readonly Outputs.AuthConfigResponse ListenerAuthConfig;
        /// <summary>
        /// Optional. Private Connectivity Enabled.
        /// </summary>
        public readonly bool PrivateConnectivityEnabled;
        /// <summary>
        /// Optional. Proxy for Eventing auto-registration.
        /// </summary>
        public readonly Outputs.DestinationConfigResponse ProxyDestinationConfig;
        /// <summary>
        /// Registration endpoint for auto registration.
        /// </summary>
        public readonly Outputs.DestinationConfigResponse RegistrationDestinationConfig;

        [OutputConstructor]
        private EventingConfigResponse(
            ImmutableArray<Outputs.ConfigVariableResponse> additionalVariables,

            Outputs.AuthConfigResponse authConfig,

            Outputs.DeadLetterConfigResponse deadLetterConfig,

            bool enrichmentEnabled,

            string eventsListenerIngressEndpoint,

            Outputs.AuthConfigResponse listenerAuthConfig,

            bool privateConnectivityEnabled,

            Outputs.DestinationConfigResponse proxyDestinationConfig,

            Outputs.DestinationConfigResponse registrationDestinationConfig)
        {
            AdditionalVariables = additionalVariables;
            AuthConfig = authConfig;
            DeadLetterConfig = deadLetterConfig;
            EnrichmentEnabled = enrichmentEnabled;
            EventsListenerIngressEndpoint = eventsListenerIngressEndpoint;
            ListenerAuthConfig = listenerAuthConfig;
            PrivateConnectivityEnabled = privateConnectivityEnabled;
            ProxyDestinationConfig = proxyDestinationConfig;
            RegistrationDestinationConfig = registrationDestinationConfig;
        }
    }
}
