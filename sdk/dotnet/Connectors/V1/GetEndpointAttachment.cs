// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1
{
    public static class GetEndpointAttachment
    {
        /// <summary>
        /// Gets details of a single EndpointAttachment.
        /// </summary>
        public static Task<GetEndpointAttachmentResult> InvokeAsync(GetEndpointAttachmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEndpointAttachmentResult>("google-native:connectors/v1:getEndpointAttachment", args ?? new GetEndpointAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details of a single EndpointAttachment.
        /// </summary>
        public static Output<GetEndpointAttachmentResult> Invoke(GetEndpointAttachmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEndpointAttachmentResult>("google-native:connectors/v1:getEndpointAttachment", args ?? new GetEndpointAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointAttachmentArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpointAttachmentId", required: true)]
        public string EndpointAttachmentId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetEndpointAttachmentArgs()
        {
        }
        public static new GetEndpointAttachmentArgs Empty => new GetEndpointAttachmentArgs();
    }

    public sealed class GetEndpointAttachmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpointAttachmentId", required: true)]
        public Input<string> EndpointAttachmentId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetEndpointAttachmentInvokeArgs()
        {
        }
        public static new GetEndpointAttachmentInvokeArgs Empty => new GetEndpointAttachmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetEndpointAttachmentResult
    {
        /// <summary>
        /// Created time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional. Description of the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The Private Service Connect connection endpoint ip
        /// </summary>
        public readonly string EndpointIp;
        /// <summary>
        /// Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The path of the service attachment
        /// </summary>
        public readonly string ServiceAttachment;
        /// <summary>
        /// Updated time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetEndpointAttachmentResult(
            string createTime,

            string description,

            string endpointIp,

            ImmutableDictionary<string, string> labels,

            string name,

            string serviceAttachment,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            EndpointIp = endpointIp;
            Labels = labels;
            Name = name;
            ServiceAttachment = serviceAttachment;
            UpdateTime = updateTime;
        }
    }
}
