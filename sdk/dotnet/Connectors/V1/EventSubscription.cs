// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1
{
    /// <summary>
    /// Creates a new EventSubscription in a given project,location and connection.
    /// </summary>
    [GoogleNativeResourceType("google-native:connectors/v1:EventSubscription")]
    public partial class EventSubscription : global::Pulumi.CustomResource
    {
        [Output("connectionId")]
        public Output<string> ConnectionId { get; private set; } = null!;

        /// <summary>
        /// Created time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. The destination to hit when we receive an event
        /// </summary>
        [Output("destinations")]
        public Output<Outputs.EventSubscriptionDestinationResponse> Destinations { get; private set; } = null!;

        /// <summary>
        /// Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent resource.
        /// </summary>
        [Output("eventSubscriptionId")]
        public Output<string> EventSubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Optional. Event type id of the event of current EventSubscription.
        /// </summary>
        [Output("eventTypeId")]
        public Output<string> EventTypeId { get; private set; } = null!;

        /// <summary>
        /// Optional. JMS is the source for the event listener.
        /// </summary>
        [Output("jms")]
        public Output<Outputs.JMSResponse> Jms { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Optional. Status indicates the status of the event subscription resource
        /// </summary>
        [Output("status")]
        public Output<Outputs.EventSubscriptionStatusResponse> Status { get; private set; } = null!;

        /// <summary>
        /// Optional. name of the Subscriber for the current EventSubscription.
        /// </summary>
        [Output("subscriber")]
        public Output<string> Subscriber { get; private set; } = null!;

        /// <summary>
        /// Optional. Link for Subscriber of the current EventSubscription.
        /// </summary>
        [Output("subscriberLink")]
        public Output<string> SubscriberLink { get; private set; } = null!;

        /// <summary>
        /// Updated time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a EventSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventSubscription(string name, EventSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("google-native:connectors/v1:EventSubscription", name, args ?? new EventSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventSubscription(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:connectors/v1:EventSubscription", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "connectionId",
                    "eventSubscriptionId",
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventSubscription Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new EventSubscription(name, id, options);
        }
    }

    public sealed class EventSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// Optional. The destination to hit when we receive an event
        /// </summary>
        [Input("destinations")]
        public Input<Inputs.EventSubscriptionDestinationArgs>? Destinations { get; set; }

        /// <summary>
        /// Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent resource.
        /// </summary>
        [Input("eventSubscriptionId", required: true)]
        public Input<string> EventSubscriptionId { get; set; } = null!;

        /// <summary>
        /// Optional. Event type id of the event of current EventSubscription.
        /// </summary>
        [Input("eventTypeId")]
        public Input<string>? EventTypeId { get; set; }

        /// <summary>
        /// Optional. JMS is the source for the event listener.
        /// </summary>
        [Input("jms")]
        public Input<Inputs.JMSArgs>? Jms { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. name of the Subscriber for the current EventSubscription.
        /// </summary>
        [Input("subscriber")]
        public Input<string>? Subscriber { get; set; }

        /// <summary>
        /// Optional. Link for Subscriber of the current EventSubscription.
        /// </summary>
        [Input("subscriberLink")]
        public Input<string>? SubscriberLink { get; set; }

        public EventSubscriptionArgs()
        {
        }
        public static new EventSubscriptionArgs Empty => new EventSubscriptionArgs();
    }
}
