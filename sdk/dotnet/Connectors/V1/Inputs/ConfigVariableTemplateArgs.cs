// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1.Inputs
{

    /// <summary>
    /// ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.
    /// </summary>
    public sealed class ConfigVariableTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authorization code link options. To be populated if `ValueType` is `AUTHORIZATION_CODE`
        /// </summary>
        [Input("authorizationCodeLink")]
        public Input<Inputs.AuthorizationCodeLinkArgs>? AuthorizationCodeLink { get; set; }

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of the parameter.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enumOptions")]
        private InputList<Inputs.EnumOptionArgs>? _enumOptions;

        /// <summary>
        /// Enum options. To be populated if `ValueType` is `ENUM`
        /// </summary>
        public InputList<Inputs.EnumOptionArgs> EnumOptions
        {
            get => _enumOptions ?? (_enumOptions = new InputList<Inputs.EnumOptionArgs>());
            set => _enumOptions = value;
        }

        /// <summary>
        /// Optional. enum source denotes the source of api to fill the enum options
        /// </summary>
        [Input("enumSource")]
        public Input<Pulumi.GoogleNative.Connectors.V1.ConfigVariableTemplateEnumSource>? EnumSource { get; set; }

        /// <summary>
        /// Indicates if current template is part of advanced settings
        /// </summary>
        [Input("isAdvanced")]
        public Input<bool>? IsAdvanced { get; set; }

        /// <summary>
        /// Key of the config variable.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Optional. Location Tyep denotes where this value should be sent in BYOC connections.
        /// </summary>
        [Input("locationType")]
        public Input<Pulumi.GoogleNative.Connectors.V1.ConfigVariableTemplateLocationType>? LocationType { get; set; }

        /// <summary>
        /// Flag represents that this `ConfigVariable` must be provided for a connection.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// Condition under which a field would be required. The condition can be represented in the form of a logical expression.
        /// </summary>
        [Input("requiredCondition")]
        public Input<Inputs.LogicalExpressionArgs>? RequiredCondition { get; set; }

        /// <summary>
        /// Role grant configuration for the config variable.
        /// </summary>
        [Input("roleGrant")]
        public Input<Inputs.RoleGrantArgs>? RoleGrant { get; set; }

        /// <summary>
        /// State of the config variable.
        /// </summary>
        [Input("state")]
        public Input<Pulumi.GoogleNative.Connectors.V1.ConfigVariableTemplateState>? State { get; set; }

        /// <summary>
        /// Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`.
        /// </summary>
        [Input("validationRegex")]
        public Input<string>? ValidationRegex { get; set; }

        /// <summary>
        /// Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.
        /// </summary>
        [Input("valueType")]
        public Input<Pulumi.GoogleNative.Connectors.V1.ConfigVariableTemplateValueType>? ValueType { get; set; }

        public ConfigVariableTemplateArgs()
        {
        }
        public static new ConfigVariableTemplateArgs Empty => new ConfigVariableTemplateArgs();
    }
}
