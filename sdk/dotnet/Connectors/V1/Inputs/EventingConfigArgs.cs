// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Connectors.V1.Inputs
{

    /// <summary>
    /// Eventing Configuration of a connection
    /// </summary>
    public sealed class EventingConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalVariables")]
        private InputList<Inputs.ConfigVariableArgs>? _additionalVariables;

        /// <summary>
        /// Additional eventing related field values
        /// </summary>
        public InputList<Inputs.ConfigVariableArgs> AdditionalVariables
        {
            get => _additionalVariables ?? (_additionalVariables = new InputList<Inputs.ConfigVariableArgs>());
            set => _additionalVariables = value;
        }

        /// <summary>
        /// Auth details for the webhook adapter.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.AuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// Enrichment Enabled.
        /// </summary>
        [Input("enrichmentEnabled")]
        public Input<bool>? EnrichmentEnabled { get; set; }

        /// <summary>
        /// Optional. Ingress endpoint of the event listener. This is used only when private connectivity is enabled.
        /// </summary>
        [Input("eventsListenerIngressEndpoint")]
        public Input<string>? EventsListenerIngressEndpoint { get; set; }

        /// <summary>
        /// Optional. Auth details for the event listener.
        /// </summary>
        [Input("listenerAuthConfig")]
        public Input<Inputs.AuthConfigArgs>? ListenerAuthConfig { get; set; }

        /// <summary>
        /// Optional. Private Connectivity Enabled.
        /// </summary>
        [Input("privateConnectivityEnabled")]
        public Input<bool>? PrivateConnectivityEnabled { get; set; }

        /// <summary>
        /// Registration endpoint for auto registration.
        /// </summary>
        [Input("registrationDestinationConfig")]
        public Input<Inputs.DestinationConfigArgs>? RegistrationDestinationConfig { get; set; }

        public EventingConfigArgs()
        {
        }
        public static new EventingConfigArgs Empty => new EventingConfigArgs();
    }
}
