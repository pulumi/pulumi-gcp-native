// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contactcenterinsights.V1.Outputs
{

    /// <summary>
    /// An annotation that was generated during the customer and agent interaction.
    /// </summary>
    [OutputType]
    public sealed class GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse
    {
        /// <summary>
        /// The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
        /// </summary>
        public readonly string AnnotationId;
        /// <summary>
        /// The feedback that the customer has about the answer in `data`.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse AnswerFeedback;
        /// <summary>
        /// Agent Assist Article Suggestion data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse ArticleSuggestion;
        /// <summary>
        /// Conversation summarization suggestion data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse ConversationSummarizationSuggestion;
        /// <summary>
        /// The time at which this annotation was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Dialogflow interaction data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse DialogflowInteraction;
        /// <summary>
        /// The boundary in the conversation where the annotation ends, inclusive.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse EndBoundary;
        /// <summary>
        /// Agent Assist FAQ answer data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse FaqAnswer;
        /// <summary>
        /// Agent Assist Smart Compose suggestion data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse SmartComposeSuggestion;
        /// <summary>
        /// Agent Assist Smart Reply data.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1SmartReplyDataResponse SmartReply;
        /// <summary>
        /// The boundary in the conversation where the annotation starts, inclusive.
        /// </summary>
        public readonly Outputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse StartBoundary;

        [OutputConstructor]
        private GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse(
            string annotationId,

            Outputs.GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse answerFeedback,

            Outputs.GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse articleSuggestion,

            Outputs.GoogleCloudContactcenterinsightsV1ConversationSummarizationSuggestionDataResponse conversationSummarizationSuggestion,

            string createTime,

            Outputs.GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse dialogflowInteraction,

            Outputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse endBoundary,

            Outputs.GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse faqAnswer,

            Outputs.GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse smartComposeSuggestion,

            Outputs.GoogleCloudContactcenterinsightsV1SmartReplyDataResponse smartReply,

            Outputs.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse startBoundary)
        {
            AnnotationId = annotationId;
            AnswerFeedback = answerFeedback;
            ArticleSuggestion = articleSuggestion;
            ConversationSummarizationSuggestion = conversationSummarizationSuggestion;
            CreateTime = createTime;
            DialogflowInteraction = dialogflowInteraction;
            EndBoundary = endBoundary;
            FaqAnswer = faqAnswer;
            SmartComposeSuggestion = smartComposeSuggestion;
            SmartReply = smartReply;
            StartBoundary = startBoundary;
        }
    }
}
