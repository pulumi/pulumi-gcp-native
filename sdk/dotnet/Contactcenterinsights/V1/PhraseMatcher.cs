// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contactcenterinsights.V1
{
    /// <summary>
    /// Creates a phrase matcher.
    /// </summary>
    [GoogleNativeResourceType("google-native:contactcenterinsights/v1:PhraseMatcher")]
    public partial class PhraseMatcher : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The most recent time at which the activation status was updated.
        /// </summary>
        [Output("activationUpdateTime")]
        public Output<string> ActivationUpdateTime { get; private set; } = null!;

        /// <summary>
        /// Applies the phrase matcher only when it is active.
        /// </summary>
        [Output("active")]
        public Output<bool> Active { get; private set; } = null!;

        /// <summary>
        /// The human-readable name of the phrase matcher.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of phase match rule groups that are included in this matcher.
        /// </summary>
        [Output("phraseMatchRuleGroups")]
        public Output<ImmutableArray<Outputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse>> PhraseMatchRuleGroups { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The timestamp of when the revision was created. It is also the create time when a new matcher is added.
        /// </summary>
        [Output("revisionCreateTime")]
        public Output<string> RevisionCreateTime { get; private set; } = null!;

        /// <summary>
        /// Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567
        /// </summary>
        [Output("revisionId")]
        public Output<string> RevisionId { get; private set; } = null!;

        /// <summary>
        /// The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
        /// </summary>
        [Output("roleMatch")]
        public Output<string> RoleMatch { get; private set; } = null!;

        /// <summary>
        /// The type of this phrase matcher.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The most recent time at which the phrase matcher was updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
        /// </summary>
        [Output("versionTag")]
        public Output<string> VersionTag { get; private set; } = null!;


        /// <summary>
        /// Create a PhraseMatcher resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PhraseMatcher(string name, PhraseMatcherArgs args, CustomResourceOptions? options = null)
            : base("google-native:contactcenterinsights/v1:PhraseMatcher", name, args ?? new PhraseMatcherArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PhraseMatcher(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("google-native:contactcenterinsights/v1:PhraseMatcher", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "location",
                    "project",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PhraseMatcher resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PhraseMatcher Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PhraseMatcher(name, id, options);
        }
    }

    public sealed class PhraseMatcherArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Applies the phrase matcher only when it is active.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The human-readable name of the phrase matcher.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("phraseMatchRuleGroups")]
        private InputList<Inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs>? _phraseMatchRuleGroups;

        /// <summary>
        /// A list of phase match rule groups that are included in this matcher.
        /// </summary>
        public InputList<Inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs> PhraseMatchRuleGroups
        {
            get => _phraseMatchRuleGroups ?? (_phraseMatchRuleGroups = new InputList<Inputs.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupArgs>());
            set => _phraseMatchRuleGroups = value;
        }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
        /// </summary>
        [Input("roleMatch")]
        public Input<Pulumi.GoogleNative.Contactcenterinsights.V1.PhraseMatcherRoleMatch>? RoleMatch { get; set; }

        /// <summary>
        /// The type of this phrase matcher.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.GoogleNative.Contactcenterinsights.V1.PhraseMatcherType> Type { get; set; } = null!;

        /// <summary>
        /// The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
        /// </summary>
        [Input("versionTag")]
        public Input<string>? VersionTag { get; set; }

        public PhraseMatcherArgs()
        {
        }
        public static new PhraseMatcherArgs Empty => new PhraseMatcherArgs();
    }
}
