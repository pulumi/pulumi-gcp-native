// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.Contactcenterinsights.V1.Inputs
{

    /// <summary>
    /// Selector of all available annotators and phrase matchers to run.
    /// </summary>
    public sealed class GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("issueModels")]
        private InputList<string>? _issueModels;

        /// <summary>
        /// The issue model to run. If not provided, the most recently deployed topic model will be used. The provided issue model will only be used for inference if the issue model is deployed and if run_issue_model_annotator is set to true. If more than one issue model is provided, only the first provided issue model will be used for inference.
        /// </summary>
        public InputList<string> IssueModels
        {
            get => _issueModels ?? (_issueModels = new InputList<string>());
            set => _issueModels = value;
        }

        [Input("phraseMatchers")]
        private InputList<string>? _phraseMatchers;

        /// <summary>
        /// The list of phrase matchers to run. If not provided, all active phrase matchers will be used. If inactive phrase matchers are provided, they will not be used. Phrase matchers will be run only if run_phrase_matcher_annotator is set to true. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
        /// </summary>
        public InputList<string> PhraseMatchers
        {
            get => _phraseMatchers ?? (_phraseMatchers = new InputList<string>());
            set => _phraseMatchers = value;
        }

        /// <summary>
        /// Whether to run the entity annotator.
        /// </summary>
        [Input("runEntityAnnotator")]
        public Input<bool>? RunEntityAnnotator { get; set; }

        /// <summary>
        /// Whether to run the intent annotator.
        /// </summary>
        [Input("runIntentAnnotator")]
        public Input<bool>? RunIntentAnnotator { get; set; }

        /// <summary>
        /// Whether to run the interruption annotator.
        /// </summary>
        [Input("runInterruptionAnnotator")]
        public Input<bool>? RunInterruptionAnnotator { get; set; }

        /// <summary>
        /// Whether to run the issue model annotator. A model should have already been deployed for this to take effect.
        /// </summary>
        [Input("runIssueModelAnnotator")]
        public Input<bool>? RunIssueModelAnnotator { get; set; }

        /// <summary>
        /// Whether to run the active phrase matcher annotator(s).
        /// </summary>
        [Input("runPhraseMatcherAnnotator")]
        public Input<bool>? RunPhraseMatcherAnnotator { get; set; }

        /// <summary>
        /// Whether to run the sentiment annotator.
        /// </summary>
        [Input("runSentimentAnnotator")]
        public Input<bool>? RunSentimentAnnotator { get; set; }

        /// <summary>
        /// Whether to run the silence annotator.
        /// </summary>
        [Input("runSilenceAnnotator")]
        public Input<bool>? RunSilenceAnnotator { get; set; }

        public GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs()
        {
        }
        public static new GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs Empty => new GoogleCloudContactcenterinsightsV1AnnotatorSelectorArgs();
    }
}
