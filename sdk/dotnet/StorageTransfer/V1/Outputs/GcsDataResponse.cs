// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.GoogleNative.StorageTransfer.V1.Outputs
{

    /// <summary>
    /// In a GcsData resource, an object's name is the Cloud Storage object's name and its "last modification time" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.
    /// </summary>
    [OutputType]
    public sealed class GcsDataResponse
    {
        /// <summary>
        /// Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// Preview. Enables the transfer of managed folders between Cloud Storage buckets. Set this option on the gcs_data_source. If set to true: - Managed folders in the source bucket are transferred to the destination bucket. - Managed folders in the destination bucket are overwritten. Other OVERWRITE options are not supported. See [Transfer Cloud Storage managed folders](/storage-transfer/docs/managed-folders).
        /// </summary>
        public readonly bool ManagedFolderTransferEnabled;
        /// <summary>
        /// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames).
        /// </summary>
        public readonly string Path;

        [OutputConstructor]
        private GcsDataResponse(
            string bucketName,

            bool managedFolderTransferEnabled,

            string path)
        {
            BucketName = bucketName;
            ManagedFolderTransferEnabled = managedFolderTransferEnabled;
            Path = path;
        }
    }
}
