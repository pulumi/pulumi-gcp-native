// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new `LbRouteExtension` resource in a given project and location.
 */
export class LbRouteExtension extends pulumi.CustomResource {
    /**
     * Get an existing LbRouteExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LbRouteExtension {
        return new LbRouteExtension(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networkservices/v1beta1:LbRouteExtension';

    /**
     * Returns true if the given object is an instance of LbRouteExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbRouteExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbRouteExtension.__pulumiType;
    }

    /**
     * The timestamp when the resource was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. A human-readable description of the resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     */
    public readonly extensionChains!: pulumi.Output<outputs.networkservices.v1beta1.ExtensionChainResponse[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LbRouteExtension` resource per forwarding rule.
     */
    public readonly forwardingRules!: pulumi.Output<string[]>;
    /**
     * Optional. Set of labels associated with the `LbRouteExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Required. User-provided ID of the `LbRouteExtension` resource to be created.
     */
    public readonly lbRouteExtensionId!: pulumi.Output<string>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
     */
    public readonly loadBalancingScheme!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of the `LbRouteExtension` resource in the following format: `projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}`.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * The timestamp when the resource was updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a LbRouteExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbRouteExtensionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.extensionChains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extensionChains'");
            }
            if ((!args || args.forwardingRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardingRules'");
            }
            if ((!args || args.lbRouteExtensionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lbRouteExtensionId'");
            }
            if ((!args || args.loadBalancingScheme === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancingScheme'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["extensionChains"] = args ? args.extensionChains : undefined;
            resourceInputs["forwardingRules"] = args ? args.forwardingRules : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lbRouteExtensionId"] = args ? args.lbRouteExtensionId : undefined;
            resourceInputs["loadBalancingScheme"] = args ? args.loadBalancingScheme : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["extensionChains"] = undefined /*out*/;
            resourceInputs["forwardingRules"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lbRouteExtensionId"] = undefined /*out*/;
            resourceInputs["loadBalancingScheme"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["lbRouteExtensionId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(LbRouteExtension.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LbRouteExtension resource.
 */
export interface LbRouteExtensionArgs {
    /**
     * Optional. A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     */
    extensionChains: pulumi.Input<pulumi.Input<inputs.networkservices.v1beta1.ExtensionChainArgs>[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LbRouteExtension` resource per forwarding rule.
     */
    forwardingRules: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. Set of labels associated with the `LbRouteExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. User-provided ID of the `LbRouteExtension` resource to be created.
     */
    lbRouteExtensionId: pulumi.Input<string>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
     */
    loadBalancingScheme: pulumi.Input<enums.networkservices.v1beta1.LbRouteExtensionLoadBalancingScheme>;
    location?: pulumi.Input<string>;
    /**
     * Name of the `LbRouteExtension` resource in the following format: `projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}`.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server can ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
}
