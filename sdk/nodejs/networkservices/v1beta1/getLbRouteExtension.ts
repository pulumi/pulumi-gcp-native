// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of the specified `LbRouteExtension` resource.
 */
export function getLbRouteExtension(args: GetLbRouteExtensionArgs, opts?: pulumi.InvokeOptions): Promise<GetLbRouteExtensionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:networkservices/v1beta1:getLbRouteExtension", {
        "lbRouteExtensionId": args.lbRouteExtensionId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetLbRouteExtensionArgs {
    lbRouteExtensionId: string;
    location: string;
    project?: string;
}

export interface GetLbRouteExtensionResult {
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: string;
    /**
     * Optional. A human-readable description of the resource.
     */
    readonly description: string;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     */
    readonly extensionChains: outputs.networkservices.v1beta1.ExtensionChainResponse[];
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding rule is required. There can be only one `LbRouteExtension` resource per forwarding rule.
     */
    readonly forwardingRules: string[];
    /**
     * Optional. Set of labels associated with the `LbRouteExtension` resource. The format must comply with [the following requirements](/compute/docs/labeling-resources#requirements).
     */
    readonly labels: {[key: string]: string};
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. Supported values: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`. For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service).
     */
    readonly loadBalancingScheme: string;
    /**
     * Name of the `LbRouteExtension` resource in the following format: `projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}`.
     */
    readonly name: string;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: string;
}
/**
 * Gets details of the specified `LbRouteExtension` resource.
 */
export function getLbRouteExtensionOutput(args: GetLbRouteExtensionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbRouteExtensionResult> {
    return pulumi.output(args).apply((a: any) => getLbRouteExtension(a, opts))
}

export interface GetLbRouteExtensionOutputArgs {
    lbRouteExtensionId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
