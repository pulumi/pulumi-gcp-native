// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./service";
export * from "./serviceBackup";
export * from "./serviceIamPolicy";
export * from "./serviceMetadataImport";

// Import resources to register:
import { Service } from "./service";
import { ServiceBackup } from "./serviceBackup";
import { ServiceIamPolicy } from "./serviceIamPolicy";
import { ServiceMetadataImport } from "./serviceMetadataImport";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp-native:metastore/v1beta:Service":
                return new Service(name, <any>undefined, { urn })
            case "gcp-native:metastore/v1beta:ServiceBackup":
                return new ServiceBackup(name, <any>undefined, { urn })
            case "gcp-native:metastore/v1beta:ServiceIamPolicy":
                return new ServiceIamPolicy(name, <any>undefined, { urn })
            case "gcp-native:metastore/v1beta:ServiceMetadataImport":
                return new ServiceMetadataImport(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp-native", "metastore/v1beta", _module)
