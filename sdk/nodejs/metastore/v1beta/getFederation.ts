// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the details of a single federation.
 */
export function getFederation(args: GetFederationArgs, opts?: pulumi.InvokeOptions): Promise<GetFederationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:metastore/v1beta:getFederation", {
        "federationId": args.federationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetFederationArgs {
    federationId: string;
    location: string;
    project?: string;
}

export interface GetFederationResult {
    /**
     * A map from BackendMetastore rank to BackendMetastores from which the federation service serves metadata at query time. The map key represents the order in which BackendMetastores should be evaluated to resolve database names at query time and should be greater than or equal to zero. A BackendMetastore with a lower number will be evaluated before a BackendMetastore with a higher number.
     */
    readonly backendMetastores: {[key: string]: outputs.metastore.v1beta.BackendMetastoreResponse};
    /**
     * The time when the metastore federation was created.
     */
    readonly createTime: string;
    /**
     * The federation endpoint.
     */
    readonly endpointUri: string;
    /**
     * User-defined labels for the metastore federation.
     */
    readonly labels: {[key: string]: string};
    /**
     * Immutable. The relative resource name of the federation, of the form: projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
     */
    readonly name: string;
    /**
     * The current state of the federation.
     */
    readonly state: string;
    /**
     * Additional information about the current state of the metastore federation, if available.
     */
    readonly stateMessage: string;
    /**
     * The globally unique resource identifier of the metastore federation.
     */
    readonly uid: string;
    /**
     * The time when the metastore federation was last updated.
     */
    readonly updateTime: string;
    /**
     * Immutable. The Apache Hive metastore version of the federation. All backend metastore versions must be compatible with the federation version.
     */
    readonly version: string;
}
/**
 * Gets the details of a single federation.
 */
export function getFederationOutput(args: GetFederationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFederationResult> {
    return pulumi.output(args).apply((a: any) => getFederation(a, opts))
}

export interface GetFederationOutputArgs {
    federationId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
