// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a authorized orgs desc. The long-running operation from this RPC has a successful status after the authorized orgs desc propagates to long-lasting storage. If a authorized orgs desc contains errors, an error response is returned for the first error encountered. The name of this `AuthorizedOrgsDesc` will be assigned during creation.
 */
export class AuthorizedOrgsDesc extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizedOrgsDesc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuthorizedOrgsDesc {
        return new AuthorizedOrgsDesc(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:accesscontextmanager/v1:AuthorizedOrgsDesc';

    /**
     * Returns true if the given object is an instance of AuthorizedOrgsDesc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizedOrgsDesc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizedOrgsDesc.__pulumiType;
    }

    public readonly accessPolicyId!: pulumi.Output<string>;
    /**
     * The asset type of this authorized orgs desc. e.g. device, credential strength.
     */
    public readonly assetType!: pulumi.Output<string>;
    /**
     * Authorization direction of this authorization relationship. i.e. Whether to allow specified orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order for this relationship to take effect.
     */
    public readonly authorizationDirection!: pulumi.Output<string>;
    /**
     * The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or logging.
     */
    public readonly authorizationType!: pulumi.Output<string>;
    /**
     * Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of organization ids in this AuthorizedOrgsDesc.
     */
    public readonly orgs!: pulumi.Output<string[]>;

    /**
     * Create a AuthorizedOrgsDesc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizedOrgsDescArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accessPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessPolicyId'");
            }
            resourceInputs["accessPolicyId"] = args ? args.accessPolicyId : undefined;
            resourceInputs["assetType"] = args ? args.assetType : undefined;
            resourceInputs["authorizationDirection"] = args ? args.authorizationDirection : undefined;
            resourceInputs["authorizationType"] = args ? args.authorizationType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgs"] = args ? args.orgs : undefined;
        } else {
            resourceInputs["accessPolicyId"] = undefined /*out*/;
            resourceInputs["assetType"] = undefined /*out*/;
            resourceInputs["authorizationDirection"] = undefined /*out*/;
            resourceInputs["authorizationType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["orgs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["accessPolicyId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AuthorizedOrgsDesc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AuthorizedOrgsDesc resource.
 */
export interface AuthorizedOrgsDescArgs {
    accessPolicyId: pulumi.Input<string>;
    /**
     * The asset type of this authorized orgs desc. e.g. device, credential strength.
     */
    assetType?: pulumi.Input<enums.accesscontextmanager.v1.AuthorizedOrgsDescAssetType>;
    /**
     * Authorization direction of this authorization relationship. i.e. Whether to allow specified orgs to evaluate this org's traffic, or allow specified orgs' traffic to be evaluated by this org. Orgs specified as `AUTHORIZATION_DIRECTION_TO` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_FROM` in their own AuthorizedOrgsDesc in order for this relationship to take effect. Orgs specified as `AUTHORIZATION_DIRECTION_FROM` in this AuthorizedOrgsDesc[com.google.identity.accesscontextmanager.v1.AuthorizedOrgsDesc] must also specify this org as the `AUTHORIZATION_DIRECTION_TO` in their own AuthorizedOrgsDesc in order for this relationship to take effect.
     */
    authorizationDirection?: pulumi.Input<enums.accesscontextmanager.v1.AuthorizedOrgsDescAuthorizationDirection>;
    /**
     * The authorization type of this authorized orgs desc. e.g.authorization, troubleshooting or logging.
     */
    authorizationType?: pulumi.Input<enums.accesscontextmanager.v1.AuthorizedOrgsDescAuthorizationType>;
    /**
     * Assigned by the server during creation. The last segment has an arbitrary length and has only URI unreserved characters (as defined by [RFC 3986 Section 2.3](https://tools.ietf.org/html/rfc3986#section-2.3)). Should not be specified by the client during creation. Example: "accessPolicies/122256/authorizedOrgs/b3-BhcX_Ud5N"
     */
    name?: pulumi.Input<string>;
    /**
     * The list of organization ids in this AuthorizedOrgsDesc.
     */
    orgs?: pulumi.Input<pulumi.Input<string>[]>;
}
