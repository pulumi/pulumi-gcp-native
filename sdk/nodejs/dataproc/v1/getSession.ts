// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the resource representation for an interactive session.
 */
export function getSession(args: GetSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dataproc/v1:getSession", {
        "location": args.location,
        "project": args.project,
        "sessionId": args.sessionId,
    }, opts);
}

export interface GetSessionArgs {
    location: string;
    project?: string;
    sessionId: string;
}

export interface GetSessionResult {
    /**
     * The time when the session was created.
     */
    readonly createTime: string;
    /**
     * The email address of the user who created the session.
     */
    readonly creator: string;
    /**
     * Optional. Environment configuration for the session execution.
     */
    readonly environmentConfig: outputs.dataproc.v1.EnvironmentConfigResponse;
    /**
     * Optional. Jupyter session config.
     */
    readonly jupyterSession: outputs.dataproc.v1.JupyterConfigResponse;
    /**
     * Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name of the session.
     */
    readonly name: string;
    /**
     * Optional. Runtime configuration for the session execution.
     */
    readonly runtimeConfig: outputs.dataproc.v1.RuntimeConfigResponse;
    /**
     * Runtime information about session execution.
     */
    readonly runtimeInfo: outputs.dataproc.v1.RuntimeInfoResponse;
    /**
     * Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session.
     */
    readonly sessionTemplate: string;
    /**
     * A state of the session.
     */
    readonly state: string;
    /**
     * Historical state information for the session.
     */
    readonly stateHistory: outputs.dataproc.v1.SessionStateHistoryResponse[];
    /**
     * Session state details, such as the failure description if the state is FAILED.
     */
    readonly stateMessage: string;
    /**
     * The time when the session entered the current state.
     */
    readonly stateTime: string;
    /**
     * Optional. The email address of the user who owns the session.
     */
    readonly user: string;
    /**
     * A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
     */
    readonly uuid: string;
}
/**
 * Gets the resource representation for an interactive session.
 */
export function getSessionOutput(args: GetSessionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionResult> {
    return pulumi.output(args).apply((a: any) => getSession(a, opts))
}

export interface GetSessionOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    sessionId: pulumi.Input<string>;
}
