// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Create a session template synchronously.
 */
export class SessionTemplate extends pulumi.CustomResource {
    /**
     * Get an existing SessionTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SessionTemplate {
        return new SessionTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dataproc/v1:SessionTemplate';

    /**
     * Returns true if the given object is an instance of SessionTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SessionTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SessionTemplate.__pulumiType;
    }

    /**
     * The time when the template was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The email address of the user who created the template.
     */
    public /*out*/ readonly creator!: pulumi.Output<string>;
    /**
     * Optional. Brief description of the template.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. Environment configuration for session execution.
     */
    public readonly environmentConfig!: pulumi.Output<outputs.dataproc.v1.EnvironmentConfigResponse>;
    /**
     * Optional. Jupyter session config.
     */
    public readonly jupyterSession!: pulumi.Output<outputs.dataproc.v1.JupyterConfigResponse>;
    /**
     * Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource name of the session template.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. Runtime configuration for session execution.
     */
    public readonly runtimeConfig!: pulumi.Output<outputs.dataproc.v1.RuntimeConfigResponse>;
    /**
     * The time the template was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SessionTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SessionTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentConfig"] = args ? args.environmentConfig : undefined;
            resourceInputs["jupyterSession"] = args ? args.jupyterSession : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["runtimeConfig"] = args ? args.runtimeConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["environmentConfig"] = undefined /*out*/;
            resourceInputs["jupyterSession"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["runtimeConfig"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SessionTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SessionTemplate resource.
 */
export interface SessionTemplateArgs {
    /**
     * Optional. Brief description of the template.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Environment configuration for session execution.
     */
    environmentConfig?: pulumi.Input<inputs.dataproc.v1.EnvironmentConfigArgs>;
    /**
     * Optional. Jupyter session config.
     */
    jupyterSession?: pulumi.Input<inputs.dataproc.v1.JupyterConfigArgs>;
    /**
     * Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * The resource name of the session template.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. Runtime configuration for session execution.
     */
    runtimeConfig?: pulumi.Input<inputs.dataproc.v1.RuntimeConfigArgs>;
}
