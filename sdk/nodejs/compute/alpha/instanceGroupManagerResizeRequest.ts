// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new resize request that starts provisioning VMs immediately or queues VM creation.
 */
export class InstanceGroupManagerResizeRequest extends pulumi.CustomResource {
    /**
     * Get an existing InstanceGroupManagerResizeRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceGroupManagerResizeRequest {
        return new InstanceGroupManagerResizeRequest(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:compute/alpha:InstanceGroupManagerResizeRequest';

    /**
     * Returns true if the given object is an instance of InstanceGroupManagerResizeRequest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceGroupManagerResizeRequest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceGroupManagerResizeRequest.__pulumiType;
    }

    /**
     * The count of instances to create as part of this resize request.
     */
    public readonly count!: pulumi.Output<number>;
    /**
     * The creation timestamp for this resize request in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource.
     */
    public readonly description!: pulumi.Output<string>;
    public readonly instanceGroupManager!: pulumi.Output<string>;
    /**
     * The resource type, which is always compute#instanceGroupManagerResizeRequest for resize requests.
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * When set, defines queing parameters for the requested deferred capacity. When unset, the request starts provisioning immediately, or fails if immediate provisioning is not possible.
     */
    public readonly queuingPolicy!: pulumi.Output<outputs.compute.alpha.QueuingPolicyResponse>;
    /**
     * An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * The URL for this resize request. The server defines this URL.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    public /*out*/ readonly selfLinkWithId!: pulumi.Output<string>;
    /**
     * [Output only] Current state of the request.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * [Output only] Status of the request. The Status message is aligned with QueuedResource.status. ResizeRequest.queuing_policy contains the queuing policy as provided by the user; it could have either valid_until_time or valid_until_duration. ResizeRequest.status.queuing_policy always contains absolute time as calculated by the server when the request is queued.
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.compute.alpha.InstanceGroupManagerResizeRequestStatusResponse>;
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InstanceGroupManagerResizeRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceGroupManagerResizeRequestArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instanceGroupManager === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceGroupManager'");
            }
            resourceInputs["count"] = args ? args.count : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceGroupManager"] = args ? args.instanceGroupManager : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["queuingPolicy"] = args ? args.queuingPolicy : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["count"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["instanceGroupManager"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["queuingPolicy"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["zone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["instanceGroupManager", "project", "zone"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(InstanceGroupManagerResizeRequest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceGroupManagerResizeRequest resource.
 */
export interface InstanceGroupManagerResizeRequestArgs {
    /**
     * The count of instances to create as part of this resize request.
     */
    count?: pulumi.Input<number>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    instanceGroupManager: pulumi.Input<string>;
    /**
     * The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * When set, defines queing parameters for the requested deferred capacity. When unset, the request starts provisioning immediately, or fails if immediate provisioning is not possible.
     */
    queuingPolicy?: pulumi.Input<inputs.compute.alpha.QueuingPolicyArgs>;
    /**
     * An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
