// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the specified QueuedResource resource.
 */
export function getZoneQueuedResource(args: GetZoneQueuedResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneQueuedResourceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:compute/alpha:getZoneQueuedResource", {
        "project": args.project,
        "queuedResource": args.queuedResource,
        "zone": args.zone,
    }, opts);
}

export interface GetZoneQueuedResourceArgs {
    project?: string;
    queuedResource: string;
    zone: string;
}

export interface GetZoneQueuedResourceResult {
    /**
     * Specification of VM instances to create.
     */
    readonly bulkInsertInstanceResource: outputs.compute.alpha.BulkInsertInstanceResourceResponse;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp: string;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    readonly description: string;
    /**
     * Type of the resource. Always compute#queuedResource for QueuedResources.
     */
    readonly kind: string;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name: string;
    /**
     * Queuing parameters for the requested capacity.
     */
    readonly queuingPolicy: outputs.compute.alpha.QueuingPolicyResponse;
    /**
     * URL of the region where the resource resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    readonly region: string;
    /**
     * [Output only] Server-defined URL for the resource.
     */
    readonly selfLink: string;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    readonly selfLinkWithId: string;
    /**
     * [Output only] High-level status of the request.
     */
    readonly state: string;
    /**
     * [Output only] Result of queuing and provisioning based on deferred capacity.
     */
    readonly status: outputs.compute.alpha.QueuedResourceStatusResponse;
    /**
     * URL of the zone where the resource resides. Only applicable for zonal resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    readonly zone: string;
}

export function getZoneQueuedResourceOutput(args: GetZoneQueuedResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZoneQueuedResourceResult> {
    return pulumi.output(args).apply(a => getZoneQueuedResource(a, opts))
}

export interface GetZoneQueuedResourceOutputArgs {
    project?: pulumi.Input<string>;
    queuedResource: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
