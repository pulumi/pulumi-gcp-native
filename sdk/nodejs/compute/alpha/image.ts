// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an image in the specified project using the data included in the request.
 */
export class Image extends pulumi.CustomResource {
    /**
     * Get an existing Image resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Image {
        return new Image(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:compute/alpha:Image';

    /**
     * Returns true if the given object is an instance of Image.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Image {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Image.__pulumiType;
    }

    /**
     * Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
     */
    public readonly archiveSizeBytes!: pulumi.Output<string>;
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    public readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * The deprecation status associated with this image.
     */
    public readonly deprecated!: pulumi.Output<outputs.compute.alpha.DeprecationStatusResponse>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Size of the image when restored onto a persistent disk (in GB).
     */
    public readonly diskSizeGb!: pulumi.Output<string>;
    /**
     * The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
     */
    public readonly family!: pulumi.Output<string>;
    /**
     * A list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.
     */
    public readonly guestOsFeatures!: pulumi.Output<outputs.compute.alpha.GuestOsFeatureResponse[]>;
    /**
     * Encrypts the image using a customer-supplied encryption key.
     *
     * After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).
     *
     * Customer-supplied encryption keys do not protect access to metadata of the disk.
     *
     * If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
     */
    public readonly imageEncryptionKey!: pulumi.Output<outputs.compute.alpha.CustomerEncryptionKeyResponse>;
    /**
     * [Output Only] Type of the resource. Always compute#image for images.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.
     *
     * To see the latest fingerprint, make a get() request to retrieve an image.
     */
    public readonly labelFingerprint!: pulumi.Output<string>;
    /**
     * Labels to apply to this image. These can be later modified by the setLabels method.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Integer license codes indicating which licenses are attached to this image.
     */
    public readonly licenseCodes!: pulumi.Output<string[]>;
    /**
     * Any applicable license URI.
     */
    public readonly licenses!: pulumi.Output<string[]>;
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The parameters of the raw disk image.
     */
    public readonly rawDisk!: pulumi.Output<outputs.compute.alpha.ImageRawDiskResponse>;
    /**
     * A rollout policy to apply to this image. When specified, the rollout policy overrides per-zone references to the image via the associated image family. The rollout policy restricts the zones where this image is accessible when using a zonal image family reference. When the rollout policy does not include the user specified zone, or if the zone is rolled out, this image is accessible.
     */
    public readonly rolloutOverride!: pulumi.Output<outputs.compute.alpha.RolloutPolicyResponse>;
    /**
     * [Output Only] Reserved for future use.
     */
    public readonly satisfiesPzs!: pulumi.Output<boolean>;
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     */
    public readonly selfLinkWithId!: pulumi.Output<string>;
    /**
     * Set the secure boot keys of shielded instance.
     */
    public readonly shieldedInstanceInitialState!: pulumi.Output<outputs.compute.alpha.InitialStateConfigResponse>;
    /**
     * URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
     * - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
     * - projects/project/zones/zone/disks/disk 
     * - zones/zone/disks/disk
     */
    public readonly sourceDisk!: pulumi.Output<string>;
    /**
     * The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
     */
    public readonly sourceDiskEncryptionKey!: pulumi.Output<outputs.compute.alpha.CustomerEncryptionKeyResponse>;
    /**
     * [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
     */
    public readonly sourceDiskId!: pulumi.Output<string>;
    /**
     * URL of the source image used to create this image.
     *
     * In order to create an image, you must provide the full or partial URL of one of the following:  
     * - The selfLink URL  
     * - This property  
     * - The rawDisk.source URL  
     * - The sourceDisk URL
     */
    public readonly sourceImage!: pulumi.Output<string>;
    /**
     * The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
     */
    public readonly sourceImageEncryptionKey!: pulumi.Output<outputs.compute.alpha.CustomerEncryptionKeyResponse>;
    /**
     * [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
     */
    public readonly sourceImageId!: pulumi.Output<string>;
    /**
     * URL of the source snapshot used to create this image.
     *
     * In order to create an image, you must provide the full or partial URL of one of the following:  
     * - The selfLink URL  
     * - This property 
     * - The sourceImage URL  
     * - The rawDisk.source URL  
     * - The sourceDisk URL
     */
    public readonly sourceSnapshot!: pulumi.Output<string>;
    /**
     * The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
     */
    public readonly sourceSnapshotEncryptionKey!: pulumi.Output<outputs.compute.alpha.CustomerEncryptionKeyResponse>;
    /**
     * [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name.
     */
    public readonly sourceSnapshotId!: pulumi.Output<string>;
    /**
     * The type of the image used to create this disk. The default and only value is RAW
     */
    public readonly sourceType!: pulumi.Output<string>;
    /**
     * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Cloud Storage bucket storage location of the image (regional or multi-regional).
     */
    public readonly storageLocations!: pulumi.Output<string[]>;

    /**
     * Create a Image resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["archiveSizeBytes"] = args ? args.archiveSizeBytes : undefined;
            inputs["creationTimestamp"] = args ? args.creationTimestamp : undefined;
            inputs["deprecated"] = args ? args.deprecated : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["diskSizeGb"] = args ? args.diskSizeGb : undefined;
            inputs["family"] = args ? args.family : undefined;
            inputs["forceCreate"] = args ? args.forceCreate : undefined;
            inputs["guestOsFeatures"] = args ? args.guestOsFeatures : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["imageEncryptionKey"] = args ? args.imageEncryptionKey : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["labelFingerprint"] = args ? args.labelFingerprint : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["licenseCodes"] = args ? args.licenseCodes : undefined;
            inputs["licenses"] = args ? args.licenses : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["rawDisk"] = args ? args.rawDisk : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["rolloutOverride"] = args ? args.rolloutOverride : undefined;
            inputs["satisfiesPzs"] = args ? args.satisfiesPzs : undefined;
            inputs["selfLink"] = args ? args.selfLink : undefined;
            inputs["selfLinkWithId"] = args ? args.selfLinkWithId : undefined;
            inputs["shieldedInstanceInitialState"] = args ? args.shieldedInstanceInitialState : undefined;
            inputs["sourceDisk"] = args ? args.sourceDisk : undefined;
            inputs["sourceDiskEncryptionKey"] = args ? args.sourceDiskEncryptionKey : undefined;
            inputs["sourceDiskId"] = args ? args.sourceDiskId : undefined;
            inputs["sourceImage"] = args ? args.sourceImage : undefined;
            inputs["sourceImageEncryptionKey"] = args ? args.sourceImageEncryptionKey : undefined;
            inputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            inputs["sourceSnapshot"] = args ? args.sourceSnapshot : undefined;
            inputs["sourceSnapshotEncryptionKey"] = args ? args.sourceSnapshotEncryptionKey : undefined;
            inputs["sourceSnapshotId"] = args ? args.sourceSnapshotId : undefined;
            inputs["sourceType"] = args ? args.sourceType : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["storageLocations"] = args ? args.storageLocations : undefined;
        } else {
            inputs["archiveSizeBytes"] = undefined /*out*/;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["deprecated"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["diskSizeGb"] = undefined /*out*/;
            inputs["family"] = undefined /*out*/;
            inputs["guestOsFeatures"] = undefined /*out*/;
            inputs["imageEncryptionKey"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["labelFingerprint"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["licenseCodes"] = undefined /*out*/;
            inputs["licenses"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["rawDisk"] = undefined /*out*/;
            inputs["rolloutOverride"] = undefined /*out*/;
            inputs["satisfiesPzs"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["selfLinkWithId"] = undefined /*out*/;
            inputs["shieldedInstanceInitialState"] = undefined /*out*/;
            inputs["sourceDisk"] = undefined /*out*/;
            inputs["sourceDiskEncryptionKey"] = undefined /*out*/;
            inputs["sourceDiskId"] = undefined /*out*/;
            inputs["sourceImage"] = undefined /*out*/;
            inputs["sourceImageEncryptionKey"] = undefined /*out*/;
            inputs["sourceImageId"] = undefined /*out*/;
            inputs["sourceSnapshot"] = undefined /*out*/;
            inputs["sourceSnapshotEncryptionKey"] = undefined /*out*/;
            inputs["sourceSnapshotId"] = undefined /*out*/;
            inputs["sourceType"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["storageLocations"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Image.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Image resource.
 */
export interface ImageArgs {
    /**
     * Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
     */
    readonly archiveSizeBytes?: pulumi.Input<string>;
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp?: pulumi.Input<string>;
    /**
     * The deprecation status associated with this image.
     */
    readonly deprecated?: pulumi.Input<inputs.compute.alpha.DeprecationStatusArgs>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Size of the image when restored onto a persistent disk (in GB).
     */
    readonly diskSizeGb?: pulumi.Input<string>;
    /**
     * The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
     */
    readonly family?: pulumi.Input<string>;
    readonly forceCreate?: pulumi.Input<string>;
    /**
     * A list of features to enable on the guest operating system. Applicable only for bootable images. Read  Enabling guest operating system features to see a list of available options.
     */
    readonly guestOsFeatures?: pulumi.Input<pulumi.Input<inputs.compute.alpha.GuestOsFeatureArgs>[]>;
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    readonly id?: pulumi.Input<string>;
    /**
     * Encrypts the image using a customer-supplied encryption key.
     *
     * After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image).
     *
     * Customer-supplied encryption keys do not protect access to metadata of the disk.
     *
     * If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
     */
    readonly imageEncryptionKey?: pulumi.Input<inputs.compute.alpha.CustomerEncryptionKeyArgs>;
    /**
     * [Output Only] Type of the resource. Always compute#image for images.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.
     *
     * To see the latest fingerprint, make a get() request to retrieve an image.
     */
    readonly labelFingerprint?: pulumi.Input<string>;
    /**
     * Labels to apply to this image. These can be later modified by the setLabels method.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Integer license codes indicating which licenses are attached to this image.
     */
    readonly licenseCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Any applicable license URI.
     */
    readonly licenses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name?: pulumi.Input<string>;
    readonly project: pulumi.Input<string>;
    /**
     * The parameters of the raw disk image.
     */
    readonly rawDisk?: pulumi.Input<inputs.compute.alpha.ImageRawDiskArgs>;
    readonly requestId?: pulumi.Input<string>;
    /**
     * A rollout policy to apply to this image. When specified, the rollout policy overrides per-zone references to the image via the associated image family. The rollout policy restricts the zones where this image is accessible when using a zonal image family reference. When the rollout policy does not include the user specified zone, or if the zone is rolled out, this image is accessible.
     */
    readonly rolloutOverride?: pulumi.Input<inputs.compute.alpha.RolloutPolicyArgs>;
    /**
     * [Output Only] Reserved for future use.
     */
    readonly satisfiesPzs?: pulumi.Input<boolean>;
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     */
    readonly selfLinkWithId?: pulumi.Input<string>;
    /**
     * Set the secure boot keys of shielded instance.
     */
    readonly shieldedInstanceInitialState?: pulumi.Input<inputs.compute.alpha.InitialStateConfigArgs>;
    /**
     * URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values:  
     * - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 
     * - projects/project/zones/zone/disks/disk 
     * - zones/zone/disks/disk
     */
    readonly sourceDisk?: pulumi.Input<string>;
    /**
     * The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
     */
    readonly sourceDiskEncryptionKey?: pulumi.Input<inputs.compute.alpha.CustomerEncryptionKeyArgs>;
    /**
     * [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
     */
    readonly sourceDiskId?: pulumi.Input<string>;
    /**
     * URL of the source image used to create this image.
     *
     * In order to create an image, you must provide the full or partial URL of one of the following:  
     * - The selfLink URL  
     * - This property  
     * - The rawDisk.source URL  
     * - The sourceDisk URL
     */
    readonly sourceImage?: pulumi.Input<string>;
    /**
     * The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
     */
    readonly sourceImageEncryptionKey?: pulumi.Input<inputs.compute.alpha.CustomerEncryptionKeyArgs>;
    /**
     * [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
     */
    readonly sourceImageId?: pulumi.Input<string>;
    /**
     * URL of the source snapshot used to create this image.
     *
     * In order to create an image, you must provide the full or partial URL of one of the following:  
     * - The selfLink URL  
     * - This property 
     * - The sourceImage URL  
     * - The rawDisk.source URL  
     * - The sourceDisk URL
     */
    readonly sourceSnapshot?: pulumi.Input<string>;
    /**
     * The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
     */
    readonly sourceSnapshotEncryptionKey?: pulumi.Input<inputs.compute.alpha.CustomerEncryptionKeyArgs>;
    /**
     * [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name.
     */
    readonly sourceSnapshotId?: pulumi.Input<string>;
    /**
     * The type of the image used to create this disk. The default and only value is RAW
     */
    readonly sourceType?: pulumi.Input<string>;
    /**
     * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * Cloud Storage bucket storage location of the image (regional or multi-regional).
     */
    readonly storageLocations?: pulumi.Input<pulumi.Input<string>[]>;
}
