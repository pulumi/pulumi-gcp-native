// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a HealthCheck resource in the specified project using the data included in the request.
 */
export class HealthCheck extends pulumi.CustomResource {
    /**
     * Get an existing HealthCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HealthCheck {
        return new HealthCheck(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:compute/beta:HealthCheck';

    /**
     * Returns true if the given object is an instance of HealthCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HealthCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HealthCheck.__pulumiType;
    }

    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    public readonly checkIntervalSec!: pulumi.Output<number>;
    /**
     * Creation timestamp in 3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string>;
    public readonly grpcHealthCheck!: pulumi.Output<outputs.compute.beta.GRPCHealthCheckResponse>;
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    public readonly healthyThreshold!: pulumi.Output<number>;
    public readonly http2HealthCheck!: pulumi.Output<outputs.compute.beta.HTTP2HealthCheckResponse>;
    public readonly httpHealthCheck!: pulumi.Output<outputs.compute.beta.HTTPHealthCheckResponse>;
    public readonly httpsHealthCheck!: pulumi.Output<outputs.compute.beta.HTTPSHealthCheckResponse>;
    /**
     * Type of the resource.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * Configure logging on this health check.
     */
    public readonly logConfig!: pulumi.Output<outputs.compute.beta.HealthCheckLogConfigResponse>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. For example, a name that is 1-63 characters long, matches the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This regular expression describes a name where the first character is a lowercase letter, and all following characters are a dash, lowercase letter, or digit, except the last character, which isn't a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Region where the health check resides. Not applicable to global health checks.
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    public readonly sslHealthCheck!: pulumi.Output<outputs.compute.beta.SSLHealthCheckResponse>;
    public readonly tcpHealthCheck!: pulumi.Output<outputs.compute.beta.TCPHealthCheckResponse>;
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
     */
    public readonly timeoutSec!: pulumi.Output<number>;
    /**
     * Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    public readonly unhealthyThreshold!: pulumi.Output<number>;

    /**
     * Create a HealthCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HealthCheckArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["checkIntervalSec"] = args ? args.checkIntervalSec : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["grpcHealthCheck"] = args ? args.grpcHealthCheck : undefined;
            inputs["healthyThreshold"] = args ? args.healthyThreshold : undefined;
            inputs["http2HealthCheck"] = args ? args.http2HealthCheck : undefined;
            inputs["httpHealthCheck"] = args ? args.httpHealthCheck : undefined;
            inputs["httpsHealthCheck"] = args ? args.httpsHealthCheck : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["logConfig"] = args ? args.logConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["sslHealthCheck"] = args ? args.sslHealthCheck : undefined;
            inputs["tcpHealthCheck"] = args ? args.tcpHealthCheck : undefined;
            inputs["timeoutSec"] = args ? args.timeoutSec : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["unhealthyThreshold"] = args ? args.unhealthyThreshold : undefined;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["region"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        } else {
            inputs["checkIntervalSec"] = undefined /*out*/;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["grpcHealthCheck"] = undefined /*out*/;
            inputs["healthyThreshold"] = undefined /*out*/;
            inputs["http2HealthCheck"] = undefined /*out*/;
            inputs["httpHealthCheck"] = undefined /*out*/;
            inputs["httpsHealthCheck"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["logConfig"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["region"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["sslHealthCheck"] = undefined /*out*/;
            inputs["tcpHealthCheck"] = undefined /*out*/;
            inputs["timeoutSec"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["unhealthyThreshold"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(HealthCheck.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a HealthCheck resource.
 */
export interface HealthCheckArgs {
    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    checkIntervalSec?: pulumi.Input<number>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    grpcHealthCheck?: pulumi.Input<inputs.compute.beta.GRPCHealthCheckArgs>;
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    healthyThreshold?: pulumi.Input<number>;
    http2HealthCheck?: pulumi.Input<inputs.compute.beta.HTTP2HealthCheckArgs>;
    httpHealthCheck?: pulumi.Input<inputs.compute.beta.HTTPHealthCheckArgs>;
    httpsHealthCheck?: pulumi.Input<inputs.compute.beta.HTTPSHealthCheckArgs>;
    /**
     * Type of the resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * Configure logging on this health check.
     */
    logConfig?: pulumi.Input<inputs.compute.beta.HealthCheckLogConfigArgs>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. For example, a name that is 1-63 characters long, matches the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This regular expression describes a name where the first character is a lowercase letter, and all following characters are a dash, lowercase letter, or digit, except the last character, which isn't a dash.
     */
    name?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    sslHealthCheck?: pulumi.Input<inputs.compute.beta.SSLHealthCheckArgs>;
    tcpHealthCheck?: pulumi.Input<inputs.compute.beta.TCPHealthCheckArgs>;
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
     */
    timeoutSec?: pulumi.Input<number>;
    /**
     * Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
     */
    type?: pulumi.Input<enums.compute.beta.HealthCheckType>;
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}
