// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an instance group in the specified project using the parameters that are included in the request.
 */
export class InstanceGroup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceGroup {
        return new InstanceGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:compute/beta:InstanceGroup';

    /**
     * Returns true if the given object is an instance of InstanceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceGroup.__pulumiType;
    }

    /**
     * [Output Only] The creation timestamp for this instance group in RFC3339 text format.
     */
    public readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * [Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
     */
    public readonly fingerprint!: pulumi.Output<string>;
    /**
     * [Output Only] The resource type, which is always compute#instanceGroup for instance groups.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Assigns a name to a port number. For example: {name: "http", port: 80}
     *
     * This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] 
     *
     * Named ports apply to all instances in this instance group.
     */
    public readonly namedPorts!: pulumi.Output<outputs.compute.beta.NamedPortResponse[]>;
    /**
     * [Output Only] The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * [Output Only] The URL of the region where the instance group is located (for regional resources).
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * [Output Only] The URL for this instance group. The server generates this URL.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * [Output Only] The total number of instances in the instance group.
     */
    public readonly size!: pulumi.Output<number>;
    /**
     * [Output Only] The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
     */
    public readonly subnetwork!: pulumi.Output<string>;
    /**
     * [Output Only] The URL of the zone where the instance group is located (for zonal resources).
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InstanceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            inputs["creationTimestamp"] = args ? args.creationTimestamp : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["fingerprint"] = args ? args.fingerprint : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namedPorts"] = args ? args.namedPorts : undefined;
            inputs["network"] = args ? args.network : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["selfLink"] = args ? args.selfLink : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["subnetwork"] = args ? args.subnetwork : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        } else {
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["fingerprint"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["namedPorts"] = undefined /*out*/;
            inputs["network"] = undefined /*out*/;
            inputs["region"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["size"] = undefined /*out*/;
            inputs["subnetwork"] = undefined /*out*/;
            inputs["zone"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceGroup resource.
 */
export interface InstanceGroupArgs {
    /**
     * [Output Only] The creation timestamp for this instance group in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * [Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * [Output Only] A unique identifier for this instance group, generated by the server.
     */
    id?: pulumi.Input<string>;
    /**
     * [Output Only] The resource type, which is always compute#instanceGroup for instance groups.
     */
    kind?: pulumi.Input<string>;
    /**
     * The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
     */
    name?: pulumi.Input<string>;
    /**
     * Assigns a name to a port number. For example: {name: "http", port: 80}
     *
     * This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] 
     *
     * Named ports apply to all instances in this instance group.
     */
    namedPorts?: pulumi.Input<pulumi.Input<inputs.compute.beta.NamedPortArgs>[]>;
    /**
     * [Output Only] The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
     */
    network?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    /**
     * [Output Only] The URL of the region where the instance group is located (for regional resources).
     */
    region?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    /**
     * [Output Only] The URL for this instance group. The server generates this URL.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * [Output Only] The total number of instances in the instance group.
     */
    size?: pulumi.Input<number>;
    /**
     * [Output Only] The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0).
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * [Output Only] The URL of the zone where the instance group is located (for zonal resources).
     */
    zone: pulumi.Input<string>;
}
