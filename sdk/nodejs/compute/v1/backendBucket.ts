// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a BackendBucket resource in the specified project using the data included in the request.
 */
export class BackendBucket extends pulumi.CustomResource {
    /**
     * Get an existing BackendBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackendBucket {
        return new BackendBucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:compute/v1:BackendBucket';

    /**
     * Returns true if the given object is an instance of BackendBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackendBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackendBucket.__pulumiType;
    }

    /**
     * Cloud Storage bucket name.
     */
    public readonly bucketName!: pulumi.Output<string>;
    /**
     * Cloud CDN configuration for this BackendBucket.
     */
    public readonly cdnPolicy!: pulumi.Output<outputs.compute.v1.BackendBucketCdnPolicyResponse>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * Headers that the HTTP/S load balancer should add to proxied responses.
     */
    public readonly customResponseHeaders!: pulumi.Output<string[]>;
    /**
     * An optional textual description of the resource; provided by the client when the resource is created.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * If true, enable Cloud CDN for this BackendBucket.
     */
    public readonly enableCdn!: pulumi.Output<boolean>;
    /**
     * Type of the resource.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;

    /**
     * Create a BackendBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BackendBucketArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            inputs["bucketName"] = args ? args.bucketName : undefined;
            inputs["cdnPolicy"] = args ? args.cdnPolicy : undefined;
            inputs["customResponseHeaders"] = args ? args.customResponseHeaders : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableCdn"] = args ? args.enableCdn : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        } else {
            inputs["bucketName"] = undefined /*out*/;
            inputs["cdnPolicy"] = undefined /*out*/;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["customResponseHeaders"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["enableCdn"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(BackendBucket.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a BackendBucket resource.
 */
export interface BackendBucketArgs {
    /**
     * Cloud Storage bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Cloud CDN configuration for this BackendBucket.
     */
    cdnPolicy?: pulumi.Input<inputs.compute.v1.BackendBucketCdnPolicyArgs>;
    /**
     * Headers that the HTTP/S load balancer should add to proxied responses.
     */
    customResponseHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An optional textual description of the resource; provided by the client when the resource is created.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, enable Cloud CDN for this BackendBucket.
     */
    enableCdn?: pulumi.Input<boolean>;
    /**
     * Type of the resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
}
