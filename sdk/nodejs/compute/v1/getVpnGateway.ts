// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns the specified VPN gateway. Gets a list of available VPN gateways by making a list() request.
 */
export function getVpnGateway(args: GetVpnGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnGatewayResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("google-native:compute/v1:getVpnGateway", {
        "project": args.project,
        "region": args.region,
        "vpnGateway": args.vpnGateway,
    }, opts);
}

export interface GetVpnGatewayArgs {
    project: string;
    region: string;
    vpnGateway: string;
}

export interface GetVpnGatewayResult {
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    readonly creationTimestamp: string;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    readonly description: string;
    /**
     * [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
     */
    readonly kind: string;
    /**
     * A fingerprint for the labels being applied to this VpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet.
     *
     * To see the latest fingerprint, make a get() request to retrieve an VpnGateway.
     */
    readonly labelFingerprint: string;
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     */
    readonly labels: {[key: string]: string};
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name: string;
    /**
     * URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
     */
    readonly network: string;
    /**
     * [Output Only] URL of the region where the VPN gateway resides.
     */
    readonly region: string;
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    readonly selfLink: string;
    /**
     * A list of interfaces on this VPN gateway.
     */
    readonly vpnInterfaces: outputs.compute.v1.VpnGatewayVpnGatewayInterfaceResponse[];
}
