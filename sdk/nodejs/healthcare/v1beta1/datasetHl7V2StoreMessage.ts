// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the message when a notification is received.
 */
export class DatasetHl7V2StoreMessage extends pulumi.CustomResource {
    /**
     * Get an existing DatasetHl7V2StoreMessage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DatasetHl7V2StoreMessage {
        return new DatasetHl7V2StoreMessage(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:healthcare/v1beta1:DatasetHl7V2StoreMessage';

    /**
     * Returns true if the given object is an instance of DatasetHl7V2StoreMessage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasetHl7V2StoreMessage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasetHl7V2StoreMessage.__pulumiType;
    }

    /**
     * The datetime when the message was created. Set by the server.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Raw message bytes.
     */
    public /*out*/ readonly data!: pulumi.Output<string>;
    /**
     * User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
     */
    public /*out*/ readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The message type for this message. MSH-9.1.
     */
    public /*out*/ readonly messageType!: pulumi.Output<string>;
    /**
     * Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The parsed version of the raw message data.
     */
    public /*out*/ readonly parsedData!: pulumi.Output<outputs.healthcare.v1beta1.ParsedDataResponse>;
    /**
     * All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
     */
    public /*out*/ readonly patientIds!: pulumi.Output<outputs.healthcare.v1beta1.PatientIdResponse[]>;
    /**
     * The parsed version of the raw message data schematized according to this store's schemas and type definitions.
     */
    public /*out*/ readonly schematizedData!: pulumi.Output<outputs.healthcare.v1beta1.SchematizedDataResponse>;
    /**
     * The hospital that this message came from. MSH-4.
     */
    public /*out*/ readonly sendFacility!: pulumi.Output<string>;
    /**
     * The datetime the sending application sent this message. MSH-7.
     */
    public /*out*/ readonly sendTime!: pulumi.Output<string>;

    /**
     * Create a DatasetHl7V2StoreMessage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasetHl7V2StoreMessageArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.datasetsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetsId'");
            }
            if ((!args || args.hl7V2StoresId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hl7V2StoresId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.messagesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'messagesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["datasetsId"] = args ? args.datasetsId : undefined;
            inputs["hl7V2StoresId"] = args ? args.hl7V2StoresId : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["message"] = args ? args.message : undefined;
            inputs["messagesId"] = args ? args.messagesId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["data"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["messageType"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["parsedData"] = undefined /*out*/;
            inputs["patientIds"] = undefined /*out*/;
            inputs["schematizedData"] = undefined /*out*/;
            inputs["sendFacility"] = undefined /*out*/;
            inputs["sendTime"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["data"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["messageType"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["parsedData"] = undefined /*out*/;
            inputs["patientIds"] = undefined /*out*/;
            inputs["schematizedData"] = undefined /*out*/;
            inputs["sendFacility"] = undefined /*out*/;
            inputs["sendTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DatasetHl7V2StoreMessage.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a DatasetHl7V2StoreMessage resource.
 */
export interface DatasetHl7V2StoreMessageArgs {
    readonly datasetsId: pulumi.Input<string>;
    readonly hl7V2StoresId: pulumi.Input<string>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * HL7v2 message.
     */
    readonly message?: pulumi.Input<inputs.healthcare.v1beta1.Message>;
    readonly messagesId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
}
