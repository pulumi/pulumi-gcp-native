// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an entitlement for a customer. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * There is already a customer entitlement for a SKU from the same product family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact Google Channel support for further troubleshooting. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was already purchased for the customer. * The customer's primary email already exists. Retry after changing the customer's primary contact email. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for purchasing a SKU has not been verified. * A pre-requisite SKU required to purchase an Add-On SKU is missing. For example, Google Workspace Business Starter is required to purchase Vault or Drive. * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.
 */
export class AccountCustomerEntitlement extends pulumi.CustomResource {
    /**
     * Get an existing AccountCustomerEntitlement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccountCustomerEntitlement {
        return new AccountCustomerEntitlement(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp-native:cloudchannel/v1:AccountCustomerEntitlement';

    /**
     * Returns true if the given object is an instance of AccountCustomerEntitlement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountCustomerEntitlement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountCustomerEntitlement.__pulumiType;
    }

    /**
     * Association information to other entitlements.
     */
    public readonly associationInfo!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1AssociationInfoResponse>;
    /**
     * Commitment settings for a commitment-based Offer. Required for commitment based offers.
     */
    public readonly commitmentSettings!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1CommitmentSettingsResponse>;
    /**
     * The time at which the entitlement is created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
     */
    public readonly offer!: pulumi.Output<string>;
    /**
     * Extended entitlement parameters. When creating an entitlement, valid parameters' names and values are defined in the offer's parameter definitions.
     */
    public readonly parameters!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1ParameterResponse[]>;
    /**
     * Service provisioning details for the entitlement.
     */
    public /*out*/ readonly provisionedService!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1ProvisionedServiceResponse>;
    /**
     * Current provisioning state of the entitlement.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
     */
    public readonly purchaseOrderId!: pulumi.Output<string>;
    /**
     * Enumerable of all current suspension reasons for an entitlement.
     */
    public /*out*/ readonly suspensionReasons!: pulumi.Output<string[]>;
    /**
     * Settings for trial offers.
     */
    public /*out*/ readonly trialSettings!: pulumi.Output<outputs.cloudchannel.v1.GoogleCloudChannelV1TrialSettingsResponse>;
    /**
     * The time at which the entitlement is updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AccountCustomerEntitlement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountCustomerEntitlementArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountsId'");
            }
            if ((!args || args.customersId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customersId'");
            }
            if ((!args || args.entitlementsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entitlementsId'");
            }
            inputs["accountsId"] = args ? args.accountsId : undefined;
            inputs["associationInfo"] = args ? args.associationInfo : undefined;
            inputs["commitmentSettings"] = args ? args.commitmentSettings : undefined;
            inputs["customersId"] = args ? args.customersId : undefined;
            inputs["entitlementsId"] = args ? args.entitlementsId : undefined;
            inputs["offer"] = args ? args.offer : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["purchaseOrderId"] = args ? args.purchaseOrderId : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provisionedService"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["suspensionReasons"] = undefined /*out*/;
            inputs["trialSettings"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        } else {
            inputs["associationInfo"] = undefined /*out*/;
            inputs["commitmentSettings"] = undefined /*out*/;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["offer"] = undefined /*out*/;
            inputs["parameters"] = undefined /*out*/;
            inputs["provisionedService"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["purchaseOrderId"] = undefined /*out*/;
            inputs["suspensionReasons"] = undefined /*out*/;
            inputs["trialSettings"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AccountCustomerEntitlement.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AccountCustomerEntitlement resource.
 */
export interface AccountCustomerEntitlementArgs {
    readonly accountsId: pulumi.Input<string>;
    /**
     * Association information to other entitlements.
     */
    readonly associationInfo?: pulumi.Input<inputs.cloudchannel.v1.GoogleCloudChannelV1AssociationInfo>;
    /**
     * Commitment settings for a commitment-based Offer. Required for commitment based offers.
     */
    readonly commitmentSettings?: pulumi.Input<inputs.cloudchannel.v1.GoogleCloudChannelV1CommitmentSettings>;
    readonly customersId: pulumi.Input<string>;
    readonly entitlementsId: pulumi.Input<string>;
    /**
     * Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}.
     */
    readonly offer?: pulumi.Input<string>;
    /**
     * Extended entitlement parameters. When creating an entitlement, valid parameters' names and values are defined in the offer's parameter definitions.
     */
    readonly parameters?: pulumi.Input<pulumi.Input<inputs.cloudchannel.v1.GoogleCloudChannelV1Parameter>[]>;
    /**
     * Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
     */
    readonly purchaseOrderId?: pulumi.Input<string>;
    /**
     * Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).
     */
    readonly requestId?: pulumi.Input<string>;
}
