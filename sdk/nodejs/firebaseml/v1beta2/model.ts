// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a model in Firebase ML. The longrunning operation will eventually return a Model
 */
export class Model extends pulumi.CustomResource {
    /**
     * Get an existing Model resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Model {
        return new Model(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:firebaseml/v1beta2:Model';

    /**
     * Returns true if the given object is an instance of Model.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Model {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Model.__pulumiType;
    }


    /**
     * Create a Model resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.modelsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["activeOperations"] = args ? args.activeOperations : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["modelHash"] = args ? args.modelHash : undefined;
            inputs["modelsId"] = args ? args.modelsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["tfliteModel"] = args ? args.tfliteModel : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Model.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Model resource.
 */
export interface ModelArgs {
    /**
     * Output only. Lists operation ids associated with this model whose status is NOT done.
     */
    readonly activeOperations?: pulumi.Input<pulumi.Input<inputs.firebaseml.v1beta2.Operation>[]>;
    /**
     * Output only. Timestamp when this model was created in Firebase ML.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Required. The name of the model to create. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must start with a letter.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * Output only. The model_hash will change if a new file is available for download.
     */
    readonly modelHash?: pulumi.Input<string>;
    readonly modelsId: pulumi.Input<string>;
    /**
     * The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * State common to all model types. Includes publishing and validation information.
     */
    readonly state?: pulumi.Input<inputs.firebaseml.v1beta2.ModelState>;
    /**
     * User defined tags which can be used to group/filter models during listing
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A TFLite Model
     */
    readonly tfliteModel?: pulumi.Input<inputs.firebaseml.v1beta2.TfLiteModel>;
    /**
     * Output only. Timestamp when this model was updated in Firebase ML.
     */
    readonly updateTime?: pulumi.Input<string>;
}
