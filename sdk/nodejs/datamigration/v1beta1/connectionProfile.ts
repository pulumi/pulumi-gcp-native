// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new connection profile in a given project and location.
 */
export class ConnectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectionProfile {
        return new ConnectionProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:datamigration/v1beta1:ConnectionProfile';

    /**
     * Returns true if the given object is an instance of ConnectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionProfile.__pulumiType;
    }

    /**
     * A CloudSQL database connection profile.
     */
    public readonly cloudsql!: pulumi.Output<outputs.datamigration.v1beta1.CloudSqlConnectionProfileResponse>;
    /**
     * The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The connection profile display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The error details in case of state FAILED.
     */
    public /*out*/ readonly error!: pulumi.Output<outputs.datamigration.v1beta1.StatusResponse>;
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A MySQL database connection profile.
     */
    public readonly mysql!: pulumi.Output<outputs.datamigration.v1beta1.MySqlConnectionProfileResponse>;
    /**
     * The name of this connection profile resource in the form of projects/{project}/locations/{location}/instances/{instance}.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The database provider.
     */
    public readonly provider!: pulumi.Output<string>;
    /**
     * The current connection profile state (e.g. DRAFT, READY, or FAILED).
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ConnectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.connectionProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionProfileId'");
            }
            if ((!args || args.connectionProfilesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionProfilesId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["cloudsql"] = args ? args.cloudsql : undefined;
            inputs["connectionProfileId"] = args ? args.connectionProfileId : undefined;
            inputs["connectionProfilesId"] = args ? args.connectionProfilesId : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["mysql"] = args ? args.mysql : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["provider"] = args ? args.provider : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["error"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        } else {
            inputs["cloudsql"] = undefined /*out*/;
            inputs["createTime"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["error"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["mysql"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["provider"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ConnectionProfile.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ConnectionProfile resource.
 */
export interface ConnectionProfileArgs {
    /**
     * A CloudSQL database connection profile.
     */
    readonly cloudsql?: pulumi.Input<inputs.datamigration.v1beta1.CloudSqlConnectionProfileArgs>;
    readonly connectionProfileId: pulumi.Input<string>;
    readonly connectionProfilesId: pulumi.Input<string>;
    /**
     * The connection profile display name.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * A MySQL database connection profile.
     */
    readonly mysql?: pulumi.Input<inputs.datamigration.v1beta1.MySqlConnectionProfileArgs>;
    /**
     * The name of this connection profile resource in the form of projects/{project}/locations/{location}/instances/{instance}.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * The database provider.
     */
    readonly provider?: pulumi.Input<string>;
    readonly requestId?: pulumi.Input<string>;
    /**
     * The current connection profile state (e.g. DRAFT, READY, or FAILED).
     */
    readonly state?: pulumi.Input<string>;
}
