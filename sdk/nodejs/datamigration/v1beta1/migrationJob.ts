// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new migration job in a given project and location.
 */
export class MigrationJob extends pulumi.CustomResource {
    /**
     * Get an existing MigrationJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MigrationJob {
        return new MigrationJob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:datamigration/v1beta1:MigrationJob';

    /**
     * Returns true if the given object is an instance of MigrationJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MigrationJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MigrationJob.__pulumiType;
    }

    /**
     * The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Required. The resource name (URI) of the destination connection profile.
     */
    public readonly destination!: pulumi.Output<string>;
    /**
     * The database engine type and provider of the destination.
     */
    public readonly destinationDatabase!: pulumi.Output<outputs.datamigration.v1beta1.DatabaseTypeResponse>;
    /**
     * The migration job display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
     */
    public readonly dumpPath!: pulumi.Output<string>;
    /**
     * The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
     */
    public /*out*/ readonly duration!: pulumi.Output<string>;
    /**
     * If the migration job is completed, the time when it was completed.
     */
    public /*out*/ readonly endTime!: pulumi.Output<string>;
    /**
     * The error details in case of state FAILED.
     */
    public /*out*/ readonly error!: pulumi.Output<outputs.datamigration.v1beta1.StatusResponse>;
    /**
     * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/instances/{instance}.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The current migration job phase.
     */
    public /*out*/ readonly phase!: pulumi.Output<string>;
    /**
     * The details needed to communicate to the source over Reverse SSH tunnel connectivity.
     */
    public readonly reverseSshConnectivity!: pulumi.Output<outputs.datamigration.v1beta1.ReverseSshConnectivityResponse>;
    /**
     * Required. The resource name (URI) of the source connection profile.
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * The database engine type and provider of the source.
     */
    public readonly sourceDatabase!: pulumi.Output<outputs.datamigration.v1beta1.DatabaseTypeResponse>;
    /**
     * The current migration job state.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * static ip connectivity data (default, no additional details needed).
     */
    public readonly staticIpConnectivity!: pulumi.Output<outputs.datamigration.v1beta1.StaticIpConnectivityResponse>;
    /**
     * Required. The migration job type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The details of the VPC network that the source database is located in.
     */
    public readonly vpcPeeringConnectivity!: pulumi.Output<outputs.datamigration.v1beta1.VpcPeeringConnectivityResponse>;

    /**
     * Create a MigrationJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrationJobArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.migrationJobsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'migrationJobsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["destination"] = args ? args.destination : undefined;
            inputs["destinationDatabase"] = args ? args.destinationDatabase : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["dumpPath"] = args ? args.dumpPath : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["migrationJobsId"] = args ? args.migrationJobsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["reverseSshConnectivity"] = args ? args.reverseSshConnectivity : undefined;
            inputs["source"] = args ? args.source : undefined;
            inputs["sourceDatabase"] = args ? args.sourceDatabase : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["staticIpConnectivity"] = args ? args.staticIpConnectivity : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["vpcPeeringConnectivity"] = args ? args.vpcPeeringConnectivity : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["duration"] = undefined /*out*/;
            inputs["endTime"] = undefined /*out*/;
            inputs["error"] = undefined /*out*/;
            inputs["phase"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["destination"] = undefined /*out*/;
            inputs["destinationDatabase"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["dumpPath"] = undefined /*out*/;
            inputs["duration"] = undefined /*out*/;
            inputs["endTime"] = undefined /*out*/;
            inputs["error"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["phase"] = undefined /*out*/;
            inputs["reverseSshConnectivity"] = undefined /*out*/;
            inputs["source"] = undefined /*out*/;
            inputs["sourceDatabase"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["staticIpConnectivity"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
            inputs["vpcPeeringConnectivity"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MigrationJob.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a MigrationJob resource.
 */
export interface MigrationJobArgs {
    /**
     * Required. The resource name (URI) of the destination connection profile.
     */
    readonly destination?: pulumi.Input<string>;
    /**
     * The database engine type and provider of the destination.
     */
    readonly destinationDatabase?: pulumi.Input<inputs.datamigration.v1beta1.DatabaseType>;
    /**
     * The migration job display name.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
     */
    readonly dumpPath?: pulumi.Input<string>;
    /**
     * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly locationsId: pulumi.Input<string>;
    readonly migrationJobsId: pulumi.Input<string>;
    /**
     * The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/instances/{instance}.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * The details needed to communicate to the source over Reverse SSH tunnel connectivity.
     */
    readonly reverseSshConnectivity?: pulumi.Input<inputs.datamigration.v1beta1.ReverseSshConnectivity>;
    /**
     * Required. The resource name (URI) of the source connection profile.
     */
    readonly source?: pulumi.Input<string>;
    /**
     * The database engine type and provider of the source.
     */
    readonly sourceDatabase?: pulumi.Input<inputs.datamigration.v1beta1.DatabaseType>;
    /**
     * The current migration job state.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * static ip connectivity data (default, no additional details needed).
     */
    readonly staticIpConnectivity?: pulumi.Input<inputs.datamigration.v1beta1.StaticIpConnectivity>;
    /**
     * Required. The migration job type.
     */
    readonly type?: pulumi.Input<string>;
    /**
     * The details of the VPC network that the source database is located in.
     */
    readonly vpcPeeringConnectivity?: pulumi.Input<inputs.datamigration.v1beta1.VpcPeeringConnectivity>;
}
