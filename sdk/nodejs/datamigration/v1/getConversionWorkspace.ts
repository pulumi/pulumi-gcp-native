// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single conversion workspace.
 */
export function getConversionWorkspace(args: GetConversionWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetConversionWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:datamigration/v1:getConversionWorkspace", {
        "conversionWorkspaceId": args.conversionWorkspaceId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetConversionWorkspaceArgs {
    conversionWorkspaceId: string;
    location: string;
    project?: string;
}

export interface GetConversionWorkspaceResult {
    /**
     * The timestamp when the workspace resource was created.
     */
    readonly createTime: string;
    /**
     * The destination engine details.
     */
    readonly destination: outputs.datamigration.v1.DatabaseEngineInfoResponse;
    /**
     * The display name for the workspace
     */
    readonly displayName: string;
    /**
     * A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true
     */
    readonly globalSettings: {[key: string]: string};
    /**
     * Whether the workspace has uncommitted changes (changes which were made after the workspace was committed)
     */
    readonly hasUncommittedChanges: boolean;
    /**
     * The latest commit id
     */
    readonly latestCommitId: string;
    /**
     * The timestamp when the workspace was committed.
     */
    readonly latestCommitTime: string;
    /**
     * Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     */
    readonly name: string;
    /**
     * The source engine details.
     */
    readonly source: outputs.datamigration.v1.DatabaseEngineInfoResponse;
    /**
     * The timestamp when the workspace resource was last updated.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single conversion workspace.
 */
export function getConversionWorkspaceOutput(args: GetConversionWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConversionWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getConversionWorkspace(a, opts))
}

export interface GetConversionWorkspaceOutputArgs {
    conversionWorkspaceId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
