// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new Data Fusion instance in the specified project and location.
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:datafusion/v1:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }


    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instancesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instancesId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["accelerators"] = args ? args.accelerators : undefined;
            inputs["apiEndpoint"] = args ? args.apiEndpoint : undefined;
            inputs["availableVersion"] = args ? args.availableVersion : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["dataprocServiceAccount"] = args ? args.dataprocServiceAccount : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["enableRbac"] = args ? args.enableRbac : undefined;
            inputs["enableStackdriverLogging"] = args ? args.enableStackdriverLogging : undefined;
            inputs["enableStackdriverMonitoring"] = args ? args.enableStackdriverMonitoring : undefined;
            inputs["gcsBucket"] = args ? args.gcsBucket : undefined;
            inputs["instancesId"] = args ? args.instancesId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkConfig"] = args ? args.networkConfig : undefined;
            inputs["options"] = args ? args.options : undefined;
            inputs["p4ServiceAccount"] = args ? args.p4ServiceAccount : undefined;
            inputs["privateInstance"] = args ? args.privateInstance : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            inputs["serviceEndpoint"] = args ? args.serviceEndpoint : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["stateMessage"] = args ? args.stateMessage : undefined;
            inputs["tenantProjectId"] = args ? args.tenantProjectId : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
            inputs["version"] = args ? args.version : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Instance.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * List of accelerators enabled for this CDF instance.
     */
    readonly accelerators?: pulumi.Input<pulumi.Input<inputs.datafusion.v1.Accelerator>[]>;
    /**
     * Output only. Endpoint on which the REST APIs is accessible.
     */
    readonly apiEndpoint?: pulumi.Input<string>;
    /**
     * Available versions that the instance can be upgraded to using UpdateInstanceRequest.
     */
    readonly availableVersion?: pulumi.Input<pulumi.Input<inputs.datafusion.v1.Version>[]>;
    /**
     * Output only. The time the instance was created.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.
     */
    readonly dataprocServiceAccount?: pulumi.Input<string>;
    /**
     * A description of this instance.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Display name for an instance.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Option to enable granular role-based access control.
     */
    readonly enableRbac?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Logging.
     */
    readonly enableStackdriverLogging?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Monitoring.
     */
    readonly enableStackdriverMonitoring?: pulumi.Input<boolean>;
    /**
     * Output only. Cloud Storage bucket generated by Data Fusion in the customer project.
     */
    readonly gcsBucket?: pulumi.Input<string>;
    readonly instancesId: pulumi.Input<string>;
    /**
     * The resource labels for instance to use to annotate any related underlying resources such as GCE VMs. The character '=' is not allowed to be used within the labels.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Output only. The name of this instance is in the form of projects/{project}/locations/{location}/instances/{instance}.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Network configuration options. These are required when a private Data Fusion instance is to be created.
     */
    readonly networkConfig?: pulumi.Input<inputs.datafusion.v1.NetworkConfig>;
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    readonly options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. P4 service account for the customer project.
     */
    readonly p4ServiceAccount?: pulumi.Input<string>;
    /**
     * Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.
     */
    readonly privateInstance?: pulumi.Input<boolean>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Output only. Deprecated. Use tenant_project_id instead to extract the tenant project ID.
     */
    readonly serviceAccount?: pulumi.Input<string>;
    /**
     * Output only. Endpoint on which the Data Fusion UI is accessible.
     */
    readonly serviceEndpoint?: pulumi.Input<string>;
    /**
     * Output only. The current state of this Data Fusion instance.
     */
    readonly state?: pulumi.Input<string>;
    /**
     * Output only. Additional information about the current state of this Data Fusion instance if available.
     */
    readonly stateMessage?: pulumi.Input<string>;
    /**
     * Output only. The name of the tenant project.
     */
    readonly tenantProjectId?: pulumi.Input<string>;
    /**
     * Required. Instance type.
     */
    readonly type?: pulumi.Input<string>;
    /**
     * Output only. The time the instance was last updated.
     */
    readonly updateTime?: pulumi.Input<string>;
    /**
     * Current version of the Data Fusion. Only specifiable in Update.
     */
    readonly version?: pulumi.Input<string>;
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    readonly zone?: pulumi.Input<string>;
}
