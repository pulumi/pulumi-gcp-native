// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details of a single Annotation.
 */
export function getAnnotation(args: GetAnnotationArgs, opts?: pulumi.InvokeOptions): Promise<GetAnnotationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:rapidmigrationassessment/v1:getAnnotation", {
        "annotationId": args.annotationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetAnnotationArgs {
    annotationId: string;
    location: string;
    project?: string;
}

export interface GetAnnotationResult {
    /**
     * Create time stamp.
     */
    readonly createTime: string;
    /**
     * Labels as key value pairs.
     */
    readonly labels: {[key: string]: string};
    /**
     * name of resource.
     */
    readonly name: string;
    /**
     * Type of an annotation.
     */
    readonly type: string;
    /**
     * Update time stamp.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single Annotation.
 */
export function getAnnotationOutput(args: GetAnnotationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnnotationResult> {
    return pulumi.output(args).apply((a: any) => getAnnotation(a, opts))
}

export interface GetAnnotationOutputArgs {
    annotationId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
