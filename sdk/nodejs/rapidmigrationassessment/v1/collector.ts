// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Create a Collector to manage the on-prem appliance which collects information about Customer assets.
 */
export class Collector extends pulumi.CustomResource {
    /**
     * Get an existing Collector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Collector {
        return new Collector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:rapidmigrationassessment/v1:Collector';

    /**
     * Returns true if the given object is an instance of Collector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Collector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collector.__pulumiType;
    }

    /**
     * Store cloud storage bucket name (which is a guid) created with this Collector.
     */
    public /*out*/ readonly bucket!: pulumi.Output<string>;
    /**
     * Client version.
     */
    public /*out*/ readonly clientVersion!: pulumi.Output<string>;
    /**
     * How many days to collect data.
     */
    public readonly collectionDays!: pulumi.Output<number>;
    /**
     * Required. Id of the requesting object.
     */
    public readonly collectorId!: pulumi.Output<string>;
    /**
     * Create time stamp.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * User specified description of the Collector.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * User specified name of the Collector.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Uri for EULA (End User License Agreement) from customer.
     */
    public readonly eulaUri!: pulumi.Output<string>;
    /**
     * User specified expected asset count.
     */
    public readonly expectedAssetCount!: pulumi.Output<string>;
    /**
     * Reference to MC Source Guest Os Scan.
     */
    public /*out*/ readonly guestOsScan!: pulumi.Output<outputs.rapidmigrationassessment.v1.GuestOsScanResponse>;
    /**
     * Labels as key value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * name of resource.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests.
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Service Account email used to ingest data to this Collector.
     */
    public readonly serviceAccount!: pulumi.Output<string>;
    /**
     * State of the Collector.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Update time stamp.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Reference to MC Source vsphere_scan.
     */
    public /*out*/ readonly vsphereScan!: pulumi.Output<outputs.rapidmigrationassessment.v1.VSphereScanResponse>;

    /**
     * Create a Collector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CollectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.collectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'collectorId'");
            }
            resourceInputs["collectionDays"] = args ? args.collectionDays : undefined;
            resourceInputs["collectorId"] = args ? args.collectorId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["eulaUri"] = args ? args.eulaUri : undefined;
            resourceInputs["expectedAssetCount"] = args ? args.expectedAssetCount : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["clientVersion"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["guestOsScan"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vsphereScan"] = undefined /*out*/;
        } else {
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["clientVersion"] = undefined /*out*/;
            resourceInputs["collectionDays"] = undefined /*out*/;
            resourceInputs["collectorId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["eulaUri"] = undefined /*out*/;
            resourceInputs["expectedAssetCount"] = undefined /*out*/;
            resourceInputs["guestOsScan"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["serviceAccount"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vsphereScan"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["collectorId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Collector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Collector resource.
 */
export interface CollectorArgs {
    /**
     * How many days to collect data.
     */
    collectionDays?: pulumi.Input<number>;
    /**
     * Required. Id of the requesting object.
     */
    collectorId: pulumi.Input<string>;
    /**
     * User specified description of the Collector.
     */
    description?: pulumi.Input<string>;
    /**
     * User specified name of the Collector.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Uri for EULA (End User License Agreement) from customer.
     */
    eulaUri?: pulumi.Input<string>;
    /**
     * User specified expected asset count.
     */
    expectedAssetCount?: pulumi.Input<string>;
    /**
     * Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * name of resource.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests.
     */
    requestId?: pulumi.Input<string>;
    /**
     * Service Account email used to ingest data to this Collector.
     */
    serviceAccount?: pulumi.Input<string>;
}
