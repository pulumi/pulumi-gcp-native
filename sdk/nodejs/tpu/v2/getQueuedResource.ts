// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a queued resource.
 */
export function getQueuedResource(args: GetQueuedResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetQueuedResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:tpu/v2:getQueuedResource", {
        "location": args.location,
        "project": args.project,
        "queuedResourceId": args.queuedResourceId,
    }, opts);
}

export interface GetQueuedResourceArgs {
    location: string;
    project?: string;
    queuedResourceId: string;
}

export interface GetQueuedResourceResult {
    /**
     * The time when the QueuedResource was created.
     */
    readonly createTime: string;
    /**
     * Optional. The Guaranteed tier
     */
    readonly guaranteed: outputs.tpu.v2.GuaranteedResponse;
    /**
     * Immutable. The name of the QueuedResource.
     */
    readonly name: string;
    /**
     * Optional. The queueing policy of the QueuedRequest.
     */
    readonly queueingPolicy: outputs.tpu.v2.QueueingPolicyResponse;
    /**
     * Optional. Name of the reservation in which the resource should be provisioned. Format: projects/{project}/locations/{zone}/reservations/{reservation}
     */
    readonly reservationName: string;
    /**
     * Optional. The Spot tier.
     */
    readonly spot: outputs.tpu.v2.SpotResponse;
    /**
     * State of the QueuedResource request.
     */
    readonly state: outputs.tpu.v2.QueuedResourceStateResponse;
    /**
     * Optional. Defines a TPU resource.
     */
    readonly tpu: outputs.tpu.v2.TpuResponse;
}
/**
 * Gets details of a queued resource.
 */
export function getQueuedResourceOutput(args: GetQueuedResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueuedResourceResult> {
    return pulumi.output(args).apply((a: any) => getQueuedResource(a, opts))
}

export interface GetQueuedResourceOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    queuedResourceId: pulumi.Input<string>;
}
