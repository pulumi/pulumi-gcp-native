// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details of a single ClientGateway.
 */
export function getClientGateway(args: GetClientGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetClientGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:beyondcorp/v1alpha:getClientGateway", {
        "clientGatewayId": args.clientGatewayId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetClientGatewayArgs {
    clientGatewayId: string;
    location: string;
    project?: string;
}

export interface GetClientGatewayResult {
    /**
     * The client connector service name that the client gateway is associated to. Client Connector Services, named as follows: `projects/{project_id}/locations/{location_id}/client_connector_services/{client_connector_service_id}`.
     */
    readonly clientConnectorService: string;
    /**
     * [Output only] Create time stamp.
     */
    readonly createTime: string;
    /**
     * name of resource. The name is ignored during creation.
     */
    readonly name: string;
    /**
     * The operational state of the gateway.
     */
    readonly state: string;
    /**
     * [Output only] Update time stamp.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single ClientGateway.
 */
export function getClientGatewayOutput(args: GetClientGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClientGatewayResult> {
    return pulumi.output(args).apply((a: any) => getClientGateway(a, opts))
}

export interface GetClientGatewayOutputArgs {
    clientGatewayId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
