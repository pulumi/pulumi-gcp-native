// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single ClientConnectorService.
 */
export function getClientConnectorService(args: GetClientConnectorServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetClientConnectorServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:beyondcorp/v1alpha:getClientConnectorService", {
        "clientConnectorServiceId": args.clientConnectorServiceId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetClientConnectorServiceArgs {
    clientConnectorServiceId: string;
    location: string;
    project?: string;
}

export interface GetClientConnectorServiceResult {
    /**
     * [Output only] Create time stamp.
     */
    readonly createTime: string;
    /**
     * Optional. User-provided name. The display name should follow certain format. * Must be 6 to 30 characters in length. * Can only contain lowercase letters, numbers, and hyphens. * Must start with a letter.
     */
    readonly displayName: string;
    /**
     * The details of the egress settings.
     */
    readonly egress: outputs.beyondcorp.v1alpha.EgressResponse;
    /**
     * The details of the ingress settings.
     */
    readonly ingress: outputs.beyondcorp.v1alpha.IngressResponse;
    /**
     * Name of resource. The name is ignored during creation.
     */
    readonly name: string;
    /**
     * The operational state of the ClientConnectorService.
     */
    readonly state: string;
    /**
     * [Output only] Update time stamp.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single ClientConnectorService.
 */
export function getClientConnectorServiceOutput(args: GetClientConnectorServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClientConnectorServiceResult> {
    return pulumi.output(args).apply((a: any) => getClientConnectorService(a, opts))
}

export interface GetClientConnectorServiceOutputArgs {
    clientConnectorServiceId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
