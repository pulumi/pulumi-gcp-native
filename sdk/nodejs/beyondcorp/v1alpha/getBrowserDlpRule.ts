// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single BrowserDlpRule.
 */
export function getBrowserDlpRule(args: GetBrowserDlpRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetBrowserDlpRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:beyondcorp/v1alpha:getBrowserDlpRule", {
        "browserDlpRuleId": args.browserDlpRuleId,
        "organizationId": args.organizationId,
        "partnerTenantId": args.partnerTenantId,
    }, opts);
}

export interface GetBrowserDlpRuleArgs {
    browserDlpRuleId: string;
    organizationId: string;
    partnerTenantId: string;
}

export interface GetBrowserDlpRuleResult {
    /**
     * The group to which this Rule should be applied to.
     */
    readonly group: outputs.beyondcorp.v1alpha.GoogleCloudBeyondcorpPartnerservicesV1alphaGroupResponse;
    /**
     * Unique resource name. The name is ignored when creating BrowserDlpRule.
     */
    readonly name: string;
    /**
     * The policy settings to apply.
     */
    readonly ruleSetting: outputs.beyondcorp.v1alpha.GoogleCloudBeyondcorpPartnerservicesV1alphaRuleSettingResponse;
}
/**
 * Gets details of a single BrowserDlpRule.
 */
export function getBrowserDlpRuleOutput(args: GetBrowserDlpRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBrowserDlpRuleResult> {
    return pulumi.output(args).apply((a: any) => getBrowserDlpRule(a, opts))
}

export interface GetBrowserDlpRuleOutputArgs {
    browserDlpRuleId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    partnerTenantId: pulumi.Input<string>;
}
