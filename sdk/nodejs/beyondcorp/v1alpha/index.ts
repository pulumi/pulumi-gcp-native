// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AppConnectionArgs } from "./appConnection";
export type AppConnection = import("./appConnection").AppConnection;
export const AppConnection: typeof import("./appConnection").AppConnection = null as any;

export { AppConnectionIamBindingArgs } from "./appConnectionIamBinding";
export type AppConnectionIamBinding = import("./appConnectionIamBinding").AppConnectionIamBinding;
export const AppConnectionIamBinding: typeof import("./appConnectionIamBinding").AppConnectionIamBinding = null as any;

export { AppConnectionIamMemberArgs } from "./appConnectionIamMember";
export type AppConnectionIamMember = import("./appConnectionIamMember").AppConnectionIamMember;
export const AppConnectionIamMember: typeof import("./appConnectionIamMember").AppConnectionIamMember = null as any;

export { AppConnectionIamPolicyArgs } from "./appConnectionIamPolicy";
export type AppConnectionIamPolicy = import("./appConnectionIamPolicy").AppConnectionIamPolicy;
export const AppConnectionIamPolicy: typeof import("./appConnectionIamPolicy").AppConnectionIamPolicy = null as any;

export { AppConnectorArgs } from "./appConnector";
export type AppConnector = import("./appConnector").AppConnector;
export const AppConnector: typeof import("./appConnector").AppConnector = null as any;

export { AppConnectorIamBindingArgs } from "./appConnectorIamBinding";
export type AppConnectorIamBinding = import("./appConnectorIamBinding").AppConnectorIamBinding;
export const AppConnectorIamBinding: typeof import("./appConnectorIamBinding").AppConnectorIamBinding = null as any;

export { AppConnectorIamMemberArgs } from "./appConnectorIamMember";
export type AppConnectorIamMember = import("./appConnectorIamMember").AppConnectorIamMember;
export const AppConnectorIamMember: typeof import("./appConnectorIamMember").AppConnectorIamMember = null as any;

export { AppConnectorIamPolicyArgs } from "./appConnectorIamPolicy";
export type AppConnectorIamPolicy = import("./appConnectorIamPolicy").AppConnectorIamPolicy;
export const AppConnectorIamPolicy: typeof import("./appConnectorIamPolicy").AppConnectorIamPolicy = null as any;

export { AppGatewayArgs } from "./appGateway";
export type AppGateway = import("./appGateway").AppGateway;
export const AppGateway: typeof import("./appGateway").AppGateway = null as any;

export { AppGatewayIamBindingArgs } from "./appGatewayIamBinding";
export type AppGatewayIamBinding = import("./appGatewayIamBinding").AppGatewayIamBinding;
export const AppGatewayIamBinding: typeof import("./appGatewayIamBinding").AppGatewayIamBinding = null as any;

export { AppGatewayIamMemberArgs } from "./appGatewayIamMember";
export type AppGatewayIamMember = import("./appGatewayIamMember").AppGatewayIamMember;
export const AppGatewayIamMember: typeof import("./appGatewayIamMember").AppGatewayIamMember = null as any;

export { AppGatewayIamPolicyArgs } from "./appGatewayIamPolicy";
export type AppGatewayIamPolicy = import("./appGatewayIamPolicy").AppGatewayIamPolicy;
export const AppGatewayIamPolicy: typeof import("./appGatewayIamPolicy").AppGatewayIamPolicy = null as any;

export { ApplicationIamBindingArgs } from "./applicationIamBinding";
export type ApplicationIamBinding = import("./applicationIamBinding").ApplicationIamBinding;
export const ApplicationIamBinding: typeof import("./applicationIamBinding").ApplicationIamBinding = null as any;

export { ApplicationIamMemberArgs } from "./applicationIamMember";
export type ApplicationIamMember = import("./applicationIamMember").ApplicationIamMember;
export const ApplicationIamMember: typeof import("./applicationIamMember").ApplicationIamMember = null as any;

export { ApplicationIamPolicyArgs } from "./applicationIamPolicy";
export type ApplicationIamPolicy = import("./applicationIamPolicy").ApplicationIamPolicy;
export const ApplicationIamPolicy: typeof import("./applicationIamPolicy").ApplicationIamPolicy = null as any;

export { ClientConnectorServiceArgs } from "./clientConnectorService";
export type ClientConnectorService = import("./clientConnectorService").ClientConnectorService;
export const ClientConnectorService: typeof import("./clientConnectorService").ClientConnectorService = null as any;

export { ClientConnectorServiceIamBindingArgs } from "./clientConnectorServiceIamBinding";
export type ClientConnectorServiceIamBinding = import("./clientConnectorServiceIamBinding").ClientConnectorServiceIamBinding;
export const ClientConnectorServiceIamBinding: typeof import("./clientConnectorServiceIamBinding").ClientConnectorServiceIamBinding = null as any;

export { ClientConnectorServiceIamMemberArgs } from "./clientConnectorServiceIamMember";
export type ClientConnectorServiceIamMember = import("./clientConnectorServiceIamMember").ClientConnectorServiceIamMember;
export const ClientConnectorServiceIamMember: typeof import("./clientConnectorServiceIamMember").ClientConnectorServiceIamMember = null as any;

export { ClientConnectorServiceIamPolicyArgs } from "./clientConnectorServiceIamPolicy";
export type ClientConnectorServiceIamPolicy = import("./clientConnectorServiceIamPolicy").ClientConnectorServiceIamPolicy;
export const ClientConnectorServiceIamPolicy: typeof import("./clientConnectorServiceIamPolicy").ClientConnectorServiceIamPolicy = null as any;

export { ClientGatewayArgs } from "./clientGateway";
export type ClientGateway = import("./clientGateway").ClientGateway;
export const ClientGateway: typeof import("./clientGateway").ClientGateway = null as any;

export { ClientGatewayIamBindingArgs } from "./clientGatewayIamBinding";
export type ClientGatewayIamBinding = import("./clientGatewayIamBinding").ClientGatewayIamBinding;
export const ClientGatewayIamBinding: typeof import("./clientGatewayIamBinding").ClientGatewayIamBinding = null as any;

export { ClientGatewayIamMemberArgs } from "./clientGatewayIamMember";
export type ClientGatewayIamMember = import("./clientGatewayIamMember").ClientGatewayIamMember;
export const ClientGatewayIamMember: typeof import("./clientGatewayIamMember").ClientGatewayIamMember = null as any;

export { ClientGatewayIamPolicyArgs } from "./clientGatewayIamPolicy";
export type ClientGatewayIamPolicy = import("./clientGatewayIamPolicy").ClientGatewayIamPolicy;
export const ClientGatewayIamPolicy: typeof import("./clientGatewayIamPolicy").ClientGatewayIamPolicy = null as any;

export { ConnectionArgs } from "./connection";
export type Connection = import("./connection").Connection;
export const Connection: typeof import("./connection").Connection = null as any;

export { ConnectionIamBindingArgs } from "./connectionIamBinding";
export type ConnectionIamBinding = import("./connectionIamBinding").ConnectionIamBinding;
export const ConnectionIamBinding: typeof import("./connectionIamBinding").ConnectionIamBinding = null as any;

export { ConnectionIamMemberArgs } from "./connectionIamMember";
export type ConnectionIamMember = import("./connectionIamMember").ConnectionIamMember;
export const ConnectionIamMember: typeof import("./connectionIamMember").ConnectionIamMember = null as any;

export { ConnectionIamPolicyArgs } from "./connectionIamPolicy";
export type ConnectionIamPolicy = import("./connectionIamPolicy").ConnectionIamPolicy;
export const ConnectionIamPolicy: typeof import("./connectionIamPolicy").ConnectionIamPolicy = null as any;

export { ConnectorArgs } from "./connector";
export type Connector = import("./connector").Connector;
export const Connector: typeof import("./connector").Connector = null as any;

export { ConnectorIamBindingArgs } from "./connectorIamBinding";
export type ConnectorIamBinding = import("./connectorIamBinding").ConnectorIamBinding;
export const ConnectorIamBinding: typeof import("./connectorIamBinding").ConnectorIamBinding = null as any;

export { ConnectorIamMemberArgs } from "./connectorIamMember";
export type ConnectorIamMember = import("./connectorIamMember").ConnectorIamMember;
export const ConnectorIamMember: typeof import("./connectorIamMember").ConnectorIamMember = null as any;

export { ConnectorIamPolicyArgs } from "./connectorIamPolicy";
export type ConnectorIamPolicy = import("./connectorIamPolicy").ConnectorIamPolicy;
export const ConnectorIamPolicy: typeof import("./connectorIamPolicy").ConnectorIamPolicy = null as any;

export { GetAppConnectionArgs, GetAppConnectionResult, GetAppConnectionOutputArgs } from "./getAppConnection";
export const getAppConnection: typeof import("./getAppConnection").getAppConnection = null as any;
export const getAppConnectionOutput: typeof import("./getAppConnection").getAppConnectionOutput = null as any;

export { GetAppConnectionIamPolicyArgs, GetAppConnectionIamPolicyResult, GetAppConnectionIamPolicyOutputArgs } from "./getAppConnectionIamPolicy";
export const getAppConnectionIamPolicy: typeof import("./getAppConnectionIamPolicy").getAppConnectionIamPolicy = null as any;
export const getAppConnectionIamPolicyOutput: typeof import("./getAppConnectionIamPolicy").getAppConnectionIamPolicyOutput = null as any;

export { GetAppConnectorArgs, GetAppConnectorResult, GetAppConnectorOutputArgs } from "./getAppConnector";
export const getAppConnector: typeof import("./getAppConnector").getAppConnector = null as any;
export const getAppConnectorOutput: typeof import("./getAppConnector").getAppConnectorOutput = null as any;

export { GetAppConnectorIamPolicyArgs, GetAppConnectorIamPolicyResult, GetAppConnectorIamPolicyOutputArgs } from "./getAppConnectorIamPolicy";
export const getAppConnectorIamPolicy: typeof import("./getAppConnectorIamPolicy").getAppConnectorIamPolicy = null as any;
export const getAppConnectorIamPolicyOutput: typeof import("./getAppConnectorIamPolicy").getAppConnectorIamPolicyOutput = null as any;

export { GetAppGatewayArgs, GetAppGatewayResult, GetAppGatewayOutputArgs } from "./getAppGateway";
export const getAppGateway: typeof import("./getAppGateway").getAppGateway = null as any;
export const getAppGatewayOutput: typeof import("./getAppGateway").getAppGatewayOutput = null as any;

export { GetAppGatewayIamPolicyArgs, GetAppGatewayIamPolicyResult, GetAppGatewayIamPolicyOutputArgs } from "./getAppGatewayIamPolicy";
export const getAppGatewayIamPolicy: typeof import("./getAppGatewayIamPolicy").getAppGatewayIamPolicy = null as any;
export const getAppGatewayIamPolicyOutput: typeof import("./getAppGatewayIamPolicy").getAppGatewayIamPolicyOutput = null as any;

export { GetApplicationIamPolicyArgs, GetApplicationIamPolicyResult, GetApplicationIamPolicyOutputArgs } from "./getApplicationIamPolicy";
export const getApplicationIamPolicy: typeof import("./getApplicationIamPolicy").getApplicationIamPolicy = null as any;
export const getApplicationIamPolicyOutput: typeof import("./getApplicationIamPolicy").getApplicationIamPolicyOutput = null as any;

export { GetClientConnectorServiceArgs, GetClientConnectorServiceResult, GetClientConnectorServiceOutputArgs } from "./getClientConnectorService";
export const getClientConnectorService: typeof import("./getClientConnectorService").getClientConnectorService = null as any;
export const getClientConnectorServiceOutput: typeof import("./getClientConnectorService").getClientConnectorServiceOutput = null as any;

export { GetClientConnectorServiceIamPolicyArgs, GetClientConnectorServiceIamPolicyResult, GetClientConnectorServiceIamPolicyOutputArgs } from "./getClientConnectorServiceIamPolicy";
export const getClientConnectorServiceIamPolicy: typeof import("./getClientConnectorServiceIamPolicy").getClientConnectorServiceIamPolicy = null as any;
export const getClientConnectorServiceIamPolicyOutput: typeof import("./getClientConnectorServiceIamPolicy").getClientConnectorServiceIamPolicyOutput = null as any;

export { GetClientGatewayArgs, GetClientGatewayResult, GetClientGatewayOutputArgs } from "./getClientGateway";
export const getClientGateway: typeof import("./getClientGateway").getClientGateway = null as any;
export const getClientGatewayOutput: typeof import("./getClientGateway").getClientGatewayOutput = null as any;

export { GetClientGatewayIamPolicyArgs, GetClientGatewayIamPolicyResult, GetClientGatewayIamPolicyOutputArgs } from "./getClientGatewayIamPolicy";
export const getClientGatewayIamPolicy: typeof import("./getClientGatewayIamPolicy").getClientGatewayIamPolicy = null as any;
export const getClientGatewayIamPolicyOutput: typeof import("./getClientGatewayIamPolicy").getClientGatewayIamPolicyOutput = null as any;

export { GetConnectionArgs, GetConnectionResult, GetConnectionOutputArgs } from "./getConnection";
export const getConnection: typeof import("./getConnection").getConnection = null as any;
export const getConnectionOutput: typeof import("./getConnection").getConnectionOutput = null as any;

export { GetConnectionIamPolicyArgs, GetConnectionIamPolicyResult, GetConnectionIamPolicyOutputArgs } from "./getConnectionIamPolicy";
export const getConnectionIamPolicy: typeof import("./getConnectionIamPolicy").getConnectionIamPolicy = null as any;
export const getConnectionIamPolicyOutput: typeof import("./getConnectionIamPolicy").getConnectionIamPolicyOutput = null as any;

export { GetConnectorArgs, GetConnectorResult, GetConnectorOutputArgs } from "./getConnector";
export const getConnector: typeof import("./getConnector").getConnector = null as any;
export const getConnectorOutput: typeof import("./getConnector").getConnectorOutput = null as any;

export { GetConnectorIamPolicyArgs, GetConnectorIamPolicyResult, GetConnectorIamPolicyOutputArgs } from "./getConnectorIamPolicy";
export const getConnectorIamPolicy: typeof import("./getConnectorIamPolicy").getConnectorIamPolicy = null as any;
export const getConnectorIamPolicyOutput: typeof import("./getConnectorIamPolicy").getConnectorIamPolicyOutput = null as any;

utilities.lazyLoad(exports, ["AppConnection"], () => require("./appConnection"));
utilities.lazyLoad(exports, ["AppConnectionIamBinding"], () => require("./appConnectionIamBinding"));
utilities.lazyLoad(exports, ["AppConnectionIamMember"], () => require("./appConnectionIamMember"));
utilities.lazyLoad(exports, ["AppConnectionIamPolicy"], () => require("./appConnectionIamPolicy"));
utilities.lazyLoad(exports, ["AppConnector"], () => require("./appConnector"));
utilities.lazyLoad(exports, ["AppConnectorIamBinding"], () => require("./appConnectorIamBinding"));
utilities.lazyLoad(exports, ["AppConnectorIamMember"], () => require("./appConnectorIamMember"));
utilities.lazyLoad(exports, ["AppConnectorIamPolicy"], () => require("./appConnectorIamPolicy"));
utilities.lazyLoad(exports, ["AppGateway"], () => require("./appGateway"));
utilities.lazyLoad(exports, ["AppGatewayIamBinding"], () => require("./appGatewayIamBinding"));
utilities.lazyLoad(exports, ["AppGatewayIamMember"], () => require("./appGatewayIamMember"));
utilities.lazyLoad(exports, ["AppGatewayIamPolicy"], () => require("./appGatewayIamPolicy"));
utilities.lazyLoad(exports, ["ApplicationIamBinding"], () => require("./applicationIamBinding"));
utilities.lazyLoad(exports, ["ApplicationIamMember"], () => require("./applicationIamMember"));
utilities.lazyLoad(exports, ["ApplicationIamPolicy"], () => require("./applicationIamPolicy"));
utilities.lazyLoad(exports, ["ClientConnectorService"], () => require("./clientConnectorService"));
utilities.lazyLoad(exports, ["ClientConnectorServiceIamBinding"], () => require("./clientConnectorServiceIamBinding"));
utilities.lazyLoad(exports, ["ClientConnectorServiceIamMember"], () => require("./clientConnectorServiceIamMember"));
utilities.lazyLoad(exports, ["ClientConnectorServiceIamPolicy"], () => require("./clientConnectorServiceIamPolicy"));
utilities.lazyLoad(exports, ["ClientGateway"], () => require("./clientGateway"));
utilities.lazyLoad(exports, ["ClientGatewayIamBinding"], () => require("./clientGatewayIamBinding"));
utilities.lazyLoad(exports, ["ClientGatewayIamMember"], () => require("./clientGatewayIamMember"));
utilities.lazyLoad(exports, ["ClientGatewayIamPolicy"], () => require("./clientGatewayIamPolicy"));
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
utilities.lazyLoad(exports, ["ConnectionIamBinding"], () => require("./connectionIamBinding"));
utilities.lazyLoad(exports, ["ConnectionIamMember"], () => require("./connectionIamMember"));
utilities.lazyLoad(exports, ["ConnectionIamPolicy"], () => require("./connectionIamPolicy"));
utilities.lazyLoad(exports, ["Connector"], () => require("./connector"));
utilities.lazyLoad(exports, ["ConnectorIamBinding"], () => require("./connectorIamBinding"));
utilities.lazyLoad(exports, ["ConnectorIamMember"], () => require("./connectorIamMember"));
utilities.lazyLoad(exports, ["ConnectorIamPolicy"], () => require("./connectorIamPolicy"));
utilities.lazyLoad(exports, ["getAppConnection","getAppConnectionOutput"], () => require("./getAppConnection"));
utilities.lazyLoad(exports, ["getAppConnectionIamPolicy","getAppConnectionIamPolicyOutput"], () => require("./getAppConnectionIamPolicy"));
utilities.lazyLoad(exports, ["getAppConnector","getAppConnectorOutput"], () => require("./getAppConnector"));
utilities.lazyLoad(exports, ["getAppConnectorIamPolicy","getAppConnectorIamPolicyOutput"], () => require("./getAppConnectorIamPolicy"));
utilities.lazyLoad(exports, ["getAppGateway","getAppGatewayOutput"], () => require("./getAppGateway"));
utilities.lazyLoad(exports, ["getAppGatewayIamPolicy","getAppGatewayIamPolicyOutput"], () => require("./getAppGatewayIamPolicy"));
utilities.lazyLoad(exports, ["getApplicationIamPolicy","getApplicationIamPolicyOutput"], () => require("./getApplicationIamPolicy"));
utilities.lazyLoad(exports, ["getClientConnectorService","getClientConnectorServiceOutput"], () => require("./getClientConnectorService"));
utilities.lazyLoad(exports, ["getClientConnectorServiceIamPolicy","getClientConnectorServiceIamPolicyOutput"], () => require("./getClientConnectorServiceIamPolicy"));
utilities.lazyLoad(exports, ["getClientGateway","getClientGatewayOutput"], () => require("./getClientGateway"));
utilities.lazyLoad(exports, ["getClientGatewayIamPolicy","getClientGatewayIamPolicyOutput"], () => require("./getClientGatewayIamPolicy"));
utilities.lazyLoad(exports, ["getConnection","getConnectionOutput"], () => require("./getConnection"));
utilities.lazyLoad(exports, ["getConnectionIamPolicy","getConnectionIamPolicyOutput"], () => require("./getConnectionIamPolicy"));
utilities.lazyLoad(exports, ["getConnector","getConnectorOutput"], () => require("./getConnector"));
utilities.lazyLoad(exports, ["getConnectorIamPolicy","getConnectorIamPolicyOutput"], () => require("./getConnectorIamPolicy"));

// Export enums:
export * from "../../types/enums/beyondcorp/v1alpha";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:beyondcorp/v1alpha:AppConnection":
                return new AppConnection(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectionIamBinding":
                return new AppConnectionIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectionIamMember":
                return new AppConnectionIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectionIamPolicy":
                return new AppConnectionIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnector":
                return new AppConnector(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectorIamBinding":
                return new AppConnectorIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectorIamMember":
                return new AppConnectorIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppConnectorIamPolicy":
                return new AppConnectorIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppGateway":
                return new AppGateway(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppGatewayIamBinding":
                return new AppGatewayIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppGatewayIamMember":
                return new AppGatewayIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:AppGatewayIamPolicy":
                return new AppGatewayIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ApplicationIamBinding":
                return new ApplicationIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ApplicationIamMember":
                return new ApplicationIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ApplicationIamPolicy":
                return new ApplicationIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientConnectorService":
                return new ClientConnectorService(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientConnectorServiceIamBinding":
                return new ClientConnectorServiceIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientConnectorServiceIamMember":
                return new ClientConnectorServiceIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientConnectorServiceIamPolicy":
                return new ClientConnectorServiceIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientGateway":
                return new ClientGateway(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientGatewayIamBinding":
                return new ClientGatewayIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientGatewayIamMember":
                return new ClientGatewayIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ClientGatewayIamPolicy":
                return new ClientGatewayIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:Connection":
                return new Connection(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectionIamBinding":
                return new ConnectionIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectionIamMember":
                return new ConnectionIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectionIamPolicy":
                return new ConnectionIamPolicy(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:Connector":
                return new Connector(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectorIamBinding":
                return new ConnectorIamBinding(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectorIamMember":
                return new ConnectorIamMember(name, <any>undefined, { urn })
            case "google-native:beyondcorp/v1alpha:ConnectorIamPolicy":
                return new ConnectorIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "beyondcorp/v1alpha", _module)
