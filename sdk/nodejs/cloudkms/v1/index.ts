// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { CryptoKeyArgs } from "./cryptoKey";
export type CryptoKey = import("./cryptoKey").CryptoKey;
export const CryptoKey: typeof import("./cryptoKey").CryptoKey = null as any;
utilities.lazyLoad(exports, ["CryptoKey"], () => require("./cryptoKey"));

export { CryptoKeyVersionArgs } from "./cryptoKeyVersion";
export type CryptoKeyVersion = import("./cryptoKeyVersion").CryptoKeyVersion;
export const CryptoKeyVersion: typeof import("./cryptoKeyVersion").CryptoKeyVersion = null as any;
utilities.lazyLoad(exports, ["CryptoKeyVersion"], () => require("./cryptoKeyVersion"));

export { EkmConfigIamBindingArgs } from "./ekmConfigIamBinding";
export type EkmConfigIamBinding = import("./ekmConfigIamBinding").EkmConfigIamBinding;
export const EkmConfigIamBinding: typeof import("./ekmConfigIamBinding").EkmConfigIamBinding = null as any;
utilities.lazyLoad(exports, ["EkmConfigIamBinding"], () => require("./ekmConfigIamBinding"));

export { EkmConfigIamMemberArgs } from "./ekmConfigIamMember";
export type EkmConfigIamMember = import("./ekmConfigIamMember").EkmConfigIamMember;
export const EkmConfigIamMember: typeof import("./ekmConfigIamMember").EkmConfigIamMember = null as any;
utilities.lazyLoad(exports, ["EkmConfigIamMember"], () => require("./ekmConfigIamMember"));

export { EkmConfigIamPolicyArgs } from "./ekmConfigIamPolicy";
export type EkmConfigIamPolicy = import("./ekmConfigIamPolicy").EkmConfigIamPolicy;
export const EkmConfigIamPolicy: typeof import("./ekmConfigIamPolicy").EkmConfigIamPolicy = null as any;
utilities.lazyLoad(exports, ["EkmConfigIamPolicy"], () => require("./ekmConfigIamPolicy"));

export { EkmConnectionArgs } from "./ekmConnection";
export type EkmConnection = import("./ekmConnection").EkmConnection;
export const EkmConnection: typeof import("./ekmConnection").EkmConnection = null as any;
utilities.lazyLoad(exports, ["EkmConnection"], () => require("./ekmConnection"));

export { EkmConnectionIamBindingArgs } from "./ekmConnectionIamBinding";
export type EkmConnectionIamBinding = import("./ekmConnectionIamBinding").EkmConnectionIamBinding;
export const EkmConnectionIamBinding: typeof import("./ekmConnectionIamBinding").EkmConnectionIamBinding = null as any;
utilities.lazyLoad(exports, ["EkmConnectionIamBinding"], () => require("./ekmConnectionIamBinding"));

export { EkmConnectionIamMemberArgs } from "./ekmConnectionIamMember";
export type EkmConnectionIamMember = import("./ekmConnectionIamMember").EkmConnectionIamMember;
export const EkmConnectionIamMember: typeof import("./ekmConnectionIamMember").EkmConnectionIamMember = null as any;
utilities.lazyLoad(exports, ["EkmConnectionIamMember"], () => require("./ekmConnectionIamMember"));

export { EkmConnectionIamPolicyArgs } from "./ekmConnectionIamPolicy";
export type EkmConnectionIamPolicy = import("./ekmConnectionIamPolicy").EkmConnectionIamPolicy;
export const EkmConnectionIamPolicy: typeof import("./ekmConnectionIamPolicy").EkmConnectionIamPolicy = null as any;
utilities.lazyLoad(exports, ["EkmConnectionIamPolicy"], () => require("./ekmConnectionIamPolicy"));

export { GetCryptoKeyArgs, GetCryptoKeyResult, GetCryptoKeyOutputArgs } from "./getCryptoKey";
export const getCryptoKey: typeof import("./getCryptoKey").getCryptoKey = null as any;
export const getCryptoKeyOutput: typeof import("./getCryptoKey").getCryptoKeyOutput = null as any;
utilities.lazyLoad(exports, ["getCryptoKey","getCryptoKeyOutput"], () => require("./getCryptoKey"));

export { GetCryptoKeyVersionArgs, GetCryptoKeyVersionResult, GetCryptoKeyVersionOutputArgs } from "./getCryptoKeyVersion";
export const getCryptoKeyVersion: typeof import("./getCryptoKeyVersion").getCryptoKeyVersion = null as any;
export const getCryptoKeyVersionOutput: typeof import("./getCryptoKeyVersion").getCryptoKeyVersionOutput = null as any;
utilities.lazyLoad(exports, ["getCryptoKeyVersion","getCryptoKeyVersionOutput"], () => require("./getCryptoKeyVersion"));

export { GetEkmConfigIamPolicyArgs, GetEkmConfigIamPolicyResult, GetEkmConfigIamPolicyOutputArgs } from "./getEkmConfigIamPolicy";
export const getEkmConfigIamPolicy: typeof import("./getEkmConfigIamPolicy").getEkmConfigIamPolicy = null as any;
export const getEkmConfigIamPolicyOutput: typeof import("./getEkmConfigIamPolicy").getEkmConfigIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getEkmConfigIamPolicy","getEkmConfigIamPolicyOutput"], () => require("./getEkmConfigIamPolicy"));

export { GetEkmConnectionArgs, GetEkmConnectionResult, GetEkmConnectionOutputArgs } from "./getEkmConnection";
export const getEkmConnection: typeof import("./getEkmConnection").getEkmConnection = null as any;
export const getEkmConnectionOutput: typeof import("./getEkmConnection").getEkmConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getEkmConnection","getEkmConnectionOutput"], () => require("./getEkmConnection"));

export { GetEkmConnectionIamPolicyArgs, GetEkmConnectionIamPolicyResult, GetEkmConnectionIamPolicyOutputArgs } from "./getEkmConnectionIamPolicy";
export const getEkmConnectionIamPolicy: typeof import("./getEkmConnectionIamPolicy").getEkmConnectionIamPolicy = null as any;
export const getEkmConnectionIamPolicyOutput: typeof import("./getEkmConnectionIamPolicy").getEkmConnectionIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getEkmConnectionIamPolicy","getEkmConnectionIamPolicyOutput"], () => require("./getEkmConnectionIamPolicy"));

export { GetImportJobArgs, GetImportJobResult, GetImportJobOutputArgs } from "./getImportJob";
export const getImportJob: typeof import("./getImportJob").getImportJob = null as any;
export const getImportJobOutput: typeof import("./getImportJob").getImportJobOutput = null as any;
utilities.lazyLoad(exports, ["getImportJob","getImportJobOutput"], () => require("./getImportJob"));

export { GetKeyRingArgs, GetKeyRingResult, GetKeyRingOutputArgs } from "./getKeyRing";
export const getKeyRing: typeof import("./getKeyRing").getKeyRing = null as any;
export const getKeyRingOutput: typeof import("./getKeyRing").getKeyRingOutput = null as any;
utilities.lazyLoad(exports, ["getKeyRing","getKeyRingOutput"], () => require("./getKeyRing"));

export { GetKeyRingCryptoKeyIamPolicyArgs, GetKeyRingCryptoKeyIamPolicyResult, GetKeyRingCryptoKeyIamPolicyOutputArgs } from "./getKeyRingCryptoKeyIamPolicy";
export const getKeyRingCryptoKeyIamPolicy: typeof import("./getKeyRingCryptoKeyIamPolicy").getKeyRingCryptoKeyIamPolicy = null as any;
export const getKeyRingCryptoKeyIamPolicyOutput: typeof import("./getKeyRingCryptoKeyIamPolicy").getKeyRingCryptoKeyIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getKeyRingCryptoKeyIamPolicy","getKeyRingCryptoKeyIamPolicyOutput"], () => require("./getKeyRingCryptoKeyIamPolicy"));

export { GetKeyRingIamPolicyArgs, GetKeyRingIamPolicyResult, GetKeyRingIamPolicyOutputArgs } from "./getKeyRingIamPolicy";
export const getKeyRingIamPolicy: typeof import("./getKeyRingIamPolicy").getKeyRingIamPolicy = null as any;
export const getKeyRingIamPolicyOutput: typeof import("./getKeyRingIamPolicy").getKeyRingIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getKeyRingIamPolicy","getKeyRingIamPolicyOutput"], () => require("./getKeyRingIamPolicy"));

export { GetKeyRingImportJobIamPolicyArgs, GetKeyRingImportJobIamPolicyResult, GetKeyRingImportJobIamPolicyOutputArgs } from "./getKeyRingImportJobIamPolicy";
export const getKeyRingImportJobIamPolicy: typeof import("./getKeyRingImportJobIamPolicy").getKeyRingImportJobIamPolicy = null as any;
export const getKeyRingImportJobIamPolicyOutput: typeof import("./getKeyRingImportJobIamPolicy").getKeyRingImportJobIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getKeyRingImportJobIamPolicy","getKeyRingImportJobIamPolicyOutput"], () => require("./getKeyRingImportJobIamPolicy"));

export { ImportJobArgs } from "./importJob";
export type ImportJob = import("./importJob").ImportJob;
export const ImportJob: typeof import("./importJob").ImportJob = null as any;
utilities.lazyLoad(exports, ["ImportJob"], () => require("./importJob"));

export { KeyRingArgs } from "./keyRing";
export type KeyRing = import("./keyRing").KeyRing;
export const KeyRing: typeof import("./keyRing").KeyRing = null as any;
utilities.lazyLoad(exports, ["KeyRing"], () => require("./keyRing"));

export { KeyRingCryptoKeyIamBindingArgs } from "./keyRingCryptoKeyIamBinding";
export type KeyRingCryptoKeyIamBinding = import("./keyRingCryptoKeyIamBinding").KeyRingCryptoKeyIamBinding;
export const KeyRingCryptoKeyIamBinding: typeof import("./keyRingCryptoKeyIamBinding").KeyRingCryptoKeyIamBinding = null as any;
utilities.lazyLoad(exports, ["KeyRingCryptoKeyIamBinding"], () => require("./keyRingCryptoKeyIamBinding"));

export { KeyRingCryptoKeyIamMemberArgs } from "./keyRingCryptoKeyIamMember";
export type KeyRingCryptoKeyIamMember = import("./keyRingCryptoKeyIamMember").KeyRingCryptoKeyIamMember;
export const KeyRingCryptoKeyIamMember: typeof import("./keyRingCryptoKeyIamMember").KeyRingCryptoKeyIamMember = null as any;
utilities.lazyLoad(exports, ["KeyRingCryptoKeyIamMember"], () => require("./keyRingCryptoKeyIamMember"));

export { KeyRingCryptoKeyIamPolicyArgs } from "./keyRingCryptoKeyIamPolicy";
export type KeyRingCryptoKeyIamPolicy = import("./keyRingCryptoKeyIamPolicy").KeyRingCryptoKeyIamPolicy;
export const KeyRingCryptoKeyIamPolicy: typeof import("./keyRingCryptoKeyIamPolicy").KeyRingCryptoKeyIamPolicy = null as any;
utilities.lazyLoad(exports, ["KeyRingCryptoKeyIamPolicy"], () => require("./keyRingCryptoKeyIamPolicy"));

export { KeyRingIamBindingArgs } from "./keyRingIamBinding";
export type KeyRingIamBinding = import("./keyRingIamBinding").KeyRingIamBinding;
export const KeyRingIamBinding: typeof import("./keyRingIamBinding").KeyRingIamBinding = null as any;
utilities.lazyLoad(exports, ["KeyRingIamBinding"], () => require("./keyRingIamBinding"));

export { KeyRingIamMemberArgs } from "./keyRingIamMember";
export type KeyRingIamMember = import("./keyRingIamMember").KeyRingIamMember;
export const KeyRingIamMember: typeof import("./keyRingIamMember").KeyRingIamMember = null as any;
utilities.lazyLoad(exports, ["KeyRingIamMember"], () => require("./keyRingIamMember"));

export { KeyRingIamPolicyArgs } from "./keyRingIamPolicy";
export type KeyRingIamPolicy = import("./keyRingIamPolicy").KeyRingIamPolicy;
export const KeyRingIamPolicy: typeof import("./keyRingIamPolicy").KeyRingIamPolicy = null as any;
utilities.lazyLoad(exports, ["KeyRingIamPolicy"], () => require("./keyRingIamPolicy"));

export { KeyRingImportJobIamBindingArgs } from "./keyRingImportJobIamBinding";
export type KeyRingImportJobIamBinding = import("./keyRingImportJobIamBinding").KeyRingImportJobIamBinding;
export const KeyRingImportJobIamBinding: typeof import("./keyRingImportJobIamBinding").KeyRingImportJobIamBinding = null as any;
utilities.lazyLoad(exports, ["KeyRingImportJobIamBinding"], () => require("./keyRingImportJobIamBinding"));

export { KeyRingImportJobIamMemberArgs } from "./keyRingImportJobIamMember";
export type KeyRingImportJobIamMember = import("./keyRingImportJobIamMember").KeyRingImportJobIamMember;
export const KeyRingImportJobIamMember: typeof import("./keyRingImportJobIamMember").KeyRingImportJobIamMember = null as any;
utilities.lazyLoad(exports, ["KeyRingImportJobIamMember"], () => require("./keyRingImportJobIamMember"));

export { KeyRingImportJobIamPolicyArgs } from "./keyRingImportJobIamPolicy";
export type KeyRingImportJobIamPolicy = import("./keyRingImportJobIamPolicy").KeyRingImportJobIamPolicy;
export const KeyRingImportJobIamPolicy: typeof import("./keyRingImportJobIamPolicy").KeyRingImportJobIamPolicy = null as any;
utilities.lazyLoad(exports, ["KeyRingImportJobIamPolicy"], () => require("./keyRingImportJobIamPolicy"));


// Export enums:
export * from "../../types/enums/cloudkms/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:cloudkms/v1:CryptoKey":
                return new CryptoKey(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:CryptoKeyVersion":
                return new CryptoKeyVersion(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConfigIamBinding":
                return new EkmConfigIamBinding(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConfigIamMember":
                return new EkmConfigIamMember(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConfigIamPolicy":
                return new EkmConfigIamPolicy(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConnection":
                return new EkmConnection(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConnectionIamBinding":
                return new EkmConnectionIamBinding(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConnectionIamMember":
                return new EkmConnectionIamMember(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:EkmConnectionIamPolicy":
                return new EkmConnectionIamPolicy(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:ImportJob":
                return new ImportJob(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRing":
                return new KeyRing(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingCryptoKeyIamBinding":
                return new KeyRingCryptoKeyIamBinding(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingCryptoKeyIamMember":
                return new KeyRingCryptoKeyIamMember(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingCryptoKeyIamPolicy":
                return new KeyRingCryptoKeyIamPolicy(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingIamBinding":
                return new KeyRingIamBinding(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingIamMember":
                return new KeyRingIamMember(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingIamPolicy":
                return new KeyRingIamPolicy(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingImportJobIamBinding":
                return new KeyRingImportJobIamBinding(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingImportJobIamMember":
                return new KeyRingImportJobIamMember(name, <any>undefined, { urn })
            case "google-native:cloudkms/v1:KeyRingImportJobIamPolicy":
                return new KeyRingImportJobIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "cloudkms/v1", _module)
