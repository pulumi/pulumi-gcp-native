// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version_template.algorithm are required.
 */
export class KeyRingCryptoKey extends pulumi.CustomResource {
    /**
     * Get an existing KeyRingCryptoKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KeyRingCryptoKey {
        return new KeyRingCryptoKey(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:cloudkms/v1:KeyRingCryptoKey';

    /**
     * Returns true if the given object is an instance of KeyRingCryptoKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyRingCryptoKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyRingCryptoKey.__pulumiType;
    }


    /**
     * Create a KeyRingCryptoKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyRingCryptoKeyArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cryptoKeysId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cryptoKeysId'");
            }
            if ((!args || args.keyRingsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyRingsId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["cryptoKeysId"] = args ? args.cryptoKeysId : undefined;
            inputs["keyRingsId"] = args ? args.keyRingsId : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["nextRotationTime"] = args ? args.nextRotationTime : undefined;
            inputs["primary"] = args ? args.primary : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["purpose"] = args ? args.purpose : undefined;
            inputs["rotationPeriod"] = args ? args.rotationPeriod : undefined;
            inputs["versionTemplate"] = args ? args.versionTemplate : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(KeyRingCryptoKey.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a KeyRingCryptoKey resource.
 */
export interface KeyRingCryptoKeyArgs {
    /**
     * Output only. The time at which this CryptoKey was created.
     */
    readonly createTime?: pulumi.Input<string>;
    readonly cryptoKeysId: pulumi.Input<string>;
    readonly keyRingsId: pulumi.Input<string>;
    /**
     * Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Output only. The resource name for this CryptoKey in the format `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.
     */
    readonly nextRotationTime?: pulumi.Input<string>;
    /**
     * Output only. A copy of the "primary" CryptoKeyVersion that will be used by Encrypt when this CryptoKey is given in EncryptRequest.name. The CryptoKey's primary version can be updated via UpdateCryptoKeyPrimaryVersion. Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be omitted.
     */
    readonly primary?: pulumi.Input<inputs.cloudkms.v1.CryptoKeyVersion>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Immutable. The immutable purpose of this CryptoKey.
     */
    readonly purpose?: pulumi.Input<string>;
    /**
     * next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.
     */
    readonly rotationPeriod?: pulumi.Input<string>;
    /**
     * A template describing settings for new CryptoKeyVersion instances. The properties of new CryptoKeyVersion instances created by either CreateCryptoKeyVersion or auto-rotation are controlled by this template.
     */
    readonly versionTemplate?: pulumi.Input<inputs.cloudkms.v1.CryptoKeyVersionTemplate>;
}
