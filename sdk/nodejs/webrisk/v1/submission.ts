// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a Submission of a URI suspected of containing phishing content to be reviewed. If the result verifies the existence of malicious phishing content, the site will be added to the [Google's Social Engineering lists](https://support.google.com/webmasters/answer/6350487/) in order to protect users that could get exposed to this threat in the future. Only allowlisted projects can use this method during Early Access. Please reach out to Sales or your customer engineer to obtain access.
 */
export class Submission extends pulumi.CustomResource {
    /**
     * Get an existing Submission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Submission {
        return new Submission(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:webrisk/v1:Submission';

    /**
     * Returns true if the given object is an instance of Submission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Submission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Submission.__pulumiType;
    }


    /**
     * Create a Submission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubmissionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["threatTypes"] = args ? args.threatTypes : undefined;
            inputs["uri"] = args ? args.uri : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Submission.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Submission resource.
 */
export interface SubmissionArgs {
    readonly projectsId: pulumi.Input<string>;
    /**
     * ThreatTypes found to be associated with the submitted URI after reviewing it. This may be empty if the URI was not added to any list.
     */
    readonly threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required. The URI that is being reported for malicious content to be analyzed.
     */
    readonly uri?: pulumi.Input<string>;
}
