// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a deployment and all of the resources described by the deployment manifest.
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:deploymentmanager/v2beta:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * An optional user-provided description of the deployment.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment.
     */
    public readonly fingerprint!: pulumi.Output<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public readonly insertTime!: pulumi.Output<string>;
    /**
     * Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
     */
    public readonly labels!: pulumi.Output<outputs.deploymentmanager.v2beta.DeploymentLabelEntryResponse[]>;
    /**
     * URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent.
     */
    public readonly manifest!: pulumi.Output<string>;
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Operation that most recently ran, or is currently running, on this deployment.
     */
    public readonly operation!: pulumi.Output<outputs.deploymentmanager.v2beta.OperationResponse>;
    /**
     * Server defined URL for the resource.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * [Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates.
     */
    public readonly target!: pulumi.Output<outputs.deploymentmanager.v2beta.TargetConfigurationResponse>;
    /**
     * If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here.
     */
    public readonly update!: pulumi.Output<outputs.deploymentmanager.v2beta.DeploymentUpdateResponse>;
    /**
     * Update timestamp in RFC3339 text format.
     */
    public readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.deployment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployment'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["deployment"] = args ? args.deployment : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["fingerprint"] = args ? args.fingerprint : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["insertTime"] = args ? args.insertTime : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["manifest"] = args ? args.manifest : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["operation"] = args ? args.operation : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["selfLink"] = args ? args.selfLink : undefined;
            inputs["target"] = args ? args.target : undefined;
            inputs["update"] = args ? args.update : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
            inputs["description"] = undefined /*out*/;
            inputs["fingerprint"] = undefined /*out*/;
            inputs["insertTime"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["manifest"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["operation"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["target"] = undefined /*out*/;
            inputs["update"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Deployment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    readonly deployment: pulumi.Input<string>;
    /**
     * An optional user-provided description of the deployment.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment.
     */
    readonly fingerprint?: pulumi.Input<string>;
    readonly id?: pulumi.Input<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    readonly insertTime?: pulumi.Input<string>;
    /**
     * Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
     */
    readonly labels?: pulumi.Input<pulumi.Input<inputs.deploymentmanager.v2beta.DeploymentLabelEntry>[]>;
    /**
     * URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent.
     */
    readonly manifest?: pulumi.Input<string>;
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Operation that most recently ran, or is currently running, on this deployment.
     */
    readonly operation?: pulumi.Input<inputs.deploymentmanager.v2beta.Operation>;
    readonly project: pulumi.Input<string>;
    /**
     * Server defined URL for the resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * [Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates.
     */
    readonly target?: pulumi.Input<inputs.deploymentmanager.v2beta.TargetConfiguration>;
    /**
     * If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here.
     */
    readonly update?: pulumi.Input<inputs.deploymentmanager.v2beta.DeploymentUpdate>;
    /**
     * Update timestamp in RFC3339 text format.
     */
    readonly updateTime?: pulumi.Input<string>;
}
