// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer's organization. The administrator of the service consumer's VPC network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer's VPC network. This connection is used for all supported services in the service producer's organization, so it only needs to be invoked once.
 */
export class ServiceConnection extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceConnection {
        return new ServiceConnection(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:servicenetworking/v1:ServiceConnection';

    /**
     * Returns true if the given object is an instance of ServiceConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceConnection.__pulumiType;
    }


    /**
     * Create a ServiceConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceConnectionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.servicesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicesId'");
            }
            inputs["network"] = args ? args.network : undefined;
            inputs["peering"] = args ? args.peering : undefined;
            inputs["reservedPeeringRanges"] = args ? args.reservedPeeringRanges : undefined;
            inputs["service"] = args ? args.service : undefined;
            inputs["servicesId"] = args ? args.servicesId : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceConnection.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceConnection resource.
 */
export interface ServiceConnectionArgs {
    /**
     * The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.
     */
    readonly network?: pulumi.Input<string>;
    /**
     * Output only. The name of the VPC Network Peering connection that was created by the service producer.
     */
    readonly peering?: pulumi.Input<string>;
    /**
     * The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking CreateConnection method with a different range when connection is already established will not modify already provisioned service producer subnetworks. If CreateConnection method is invoked repeatedly to reconnect when peering connection had been disconnected on the consumer side, leaving this field empty will restore previously allocated IP ranges.
     */
    readonly reservedPeeringRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.
     */
    readonly service?: pulumi.Input<string>;
    readonly servicesId: pulumi.Input<string>;
}
