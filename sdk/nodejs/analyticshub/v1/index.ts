// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DataExchangeArgs } from "./dataExchange";
export type DataExchange = import("./dataExchange").DataExchange;
export const DataExchange: typeof import("./dataExchange").DataExchange = null as any;
utilities.lazyLoad(exports, ["DataExchange"], () => require("./dataExchange"));

export { DataExchangeIamBindingArgs } from "./dataExchangeIamBinding";
export type DataExchangeIamBinding = import("./dataExchangeIamBinding").DataExchangeIamBinding;
export const DataExchangeIamBinding: typeof import("./dataExchangeIamBinding").DataExchangeIamBinding = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamBinding"], () => require("./dataExchangeIamBinding"));

export { DataExchangeIamMemberArgs } from "./dataExchangeIamMember";
export type DataExchangeIamMember = import("./dataExchangeIamMember").DataExchangeIamMember;
export const DataExchangeIamMember: typeof import("./dataExchangeIamMember").DataExchangeIamMember = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamMember"], () => require("./dataExchangeIamMember"));

export { DataExchangeIamPolicyArgs } from "./dataExchangeIamPolicy";
export type DataExchangeIamPolicy = import("./dataExchangeIamPolicy").DataExchangeIamPolicy;
export const DataExchangeIamPolicy: typeof import("./dataExchangeIamPolicy").DataExchangeIamPolicy = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamPolicy"], () => require("./dataExchangeIamPolicy"));

export { DataExchangeListingIamBindingArgs } from "./dataExchangeListingIamBinding";
export type DataExchangeListingIamBinding = import("./dataExchangeListingIamBinding").DataExchangeListingIamBinding;
export const DataExchangeListingIamBinding: typeof import("./dataExchangeListingIamBinding").DataExchangeListingIamBinding = null as any;
utilities.lazyLoad(exports, ["DataExchangeListingIamBinding"], () => require("./dataExchangeListingIamBinding"));

export { DataExchangeListingIamMemberArgs } from "./dataExchangeListingIamMember";
export type DataExchangeListingIamMember = import("./dataExchangeListingIamMember").DataExchangeListingIamMember;
export const DataExchangeListingIamMember: typeof import("./dataExchangeListingIamMember").DataExchangeListingIamMember = null as any;
utilities.lazyLoad(exports, ["DataExchangeListingIamMember"], () => require("./dataExchangeListingIamMember"));

export { DataExchangeListingIamPolicyArgs } from "./dataExchangeListingIamPolicy";
export type DataExchangeListingIamPolicy = import("./dataExchangeListingIamPolicy").DataExchangeListingIamPolicy;
export const DataExchangeListingIamPolicy: typeof import("./dataExchangeListingIamPolicy").DataExchangeListingIamPolicy = null as any;
utilities.lazyLoad(exports, ["DataExchangeListingIamPolicy"], () => require("./dataExchangeListingIamPolicy"));

export { GetDataExchangeArgs, GetDataExchangeResult, GetDataExchangeOutputArgs } from "./getDataExchange";
export const getDataExchange: typeof import("./getDataExchange").getDataExchange = null as any;
export const getDataExchangeOutput: typeof import("./getDataExchange").getDataExchangeOutput = null as any;
utilities.lazyLoad(exports, ["getDataExchange","getDataExchangeOutput"], () => require("./getDataExchange"));

export { GetDataExchangeIamPolicyArgs, GetDataExchangeIamPolicyResult, GetDataExchangeIamPolicyOutputArgs } from "./getDataExchangeIamPolicy";
export const getDataExchangeIamPolicy: typeof import("./getDataExchangeIamPolicy").getDataExchangeIamPolicy = null as any;
export const getDataExchangeIamPolicyOutput: typeof import("./getDataExchangeIamPolicy").getDataExchangeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDataExchangeIamPolicy","getDataExchangeIamPolicyOutput"], () => require("./getDataExchangeIamPolicy"));

export { GetDataExchangeListingIamPolicyArgs, GetDataExchangeListingIamPolicyResult, GetDataExchangeListingIamPolicyOutputArgs } from "./getDataExchangeListingIamPolicy";
export const getDataExchangeListingIamPolicy: typeof import("./getDataExchangeListingIamPolicy").getDataExchangeListingIamPolicy = null as any;
export const getDataExchangeListingIamPolicyOutput: typeof import("./getDataExchangeListingIamPolicy").getDataExchangeListingIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDataExchangeListingIamPolicy","getDataExchangeListingIamPolicyOutput"], () => require("./getDataExchangeListingIamPolicy"));

export { GetListingArgs, GetListingResult, GetListingOutputArgs } from "./getListing";
export const getListing: typeof import("./getListing").getListing = null as any;
export const getListingOutput: typeof import("./getListing").getListingOutput = null as any;
utilities.lazyLoad(exports, ["getListing","getListingOutput"], () => require("./getListing"));

export { GetSubscriptionIamPolicyArgs, GetSubscriptionIamPolicyResult, GetSubscriptionIamPolicyOutputArgs } from "./getSubscriptionIamPolicy";
export const getSubscriptionIamPolicy: typeof import("./getSubscriptionIamPolicy").getSubscriptionIamPolicy = null as any;
export const getSubscriptionIamPolicyOutput: typeof import("./getSubscriptionIamPolicy").getSubscriptionIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptionIamPolicy","getSubscriptionIamPolicyOutput"], () => require("./getSubscriptionIamPolicy"));

export { ListingArgs } from "./listing";
export type Listing = import("./listing").Listing;
export const Listing: typeof import("./listing").Listing = null as any;
utilities.lazyLoad(exports, ["Listing"], () => require("./listing"));

export { SubscriptionIamBindingArgs } from "./subscriptionIamBinding";
export type SubscriptionIamBinding = import("./subscriptionIamBinding").SubscriptionIamBinding;
export const SubscriptionIamBinding: typeof import("./subscriptionIamBinding").SubscriptionIamBinding = null as any;
utilities.lazyLoad(exports, ["SubscriptionIamBinding"], () => require("./subscriptionIamBinding"));

export { SubscriptionIamMemberArgs } from "./subscriptionIamMember";
export type SubscriptionIamMember = import("./subscriptionIamMember").SubscriptionIamMember;
export const SubscriptionIamMember: typeof import("./subscriptionIamMember").SubscriptionIamMember = null as any;
utilities.lazyLoad(exports, ["SubscriptionIamMember"], () => require("./subscriptionIamMember"));

export { SubscriptionIamPolicyArgs } from "./subscriptionIamPolicy";
export type SubscriptionIamPolicy = import("./subscriptionIamPolicy").SubscriptionIamPolicy;
export const SubscriptionIamPolicy: typeof import("./subscriptionIamPolicy").SubscriptionIamPolicy = null as any;
utilities.lazyLoad(exports, ["SubscriptionIamPolicy"], () => require("./subscriptionIamPolicy"));


// Export enums:
export * from "../../types/enums/analyticshub/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:analyticshub/v1:DataExchange":
                return new DataExchange(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeIamBinding":
                return new DataExchangeIamBinding(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeIamMember":
                return new DataExchangeIamMember(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeIamPolicy":
                return new DataExchangeIamPolicy(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeListingIamBinding":
                return new DataExchangeListingIamBinding(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeListingIamMember":
                return new DataExchangeListingIamMember(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:DataExchangeListingIamPolicy":
                return new DataExchangeListingIamPolicy(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:Listing":
                return new Listing(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:SubscriptionIamBinding":
                return new SubscriptionIamBinding(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:SubscriptionIamMember":
                return new SubscriptionIamMember(name, <any>undefined, { urn })
            case "google-native:analyticshub/v1:SubscriptionIamPolicy":
                return new SubscriptionIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "analyticshub/v1", _module)
