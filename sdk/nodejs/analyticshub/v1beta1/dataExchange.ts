// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new data exchange.
 * Auto-naming is currently not supported for this resource.
 */
export class DataExchange extends pulumi.CustomResource {
    /**
     * Get an existing DataExchange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataExchange {
        return new DataExchange(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:analyticshub/v1beta1:DataExchange';

    /**
     * Returns true if the given object is an instance of DataExchange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataExchange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataExchange.__pulumiType;
    }

    /**
     * Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes.
     */
    public readonly dataExchangeId!: pulumi.Output<string>;
    /**
     * Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Optional. Documentation describing the data exchange.
     */
    public readonly documentation!: pulumi.Output<string>;
    /**
     * Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.
     */
    public readonly icon!: pulumi.Output<string>;
    /**
     * Number of listings contained in the data exchange.
     */
    public /*out*/ readonly listingCount!: pulumi.Output<number>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.
     */
    public readonly primaryContact!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;

    /**
     * Create a DataExchange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataExchangeArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dataExchangeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataExchangeId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["dataExchangeId"] = args ? args.dataExchangeId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["documentation"] = args ? args.documentation : undefined;
            resourceInputs["icon"] = args ? args.icon : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["primaryContact"] = args ? args.primaryContact : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["listingCount"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["dataExchangeId"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["documentation"] = undefined /*out*/;
            resourceInputs["icon"] = undefined /*out*/;
            resourceInputs["listingCount"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["primaryContact"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dataExchangeId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataExchange.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataExchange resource.
 */
export interface DataExchangeArgs {
    /**
     * Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes.
     */
    dataExchangeId: pulumi.Input<string>;
    /**
     * Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes.
     */
    displayName: pulumi.Input<string>;
    /**
     * Optional. Documentation describing the data exchange.
     */
    documentation?: pulumi.Input<string>;
    /**
     * Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.
     */
    icon?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.
     */
    primaryContact?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
