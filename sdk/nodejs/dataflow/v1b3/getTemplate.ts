// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get the template associated with a template.
 */
export function getTemplate(args: GetTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dataflow/v1b3:getTemplate", {
        "gcsPath": args.gcsPath,
        "location": args.location,
        "project": args.project,
        "view": args.view,
    }, opts);
}

export interface GetTemplateArgs {
    gcsPath: string;
    location: string;
    project?: string;
    view?: string;
}

export interface GetTemplateResult {
    /**
     * The template metadata describing the template name, available parameters, etc.
     */
    readonly metadata: outputs.dataflow.v1b3.TemplateMetadataResponse;
    /**
     * Describes the runtime metadata with SDKInfo and available parameters.
     */
    readonly runtimeMetadata: outputs.dataflow.v1b3.RuntimeMetadataResponse;
    /**
     * The status of the get template request. Any problems with the request will be indicated in the error_details.
     */
    readonly status: outputs.dataflow.v1b3.StatusResponse;
    /**
     * Template Type.
     */
    readonly templateType: string;
}
/**
 * Get the template associated with a template.
 */
export function getTemplateOutput(args: GetTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateResult> {
    return pulumi.output(args).apply((a: any) => getTemplate(a, opts))
}

export interface GetTemplateOutputArgs {
    gcsPath: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
