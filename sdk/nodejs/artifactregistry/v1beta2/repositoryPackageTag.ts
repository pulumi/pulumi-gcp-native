// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a tag.
 */
export class RepositoryPackageTag extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryPackageTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RepositoryPackageTag {
        return new RepositoryPackageTag(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:artifactregistry/v1beta2:RepositoryPackageTag';

    /**
     * Returns true if the given object is an instance of RepositoryPackageTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RepositoryPackageTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RepositoryPackageTag.__pulumiType;
    }

    /**
     * The name of the tag, for example: "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the version the tag refers to, for example: "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811"
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a RepositoryPackageTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryPackageTagArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.packagesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packagesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            if ((!args || args.repositoriesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoriesId'");
            }
            if ((!args || args.tagsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagsId'");
            }
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["packagesId"] = args ? args.packagesId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["repositoriesId"] = args ? args.repositoriesId : undefined;
            inputs["tagsId"] = args ? args.tagsId : undefined;
            inputs["version"] = args ? args.version : undefined;
        } else {
            inputs["name"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RepositoryPackageTag.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a RepositoryPackageTag resource.
 */
export interface RepositoryPackageTagArgs {
    readonly locationsId: pulumi.Input<string>;
    /**
     * The name of the tag, for example: "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
     */
    readonly name?: pulumi.Input<string>;
    readonly packagesId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    readonly repositoriesId: pulumi.Input<string>;
    readonly tagsId: pulumi.Input<string>;
    /**
     * The name of the version the tag refers to, for example: "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811"
     */
    readonly version?: pulumi.Input<string>;
}
