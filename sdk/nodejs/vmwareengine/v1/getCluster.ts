// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Retrieves a `Cluster` resource by its resource name.
 */
export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:vmwareengine/v1:getCluster", {
        "clusterId": args.clusterId,
        "location": args.location,
        "privateCloudId": args.privateCloudId,
        "project": args.project,
    }, opts);
}

export interface GetClusterArgs {
    clusterId: string;
    location: string;
    privateCloudId: string;
    project?: string;
}

export interface GetClusterResult {
    /**
     * Creation time of this resource.
     */
    readonly createTime: string;
    /**
     * True if the cluster is a management cluster; false otherwise. There can only be one management cluster in a private cloud and it has to be the first one.
     */
    readonly management: boolean;
    /**
     * The resource name of this cluster. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
     */
    readonly name: string;
    /**
     * The map of cluster node types in this cluster, where the key is canonical identifier of the node type (corresponds to the `NodeType`).
     */
    readonly nodeTypeConfigs: {[key: string]: outputs.vmwareengine.v1.NodeTypeConfigResponse};
    /**
     * State of the resource.
     */
    readonly state: string;
    /**
     * Optional. Configuration of a stretched cluster. Required for clusters that belong to a STRETCHED private cloud.
     */
    readonly stretchedClusterConfig: outputs.vmwareengine.v1.StretchedClusterConfigResponse;
    /**
     * System-generated unique identifier for the resource.
     */
    readonly uid: string;
    /**
     * Last update time of this resource.
     */
    readonly updateTime: string;
}
/**
 * Retrieves a `Cluster` resource by its resource name.
 */
export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply((a: any) => getCluster(a, opts))
}

export interface GetClusterOutputArgs {
    clusterId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    privateCloudId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
