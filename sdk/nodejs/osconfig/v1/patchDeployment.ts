// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Create an OS Config patch deployment.
 */
export class PatchDeployment extends pulumi.CustomResource {
    /**
     * Get an existing PatchDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PatchDeployment {
        return new PatchDeployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:osconfig/v1:PatchDeployment';

    /**
     * Returns true if the given object is an instance of PatchDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PatchDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PatchDeployment.__pulumiType;
    }


    /**
     * Create a PatchDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PatchDeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.patchDeploymentsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patchDeploymentsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["duration"] = args ? args.duration : undefined;
            inputs["instanceFilter"] = args ? args.instanceFilter : undefined;
            inputs["lastExecuteTime"] = args ? args.lastExecuteTime : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["oneTimeSchedule"] = args ? args.oneTimeSchedule : undefined;
            inputs["patchConfig"] = args ? args.patchConfig : undefined;
            inputs["patchDeploymentsId"] = args ? args.patchDeploymentsId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["recurringSchedule"] = args ? args.recurringSchedule : undefined;
            inputs["rollout"] = args ? args.rollout : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(PatchDeployment.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a PatchDeployment resource.
 */
export interface PatchDeploymentArgs {
    /**
     * Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Optional. Duration of the patch. After the duration ends, the patch times out.
     */
    readonly duration?: pulumi.Input<string>;
    /**
     * Required. VM instances to patch.
     */
    readonly instanceFilter?: pulumi.Input<inputs.osconfig.v1.PatchInstanceFilter>;
    /**
     * Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    readonly lastExecuteTime?: pulumi.Input<string>;
    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Required. Schedule a one-time execution.
     */
    readonly oneTimeSchedule?: pulumi.Input<inputs.osconfig.v1.OneTimeSchedule>;
    /**
     * Optional. Patch configuration that is applied.
     */
    readonly patchConfig?: pulumi.Input<inputs.osconfig.v1.PatchConfig>;
    readonly patchDeploymentsId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Required. Schedule recurring executions.
     */
    readonly recurringSchedule?: pulumi.Input<inputs.osconfig.v1.RecurringSchedule>;
    /**
     * Optional. Rollout strategy of the patch job.
     */
    readonly rollout?: pulumi.Input<inputs.osconfig.v1.PatchRollout>;
    /**
     * Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    readonly updateTime?: pulumi.Input<string>;
}
