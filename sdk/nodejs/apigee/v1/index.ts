// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./alias";
export * from "./api";
export * from "./apiproduct";
export * from "./app";
export * from "./canaryevaluation";
export * from "./datacollector";
export * from "./datastore";
export * from "./debugsession";
export * from "./developer";
export * from "./envGroupAttachment";
export * from "./envgroup";
export * from "./environment";
export * from "./export";
export * from "./hostQuery";
export * from "./instance";
export * from "./instanceAttachment";
export * from "./keystore";
export * from "./natAddress";
export * from "./organization";
export * from "./organizationEnvironmentIamPolicy";
export * from "./override";
export * from "./query";
export * from "./rateplan";
export * from "./reference";
export * from "./report";
export * from "./resourcefile";
export * from "./sharedflow";
export * from "./subscription";
export * from "./targetserver";

// Import resources to register:
import { Alias } from "./alias";
import { Api } from "./api";
import { Apiproduct } from "./apiproduct";
import { App } from "./app";
import { Canaryevaluation } from "./canaryevaluation";
import { Datacollector } from "./datacollector";
import { Datastore } from "./datastore";
import { Debugsession } from "./debugsession";
import { Developer } from "./developer";
import { EnvGroupAttachment } from "./envGroupAttachment";
import { Envgroup } from "./envgroup";
import { Environment } from "./environment";
import { Export } from "./export";
import { HostQuery } from "./hostQuery";
import { Instance } from "./instance";
import { InstanceAttachment } from "./instanceAttachment";
import { Keystore } from "./keystore";
import { NatAddress } from "./natAddress";
import { Organization } from "./organization";
import { OrganizationEnvironmentIamPolicy } from "./organizationEnvironmentIamPolicy";
import { Override } from "./override";
import { Query } from "./query";
import { Rateplan } from "./rateplan";
import { Reference } from "./reference";
import { Report } from "./report";
import { Resourcefile } from "./resourcefile";
import { Sharedflow } from "./sharedflow";
import { Subscription } from "./subscription";
import { Targetserver } from "./targetserver";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:apigee/v1:Alias":
                return new Alias(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Api":
                return new Api(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Apiproduct":
                return new Apiproduct(name, <any>undefined, { urn })
            case "google-native:apigee/v1:App":
                return new App(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Canaryevaluation":
                return new Canaryevaluation(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Datacollector":
                return new Datacollector(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Datastore":
                return new Datastore(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Debugsession":
                return new Debugsession(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Developer":
                return new Developer(name, <any>undefined, { urn })
            case "google-native:apigee/v1:EnvGroupAttachment":
                return new EnvGroupAttachment(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Envgroup":
                return new Envgroup(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Export":
                return new Export(name, <any>undefined, { urn })
            case "google-native:apigee/v1:HostQuery":
                return new HostQuery(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "google-native:apigee/v1:InstanceAttachment":
                return new InstanceAttachment(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Keystore":
                return new Keystore(name, <any>undefined, { urn })
            case "google-native:apigee/v1:NatAddress":
                return new NatAddress(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Organization":
                return new Organization(name, <any>undefined, { urn })
            case "google-native:apigee/v1:OrganizationEnvironmentIamPolicy":
                return new OrganizationEnvironmentIamPolicy(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Override":
                return new Override(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Query":
                return new Query(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Rateplan":
                return new Rateplan(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Reference":
                return new Reference(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Report":
                return new Report(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Resourcefile":
                return new Resourcefile(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Sharedflow":
                return new Sharedflow(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            case "google-native:apigee/v1:Targetserver":
                return new Targetserver(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "apigee/v1", _module)
