// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details for a consumer key for a AppGroup app, including the key and secret value, associated API products, and other information.
 */
export function getAppGroupAppKey(args: GetAppGroupAppKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetAppGroupAppKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apigee/v1:getAppGroupAppKey", {
        "appId": args.appId,
        "appgroupId": args.appgroupId,
        "keyId": args.keyId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetAppGroupAppKeyArgs {
    appId: string;
    appgroupId: string;
    keyId: string;
    organizationId: string;
}

export interface GetAppGroupAppKeyResult {
    /**
     * List of API products and its status for which the credential can be used. **Note**: Use UpdateAppGroupAppKeyApiProductRequest API to make the association after the consumer key and secret are created.
     */
    readonly apiProducts: outputs.apigee.v1.GoogleCloudApigeeV1APIProductAssociationResponse[];
    /**
     * List of attributes associated with the credential.
     */
    readonly attributes: outputs.apigee.v1.GoogleCloudApigeeV1AttributeResponse[];
    /**
     * Immutable. Consumer key.
     */
    readonly consumerKey: string;
    /**
     * Secret key.
     */
    readonly consumerSecret: string;
    /**
     * Time the AppGroup app expires in milliseconds since epoch.
     */
    readonly expiresAt: string;
    /**
     * Immutable. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
     */
    readonly expiresInSeconds: string;
    /**
     * Time the AppGroup app was created in milliseconds since epoch.
     */
    readonly issuedAt: string;
    /**
     * Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.
     */
    readonly scopes: string[];
    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     */
    readonly status: string;
}
/**
 * Gets details for a consumer key for a AppGroup app, including the key and secret value, associated API products, and other information.
 */
export function getAppGroupAppKeyOutput(args: GetAppGroupAppKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppGroupAppKeyResult> {
    return pulumi.output(args).apply((a: any) => getAppGroupAppKey(a, opts))
}

export interface GetAppGroupAppKeyOutputArgs {
    appId: pulumi.Input<string>;
    appgroupId: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
