// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns the AppGroup details for the provided AppGroup name in the request URI.
 */
export function getAppgroup(args: GetAppgroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAppgroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apigee/v1:getAppgroup", {
        "appgroupId": args.appgroupId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetAppgroupArgs {
    appgroupId: string;
    organizationId: string;
}

export interface GetAppgroupResult {
    /**
     * Internal identifier that cannot be edited
     */
    readonly appGroupId: string;
    /**
     * A list of attributes
     */
    readonly attributes: outputs.apigee.v1.GoogleCloudApigeeV1AttributeResponse[];
    /**
     * channel identifier identifies the owner maintaing this grouping.
     */
    readonly channelId: string;
    /**
     * A reference to the associated storefront/marketplace.
     */
    readonly channelUri: string;
    /**
     * Created time as milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * app group name displayed in the UI
     */
    readonly displayName: string;
    /**
     * Modified time as milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Immutable. Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._\-$ %.
     */
    readonly name: string;
    /**
     * Immutable. the org the app group is created
     */
    readonly organization: string;
    /**
     * Valid values are `active` or `inactive`. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as `active` or `inactive`.
     */
    readonly status: string;
}
/**
 * Returns the AppGroup details for the provided AppGroup name in the request URI.
 */
export function getAppgroupOutput(args: GetAppgroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppgroupResult> {
    return pulumi.output(args).apply((a: any) => getAppgroup(a, opts))
}

export interface GetAppgroupOutputArgs {
    appgroupId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
