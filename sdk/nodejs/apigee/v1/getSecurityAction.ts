// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Get a SecurityAction by name.
 */
export function getSecurityAction(args: GetSecurityActionArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apigee/v1:getSecurityAction", {
        "environmentId": args.environmentId,
        "organizationId": args.organizationId,
        "securityActionId": args.securityActionId,
    }, opts);
}

export interface GetSecurityActionArgs {
    environmentId: string;
    organizationId: string;
    securityActionId: string;
}

export interface GetSecurityActionResult {
    /**
     * Allow a request through if it matches this SecurityAction.
     */
    readonly allow: outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionAllowResponse;
    /**
     * A valid SecurityAction must contain at least one condition.
     */
    readonly conditionConfig: outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionConditionConfigResponse;
    /**
     * The create time for this SecurityAction.
     */
    readonly createTime: string;
    /**
     * Deny a request through if it matches this SecurityAction.
     */
    readonly deny: outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionDenyResponse;
    /**
     * Optional. An optional user provided description of the SecurityAction.
     */
    readonly description: string;
    /**
     * The expiration for this SecurityAction.
     */
    readonly expireTime: string;
    /**
     * Flag a request through if it matches this SecurityAction.
     */
    readonly flag: outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionFlagResponse;
    /**
     * Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
     */
    readonly name: string;
    /**
     * Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
     */
    readonly state: string;
    /**
     * Input only. The TTL for this SecurityAction.
     */
    readonly ttl: string;
    /**
     * The update time for this SecurityAction. This reflects when this SecurityAction changed states.
     */
    readonly updateTime: string;
}
/**
 * Get a SecurityAction by name.
 */
export function getSecurityActionOutput(args: GetSecurityActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityActionResult> {
    return pulumi.output(args).apply((a: any) => getSecurityAction(a, opts))
}

export interface GetSecurityActionOutputArgs {
    environmentId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    securityActionId: pulumi.Input<string>;
}
