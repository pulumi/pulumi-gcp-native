// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a subscription to an API product.
 */
export class OrganizationDeveloperSubscription extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationDeveloperSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrganizationDeveloperSubscription {
        return new OrganizationDeveloperSubscription(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:apigee/v1:OrganizationDeveloperSubscription';

    /**
     * Returns true if the given object is an instance of OrganizationDeveloperSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationDeveloperSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationDeveloperSubscription.__pulumiType;
    }

    /**
     * Name of the API product for which the developer is purchasing a subscription.
     */
    public readonly apiproduct!: pulumi.Output<string>;
    /**
     * Time when the API product subscription was created in milliseconds since epoch.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Time when the API product subscription ends in milliseconds since epoch.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * Time when the API product subscription was last modified in milliseconds since epoch.
     */
    public /*out*/ readonly lastModifiedAt!: pulumi.Output<string>;
    /**
     * Name of the API product subscription.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Time when the API product subscription starts in milliseconds since epoch.
     */
    public readonly startTime!: pulumi.Output<string>;

    /**
     * Create a OrganizationDeveloperSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationDeveloperSubscriptionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.developerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'developerId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            inputs["apiproduct"] = args ? args.apiproduct : undefined;
            inputs["developerId"] = args ? args.developerId : undefined;
            inputs["endTime"] = args ? args.endTime : undefined;
            inputs["organizationId"] = args ? args.organizationId : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["lastModifiedAt"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        } else {
            inputs["apiproduct"] = undefined /*out*/;
            inputs["createdAt"] = undefined /*out*/;
            inputs["endTime"] = undefined /*out*/;
            inputs["lastModifiedAt"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["startTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(OrganizationDeveloperSubscription.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a OrganizationDeveloperSubscription resource.
 */
export interface OrganizationDeveloperSubscriptionArgs {
    /**
     * Name of the API product for which the developer is purchasing a subscription.
     */
    readonly apiproduct?: pulumi.Input<string>;
    readonly developerId: pulumi.Input<string>;
    /**
     * Time when the API product subscription ends in milliseconds since epoch.
     */
    readonly endTime?: pulumi.Input<string>;
    readonly organizationId: pulumi.Input<string>;
    /**
     * Time when the API product subscription starts in milliseconds since epoch.
     */
    readonly startTime?: pulumi.Input<string>;
    readonly subscriptionId: pulumi.Input<string>;
}
