// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * CreateSecurityAction creates a SecurityAction.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class SecurityAction extends pulumi.CustomResource {
    /**
     * Get an existing SecurityAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityAction {
        return new SecurityAction(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:apigee/v1:SecurityAction';

    /**
     * Returns true if the given object is an instance of SecurityAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityAction.__pulumiType;
    }

    /**
     * Allow a request through if it matches this SecurityAction.
     */
    public readonly allow!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionAllowResponse>;
    /**
     * A valid SecurityAction must contain at least one condition.
     */
    public readonly conditionConfig!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionConditionConfigResponse>;
    /**
     * The create time for this SecurityAction.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Deny a request through if it matches this SecurityAction.
     */
    public readonly deny!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionDenyResponse>;
    /**
     * Optional. An optional user provided description of the SecurityAction.
     */
    public readonly description!: pulumi.Output<string>;
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The expiration for this SecurityAction.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * Flag a request through if it matches this SecurityAction.
     */
    public readonly flag!: pulumi.Output<outputs.apigee.v1.GoogleCloudApigeeV1SecurityActionFlagResponse>;
    /**
     * Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
     */
    public readonly name!: pulumi.Output<string>;
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
     */
    public readonly securityActionId!: pulumi.Output<string>;
    /**
     * Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * Input only. The TTL for this SecurityAction.
     */
    public readonly ttl!: pulumi.Output<string>;
    /**
     * The update time for this SecurityAction. This reflects when this SecurityAction changed states.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a SecurityAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityActionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.conditionConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'conditionConfig'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.securityActionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityActionId'");
            }
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["allow"] = args ? args.allow : undefined;
            resourceInputs["conditionConfig"] = args ? args.conditionConfig : undefined;
            resourceInputs["deny"] = args ? args.deny : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["flag"] = args ? args.flag : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["securityActionId"] = args ? args.securityActionId : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["allow"] = undefined /*out*/;
            resourceInputs["conditionConfig"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deny"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["flag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["securityActionId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["ttl"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["environmentId", "organizationId", "securityActionId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SecurityAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityAction resource.
 */
export interface SecurityActionArgs {
    /**
     * Allow a request through if it matches this SecurityAction.
     */
    allow?: pulumi.Input<inputs.apigee.v1.GoogleCloudApigeeV1SecurityActionAllowArgs>;
    /**
     * A valid SecurityAction must contain at least one condition.
     */
    conditionConfig: pulumi.Input<inputs.apigee.v1.GoogleCloudApigeeV1SecurityActionConditionConfigArgs>;
    /**
     * Deny a request through if it matches this SecurityAction.
     */
    deny?: pulumi.Input<inputs.apigee.v1.GoogleCloudApigeeV1SecurityActionDenyArgs>;
    /**
     * Optional. An optional user provided description of the SecurityAction.
     */
    description?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    /**
     * The expiration for this SecurityAction.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Flag a request through if it matches this SecurityAction.
     */
    flag?: pulumi.Input<inputs.apigee.v1.GoogleCloudApigeeV1SecurityActionFlagArgs>;
    /**
     * Immutable. This field is ignored during creation as per AIP-133. Please set the `security_action_id` field in the CreateSecurityActionRequest when creating a new SecurityAction. Format: organizations/{org}/environments/{env}/securityActions/{security_action}
     */
    name?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    /**
     * Required. The ID to use for the SecurityAction, which will become the final component of the action's resource name. This value should be 0-61 characters, and valid format is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
     */
    securityActionId: pulumi.Input<string>;
    /**
     * Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
     */
    state: pulumi.Input<enums.apigee.v1.SecurityActionState>;
    /**
     * Input only. The TTL for this SecurityAction.
     */
    ttl?: pulumi.Input<string>;
}
