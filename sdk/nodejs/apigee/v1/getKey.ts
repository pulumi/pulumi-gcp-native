// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Returns details for a consumer key for a developer app, including the key and secret value, associated API products, and other information.
 */
export function getKey(args: GetKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("google-native:apigee/v1:getKey", {
        "appId": args.appId,
        "developerId": args.developerId,
        "keyId": args.keyId,
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetKeyArgs {
    appId: string;
    developerId: string;
    keyId: string;
    organizationId: string;
}

export interface GetKeyResult {
    /**
     * List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created.
     */
    readonly apiProducts: any[];
    /**
     * List of attributes associated with the credential.
     */
    readonly attributes: outputs.apigee.v1.GoogleCloudApigeeV1AttributeResponse[];
    /**
     * Consumer key.
     */
    readonly consumerKey: string;
    /**
     * Secret key.
     */
    readonly consumerSecret: string;
    /**
     * Time the developer app expires in milliseconds since epoch.
     */
    readonly expiresAt: string;
    /**
     * Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.
     */
    readonly expiresInSeconds: string;
    /**
     * Time the developer app was created in milliseconds since epoch.
     */
    readonly issuedAt: string;
    /**
     * Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.
     */
    readonly scopes: string[];
    /**
     * Status of the credential. Valid values include `approved` or `revoked`.
     */
    readonly status: string;
}
