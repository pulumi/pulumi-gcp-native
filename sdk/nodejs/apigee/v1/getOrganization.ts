// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 */
export function getOrganization(args: GetOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apigee/v1:getOrganization", {
        "organizationId": args.organizationId,
    }, opts);
}

export interface GetOrganizationArgs {
    organizationId: string;
}

export interface GetOrganizationResult {
    /**
     * Addon configurations of the Apigee organization.
     */
    readonly addonsConfig: outputs.apigee.v1.GoogleCloudApigeeV1AddonsConfigResponse;
    /**
     * DEPRECATED: This field will eventually be deprecated and replaced with a differently-named field. Primary Google Cloud region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     *
     * @deprecated Required. DEPRECATED: This field will eventually be deprecated and replaced with a differently-named field. Primary Google Cloud region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     */
    readonly analyticsRegion: string;
    /**
     * Cloud KMS key name used for encrypting API consumer data. Required for US/EU regions when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION` or the region is not US/EU, a Google-Managed encryption key will be used. Format: `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`
     */
    readonly apiConsumerDataEncryptionKeyName: string;
    /**
     * This field is needed only for customers with control plane in US or EU. Apigee stores some control plane data only in single region. This field determines which single region Apigee should use. For example: "us-west1" when control plane is in US or "europe-west2" when control plane is in EU.
     */
    readonly apiConsumerDataLocation: string;
    /**
     * Apigee Project ID associated with the organization. Use this project to allowlist Apigee in the Service Attachment when using private service connect with Apigee.
     */
    readonly apigeeProjectId: string;
    /**
     * Not used by Apigee.
     */
    readonly attributes: string[];
    /**
     * Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid.
     */
    readonly authorizedNetwork: string;
    /**
     * Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).
     */
    readonly billingType: string;
    /**
     * Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.
     */
    readonly caCertificate: string;
    /**
     * Cloud KMS key name used for encrypting control plane data that is stored in a multi region. Required when [BillingType](#BillingType) is `SUBSCRIPTION`. When [BillingType](#BillingType) is `EVALUATION`, a Google-Managed encryption key will be used. Format: `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`
     */
    readonly controlPlaneEncryptionKeyName: string;
    /**
     * Time that the Apigee organization was created in milliseconds since epoch.
     */
    readonly createdAt: string;
    /**
     * Not used by Apigee.
     */
    readonly customerName: string;
    /**
     * Description of the Apigee organization.
     */
    readonly description: string;
    /**
     * Optional. Flag that specifies whether the VPC Peering through Private Google Access should be disabled between the consumer network and Apigee. Valid only when RuntimeType is set to CLOUD. Required if an authorizedNetwork on the consumer project is not provided, in which case the flag should be set to true. The value must be set before the creation of any Apigee runtime instance and can be updated only when there are no runtime instances. **Note:** Apigee will be deprecating the vpc peering model that requires you to provide 'authorizedNetwork', by making the non-peering model as the default way of provisioning Apigee organization in future. So, this will be a temporary flag to enable the transition. Not supported for Apigee hybrid.
     */
    readonly disableVpcPeering: boolean;
    /**
     * Display name for the Apigee organization. Unused, but reserved for future use.
     */
    readonly displayName: string;
    /**
     * List of environments in the Apigee organization.
     */
    readonly environments: string[];
    /**
     * Time that the Apigee organization is scheduled for deletion.
     */
    readonly expiresAt: string;
    /**
     * Time that the Apigee organization was last modified in milliseconds since epoch.
     */
    readonly lastModifiedAt: string;
    /**
     * Name of the Apigee organization.
     */
    readonly name: string;
    /**
     * Configuration for the Portals settings.
     */
    readonly portalDisabled: boolean;
    /**
     * Project ID associated with the Apigee organization.
     */
    readonly project: string;
    /**
     * Properties defined in the Apigee organization profile.
     */
    readonly properties: outputs.apigee.v1.GoogleCloudApigeeV1PropertiesResponse;
    /**
     * Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: "projects/foo/locations/us/keyRings/bar/cryptoKeys/baz". **Note:** Not supported for Apigee hybrid.
     */
    readonly runtimeDatabaseEncryptionKeyName: string;
    /**
     * Runtime type of the Apigee organization based on the Apigee subscription purchased.
     */
    readonly runtimeType: string;
    /**
     * State of the organization. Values other than ACTIVE means the resource is not ready to use.
     */
    readonly state: string;
    /**
     * Subscription plan that the customer has purchased. Output only.
     */
    readonly subscriptionPlan: string;
    /**
     * DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
     *
     * @deprecated Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).
     */
    readonly subscriptionType: string;
    /**
     * Not used by Apigee.
     */
    readonly type: string;
}
/**
 * Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 */
export function getOrganizationOutput(args: GetOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationResult> {
    return pulumi.output(args).apply((a: any) => getOrganization(a, opts))
}

export interface GetOrganizationOutputArgs {
    organizationId: pulumi.Input<string>;
}
