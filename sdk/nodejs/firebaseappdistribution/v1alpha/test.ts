// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Run automated test(s) on release.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class Test extends pulumi.CustomResource {
    /**
     * Get an existing Test resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Test {
        return new Test(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:firebaseappdistribution/v1alpha:Test';

    /**
     * Returns true if the given object is an instance of Test.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Test {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Test.__pulumiType;
    }

    public readonly appId!: pulumi.Output<string>;
    /**
     * Timestamp when the test was run.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The results of the test on each device.
     */
    public readonly deviceExecutions!: pulumi.Output<outputs.firebaseappdistribution.v1alpha.GoogleFirebaseAppdistroV1alphaDeviceExecutionResponse[]>;
    /**
     * Optional. Input only. Login credentials for the test. Input only.
     */
    public readonly loginCredential!: pulumi.Output<outputs.firebaseappdistribution.v1alpha.GoogleFirebaseAppdistroV1alphaLoginCredentialResponse>;
    /**
     * The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}`
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly releaseId!: pulumi.Output<string>;
    /**
     * Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated.
     */
    public readonly releaseTestId!: pulumi.Output<string | undefined>;

    /**
     * Create a Test resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TestArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.deviceExecutions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceExecutions'");
            }
            if ((!args || args.releaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'releaseId'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["deviceExecutions"] = args ? args.deviceExecutions : undefined;
            resourceInputs["loginCredential"] = args ? args.loginCredential : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["releaseId"] = args ? args.releaseId : undefined;
            resourceInputs["releaseTestId"] = args ? args.releaseTestId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        } else {
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deviceExecutions"] = undefined /*out*/;
            resourceInputs["loginCredential"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["releaseId"] = undefined /*out*/;
            resourceInputs["releaseTestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["appId", "project", "releaseId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Test.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Test resource.
 */
export interface TestArgs {
    appId: pulumi.Input<string>;
    /**
     * The results of the test on each device.
     */
    deviceExecutions: pulumi.Input<pulumi.Input<inputs.firebaseappdistribution.v1alpha.GoogleFirebaseAppdistroV1alphaDeviceExecutionArgs>[]>;
    /**
     * Optional. Input only. Login credentials for the test. Input only.
     */
    loginCredential?: pulumi.Input<inputs.firebaseappdistribution.v1alpha.GoogleFirebaseAppdistroV1alphaLoginCredentialArgs>;
    /**
     * The name of the release test resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}/tests/{test_id}`
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    releaseId: pulumi.Input<string>;
    /**
     * Optional. The ID to use for the test, which will become the final component of the tests's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. If it is not provided one will be automatically generated.
     */
    releaseTestId?: pulumi.Input<string>;
}
