// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a phrase matcher.
 */
export function getPhraseMatcher(args: GetPhraseMatcherArgs, opts?: pulumi.InvokeOptions): Promise<GetPhraseMatcherResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:contactcenterinsights/v1:getPhraseMatcher", {
        "location": args.location,
        "phraseMatcherId": args.phraseMatcherId,
        "project": args.project,
    }, opts);
}

export interface GetPhraseMatcherArgs {
    location: string;
    phraseMatcherId: string;
    project?: string;
}

export interface GetPhraseMatcherResult {
    /**
     * The most recent time at which the activation status was updated.
     */
    readonly activationUpdateTime: string;
    /**
     * Applies the phrase matcher only when it is active.
     */
    readonly active: boolean;
    /**
     * The human-readable name of the phrase matcher.
     */
    readonly displayName: string;
    /**
     * The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     */
    readonly name: string;
    /**
     * A list of phase match rule groups that are included in this matcher.
     */
    readonly phraseMatchRuleGroups: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse[];
    /**
     * The timestamp of when the revision was created. It is also the create time when a new matcher is added.
     */
    readonly revisionCreateTime: string;
    /**
     * Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567
     */
    readonly revisionId: string;
    /**
     * The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     */
    readonly roleMatch: string;
    /**
     * The type of this phrase matcher.
     */
    readonly type: string;
    /**
     * The most recent time at which the phrase matcher was updated.
     */
    readonly updateTime: string;
    /**
     * The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     */
    readonly versionTag: string;
}
/**
 * Gets a phrase matcher.
 */
export function getPhraseMatcherOutput(args: GetPhraseMatcherOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPhraseMatcherResult> {
    return pulumi.output(args).apply((a: any) => getPhraseMatcher(a, opts))
}

export interface GetPhraseMatcherOutputArgs {
    location: pulumi.Input<string>;
    phraseMatcherId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
