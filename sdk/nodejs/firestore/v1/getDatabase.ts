// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets information about a database.
 */
export function getDatabase(args: GetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:firestore/v1:getDatabase", {
        "databaseId": args.databaseId,
        "project": args.project,
    }, opts);
}

export interface GetDatabaseArgs {
    databaseId: string;
    project?: string;
}

export interface GetDatabaseResult {
    /**
     * The App Engine integration mode to use for this database.
     */
    readonly appEngineIntegrationMode: string;
    /**
     * The concurrency control mode to use for this database.
     */
    readonly concurrencyMode: string;
    /**
     * The timestamp at which this database was created. Databases created before 2016 do not populate create_time.
     */
    readonly createTime: string;
    /**
     * State of delete protection for the database.
     */
    readonly deleteProtectionState: string;
    /**
     * The earliest timestamp at which older versions of the data can be read from the database. See [version_retention_period] above; this field is populated with `now - version_retention_period`. This value is continuously updated, and becomes stale the moment it is queried. If you are using this value to recover data, make sure to account for the time from the moment when the value is queried to the moment when you initiate the recovery.
     */
    readonly earliestVersionTime: string;
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * The key_prefix for this database. This key_prefix is used, in combination with the project id ("~") to construct the application id that is returned from the Cloud Datastore APIs in Google App Engine first generation runtimes. This value may be empty in which case the appid to use for URL-encoded keys is the project_id (eg: foo instead of v~foo).
     */
    readonly keyPrefix: string;
    /**
     * The location of the database. Available locations are listed at https://cloud.google.com/firestore/docs/locations.
     */
    readonly location: string;
    /**
     * The resource name of the Database. Format: `projects/{project}/databases/{database}`
     */
    readonly name: string;
    /**
     * Whether to enable the PITR feature on this database.
     */
    readonly pointInTimeRecoveryEnablement: string;
    /**
     * The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.
     */
    readonly type: string;
    /**
     * The system-generated UUID4 for this Database.
     */
    readonly uid: string;
    /**
     * The timestamp at which this database was most recently updated. Note this only includes updates to the database resource and not data contained by the database.
     */
    readonly updateTime: string;
    /**
     * The period during which past versions of data are retained in the database. Any read or query can specify a `read_time` within this window, and will read the state of the database at that time. If the PITR feature is enabled, the retention period is 7 days. Otherwise, the retention period is 1 hour.
     */
    readonly versionRetentionPeriod: string;
}
/**
 * Gets information about a database.
 */
export function getDatabaseOutput(args: GetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabase(a, opts))
}

export interface GetDatabaseOutputArgs {
    databaseId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
