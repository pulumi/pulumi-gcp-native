{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accesscontextmanager/index.ts",
        "accesscontextmanager/v1/accessPolicy.ts",
        "accesscontextmanager/v1/accessPolicyAccessLevel.ts",
        "accesscontextmanager/v1/accessPolicyServicePerimeter.ts",
        "accesscontextmanager/v1/index.ts",
        "accesscontextmanager/v1/organizationGcpUserAccessBinding.ts",
        "accesscontextmanager/v1beta/accessPolicy.ts",
        "accesscontextmanager/v1beta/accessPolicyAccessLevel.ts",
        "accesscontextmanager/v1beta/accessPolicyServicePerimeter.ts",
        "accesscontextmanager/v1beta/index.ts",
        "apigateway/index.ts",
        "apigateway/v1/api.ts",
        "apigateway/v1/apiConfig.ts",
        "apigateway/v1/apiConfigIamPolicy.ts",
        "apigateway/v1/apiIamPolicy.ts",
        "apigateway/v1/gateway.ts",
        "apigateway/v1/gatewayIamPolicy.ts",
        "apigateway/v1/index.ts",
        "apigateway/v1beta/api.ts",
        "apigateway/v1beta/apiConfig.ts",
        "apigateway/v1beta/apiConfigIamPolicy.ts",
        "apigateway/v1beta/apiIamPolicy.ts",
        "apigateway/v1beta/gateway.ts",
        "apigateway/v1beta/gatewayIamPolicy.ts",
        "apigateway/v1beta/index.ts",
        "apigee/index.ts",
        "apigee/v1/index.ts",
        "apigee/v1/organization.ts",
        "apigee/v1/organizationAnalyticDatastore.ts",
        "apigee/v1/organizationApi.ts",
        "apigee/v1/organizationApiproduct.ts",
        "apigee/v1/organizationApiproductRateplan.ts",
        "apigee/v1/organizationDatacollector.ts",
        "apigee/v1/organizationDeveloper.ts",
        "apigee/v1/organizationDeveloperApp.ts",
        "apigee/v1/organizationDeveloperAppKey.ts",
        "apigee/v1/organizationDeveloperSubscription.ts",
        "apigee/v1/organizationEnvgroup.ts",
        "apigee/v1/organizationEnvgroupAttachment.ts",
        "apigee/v1/organizationEnvironment.ts",
        "apigee/v1/organizationEnvironmentAnalyticExport.ts",
        "apigee/v1/organizationEnvironmentApiRevisionDebugsession.ts",
        "apigee/v1/organizationEnvironmentIamPolicy.ts",
        "apigee/v1/organizationEnvironmentKeystore.ts",
        "apigee/v1/organizationEnvironmentKeystoreAlias.ts",
        "apigee/v1/organizationEnvironmentQuery.ts",
        "apigee/v1/organizationEnvironmentReference.ts",
        "apigee/v1/organizationEnvironmentResourcefile.ts",
        "apigee/v1/organizationEnvironmentTargetserver.ts",
        "apigee/v1/organizationEnvironmentTraceConfigOverride.ts",
        "apigee/v1/organizationHostQuery.ts",
        "apigee/v1/organizationInstance.ts",
        "apigee/v1/organizationInstanceAttachment.ts",
        "apigee/v1/organizationInstanceCanaryevaluation.ts",
        "apigee/v1/organizationInstanceNatAddress.ts",
        "apigee/v1/organizationReport.ts",
        "apigee/v1/organizationSharedflow.ts",
        "apigee/v1/organizationSiteApicategory.ts",
        "apikeys/index.ts",
        "apikeys/v2/index.ts",
        "apikeys/v2/key.ts",
        "appengine/index.ts",
        "appengine/v1/app.ts",
        "appengine/v1/appAuthorizedCertificate.ts",
        "appengine/v1/appDomainMapping.ts",
        "appengine/v1/appFirewallIngressRule.ts",
        "appengine/v1/appServiceVersion.ts",
        "appengine/v1/index.ts",
        "appengine/v1alpha/appAuthorizedCertificate.ts",
        "appengine/v1alpha/appDomainMapping.ts",
        "appengine/v1alpha/index.ts",
        "appengine/v1beta/app.ts",
        "appengine/v1beta/appAuthorizedCertificate.ts",
        "appengine/v1beta/appDomainMapping.ts",
        "appengine/v1beta/appFirewallIngressRule.ts",
        "appengine/v1beta/appServiceVersion.ts",
        "appengine/v1beta/index.ts",
        "artifactregistry/index.ts",
        "artifactregistry/v1beta1/index.ts",
        "artifactregistry/v1beta1/repository.ts",
        "artifactregistry/v1beta1/repositoryIamPolicy.ts",
        "artifactregistry/v1beta1/repositoryPackageTag.ts",
        "artifactregistry/v1beta2/index.ts",
        "artifactregistry/v1beta2/repository.ts",
        "artifactregistry/v1beta2/repositoryIamPolicy.ts",
        "artifactregistry/v1beta2/repositoryPackageTag.ts",
        "assuredworkloads/index.ts",
        "assuredworkloads/v1/index.ts",
        "assuredworkloads/v1/organizationWorkload.ts",
        "bigquery/index.ts",
        "bigquery/v2/dataset.ts",
        "bigquery/v2/index.ts",
        "bigquery/v2/job.ts",
        "bigquery/v2/routine.ts",
        "bigquery/v2/rowAccessPolicyIamPolicy.ts",
        "bigquery/v2/table.ts",
        "bigquery/v2/tableIamPolicy.ts",
        "bigqueryconnection/index.ts",
        "bigqueryconnection/v1beta1/connection.ts",
        "bigqueryconnection/v1beta1/connectionIamPolicy.ts",
        "bigqueryconnection/v1beta1/index.ts",
        "bigquerydatatransfer/index.ts",
        "bigquerydatatransfer/v1/index.ts",
        "bigquerydatatransfer/v1/transferConfig.ts",
        "bigqueryreservation/index.ts",
        "bigqueryreservation/v1/capacityCommitment.ts",
        "bigqueryreservation/v1/index.ts",
        "bigqueryreservation/v1/reservation.ts",
        "bigqueryreservation/v1beta1/capacityCommitment.ts",
        "bigqueryreservation/v1beta1/index.ts",
        "bigqueryreservation/v1beta1/reservation.ts",
        "bigtableadmin/index.ts",
        "bigtableadmin/v2/index.ts",
        "bigtableadmin/v2/instance.ts",
        "bigtableadmin/v2/instanceAppProfile.ts",
        "bigtableadmin/v2/instanceCluster.ts",
        "bigtableadmin/v2/instanceClusterBackup.ts",
        "bigtableadmin/v2/instanceClusterBackupIamPolicy.ts",
        "bigtableadmin/v2/instanceIamPolicy.ts",
        "bigtableadmin/v2/instanceTable.ts",
        "bigtableadmin/v2/instanceTableIamPolicy.ts",
        "billingbudgets/index.ts",
        "billingbudgets/v1/billingAccountBudget.ts",
        "billingbudgets/v1/index.ts",
        "billingbudgets/v1beta1/billingAccountBudget.ts",
        "billingbudgets/v1beta1/index.ts",
        "binaryauthorization/index.ts",
        "binaryauthorization/v1/attestor.ts",
        "binaryauthorization/v1/attestorIamPolicy.ts",
        "binaryauthorization/v1/index.ts",
        "binaryauthorization/v1/policyIamPolicy.ts",
        "binaryauthorization/v1beta1/attestor.ts",
        "binaryauthorization/v1beta1/attestorIamPolicy.ts",
        "binaryauthorization/v1beta1/index.ts",
        "binaryauthorization/v1beta1/policyIamPolicy.ts",
        "cloudasset/index.ts",
        "cloudasset/v1/feed.ts",
        "cloudasset/v1/index.ts",
        "cloudbilling/index.ts",
        "cloudbilling/v1/billingAccount.ts",
        "cloudbilling/v1/billingAccountIamPolicy.ts",
        "cloudbilling/v1/index.ts",
        "cloudbuild/index.ts",
        "cloudbuild/v1/build.ts",
        "cloudbuild/v1/index.ts",
        "cloudbuild/v1/trigger.ts",
        "cloudbuild/v1alpha1/index.ts",
        "cloudbuild/v1alpha1/workerPool.ts",
        "cloudbuild/v1alpha2/index.ts",
        "cloudbuild/v1alpha2/workerPool.ts",
        "cloudbuild/v1beta1/index.ts",
        "cloudbuild/v1beta1/workerPool.ts",
        "cloudchannel/index.ts",
        "cloudchannel/v1/accountChannelPartnerLink.ts",
        "cloudchannel/v1/accountChannelPartnerLinkCustomer.ts",
        "cloudchannel/v1/accountCustomer.ts",
        "cloudchannel/v1/accountCustomerEntitlement.ts",
        "cloudchannel/v1/index.ts",
        "cloudfunctions/index.ts",
        "cloudfunctions/v1/function.ts",
        "cloudfunctions/v1/functionIamPolicy.ts",
        "cloudfunctions/v1/index.ts",
        "cloudidentity/index.ts",
        "cloudidentity/v1/device.ts",
        "cloudidentity/v1/group.ts",
        "cloudidentity/v1/groupMembership.ts",
        "cloudidentity/v1/index.ts",
        "cloudidentity/v1beta1/device.ts",
        "cloudidentity/v1beta1/group.ts",
        "cloudidentity/v1beta1/groupMembership.ts",
        "cloudidentity/v1beta1/index.ts",
        "cloudiot/index.ts",
        "cloudiot/v1/index.ts",
        "cloudiot/v1/registry.ts",
        "cloudiot/v1/registryDevice.ts",
        "cloudiot/v1/registryGroupIamPolicy.ts",
        "cloudiot/v1/registryIamPolicy.ts",
        "cloudkms/index.ts",
        "cloudkms/v1/index.ts",
        "cloudkms/v1/keyRing.ts",
        "cloudkms/v1/keyRingCryptoKey.ts",
        "cloudkms/v1/keyRingCryptoKeyCryptoKeyVersion.ts",
        "cloudkms/v1/keyRingCryptoKeyIamPolicy.ts",
        "cloudkms/v1/keyRingIamPolicy.ts",
        "cloudkms/v1/keyRingImportJob.ts",
        "cloudkms/v1/keyRingImportJobIamPolicy.ts",
        "cloudresourcemanager/index.ts",
        "cloudresourcemanager/v1/index.ts",
        "cloudresourcemanager/v1/lien.ts",
        "cloudresourcemanager/v1/organizationIamPolicy.ts",
        "cloudresourcemanager/v1/project.ts",
        "cloudresourcemanager/v1/projectIamPolicy.ts",
        "cloudresourcemanager/v1beta1/index.ts",
        "cloudresourcemanager/v1beta1/organizationIamPolicy.ts",
        "cloudresourcemanager/v1beta1/project.ts",
        "cloudresourcemanager/v1beta1/projectIamPolicy.ts",
        "cloudresourcemanager/v2/folder.ts",
        "cloudresourcemanager/v2/folderIamPolicy.ts",
        "cloudresourcemanager/v2/index.ts",
        "cloudresourcemanager/v2beta1/folder.ts",
        "cloudresourcemanager/v2beta1/folderIamPolicy.ts",
        "cloudresourcemanager/v2beta1/index.ts",
        "cloudresourcemanager/v3/folder.ts",
        "cloudresourcemanager/v3/folderIamPolicy.ts",
        "cloudresourcemanager/v3/index.ts",
        "cloudresourcemanager/v3/lien.ts",
        "cloudresourcemanager/v3/organizationIamPolicy.ts",
        "cloudresourcemanager/v3/project.ts",
        "cloudresourcemanager/v3/projectIamPolicy.ts",
        "cloudresourcemanager/v3/tagKey.ts",
        "cloudresourcemanager/v3/tagKeyIamPolicy.ts",
        "cloudresourcemanager/v3/tagValue.ts",
        "cloudresourcemanager/v3/tagValueIamPolicy.ts",
        "cloudscheduler/index.ts",
        "cloudscheduler/v1/index.ts",
        "cloudscheduler/v1/job.ts",
        "cloudscheduler/v1beta1/index.ts",
        "cloudscheduler/v1beta1/job.ts",
        "cloudsearch/index.ts",
        "cloudsearch/v1/index.ts",
        "cloudsearch/v1/settingDatasource.ts",
        "cloudsearch/v1/settingSearchapplication.ts",
        "cloudtasks/index.ts",
        "cloudtasks/v2/index.ts",
        "cloudtasks/v2/queue.ts",
        "cloudtasks/v2/queueIamPolicy.ts",
        "cloudtasks/v2/queueTask.ts",
        "cloudtasks/v2beta2/index.ts",
        "cloudtasks/v2beta2/queue.ts",
        "cloudtasks/v2beta2/queueIamPolicy.ts",
        "cloudtasks/v2beta2/queueTask.ts",
        "cloudtasks/v2beta3/index.ts",
        "cloudtasks/v2beta3/queue.ts",
        "cloudtasks/v2beta3/queueIamPolicy.ts",
        "cloudtasks/v2beta3/queueTask.ts",
        "cloudtrace/index.ts",
        "cloudtrace/v2beta1/index.ts",
        "cloudtrace/v2beta1/traceSink.ts",
        "composer/index.ts",
        "composer/v1/environment.ts",
        "composer/v1/index.ts",
        "composer/v1beta1/environment.ts",
        "composer/v1beta1/index.ts",
        "compute/alpha/address.ts",
        "compute/alpha/autoscaler.ts",
        "compute/alpha/backendBucket.ts",
        "compute/alpha/backendBucketIamPolicy.ts",
        "compute/alpha/backendService.ts",
        "compute/alpha/disk.ts",
        "compute/alpha/diskIamPolicy.ts",
        "compute/alpha/externalVpnGateway.ts",
        "compute/alpha/firewall.ts",
        "compute/alpha/firewallPolicy.ts",
        "compute/alpha/firewallPolicyIamPolicy.ts",
        "compute/alpha/forwardingRule.ts",
        "compute/alpha/globalAddress.ts",
        "compute/alpha/globalForwardingRule.ts",
        "compute/alpha/globalNetworkEndpointGroup.ts",
        "compute/alpha/globalPublicDelegatedPrefix.ts",
        "compute/alpha/healthCheck.ts",
        "compute/alpha/httpHealthCheck.ts",
        "compute/alpha/httpsHealthCheck.ts",
        "compute/alpha/image.ts",
        "compute/alpha/imageIamPolicy.ts",
        "compute/alpha/index.ts",
        "compute/alpha/instance.ts",
        "compute/alpha/instanceGroup.ts",
        "compute/alpha/instanceGroupManager.ts",
        "compute/alpha/instanceIamPolicy.ts",
        "compute/alpha/instanceTemplate.ts",
        "compute/alpha/instanceTemplateIamPolicy.ts",
        "compute/alpha/interconnect.ts",
        "compute/alpha/interconnectAttachment.ts",
        "compute/alpha/interconnectAttachmentIamPolicy.ts",
        "compute/alpha/interconnectIamPolicy.ts",
        "compute/alpha/license.ts",
        "compute/alpha/licenseCodeIamPolicy.ts",
        "compute/alpha/licenseIamPolicy.ts",
        "compute/alpha/machineImage.ts",
        "compute/alpha/machineImageIamPolicy.ts",
        "compute/alpha/network.ts",
        "compute/alpha/networkEndpointGroup.ts",
        "compute/alpha/networkFirewallPolicy.ts",
        "compute/alpha/networkFirewallPolicyIamPolicy.ts",
        "compute/alpha/nodeGroup.ts",
        "compute/alpha/nodeGroupIamPolicy.ts",
        "compute/alpha/nodeTemplate.ts",
        "compute/alpha/nodeTemplateIamPolicy.ts",
        "compute/alpha/organizationSecurityPolicy.ts",
        "compute/alpha/packetMirroring.ts",
        "compute/alpha/publicAdvertisedPrefix.ts",
        "compute/alpha/publicDelegatedPrefix.ts",
        "compute/alpha/regionAutoscaler.ts",
        "compute/alpha/regionBackendService.ts",
        "compute/alpha/regionCommitment.ts",
        "compute/alpha/regionDisk.ts",
        "compute/alpha/regionDiskIamPolicy.ts",
        "compute/alpha/regionHealthCheck.ts",
        "compute/alpha/regionHealthCheckService.ts",
        "compute/alpha/regionInPlaceSnapshot.ts",
        "compute/alpha/regionInPlaceSnapshotIamPolicy.ts",
        "compute/alpha/regionInstanceGroupManager.ts",
        "compute/alpha/regionInstantSnapshot.ts",
        "compute/alpha/regionInstantSnapshotIamPolicy.ts",
        "compute/alpha/regionNetworkEndpointGroup.ts",
        "compute/alpha/regionNetworkFirewallPolicy.ts",
        "compute/alpha/regionNetworkFirewallPolicyIamPolicy.ts",
        "compute/alpha/regionNotificationEndpoint.ts",
        "compute/alpha/regionSslCertificate.ts",
        "compute/alpha/regionTargetHttpProxy.ts",
        "compute/alpha/regionTargetHttpsProxy.ts",
        "compute/alpha/regionUrlMap.ts",
        "compute/alpha/reservation.ts",
        "compute/alpha/reservationIamPolicy.ts",
        "compute/alpha/resourcePolicy.ts",
        "compute/alpha/resourcePolicyIamPolicy.ts",
        "compute/alpha/route.ts",
        "compute/alpha/router.ts",
        "compute/alpha/securityPolicy.ts",
        "compute/alpha/serviceAttachment.ts",
        "compute/alpha/serviceAttachmentIamPolicy.ts",
        "compute/alpha/snapshot.ts",
        "compute/alpha/snapshotIamPolicy.ts",
        "compute/alpha/sslCertificate.ts",
        "compute/alpha/sslPolicy.ts",
        "compute/alpha/subnetwork.ts",
        "compute/alpha/subnetworkIamPolicy.ts",
        "compute/alpha/targetGrpcProxy.ts",
        "compute/alpha/targetHttpProxy.ts",
        "compute/alpha/targetHttpsProxy.ts",
        "compute/alpha/targetInstance.ts",
        "compute/alpha/targetPool.ts",
        "compute/alpha/targetSslProxy.ts",
        "compute/alpha/targetTcpProxy.ts",
        "compute/alpha/targetVpnGateway.ts",
        "compute/alpha/urlMap.ts",
        "compute/alpha/vpnGateway.ts",
        "compute/alpha/vpnTunnel.ts",
        "compute/alpha/zoneInPlaceSnapshot.ts",
        "compute/alpha/zoneInPlaceSnapshotIamPolicy.ts",
        "compute/alpha/zoneInstantSnapshot.ts",
        "compute/alpha/zoneInstantSnapshotIamPolicy.ts",
        "compute/beta/address.ts",
        "compute/beta/autoscaler.ts",
        "compute/beta/backendBucket.ts",
        "compute/beta/backendBucketIamPolicy.ts",
        "compute/beta/backendService.ts",
        "compute/beta/disk.ts",
        "compute/beta/diskIamPolicy.ts",
        "compute/beta/externalVpnGateway.ts",
        "compute/beta/firewall.ts",
        "compute/beta/firewallPolicy.ts",
        "compute/beta/firewallPolicyIamPolicy.ts",
        "compute/beta/forwardingRule.ts",
        "compute/beta/globalAddress.ts",
        "compute/beta/globalForwardingRule.ts",
        "compute/beta/globalNetworkEndpointGroup.ts",
        "compute/beta/globalPublicDelegatedPrefix.ts",
        "compute/beta/healthCheck.ts",
        "compute/beta/httpHealthCheck.ts",
        "compute/beta/httpsHealthCheck.ts",
        "compute/beta/image.ts",
        "compute/beta/imageIamPolicy.ts",
        "compute/beta/index.ts",
        "compute/beta/instance.ts",
        "compute/beta/instanceGroup.ts",
        "compute/beta/instanceGroupManager.ts",
        "compute/beta/instanceIamPolicy.ts",
        "compute/beta/instanceTemplate.ts",
        "compute/beta/instanceTemplateIamPolicy.ts",
        "compute/beta/interconnect.ts",
        "compute/beta/interconnectAttachment.ts",
        "compute/beta/license.ts",
        "compute/beta/licenseIamPolicy.ts",
        "compute/beta/machineImage.ts",
        "compute/beta/machineImageIamPolicy.ts",
        "compute/beta/network.ts",
        "compute/beta/networkEndpointGroup.ts",
        "compute/beta/nodeGroup.ts",
        "compute/beta/nodeGroupIamPolicy.ts",
        "compute/beta/nodeTemplate.ts",
        "compute/beta/nodeTemplateIamPolicy.ts",
        "compute/beta/organizationSecurityPolicy.ts",
        "compute/beta/packetMirroring.ts",
        "compute/beta/publicAdvertisedPrefix.ts",
        "compute/beta/publicDelegatedPrefix.ts",
        "compute/beta/regionAutoscaler.ts",
        "compute/beta/regionBackendService.ts",
        "compute/beta/regionCommitment.ts",
        "compute/beta/regionDisk.ts",
        "compute/beta/regionDiskIamPolicy.ts",
        "compute/beta/regionHealthCheck.ts",
        "compute/beta/regionHealthCheckService.ts",
        "compute/beta/regionInstanceGroupManager.ts",
        "compute/beta/regionNetworkEndpointGroup.ts",
        "compute/beta/regionNotificationEndpoint.ts",
        "compute/beta/regionSslCertificate.ts",
        "compute/beta/regionTargetHttpProxy.ts",
        "compute/beta/regionTargetHttpsProxy.ts",
        "compute/beta/regionUrlMap.ts",
        "compute/beta/reservation.ts",
        "compute/beta/reservationIamPolicy.ts",
        "compute/beta/resourcePolicy.ts",
        "compute/beta/resourcePolicyIamPolicy.ts",
        "compute/beta/route.ts",
        "compute/beta/router.ts",
        "compute/beta/securityPolicy.ts",
        "compute/beta/serviceAttachment.ts",
        "compute/beta/serviceAttachmentIamPolicy.ts",
        "compute/beta/snapshot.ts",
        "compute/beta/snapshotIamPolicy.ts",
        "compute/beta/sslCertificate.ts",
        "compute/beta/sslPolicy.ts",
        "compute/beta/subnetwork.ts",
        "compute/beta/subnetworkIamPolicy.ts",
        "compute/beta/targetGrpcProxy.ts",
        "compute/beta/targetHttpProxy.ts",
        "compute/beta/targetHttpsProxy.ts",
        "compute/beta/targetInstance.ts",
        "compute/beta/targetPool.ts",
        "compute/beta/targetSslProxy.ts",
        "compute/beta/targetTcpProxy.ts",
        "compute/beta/targetVpnGateway.ts",
        "compute/beta/urlMap.ts",
        "compute/beta/vpnGateway.ts",
        "compute/beta/vpnTunnel.ts",
        "compute/index.ts",
        "compute/v1/address.ts",
        "compute/v1/autoscaler.ts",
        "compute/v1/backendBucket.ts",
        "compute/v1/backendService.ts",
        "compute/v1/disk.ts",
        "compute/v1/diskIamPolicy.ts",
        "compute/v1/externalVpnGateway.ts",
        "compute/v1/firewall.ts",
        "compute/v1/firewallPolicy.ts",
        "compute/v1/firewallPolicyIamPolicy.ts",
        "compute/v1/forwardingRule.ts",
        "compute/v1/globalAddress.ts",
        "compute/v1/globalForwardingRule.ts",
        "compute/v1/globalNetworkEndpointGroup.ts",
        "compute/v1/globalPublicDelegatedPrefix.ts",
        "compute/v1/healthCheck.ts",
        "compute/v1/httpHealthCheck.ts",
        "compute/v1/httpsHealthCheck.ts",
        "compute/v1/image.ts",
        "compute/v1/imageIamPolicy.ts",
        "compute/v1/index.ts",
        "compute/v1/instance.ts",
        "compute/v1/instanceGroup.ts",
        "compute/v1/instanceGroupManager.ts",
        "compute/v1/instanceIamPolicy.ts",
        "compute/v1/instanceTemplate.ts",
        "compute/v1/instanceTemplateIamPolicy.ts",
        "compute/v1/interconnect.ts",
        "compute/v1/interconnectAttachment.ts",
        "compute/v1/license.ts",
        "compute/v1/licenseIamPolicy.ts",
        "compute/v1/network.ts",
        "compute/v1/networkEndpointGroup.ts",
        "compute/v1/nodeGroup.ts",
        "compute/v1/nodeGroupIamPolicy.ts",
        "compute/v1/nodeTemplate.ts",
        "compute/v1/nodeTemplateIamPolicy.ts",
        "compute/v1/packetMirroring.ts",
        "compute/v1/publicAdvertisedPrefix.ts",
        "compute/v1/publicDelegatedPrefix.ts",
        "compute/v1/regionAutoscaler.ts",
        "compute/v1/regionBackendService.ts",
        "compute/v1/regionCommitment.ts",
        "compute/v1/regionDisk.ts",
        "compute/v1/regionDiskIamPolicy.ts",
        "compute/v1/regionHealthCheck.ts",
        "compute/v1/regionHealthCheckService.ts",
        "compute/v1/regionInstanceGroupManager.ts",
        "compute/v1/regionNetworkEndpointGroup.ts",
        "compute/v1/regionNotificationEndpoint.ts",
        "compute/v1/regionSslCertificate.ts",
        "compute/v1/regionTargetHttpProxy.ts",
        "compute/v1/regionTargetHttpsProxy.ts",
        "compute/v1/regionUrlMap.ts",
        "compute/v1/reservation.ts",
        "compute/v1/reservationIamPolicy.ts",
        "compute/v1/resourcePolicy.ts",
        "compute/v1/resourcePolicyIamPolicy.ts",
        "compute/v1/route.ts",
        "compute/v1/router.ts",
        "compute/v1/securityPolicy.ts",
        "compute/v1/snapshotIamPolicy.ts",
        "compute/v1/sslCertificate.ts",
        "compute/v1/sslPolicy.ts",
        "compute/v1/subnetwork.ts",
        "compute/v1/subnetworkIamPolicy.ts",
        "compute/v1/targetGrpcProxy.ts",
        "compute/v1/targetHttpProxy.ts",
        "compute/v1/targetHttpsProxy.ts",
        "compute/v1/targetInstance.ts",
        "compute/v1/targetPool.ts",
        "compute/v1/targetSslProxy.ts",
        "compute/v1/targetTcpProxy.ts",
        "compute/v1/targetVpnGateway.ts",
        "compute/v1/urlMap.ts",
        "compute/v1/vpnGateway.ts",
        "compute/v1/vpnTunnel.ts",
        "container/index.ts",
        "container/v1/cluster.ts",
        "container/v1/clusterNodePool.ts",
        "container/v1/index.ts",
        "container/v1beta1/cluster.ts",
        "container/v1beta1/clusterNodePool.ts",
        "container/v1beta1/index.ts",
        "containeranalysis/index.ts",
        "containeranalysis/v1alpha1/index.ts",
        "containeranalysis/v1alpha1/note.ts",
        "containeranalysis/v1alpha1/noteIamPolicy.ts",
        "containeranalysis/v1alpha1/occurrence.ts",
        "containeranalysis/v1alpha1/occurrenceIamPolicy.ts",
        "containeranalysis/v1alpha1/providerNote.ts",
        "containeranalysis/v1alpha1/providerNoteIamPolicy.ts",
        "containeranalysis/v1beta1/index.ts",
        "containeranalysis/v1beta1/note.ts",
        "containeranalysis/v1beta1/noteIamPolicy.ts",
        "containeranalysis/v1beta1/occurrence.ts",
        "containeranalysis/v1beta1/occurrenceIamPolicy.ts",
        "datacatalog/index.ts",
        "datacatalog/v1beta1/entryGroup.ts",
        "datacatalog/v1beta1/entryGroupEntry.ts",
        "datacatalog/v1beta1/entryGroupIamPolicy.ts",
        "datacatalog/v1beta1/index.ts",
        "datacatalog/v1beta1/tagTemplate.ts",
        "datacatalog/v1beta1/tagTemplateIamPolicy.ts",
        "datacatalog/v1beta1/taxonomy.ts",
        "datacatalog/v1beta1/taxonomyIamPolicy.ts",
        "datacatalog/v1beta1/taxonomyPolicyTag.ts",
        "datacatalog/v1beta1/taxonomyPolicyTagIamPolicy.ts",
        "dataflow/index.ts",
        "dataflow/v1b3/index.ts",
        "dataflow/v1b3/job.ts",
        "dataflow/v1b3/template.ts",
        "datafusion/index.ts",
        "datafusion/v1/index.ts",
        "datafusion/v1/instance.ts",
        "datafusion/v1/instanceIamPolicy.ts",
        "datafusion/v1beta1/index.ts",
        "datafusion/v1beta1/instance.ts",
        "datafusion/v1beta1/instanceIamPolicy.ts",
        "datafusion/v1beta1/instanceNamespaceIamPolicy.ts",
        "datalabeling/index.ts",
        "datalabeling/v1beta1/annotationSpecSet.ts",
        "datalabeling/v1beta1/dataset.ts",
        "datalabeling/v1beta1/datasetAnnotatedDatasetFeedbackThreadFeedbackMessage.ts",
        "datalabeling/v1beta1/evaluationJob.ts",
        "datalabeling/v1beta1/index.ts",
        "datalabeling/v1beta1/instruction.ts",
        "datamigration/index.ts",
        "datamigration/v1/connectionProfile.ts",
        "datamigration/v1/connectionProfileIamPolicy.ts",
        "datamigration/v1/index.ts",
        "datamigration/v1/migrationJob.ts",
        "datamigration/v1/migrationJobIamPolicy.ts",
        "datamigration/v1beta1/connectionProfile.ts",
        "datamigration/v1beta1/connectionProfileIamPolicy.ts",
        "datamigration/v1beta1/index.ts",
        "datamigration/v1beta1/migrationJob.ts",
        "datamigration/v1beta1/migrationJobIamPolicy.ts",
        "dataproc/index.ts",
        "dataproc/v1/autoscalingPolicy.ts",
        "dataproc/v1/autoscalingPolicyIamPolicy.ts",
        "dataproc/v1/index.ts",
        "dataproc/v1/regionAutoscalingPolicy.ts",
        "dataproc/v1/regionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1/regionCluster.ts",
        "dataproc/v1/regionClusterIamPolicy.ts",
        "dataproc/v1/regionJob.ts",
        "dataproc/v1/regionJobIamPolicy.ts",
        "dataproc/v1/regionOperationIamPolicy.ts",
        "dataproc/v1/regionWorkflowTemplate.ts",
        "dataproc/v1/regionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1/workflowTemplate.ts",
        "dataproc/v1/workflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/autoscalingPolicy.ts",
        "dataproc/v1beta2/autoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/index.ts",
        "dataproc/v1beta2/regionAutoscalingPolicy.ts",
        "dataproc/v1beta2/regionAutoscalingPolicyIamPolicy.ts",
        "dataproc/v1beta2/regionCluster.ts",
        "dataproc/v1beta2/regionClusterIamPolicy.ts",
        "dataproc/v1beta2/regionJob.ts",
        "dataproc/v1beta2/regionJobIamPolicy.ts",
        "dataproc/v1beta2/regionOperationIamPolicy.ts",
        "dataproc/v1beta2/regionWorkflowTemplate.ts",
        "dataproc/v1beta2/regionWorkflowTemplateIamPolicy.ts",
        "dataproc/v1beta2/workflowTemplate.ts",
        "dataproc/v1beta2/workflowTemplateIamPolicy.ts",
        "datastore/index.ts",
        "datastore/v1/index.ts",
        "datastore/v1/index_.ts",
        "deploymentmanager/alpha/compositeType.ts",
        "deploymentmanager/alpha/deployment.ts",
        "deploymentmanager/alpha/deploymentIamPolicy.ts",
        "deploymentmanager/alpha/index.ts",
        "deploymentmanager/alpha/typeProvider.ts",
        "deploymentmanager/index.ts",
        "deploymentmanager/v2/deployment.ts",
        "deploymentmanager/v2/deploymentIamPolicy.ts",
        "deploymentmanager/v2/index.ts",
        "deploymentmanager/v2beta/compositeType.ts",
        "deploymentmanager/v2beta/deployment.ts",
        "deploymentmanager/v2beta/deploymentIamPolicy.ts",
        "deploymentmanager/v2beta/index.ts",
        "deploymentmanager/v2beta/typeProvider.ts",
        "dialogflow/index.ts",
        "dialogflow/v2/agentEntityType.ts",
        "dialogflow/v2/agentEnvironment.ts",
        "dialogflow/v2/agentEnvironmentUserSessionContext.ts",
        "dialogflow/v2/agentEnvironmentUserSessionEntityType.ts",
        "dialogflow/v2/agentIntent.ts",
        "dialogflow/v2/agentKnowledgeBase.ts",
        "dialogflow/v2/agentKnowledgeBaseDocument.ts",
        "dialogflow/v2/agentSessionContext.ts",
        "dialogflow/v2/agentSessionEntityType.ts",
        "dialogflow/v2/agentVersion.ts",
        "dialogflow/v2/conversation.ts",
        "dialogflow/v2/conversationParticipant.ts",
        "dialogflow/v2/conversationProfile.ts",
        "dialogflow/v2/index.ts",
        "dialogflow/v2/knowledgeBase.ts",
        "dialogflow/v2/knowledgeBaseDocument.ts",
        "dialogflow/v2beta1/agentEntityType.ts",
        "dialogflow/v2beta1/agentEnvironment.ts",
        "dialogflow/v2beta1/agentEnvironmentUserSessionContext.ts",
        "dialogflow/v2beta1/agentEnvironmentUserSessionEntityType.ts",
        "dialogflow/v2beta1/agentIntent.ts",
        "dialogflow/v2beta1/agentKnowledgeBase.ts",
        "dialogflow/v2beta1/agentKnowledgeBaseDocument.ts",
        "dialogflow/v2beta1/agentSessionContext.ts",
        "dialogflow/v2beta1/agentSessionEntityType.ts",
        "dialogflow/v2beta1/agentVersion.ts",
        "dialogflow/v2beta1/conversation.ts",
        "dialogflow/v2beta1/conversationParticipant.ts",
        "dialogflow/v2beta1/conversationProfile.ts",
        "dialogflow/v2beta1/index.ts",
        "dialogflow/v2beta1/knowledgeBase.ts",
        "dialogflow/v2beta1/knowledgeBaseDocument.ts",
        "dialogflow/v3/agent.ts",
        "dialogflow/v3/agentEntityType.ts",
        "dialogflow/v3/agentEnvironment.ts",
        "dialogflow/v3/agentEnvironmentExperiment.ts",
        "dialogflow/v3/agentEnvironmentSessionEntityType.ts",
        "dialogflow/v3/agentFlow.ts",
        "dialogflow/v3/agentFlowPage.ts",
        "dialogflow/v3/agentFlowTransitionRouteGroup.ts",
        "dialogflow/v3/agentFlowVersion.ts",
        "dialogflow/v3/agentIntent.ts",
        "dialogflow/v3/agentSessionEntityType.ts",
        "dialogflow/v3/agentTestCase.ts",
        "dialogflow/v3/agentWebhook.ts",
        "dialogflow/v3/index.ts",
        "dialogflow/v3/securitySetting.ts",
        "dialogflow/v3beta1/agent.ts",
        "dialogflow/v3beta1/agentEntityType.ts",
        "dialogflow/v3beta1/agentEnvironment.ts",
        "dialogflow/v3beta1/agentEnvironmentExperiment.ts",
        "dialogflow/v3beta1/agentEnvironmentSessionEntityType.ts",
        "dialogflow/v3beta1/agentFlow.ts",
        "dialogflow/v3beta1/agentFlowPage.ts",
        "dialogflow/v3beta1/agentFlowTransitionRouteGroup.ts",
        "dialogflow/v3beta1/agentFlowVersion.ts",
        "dialogflow/v3beta1/agentIntent.ts",
        "dialogflow/v3beta1/agentSessionEntityType.ts",
        "dialogflow/v3beta1/agentTestCase.ts",
        "dialogflow/v3beta1/agentWebhook.ts",
        "dialogflow/v3beta1/index.ts",
        "dialogflow/v3beta1/securitySetting.ts",
        "dlp/index.ts",
        "dlp/v2/deidentifyTemplate.ts",
        "dlp/v2/dlpJob.ts",
        "dlp/v2/index.ts",
        "dlp/v2/inspectTemplate.ts",
        "dlp/v2/jobTrigger.ts",
        "dlp/v2/organizationDeidentifyTemplate.ts",
        "dlp/v2/organizationInspectTemplate.ts",
        "dlp/v2/organizationJobTrigger.ts",
        "dlp/v2/organizationStoredInfoType.ts",
        "dlp/v2/storedInfoType.ts",
        "dns/index.ts",
        "dns/v1/change.ts",
        "dns/v1/index.ts",
        "dns/v1/managedZone.ts",
        "dns/v1/managedZoneRrset.ts",
        "dns/v1/policy.ts",
        "dns/v1beta2/change.ts",
        "dns/v1beta2/index.ts",
        "dns/v1beta2/managedZone.ts",
        "dns/v1beta2/managedZoneRrset.ts",
        "dns/v1beta2/policy.ts",
        "dns/v1beta2/responsePolicy.ts",
        "dns/v1beta2/responsePolicyRule.ts",
        "domains/index.ts",
        "domains/v1alpha2/index.ts",
        "domains/v1alpha2/registration.ts",
        "domains/v1alpha2/registrationIamPolicy.ts",
        "domains/v1beta1/index.ts",
        "domains/v1beta1/registration.ts",
        "domains/v1beta1/registrationIamPolicy.ts",
        "essentialcontacts/index.ts",
        "essentialcontacts/v1/contact.ts",
        "essentialcontacts/v1/folderContact.ts",
        "essentialcontacts/v1/index.ts",
        "essentialcontacts/v1/organizationContact.ts",
        "eventarc/index.ts",
        "eventarc/v1/index.ts",
        "eventarc/v1/trigger.ts",
        "eventarc/v1/triggerIamPolicy.ts",
        "eventarc/v1beta1/index.ts",
        "eventarc/v1beta1/trigger.ts",
        "eventarc/v1beta1/triggerIamPolicy.ts",
        "file/index.ts",
        "file/v1/backup.ts",
        "file/v1/index.ts",
        "file/v1/instance.ts",
        "file/v1beta1/backup.ts",
        "file/v1beta1/index.ts",
        "file/v1beta1/instance.ts",
        "firebase/index.ts",
        "firebase/v1beta1/androidApp.ts",
        "firebase/v1beta1/index.ts",
        "firebase/v1beta1/iosApp.ts",
        "firebase/v1beta1/webApp.ts",
        "firebasedatabase/index.ts",
        "firebasedatabase/v1beta/index.ts",
        "firebasedatabase/v1beta/instance.ts",
        "firebasehosting/index.ts",
        "firebasehosting/v1beta1/index.ts",
        "firebasehosting/v1beta1/site.ts",
        "firebasehosting/v1beta1/siteChannel.ts",
        "firebasehosting/v1beta1/siteDomain.ts",
        "firebaseml/index.ts",
        "firebaseml/v1beta2/index.ts",
        "firebaseml/v1beta2/model.ts",
        "firebaserules/index.ts",
        "firebaserules/v1/index.ts",
        "firebaserules/v1/release.ts",
        "firebaserules/v1/ruleset.ts",
        "firestore/index.ts",
        "firestore/v1/databaseCollectionGroupIndex.ts",
        "firestore/v1/index.ts",
        "firestore/v1beta1/databaseIndex.ts",
        "firestore/v1beta1/index.ts",
        "firestore/v1beta2/databaseCollectionGroupIndex.ts",
        "firestore/v1beta2/index.ts",
        "gameservices/index.ts",
        "gameservices/v1/gameServerDeployment.ts",
        "gameservices/v1/gameServerDeploymentConfig.ts",
        "gameservices/v1/gameServerDeploymentIamPolicy.ts",
        "gameservices/v1/index.ts",
        "gameservices/v1/realm.ts",
        "gameservices/v1/realmGameServerCluster.ts",
        "gameservices/v1beta/gameServerDeployment.ts",
        "gameservices/v1beta/gameServerDeploymentConfig.ts",
        "gameservices/v1beta/gameServerDeploymentIamPolicy.ts",
        "gameservices/v1beta/index.ts",
        "gameservices/v1beta/realm.ts",
        "gameservices/v1beta/realmGameServerCluster.ts",
        "genomics/index.ts",
        "genomics/v1alpha2/index.ts",
        "genomics/v1alpha2/pipeline.ts",
        "gkehub/index.ts",
        "gkehub/v1/index.ts",
        "gkehub/v1/membership.ts",
        "gkehub/v1/membershipIamPolicy.ts",
        "gkehub/v1alpha/feature.ts",
        "gkehub/v1alpha/featureIamPolicy.ts",
        "gkehub/v1alpha/index.ts",
        "gkehub/v1alpha/membershipIamPolicy.ts",
        "gkehub/v1alpha2/index.ts",
        "gkehub/v1alpha2/membership.ts",
        "gkehub/v1alpha2/membershipIamPolicy.ts",
        "gkehub/v1beta/feature.ts",
        "gkehub/v1beta/featureIamPolicy.ts",
        "gkehub/v1beta/index.ts",
        "gkehub/v1beta/membershipIamPolicy.ts",
        "gkehub/v1beta1/index.ts",
        "gkehub/v1beta1/membership.ts",
        "gkehub/v1beta1/membershipIamPolicy.ts",
        "healthcare/index.ts",
        "healthcare/v1/dataset.ts",
        "healthcare/v1/datasetConsentStore.ts",
        "healthcare/v1/datasetConsentStoreAttributeDefinition.ts",
        "healthcare/v1/datasetConsentStoreConsent.ts",
        "healthcare/v1/datasetConsentStoreConsentArtifact.ts",
        "healthcare/v1/datasetConsentStoreIamPolicy.ts",
        "healthcare/v1/datasetConsentStoreUserDataMapping.ts",
        "healthcare/v1/datasetDicomStore.ts",
        "healthcare/v1/datasetDicomStoreIamPolicy.ts",
        "healthcare/v1/datasetFhirStore.ts",
        "healthcare/v1/datasetFhirStoreFhir.ts",
        "healthcare/v1/datasetFhirStoreIamPolicy.ts",
        "healthcare/v1/datasetHl7V2Store.ts",
        "healthcare/v1/datasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1/datasetHl7V2StoreMessage.ts",
        "healthcare/v1/datasetIamPolicy.ts",
        "healthcare/v1/index.ts",
        "healthcare/v1beta1/dataset.ts",
        "healthcare/v1beta1/datasetAnnotationStore.ts",
        "healthcare/v1beta1/datasetAnnotationStoreAnnotation.ts",
        "healthcare/v1beta1/datasetAnnotationStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetConsentStore.ts",
        "healthcare/v1beta1/datasetConsentStoreAttributeDefinition.ts",
        "healthcare/v1beta1/datasetConsentStoreConsent.ts",
        "healthcare/v1beta1/datasetConsentStoreConsentArtifact.ts",
        "healthcare/v1beta1/datasetConsentStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetConsentStoreUserDataMapping.ts",
        "healthcare/v1beta1/datasetDicomStore.ts",
        "healthcare/v1beta1/datasetDicomStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetFhirStore.ts",
        "healthcare/v1beta1/datasetFhirStoreFhir.ts",
        "healthcare/v1beta1/datasetFhirStoreIamPolicy.ts",
        "healthcare/v1beta1/datasetHl7V2Store.ts",
        "healthcare/v1beta1/datasetHl7V2StoreIamPolicy.ts",
        "healthcare/v1beta1/datasetHl7V2StoreMessage.ts",
        "healthcare/v1beta1/datasetIamPolicy.ts",
        "healthcare/v1beta1/index.ts",
        "iam/index.ts",
        "iam/v1/index.ts",
        "iam/v1/organizationRole.ts",
        "iam/v1/role.ts",
        "iam/v1/serviceAccount.ts",
        "iam/v1/serviceAccountIamPolicy.ts",
        "iam/v1/serviceAccountKey.ts",
        "iam/v1/workloadIdentityPool.ts",
        "iam/v1/workloadIdentityPoolProvider.ts",
        "iap/index.ts",
        "iap/v1/brand.ts",
        "iap/v1/brandIdentityAwareProxyClient.ts",
        "iap/v1/index.ts",
        "iap/v1/v1iamPolicy.ts",
        "iap/v1beta1/index.ts",
        "iap/v1beta1/v1beta1IamPolicy.ts",
        "index.ts",
        "jobs/index.ts",
        "jobs/v3/company.ts",
        "jobs/v3/index.ts",
        "jobs/v3/job.ts",
        "jobs/v4/index.ts",
        "jobs/v4/tenant.ts",
        "jobs/v4/tenantCompany.ts",
        "jobs/v4/tenantJob.ts",
        "logging/index.ts",
        "logging/v2/billingAccountExclusion.ts",
        "logging/v2/billingAccountSink.ts",
        "logging/v2/bucket.ts",
        "logging/v2/bucketView.ts",
        "logging/v2/exclusion.ts",
        "logging/v2/folderBucket.ts",
        "logging/v2/folderBucketView.ts",
        "logging/v2/folderExclusion.ts",
        "logging/v2/folderSink.ts",
        "logging/v2/index.ts",
        "logging/v2/metric.ts",
        "logging/v2/organizationBucket.ts",
        "logging/v2/organizationBucketView.ts",
        "logging/v2/organizationExclusion.ts",
        "logging/v2/organizationSink.ts",
        "logging/v2/sink.ts",
        "managedidentities/index.ts",
        "managedidentities/v1/domain.ts",
        "managedidentities/v1/domainIamPolicy.ts",
        "managedidentities/v1/index.ts",
        "managedidentities/v1alpha1/domain.ts",
        "managedidentities/v1alpha1/domainIamPolicy.ts",
        "managedidentities/v1alpha1/index.ts",
        "managedidentities/v1alpha1/peeringIamPolicy.ts",
        "managedidentities/v1beta1/domain.ts",
        "managedidentities/v1beta1/domainIamPolicy.ts",
        "managedidentities/v1beta1/index.ts",
        "managedidentities/v1beta1/peeringIamPolicy.ts",
        "memcache/index.ts",
        "memcache/v1/index.ts",
        "memcache/v1/instance.ts",
        "memcache/v1beta2/index.ts",
        "memcache/v1beta2/instance.ts",
        "metastore/index.ts",
        "metastore/v1alpha/index.ts",
        "metastore/v1alpha/service.ts",
        "metastore/v1alpha/serviceBackup.ts",
        "metastore/v1alpha/serviceIamPolicy.ts",
        "metastore/v1alpha/serviceMetadataImport.ts",
        "metastore/v1beta/index.ts",
        "metastore/v1beta/service.ts",
        "metastore/v1beta/serviceBackup.ts",
        "metastore/v1beta/serviceIamPolicy.ts",
        "metastore/v1beta/serviceMetadataImport.ts",
        "ml/index.ts",
        "ml/v1/index.ts",
        "ml/v1/job.ts",
        "ml/v1/jobIamPolicy.ts",
        "ml/v1/model.ts",
        "ml/v1/modelIamPolicy.ts",
        "ml/v1/modelVersion.ts",
        "ml/v1/study.ts",
        "ml/v1/studyTrial.ts",
        "monitoring/index.ts",
        "monitoring/v1/dashboard.ts",
        "monitoring/v1/index.ts",
        "monitoring/v3/alertPolicy.ts",
        "monitoring/v3/group.ts",
        "monitoring/v3/index.ts",
        "monitoring/v3/metricDescriptor.ts",
        "monitoring/v3/notificationChannel.ts",
        "monitoring/v3/service.ts",
        "monitoring/v3/serviceServiceLevelObjective.ts",
        "monitoring/v3/uptimeCheckConfig.ts",
        "networkconnectivity/index.ts",
        "networkconnectivity/v1alpha1/hub.ts",
        "networkconnectivity/v1alpha1/hubIamPolicy.ts",
        "networkconnectivity/v1alpha1/index.ts",
        "networkconnectivity/v1alpha1/internalRangeIamPolicy.ts",
        "networkconnectivity/v1alpha1/policyBasedRouteIamPolicy.ts",
        "networkconnectivity/v1alpha1/spoke.ts",
        "networkconnectivity/v1alpha1/spokeIamPolicy.ts",
        "networkmanagement/index.ts",
        "networkmanagement/v1/connectivityTest.ts",
        "networkmanagement/v1/connectivityTestIamPolicy.ts",
        "networkmanagement/v1/index.ts",
        "networkmanagement/v1beta1/connectivityTest.ts",
        "networkmanagement/v1beta1/connectivityTestIamPolicy.ts",
        "networkmanagement/v1beta1/index.ts",
        "notebooks/index.ts",
        "notebooks/v1/environment.ts",
        "notebooks/v1/execution.ts",
        "notebooks/v1/index.ts",
        "notebooks/v1/instance.ts",
        "notebooks/v1/instanceIamPolicy.ts",
        "notebooks/v1/runtime.ts",
        "notebooks/v1/schedule.ts",
        "orgpolicy/index.ts",
        "orgpolicy/v2/folderPolicy.ts",
        "orgpolicy/v2/index.ts",
        "orgpolicy/v2/organizationPolicy.ts",
        "orgpolicy/v2/policy.ts",
        "osconfig/index.ts",
        "osconfig/v1/index.ts",
        "osconfig/v1/patchDeployment.ts",
        "osconfig/v1beta/guestPolicy.ts",
        "osconfig/v1beta/index.ts",
        "osconfig/v1beta/patchDeployment.ts",
        "policysimulator/index.ts",
        "policysimulator/v1/folderReplay.ts",
        "policysimulator/v1/index.ts",
        "policysimulator/v1/organizationReplay.ts",
        "policysimulator/v1/replay.ts",
        "policysimulator/v1beta1/folderReplay.ts",
        "policysimulator/v1beta1/index.ts",
        "policysimulator/v1beta1/organizationReplay.ts",
        "policysimulator/v1beta1/replay.ts",
        "privateca/index.ts",
        "privateca/v1beta1/certificateAuthority.ts",
        "privateca/v1beta1/certificateAuthorityCertificate.ts",
        "privateca/v1beta1/certificateAuthorityCertificateRevocationListIamPolicy.ts",
        "privateca/v1beta1/certificateAuthorityIamPolicy.ts",
        "privateca/v1beta1/index.ts",
        "privateca/v1beta1/reusableConfigIamPolicy.ts",
        "provider.ts",
        "pubsub/index.ts",
        "pubsub/v1/index.ts",
        "pubsub/v1/schema.ts",
        "pubsub/v1/schemaIamPolicy.ts",
        "pubsub/v1/snapshot.ts",
        "pubsub/v1/snapshotIamPolicy.ts",
        "pubsub/v1/subscription.ts",
        "pubsub/v1/subscriptionIamPolicy.ts",
        "pubsub/v1/topic.ts",
        "pubsub/v1/topicIamPolicy.ts",
        "pubsub/v1beta1a/index.ts",
        "pubsub/v1beta1a/subscription.ts",
        "pubsub/v1beta1a/topic.ts",
        "pubsub/v1beta2/index.ts",
        "pubsub/v1beta2/subscription.ts",
        "pubsub/v1beta2/subscriptionIamPolicy.ts",
        "pubsub/v1beta2/topic.ts",
        "pubsub/v1beta2/topicIamPolicy.ts",
        "pubsublite/index.ts",
        "pubsublite/v1/adminSubscription.ts",
        "pubsublite/v1/adminTopic.ts",
        "pubsublite/v1/index.ts",
        "recommendationengine/index.ts",
        "recommendationengine/v1beta1/catalogCatalogItem.ts",
        "recommendationengine/v1beta1/index.ts",
        "redis/index.ts",
        "redis/v1/index.ts",
        "redis/v1/instance.ts",
        "redis/v1beta1/index.ts",
        "redis/v1beta1/instance.ts",
        "remotebuildexecution/index.ts",
        "remotebuildexecution/v1alpha/index.ts",
        "remotebuildexecution/v1alpha/instance.ts",
        "remotebuildexecution/v1alpha/instanceWorkerpool.ts",
        "retail/index.ts",
        "retail/v2/catalogBranchProduct.ts",
        "retail/v2/index.ts",
        "retail/v2alpha/catalogBranchProduct.ts",
        "retail/v2alpha/index.ts",
        "retail/v2beta/catalogBranchProduct.ts",
        "retail/v2beta/index.ts",
        "run/index.ts",
        "run/v1/domainmapping.ts",
        "run/v1/index.ts",
        "run/v1/namespaceDomainmapping.ts",
        "run/v1/namespaceService.ts",
        "run/v1/service.ts",
        "run/v1/serviceIamPolicy.ts",
        "run/v1alpha1/index.ts",
        "run/v1alpha1/namespaceJob.ts",
        "runtimeconfig/index.ts",
        "runtimeconfig/v1beta1/config.ts",
        "runtimeconfig/v1beta1/configIamPolicy.ts",
        "runtimeconfig/v1beta1/configVariable.ts",
        "runtimeconfig/v1beta1/configWaiter.ts",
        "runtimeconfig/v1beta1/index.ts",
        "secretmanager/index.ts",
        "secretmanager/v1/index.ts",
        "secretmanager/v1/secret.ts",
        "secretmanager/v1/secretIamPolicy.ts",
        "secretmanager/v1beta1/index.ts",
        "secretmanager/v1beta1/secret.ts",
        "secretmanager/v1beta1/secretIamPolicy.ts",
        "securitycenter/index.ts",
        "securitycenter/v1/index.ts",
        "securitycenter/v1/organizationNotificationConfig.ts",
        "securitycenter/v1/organizationSource.ts",
        "securitycenter/v1/organizationSourceIamPolicy.ts",
        "securitycenter/v1beta1/index.ts",
        "securitycenter/v1beta1/organizationSource.ts",
        "securitycenter/v1beta1/organizationSourceIamPolicy.ts",
        "servicedirectory/index.ts",
        "servicedirectory/v1/index.ts",
        "servicedirectory/v1/namespace.ts",
        "servicedirectory/v1/namespaceIamPolicy.ts",
        "servicedirectory/v1/namespaceService.ts",
        "servicedirectory/v1/namespaceServiceEndpoint.ts",
        "servicedirectory/v1/namespaceServiceIamPolicy.ts",
        "servicedirectory/v1beta1/index.ts",
        "servicedirectory/v1beta1/namespace.ts",
        "servicedirectory/v1beta1/namespaceIamPolicy.ts",
        "servicedirectory/v1beta1/namespaceService.ts",
        "servicedirectory/v1beta1/namespaceServiceEndpoint.ts",
        "servicedirectory/v1beta1/namespaceServiceIamPolicy.ts",
        "servicemanagement/index.ts",
        "servicemanagement/v1/index.ts",
        "servicemanagement/v1/service.ts",
        "servicemanagement/v1/serviceConfig.ts",
        "servicemanagement/v1/serviceConsumerIamPolicy.ts",
        "servicemanagement/v1/serviceIamPolicy.ts",
        "servicemanagement/v1/serviceRollout.ts",
        "sourcerepo/index.ts",
        "sourcerepo/v1/index.ts",
        "sourcerepo/v1/repo.ts",
        "sourcerepo/v1/repoIamPolicy.ts",
        "spanner/index.ts",
        "spanner/v1/index.ts",
        "spanner/v1/instance.ts",
        "spanner/v1/instanceBackup.ts",
        "spanner/v1/instanceBackupIamPolicy.ts",
        "spanner/v1/instanceDatabase.ts",
        "spanner/v1/instanceDatabaseIamPolicy.ts",
        "spanner/v1/instanceDatabaseSession.ts",
        "spanner/v1/instanceIamPolicy.ts",
        "sqladmin/index.ts",
        "sqladmin/v1beta4/backupRun.ts",
        "sqladmin/v1beta4/database.ts",
        "sqladmin/v1beta4/index.ts",
        "sqladmin/v1beta4/instance.ts",
        "sqladmin/v1beta4/sslCert.ts",
        "storage/index.ts",
        "storage/v1/bucket.ts",
        "storage/v1/bucketAccessControl.ts",
        "storage/v1/bucketIamPolicy.ts",
        "storage/v1/bucketObject.ts",
        "storage/v1/defaultObjectAccessControl.ts",
        "storage/v1/hmacKey.ts",
        "storage/v1/index.ts",
        "storage/v1/notification.ts",
        "storage/v1/objectAccessControl.ts",
        "storage/v1/objectIamPolicy.ts",
        "storagetransfer/index.ts",
        "storagetransfer/v1/index.ts",
        "storagetransfer/v1/transferJob.ts",
        "testing/index.ts",
        "testing/v1/index.ts",
        "testing/v1/testMatrix.ts",
        "toolresults/index.ts",
        "toolresults/v1beta3/history.ts",
        "toolresults/v1beta3/historyExecution.ts",
        "toolresults/v1beta3/historyExecutionStep.ts",
        "toolresults/v1beta3/historyExecutionStepPerfSampleSeries.ts",
        "toolresults/v1beta3/index.ts",
        "tpu/index.ts",
        "tpu/v1/index.ts",
        "tpu/v1/node.ts",
        "tpu/v1alpha1/index.ts",
        "tpu/v1alpha1/node.ts",
        "transcoder/index.ts",
        "transcoder/v1beta1/index.ts",
        "transcoder/v1beta1/job.ts",
        "transcoder/v1beta1/jobTemplate.ts",
        "translate/index.ts",
        "translate/v3/glossary.ts",
        "translate/v3/index.ts",
        "translate/v3beta1/glossary.ts",
        "translate/v3beta1/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vision/index.ts",
        "vision/v1/index.ts",
        "vision/v1/product.ts",
        "vision/v1/productReferenceImage.ts",
        "vision/v1/productSet.ts",
        "vpcaccess/index.ts",
        "vpcaccess/v1/connector.ts",
        "vpcaccess/v1/index.ts",
        "websecurityscanner/index.ts",
        "websecurityscanner/v1/index.ts",
        "websecurityscanner/v1/scanConfig.ts",
        "websecurityscanner/v1alpha/index.ts",
        "websecurityscanner/v1alpha/scanConfig.ts",
        "websecurityscanner/v1beta/index.ts",
        "websecurityscanner/v1beta/scanConfig.ts",
        "workflowexecutions/index.ts",
        "workflowexecutions/v1/index.ts",
        "workflowexecutions/v1/workflowExecution.ts",
        "workflowexecutions/v1beta/index.ts",
        "workflowexecutions/v1beta/workflowExecution.ts",
        "workflows/index.ts",
        "workflows/v1/index.ts",
        "workflows/v1/workflow.ts",
        "workflows/v1beta/index.ts",
        "workflows/v1beta/workflow.ts"
    ]
}
