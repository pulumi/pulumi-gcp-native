// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Returns the requested workstation.
 */
export function getWorkstation(args: GetWorkstationArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkstationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:workstations/v1beta:getWorkstation", {
        "location": args.location,
        "project": args.project,
        "workstationClusterId": args.workstationClusterId,
        "workstationConfigId": args.workstationConfigId,
        "workstationId": args.workstationId,
    }, opts);
}

export interface GetWorkstationArgs {
    location: string;
    project?: string;
    workstationClusterId: string;
    workstationConfigId: string;
    workstationId: string;
}

export interface GetWorkstationResult {
    /**
     * Client-specified annotations.
     */
    readonly annotations: {[key: string]: string};
    /**
     * Time when this resource was created.
     */
    readonly createTime: string;
    /**
     * Time when this resource was soft-deleted.
     */
    readonly deleteTime: string;
    /**
     * Human-readable name for this resource.
     */
    readonly displayName: string;
    /**
     * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format "{port}-{host}".
     */
    readonly host: string;
    /**
     * Full name of this resource.
     */
    readonly name: string;
    /**
     * Indicates whether this resource is currently being updated to match its intended state.
     */
    readonly reconciling: boolean;
    /**
     * Current state of the workstation.
     */
    readonly state: string;
    /**
     * A system-assigned unique identified for this resource.
     */
    readonly uid: string;
    /**
     * Time when this resource was most recently updated.
     */
    readonly updateTime: string;
}

export function getWorkstationOutput(args: GetWorkstationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkstationResult> {
    return pulumi.output(args).apply(a => getWorkstation(a, opts))
}

export interface GetWorkstationOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workstationClusterId: pulumi.Input<string>;
    workstationConfigId: pulumi.Input<string>;
    workstationId: pulumi.Input<string>;
}
