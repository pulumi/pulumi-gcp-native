// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetWorkstationArgs, GetWorkstationResult, GetWorkstationOutputArgs } from "./getWorkstation";
export const getWorkstation: typeof import("./getWorkstation").getWorkstation = null as any;
export const getWorkstationOutput: typeof import("./getWorkstation").getWorkstationOutput = null as any;
utilities.lazyLoad(exports, ["getWorkstation","getWorkstationOutput"], () => require("./getWorkstation"));

export { GetWorkstationClusterArgs, GetWorkstationClusterResult, GetWorkstationClusterOutputArgs } from "./getWorkstationCluster";
export const getWorkstationCluster: typeof import("./getWorkstationCluster").getWorkstationCluster = null as any;
export const getWorkstationClusterOutput: typeof import("./getWorkstationCluster").getWorkstationClusterOutput = null as any;
utilities.lazyLoad(exports, ["getWorkstationCluster","getWorkstationClusterOutput"], () => require("./getWorkstationCluster"));

export { GetWorkstationClusterWorkstationConfigIamPolicyArgs, GetWorkstationClusterWorkstationConfigIamPolicyResult, GetWorkstationClusterWorkstationConfigIamPolicyOutputArgs } from "./getWorkstationClusterWorkstationConfigIamPolicy";
export const getWorkstationClusterWorkstationConfigIamPolicy: typeof import("./getWorkstationClusterWorkstationConfigIamPolicy").getWorkstationClusterWorkstationConfigIamPolicy = null as any;
export const getWorkstationClusterWorkstationConfigIamPolicyOutput: typeof import("./getWorkstationClusterWorkstationConfigIamPolicy").getWorkstationClusterWorkstationConfigIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkstationClusterWorkstationConfigIamPolicy","getWorkstationClusterWorkstationConfigIamPolicyOutput"], () => require("./getWorkstationClusterWorkstationConfigIamPolicy"));

export { GetWorkstationClusterWorkstationConfigWorkstationIamPolicyArgs, GetWorkstationClusterWorkstationConfigWorkstationIamPolicyResult, GetWorkstationClusterWorkstationConfigWorkstationIamPolicyOutputArgs } from "./getWorkstationClusterWorkstationConfigWorkstationIamPolicy";
export const getWorkstationClusterWorkstationConfigWorkstationIamPolicy: typeof import("./getWorkstationClusterWorkstationConfigWorkstationIamPolicy").getWorkstationClusterWorkstationConfigWorkstationIamPolicy = null as any;
export const getWorkstationClusterWorkstationConfigWorkstationIamPolicyOutput: typeof import("./getWorkstationClusterWorkstationConfigWorkstationIamPolicy").getWorkstationClusterWorkstationConfigWorkstationIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkstationClusterWorkstationConfigWorkstationIamPolicy","getWorkstationClusterWorkstationConfigWorkstationIamPolicyOutput"], () => require("./getWorkstationClusterWorkstationConfigWorkstationIamPolicy"));

export { GetWorkstationConfigArgs, GetWorkstationConfigResult, GetWorkstationConfigOutputArgs } from "./getWorkstationConfig";
export const getWorkstationConfig: typeof import("./getWorkstationConfig").getWorkstationConfig = null as any;
export const getWorkstationConfigOutput: typeof import("./getWorkstationConfig").getWorkstationConfigOutput = null as any;
utilities.lazyLoad(exports, ["getWorkstationConfig","getWorkstationConfigOutput"], () => require("./getWorkstationConfig"));

export { WorkstationArgs } from "./workstation";
export type Workstation = import("./workstation").Workstation;
export const Workstation: typeof import("./workstation").Workstation = null as any;
utilities.lazyLoad(exports, ["Workstation"], () => require("./workstation"));

export { WorkstationClusterArgs } from "./workstationCluster";
export type WorkstationCluster = import("./workstationCluster").WorkstationCluster;
export const WorkstationCluster: typeof import("./workstationCluster").WorkstationCluster = null as any;
utilities.lazyLoad(exports, ["WorkstationCluster"], () => require("./workstationCluster"));

export { WorkstationClusterWorkstationConfigIamBindingArgs } from "./workstationClusterWorkstationConfigIamBinding";
export type WorkstationClusterWorkstationConfigIamBinding = import("./workstationClusterWorkstationConfigIamBinding").WorkstationClusterWorkstationConfigIamBinding;
export const WorkstationClusterWorkstationConfigIamBinding: typeof import("./workstationClusterWorkstationConfigIamBinding").WorkstationClusterWorkstationConfigIamBinding = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigIamBinding"], () => require("./workstationClusterWorkstationConfigIamBinding"));

export { WorkstationClusterWorkstationConfigIamMemberArgs } from "./workstationClusterWorkstationConfigIamMember";
export type WorkstationClusterWorkstationConfigIamMember = import("./workstationClusterWorkstationConfigIamMember").WorkstationClusterWorkstationConfigIamMember;
export const WorkstationClusterWorkstationConfigIamMember: typeof import("./workstationClusterWorkstationConfigIamMember").WorkstationClusterWorkstationConfigIamMember = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigIamMember"], () => require("./workstationClusterWorkstationConfigIamMember"));

export { WorkstationClusterWorkstationConfigIamPolicyArgs } from "./workstationClusterWorkstationConfigIamPolicy";
export type WorkstationClusterWorkstationConfigIamPolicy = import("./workstationClusterWorkstationConfigIamPolicy").WorkstationClusterWorkstationConfigIamPolicy;
export const WorkstationClusterWorkstationConfigIamPolicy: typeof import("./workstationClusterWorkstationConfigIamPolicy").WorkstationClusterWorkstationConfigIamPolicy = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigIamPolicy"], () => require("./workstationClusterWorkstationConfigIamPolicy"));

export { WorkstationClusterWorkstationConfigWorkstationIamBindingArgs } from "./workstationClusterWorkstationConfigWorkstationIamBinding";
export type WorkstationClusterWorkstationConfigWorkstationIamBinding = import("./workstationClusterWorkstationConfigWorkstationIamBinding").WorkstationClusterWorkstationConfigWorkstationIamBinding;
export const WorkstationClusterWorkstationConfigWorkstationIamBinding: typeof import("./workstationClusterWorkstationConfigWorkstationIamBinding").WorkstationClusterWorkstationConfigWorkstationIamBinding = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigWorkstationIamBinding"], () => require("./workstationClusterWorkstationConfigWorkstationIamBinding"));

export { WorkstationClusterWorkstationConfigWorkstationIamMemberArgs } from "./workstationClusterWorkstationConfigWorkstationIamMember";
export type WorkstationClusterWorkstationConfigWorkstationIamMember = import("./workstationClusterWorkstationConfigWorkstationIamMember").WorkstationClusterWorkstationConfigWorkstationIamMember;
export const WorkstationClusterWorkstationConfigWorkstationIamMember: typeof import("./workstationClusterWorkstationConfigWorkstationIamMember").WorkstationClusterWorkstationConfigWorkstationIamMember = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigWorkstationIamMember"], () => require("./workstationClusterWorkstationConfigWorkstationIamMember"));

export { WorkstationClusterWorkstationConfigWorkstationIamPolicyArgs } from "./workstationClusterWorkstationConfigWorkstationIamPolicy";
export type WorkstationClusterWorkstationConfigWorkstationIamPolicy = import("./workstationClusterWorkstationConfigWorkstationIamPolicy").WorkstationClusterWorkstationConfigWorkstationIamPolicy;
export const WorkstationClusterWorkstationConfigWorkstationIamPolicy: typeof import("./workstationClusterWorkstationConfigWorkstationIamPolicy").WorkstationClusterWorkstationConfigWorkstationIamPolicy = null as any;
utilities.lazyLoad(exports, ["WorkstationClusterWorkstationConfigWorkstationIamPolicy"], () => require("./workstationClusterWorkstationConfigWorkstationIamPolicy"));

export { WorkstationConfigArgs } from "./workstationConfig";
export type WorkstationConfig = import("./workstationConfig").WorkstationConfig;
export const WorkstationConfig: typeof import("./workstationConfig").WorkstationConfig = null as any;
utilities.lazyLoad(exports, ["WorkstationConfig"], () => require("./workstationConfig"));


// Export enums:
export * from "../../types/enums/workstations/v1beta";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:workstations/v1beta:Workstation":
                return new Workstation(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationCluster":
                return new WorkstationCluster(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigIamBinding":
                return new WorkstationClusterWorkstationConfigIamBinding(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigIamMember":
                return new WorkstationClusterWorkstationConfigIamMember(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigIamPolicy":
                return new WorkstationClusterWorkstationConfigIamPolicy(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigWorkstationIamBinding":
                return new WorkstationClusterWorkstationConfigWorkstationIamBinding(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigWorkstationIamMember":
                return new WorkstationClusterWorkstationConfigWorkstationIamMember(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationClusterWorkstationConfigWorkstationIamPolicy":
                return new WorkstationClusterWorkstationConfigWorkstationIamPolicy(name, <any>undefined, { urn })
            case "google-native:workstations/v1beta:WorkstationConfig":
                return new WorkstationConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "workstations/v1beta", _module)
