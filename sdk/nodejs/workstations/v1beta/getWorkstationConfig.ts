// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns the requested workstation configuration.
 */
export function getWorkstationConfig(args: GetWorkstationConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkstationConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:workstations/v1beta:getWorkstationConfig", {
        "location": args.location,
        "project": args.project,
        "workstationClusterId": args.workstationClusterId,
        "workstationConfigId": args.workstationConfigId,
    }, opts);
}

export interface GetWorkstationConfigArgs {
    location: string;
    project?: string;
    workstationClusterId: string;
    workstationConfigId: string;
}

export interface GetWorkstationConfigResult {
    /**
     * Optional. Client-specified annotations.
     */
    readonly annotations: {[key: string]: string};
    /**
     * Status conditions describing the current resource state.
     */
    readonly conditions: outputs.workstations.v1beta.StatusResponse[];
    /**
     * Optional. Container that runs upon startup for each workstation using this workstation configuration.
     */
    readonly container: outputs.workstations.v1beta.ContainerResponse;
    /**
     * Time when this workstation configuration was created.
     */
    readonly createTime: string;
    /**
     * Whether this resource is degraded, in which case it may require user action to restore full functionality. See also the conditions field.
     */
    readonly degraded: boolean;
    /**
     * Time when this workstation configuration was soft-deleted.
     */
    readonly deleteTime: string;
    /**
     * Optional. Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
     */
    readonly disableTcpConnections: boolean;
    /**
     * Optional. Human-readable name for this workstation configuration.
     */
    readonly displayName: string;
    /**
     * Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service account must also be specified that has `logging.buckets.write` permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).
     */
    readonly enableAuditAgent: boolean;
    /**
     * Immutable. Encrypts resources of this workstation configuration using a customer-managed encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata. If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk might be lost. If the encryption key is revoked, the workstation session automatically stops within 7 hours. Immutable after the workstation configuration is created.
     */
    readonly encryptionKey: outputs.workstations.v1beta.CustomerEncryptionKeyResponse;
    /**
     * Optional. Ephemeral directories which won't persist across workstation sessions.
     */
    readonly ephemeralDirectories: outputs.workstations.v1beta.EphemeralDirectoryResponse[];
    /**
     * Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * Optional. Runtime host for the workstation.
     */
    readonly host: outputs.workstations.v1beta.HostResponse;
    /**
     * Optional. Number of seconds to wait before automatically stopping a workstation after it last received user traffic. A value of `"0s"` indicates that Cloud Workstations VMs created with this configuration should never time out due to idleness. Provide [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example, `"7200s"` (2 hours). The default is `"1200s"` (20 minutes).
     */
    readonly idleTimeout: string;
    /**
     * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation configuration and that are also propagated to the underlying Compute Engine resources.
     */
    readonly labels: {[key: string]: string};
    /**
     * Identifier. Full name of this workstation configuration.
     */
    readonly name: string;
    /**
     * Optional. Directories to persist across workstation sessions.
     */
    readonly persistentDirectories: outputs.workstations.v1beta.PersistentDirectoryResponse[];
    /**
     * Optional. Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.
     */
    readonly readinessChecks: outputs.workstations.v1beta.ReadinessCheckResponse[];
    /**
     * Indicates whether this workstation configuration is currently being updated to match its intended state.
     */
    readonly reconciling: boolean;
    /**
     * Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the workstation cluster's region must be specified—for example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within the region are used. Immutable after the workstation configuration is created.
     */
    readonly replicaZones: string[];
    /**
     * Optional. Number of seconds that a workstation can run until it is automatically shut down. We recommend that workstations be shut down daily to reduce costs and so that security updates can be applied upon restart. The idle_timeout and running_timeout fields are independent of each other. Note that the running_timeout field shuts down VMs after the specified time, regardless of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example, `"54000s"` (15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates that workstations using this configuration should never time out. If encryption_key is set, it must be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value of `"0s"` indicates that Cloud Workstations VMs created with this configuration have no maximum running time. This is strongly discouraged because you incur costs and will not pick up security updates.
     */
    readonly runningTimeout: string;
    /**
     * A system-assigned unique identifier for this workstation configuration.
     */
    readonly uid: string;
    /**
     * Time when this workstation configuration was most recently updated.
     */
    readonly updateTime: string;
}
/**
 * Returns the requested workstation configuration.
 */
export function getWorkstationConfigOutput(args: GetWorkstationConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkstationConfigResult> {
    return pulumi.output(args).apply((a: any) => getWorkstationConfig(a, opts))
}

export interface GetWorkstationConfigOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workstationClusterId: pulumi.Input<string>;
    workstationConfigId: pulumi.Input<string>;
}
