// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns the requested workstation cluster.
 */
export function getWorkstationCluster(args: GetWorkstationClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkstationClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:workstations/v1beta:getWorkstationCluster", {
        "location": args.location,
        "project": args.project,
        "workstationClusterId": args.workstationClusterId,
    }, opts);
}

export interface GetWorkstationClusterArgs {
    location: string;
    project?: string;
    workstationClusterId: string;
}

export interface GetWorkstationClusterResult {
    /**
     * Optional. Client-specified annotations.
     */
    readonly annotations: {[key: string]: string};
    /**
     * Status conditions describing the workstation cluster's current state.
     */
    readonly conditions: outputs.workstations.v1beta.StatusResponse[];
    /**
     * The private IP address of the control plane for this workstation cluster. Workstation VMs need access to this IP address to work with the service, so make sure that your firewall rules allow egress from the workstation VMs to this address.
     */
    readonly controlPlaneIp: string;
    /**
     * Time when this workstation cluster was created.
     */
    readonly createTime: string;
    /**
     * Whether this workstation cluster is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in conditions.
     */
    readonly degraded: boolean;
    /**
     * Time when this workstation cluster was soft-deleted.
     */
    readonly deleteTime: string;
    /**
     * Optional. Human-readable name for this workstation cluster.
     */
    readonly displayName: string;
    /**
     * Optional. Configuration options for a custom domain.
     */
    readonly domainConfig: outputs.workstations.v1beta.DomainConfigResponse;
    /**
     * Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation cluster and that are also propagated to the underlying Compute Engine resources.
     */
    readonly labels: {[key: string]: string};
    /**
     * Identifier. Full name of this workstation cluster.
     */
    readonly name: string;
    /**
     * Immutable. Name of the Compute Engine network in which instances associated with this workstation cluster will be created.
     */
    readonly network: string;
    /**
     * Optional. Configuration for private workstation cluster.
     */
    readonly privateClusterConfig: outputs.workstations.v1beta.PrivateClusterConfigResponse;
    /**
     * Indicates whether this workstation cluster is currently being updated to match its intended state.
     */
    readonly reconciling: boolean;
    /**
     * Immutable. Name of the Compute Engine subnetwork in which instances associated with this workstation cluster will be created. Must be part of the subnetwork specified for this workstation cluster.
     */
    readonly subnetwork: string;
    /**
     * A system-assigned unique identifier for this workstation cluster.
     */
    readonly uid: string;
    /**
     * Time when this workstation cluster was most recently updated.
     */
    readonly updateTime: string;
}
/**
 * Returns the requested workstation cluster.
 */
export function getWorkstationClusterOutput(args: GetWorkstationClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkstationClusterResult> {
    return pulumi.output(args).apply((a: any) => getWorkstationCluster(a, opts))
}

export interface GetWorkstationClusterOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workstationClusterId: pulumi.Input<string>;
}
