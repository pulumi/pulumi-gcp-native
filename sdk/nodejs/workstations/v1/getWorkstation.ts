// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Returns the requested workstation.
 */
export function getWorkstation(args: GetWorkstationArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkstationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:workstations/v1:getWorkstation", {
        "location": args.location,
        "project": args.project,
        "workstationClusterId": args.workstationClusterId,
        "workstationConfigId": args.workstationConfigId,
        "workstationId": args.workstationId,
    }, opts);
}

export interface GetWorkstationArgs {
    location: string;
    project?: string;
    workstationClusterId: string;
    workstationConfigId: string;
    workstationId: string;
}

export interface GetWorkstationResult {
    /**
     * Optional. Client-specified annotations.
     */
    readonly annotations: {[key: string]: string};
    /**
     * Time when this workstation was created.
     */
    readonly createTime: string;
    /**
     * Time when this workstation was soft-deleted.
     */
    readonly deleteTime: string;
    /**
     * Optional. Human-readable name for this workstation.
     */
    readonly displayName: string;
    /**
     * Optional. Environment variables passed to the workstation container's entrypoint.
     */
    readonly env: {[key: string]: string};
    /**
     * Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format `{port}-{host}`.
     */
    readonly host: string;
    /**
     * Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation and that are also propagated to the underlying Compute Engine resources.
     */
    readonly labels: {[key: string]: string};
    /**
     * Identifier. Full name of this workstation.
     */
    readonly name: string;
    /**
     * Indicates whether this workstation is currently being updated to match its intended state.
     */
    readonly reconciling: boolean;
    /**
     * Time when this workstation was most recently successfully started, regardless of the workstation's initial state.
     */
    readonly startTime: string;
    /**
     * Current state of the workstation.
     */
    readonly state: string;
    /**
     * A system-assigned unique identifier for this workstation.
     */
    readonly uid: string;
    /**
     * Time when this workstation was most recently updated.
     */
    readonly updateTime: string;
}
/**
 * Returns the requested workstation.
 */
export function getWorkstationOutput(args: GetWorkstationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkstationResult> {
    return pulumi.output(args).apply((a: any) => getWorkstation(a, opts))
}

export interface GetWorkstationOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    workstationClusterId: pulumi.Input<string>;
    workstationConfigId: pulumi.Input<string>;
    workstationId: pulumi.Input<string>;
}
