// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new ManagedZone in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class ManagedZone extends pulumi.CustomResource {
    /**
     * Get an existing ManagedZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ManagedZone {
        return new ManagedZone(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:connectors/v1:ManagedZone';

    /**
     * Returns true if the given object is an instance of ManagedZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedZone.__pulumiType;
    }

    /**
     * Created time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Description of the resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * DNS Name of the resource
     */
    public readonly dns!: pulumi.Output<string>;
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
     */
    public readonly managedZoneId!: pulumi.Output<string>;
    /**
     * Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The name of the Target Project
     */
    public readonly targetProject!: pulumi.Output<string>;
    /**
     * The name of the Target Project VPC Network
     */
    public readonly targetVpc!: pulumi.Output<string>;
    /**
     * Updated time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ManagedZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedZoneArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dns'");
            }
            if ((!args || args.managedZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedZoneId'");
            }
            if ((!args || args.targetProject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetProject'");
            }
            if ((!args || args.targetVpc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetVpc'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dns"] = args ? args.dns : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["managedZoneId"] = args ? args.managedZoneId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["targetProject"] = args ? args.targetProject : undefined;
            resourceInputs["targetVpc"] = args ? args.targetVpc : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["dns"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["managedZoneId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["targetProject"] = undefined /*out*/;
            resourceInputs["targetVpc"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["managedZoneId", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ManagedZone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ManagedZone resource.
 */
export interface ManagedZoneArgs {
    /**
     * Optional. Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * DNS Name of the resource
     */
    dns: pulumi.Input<string>;
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
     */
    managedZoneId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The name of the Target Project
     */
    targetProject: pulumi.Input<string>;
    /**
     * The name of the Target Project VPC Network
     */
    targetVpc: pulumi.Input<string>;
}
