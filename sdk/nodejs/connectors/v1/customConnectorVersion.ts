// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new CustomConnectorVersion in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class CustomConnectorVersion extends pulumi.CustomResource {
    /**
     * Get an existing CustomConnectorVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomConnectorVersion {
        return new CustomConnectorVersion(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:connectors/v1:CustomConnectorVersion';

    /**
     * Returns true if the given object is an instance of CustomConnectorVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomConnectorVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomConnectorVersion.__pulumiType;
    }

    /**
     * Configuration for establishing the authentication to the connector destination.
     */
    public readonly authConfig!: pulumi.Output<outputs.connectors.v1.AuthConfigResponse>;
    /**
     * Created time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly customConnectorId!: pulumi.Output<string>;
    /**
     * Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
     */
    public readonly customConnectorVersionId!: pulumi.Output<string>;
    /**
     * Configuration of the customConnector's destination.
     */
    public readonly destinationConfig!: pulumi.Output<outputs.connectors.v1.DestinationConfigResponse>;
    /**
     * Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
     */
    public readonly enableBackendDestinationConfig!: pulumi.Output<boolean>;
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Service account needed for runtime plane to access Custom Connector secrets.
     */
    public readonly serviceAccount!: pulumi.Output<string>;
    /**
     * Optional. Location of the custom connector spec.
     */
    public readonly specLocation!: pulumi.Output<string>;
    /**
     * Updated time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CustomConnectorVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomConnectorVersionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authConfig'");
            }
            if ((!args || args.customConnectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customConnectorId'");
            }
            if ((!args || args.customConnectorVersionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customConnectorVersionId'");
            }
            if ((!args || args.destinationConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationConfig'");
            }
            if ((!args || args.serviceAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccount'");
            }
            resourceInputs["authConfig"] = args ? args.authConfig : undefined;
            resourceInputs["customConnectorId"] = args ? args.customConnectorId : undefined;
            resourceInputs["customConnectorVersionId"] = args ? args.customConnectorVersionId : undefined;
            resourceInputs["destinationConfig"] = args ? args.destinationConfig : undefined;
            resourceInputs["enableBackendDestinationConfig"] = args ? args.enableBackendDestinationConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["specLocation"] = args ? args.specLocation : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["authConfig"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["customConnectorId"] = undefined /*out*/;
            resourceInputs["customConnectorVersionId"] = undefined /*out*/;
            resourceInputs["destinationConfig"] = undefined /*out*/;
            resourceInputs["enableBackendDestinationConfig"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["serviceAccount"] = undefined /*out*/;
            resourceInputs["specLocation"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["customConnectorId", "customConnectorVersionId", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CustomConnectorVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomConnectorVersion resource.
 */
export interface CustomConnectorVersionArgs {
    /**
     * Configuration for establishing the authentication to the connector destination.
     */
    authConfig: pulumi.Input<inputs.connectors.v1.AuthConfigArgs>;
    customConnectorId: pulumi.Input<string>;
    /**
     * Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
     */
    customConnectorVersionId: pulumi.Input<string>;
    /**
     * Configuration of the customConnector's destination.
     */
    destinationConfig: pulumi.Input<inputs.connectors.v1.DestinationConfigArgs>;
    /**
     * Optional. Whether to enable backend destination config. This is the backend server that the connector connects to.
     */
    enableBackendDestinationConfig?: pulumi.Input<boolean>;
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    project?: pulumi.Input<string>;
    /**
     * Service account needed for runtime plane to access Custom Connector secrets.
     */
    serviceAccount: pulumi.Input<string>;
    /**
     * Optional. Location of the custom connector spec.
     */
    specLocation?: pulumi.Input<string>;
}
