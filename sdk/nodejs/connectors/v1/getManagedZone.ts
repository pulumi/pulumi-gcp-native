// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets details of a single ManagedZone.
 */
export function getManagedZone(args: GetManagedZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:connectors/v1:getManagedZone", {
        "managedZone": args.managedZone,
        "project": args.project,
    }, opts);
}

export interface GetManagedZoneArgs {
    managedZone: string;
    project?: string;
}

export interface GetManagedZoneResult {
    /**
     * Created time.
     */
    readonly createTime: string;
    /**
     * Optional. Description of the resource.
     */
    readonly description: string;
    /**
     * DNS Name of the resource
     */
    readonly dns: string;
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    readonly labels: {[key: string]: string};
    /**
     * Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}
     */
    readonly name: string;
    /**
     * The name of the Target Project
     */
    readonly targetProject: string;
    /**
     * The name of the Target Project VPC Network
     */
    readonly targetVpc: string;
    /**
     * Updated time.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single ManagedZone.
 */
export function getManagedZoneOutput(args: GetManagedZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedZoneResult> {
    return pulumi.output(args).apply((a: any) => getManagedZone(a, opts))
}

export interface GetManagedZoneOutputArgs {
    managedZone: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
