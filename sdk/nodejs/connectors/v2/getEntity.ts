// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a single entity row matching the entity type and entity id specified in the request.
 */
export function getEntity(args: GetEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:connectors/v2:getEntity", {
        "connectionId": args.connectionId,
        "entityId": args.entityId,
        "entityTypeId": args.entityTypeId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEntityArgs {
    connectionId: string;
    entityId: string;
    entityTypeId: string;
    location: string;
    project?: string;
}

export interface GetEntityResult {
    /**
     * Fields of the entity. The key is name of the field and the value contains the applicable `google.protobuf.Value` entry for this field.
     */
    readonly fields: {[key: string]: any};
    /**
     * Resource name of the Entity. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}
     */
    readonly name: string;
}
/**
 * Gets a single entity row matching the entity type and entity id specified in the request.
 */
export function getEntityOutput(args: GetEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityResult> {
    return pulumi.output(args).apply((a: any) => getEntity(a, opts))
}

export interface GetEntityOutputArgs {
    connectionId: pulumi.Input<string>;
    entityId: pulumi.Input<string>;
    entityTypeId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
