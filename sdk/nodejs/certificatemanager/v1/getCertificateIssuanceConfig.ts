// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single CertificateIssuanceConfig.
 */
export function getCertificateIssuanceConfig(args: GetCertificateIssuanceConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateIssuanceConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:certificatemanager/v1:getCertificateIssuanceConfig", {
        "certificateIssuanceConfigId": args.certificateIssuanceConfigId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetCertificateIssuanceConfigArgs {
    certificateIssuanceConfigId: string;
    location: string;
    project?: string;
}

export interface GetCertificateIssuanceConfigResult {
    /**
     * The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.
     */
    readonly certificateAuthorityConfig: outputs.certificatemanager.v1.CertificateAuthorityConfigResponse;
    /**
     * The creation timestamp of a CertificateIssuanceConfig.
     */
    readonly createTime: string;
    /**
     * One or more paragraphs of text description of a CertificateIssuanceConfig.
     */
    readonly description: string;
    /**
     * The key algorithm to use when generating the private key.
     */
    readonly keyAlgorithm: string;
    /**
     * Set of labels associated with a CertificateIssuanceConfig.
     */
    readonly labels: {[key: string]: string};
    /**
     * Workload certificate lifetime requested.
     */
    readonly lifetime: string;
    /**
     * A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*&#47;locations/*&#47;certificateIssuanceConfigs/*`.
     */
    readonly name: string;
    /**
     * Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.
     */
    readonly rotationWindowPercentage: number;
    /**
     * The last update timestamp of a CertificateIssuanceConfig.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single CertificateIssuanceConfig.
 */
export function getCertificateIssuanceConfigOutput(args: GetCertificateIssuanceConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateIssuanceConfigResult> {
    return pulumi.output(args).apply((a: any) => getCertificateIssuanceConfig(a, opts))
}

export interface GetCertificateIssuanceConfigOutputArgs {
    certificateIssuanceConfigId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
