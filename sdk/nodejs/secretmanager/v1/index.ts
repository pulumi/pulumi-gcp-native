// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetSecretArgs, GetSecretResult, GetSecretOutputArgs } from "./getSecret";
export const getSecret: typeof import("./getSecret").getSecret = null as any;
export const getSecretOutput: typeof import("./getSecret").getSecretOutput = null as any;
utilities.lazyLoad(exports, ["getSecret","getSecretOutput"], () => require("./getSecret"));

export { GetSecretIamPolicyArgs, GetSecretIamPolicyResult, GetSecretIamPolicyOutputArgs } from "./getSecretIamPolicy";
export const getSecretIamPolicy: typeof import("./getSecretIamPolicy").getSecretIamPolicy = null as any;
export const getSecretIamPolicyOutput: typeof import("./getSecretIamPolicy").getSecretIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getSecretIamPolicy","getSecretIamPolicyOutput"], () => require("./getSecretIamPolicy"));

export { SecretArgs } from "./secret";
export type Secret = import("./secret").Secret;
export const Secret: typeof import("./secret").Secret = null as any;
utilities.lazyLoad(exports, ["Secret"], () => require("./secret"));

export { SecretIamBindingArgs } from "./secretIamBinding";
export type SecretIamBinding = import("./secretIamBinding").SecretIamBinding;
export const SecretIamBinding: typeof import("./secretIamBinding").SecretIamBinding = null as any;
utilities.lazyLoad(exports, ["SecretIamBinding"], () => require("./secretIamBinding"));

export { SecretIamMemberArgs } from "./secretIamMember";
export type SecretIamMember = import("./secretIamMember").SecretIamMember;
export const SecretIamMember: typeof import("./secretIamMember").SecretIamMember = null as any;
utilities.lazyLoad(exports, ["SecretIamMember"], () => require("./secretIamMember"));

export { SecretIamPolicyArgs } from "./secretIamPolicy";
export type SecretIamPolicy = import("./secretIamPolicy").SecretIamPolicy;
export const SecretIamPolicy: typeof import("./secretIamPolicy").SecretIamPolicy = null as any;
utilities.lazyLoad(exports, ["SecretIamPolicy"], () => require("./secretIamPolicy"));


// Export enums:
export * from "../../types/enums/secretmanager/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:secretmanager/v1:Secret":
                return new Secret(name, <any>undefined, { urn })
            case "google-native:secretmanager/v1:SecretIamBinding":
                return new SecretIamBinding(name, <any>undefined, { urn })
            case "google-native:secretmanager/v1:SecretIamMember":
                return new SecretIamMember(name, <any>undefined, { urn })
            case "google-native:secretmanager/v1:SecretIamPolicy":
                return new SecretIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "secretmanager/v1", _module)
