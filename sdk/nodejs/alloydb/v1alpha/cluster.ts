// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new Cluster in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:alloydb/v1alpha:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string}>;
    /**
     * The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
     */
    public readonly automatedBackupPolicy!: pulumi.Output<outputs.alloydb.v1alpha.AutomatedBackupPolicyResponse>;
    /**
     * Cluster created from backup.
     */
    public /*out*/ readonly backupSource!: pulumi.Output<outputs.alloydb.v1alpha.BackupSourceResponse>;
    /**
     * Required. ID of the requesting object.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The type of the cluster. This is an output-only field and it's populated at the Cluster creation time or the Cluster promotion time. The cluster type is determined by which RPC was used to create the cluster (i.e. `CreateCluster` vs. `CreateSecondaryCluster`
     */
    public /*out*/ readonly clusterType!: pulumi.Output<string>;
    /**
     * Optional. Continuous backup configuration for this cluster.
     */
    public readonly continuousBackupConfig!: pulumi.Output<outputs.alloydb.v1alpha.ContinuousBackupConfigResponse>;
    /**
     * Continuous backup properties for this cluster.
     */
    public /*out*/ readonly continuousBackupInfo!: pulumi.Output<outputs.alloydb.v1alpha.ContinuousBackupInfoResponse>;
    /**
     * Create time stamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
     */
    public readonly databaseVersion!: pulumi.Output<string>;
    /**
     * Delete time stamp
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * User-settable and human-readable display name for the Cluster.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
     */
    public readonly encryptionConfig!: pulumi.Output<outputs.alloydb.v1alpha.EncryptionConfigResponse>;
    /**
     * The encryption information for the cluster.
     */
    public /*out*/ readonly encryptionInfo!: pulumi.Output<outputs.alloydb.v1alpha.EncryptionInfoResponse>;
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
     */
    public readonly initialUser!: pulumi.Output<outputs.alloydb.v1alpha.UserPasswordResponse>;
    /**
     * Labels as key value pairs
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Cluster created via DMS migration.
     */
    public /*out*/ readonly migrationSource!: pulumi.Output<outputs.alloydb.v1alpha.MigrationSourceResponse>;
    /**
     * The name of the cluster resource with the format: * projects/{project}/locations/{region}/clusters/{cluster_id} where the cluster ID segment should satisfy the regex expression `[a-z0-9-]+`. For more details see https://google.aip.dev/122. The prefix of the cluster resource name is the name of the parent resource: * projects/{project}/locations/{region}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
     *
     * @deprecated Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
     */
    public readonly network!: pulumi.Output<string>;
    public readonly networkConfig!: pulumi.Output<outputs.alloydb.v1alpha.NetworkConfigResponse>;
    /**
     * Cross Region replication config specific to PRIMARY cluster.
     */
    public /*out*/ readonly primaryConfig!: pulumi.Output<outputs.alloydb.v1alpha.PrimaryConfigResponse>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. The configuration for Private Service Connect (PSC) for the cluster.
     */
    public readonly pscConfig!: pulumi.Output<outputs.alloydb.v1alpha.PscConfigResponse>;
    /**
     * Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Reserved for future use.
     */
    public /*out*/ readonly satisfiesPzs!: pulumi.Output<boolean>;
    /**
     * Cross Region replication config specific to SECONDARY cluster.
     */
    public readonly secondaryConfig!: pulumi.Output<outputs.alloydb.v1alpha.SecondaryConfigResponse>;
    /**
     * SSL configuration for this AlloyDB cluster.
     */
    public readonly sslConfig!: pulumi.Output<outputs.alloydb.v1alpha.SslConfigResponse>;
    /**
     * The current serving state of the cluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Update time stamp
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["automatedBackupPolicy"] = args ? args.automatedBackupPolicy : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["continuousBackupConfig"] = args ? args.continuousBackupConfig : undefined;
            resourceInputs["databaseVersion"] = args ? args.databaseVersion : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["initialUser"] = args ? args.initialUser : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["pscConfig"] = args ? args.pscConfig : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["secondaryConfig"] = args ? args.secondaryConfig : undefined;
            resourceInputs["sslConfig"] = args ? args.sslConfig : undefined;
            resourceInputs["backupSource"] = undefined /*out*/;
            resourceInputs["clusterType"] = undefined /*out*/;
            resourceInputs["continuousBackupInfo"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["encryptionInfo"] = undefined /*out*/;
            resourceInputs["migrationSource"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["primaryConfig"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["satisfiesPzs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["annotations"] = undefined /*out*/;
            resourceInputs["automatedBackupPolicy"] = undefined /*out*/;
            resourceInputs["backupSource"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterType"] = undefined /*out*/;
            resourceInputs["continuousBackupConfig"] = undefined /*out*/;
            resourceInputs["continuousBackupInfo"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["databaseVersion"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["encryptionConfig"] = undefined /*out*/;
            resourceInputs["encryptionInfo"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["initialUser"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["migrationSource"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["networkConfig"] = undefined /*out*/;
            resourceInputs["primaryConfig"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["pscConfig"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["satisfiesPzs"] = undefined /*out*/;
            resourceInputs["secondaryConfig"] = undefined /*out*/;
            resourceInputs["sslConfig"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["clusterId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels. https://google.aip.dev/128
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The automated backup policy for this cluster. If no policy is provided then the default policy will be used. If backups are supported for the cluster, the default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days. For more information on the defaults, consult the documentation for the message type.
     */
    automatedBackupPolicy?: pulumi.Input<inputs.alloydb.v1alpha.AutomatedBackupPolicyArgs>;
    /**
     * Required. ID of the requesting object.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Optional. Continuous backup configuration for this cluster.
     */
    continuousBackupConfig?: pulumi.Input<inputs.alloydb.v1alpha.ContinuousBackupConfigArgs>;
    /**
     * Optional. The database engine major version. This is an optional field and it is populated at the Cluster creation time. If a database version is not supplied at cluster creation time, then a default database version will be used.
     */
    databaseVersion?: pulumi.Input<enums.alloydb.v1alpha.ClusterDatabaseVersion>;
    /**
     * User-settable and human-readable display name for the Cluster.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.
     */
    encryptionConfig?: pulumi.Input<inputs.alloydb.v1alpha.EncryptionConfigArgs>;
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     */
    etag?: pulumi.Input<string>;
    /**
     * Input only. Initial user to setup during cluster creation. Required. If used in `RestoreCluster` this is ignored.
     */
    initialUser?: pulumi.Input<inputs.alloydb.v1alpha.UserPasswordArgs>;
    /**
     * Labels as key value pairs
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
     *
     * @deprecated Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project}/global/networks/{network_id}". This is required to create a cluster. Deprecated, use network_config.network instead.
     */
    network: pulumi.Input<string>;
    networkConfig?: pulumi.Input<inputs.alloydb.v1alpha.NetworkConfigArgs>;
    project?: pulumi.Input<string>;
    /**
     * Optional. The configuration for Private Service Connect (PSC) for the cluster.
     */
    pscConfig?: pulumi.Input<inputs.alloydb.v1alpha.PscConfigArgs>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Cross Region replication config specific to SECONDARY cluster.
     */
    secondaryConfig?: pulumi.Input<inputs.alloydb.v1alpha.SecondaryConfigArgs>;
    /**
     * SSL configuration for this AlloyDB cluster.
     */
    sslConfig?: pulumi.Input<inputs.alloydb.v1alpha.SslConfigArgs>;
}
