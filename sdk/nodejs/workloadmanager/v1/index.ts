// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { EvaluationArgs } from "./evaluation";
export type Evaluation = import("./evaluation").Evaluation;
export const Evaluation: typeof import("./evaluation").Evaluation = null as any;
utilities.lazyLoad(exports, ["Evaluation"], () => require("./evaluation"));

export { GetEvaluationArgs, GetEvaluationResult, GetEvaluationOutputArgs } from "./getEvaluation";
export const getEvaluation: typeof import("./getEvaluation").getEvaluation = null as any;
export const getEvaluationOutput: typeof import("./getEvaluation").getEvaluationOutput = null as any;
utilities.lazyLoad(exports, ["getEvaluation","getEvaluationOutput"], () => require("./getEvaluation"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:workloadmanager/v1:Evaluation":
                return new Evaluation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "workloadmanager/v1", _module)
