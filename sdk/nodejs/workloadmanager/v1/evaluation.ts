// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new Evaluation in a given project and location.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class Evaluation extends pulumi.CustomResource {
    /**
     * Get an existing Evaluation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Evaluation {
        return new Evaluation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:workloadmanager/v1:Evaluation';

    /**
     * Returns true if the given object is an instance of Evaluation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Evaluation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Evaluation.__pulumiType;
    }

    /**
     * [Output only] Create time stamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The Cloud Storage bucket name for custom rules.
     */
    public readonly customRulesBucket!: pulumi.Output<string>;
    /**
     * Description of the Evaluation
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Required. Id of the requesting object
     */
    public readonly evaluationId!: pulumi.Output<string>;
    /**
     * Labels as key value pairs
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * annotations as key value pairs
     */
    public readonly resourceFilter!: pulumi.Output<outputs.workloadmanager.v1.ResourceFilterResponse>;
    /**
     * [Output only] The updated rule ids if exist.
     */
    public /*out*/ readonly resourceStatus!: pulumi.Output<outputs.workloadmanager.v1.ResourceStatusResponse>;
    /**
     * the name of the rule
     */
    public readonly ruleNames!: pulumi.Output<string[]>;
    /**
     * [Output only] The updated rule ids if exist.
     */
    public /*out*/ readonly ruleVersions!: pulumi.Output<string[]>;
    /**
     * crontab format schedule for scheduled evaluation, currently only support the following schedule: "0 *&#47;1 * * *", "0 *&#47;6 * * *", "0 *&#47;12 * * *", "0 0 *&#47;1 * *", "0 0 *&#47;7 * *",
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * [Output only] Update time stamp
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Evaluation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvaluationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.evaluationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evaluationId'");
            }
            resourceInputs["customRulesBucket"] = args ? args.customRulesBucket : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["evaluationId"] = args ? args.evaluationId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["resourceFilter"] = args ? args.resourceFilter : undefined;
            resourceInputs["ruleNames"] = args ? args.ruleNames : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["resourceStatus"] = undefined /*out*/;
            resourceInputs["ruleVersions"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["customRulesBucket"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["evaluationId"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["resourceFilter"] = undefined /*out*/;
            resourceInputs["resourceStatus"] = undefined /*out*/;
            resourceInputs["ruleNames"] = undefined /*out*/;
            resourceInputs["ruleVersions"] = undefined /*out*/;
            resourceInputs["schedule"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["evaluationId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Evaluation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Evaluation resource.
 */
export interface EvaluationArgs {
    /**
     * The Cloud Storage bucket name for custom rules.
     */
    customRulesBucket?: pulumi.Input<string>;
    /**
     * Description of the Evaluation
     */
    description?: pulumi.Input<string>;
    /**
     * Required. Id of the requesting object
     */
    evaluationId: pulumi.Input<string>;
    /**
     * Labels as key value pairs
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * annotations as key value pairs
     */
    resourceFilter?: pulumi.Input<inputs.workloadmanager.v1.ResourceFilterArgs>;
    /**
     * the name of the rule
     */
    ruleNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * crontab format schedule for scheduled evaluation, currently only support the following schedule: "0 *&#47;1 * * *", "0 *&#47;6 * * *", "0 *&#47;12 * * *", "0 0 *&#47;1 * *", "0 0 *&#47;7 * *",
     */
    schedule?: pulumi.Input<string>;
}
