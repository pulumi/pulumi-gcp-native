// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new run.
 */
export class Run extends pulumi.CustomResource {
    /**
     * Get an existing Run resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Run {
        return new Run(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:datalineage/v1:Run';

    /**
     * Returns true if the given object is an instance of Run.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Run {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Run.__pulumiType;
    }

    /**
     * Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
     */
    public readonly attributes!: pulumi.Output<{[key: string]: any}>;
    /**
     * Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Optional. The timestamp of the end of the run.
     */
    public readonly endTime!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
     */
    public readonly name!: pulumi.Output<string>;
    public readonly processId!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * The timestamp of the start of the run.
     */
    public readonly startTime!: pulumi.Output<string>;
    /**
     * The state of the run.
     */
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a Run resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RunArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.processId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'processId'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["processId"] = args ? args.processId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
        } else {
            resourceInputs["attributes"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["processId"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "processId", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Run.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Run resource.
 */
export interface RunArgs {
    /**
     * Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.
     */
    attributes?: pulumi.Input<{[key: string]: any}>;
    /**
     * Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. The timestamp of the end of the run.
     */
    endTime?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
     */
    name?: pulumi.Input<string>;
    processId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is idempotent only if a `request_id` is provided.
     */
    requestId?: pulumi.Input<string>;
    /**
     * The timestamp of the start of the run.
     */
    startTime: pulumi.Input<string>;
    /**
     * The state of the run.
     */
    state: pulumi.Input<enums.datalineage.v1.RunState>;
}
