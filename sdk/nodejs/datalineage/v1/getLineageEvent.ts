// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a specified lineage event.
 */
export function getLineageEvent(args: GetLineageEventArgs, opts?: pulumi.InvokeOptions): Promise<GetLineageEventResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:datalineage/v1:getLineageEvent", {
        "lineageEventId": args.lineageEventId,
        "location": args.location,
        "processId": args.processId,
        "project": args.project,
        "runId": args.runId,
    }, opts);
}

export interface GetLineageEventArgs {
    lineageEventId: string;
    location: string;
    processId: string;
    project?: string;
    runId: string;
}

export interface GetLineageEventResult {
    /**
     * Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.
     */
    readonly endTime: string;
    /**
     * Optional. List of source-target pairs. Can't contain more than 100 tuples.
     */
    readonly links: outputs.datalineage.v1.GoogleCloudDatacatalogLineageV1EventLinkResponse[];
    /**
     * Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`
     */
    readonly name: string;
    /**
     * Optional. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.
     */
    readonly startTime: string;
}
/**
 * Gets details of a specified lineage event.
 */
export function getLineageEventOutput(args: GetLineageEventOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLineageEventResult> {
    return pulumi.output(args).apply((a: any) => getLineageEvent(a, opts))
}

export interface GetLineageEventOutputArgs {
    lineageEventId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    processId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    runId: pulumi.Input<string>;
}
