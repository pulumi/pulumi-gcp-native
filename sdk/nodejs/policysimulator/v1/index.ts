// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { FolderReplayArgs } from "./folderReplay";
export type FolderReplay = import("./folderReplay").FolderReplay;
export const FolderReplay: typeof import("./folderReplay").FolderReplay = null as any;

export { GetFolderReplayArgs, GetFolderReplayResult, GetFolderReplayOutputArgs } from "./getFolderReplay";
export const getFolderReplay: typeof import("./getFolderReplay").getFolderReplay = null as any;
export const getFolderReplayOutput: typeof import("./getFolderReplay").getFolderReplayOutput = null as any;

export { GetOrganizationReplayArgs, GetOrganizationReplayResult, GetOrganizationReplayOutputArgs } from "./getOrganizationReplay";
export const getOrganizationReplay: typeof import("./getOrganizationReplay").getOrganizationReplay = null as any;
export const getOrganizationReplayOutput: typeof import("./getOrganizationReplay").getOrganizationReplayOutput = null as any;

export { GetReplayArgs, GetReplayResult, GetReplayOutputArgs } from "./getReplay";
export const getReplay: typeof import("./getReplay").getReplay = null as any;
export const getReplayOutput: typeof import("./getReplay").getReplayOutput = null as any;

export { OrganizationReplayArgs } from "./organizationReplay";
export type OrganizationReplay = import("./organizationReplay").OrganizationReplay;
export const OrganizationReplay: typeof import("./organizationReplay").OrganizationReplay = null as any;

export { ReplayArgs } from "./replay";
export type Replay = import("./replay").Replay;
export const Replay: typeof import("./replay").Replay = null as any;

utilities.lazyLoad(exports, ["FolderReplay"], () => require("./folderReplay"));
utilities.lazyLoad(exports, ["getFolderReplay","getFolderReplayOutput"], () => require("./getFolderReplay"));
utilities.lazyLoad(exports, ["getOrganizationReplay","getOrganizationReplayOutput"], () => require("./getOrganizationReplay"));
utilities.lazyLoad(exports, ["getReplay","getReplayOutput"], () => require("./getReplay"));
utilities.lazyLoad(exports, ["OrganizationReplay"], () => require("./organizationReplay"));
utilities.lazyLoad(exports, ["Replay"], () => require("./replay"));

// Export enums:
export * from "../../types/enums/policysimulator/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:policysimulator/v1:FolderReplay":
                return new FolderReplay(name, <any>undefined, { urn })
            case "google-native:policysimulator/v1:OrganizationReplay":
                return new OrganizationReplay(name, <any>undefined, { urn })
            case "google-native:policysimulator/v1:Replay":
                return new Replay(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "policysimulator/v1", _module)
