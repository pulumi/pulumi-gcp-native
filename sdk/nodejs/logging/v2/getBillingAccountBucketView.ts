// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a view on a log bucket.
 */
export function getBillingAccountBucketView(args: GetBillingAccountBucketViewArgs, opts?: pulumi.InvokeOptions): Promise<GetBillingAccountBucketViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:logging/v2:getBillingAccountBucketView", {
        "billingAccountId": args.billingAccountId,
        "bucketId": args.bucketId,
        "location": args.location,
        "viewId": args.viewId,
    }, opts);
}

export interface GetBillingAccountBucketViewArgs {
    billingAccountId: string;
    bucketId: string;
    location: string;
    viewId: string;
}

export interface GetBillingAccountBucketViewResult {
    /**
     * The creation timestamp of the view.
     */
    readonly createTime: string;
    /**
     * Describes this view.
     */
    readonly description: string;
    /**
     * Filter that restricts which log entries in a bucket are visible in this view.Filters are restricted to be a logical AND of ==/!= of any of the following: originating project/folder/organization/billing account. resource type log idFor example:SOURCE("projects/myproject") AND resource.type = "gce_instance" AND LOG_ID("stdout")
     */
    readonly filter: string;
    /**
     * The resource name of the view.For example:projects/my-project/locations/global/buckets/my-bucket/views/my-view
     */
    readonly name: string;
    /**
     * The last update timestamp of the view.
     */
    readonly updateTime: string;
}
/**
 * Gets a view on a log bucket.
 */
export function getBillingAccountBucketViewOutput(args: GetBillingAccountBucketViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBillingAccountBucketViewResult> {
    return pulumi.output(args).apply((a: any) => getBillingAccountBucketView(a, opts))
}

export interface GetBillingAccountBucketViewOutputArgs {
    billingAccountId: pulumi.Input<string>;
    bucketId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    viewId: pulumi.Input<string>;
}
