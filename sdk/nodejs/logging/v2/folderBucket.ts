// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a bucket that can be used to store log entries. Once a bucket has been created, the region cannot be changed.
 */
export class FolderBucket extends pulumi.CustomResource {
    /**
     * Get an existing FolderBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FolderBucket {
        return new FolderBucket(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:logging/v2:FolderBucket';

    /**
     * Returns true if the given object is an instance of FolderBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FolderBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FolderBucket.__pulumiType;
    }


    /**
     * Create a FolderBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FolderBucketArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bucketsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketsId'");
            }
            if ((!args || args.foldersId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'foldersId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            inputs["bucketsId"] = args ? args.bucketsId : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["foldersId"] = args ? args.foldersId : undefined;
            inputs["lifecycleState"] = args ? args.lifecycleState : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["locked"] = args ? args.locked : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["retentionDays"] = args ? args.retentionDays : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(FolderBucket.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a FolderBucket resource.
 */
export interface FolderBucketArgs {
    readonly bucketsId: pulumi.Input<string>;
    /**
     * Output only. The creation timestamp of the bucket. This is not set for any of the default buckets.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Describes this bucket.
     */
    readonly description?: pulumi.Input<string>;
    readonly foldersId: pulumi.Input<string>;
    /**
     * Output only. The bucket lifecycle state.
     */
    readonly lifecycleState?: pulumi.Input<string>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Whether the bucket has been locked. The retention period on a locked bucket may not be changed. Locked buckets may only be deleted if they are empty.
     */
    readonly locked?: pulumi.Input<boolean>;
    /**
     * Output only. The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id" The supported locations are: global, us-central1, us-east1, us-west1, asia-east1, europe-west1.For the location of global it is unspecified where logs are actually stored. Once a bucket has been created, the location can not be changed.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
     */
    readonly retentionDays?: pulumi.Input<number>;
    /**
     * Output only. The last update timestamp of the bucket.
     */
    readonly updateTime?: pulumi.Input<string>;
}
