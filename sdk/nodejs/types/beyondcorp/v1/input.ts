// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The basic ingress config for ClientGateways.
 */
export interface ConfigArgs {
    /**
     * The settings used to configure basic ClientGateways.
     */
    destinationRoutes: pulumi.Input<pulumi.Input<inputs.beyondcorp.v1.DestinationRouteArgs>[]>;
    /**
     * Immutable. The transport protocol used between the client and the server.
     */
    transportProtocol: pulumi.Input<enums.beyondcorp.v1.ConfigTransportProtocol>;
}

/**
 * The setting used to configure ClientGateways. It is adding routes to the client's routing table after the connection is established.
 */
export interface DestinationRouteArgs {
    /**
     * The network address of the subnet for which the packet is routed to the ClientGateway.
     */
    address: pulumi.Input<string>;
    /**
     * The network mask of the subnet for which the packet is routed to the ClientGateway.
     */
    netmask: pulumi.Input<string>;
}

/**
 * The details of the egress info. One of the following options should be set.
 */
export interface EgressArgs {
    /**
     * A VPC from the consumer project.
     */
    peeredVpc?: pulumi.Input<inputs.beyondcorp.v1.PeeredVpcArgs>;
}

/**
 * ApplicationEndpoint represents a remote application endpoint.
 */
export interface GoogleCloudBeyondcorpAppconnectionsV1AppConnectionApplicationEndpointArgs {
    /**
     * Hostname or IP address of the remote application endpoint.
     */
    host: pulumi.Input<string>;
    /**
     * Port of the remote application endpoint.
     */
    port: pulumi.Input<number>;
}

/**
 * Gateway represents a user facing component that serves as an entrance to enable connectivity.
 */
export interface GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayArgs {
    /**
     * AppGateway name in following format: `projects/{project_id}/locations/{location_id}/appgateways/{gateway_id}`
     */
    appGateway: pulumi.Input<string>;
    /**
     * The type of hosting used by the gateway.
     */
    type: pulumi.Input<enums.beyondcorp.v1.GoogleCloudBeyondcorpAppconnectionsV1AppConnectionGatewayType>;
}

/**
 * PrincipalInfo represents an Identity oneof.
 */
export interface GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoArgs {
    /**
     * A GCP service account.
     */
    serviceAccount?: pulumi.Input<inputs.beyondcorp.v1.GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs>;
}

/**
 * ServiceAccount represents a GCP service account.
 */
export interface GoogleCloudBeyondcorpAppconnectorsV1AppConnectorPrincipalInfoServiceAccountArgs {
    /**
     * Email address of the service account.
     */
    email?: pulumi.Input<string>;
}

/**
 * ResourceInfo represents the information/status of an app connector resource. Such as: - remote_agent - container - runtime - appgateway - appconnector - appconnection - tunnel - logagent
 */
export interface GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs {
    /**
     * Unique Id for the resource.
     */
    id: pulumi.Input<string>;
    /**
     * Specific details for the resource. This is for internal use only.
     */
    resource?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Overall health status. Overall status is derived based on the status of each sub level resources.
     */
    status?: pulumi.Input<enums.beyondcorp.v1.GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoStatus>;
    /**
     * List of Info for the sub level resources.
     */
    sub?: pulumi.Input<pulumi.Input<inputs.beyondcorp.v1.GoogleCloudBeyondcorpAppconnectorsV1ResourceInfoArgs>[]>;
    /**
     * The timestamp to collect the info. It is suggested to be set by the topmost level resource only.
     */
    time?: pulumi.Input<string>;
}

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
 */
export interface GoogleIamV1AuditConfigArgs {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.beyondcorp.v1.GoogleIamV1AuditLogConfigArgs>[]>;
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    service?: pulumi.Input<string>;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface GoogleIamV1AuditLogConfigArgs {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log type that this config enables.
     */
    logType?: pulumi.Input<enums.beyondcorp.v1.GoogleIamV1AuditLogConfigLogType>;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface GoogleIamV1BindingArgs {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.beyondcorp.v1.GoogleTypeExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role?: pulumi.Input<string>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface GoogleTypeExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

/**
 * Settings of how to connect to the ClientGateway. One of the following options should be set.
 */
export interface IngressArgs {
    /**
     * The basic ingress config for ClientGateways.
     */
    config?: pulumi.Input<inputs.beyondcorp.v1.ConfigArgs>;
}

/**
 * The peered VPC owned by the consumer project.
 */
export interface PeeredVpcArgs {
    /**
     * The name of the peered VPC owned by the consumer project.
     */
    networkVpc: pulumi.Input<string>;
}

