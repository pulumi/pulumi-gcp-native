// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
 */
export interface AlloyDbConnectionProfileArgs {
    /**
     * The AlloyDB cluster ID that this connection profile is associated with.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Immutable. Metadata used to create the destination AlloyDB cluster.
     */
    settings?: pulumi.Input<inputs.datamigration.v1.AlloyDbSettingsArgs>;
}

/**
 * Settings for creating an AlloyDB cluster.
 */
export interface AlloyDbSettingsArgs {
    /**
     * Input only. Initial user to setup during cluster creation. Required.
     */
    initialUser: pulumi.Input<inputs.datamigration.v1.UserPasswordArgs>;
    /**
     * Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    primaryInstanceSettings?: pulumi.Input<inputs.datamigration.v1.PrimaryInstanceSettingsArgs>;
    /**
     * The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: "projects/{project_number}/global/networks/{network_id}". This is required to create a cluster.
     */
    vpcNetwork: pulumi.Input<string>;
}

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
 */
export interface AuditConfigArgs {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.datamigration.v1.AuditLogConfigArgs>[]>;
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    service?: pulumi.Input<string>;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface AuditLogConfigArgs {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log type that this config enables.
     */
    logType?: pulumi.Input<enums.datamigration.v1.AuditLogConfigLogType>;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface BindingArgs {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.datamigration.v1.ExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role?: pulumi.Input<string>;
}

/**
 * Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
 */
export interface CloudSqlConnectionProfileArgs {
    /**
     * Immutable. Metadata used to create the destination Cloud SQL database.
     */
    settings?: pulumi.Input<inputs.datamigration.v1.CloudSqlSettingsArgs>;
}

/**
 * Settings for creating a Cloud SQL database instance.
 */
export interface CloudSqlSettingsArgs {
    /**
     * The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
     */
    activationPolicy?: pulumi.Input<enums.datamigration.v1.CloudSqlSettingsActivationPolicy>;
    /**
     * [default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
     */
    autoStorageIncrease?: pulumi.Input<boolean>;
    /**
     * The KMS key name used for the csql instance.
     */
    cmekKeyName?: pulumi.Input<string>;
    /**
     * The Cloud SQL default instance level collation.
     */
    collation?: pulumi.Input<string>;
    /**
     * The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
     */
    dataDiskSizeGb?: pulumi.Input<string>;
    /**
     * The type of storage: `PD_SSD` (default) or `PD_HDD`.
     */
    dataDiskType?: pulumi.Input<enums.datamigration.v1.CloudSqlSettingsDataDiskType>;
    /**
     * The database flags passed to the Cloud SQL instance at startup. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    databaseFlags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The database engine type and version.
     */
    databaseVersion?: pulumi.Input<enums.datamigration.v1.CloudSqlSettingsDatabaseVersion>;
    /**
     * The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.
     */
    ipConfig?: pulumi.Input<inputs.datamigration.v1.SqlIpConfigArgs>;
    /**
     * Input only. Initial root password.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
     */
    storageAutoResizeLimit?: pulumi.Input<string>;
    /**
     * The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).
     */
    tier?: pulumi.Input<string>;
    /**
     * The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "18kg", "count": "3" }`.
     */
    userLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google Cloud Platform zone where your Cloud SQL database instance is located.
     */
    zone?: pulumi.Input<string>;
}

/**
 * A message defining the database engine and provider.
 */
export interface DatabaseTypeArgs {
    /**
     * The database engine.
     */
    engine?: pulumi.Input<enums.datamigration.v1.DatabaseTypeEngine>;
    /**
     * The database provider.
     */
    provider?: pulumi.Input<enums.datamigration.v1.DatabaseTypeProvider>;
}

/**
 * Dump flag definition.
 */
export interface DumpFlagArgs {
    /**
     * The name of the flag
     */
    name?: pulumi.Input<string>;
    /**
     * The value of the flag.
     */
    value?: pulumi.Input<string>;
}

/**
 * Dump flags definition.
 */
export interface DumpFlagsArgs {
    /**
     * The flags for the initial dump.
     */
    dumpFlags?: pulumi.Input<pulumi.Input<inputs.datamigration.v1.DumpFlagArgs>[]>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface ExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

/**
 * MachineConfig describes the configuration of a machine.
 */
export interface MachineConfigArgs {
    /**
     * The number of CPU's in the VM instance.
     */
    cpuCount?: pulumi.Input<number>;
}

/**
 * Specifies connection parameters required specifically for MySQL databases.
 */
export interface MySqlConnectionProfileArgs {
    /**
     * If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
     */
    cloudSqlId?: pulumi.Input<string>;
    /**
     * The IP or hostname of the source MySQL database.
     */
    host: pulumi.Input<string>;
    /**
     * Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
     */
    password: pulumi.Input<string>;
    /**
     * The network port of the source MySQL database.
     */
    port: pulumi.Input<number>;
    /**
     * SSL configuration for the destination to connect to the source database.
     */
    ssl?: pulumi.Input<inputs.datamigration.v1.SslConfigArgs>;
    /**
     * The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
     */
    username: pulumi.Input<string>;
}

/**
 * Specifies connection parameters required specifically for PostgreSQL databases.
 */
export interface PostgreSqlConnectionProfileArgs {
    /**
     * If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
     */
    cloudSqlId?: pulumi.Input<string>;
    /**
     * The IP or hostname of the source PostgreSQL database.
     */
    host: pulumi.Input<string>;
    /**
     * Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
     */
    password: pulumi.Input<string>;
    /**
     * The network port of the source PostgreSQL database.
     */
    port: pulumi.Input<number>;
    /**
     * SSL configuration for the destination to connect to the source database.
     */
    ssl?: pulumi.Input<inputs.datamigration.v1.SslConfigArgs>;
    /**
     * The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
     */
    username: pulumi.Input<string>;
}

/**
 * Settings for the cluster's primary instance
 */
export interface PrimaryInstanceSettingsArgs {
    /**
     * Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.
     */
    databaseFlags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the AlloyDB primary instance. The ID must satisfy the regex expression "[a-z0-9-]+".
     */
    id: pulumi.Input<string>;
    /**
     * Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration for the machines that host the underlying database engine.
     */
    machineConfig?: pulumi.Input<inputs.datamigration.v1.MachineConfigArgs>;
}

/**
 * The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.
 */
export interface ReverseSshConnectivityArgs {
    /**
     * The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     */
    vm?: pulumi.Input<string>;
    /**
     * The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     */
    vmIp: pulumi.Input<string>;
    /**
     * The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     */
    vmPort: pulumi.Input<number>;
    /**
     * The name of the VPC to peer with the Cloud SQL private network.
     */
    vpc?: pulumi.Input<string>;
}

/**
 * An entry for an Access Control list.
 */
export interface SqlAclEntryArgs {
    /**
     * The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * A label to identify this entry.
     */
    label?: pulumi.Input<string>;
    /**
     * Input only. The time-to-leave of this access control entry.
     */
    ttl?: pulumi.Input<string>;
    /**
     * The allowlisted value for the access control list.
     */
    value?: pulumi.Input<string>;
}

/**
 * IP Management configuration.
 */
export interface SqlIpConfigArgs {
    /**
     * The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).
     */
    authorizedNetworks?: pulumi.Input<pulumi.Input<inputs.datamigration.v1.SqlAclEntryArgs>[]>;
    /**
     * Whether the instance should be assigned an IPv4 address or not.
     */
    enableIpv4?: pulumi.Input<boolean>;
    /**
     * The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
     */
    privateNetwork?: pulumi.Input<string>;
    /**
     * Whether SSL connections over IP should be enforced or not.
     */
    requireSsl?: pulumi.Input<boolean>;
}

/**
 * SSL configuration information.
 */
export interface SslConfigArgs {
    /**
     * Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.
     */
    caCertificate: pulumi.Input<string>;
    /**
     * Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.
     */
    clientKey?: pulumi.Input<string>;
}

/**
 * The source database will allow incoming connections from the destination database's public IP. You can retrieve the Cloud SQL instance's public IP from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
 */
export interface StaticIpConnectivityArgs {
}

/**
 * The username/password for a database user. Used for specifying initial users at cluster creation time.
 */
export interface UserPasswordArgs {
    /**
     * The initial password for the user.
     */
    password?: pulumi.Input<string>;
    /**
     * The database username.
     */
    user?: pulumi.Input<string>;
}

/**
 * The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.
 */
export interface VpcPeeringConnectivityArgs {
    /**
     * The name of the VPC network to peer with the Cloud SQL private network.
     */
    vpc?: pulumi.Input<string>;
}

