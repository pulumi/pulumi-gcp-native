// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

export interface GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigArgs {
    /**
     * If true, measurement.elapsed_time is used as the x-axis of each Trials Decay Curve. Otherwise, Measurement.steps will be used as the x-axis.
     */
    useElapsedTime?: pulumi.Input<boolean>;
}

/**
 * The median automated stopping rule stops a pending trial if the trial's best objective_value is strictly below the median 'performance' of all completed trials reported up to the trial's last measurement. Currently, 'performance' refers to the running average of the objective values reported by the trial in each measurement.
 */
export interface GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfigArgs {
    /**
     * If true, the median automated stopping rule applies to measurement.use_elapsed_time, which means the elapsed_time field of the current trial's latest measurement is used to compute the median objective value for each completed trial.
     */
    useElapsedTime?: pulumi.Input<boolean>;
}

/**
 * An observed value of a metric.
 */
export interface GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricArgs {
    /**
     * The objective value at this training step.
     */
    objectiveValue?: pulumi.Input<number>;
    /**
     * The global training step for this metric.
     */
    trainingStep?: pulumi.Input<string>;
}

/**
 * A message representing a metric in the measurement.
 */
export interface GoogleCloudMlV1_Measurement_MetricArgs {
    /**
     * Metric name.
     */
    metric: pulumi.Input<string>;
    /**
     * The value for this metric.
     */
    value: pulumi.Input<number>;
}

export interface GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecArgs {
    /**
     * Must be specified if type is `CATEGORICAL`. The list of possible categories.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecArgs {
    /**
     * Must be specified if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs {
    /**
     * Must be specified if type is `DOUBLE`. Maximum value of the parameter.
     */
    maxValue?: pulumi.Input<number>;
    /**
     * Must be specified if type is `DOUBLE`. Minimum value of the parameter.
     */
    minValue?: pulumi.Input<number>;
}

export interface GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecArgs {
    /**
     * Must be specified if type is `INTEGER`. Maximum value of the parameter.
     */
    maxValue?: pulumi.Input<string>;
    /**
     * Must be specified if type is `INTEGER`. Minimum value of the parameter.
     */
    minValue?: pulumi.Input<string>;
}

/**
 * Represents the spec to match categorical values from parent parameter.
 */
export interface GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecArgs {
    /**
     * Matches values of the parent parameter with type 'CATEGORICAL'. All values must exist in `categorical_value_spec` of parent parameter.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Represents the spec to match discrete values from parent parameter.
 */
export interface GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecArgs {
    /**
     * Matches values of the parent parameter with type 'DISCRETE'. All values must exist in `discrete_value_spec` of parent parameter.
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * Represents the spec to match integer values from parent parameter.
 */
export interface GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecArgs {
    /**
     * Matches values of the parent parameter with type 'INTEGER'. All values must lie in `integer_value_spec` of parent parameter.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Represents a metric to optimize.
 */
export interface GoogleCloudMlV1_StudyConfig_MetricSpecArgs {
    /**
     * The optimization goal of the metric.
     */
    goal: pulumi.Input<enums.ml.v1.GoogleCloudMlV1_StudyConfig_MetricSpecGoal>;
    /**
     * The name of the metric.
     */
    metric: pulumi.Input<string>;
}

/**
 * Represents a single parameter to optimize.
 */
export interface GoogleCloudMlV1_StudyConfig_ParameterSpecArgs {
    /**
     * The value spec for a 'CATEGORICAL' parameter.
     */
    categoricalValueSpec?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_CategoricalValueSpecArgs>;
    /**
     * A child node is active if the parameter's value matches the child node's matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
     */
    childParameterSpecs?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfig_ParameterSpecArgs>[]>;
    /**
     * The value spec for a 'DISCRETE' parameter.
     */
    discreteValueSpec?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_DiscreteValueSpecArgs>;
    /**
     * The value spec for a 'DOUBLE' parameter.
     */
    doubleValueSpec?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_DoubleValueSpecArgs>;
    /**
     * The value spec for an 'INTEGER' parameter.
     */
    integerValueSpec?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_IntegerValueSpecArgs>;
    /**
     * The parameter name must be unique amongst all ParameterSpecs.
     */
    parameter: pulumi.Input<string>;
    parentCategoricalValues?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentCategoricalValueSpecArgs>;
    parentDiscreteValues?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentDiscreteValueSpecArgs>;
    parentIntValues?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfigParameterSpec_MatchingParentIntValueSpecArgs>;
    /**
     * How the parameter should be scaled. Leave unset for categorical parameters.
     */
    scaleType?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1_StudyConfig_ParameterSpecScaleType>;
    /**
     * The type of the parameter.
     */
    type: pulumi.Input<enums.ml.v1.GoogleCloudMlV1_StudyConfig_ParameterSpecType>;
}

/**
 * A message representing a parameter to be tuned. Contains the name of the parameter and the suggested value to use for this trial.
 */
export interface GoogleCloudMlV1_Trial_ParameterArgs {
    /**
     * Must be set if ParameterType is DOUBLE or DISCRETE.
     */
    floatValue?: pulumi.Input<number>;
    /**
     * Must be set if ParameterType is INTEGER
     */
    intValue?: pulumi.Input<string>;
    /**
     * The name of the parameter.
     */
    parameter?: pulumi.Input<string>;
    /**
     * Must be set if ParameterTypeis CATEGORICAL
     */
    stringValue?: pulumi.Input<string>;
}

/**
 * Represents a hardware accelerator request config. Note that the AcceleratorConfig can be used in both Jobs and Versions. Learn more about [accelerators for training](/ml-engine/docs/using-gpus) and [accelerators for online prediction](/ml-engine/docs/machine-types-online-prediction#gpus).
 */
export interface GoogleCloudMlV1__AcceleratorConfigArgs {
    /**
     * The number of accelerators to attach to each machine running the job.
     */
    count?: pulumi.Input<string>;
    /**
     * The type of accelerator to use.
     */
    type?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__AcceleratorConfigType>;
}

/**
 * Options for automatically scaling a model.
 */
export interface GoogleCloudMlV1__AutoScalingArgs {
    /**
     * The maximum number of nodes to scale this model under load. The actual value will depend on resource quota and availability.
     */
    maxNodes?: pulumi.Input<number>;
    /**
     * MetricSpec contains the specifications to use to calculate the desired nodes count.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__MetricSpecArgs>[]>;
    /**
     * Optional. The minimum number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed. Therefore, the cost of operating this model will be at least `rate` * `min_nodes` * number of hours since last billing cycle, where `rate` is the cost per node-hour as documented in the [pricing guide](/ml-engine/docs/pricing), even if no predictions are performed. There is additional cost for each prediction performed. Unlike manual scaling, if the load gets too heavy for the nodes that are up, the service will automatically add nodes to handle the increased load as well as scale back as traffic drops, always maintaining at least `min_nodes`. You will be charged for the time in which additional nodes are used. If `min_nodes` is not specified and AutoScaling is used with a [legacy (MLS1) machine type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults to 0, in which case, when traffic to a model stops (and after a cool-down period), nodes will be shut down and no charges will be incurred until traffic to the model resumes. If `min_nodes` is not specified and AutoScaling is used with a [Compute Engine (N1) machine type](/ml-engine/docs/machine-types-online-prediction), `min_nodes` defaults to 1. `min_nodes` must be at least 1 for use with a Compute Engine machine type. You can set `min_nodes` when creating the model version, and you can also update `min_nodes` for an existing version: update_body.json: { 'autoScaling': { 'minNodes': 5 } } HTTP request: PATCH https://ml.googleapis.com/v1/{name=projects/*&#47;models/*&#47;versions/*}?update_mask=autoScaling.minNodes -d @./update_body.json 
     */
    minNodes?: pulumi.Input<number>;
}

/**
 * Configuration for Automated Early Stopping of Trials. If no implementation_config is set, automated early stopping will not be run.
 */
export interface GoogleCloudMlV1__AutomatedStoppingConfigArgs {
    decayCurveStoppingConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_AutomatedStoppingConfig_DecayCurveAutomatedStoppingConfigArgs>;
    medianAutomatedStoppingConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_AutomatedStoppingConfig_MedianAutomatedStoppingConfigArgs>;
}

/**
 * Represents output related to a built-in algorithm Job.
 */
export interface GoogleCloudMlV1__BuiltInAlgorithmOutputArgs {
    /**
     * Framework on which the built-in algorithm was trained.
     */
    framework?: pulumi.Input<string>;
    /**
     * The Cloud Storage path to the `model/` directory where the training job saves the trained model. Only set for successful jobs that don't use hyperparameter tuning.
     */
    modelPath?: pulumi.Input<string>;
    /**
     * Python version on which the built-in algorithm was trained.
     */
    pythonVersion?: pulumi.Input<string>;
    /**
     * AI Platform runtime version on which the built-in algorithm was trained.
     */
    runtimeVersion?: pulumi.Input<string>;
}

/**
 * Represents a network port in a single container. This message is a subset of the [Kubernetes ContainerPort v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#containerport-v1-core).
 */
export interface GoogleCloudMlV1__ContainerPortArgs {
    /**
     * Number of the port to expose on the container. This must be a valid port number: 0 < PORT_NUMBER < 65536.
     */
    containerPort?: pulumi.Input<number>;
}

/**
 * Specification of a custom container for serving predictions. This message is a subset of the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
 */
export interface GoogleCloudMlV1__ContainerSpecArgs {
    /**
     * Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s "default parameters" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don't specify this field and don't specify the `commmand` field, then the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the [Docker documentation about how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Immutable. Specifies the command that runs when the container starts. This overrides the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the [Docker documentation about how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
     */
    command?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
     */
    env?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__EnvVarArgs>[]>;
    /**
     * URI of the Docker image to be used as the custom container for serving predictions. This URI must identify [an image in Artifact Registry](/artifact-registry/docs/overview) and begin with the hostname `{REGION}-docker.pkg.dev`, where `{REGION}` is replaced by the region that matches AI Platform Prediction [regional endpoint](/ai-platform/prediction/docs/regional-endpoints) that you are using. For example, if you are using the `us-central1-ml.googleapis.com` endpoint, then this URI must begin with `us-central1-docker.pkg.dev`. To use a custom container, the [AI Platform Google-managed service account](/ai-platform/prediction/docs/custom-service-account#default) must have permission to pull (read) the Docker image at this URI. The AI Platform Google-managed service account has the following format: `service-{PROJECT_NUMBER}@cloud-ml.google.com.iam.gserviceaccount.com` {PROJECT_NUMBER} is replaced by your Google Cloud project number. By default, this service account has necessary permissions to pull an Artifact Registry image in the same Google Cloud project where you are using AI Platform Prediction. In this case, no configuration is necessary. If you want to use an image from a different Google Cloud project, learn how to [grant the Artifact Registry Reader (roles/artifactregistry.reader) role for a repository](/artifact-registry/docs/access-control#grant-repo) to your projet's AI Platform Google-managed service account. To learn about the requirements for the Docker image itself, read [Custom container requirements](/ai-platform/prediction/docs/custom-container-requirements).
     */
    image?: pulumi.Input<string>;
    /**
     * Immutable. List of ports to expose from the container. AI Platform Prediction sends any prediction requests that it receives to the first port on this list. AI Platform Prediction also sends [liveness and health checks](/ai-platform/prediction/docs/custom-container-requirements#health) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` AI Platform Prediction does not use ports other than the first one listed. This field corresponds to the `ports` field of the [Kubernetes Containers v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
     */
    ports?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ContainerPortArgs>[]>;
}

/**
 * Represents the config of disk options.
 */
export interface GoogleCloudMlV1__DiskConfigArgs {
    /**
     * Size in GB of the boot disk (default is 100GB).
     */
    bootDiskSizeGb?: pulumi.Input<number>;
    /**
     * Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).
     */
    bootDiskType?: pulumi.Input<string>;
}

/**
 * Represents a custom encryption key configuration that can be applied to a resource.
 */
export interface GoogleCloudMlV1__EncryptionConfigArgs {
    /**
     * The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a training job. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
     */
    kmsKeyName?: pulumi.Input<string>;
}

/**
 * Represents an environment variable to be made available in a container. This message is a subset of the [Kubernetes EnvVar v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#envvar-v1-core).
 */
export interface GoogleCloudMlV1__EnvVarArgs {
    /**
     * Name of the environment variable. Must be a [valid C identifier](https://github.com/kubernetes/kubernetes/blob/v1.18.8/staging/src/k8s.io/apimachinery/pkg/util/validation/validation.go#L258) and must not begin with the prefix `AIP_`.
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the environment variable. Defaults to an empty string. In this field, you can reference [environment variables set by AI Platform Prediction](/ai-platform/prediction/docs/custom-container-requirements#aip-variables) and environment variables set earlier in the same env field as where this message occurs. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $(VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME)
     */
    value?: pulumi.Input<string>;
}

/**
 * Message holding configuration options for explaining model predictions. There are three feature attribution methods supported for TensorFlow models: integrated gradients, sampled Shapley, and XRAI. [Learn more about feature attributions.](/ai-platform/prediction/docs/ai-explanations/overview)
 */
export interface GoogleCloudMlV1__ExplanationConfigArgs {
    /**
     * Attributes credit by computing the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
     */
    integratedGradientsAttribution?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__IntegratedGradientsAttributionArgs>;
    /**
     * An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
     */
    sampledShapleyAttribution?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__SampledShapleyAttributionArgs>;
    /**
     * Attributes credit by computing the XRAI taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs.
     */
    xraiAttribution?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__XraiAttributionArgs>;
}

/**
 * Represents the result of a single hyperparameter tuning trial from a training job. The TrainingOutput object that is returned on successful completion of a training job with hyperparameter tuning includes a list of HyperparameterOutput objects, one for each successful trial.
 */
export interface GoogleCloudMlV1__HyperparameterOutputArgs {
    /**
     * All recorded object metrics for this trial. This field is not currently populated.
     */
    allMetrics?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricArgs>[]>;
    /**
     * Details related to built-in algorithms jobs. Only set for trials of built-in algorithms jobs that have succeeded.
     */
    builtInAlgorithmOutput?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__BuiltInAlgorithmOutputArgs>;
    /**
     * The final objective metric seen for this trial.
     */
    finalMetric?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_HyperparameterOutput_HyperparameterMetricArgs>;
    /**
     * The hyperparameters given to this trial.
     */
    hyperparameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * True if the trial is stopped early.
     */
    isTrialStoppedEarly?: pulumi.Input<boolean>;
    /**
     * The trial id for these results.
     */
    trialId?: pulumi.Input<string>;
    /**
     * URIs for accessing [interactive shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a hyperparameter tuning job and the job's training_input.enable_web_access is `true`. The keys are names of each node in the training job; for example, `master-replica-0` for the master node, `worker-replica-0` for the first worker, and `ps-replica-0` for the first parameter server. The values are the URIs for each node's interactive shell.
     */
    webAccessUris?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Represents a set of hyperparameters to optimize.
 */
export interface GoogleCloudMlV1__HyperparameterSpecArgs {
    /**
     * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI Platform hyperparameter tuning algorithm if unspecified.
     */
    algorithm?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__HyperparameterSpecAlgorithm>;
    /**
     * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
     */
    enableTrialEarlyStopping?: pulumi.Input<boolean>;
    /**
     * The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`. Defaults to `MAXIMIZE`.
     */
    goal: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__HyperparameterSpecGoal>;
    /**
     * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all scopes. For versions of TensorFlow prior to 0.12, this should be only the tag passed to tf.Summary. By default, "training/hptuning/metric" will be used.
     */
    hyperparameterMetricTag?: pulumi.Input<string>;
    /**
     * Optional. The number of failed trials that need to be seen before failing the hyperparameter tuning job. You can specify this field to override the default failing criteria for AI Platform hyperparameter tuning jobs. Defaults to zero, which means the service decides when a hyperparameter job should fail.
     */
    maxFailedTrials?: pulumi.Input<number>;
    /**
     * Optional. The number of training trials to run concurrently. You can reduce the time it takes to perform hyperparameter tuning by adding trials in parallel. However, each trail only benefits from the information gained in completed trials. That means that a trial does not get access to the results of trials running at the same time, which could reduce the quality of the overall optimization. Each trial will use the same scale tier and machine types. Defaults to one.
     */
    maxParallelTrials?: pulumi.Input<number>;
    /**
     * Optional. How many training trials should be attempted to optimize the specified hyperparameters. Defaults to one.
     */
    maxTrials?: pulumi.Input<number>;
    /**
     * The set of parameters to tune.
     */
    params: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ParameterSpecArgs>[]>;
    /**
     * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id will be used to find the corresponding vizier study guid and resume the study.
     */
    resumePreviousJobId?: pulumi.Input<string>;
}

/**
 * Attributes credit by computing the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
 */
export interface GoogleCloudMlV1__IntegratedGradientsAttributionArgs {
    /**
     * Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
     */
    numIntegralSteps?: pulumi.Input<number>;
}

/**
 * Options for manually scaling a model.
 */
export interface GoogleCloudMlV1__ManualScalingArgs {
    /**
     * The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed, so the cost of operating this model will be proportional to `nodes` * number of hours since last billing cycle plus the cost for each prediction performed.
     */
    nodes?: pulumi.Input<number>;
}

/**
 * A message representing a measurement.
 */
export interface GoogleCloudMlV1__MeasurementArgs {
    /**
     * Provides a list of metrics that act as inputs into the objective function.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_Measurement_MetricArgs>[]>;
    /**
     * The number of steps a machine learning model has been trained for. Must be non-negative.
     */
    stepCount?: pulumi.Input<string>;
}

/**
 * MetricSpec contains the specifications to use to calculate the desired nodes count when autoscaling is enabled.
 */
export interface GoogleCloudMlV1__MetricSpecArgs {
    /**
     * metric name.
     */
    name?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__MetricSpecName>;
    /**
     * Target specifies the target value for the given metric; once real metric deviates from the threshold by a certain percentage, the node count changes.
     */
    target?: pulumi.Input<number>;
}

/**
 * Represents a single hyperparameter to optimize.
 */
export interface GoogleCloudMlV1__ParameterSpecArgs {
    /**
     * Required if type is `CATEGORICAL`. The list of possible categories.
     */
    categoricalValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
     */
    discreteValues?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.
     */
    maxValue?: pulumi.Input<number>;
    /**
     * Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is INTEGER.
     */
    minValue?: pulumi.Input<number>;
    /**
     * The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., "learning_rate".
     */
    parameterName: pulumi.Input<string>;
    /**
     * Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
     */
    scaleType?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__ParameterSpecScaleType>;
    /**
     * The type of the parameter.
     */
    type: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__ParameterSpecType>;
}

/**
 * Represents input parameters for a prediction job.
 */
export interface GoogleCloudMlV1__PredictionInputArgs {
    /**
     * Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter.
     */
    batchSize?: pulumi.Input<string>;
    /**
     * The format of the input data files.
     */
    dataFormat: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__PredictionInputDataFormat>;
    /**
     * The Cloud Storage location of the input data files. May contain wildcards.
     */
    inputPaths: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.
     */
    maxWorkerCount?: pulumi.Input<string>;
    /**
     * Use this field if you want to use the default version for the specified model. The string must use the following format: `"projects/YOUR_PROJECT/models/YOUR_MODEL"`
     */
    modelName?: pulumi.Input<string>;
    /**
     * Optional. Format of the output data files, defaults to JSON.
     */
    outputDataFormat?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__PredictionInputOutputDataFormat>;
    /**
     * The output Google Cloud Storage location.
     */
    outputPath: pulumi.Input<string>;
    /**
     * The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services.
     */
    region: pulumi.Input<string>;
    /**
     * Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is "serving_default".
     */
    signatureName?: pulumi.Input<string>;
    /**
     * Use this field if you want to specify a Google Cloud Storage path for the model to use.
     */
    uri?: pulumi.Input<string>;
    /**
     * Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION"`
     */
    versionName?: pulumi.Input<string>;
}

/**
 * Represents results of a prediction job.
 */
export interface GoogleCloudMlV1__PredictionOutputArgs {
    /**
     * The number of data instances which resulted in errors.
     */
    errorCount?: pulumi.Input<string>;
    /**
     * Node hours used by the batch prediction job.
     */
    nodeHours?: pulumi.Input<number>;
    /**
     * The output Google Cloud Storage location provided at the job creation time.
     */
    outputPath?: pulumi.Input<string>;
    /**
     * The number of generated predictions.
     */
    predictionCount?: pulumi.Input<string>;
}

/**
 * Represents the configuration for a replica in a cluster.
 */
export interface GoogleCloudMlV1__ReplicaConfigArgs {
    /**
     * Represents the type and number of accelerators used by the replica. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu)
     */
    acceleratorConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__AcceleratorConfigArgs>;
    /**
     * Arguments to the entrypoint command. The following rules apply for container_command and container_args: - If you do not supply command or args: The defaults defined in the Docker image are used. - If you supply a command but no args: The default EntryPoint and the default Cmd defined in the Docker image are ignored. Your command is run without any arguments. - If you supply only args: The default Entrypoint defined in the Docker image is run with the args that you supplied. - If you supply a command and args: The default Entrypoint and the default Cmd defined in the Docker image are ignored. Your command is run with your args. It cannot be set if custom container image is not provided. Note that this field and [TrainingInput.args] are mutually exclusive, i.e., both cannot be set at the same time.
     */
    containerArgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The command with which the replica's custom container is run. If provided, it will override default ENTRYPOINT of the docker image. If not provided, the docker image's ENTRYPOINT is used. It cannot be set if custom container image is not provided. Note that this field and [TrainingInput.args] are mutually exclusive, i.e., both cannot be set at the same time.
     */
    containerCommand?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Represents the configuration of disk options.
     */
    diskConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__DiskConfigArgs>;
    /**
     * The Docker image to run on the replica. This image must be in Container Registry. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).
     */
    imageUri?: pulumi.Input<string>;
    /**
     * The AI Platform runtime version that includes a TensorFlow version matching the one used in the custom container. This field is required if the replica is a TPU worker that uses a custom container. Otherwise, do not specify this field. This must be a [runtime version that currently supports training with TPUs](/ml-engine/docs/tensorflow/runtime-version-list#tpu-support). Note that the version of TensorFlow included in a runtime version may differ from the numbering of the runtime version itself, because it may have a different [patch version](https://www.tensorflow.org/guide/version_compat#semantic_versioning_20). In this field, you must specify the runtime version (TensorFlow minor version). For example, if your custom container runs TensorFlow `1.x.y`, specify `1.x`.
     */
    tpuTfVersion?: pulumi.Input<string>;
}

/**
 * Configuration for logging request-response pairs to a BigQuery table. Online prediction requests to a model version and the responses to these requests are converted to raw strings and saved to the specified BigQuery table. Logging is constrained by [BigQuery quotas and limits](/bigquery/quotas). If your project exceeds BigQuery quotas or limits, AI Platform Prediction does not log request-response pairs, but it continues to serve predictions. If you are using [continuous evaluation](/ml-engine/docs/continuous-evaluation/), you do not need to specify this configuration manually. Setting up continuous evaluation automatically enables logging of request-response pairs.
 */
export interface GoogleCloudMlV1__RequestLoggingConfigArgs {
    /**
     * Fully qualified BigQuery table name in the following format: " project_id.dataset_name.table_name" The specified table must already exist, and the "Cloud ML Service Agent" for your project must have permission to write to it. The table must have the following [schema](/bigquery/docs/schemas): Field nameType Mode model STRING REQUIRED model_version STRING REQUIRED time TIMESTAMP REQUIRED raw_data STRING REQUIRED raw_prediction STRING NULLABLE groundtruth STRING NULLABLE 
     */
    bigqueryTableName: pulumi.Input<string>;
    /**
     * Percentage of requests to be logged, expressed as a fraction from 0 to 1. For example, if you want to log 10% of requests, enter `0.1`. The sampling window is the lifetime of the model version. Defaults to 0.
     */
    samplingPercentage?: pulumi.Input<number>;
}

/**
 * Specifies HTTP paths served by a custom container. AI Platform Prediction sends requests to these paths on the container; the custom container must run an HTTP server that responds to these requests with appropriate responses. Read [Custom container requirements](/ai-platform/prediction/docs/custom-container-requirements) for details on how to create your container image to meet these requirements.
 */
export interface GoogleCloudMlV1__RouteMapArgs {
    /**
     * HTTP path on the container to send health checkss to. AI Platform Prediction intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](/ai-platform/prediction/docs/custom-container-requirements#checks). For example, if you set this field to `/bar`, then AI Platform Prediction intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of Version.container.ports. If you don't specify this field, it defaults to the following value: /v1/models/ MODEL/versions/VERSION The placeholders in this value are replaced as follows: * MODEL: The name of the parent Model. This does not include the "projects/PROJECT_ID/models/" prefix that the API returns in output; it is the bare model name, as provided to projects.models.create. * VERSION: The name of the model version. This does not include the "projects/PROJECT_ID /models/MODEL/versions/" prefix that the API returns in output; it is the bare version name, as provided to projects.models.versions.create.
     */
    health?: pulumi.Input<string>;
    /**
     * HTTP path on the container to send prediction requests to. AI Platform Prediction forwards requests sent using projects.predict to this path on the container's IP address and port. AI Platform Prediction then returns the container's response in the API response. For example, if you set this field to `/foo`, then when AI Platform Prediction receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of Version.container.ports. If you don't specify this field, it defaults to the following value: /v1/models/MODEL/versions/VERSION:predict The placeholders in this value are replaced as follows: * MODEL: The name of the parent Model. This does not include the "projects/PROJECT_ID/models/" prefix that the API returns in output; it is the bare model name, as provided to projects.models.create. * VERSION: The name of the model version. This does not include the "projects/PROJECT_ID/models/MODEL/versions/" prefix that the API returns in output; it is the bare version name, as provided to projects.models.versions.create.
     */
    predict?: pulumi.Input<string>;
}

/**
 * An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
 */
export interface GoogleCloudMlV1__SampledShapleyAttributionArgs {
    /**
     * The number of feature permutations to consider when approximating the Shapley values.
     */
    numPaths?: pulumi.Input<number>;
}

/**
 * All parameters related to scheduling of training jobs.
 */
export interface GoogleCloudMlV1__SchedulingArgs {
    /**
     * Optional. The maximum job running time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, this field defaults to `604800s` (seven days). If the training job is still running after this duration, AI Platform Training cancels it. The duration is measured from when the job enters the `RUNNING` state; therefore it does not overlap with the duration limited by Scheduling.max_wait_time. For example, if you want to ensure your job runs for no more than 2 hours, set this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute). If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxRunningTime: 7200s ```
     */
    maxRunningTime?: pulumi.Input<string>;
    /**
     * Optional. The maximum job wait time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, there is no limit to the wait time. The minimum for this field is `1800s` (30 minutes). If the training job has not entered the `RUNNING` state after this duration, AI Platform Training cancels it. After the job begins running, it can no longer be cancelled due to the maximum wait time. Therefore the duration limited by this field does not overlap with the duration limited by Scheduling.max_running_time. For example, if the job temporarily stops running and retries due to a [VM restart](/ai-platform/training/docs/overview#restarts), this cannot lead to a maximum wait time cancellation. However, independently of this constraint, AI Platform Training might stop a job if there are too many retries due to exhausted resources in a region. The following example describes how you might use this field: To cancel your job if it doesn't start running within 1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds / minute). If the job is still in the `QUEUED` or `PREPARING` state after an hour of waiting, AI Platform Training cancels the job. If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ```yaml trainingInput: scheduling: maxWaitTime: 3600s ```
     */
    maxWaitTime?: pulumi.Input<string>;
    /**
     * Optional. Job scheduling will be based on this priority, which in the range [0, 1000]. The bigger the number, the higher the priority. Default to 0 if not set. If there are multiple jobs requesting same type of accelerators, the high priority job will be scheduled prior to ones with low priority.
     */
    priority?: pulumi.Input<number>;
}

/**
 * Represents configuration of a study.
 */
export interface GoogleCloudMlV1__StudyConfigArgs {
    /**
     * The search algorithm specified for the study.
     */
    algorithm?: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__StudyConfigAlgorithm>;
    /**
     * Configuration for automated stopping of unpromising Trials.
     */
    automatedStoppingConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__AutomatedStoppingConfigArgs>;
    /**
     * Metric specs for the study.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfig_MetricSpecArgs>[]>;
    /**
     * The set of parameters to tune.
     */
    parameters: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1_StudyConfig_ParameterSpecArgs>[]>;
}

/**
 * Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
 */
export interface GoogleCloudMlV1__TrainingInputArgs {
    /**
     * Optional. Command-line arguments passed to the training application when it starts. If your job uses a custom container, then the arguments are passed to the container's `ENTRYPOINT` command.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. Whether you want AI Platform Training to enable [interactive shell access](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by TrainingOutput.web_access_uris or HyperparameterOutput.web_access_uris (within TrainingOutput.trials).
     */
    enableWebAccess?: pulumi.Input<boolean>;
    /**
     * Optional. Options for using customer-managed encryption keys (CMEK) to protect resources created by a training job, instead of using Google's default encryption. If this is set, then all resources created by the training job will be encrypted with the customer-managed encryption key that you specify. [Learn how and when to use CMEK with AI Platform Training](/ai-platform/training/docs/cmek).
     */
    encryptionConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__EncryptionConfigArgs>;
    /**
     * Optional. The configuration for evaluators. You should only set `evaluatorConfig.acceleratorConfig` if `evaluatorType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `evaluatorConfig.imageUri` only if you build a custom image for your evaluator. If `evaluatorConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).
     */
    evaluatorConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ReplicaConfigArgs>;
    /**
     * Optional. The number of evaluator replicas to use for the training job. Each replica in the cluster will be of the type specified in `evaluator_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `evaluator_type`. The default value is zero.
     */
    evaluatorCount?: pulumi.Input<string>;
    /**
     * Optional. Specifies the type of virtual machine to use for your training job's evaluator nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `evaluatorCount` is greater than zero.
     */
    evaluatorType?: pulumi.Input<string>;
    /**
     * Optional. The set of Hyperparameters to tune.
     */
    hyperparameters?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__HyperparameterSpecArgs>;
    /**
     * Optional. A Google Cloud Storage path in which to store training outputs and other data needed for training. This path is passed to your TensorFlow program as the '--job-dir' command-line argument. The benefit of specifying this field is that Cloud ML validates the path for use in training.
     */
    jobDir?: pulumi.Input<string>;
    /**
     * Optional. The configuration for your master worker. You should only set `masterConfig.acceleratorConfig` if `masterType` is set to a Compute Engine machine type. Learn about [restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `masterConfig.imageUri` only if you build a custom image. Only one of `masterConfig.imageUri` and `runtimeVersion` should be set. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).
     */
    masterConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ReplicaConfigArgs>;
    /**
     * Optional. Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. See the [list of compatible Compute Engine machine types](/ai-platform/training/docs/machine-types#compute-engine-machine-types). Alternatively, you can use the certain legacy machine types in this field. See the [list of legacy machine types](/ai-platform/training/docs/machine-types#legacy-machine-types). Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPUs](/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
     */
    masterType?: pulumi.Input<string>;
    /**
     * Optional. The full name of the [Compute Engine network](/vpc/docs/vpc) to which the Job is peered. For example, `projects/12345/global/networks/myVPC`. The format of this field is `projects/{project}/global/networks/{network}`, where {project} is a project number (like `12345`) and {network} is network name. Private services access must already be configured for the network. If left unspecified, the Job is not peered with any network. [Learn about using VPC Network Peering.](/ai-platform/training/docs/vpc-peering).
     */
    network?: pulumi.Input<string>;
    /**
     * The Google Cloud Storage location of the packages with the training program and any additional dependencies. The maximum number of package URIs is 100.
     */
    packageUris: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional. The configuration for parameter servers. You should only set `parameterServerConfig.acceleratorConfig` if `parameterServerType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `parameterServerConfig.imageUri` only if you build a custom image for your parameter server. If `parameterServerConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).
     */
    parameterServerConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ReplicaConfigArgs>;
    /**
     * Optional. The number of parameter server replicas to use for the training job. Each replica in the cluster will be of the type specified in `parameter_server_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `parameter_server_type`. The default value is zero.
     */
    parameterServerCount?: pulumi.Input<string>;
    /**
     * Optional. Specifies the type of virtual machine to use for your training job's parameter server. The supported values are the same as those described in the entry for `master_type`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `parameter_server_count` is greater than zero.
     */
    parameterServerType?: pulumi.Input<string>;
    /**
     * The Python module name to run after installing the packages.
     */
    pythonModule: pulumi.Input<string>;
    /**
     * Optional. The version of Python used in training. You must either specify this field or specify `masterConfig.imageUri`. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).
     */
    pythonVersion?: pulumi.Input<string>;
    /**
     * The region to run the training job in. See the [available regions](/ai-platform/training/docs/regions) for AI Platform Training.
     */
    region: pulumi.Input<string>;
    /**
     * Optional. The AI Platform runtime version to use for training. You must either specify this field or specify `masterConfig.imageUri`. For more information, see the [runtime version list](/ai-platform/training/docs/runtime-version-list) and learn [how to manage runtime versions](/ai-platform/training/docs/versioning).
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * Specifies the machine types, the number of replicas for workers and parameter servers.
     */
    scaleTier: pulumi.Input<enums.ml.v1.GoogleCloudMlV1__TrainingInputScaleTier>;
    /**
     * Optional. Scheduling options for a training job.
     */
    scheduling?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__SchedulingArgs>;
    /**
     * Optional. The email address of a service account to use when running the training appplication. You must have the `iam.serviceAccounts.actAs` permission for the specified service account. In addition, the AI Platform Training Google-managed service account must have the `roles/iam.serviceAccountAdmin` role for the specified service account. [Learn more about configuring a service account.](/ai-platform/training/docs/custom-service-account) If not specified, the AI Platform Training Google-managed service account is used by default.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Optional. Use `chief` instead of `master` in the `TF_CONFIG` environment variable when training with a custom container. Defaults to `false`. [Learn more about this field.](/ai-platform/training/docs/distributed-training-details#chief-versus-master) This field has no effect for training jobs that don't use a custom container.
     */
    useChiefInTfConfig?: pulumi.Input<boolean>;
    /**
     * Optional. The configuration for workers. You should only set `workerConfig.acceleratorConfig` if `workerType` is set to a Compute Engine machine type. [Learn about restrictions on accelerator configurations for training.](/ai-platform/training/docs/using-gpus#compute-engine-machine-types-with-gpu) Set `workerConfig.imageUri` only if you build a custom image for your worker. If `workerConfig.imageUri` has not been set, AI Platform uses the value of `masterConfig.imageUri`. Learn more about [configuring custom containers](/ai-platform/training/docs/distributed-training-containers).
     */
    workerConfig?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__ReplicaConfigArgs>;
    /**
     * Optional. The number of worker replicas to use for the training job. Each replica in the cluster will be of the type specified in `worker_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `worker_type`. The default value is zero.
     */
    workerCount?: pulumi.Input<string>;
    /**
     * Optional. Specifies the type of virtual machine to use for your training job's worker nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. If you use `cloud_tpu` for this value, see special instructions for [configuring a custom TPU machine](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine). This value must be present when `scaleTier` is set to `CUSTOM` and `workerCount` is greater than zero.
     */
    workerType?: pulumi.Input<string>;
}

/**
 * Represents results of a training job. Output only.
 */
export interface GoogleCloudMlV1__TrainingOutputArgs {
    /**
     * Details related to built-in algorithms jobs. Only set for built-in algorithms jobs.
     */
    builtInAlgorithmOutput?: pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__BuiltInAlgorithmOutputArgs>;
    /**
     * The number of hyperparameter tuning trials that completed successfully. Only set for hyperparameter tuning jobs.
     */
    completedTrialCount?: pulumi.Input<string>;
    /**
     * The amount of ML units consumed by the job.
     */
    consumedMLUnits?: pulumi.Input<number>;
    /**
     * The TensorFlow summary tag name used for optimizing hyperparameter tuning trials. See [`HyperparameterSpec.hyperparameterMetricTag`](#HyperparameterSpec.FIELDS.hyperparameter_metric_tag) for more information. Only set for hyperparameter tuning jobs.
     */
    hyperparameterMetricTag?: pulumi.Input<string>;
    /**
     * Whether this job is a built-in Algorithm job.
     */
    isBuiltInAlgorithmJob?: pulumi.Input<boolean>;
    /**
     * Whether this job is a hyperparameter tuning job.
     */
    isHyperparameterTuningJob?: pulumi.Input<boolean>;
    /**
     * Results for individual Hyperparameter trials. Only set for hyperparameter tuning jobs.
     */
    trials?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleCloudMlV1__HyperparameterOutputArgs>[]>;
}

/**
 * Attributes credit by computing the XRAI taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs.
 */
export interface GoogleCloudMlV1__XraiAttributionArgs {
    /**
     * Number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range.
     */
    numIntegralSteps?: pulumi.Input<number>;
}

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
 */
export interface GoogleIamV1__AuditConfigArgs {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.ml.v1.GoogleIamV1__AuditLogConfigArgs>[]>;
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    service?: pulumi.Input<string>;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface GoogleIamV1__AuditLogConfigArgs {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log type that this config enables.
     */
    logType?: pulumi.Input<enums.ml.v1.GoogleIamV1__AuditLogConfigLogType>;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface GoogleIamV1__BindingArgs {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.ml.v1.GoogleType__ExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role?: pulumi.Input<string>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface GoogleType__ExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

