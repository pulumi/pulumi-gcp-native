// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.
 */
export interface CertificateAuthorityConfigArgs {
    /**
     * Defines a CertificateAuthorityServiceConfig.
     */
    certificateAuthorityServiceConfig?: pulumi.Input<inputs.certificatemanager.v1.CertificateAuthorityServiceConfigArgs>;
}

/**
 * Contains information required to contact CA service.
 */
export interface CertificateAuthorityServiceConfigArgs {
    /**
     * A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form "projects/{project}/locations/{location}/caPools/{ca_pool}".
     */
    caPool: pulumi.Input<string>;
}

/**
 * Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
 */
export interface ManagedCertificateArgs {
    /**
     * Immutable. Authorizations that will be used for performing domain authorization.
     */
    dnsAuthorizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
     */
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*&#47;locations/*&#47;certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
     */
    issuanceConfig?: pulumi.Input<string>;
}

/**
 * Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.
 */
export interface SelfManagedCertificateArgs {
    /**
     * Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.
     */
    pemCertificate?: pulumi.Input<string>;
    /**
     * Input only. The PEM-encoded private key of the leaf certificate.
     */
    pemPrivateKey?: pulumi.Input<string>;
}

