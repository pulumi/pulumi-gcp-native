// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Spec for App Dev Experience Feature.
 */
export interface AppDevExperienceFeatureSpecResponse {
}

/**
 * State for App Dev Exp Feature.
 */
export interface AppDevExperienceFeatureStateResponse {
    /**
     * Status of subcomponent that detects configured Service Mesh resources.
     */
    networkingInstallSucceeded: outputs.gkehub.v1.StatusResponse;
}

/**
 * ApplianceCluster contains information specific to GDC Edge Appliance Clusters.
 */
export interface ApplianceClusterResponse {
    /**
     * Immutable. Self-link of the GCP resource for the Appliance Cluster. For example: //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
     */
    resourceLink: string;
}

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
 */
export interface AuditConfigResponse {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs: outputs.gkehub.v1.AuditLogConfigResponse[];
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    service: string;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface AuditLogConfigResponse {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers: string[];
    /**
     * The log type that this config enables.
     */
    logType: string;
}

/**
 * Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
 */
export interface AuthorityResponse {
    /**
     * An identity provider that reflects the `issuer` in the workload identity pool.
     */
    identityProvider: string;
    /**
     * Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length <2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).
     */
    issuer: string;
    /**
     * Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field.
     */
    oidcJwks: string;
    /**
     * The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.
     */
    workloadIdentityPool: string;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface BindingResponse {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition: outputs.gkehub.v1.ExprResponse;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members: string[];
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role: string;
}

/**
 * CommonFeatureSpec contains Hub-wide configuration information
 */
export interface CommonFeatureSpecResponse {
    /**
     * Appdevexperience specific spec.
     */
    appdevexperience: outputs.gkehub.v1.AppDevExperienceFeatureSpecResponse;
    /**
     * FleetObservability feature spec.
     */
    fleetobservability: outputs.gkehub.v1.FleetObservabilityFeatureSpecResponse;
    /**
     * Multicluster Ingress-specific spec.
     */
    multiclusteringress: outputs.gkehub.v1.MultiClusterIngressFeatureSpecResponse;
}

/**
 * CommonFeatureState contains Hub-wide Feature status information.
 */
export interface CommonFeatureStateResponse {
    /**
     * Appdevexperience specific state.
     */
    appdevexperience: outputs.gkehub.v1.AppDevExperienceFeatureStateResponse;
    /**
     * FleetObservability feature state.
     */
    fleetobservability: outputs.gkehub.v1.FleetObservabilityFeatureStateResponse;
    /**
     * The "running state" of the Feature in this Hub.
     */
    state: outputs.gkehub.v1.FeatureStateResponse;
}

/**
 * EdgeCluster contains information specific to Google Edge Clusters.
 */
export interface EdgeClusterResponse {
    /**
     * Immutable. Self-link of the GCP resource for the Edge Cluster. For example: //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
     */
    resourceLink: string;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface ExprResponse {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description: string;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression: string;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location: string;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title: string;
}

/**
 * FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
 */
export interface FeatureResourceStateResponse {
    /**
     * The current state of the Feature resource in the Hub API.
     */
    state: string;
}

/**
 * FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
 */
export interface FeatureStateResponse {
    /**
     * The high-level, machine-readable status of this Feature.
     */
    code: string;
    /**
     * A human-readable description of the current status.
     */
    description: string;
    /**
     * The time this status and any related Feature-specific details were updated.
     */
    updateTime: string;
}

/**
 * **Fleet Observability**: The Hub-wide input for the FleetObservability feature.
 */
export interface FleetObservabilityFeatureSpecResponse {
}

/**
 * **FleetObservability**: An empty state left as an example Hub-wide Feature state.
 */
export interface FleetObservabilityFeatureStateResponse {
}

/**
 * GkeCluster contains information specific to GKE clusters.
 */
export interface GkeClusterResponse {
    /**
     * If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.
     */
    clusterMissing: boolean;
    /**
     * Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported.
     */
    resourceLink: string;
}

/**
 * KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.
 */
export interface KubernetesMetadataResponse {
    /**
     * Kubernetes API server version string as reported by `/version`.
     */
    kubernetesApiServerVersion: string;
    /**
     * The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.
     */
    memoryMb: number;
    /**
     * Node count as reported by Kubernetes nodes resources.
     */
    nodeCount: number;
    /**
     * Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty.
     */
    nodeProviderId: string;
    /**
     * The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.
     */
    updateTime: string;
    /**
     * vCPU count as reported by Kubernetes nodes resources.
     */
    vcpuCount: number;
}

/**
 * KubernetesResource contains the YAML manifests and configuration for Membership Kubernetes resources in the cluster. After CreateMembership or UpdateMembership, these resources should be re-applied in the cluster.
 */
export interface KubernetesResourceResponse {
    /**
     * The Kubernetes resources for installing the GKE Connect agent This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
     */
    connectResources: outputs.gkehub.v1.ResourceManifestResponse[];
    /**
     * Input only. The YAML representation of the Membership CR. This field is ignored for GKE clusters where Hub can read the CR directly. Callers should provide the CR that is currently present in the cluster during CreateMembership or UpdateMembership, or leave this field empty if none exists. The CR manifest is used to validate the cluster has not been registered with another Membership.
     */
    membershipCrManifest: string;
    /**
     * Additional Kubernetes resources that need to be applied to the cluster after Membership creation, and after every update. This field is only populated in the Membership returned from a successful long-running operation from CreateMembership or UpdateMembership. It is not populated during normal GetMembership or ListMemberships requests. To get the resource manifest after the initial registration, the caller should make a UpdateMembership call with an empty field mask.
     */
    membershipResources: outputs.gkehub.v1.ResourceManifestResponse[];
    /**
     * Optional. Options for Kubernetes resource generation.
     */
    resourceOptions: outputs.gkehub.v1.ResourceOptionsResponse;
}

/**
 * MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.
 */
export interface MembershipEndpointResponse {
    /**
     * Optional. Specific information for a GDC Edge Appliance cluster.
     */
    applianceCluster: outputs.gkehub.v1.ApplianceClusterResponse;
    /**
     * Optional. Specific information for a Google Edge cluster.
     */
    edgeCluster: outputs.gkehub.v1.EdgeClusterResponse;
    /**
     * Optional. Specific information for a GKE-on-GCP cluster.
     */
    gkeCluster: outputs.gkehub.v1.GkeClusterResponse;
    /**
     * Useful Kubernetes-specific metadata.
     */
    kubernetesMetadata: outputs.gkehub.v1.KubernetesMetadataResponse;
    /**
     * Optional. The in-cluster Kubernetes Resources that should be applied for a correctly registered cluster, in the steady state. These resources: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.
     */
    kubernetesResource: outputs.gkehub.v1.KubernetesResourceResponse;
    /**
     * Optional. Specific information for a GKE Multi-Cloud cluster.
     */
    multiCloudCluster: outputs.gkehub.v1.MultiCloudClusterResponse;
    /**
     * Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil "type" instead.
     */
    onPremCluster: outputs.gkehub.v1.OnPremClusterResponse;
}

/**
 * MembershipState describes the state of a Membership resource.
 */
export interface MembershipStateResponse {
    /**
     * The current state of the Membership resource.
     */
    code: string;
}

/**
 * MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.
 */
export interface MultiCloudClusterResponse {
    /**
     * If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists.
     */
    clusterMissing: boolean;
    /**
     * Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
     */
    resourceLink: string;
}

/**
 * **Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.
 */
export interface MultiClusterIngressFeatureSpecResponse {
    /**
     * Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
     */
    configMembership: string;
}

/**
 * OnPremCluster contains information specific to GKE On-Prem clusters.
 */
export interface OnPremClusterResponse {
    /**
     * Immutable. Whether the cluster is an admin cluster.
     */
    adminCluster: boolean;
    /**
     * If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists.
     */
    clusterMissing: boolean;
    /**
     * Immutable. The on prem cluster's type.
     */
    clusterType: string;
    /**
     * Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
     */
    resourceLink: string;
}

/**
 * ResourceManifest represents a single Kubernetes resource to be applied to the cluster.
 */
export interface ResourceManifestResponse {
    /**
     * Whether the resource provided in the manifest is `cluster_scoped`. If unset, the manifest is assumed to be namespace scoped. This field is used for REST mapping when applying the resource in a cluster.
     */
    clusterScoped: boolean;
    /**
     * YAML manifest of the resource.
     */
    manifest: string;
}

/**
 * ResourceOptions represent options for Kubernetes resource generation.
 */
export interface ResourceOptionsResponse {
    /**
     * Optional. The Connect agent version to use for connect_resources. Defaults to the latest GKE Connect version. The version must be a currently supported version, obsolete versions will be rejected.
     */
    connectVersion: string;
    /**
     * Optional. Major version of the Kubernetes cluster. This is only used to determine which version to use for the CustomResourceDefinition resources, `apiextensions/v1beta1` or`apiextensions/v1`.
     */
    k8sVersion: string;
    /**
     * Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for CustomResourceDefinition resources. This option should be set for clusters with Kubernetes apiserver versions <1.16.
     */
    v1beta1Crd: boolean;
}

/**
 * Status specifies state for the subcomponent.
 */
export interface StatusResponse {
    /**
     * Code specifies AppDevExperienceFeature's subcomponent ready state.
     */
    code: string;
    /**
     * Description is populated if Code is Failed, explaining why it has failed.
     */
    description: string;
}

