// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported.
 */
export interface AcceleratorConfigArgs {
    /**
     * Count of cores of this accelerator.
     */
    coreCount?: pulumi.Input<string>;
    /**
     * Type of this accelerator.
     */
    type?: pulumi.Input<enums.notebooks.v1.AcceleratorConfigType>;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface BindingArgs {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.notebooks.v1.ExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role?: pulumi.Input<string>;
}

/**
 * Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability.
 */
export interface BootImageArgs {
}

/**
 * Definition of a container image for starting a notebook instance with the environment installed in a container.
 */
export interface ContainerImageArgs {
    /**
     * The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`
     */
    repository: pulumi.Input<string>;
    /**
     * The tag of the container image. If not specified, this defaults to the latest tag.
     */
    tag?: pulumi.Input<string>;
}

/**
 * Parameters used in Dataproc JobType executions.
 */
export interface DataprocParametersArgs {
    /**
     * URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`
     */
    cluster?: pulumi.Input<string>;
}

/**
 * Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.
 */
export interface EncryptionConfigArgs {
    /**
     * The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
     */
    kmsKey?: pulumi.Input<string>;
}

/**
 * The description a notebook execution workload.
 */
export interface ExecutionTemplateArgs {
    /**
     * Configuration (count and accelerator type) for hardware running notebook execution.
     */
    acceleratorConfig?: pulumi.Input<inputs.notebooks.v1.SchedulerAcceleratorConfigArgs>;
    /**
     * Container Image URI to a DLVM Example: 'gcr.io/deeplearning-platform-release/base-cu100' More examples can be found at: https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container
     */
    containerImageUri?: pulumi.Input<string>;
    /**
     * Parameters used in Dataproc JobType executions.
     */
    dataprocParameters?: pulumi.Input<inputs.notebooks.v1.DataprocParametersArgs>;
    /**
     * Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: `gs://{bucket_name}/{folder}/{notebook_file_name}` Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`
     */
    inputNotebookFile?: pulumi.Input<string>;
    /**
     * The type of Job to be used on this execution.
     */
    jobType?: pulumi.Input<enums.notebooks.v1.ExecutionTemplateJobType>;
    /**
     * Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file.
     */
    kernelSpec?: pulumi.Input<string>;
    /**
     * Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
     */
    masterType?: pulumi.Input<string>;
    /**
     * Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: `gs://{bucket_name}/{folder}` Ex: `gs://notebook_user/scheduled_notebooks`
     */
    outputNotebookFolder?: pulumi.Input<string>;
    /**
     * Parameters used within the 'input_notebook_file' notebook.
     */
    parameters?: pulumi.Input<string>;
    /**
     * Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`
     */
    paramsYamlFile?: pulumi.Input<string>;
    /**
     * Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported.
     *
     * @deprecated Required. Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported.
     */
    scaleTier: pulumi.Input<enums.notebooks.v1.ExecutionTemplateScaleTier>;
    /**
     * The email address of a service account to use when running the execution. You must have the `iam.serviceAccounts.actAs` permission for the specified service account.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
     */
    tensorboard?: pulumi.Input<string>;
    /**
     * Parameters used in Vertex AI JobType executions.
     */
    vertexAiParameters?: pulumi.Input<inputs.notebooks.v1.VertexAIParametersArgs>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface ExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

/**
 * A Local attached disk resource.
 */
export interface LocalDiskArgs {
    /**
     * Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
     */
    initializeParams?: pulumi.Input<inputs.notebooks.v1.LocalDiskInitializeParamsArgs>;
    /**
     * Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI
     */
    interface?: pulumi.Input<string>;
    /**
     * The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode. Valid values: * READ_ONLY * READ_WRITE
     */
    mode?: pulumi.Input<string>;
    /**
     * Specifies a valid partial or full URL to an existing Persistent Disk resource.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT. Valid values: * PERSISTENT * SCRATCH
     */
    type?: pulumi.Input<string>;
}

/**
 * Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new runtime. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
 */
export interface LocalDiskInitializeParamsArgs {
    /**
     * Optional. Provide this property when creating the disk.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.
     */
    diskName?: pulumi.Input<string>;
    /**
     * Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.
     */
    diskSizeGb?: pulumi.Input<string>;
    /**
     * Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).
     */
    diskType?: pulumi.Input<enums.notebooks.v1.LocalDiskInitializeParamsDiskType>;
    /**
     * Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Reservation Affinity for consuming Zonal reservation.
 */
export interface ReservationAffinityArgs {
    /**
     * Optional. Type of reservation to consume
     */
    consumeReservationType?: pulumi.Input<enums.notebooks.v1.ReservationAffinityConsumeReservationType>;
    /**
     * Optional. Corresponds to the label key of reservation resource.
     */
    key?: pulumi.Input<string>;
    /**
     * Optional. Corresponds to the label values of reservation resource.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`
 */
export interface RuntimeAcceleratorConfigArgs {
    /**
     * Count of cores of this accelerator.
     */
    coreCount?: pulumi.Input<string>;
    /**
     * Accelerator model.
     */
    type?: pulumi.Input<enums.notebooks.v1.RuntimeAcceleratorConfigType>;
}

/**
 * Specifies the login configuration for Runtime
 */
export interface RuntimeAccessConfigArgs {
    /**
     * The type of access mode this instance.
     */
    accessType?: pulumi.Input<enums.notebooks.v1.RuntimeAccessConfigAccessType>;
    /**
     * The owner of this runtime after creation. Format: `alias@example.com` Currently supports one owner only.
     */
    runtimeOwner?: pulumi.Input<string>;
}

/**
 * A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.
 */
export interface RuntimeShieldedInstanceConfigArgs {
    /**
     * Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.
     */
    enableIntegrityMonitoring?: pulumi.Input<boolean>;
    /**
     * Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.
     */
    enableSecureBoot?: pulumi.Input<boolean>;
    /**
     * Defines whether the instance has the vTPM enabled. Enabled by default.
     */
    enableVtpm?: pulumi.Input<boolean>;
}

/**
 * Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
 */
export interface RuntimeSoftwareConfigArgs {
    /**
     * Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.
     */
    customGpuDriverPath?: pulumi.Input<string>;
    /**
     * Bool indicating whether JupyterLab terminal will be available or not. Default: False
     */
    disableTerminal?: pulumi.Input<boolean>;
    /**
     * Verifies core internal services are running. Default: True
     */
    enableHealthMonitoring?: pulumi.Input<boolean>;
    /**
     * Runtime will automatically shutdown after idle_shutdown_time. Default: True
     */
    idleShutdown?: pulumi.Input<boolean>;
    /**
     * Time in minutes to wait before shutting down runtime. Default: 180 minutes
     */
    idleShutdownTimeout?: pulumi.Input<number>;
    /**
     * Install Nvidia Driver automatically. Default: True
     */
    installGpuDriver?: pulumi.Input<boolean>;
    /**
     * Optional. Use a list of container images to use as Kernels in the notebook instance.
     */
    kernels?: pulumi.Input<pulumi.Input<inputs.notebooks.v1.ContainerImageArgs>[]>;
    /**
     * Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     */
    notebookUpgradeSchedule?: pulumi.Input<string>;
    /**
     * Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).
     */
    postStartupScript?: pulumi.Input<string>;
    /**
     * Behavior for the post startup script.
     */
    postStartupScriptBehavior?: pulumi.Input<enums.notebooks.v1.RuntimeSoftwareConfigPostStartupScriptBehavior>;
}

/**
 * Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported.
 */
export interface SchedulerAcceleratorConfigArgs {
    /**
     * Count of cores of this accelerator.
     */
    coreCount?: pulumi.Input<string>;
    /**
     * Type of this accelerator.
     */
    type?: pulumi.Input<enums.notebooks.v1.SchedulerAcceleratorConfigType>;
}

/**
 * A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid.
 */
export interface ShieldedInstanceConfigArgs {
    /**
     * Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.
     */
    enableIntegrityMonitoring?: pulumi.Input<boolean>;
    /**
     * Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.
     */
    enableSecureBoot?: pulumi.Input<boolean>;
    /**
     * Defines whether the instance has the vTPM enabled. Enabled by default.
     */
    enableVtpm?: pulumi.Input<boolean>;
}

/**
 * The entry of VM image upgrade history.
 */
export interface UpgradeHistoryEntryArgs {
    /**
     * Action. Rolloback or Upgrade.
     */
    action?: pulumi.Input<enums.notebooks.v1.UpgradeHistoryEntryAction>;
    /**
     * The container image before this instance upgrade.
     */
    containerImage?: pulumi.Input<string>;
    /**
     * The time that this instance upgrade history entry is created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The framework of this notebook instance.
     */
    framework?: pulumi.Input<string>;
    /**
     * The snapshot of the boot disk of this notebook instance before upgrade.
     */
    snapshot?: pulumi.Input<string>;
    /**
     * The state of this instance upgrade history entry.
     */
    state?: pulumi.Input<enums.notebooks.v1.UpgradeHistoryEntryState>;
    /**
     * Target VM Image. Format: ainotebooks-vm/project/image-name/name.
     */
    targetImage?: pulumi.Input<string>;
    /**
     * Target VM Version, like m63.
     */
    targetVersion?: pulumi.Input<string>;
    /**
     * The version of the notebook instance before this upgrade.
     */
    version?: pulumi.Input<string>;
    /**
     * The VM image before this instance upgrade.
     */
    vmImage?: pulumi.Input<string>;
}

/**
 * Parameters used in Vertex AI JobType executions.
 */
export interface VertexAIParametersArgs {
    /**
     * Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/
     */
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
     */
    network?: pulumi.Input<string>;
}

/**
 * Runtime using Virtual Machine for computing.
 */
export interface VirtualMachineArgs {
    /**
     * Virtual Machine configuration settings.
     */
    virtualMachineConfig?: pulumi.Input<inputs.notebooks.v1.VirtualMachineConfigArgs>;
}

/**
 * The config settings for virtual machine.
 */
export interface VirtualMachineConfigArgs {
    /**
     * Optional. The Compute Engine accelerator configuration for this runtime.
     */
    acceleratorConfig?: pulumi.Input<inputs.notebooks.v1.RuntimeAcceleratorConfigArgs>;
    /**
     * Optional. Boot image metadata used for runtime upgradeability.
     */
    bootImage?: pulumi.Input<inputs.notebooks.v1.BootImageArgs>;
    /**
     * Optional. Use a list of container images to use as Kernels in the notebook instance.
     */
    containerImages?: pulumi.Input<pulumi.Input<inputs.notebooks.v1.ContainerImageArgs>[]>;
    /**
     * Data disk option configuration settings.
     */
    dataDisk: pulumi.Input<inputs.notebooks.v1.LocalDiskArgs>;
    /**
     * Optional. Encryption settings for virtual machine data disk.
     */
    encryptionConfig?: pulumi.Input<inputs.notebooks.v1.EncryptionConfigArgs>;
    /**
     * Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.
     */
    internalIpOnly?: pulumi.Input<boolean>;
    /**
     * Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`
     */
    machineType: pulumi.Input<string>;
    /**
     * Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the "default" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.
     */
    network?: pulumi.Input<string>;
    /**
     * Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     */
    nicType?: pulumi.Input<enums.notebooks.v1.VirtualMachineConfigNicType>;
    /**
     * Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \ --global \ --prefix-length=24 \ --description="Google Cloud Managed Notebooks Range 24 c" \ --network=$NETWORK \ --addresses=192.168.0.0 \ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`
     */
    reservedIpRange?: pulumi.Input<string>;
    /**
     * Optional. Shielded VM Instance configuration settings.
     */
    shieldedInstanceConfig?: pulumi.Input<inputs.notebooks.v1.RuntimeShieldedInstanceConfigArgs>;
    /**
     * Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
     */
    subnet?: pulumi.Input<string>;
    /**
     * Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.
 */
export interface VmImageArgs {
    /**
     * Use this VM image family to find the image; the newest image in this family will be used.
     */
    imageFamily?: pulumi.Input<string>;
    /**
     * Use VM image name to find the image.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`
     */
    project: pulumi.Input<string>;
}

