// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Settings for WorkerPool autoscaling.
 */
export interface AutoscalingSettingsArgs {
    /**
     * The algorithm to use for autoscaling.
     */
    algorithm?: pulumi.Input<enums.dataflow.v1b3.AutoscalingSettingsAlgorithm>;
    /**
     * The maximum number of workers to cap scaling at.
     */
    maxNumWorkers?: pulumi.Input<number>;
}

/**
 * Metadata for a BigQuery connector used by the job.
 */
export interface BigQueryIODetailsArgs {
    /**
     * Dataset accessed in the connection.
     */
    dataset?: pulumi.Input<string>;
    /**
     * Project accessed in the connection.
     */
    project?: pulumi.Input<string>;
    /**
     * Query used to access data in the connection.
     */
    query?: pulumi.Input<string>;
    /**
     * Table accessed in the connection.
     */
    table?: pulumi.Input<string>;
}

/**
 * Metadata for a Cloud Bigtable connector used by the job.
 */
export interface BigTableIODetailsArgs {
    /**
     * InstanceId accessed in the connection.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * ProjectId accessed in the connection.
     */
    project?: pulumi.Input<string>;
    /**
     * TableId accessed in the connection.
     */
    tableId?: pulumi.Input<string>;
}

/**
 * Description of an interstitial value between transforms in an execution stage.
 */
export interface ComponentSourceArgs {
    /**
     * Dataflow service generated name for this source.
     */
    name?: pulumi.Input<string>;
    /**
     * User name for the original user transform or collection with which this source is most closely associated.
     */
    originalTransformOrCollection?: pulumi.Input<string>;
    /**
     * Human-readable name for this transform; may be user or system generated.
     */
    userName?: pulumi.Input<string>;
}

/**
 * Description of a transform executed as part of an execution stage.
 */
export interface ComponentTransformArgs {
    /**
     * Dataflow service generated name for this source.
     */
    name?: pulumi.Input<string>;
    /**
     * User name for the original user transform with which this transform is most closely associated.
     */
    originalTransform?: pulumi.Input<string>;
    /**
     * Human-readable name for this transform; may be user or system generated.
     */
    userName?: pulumi.Input<string>;
}

/**
 * Metadata for a Datastore connector used by the job.
 */
export interface DatastoreIODetailsArgs {
    /**
     * Namespace used in the connection.
     */
    namespace?: pulumi.Input<string>;
    /**
     * ProjectId accessed in the connection.
     */
    project?: pulumi.Input<string>;
}

/**
 * Describes any options that have an effect on the debugging of pipelines.
 */
export interface DebugOptionsArgs {
    /**
     * When true, enables the logging of the literal hot key to the user's Cloud Logging.
     */
    enableHotKeyLogging?: pulumi.Input<boolean>;
}

/**
 * Describes the data disk used by a workflow job.
 */
export interface DiskArgs {
    /**
     * Disk storage type, as defined by Google Compute Engine. This must be a disk type appropriate to the project and zone in which the workers will run. If unknown or unspecified, the service will attempt to choose a reasonable default. For example, the standard persistent disk type is a resource name typically ending in "pd-standard". If SSD persistent disks are available, the resource name typically ends with "pd-ssd". The actual valid values are defined the Google Compute Engine API, not by the Cloud Dataflow API; consult the Google Compute Engine documentation for more information about determining the set of available disk types for a particular project and zone. Google Compute Engine Disk types are local to a particular project in a particular zone, and so the resource name will typically look something like this: compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard
     */
    diskType?: pulumi.Input<string>;
    /**
     * Directory in a VM where disk is mounted.
     */
    mountPoint?: pulumi.Input<string>;
    /**
     * Size of disk in GB. If zero or unspecified, the service will attempt to choose a reasonable default.
     */
    sizeGb?: pulumi.Input<number>;
}

/**
 * Data provided with a pipeline or transform to provide descriptive info.
 */
export interface DisplayDataArgs {
    /**
     * Contains value if the data is of a boolean type.
     */
    boolValue?: pulumi.Input<boolean>;
    /**
     * Contains value if the data is of duration type.
     */
    durationValue?: pulumi.Input<string>;
    /**
     * Contains value if the data is of float type.
     */
    floatValue?: pulumi.Input<number>;
    /**
     * Contains value if the data is of int64 type.
     */
    int64Value?: pulumi.Input<string>;
    /**
     * Contains value if the data is of java class type.
     */
    javaClassValue?: pulumi.Input<string>;
    /**
     * The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
     */
    key?: pulumi.Input<string>;
    /**
     * An optional label to display in a dax UI for the element.
     */
    label?: pulumi.Input<string>;
    /**
     * The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
     */
    namespace?: pulumi.Input<string>;
    /**
     * A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
     */
    shortStrValue?: pulumi.Input<string>;
    /**
     * Contains value if the data is of string type.
     */
    strValue?: pulumi.Input<string>;
    /**
     * Contains value if the data is of timestamp type.
     */
    timestampValue?: pulumi.Input<string>;
    /**
     * An optional full URL.
     */
    url?: pulumi.Input<string>;
}

/**
 * Describes the environment in which a Dataflow Job runs.
 */
export interface EnvironmentArgs {
    /**
     * The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".
     */
    clusterManagerApiService?: pulumi.Input<string>;
    /**
     * The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
     */
    dataset?: pulumi.Input<string>;
    /**
     * Any debugging options to be supplied to the job.
     */
    debugOptions?: pulumi.Input<inputs.dataflow.v1b3.DebugOptionsArgs>;
    /**
     * The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
     */
    experiments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Which Flexible Resource Scheduling mode to run in.
     */
    flexResourceSchedulingGoal?: pulumi.Input<enums.dataflow.v1b3.EnvironmentFlexResourceSchedulingGoal>;
    /**
     * Experimental settings.
     */
    internalExperiments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
     */
    sdkPipelineOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identity to run virtual machines as. Defaults to the default account.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     */
    serviceKmsKeyName?: pulumi.Input<string>;
    /**
     * The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
     */
    serviceOptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    tempStoragePrefix?: pulumi.Input<string>;
    /**
     * A description of the process that generated the request.
     */
    userAgent?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A structure describing which components and their versions of the service are required in order to run the job.
     */
    version?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
     */
    workerPools?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.WorkerPoolArgs>[]>;
    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
     */
    workerRegion?: pulumi.Input<string>;
    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity.
     */
    workerZone?: pulumi.Input<string>;
}

/**
 * A message describing the state of a particular execution stage.
 */
export interface ExecutionStageStateArgs {
    /**
     * The time at which the stage transitioned to this state.
     */
    currentStateTime?: pulumi.Input<string>;
    /**
     * The name of the execution stage.
     */
    executionStageName?: pulumi.Input<string>;
    /**
     * Executions stage states allow the same set of values as JobState.
     */
    executionStageState?: pulumi.Input<enums.dataflow.v1b3.ExecutionStageStateExecutionStageState>;
}

/**
 * Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.
 */
export interface ExecutionStageSummaryArgs {
    /**
     * Collections produced and consumed by component transforms of this stage.
     */
    componentSource?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.ComponentSourceArgs>[]>;
    /**
     * Transforms that comprise this execution stage.
     */
    componentTransform?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.ComponentTransformArgs>[]>;
    /**
     * Dataflow service generated id for this stage.
     */
    id?: pulumi.Input<string>;
    /**
     * Input sources for this stage.
     */
    inputSource?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.StageSourceArgs>[]>;
    /**
     * Type of transform this stage is executing.
     */
    kind?: pulumi.Input<enums.dataflow.v1b3.ExecutionStageSummaryKind>;
    /**
     * Dataflow service generated name for this stage.
     */
    name?: pulumi.Input<string>;
    /**
     * Output sources for this stage.
     */
    outputSource?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.StageSourceArgs>[]>;
    /**
     * Other stages that must complete before this stage can run.
     */
    prerequisiteStage?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Metadata for a File connector used by the job.
 */
export interface FileIODetailsArgs {
    /**
     * File Pattern used to access files by the connector.
     */
    filePattern?: pulumi.Input<string>;
}

/**
 * Additional information about how a Cloud Dataflow job will be executed that isn't contained in the submitted job.
 */
export interface JobExecutionInfoArgs {
    /**
     * A mapping from each stage to the information about that stage.
     */
    stages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
 */
export interface JobMetadataArgs {
    /**
     * Identification of a Cloud Bigtable source used in the Dataflow job.
     */
    bigTableDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.BigTableIODetailsArgs>[]>;
    /**
     * Identification of a BigQuery source used in the Dataflow job.
     */
    bigqueryDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.BigQueryIODetailsArgs>[]>;
    /**
     * Identification of a Datastore source used in the Dataflow job.
     */
    datastoreDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.DatastoreIODetailsArgs>[]>;
    /**
     * Identification of a File source used in the Dataflow job.
     */
    fileDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.FileIODetailsArgs>[]>;
    /**
     * Identification of a Pub/Sub source used in the Dataflow job.
     */
    pubsubDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.PubSubIODetailsArgs>[]>;
    /**
     * The SDK version used to run the job.
     */
    sdkVersion?: pulumi.Input<inputs.dataflow.v1b3.SdkVersionArgs>;
    /**
     * Identification of a Spanner source used in the Dataflow job.
     */
    spannerDetails?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.SpannerIODetailsArgs>[]>;
}

/**
 * The packages that must be installed in order for a worker to run the steps of the Cloud Dataflow job that will be assigned to its worker pool. This is the mechanism by which the Cloud Dataflow SDK causes code to be loaded onto the workers. For example, the Cloud Dataflow Java SDK might use this to install jars containing the user's code and all of the various dependencies (libraries, data files, etc.) required in order for that code to run.
 */
export interface PackageArgs {
    /**
     * The resource to read the package from. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket} bucket.storage.googleapis.com/
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the package.
     */
    name?: pulumi.Input<string>;
}

/**
 * A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics.
 */
export interface PipelineDescriptionArgs {
    /**
     * Pipeline level display data.
     */
    displayData?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.DisplayDataArgs>[]>;
    /**
     * Description of each stage of execution of the pipeline.
     */
    executionPipelineStage?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.ExecutionStageSummaryArgs>[]>;
    /**
     * Description of each transform in the pipeline and collections between them.
     */
    originalPipelineTransform?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.TransformSummaryArgs>[]>;
    /**
     * A hash value of the submitted pipeline portable graph step names if exists.
     */
    stepNamesHash?: pulumi.Input<string>;
}

/**
 * Metadata for a Pub/Sub connector used by the job.
 */
export interface PubSubIODetailsArgs {
    /**
     * Subscription used in the connection.
     */
    subscription?: pulumi.Input<string>;
    /**
     * Topic accessed in the connection.
     */
    topic?: pulumi.Input<string>;
}

/**
 * The environment values to set at runtime.
 */
export interface RuntimeEnvironmentArgs {
    /**
     * Additional experiment flags for the job, specified with the `--experiments` option.
     */
    additionalExperiments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
     */
    additionalUserLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether to bypass the safety checks for the job's temporary directory. Use with caution.
     */
    bypassTempDirValidation?: pulumi.Input<boolean>;
    /**
     * Whether to enable Streaming Engine for the job.
     */
    enableStreamingEngine?: pulumi.Input<boolean>;
    /**
     * Configuration for VM IPs.
     */
    ipConfiguration?: pulumi.Input<enums.dataflow.v1b3.RuntimeEnvironmentIpConfiguration>;
    /**
     * Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * The machine type to use for the job. Defaults to the value from the template if not specified.
     */
    machineType?: pulumi.Input<string>;
    /**
     * The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     */
    maxWorkers?: pulumi.Input<number>;
    /**
     * Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
     */
    network?: pulumi.Input<string>;
    /**
     * The initial number of Google Compute Engine instances for the job.
     */
    numWorkers?: pulumi.Input<number>;
    /**
     * The email address of the service account to run the job as.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     */
    tempLocation?: pulumi.Input<string>;
    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
     */
    workerRegion?: pulumi.Input<string>;
    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     */
    workerZone?: pulumi.Input<string>;
    /**
     * The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     */
    zone?: pulumi.Input<string>;
}

/**
 * Defines an SDK harness container for executing Dataflow pipelines.
 */
export interface SdkHarnessContainerImageArgs {
    /**
     * The set of capabilities enumerated in the above Environment proto. See also [beam_runner_api.proto](https://github.com/apache/beam/blob/master/model/pipeline/src/main/proto/org/apache/beam/model/pipeline/v1/beam_runner_api.proto)
     */
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A docker container image that resides in Google Container Registry.
     */
    containerImage?: pulumi.Input<string>;
    /**
     * Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
     */
    useSingleCorePerContainer?: pulumi.Input<boolean>;
}

/**
 * The version of the SDK used to run the job.
 */
export interface SdkVersionArgs {
    /**
     * The support status for this SDK version.
     */
    sdkSupportStatus?: pulumi.Input<enums.dataflow.v1b3.SdkVersionSdkSupportStatus>;
    /**
     * The version of the SDK used to run the job.
     */
    version?: pulumi.Input<string>;
    /**
     * A readable string describing the version of the SDK.
     */
    versionDisplayName?: pulumi.Input<string>;
}

/**
 * Metadata for a Spanner connector used by the job.
 */
export interface SpannerIODetailsArgs {
    /**
     * DatabaseId accessed in the connection.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * InstanceId accessed in the connection.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * ProjectId accessed in the connection.
     */
    project?: pulumi.Input<string>;
}

/**
 * Description of an input or output of an execution stage.
 */
export interface StageSourceArgs {
    /**
     * Dataflow service generated name for this source.
     */
    name?: pulumi.Input<string>;
    /**
     * User name for the original user transform or collection with which this source is most closely associated.
     */
    originalTransformOrCollection?: pulumi.Input<string>;
    /**
     * Size of the source, if measurable.
     */
    sizeBytes?: pulumi.Input<string>;
    /**
     * Human-readable name for this source; may be user or system generated.
     */
    userName?: pulumi.Input<string>;
}

/**
 * Defines a particular step within a Cloud Dataflow job. A job consists of multiple steps, each of which performs some specific operation as part of the overall job. Data is typically passed from one step to another as part of the job. **Note:** The properties of this object are not stable and might change. Here's an example of a sequence of steps which together implement a Map-Reduce job: * Read a collection of data from some source, parsing the collection's elements. * Validate the elements. * Apply a user-defined function to map each element to some value and extract an element-specific key value. * Group elements with the same key into a single element with that key, transforming a multiply-keyed collection into a uniquely-keyed collection. * Write the elements out to some data sink. Note that the Cloud Dataflow service may be used to run many different types of jobs, not just Map-Reduce.
 */
export interface StepArgs {
    /**
     * The kind of step in the Cloud Dataflow job.
     */
    kind?: pulumi.Input<string>;
    /**
     * The name that identifies the step. This must be unique for each step with respect to all other steps in the Cloud Dataflow job.
     */
    name?: pulumi.Input<string>;
    /**
     * Named properties associated with the step. Each kind of predefined step has its own required set of properties. Must be provided on Create. Only retrieved with JOB_VIEW_ALL.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Taskrunner configuration settings.
 */
export interface TaskRunnerSettingsArgs {
    /**
     * Whether to also send taskrunner log info to stderr.
     */
    alsologtostderr?: pulumi.Input<boolean>;
    /**
     * The location on the worker for task-specific subdirectories.
     */
    baseTaskDir?: pulumi.Input<string>;
    /**
     * The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * The file to store preprocessing commands in.
     */
    commandlinesFileName?: pulumi.Input<string>;
    /**
     * Whether to continue taskrunner if an exception is hit.
     */
    continueOnException?: pulumi.Input<boolean>;
    /**
     * The API version of endpoint, e.g. "v1b3"
     */
    dataflowApiVersion?: pulumi.Input<string>;
    /**
     * The command to launch the worker harness.
     */
    harnessCommand?: pulumi.Input<string>;
    /**
     * The suggested backend language.
     */
    languageHint?: pulumi.Input<string>;
    /**
     * The directory on the VM to store logs.
     */
    logDir?: pulumi.Input<string>;
    /**
     * Whether to send taskrunner log info to Google Compute Engine VM serial console.
     */
    logToSerialconsole?: pulumi.Input<boolean>;
    /**
     * Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    logUploadLocation?: pulumi.Input<string>;
    /**
     * The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The settings to pass to the parallel worker harness.
     */
    parallelWorkerSettings?: pulumi.Input<inputs.dataflow.v1b3.WorkerSettingsArgs>;
    /**
     * The streaming worker main class name.
     */
    streamingWorkerMainClass?: pulumi.Input<string>;
    /**
     * The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
     */
    taskGroup?: pulumi.Input<string>;
    /**
     * The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
     */
    taskUser?: pulumi.Input<string>;
    /**
     * The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    tempStoragePrefix?: pulumi.Input<string>;
    /**
     * The ID string of the VM.
     */
    vmId?: pulumi.Input<string>;
    /**
     * The file to store the workflow in.
     */
    workflowFileName?: pulumi.Input<string>;
}

/**
 * Description of the type, names/ids, and input/outputs for a transform.
 */
export interface TransformSummaryArgs {
    /**
     * Transform-specific display data.
     */
    displayData?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.DisplayDataArgs>[]>;
    /**
     * SDK generated id of this transform instance.
     */
    id?: pulumi.Input<string>;
    /**
     * User names for all collection inputs to this transform.
     */
    inputCollectionName?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of transform.
     */
    kind?: pulumi.Input<enums.dataflow.v1b3.TransformSummaryKind>;
    /**
     * User provided name for this transform instance.
     */
    name?: pulumi.Input<string>;
    /**
     * User names for all collection outputs to this transform.
     */
    outputCollectionName?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Describes one particular pool of Cloud Dataflow workers to be instantiated by the Cloud Dataflow service in order to perform the computations required by a job. Note that a workflow job may use multiple pools, in order to match the various computational requirements of the various stages of the job.
 */
export interface WorkerPoolArgs {
    /**
     * Settings for autoscaling of this WorkerPool.
     */
    autoscalingSettings?: pulumi.Input<inputs.dataflow.v1b3.AutoscalingSettingsArgs>;
    /**
     * Data disks that are used by a VM in this workflow.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.DiskArgs>[]>;
    /**
     * The default package set to install. This allows the service to select a default set of packages which are useful to worker harnesses written in a particular language.
     */
    defaultPackageSet?: pulumi.Input<enums.dataflow.v1b3.WorkerPoolDefaultPackageSet>;
    /**
     * Size of root disk for VMs, in GB. If zero or unspecified, the service will attempt to choose a reasonable default.
     */
    diskSizeGb?: pulumi.Input<number>;
    /**
     * Fully qualified source image for disks.
     */
    diskSourceImage?: pulumi.Input<string>;
    /**
     * Type of root disk for VMs. If empty or unspecified, the service will attempt to choose a reasonable default.
     */
    diskType?: pulumi.Input<string>;
    /**
     * Configuration for VM IPs.
     */
    ipConfiguration?: pulumi.Input<enums.dataflow.v1b3.WorkerPoolIpConfiguration>;
    /**
     * The kind of the worker pool; currently only `harness` and `shuffle` are supported.
     */
    kind?: pulumi.Input<string>;
    /**
     * Machine type (e.g. "n1-standard-1"). If empty or unspecified, the service will attempt to choose a reasonable default.
     */
    machineType?: pulumi.Input<string>;
    /**
     * Metadata to set on the Google Compute Engine VMs.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
     */
    network?: pulumi.Input<string>;
    /**
     * The number of threads per worker harness. If empty or unspecified, the service will choose a number of threads (according to the number of cores on the selected machine type for batch, or 1 by convention for streaming).
     */
    numThreadsPerWorker?: pulumi.Input<number>;
    /**
     * Number of Google Compute Engine workers in this pool needed to execute the job. If zero or unspecified, the service will attempt to choose a reasonable default.
     */
    numWorkers?: pulumi.Input<number>;
    /**
     * The action to take on host maintenance, as defined by the Google Compute Engine API.
     */
    onHostMaintenance?: pulumi.Input<string>;
    /**
     * Packages to be installed on workers.
     */
    packages?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.PackageArgs>[]>;
    /**
     * Extra arguments for this worker pool.
     */
    poolArgs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set of SDK harness containers needed to execute this pipeline. This will only be set in the Fn API path. For non-cross-language pipelines this should have only one entry. Cross-language pipelines will have two or more entries.
     */
    sdkHarnessContainerImages?: pulumi.Input<pulumi.Input<inputs.dataflow.v1b3.SdkHarnessContainerImageArgs>[]>;
    /**
     * Subnetwork to which VMs will be assigned, if desired. Expected to be of the form "regions/REGION/subnetworks/SUBNETWORK".
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * Settings passed through to Google Compute Engine workers when using the standard Dataflow task runner. Users should ignore this field.
     */
    taskrunnerSettings?: pulumi.Input<inputs.dataflow.v1b3.TaskRunnerSettingsArgs>;
    /**
     * Sets the policy for determining when to turndown worker pool. Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and `TEARDOWN_NEVER`. `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn down. If the workers are not torn down by the service, they will continue to run and use Google Compute Engine VM resources in the user's project until they are explicitly terminated by the user. Because of this, Google recommends using the `TEARDOWN_ALWAYS` policy except for small, manually supervised test jobs. If unknown or unspecified, the service will attempt to choose a reasonable default.
     */
    teardownPolicy?: pulumi.Input<enums.dataflow.v1b3.WorkerPoolTeardownPolicy>;
    /**
     * Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.
     *
     * @deprecated Required. Docker container image that executes the Cloud Dataflow worker harness, residing in Google Container Registry. Deprecated for the Fn API path. Use sdk_harness_container_images instead.
     */
    workerHarnessContainerImage: pulumi.Input<string>;
    /**
     * Zone to run the worker pools in. If empty or unspecified, the service will attempt to choose a reasonable default.
     */
    zone?: pulumi.Input<string>;
}

/**
 * Provides data to pass through to the worker harness.
 */
export interface WorkerSettingsArgs {
    /**
     * The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * Whether to send work progress updates to the service.
     */
    reportingEnabled?: pulumi.Input<boolean>;
    /**
     * The Cloud Dataflow service path relative to the root URL, for example, "dataflow/v1b3/projects".
     */
    servicePath?: pulumi.Input<string>;
    /**
     * The Shuffle service path relative to the root URL, for example, "shuffle/v1beta1".
     */
    shuffleServicePath?: pulumi.Input<string>;
    /**
     * The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    tempStoragePrefix?: pulumi.Input<string>;
    /**
     * The ID of the worker running this pipeline.
     */
    workerId?: pulumi.Input<string>;
}

