// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Maintenance policy for an instance.
 */
export interface MaintenancePolicyArgs {
    /**
     * Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.
     */
    weeklyMaintenanceWindow?: pulumi.Input<pulumi.Input<inputs.redis.v1beta1.WeeklyMaintenanceWindowArgs>[]>;
}

/**
 * Configuration of the persistence functionality.
 */
export interface PersistenceConfigArgs {
    /**
     * Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
     */
    persistenceMode?: pulumi.Input<enums.redis.v1beta1.PersistenceConfigPersistenceMode>;
    /**
     * Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
     */
    rdbSnapshotPeriod?: pulumi.Input<enums.redis.v1beta1.PersistenceConfigRdbSnapshotPeriod>;
    /**
     * Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.
     */
    rdbSnapshotStartTime?: pulumi.Input<string>;
}

/**
 * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
 */
export interface TimeOfDayArgs {
    /**
     * Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
     */
    hours?: pulumi.Input<number>;
    /**
     * Minutes of hour of day. Must be from 0 to 59.
     */
    minutes?: pulumi.Input<number>;
    /**
     * Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
     */
    nanos?: pulumi.Input<number>;
    /**
     * Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
     */
    seconds?: pulumi.Input<number>;
}

/**
 * Time window in which disruptive maintenance updates occur. Non-disruptive updates can occur inside or outside this window.
 */
export interface WeeklyMaintenanceWindowArgs {
    /**
     * The day of week that maintenance updates occur.
     */
    day: pulumi.Input<enums.redis.v1beta1.WeeklyMaintenanceWindowDay>;
    /**
     * Start time of the window in UTC time.
     */
    startTime: pulumi.Input<inputs.redis.v1beta1.TimeOfDayArgs>;
}

