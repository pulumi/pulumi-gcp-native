// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * An intended audience of the Product for whom it's sold.
 */
export interface GoogleCloudRetailV2alphaAudienceArgs {
    /**
     * The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
     */
    ageGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
     */
    genders?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The color information of a Product.
 */
export interface GoogleCloudRetailV2alphaColorInfoArgs {
    /**
     * The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     */
    colorFamilies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 25 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     */
    colors?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
 */
export interface GoogleCloudRetailV2alphaConditionArgs {
    /**
     * Range of time(s) specifying when Condition is active. Condition true if any time range matches.
     */
    activeTimeRange?: pulumi.Input<pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaConditionTimeRangeArgs>[]>;
    /**
     * A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
     */
    queryTerms?: pulumi.Input<pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaConditionQueryTermArgs>[]>;
}

/**
 * Query terms that we want to match on.
 */
export interface GoogleCloudRetailV2alphaConditionQueryTermArgs {
    /**
     * Whether this is supposed to be a full or partial match.
     */
    fullMatch?: pulumi.Input<boolean>;
    /**
     * The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
     */
    value?: pulumi.Input<string>;
}

/**
 * Used for time-dependent conditions. Example: Want to have rule applied for week long sale.
 */
export interface GoogleCloudRetailV2alphaConditionTimeRangeArgs {
    /**
     * End of time range. Range is inclusive.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Start of time range. Range is inclusive.
     */
    startTime?: pulumi.Input<string>;
}

/**
 * Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
 */
export interface GoogleCloudRetailV2alphaFulfillmentInfoArgs {
    /**
     * The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
     */
    placeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store" * "same-day-delivery" * "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned.
     */
    type?: pulumi.Input<string>;
}

/**
 * Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.
 */
export interface GoogleCloudRetailV2alphaImageArgs {
    /**
     * Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    height?: pulumi.Input<number>;
    /**
     * URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image).
     */
    uri: pulumi.Input<string>;
    /**
     * Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    width?: pulumi.Input<number>;
}

/**
 * A floating point interval.
 */
export interface GoogleCloudRetailV2alphaIntervalArgs {
    /**
     * Exclusive upper bound.
     */
    exclusiveMaximum?: pulumi.Input<number>;
    /**
     * Exclusive lower bound.
     */
    exclusiveMinimum?: pulumi.Input<number>;
    /**
     * Inclusive upper bound.
     */
    maximum?: pulumi.Input<number>;
    /**
     * Inclusive lower bound.
     */
    minimum?: pulumi.Input<number>;
}

/**
 * The price information of a Product.
 */
export interface GoogleCloudRetailV2alphaPriceInfoArgs {
    /**
     * The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
     */
    cost?: pulumi.Input<number>;
    /**
     * The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
     */
    currencyCode?: pulumi.Input<string>;
    /**
     * Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.
     */
    originalPrice?: pulumi.Input<number>;
    /**
     * Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).
     */
    price?: pulumi.Input<number>;
    /**
     * The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
     */
    priceEffectiveTime?: pulumi.Input<string>;
    /**
     * The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
     */
    priceExpireTime?: pulumi.Input<string>;
}

/**
 * Promotion specification.
 */
export interface GoogleCloudRetailV2alphaPromotionArgs {
    /**
     * Promotion identifier, which is the final component of name. For example, this field is "free_gift", if name is `projects/*&#47;locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148).
     */
    promotionId?: pulumi.Input<string>;
}

/**
 * The rating of a Product.
 */
export interface GoogleCloudRetailV2alphaRatingArgs {
    /**
     * The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    averageRating?: pulumi.Input<number>;
    /**
     * The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    ratingCount?: pulumi.Input<number>;
    /**
     * List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
     */
    ratingHistogram?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.
 */
export interface GoogleCloudRetailV2alphaRuleArgs {
    /**
     * A boost action.
     */
    boostAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleBoostActionArgs>;
    /**
     * The condition that triggers the rule. If the condition is empty, the rule will always apply.
     */
    condition: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaConditionArgs>;
    /**
     * Prevents term from being associated with other terms.
     */
    doNotAssociateAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs>;
    /**
     * Filters results.
     */
    filterAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleFilterActionArgs>;
    /**
     * Ignores specific terms from query during search.
     */
    ignoreAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleIgnoreActionArgs>;
    /**
     * Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.
     */
    onewaySynonymsAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs>;
    /**
     * Redirects a shopper to a specific page.
     */
    redirectAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleRedirectActionArgs>;
    /**
     * Replaces specific terms in the query.
     */
    replacementAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleReplacementActionArgs>;
    /**
     * Treats a set of terms as synonyms of one another.
     */
    twowaySynonymsAction?: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs>;
}

/**
 * A boost action to apply to results matching condition specified above.
 */
export interface GoogleCloudRetailV2alphaRuleBoostActionArgs {
    /**
     * Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
     */
    boost?: pulumi.Input<number>;
    /**
     * The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
     */
    productsFilter?: pulumi.Input<string>;
}

/**
 * Prevents `query_term` from being associated with specified terms during search. Example: Don't associate "gShoe" and "cheap".
 */
export interface GoogleCloudRetailV2alphaRuleDoNotAssociateActionArgs {
    /**
     * Cannot contain duplicates or the query term. Can specify up to 100 terms.
     */
    doNotAssociateTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.
     */
    queryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Will be [deprecated = true] post migration;
     */
    terms?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * * Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
 */
export interface GoogleCloudRetailV2alphaRuleFilterActionArgs {
    /**
     * A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. See more details at the Retail Search [user guide](/retail/search/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
     */
    filter?: pulumi.Input<string>;
}

/**
 * Prevents a term in the query from being used in search. Example: Don't search for "shoddy".
 */
export interface GoogleCloudRetailV2alphaRuleIgnoreActionArgs {
    /**
     * Terms to ignore in the search query.
     */
    ignoreTerms?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: "sneakers" will use a synonym of "shoes". "shoes" will not use a synonym of "sneakers".
 */
export interface GoogleCloudRetailV2alphaRuleOnewaySynonymsActionArgs {
    /**
     * Will be [deprecated = true] post migration;
     */
    onewayTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.
     */
    queryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.
     */
    synonyms?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Redirects a shopper to a specific page. * Rule Condition: - Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.
 */
export interface GoogleCloudRetailV2alphaRuleRedirectActionArgs {
    /**
     * URL must have length equal or less than 2000 characters.
     */
    redirectUri?: pulumi.Input<string>;
}

/**
 * Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace "gShoe" with "google shoe".
 */
export interface GoogleCloudRetailV2alphaRuleReplacementActionArgs {
    /**
     * Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.
     */
    queryTerms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Term that will be used for replacement.
     */
    replacementTerm?: pulumi.Input<string>;
    /**
     * Will be [deprecated = true] post migration;
     */
    term?: pulumi.Input<string>;
}

/**
 * Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of "sneakers" and "shoes". * "sneakers" will use a synonym of "shoes". * "shoes" will use a synonym of "sneakers".
 */
export interface GoogleCloudRetailV2alphaRuleTwowaySynonymsActionArgs {
    /**
     * Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.
     */
    synonyms?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The specifications of dynamically generated facets.
 */
export interface GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpecArgs {
    /**
     * Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
     */
    mode?: pulumi.Input<enums.retail.v2alpha.GoogleCloudRetailV2alphaSearchRequestDynamicFacetSpecMode>;
}

/**
 * A facet specification to perform faceted search.
 */
export interface GoogleCloudRetailV2alphaSearchRequestFacetSpecArgs {
    /**
     * Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It will be ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response will be the same as in the request, and it will be ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response will be determined by Google Retail Search. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enable, which will generate a facet 'gender'. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how Google Retail Search orders "gender" and "rating" facets. However, notice that "price" and "brands" will always be ranked at 1st and 2nd position since their enable_dynamic_position are false.
     */
    enableDynamicPosition?: pulumi.Input<boolean>;
    /**
     * List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet "Red" and 200 products with the color facet "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having "colorFamilies" as FacetKey.key would by default return only "Red" products in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue products available, "Blue" would not be shown as an available facet value. If "colorFamilies" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "colorFamilies" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    excludedFilterKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The facet key specification.
     */
    facetKey: pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaSearchRequestFacetSpecFacetKeyArgs>;
    /**
     * Maximum of facet values that should be returned for this facet. If unspecified, defaults to 50. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned.
     */
    limit?: pulumi.Input<number>;
}

/**
 * Specifies how a facet is computed.
 */
export interface GoogleCloudRetailV2alphaSearchRequestFacetSpecFacetKeyArgs {
    /**
     * True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
     */
    caseInsensitive?: pulumi.Input<boolean>;
    /**
     * Only get facet values that contains the given strings. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "contains" to "Shoe", the "categories" facet will give only "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum is 10.
     */
    contains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.
     */
    intervals?: pulumi.Input<pulumi.Input<inputs.retail.v2alpha.GoogleCloudRetailV2alphaIntervalArgs>[]>;
    /**
     * Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * "brands" * "categories" * "genders" * "ageGroups" * "availability" * "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" * "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" * "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" * "customFulfillment2" * "customFulfillment3" * "customFulfillment4" * "customFulfillment5" * "inventory(place_id,attributes.key)" * numerical_field = * "price" * "discount" * "rating" * "ratingCount" * "attributes.key" * "inventory(place_id,price)" * "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
     */
    key: pulumi.Input<string>;
    /**
     * The order in which SearchResponse.Facet.values are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.
     */
    orderBy?: pulumi.Input<string>;
    /**
     * Only get facet values that start with the given string prefix. For example, suppose "categories" has three values "Women > Shoe", "Women > Dress" and "Men > Shoe". If set "prefixes" to "Women", the "categories" facet will give only "Women > Shoe" and "Women > Dress". Only supported on textual fields. Maximum is 10.
     */
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The query that is used to compute facet for the given facet key. When provided, it will override the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value will be always "1" and SearchResponse.Facet.values.count will be the number of results that match the query. For example, you can set a customized facet for "shipToStore", where FacetKey.key is "customizedShipToStore", and FacetKey.query is "availability: ANY(\"IN_STOCK\") AND shipToStore: ANY(\"123\")". Then the facet will count the products that are both in stock and ship to store "123".
     */
    query?: pulumi.Input<string>;
    /**
     * Only get facet for the given restricted values. For example, when using "pickupInStore" as key and set restricted values to ["store123", "store456"], only facets for "store123" and "store456" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5
     */
    restrictedValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Returns the min and max value for each numerical facet intervals. Ignored for textual facets.
     */
    returnMinMax?: pulumi.Input<boolean>;
}

/**
 * The specification for personalization.
 */
export interface GoogleCloudRetailV2alphaSearchRequestPersonalizationSpecArgs {
    /**
     * Defaults to Mode.AUTO.
     */
    mode?: pulumi.Input<enums.retail.v2alpha.GoogleCloudRetailV2alphaSearchRequestPersonalizationSpecMode>;
}

