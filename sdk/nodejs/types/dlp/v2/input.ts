// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
 */
export interface GooglePrivacyDlpV2ActionArgs {
    /**
     * Create a de-identified copy of the input data.
     */
    deidentify?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DeidentifyArgs>;
    /**
     * Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).
     */
    jobNotificationEmails?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2JobNotificationEmailsArgs>;
    /**
     * Publish a notification to a Pub/Sub topic.
     */
    pubSub?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PublishToPubSubArgs>;
    /**
     * Publish findings to Cloud Datahub.
     */
    publishFindingsToCloudDataCatalog?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs>;
    /**
     * Publish summary to Cloud Security Command Center (Alpha).
     */
    publishSummaryToCscc?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PublishSummaryToCsccArgs>;
    /**
     * Enable Stackdriver metric dlp.googleapis.com/finding_count.
     */
    publishToStackdriver?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PublishToStackdriverArgs>;
    /**
     * Save resulting findings in a provided location.
     */
    saveFindings?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2SaveFindingsArgs>;
}

/**
 * Apply transformation to all findings.
 */
export interface GooglePrivacyDlpV2AllInfoTypesArgs {
}

/**
 * Apply to all text.
 */
export interface GooglePrivacyDlpV2AllTextArgs {
}

/**
 * An auxiliary table contains statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
 */
export interface GooglePrivacyDlpV2AuxiliaryTableArgs {
    /**
     * Quasi-identifier columns.
     */
    quasiIds: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2QuasiIdFieldArgs>[]>;
    /**
     * The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
     */
    relativeFrequency: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * Auxiliary table location.
     */
    table: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * Message defining a field of a BigQuery table.
 */
export interface GooglePrivacyDlpV2BigQueryFieldArgs {
    /**
     * Designated field in the BigQuery table.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * Source table of the field.
     */
    table?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * Options defining BigQuery table and row identifiers.
 */
export interface GooglePrivacyDlpV2BigQueryOptionsArgs {
    /**
     * References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
     */
    excludedFields?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
    /**
     * Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
     */
    identifyingFields?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
    /**
     * Limit scanning only to these fields.
     */
    includedFields?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
    /**
     * Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
     */
    rowsLimit?: pulumi.Input<string>;
    /**
     * Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
     */
    rowsLimitPercent?: pulumi.Input<number>;
    sampleMethod?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2BigQueryOptionsSampleMethod>;
    /**
     * Complete BigQuery table reference.
     */
    tableReference?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
 */
export interface GooglePrivacyDlpV2BigQueryTableArgs {
    /**
     * Dataset ID of the table.
     */
    datasetId?: pulumi.Input<string>;
    /**
     * The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call.
     */
    project?: pulumi.Input<string>;
    /**
     * Name of the table.
     */
    tableId?: pulumi.Input<string>;
}

/**
 * Bucket is represented as a range, along with replacement values.
 */
export interface GooglePrivacyDlpV2BucketArgs {
    /**
     * Upper bound of the range, exclusive; type must match min.
     */
    max?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
    /**
     * Lower bound of the range, inclusive. Type should be the same as max if used.
     */
    min?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
    /**
     * Replacement value for this bucket.
     */
    replacementValue: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
}

/**
 * Generalization function that buckets values based on ranges. The ranges and replacement values are dynamically provided by the user for custom behavior, such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH This can be used on data of type: number, long, string, timestamp. If the bound `Value` type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
 */
export interface GooglePrivacyDlpV2BucketingConfigArgs {
    /**
     * Set of buckets. Ranges must be non-overlapping.
     */
    buckets?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BucketArgs>[]>;
}

/**
 * Compute numerical stats over an individual column, including number of distinct values and value count distribution.
 */
export interface GooglePrivacyDlpV2CategoricalStatsConfigArgs {
    /**
     * Field to compute categorical stats on. All column types are supported except for arrays and structs. However, it may be more informative to use NumericalStats when the field type is supported, depending on the data.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * Partially mask a string by replacing a given number of characters with a fixed character. Masking can start from the beginning or end of the string. This can be used on data of any type (numbers, longs, and so on) and when de-identifying structured data we'll attempt to preserve the original data's type. (This allows you to take a long like 123 and modify it to a string like **3.
 */
export interface GooglePrivacyDlpV2CharacterMaskConfigArgs {
    /**
     * When masking a string, items in this list will be skipped when replacing characters. For example, if the input string is `555-555-5555` and you instruct Cloud DLP to skip `-` and mask 5 characters with `*`, Cloud DLP returns `***-**5-5555`.
     */
    charactersToIgnore?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CharsToIgnoreArgs>[]>;
    /**
     * Character to use to mask the sensitive values—for example, `*` for an alphabetic string such as a name, or `0` for a numeric string such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to `*` for strings, and `0` for digits.
     */
    maskingCharacter?: pulumi.Input<string>;
    /**
     * Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally. If `number_to_mask` is negative, this denotes inverse masking. Cloud DLP masks all but a number of characters. For example, suppose you have the following values: - `masking_character` is `*` - `number_to_mask` is `-4` - `reverse_order` is `false` - `CharsToIgnore` includes `-` - Input string is `1234-5678-9012-3456` The resulting de-identified string is `****-****-****-3456`. Cloud DLP masks all but the last four characters. If `reverse_order` is `true`, all but the first four characters are masked as `1234-****-****-****`.
     */
    numberToMask?: pulumi.Input<number>;
    /**
     * Mask characters in reverse order. For example, if `masking_character` is `0`, `number_to_mask` is `14`, and `reverse_order` is `false`, then the input string `1234-5678-9012-3456` is masked as `00000000000000-3456`. If `masking_character` is `*`, `number_to_mask` is `3`, and `reverse_order` is `true`, then the string `12345` is masked as `12***`.
     */
    reverseOrder?: pulumi.Input<boolean>;
}

/**
 * Characters to skip when doing deidentification of a value. These will be left alone and skipped.
 */
export interface GooglePrivacyDlpV2CharsToIgnoreArgs {
    /**
     * Characters to not transform when masking.
     */
    charactersToSkip?: pulumi.Input<string>;
    /**
     * Common characters to not transform when masking. Useful to avoid removing punctuation.
     */
    commonCharactersToIgnore?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnore>;
}

/**
 * Message representing a set of files in Cloud Storage.
 */
export interface GooglePrivacyDlpV2CloudStorageFileSetArgs {
    /**
     * The url, in the format `gs:///`. Trailing wildcard in the path is allowed.
     */
    url?: pulumi.Input<string>;
}

/**
 * Options defining a file or a set of files within a Cloud Storage bucket.
 */
export interface GooglePrivacyDlpV2CloudStorageOptionsArgs {
    /**
     * Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
     */
    bytesLimitPerFile?: pulumi.Input<string>;
    /**
     * Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested.
     */
    bytesLimitPerFilePercent?: pulumi.Input<number>;
    /**
     * The set of one or more files to scan.
     */
    fileSet?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FileSetArgs>;
    /**
     * List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.
     */
    fileTypes?: pulumi.Input<pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CloudStorageOptionsFileTypesItem>[]>;
    /**
     * Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0.
     */
    filesLimitPercent?: pulumi.Input<number>;
    sampleMethod?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CloudStorageOptionsSampleMethod>;
}

/**
 * Message representing a single file or path in Cloud Storage.
 */
export interface GooglePrivacyDlpV2CloudStoragePathArgs {
    /**
     * A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt
     */
    path?: pulumi.Input<string>;
}

/**
 * Message representing a set of files in a Cloud Storage bucket. Regular expressions are used to allow fine-grained control over which files in the bucket to include. Included files are those that match at least one item in `include_regex` and do not match any items in `exclude_regex`. Note that a file that matches items from both lists will _not_ be included. For a match to occur, the entire file path (i.e., everything in the url after the bucket name) must match the regular expression. For example, given the input `{bucket_name: "mybucket", include_regex: ["directory1/.*"], exclude_regex: ["directory1/excluded.*"]}`: * `gs://mybucket/directory1/myfile` will be included * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches across `/`) * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the full path doesn't match any items in `include_regex`) * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path matches an item in `exclude_regex`) If `include_regex` is left empty, it will match all files by default (this is equivalent to setting `include_regex: [".*"]`). Some other common use cases: * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all files in `mybucket` except for .pdf files * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will include all files directly under `gs://mybucket/directory/`, without matching across `/`
 */
export interface GooglePrivacyDlpV2CloudStorageRegexFileSetArgs {
    /**
     * The name of a Cloud Storage bucket. Required.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
     */
    excludeRegex?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub.
     */
    includeRegex?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Represents a color in the RGB color space.
 */
export interface GooglePrivacyDlpV2ColorArgs {
    /**
     * The amount of blue in the color as a value in the interval [0, 1].
     */
    blue?: pulumi.Input<number>;
    /**
     * The amount of green in the color as a value in the interval [0, 1].
     */
    green?: pulumi.Input<number>;
    /**
     * The amount of red in the color as a value in the interval [0, 1].
     */
    red?: pulumi.Input<number>;
}

/**
 * The field type of `value` and `field` do not need to match to be considered equal, but not all comparisons are possible. EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types, but all other comparisons are invalid with incompatible types. A `value` of type: - `string` can be compared against all other types - `boolean` can only be compared against other booleans - `integer` can be compared against doubles or a string if the string value can be parsed as an integer. - `double` can be compared against integers or a string if the string can be parsed as a double. - `Timestamp` can be compared against strings in RFC 3339 date string format. - `TimeOfDay` can be compared against timestamps and strings in the format of 'HH:mm:ss'. If we fail to compare do to type mismatch, a warning will be given and the condition will evaluate to false.
 */
export interface GooglePrivacyDlpV2ConditionArgs {
    /**
     * Field within the record this condition is evaluated against.
     */
    field: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * Operator used to compare the field or infoType to the value.
     */
    operator: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2ConditionOperator>;
    /**
     * Value to compare against. [Mandatory, except for `EXISTS` tests.]
     */
    value?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
}

/**
 * A collection of conditions.
 */
export interface GooglePrivacyDlpV2ConditionsArgs {
    /**
     * A collection of conditions.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ConditionArgs>[]>;
}

/**
 * Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
 */
export interface GooglePrivacyDlpV2CryptoDeterministicConfigArgs {
    /**
     * A context may be used for higher security and maintaining referential integrity such that the same identifier in two different contexts will be given a distinct surrogate. The context is appended to plaintext value being encrypted. On decryption the provided context is validated against the value used during encryption. If a context was provided during encryption, same context must be provided during decryption as well. If the context is not set, plaintext would be used as is for encryption. If the context is set but: 1. there is no record present when transforming a given value or 2. the field is not present when transforming a given value, plaintext would be used as is for encryption. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and unstructured `ContentItem`s.
     */
    context?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * The key used by the encryption function. For deterministic encryption using AES-SIV, the provided key is internally expanded to 64 bytes prior to use.
     */
    cryptoKey?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoKeyArgs>;
    /**
     * The custom info type to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom info type followed by the number of characters comprising the surrogate. The following scheme defines the format: {info type name}({surrogate character count}):{surrogate} For example, if the name of custom info type is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom info type 'Surrogate'. This facilitates reversal of the surrogate when it occurs in free text. Note: For record transformations where the entire cell in a table is being transformed, surrogates are not mandatory. Surrogates are used to denote the location of the token and are necessary for re-identification in free form text. In order for inspection to work properly, the name of this info type must not occur naturally anywhere in your data; otherwise, inspection may either - reverse a surrogate that does not correspond to an actual identifier - be unable to parse the surrogate and result in an error Therefore, choose your custom info type name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE.
     */
    surrogateInfoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
}

/**
 * Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
 */
export interface GooglePrivacyDlpV2CryptoHashConfigArgs {
    /**
     * The key used by the hash function.
     */
    cryptoKey?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoKeyArgs>;
}

/**
 * This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
 */
export interface GooglePrivacyDlpV2CryptoKeyArgs {
    /**
     * Key wrapped using Cloud KMS
     */
    kmsWrapped?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs>;
    /**
     * Transient crypto key
     */
    transient?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TransientCryptoKeyArgs>;
    /**
     * Unwrapped crypto key
     */
    unwrapped?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2UnwrappedCryptoKeyArgs>;
}

/**
 * Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.
 */
export interface GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs {
    /**
     * Common alphabets.
     */
    commonAlphabet?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigCommonAlphabet>;
    /**
     * The 'tweak', a context may be used for higher security since the same identifier in two different contexts won't be given the same surrogate. If the context is not set, a default tweak will be used. If the context is set but: 1. there is no record present when transforming a given value or 1. the field is not present when transforming a given value, a default tweak will be used. Note that case (1) is expected when an `InfoTypeTransformation` is applied to both structured and unstructured `ContentItem`s. Currently, the referenced field may be of value type integer or string. The tweak is constructed as a sequence of bytes in big endian byte order such that: - a 64 bit integer is encoded followed by a single byte of value 1 - a string is encoded in UTF-8 format followed by a single byte of value 2
     */
    context?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * The key used by the encryption algorithm.
     */
    cryptoKey: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoKeyArgs>;
    /**
     * This is supported by mapping these to the alphanumeric characters that the FFX mode natively supports. This happens before/after encryption/decryption. Each character listed must appear only once. Number of characters must be in the range [2, 95]. This must be encoded as ASCII. The order of characters does not matter. The full list of allowed characters is: 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ~`!@#$%^&*()_-+={[}]|\:;"'<,>.?/
     */
    customAlphabet?: pulumi.Input<string>;
    /**
     * The native way to select the alphabet. Must be in the range [2, 95].
     */
    radix?: pulumi.Input<number>;
    /**
     * The custom infoType to annotate the surrogate with. This annotation will be applied to the surrogate by prefixing it with the name of the custom infoType followed by the number of characters comprising the surrogate. The following scheme defines the format: info_type_name(surrogate_character_count):surrogate For example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and the surrogate is 'abc', the full replacement value will be: 'MY_TOKEN_INFO_TYPE(3):abc' This annotation identifies the surrogate when inspecting content using the custom infoType [`SurrogateType`](https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype). This facilitates reversal of the surrogate when it occurs in free text. In order for inspection to work properly, the name of this infoType must not occur naturally anywhere in your data; otherwise, inspection may find a surrogate that does not correspond to an actual identifier. Therefore, choose your custom infoType name carefully after considering what your data looks like. One way to select a name that has a high chance of yielding reliable detection is to include one or more unicode characters that are highly improbable to exist in your data. For example, assuming your data is entered from a regular ASCII keyboard, the symbol with the hex code point 29DD might be used like so: ⧝MY_TOKEN_TYPE
     */
    surrogateInfoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
}

/**
 * Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
 */
export interface GooglePrivacyDlpV2CustomInfoTypeArgs {
    /**
     * Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
     */
    detectionRules?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DetectionRuleArgs>[]>;
    /**
     * A list of phrases to detect as a CustomInfoType.
     */
    dictionary?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DictionaryArgs>;
    /**
     * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
     */
    exclusionType?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CustomInfoTypeExclusionType>;
    /**
     * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
     */
    infoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
    /**
     * Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
     */
    likelihood?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2CustomInfoTypeLikelihood>;
    /**
     * Regular expression based CustomInfoType.
     */
    regex?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RegexArgs>;
    /**
     * Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
     */
    storedType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2StoredTypeArgs>;
    /**
     * Message for detecting output from deidentification transformations that support reversing.
     */
    surrogateType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2SurrogateTypeArgs>;
}

/**
 * Options defining a data set within Google Cloud Datastore.
 */
export interface GooglePrivacyDlpV2DatastoreOptionsArgs {
    /**
     * The kind to process.
     */
    kind?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2KindExpressionArgs>;
    /**
     * A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty.
     */
    partitionId?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PartitionIdArgs>;
}

/**
 * Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
 */
export interface GooglePrivacyDlpV2DateShiftConfigArgs {
    /**
     * Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
     */
    context?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
     */
    cryptoKey?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoKeyArgs>;
    /**
     * For example, -5 means shift date to at most 5 days back in the past.
     */
    lowerBoundDays: pulumi.Input<number>;
    /**
     * Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
     */
    upperBoundDays: pulumi.Input<number>;
}

/**
 * Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
 */
export interface GooglePrivacyDlpV2DeidentifyArgs {
    /**
     * User settable Cloud Storage bucket and folders to store de-identified files. This field must be set for cloud storage deidentification. The output Cloud Storage bucket must be different from the input bucket. De-identified files will overwrite files in the output path. Form of: gs://bucket/folder/ or gs://bucket
     */
    cloudStorageOutput: pulumi.Input<string>;
    /**
     * List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed. If empty, all supported files will be transformed. Supported types may be automatically added over time. If a file type is set in this field that isn't supported by the Deidentify action then the job will fail and will not be successfully created/started. Currently the only filetypes supported are: IMAGES, TEXT_FILES, CSV, TSV.
     */
    fileTypesToTransform?: pulumi.Input<pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2DeidentifyFileTypesToTransformItem>[]>;
    /**
     * User specified deidentify templates and configs for structured, unstructured, and image files.
     */
    transformationConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TransformationConfigArgs>;
    /**
     * Config for storing transformation details. This is separate from the de-identified content, and contains metadata about the successful transformations and/or failures that occurred while de-identifying. This needs to be set in order for users to access information about the status of each transformation (see TransformationDetails message for more information about what is noted).
     */
    transformationDetailsStorageConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TransformationDetailsStorageConfigArgs>;
}

/**
 * The configuration that controls how the data will change.
 */
export interface GooglePrivacyDlpV2DeidentifyConfigArgs {
    /**
     * Treat the dataset as an image and redact.
     */
    imageTransformations?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ImageTransformationsArgs>;
    /**
     * Treat the dataset as free-form text and apply the same free text transformation everywhere.
     */
    infoTypeTransformations?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeTransformationsArgs>;
    /**
     * Treat the dataset as structured. Transformations can be applied to specific locations within structured datasets, such as transforming a column within a table.
     */
    recordTransformations?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RecordTransformationsArgs>;
    /**
     * Mode for handling transformation errors. If left unspecified, the default mode is `TransformationErrorHandling.ThrowError`.
     */
    transformationErrorHandling?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TransformationErrorHandlingArgs>;
}

/**
 * δ-presence metric, used to estimate how likely it is for an attacker to figure out that one given individual appears in a de-identified dataset. Similarly to the k-map metric, we cannot compute δ-presence exactly without knowing the attack dataset, so we use a statistical model instead.
 */
export interface GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs {
    /**
     * Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers field must appear in exactly one field of one auxiliary table.
     */
    auxiliaryTables?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2StatisticalTableArgs>[]>;
    /**
     * Fields considered to be quasi-identifiers. No two fields can have the same tag.
     */
    quasiIds: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2QuasiIdArgs>[]>;
    /**
     * ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
     */
    regionCode?: pulumi.Input<string>;
}

/**
 * Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType.
 */
export interface GooglePrivacyDlpV2DetectionRuleArgs {
    /**
     * Hotword-based detection rule.
     */
    hotwordRule?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2HotwordRuleArgs>;
}

/**
 * Custom information type based on a dictionary of words or phrases. This can be used to match sensitive information specific to the data, such as a list of employee IDs or job titles. Dictionary words are case-insensitive and all characters other than letters and digits in the unicode [Basic Multilingual Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane) will be replaced with whitespace when scanning for matches, so the dictionary phrase "Sam Johnson" will match all three phrases "sam johnson", "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters surrounding any match must be of a different type than the adjacent characters within the word, so letters must be next to non-letters and digits next to non-digits. For example, the dictionary word "jen" will match the first three letters of the text "jen123" but will return no matches for "jennifer". Dictionary words containing a large number of characters that are not letters or digits may result in unexpected findings because such characters are treated as whitespace. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries. For dictionaries that do not fit within these constraints, consider using `LargeCustomDictionaryConfig` in the `StoredInfoType` API.
 */
export interface GooglePrivacyDlpV2DictionaryArgs {
    /**
     * Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
     */
    cloudStoragePath?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CloudStoragePathArgs>;
    /**
     * List of words or phrases to search for.
     */
    wordList?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2WordListArgs>;
}

/**
 * An entity in a dataset is a field or set of fields that correspond to a single person. For example, in medical records the `EntityId` might be a patient identifier, or for financial records it might be an account identifier. This message is used when generalizations or analysis must take into account that multiple rows correspond to the same entity.
 */
export interface GooglePrivacyDlpV2EntityIdArgs {
    /**
     * Composite key indicating which field contains the entity identifier.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * List of excluded infoTypes.
 */
export interface GooglePrivacyDlpV2ExcludeInfoTypesArgs {
    /**
     * InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"` and `exclusion_rule` containing `exclude_info_types.info_types` with "EMAIL_ADDRESS" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to "555-222-2222@example.org" to generate only a single finding, namely email address.
     */
    infoTypes?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>[]>;
}

/**
 * The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
 */
export interface GooglePrivacyDlpV2ExclusionRuleArgs {
    /**
     * Dictionary which defines the rule.
     */
    dictionary?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DictionaryArgs>;
    /**
     * Set of infoTypes for which findings would affect this rule.
     */
    excludeInfoTypes?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ExcludeInfoTypesArgs>;
    /**
     * How the rule is applied, see MatchingType documentation for details.
     */
    matchingType?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2ExclusionRuleMatchingType>;
    /**
     * Regular expression which defines the rule.
     */
    regex?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RegexArgs>;
}

/**
 * An expression, consisting of an operator and conditions.
 */
export interface GooglePrivacyDlpV2ExpressionsArgs {
    /**
     * Conditions to apply to the expression.
     */
    conditions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ConditionsArgs>;
    /**
     * The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
     */
    logicalOperator?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2ExpressionsLogicalOperator>;
}

/**
 * General identifier of a data field in a storage service.
 */
export interface GooglePrivacyDlpV2FieldIdArgs {
    /**
     * Name describing the field.
     */
    name?: pulumi.Input<string>;
}

/**
 * The transformation to apply to the field.
 */
export interface GooglePrivacyDlpV2FieldTransformationArgs {
    /**
     * Only apply the transformation if the condition evaluates to true for the given `RecordCondition`. The conditions are allowed to reference fields that are not used in the actual transformation. Example Use Cases: - Apply a different bucket transformation to an age column if the zip code column for the same record is within a specific range. - Redact a field if the date of birth field is greater than 85.
     */
    condition?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RecordConditionArgs>;
    /**
     * Input field(s) to apply the transformation to. When you have columns that reference their position within a list, omit the index from the FieldId. FieldId name matching ignores the index. For example, instead of "contact.nums[0].type", use "contact.nums.type".
     */
    fields: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
    /**
     * Treat the contents of the field as free text, and selectively transform content that matches an `InfoType`.
     */
    infoTypeTransformations?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeTransformationsArgs>;
    /**
     * Apply the transformation to the entire field.
     */
    primitiveTransformation?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PrimitiveTransformationArgs>;
}

/**
 * Set of files to scan.
 */
export interface GooglePrivacyDlpV2FileSetArgs {
    /**
     * The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
     */
    regexFileSet?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CloudStorageRegexFileSetArgs>;
    /**
     * The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
     */
    url?: pulumi.Input<string>;
}

/**
 * Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.
 */
export interface GooglePrivacyDlpV2FindingLimitsArgs {
    /**
     * Configuration of findings limit given for specified infoTypes.
     */
    maxFindingsPerInfoType?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeLimitArgs>[]>;
    /**
     * Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored.
     */
    maxFindingsPerItem?: pulumi.Input<number>;
    /**
     * Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher.
     */
    maxFindingsPerRequest?: pulumi.Input<number>;
}

/**
 * Buckets values based on fixed size ranges. The Bucketing transformation can provide all of this functionality, but requires more configuration. This message is provided as a convenience to the user for simple bucketing strategies. The transformed value will be a hyphenated string of {lower_bound}-{upper_bound}. For example, if lower_bound = 10 and upper_bound = 20, all values that are within this bucket will be replaced with "10-20". This can be used on data of type: double, long. If the bound Value type differs from the type of data being transformed, we will first attempt converting the type of the data to be transformed to match the type of the bound before comparing. See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
 */
export interface GooglePrivacyDlpV2FixedSizeBucketingConfigArgs {
    /**
     * Size of each bucket (except for minimum and maximum buckets). So if `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60, 60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works.
     */
    bucketSize: pulumi.Input<number>;
    /**
     * Lower bound value of buckets. All values less than `lower_bound` are grouped together into a single bucket; for example if `lower_bound` = 10, then all values less than 10 are replaced with the value "-10".
     */
    lowerBound: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
    /**
     * Upper bound value of buckets. All values greater than upper_bound are grouped together into a single bucket; for example if `upper_bound` = 89, then all values greater than 89 are replaced with the value "89+".
     */
    upperBound: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
}

/**
 * The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
 */
export interface GooglePrivacyDlpV2HotwordRuleArgs {
    /**
     * Regular expression pattern defining what qualifies as a hotword.
     */
    hotwordRegex?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RegexArgs>;
    /**
     * Likelihood adjustment to apply to all matching findings.
     */
    likelihoodAdjustment?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2LikelihoodAdjustmentArgs>;
    /**
     * Range of characters within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. The finding itself will be included in the window, so that hotwords can be used to match substrings of the finding itself. Suppose you want Cloud DLP to promote the likelihood of the phone number regex "\(\d{3}\) \d{3}-\d{4}" if the area code is known to be the area code of a company's office. In this case, use the hotword regex "\(xxx\)", where "xxx" is the area code in question. For tabular data, if you want to modify the likelihood of an entire column of findngs, see [Hotword example: Set the match likelihood of a table column] (https://cloud.google.com/dlp/docs/creating-custom-infotypes-likelihood#match-column-values).
     */
    proximity?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ProximityArgs>;
}

/**
 * Configuration to control jobs where the content being inspected is outside of Google Cloud Platform.
 */
export interface GooglePrivacyDlpV2HybridOptionsArgs {
    /**
     * A short description of where the data is coming from. Will be stored once in the job. 256 max length.
     */
    description?: pulumi.Input<string>;
    /**
     * To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required.
     */
    requiredFindingLabelKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
     */
    tableOptions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TableOptionsArgs>;
}

/**
 * Configuration for determining how redaction of images should occur.
 */
export interface GooglePrivacyDlpV2ImageTransformationArgs {
    /**
     * Apply transformation to all findings not specified in other ImageTransformation's selected_info_types. Only one instance is allowed within the ImageTransformations message.
     */
    allInfoTypes?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2AllInfoTypesArgs>;
    /**
     * Apply transformation to all text that doesn't match an infoType. Only one instance is allowed within the ImageTransformations message.
     */
    allText?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2AllTextArgs>;
    /**
     * The color to use when redacting content from an image. If not specified, the default is black.
     */
    redactionColor?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ColorArgs>;
    /**
     * Apply transformation to the selected info_types.
     */
    selectedInfoTypes?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2SelectedInfoTypesArgs>;
}

/**
 * A type of transformation that is applied over images.
 */
export interface GooglePrivacyDlpV2ImageTransformationsArgs {
    transforms?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ImageTransformationArgs>[]>;
}

/**
 * Type of information detected by the API.
 */
export interface GooglePrivacyDlpV2InfoTypeArgs {
    /**
     * Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$_-]{1,64}`.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional version name for this InfoType.
     */
    version?: pulumi.Input<string>;
}

/**
 * Max findings configuration per infoType, per content item or long running DlpJob.
 */
export interface GooglePrivacyDlpV2InfoTypeLimitArgs {
    /**
     * Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
     */
    infoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
    /**
     * Max findings limit for the given infoType.
     */
    maxFindings?: pulumi.Input<number>;
}

/**
 * A transformation to apply to text that is identified as a specific info_type.
 */
export interface GooglePrivacyDlpV2InfoTypeTransformationArgs {
    /**
     * InfoTypes to apply the transformation to. An empty list will cause this transformation to apply to all findings that correspond to infoTypes that were requested in `InspectConfig`.
     */
    infoTypes?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>[]>;
    /**
     * Primitive transformation to apply to the infoType.
     */
    primitiveTransformation: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PrimitiveTransformationArgs>;
}

/**
 * A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
 */
export interface GooglePrivacyDlpV2InfoTypeTransformationsArgs {
    /**
     * Transformation for each infoType. Cannot specify more than one for a given infoType.
     */
    transformations: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeTransformationArgs>[]>;
}

/**
 * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
 */
export interface GooglePrivacyDlpV2InspectConfigArgs {
    /**
     * Deprecated and unused.
     *
     * @deprecated Deprecated and unused.
     */
    contentOptions?: pulumi.Input<pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2InspectConfigContentOptionsItem>[]>;
    /**
     * CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
     */
    customInfoTypes?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CustomInfoTypeArgs>[]>;
    /**
     * When true, excludes type information of the findings. This is not used for data profiling.
     */
    excludeInfoTypes?: pulumi.Input<boolean>;
    /**
     * When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.
     */
    includeQuote?: pulumi.Input<boolean>;
    /**
     * Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
     */
    infoTypes?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>[]>;
    /**
     * Configuration to control the number of findings returned. This is not used for data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.
     */
    limits?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FindingLimitsArgs>;
    /**
     * Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
     */
    minLikelihood?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2InspectConfigMinLikelihood>;
    /**
     * Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
     */
    ruleSet?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InspectionRuleSetArgs>[]>;
}

/**
 * Controls what and how to inspect for findings.
 */
export interface GooglePrivacyDlpV2InspectJobConfigArgs {
    /**
     * Actions to execute at the completion of the job.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ActionArgs>[]>;
    /**
     * How and what to scan for.
     */
    inspectConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InspectConfigArgs>;
    /**
     * If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
     */
    inspectTemplateName?: pulumi.Input<string>;
    /**
     * The data to scan.
     */
    storageConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2StorageConfigArgs>;
}

/**
 * A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
 */
export interface GooglePrivacyDlpV2InspectionRuleArgs {
    /**
     * Exclusion rule.
     */
    exclusionRule?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ExclusionRuleArgs>;
    /**
     * Hotword-based detection rule.
     */
    hotwordRule?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2HotwordRuleArgs>;
}

/**
 * Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
 */
export interface GooglePrivacyDlpV2InspectionRuleSetArgs {
    /**
     * List of infoTypes this rule set is applied to.
     */
    infoTypes?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>[]>;
    /**
     * Set of rules to be applied to infoTypes. The rules are applied in order.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InspectionRuleArgs>[]>;
}

/**
 * Sends an email when the job completes. The email goes to IAM project owners and technical [Essential Contacts](https://cloud.google.com/resource-manager/docs/managing-notification-contacts).
 */
export interface GooglePrivacyDlpV2JobNotificationEmailsArgs {
}

/**
 * k-anonymity metric, used for analysis of reidentification risk.
 */
export interface GooglePrivacyDlpV2KAnonymityConfigArgs {
    /**
     * Message indicating that multiple rows might be associated to a single individual. If the same entity_id is associated to multiple quasi-identifier tuples over distinct rows, we consider the entire collection of tuples as the composite quasi-identifier. This collection is a multiset: the order in which the different tuples appear in the dataset is ignored, but their frequency is taken into account. Important note: a maximum of 1000 rows can be associated to a single entity ID. If more rows are associated with the same entity ID, some might be ignored.
     */
    entityId?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2EntityIdArgs>;
    /**
     * Set of fields to compute k-anonymity over. When multiple fields are specified, they are considered a single composite key. Structs and repeated data types are not supported; however, nested fields are supported so long as they are not structs themselves or nested within a repeated field.
     */
    quasiIds?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
}

/**
 * Reidentifiability metric. This corresponds to a risk model similar to what is called "journalist risk" in the literature, except the attack dataset is statistically modeled instead of being perfectly known. This can be done using publicly available data (like the US Census), or using a custom statistical model (indicated as one or several BigQuery tables), or by extrapolating from the distribution of values in the input dataset.
 */
export interface GooglePrivacyDlpV2KMapEstimationConfigArgs {
    /**
     * Several auxiliary tables can be used in the analysis. Each custom_tag used to tag a quasi-identifiers column must appear in exactly one column of one auxiliary table.
     */
    auxiliaryTables?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2AuxiliaryTableArgs>[]>;
    /**
     * Fields considered to be quasi-identifiers. No two columns can have the same tag.
     */
    quasiIds: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TaggedFieldArgs>[]>;
    /**
     * ISO 3166-1 alpha-2 region code to use in the statistical modeling. Set if no column is tagged with a region-specific InfoType (like US_ZIP_5) or a region code.
     */
    regionCode?: pulumi.Input<string>;
}

/**
 * A representation of a Datastore kind.
 */
export interface GooglePrivacyDlpV2KindExpressionArgs {
    /**
     * The name of the kind.
     */
    name?: pulumi.Input<string>;
}

/**
 * Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
 */
export interface GooglePrivacyDlpV2KmsWrappedCryptoKeyArgs {
    /**
     * The resource name of the KMS CryptoKey to use for unwrapping.
     */
    cryptoKeyName: pulumi.Input<string>;
    /**
     * The wrapped data crypto key.
     */
    wrappedKey: pulumi.Input<string>;
}

/**
 * l-diversity metric, used for analysis of reidentification risk.
 */
export interface GooglePrivacyDlpV2LDiversityConfigArgs {
    /**
     * Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
     */
    quasiIds?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
    /**
     * Sensitive field for computing the l-value.
     */
    sensitiveAttribute?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * Configuration for a custom dictionary created from a data source of any size up to the maximum size defined in the [limits](https://cloud.google.com/dlp/limits) page. The artifacts of dictionary creation are stored in the specified Cloud Storage location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries that satisfy the size requirements.
 */
export interface GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs {
    /**
     * Field in a BigQuery table where each cell represents a dictionary phrase.
     */
    bigQueryField?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryFieldArgs>;
    /**
     * Set of files containing newline-delimited lists of dictionary phrases.
     */
    cloudStorageFileSet?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CloudStorageFileSetArgs>;
    /**
     * Location to store dictionary artifacts in Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
     */
    outputPath?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CloudStoragePathArgs>;
}

/**
 * Skips the data without modifying it if the requested transformation would cause an error. For example, if a `DateShift` transformation were applied an an IP address, this mode would leave the IP address unchanged in the response.
 */
export interface GooglePrivacyDlpV2LeaveUntransformedArgs {
}

/**
 * Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
 */
export interface GooglePrivacyDlpV2LikelihoodAdjustmentArgs {
    /**
     * Set the likelihood of a finding to a fixed value.
     */
    fixedLikelihood?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihood>;
    /**
     * Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
     */
    relativeLikelihood?: pulumi.Input<number>;
}

/**
 * Job trigger option for hybrid jobs. Jobs must be manually created and finished.
 */
export interface GooglePrivacyDlpV2ManualArgs {
}

/**
 * Compute numerical stats over an individual column, including min, max, and quantiles.
 */
export interface GooglePrivacyDlpV2NumericalStatsConfigArgs {
    /**
     * Field to compute numerical stats on. Supported types are integer, float, date, datetime, timestamp, time.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * Cloud repository for storing output.
 */
export interface GooglePrivacyDlpV2OutputStorageConfigArgs {
    /**
     * Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
     */
    outputSchema?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2OutputStorageConfigOutputSchema>;
    /**
     * Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific time zone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table.
     */
    table?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
 */
export interface GooglePrivacyDlpV2PartitionIdArgs {
    /**
     * If not empty, the ID of the namespace to which the entities belong.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * The ID of the project to which the entities belong.
     */
    project?: pulumi.Input<string>;
}

/**
 * A rule for transforming a value.
 */
export interface GooglePrivacyDlpV2PrimitiveTransformationArgs {
    /**
     * Bucketing
     */
    bucketingConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BucketingConfigArgs>;
    /**
     * Mask
     */
    characterMaskConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CharacterMaskConfigArgs>;
    /**
     * Deterministic Crypto
     */
    cryptoDeterministicConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoDeterministicConfigArgs>;
    /**
     * Crypto
     */
    cryptoHashConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoHashConfigArgs>;
    /**
     * Ffx-Fpe
     */
    cryptoReplaceFfxFpeConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigArgs>;
    /**
     * Date Shift
     */
    dateShiftConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DateShiftConfigArgs>;
    /**
     * Fixed size bucketing
     */
    fixedSizeBucketingConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FixedSizeBucketingConfigArgs>;
    /**
     * Redact
     */
    redactConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RedactConfigArgs>;
    /**
     * Replace with a specified value.
     */
    replaceConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ReplaceValueConfigArgs>;
    /**
     * Replace with a value randomly drawn (with replacement) from a dictionary.
     */
    replaceDictionaryConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ReplaceDictionaryConfigArgs>;
    /**
     * Replace with infotype
     */
    replaceWithInfoTypeConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs>;
    /**
     * Time extraction
     */
    timePartConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TimePartConfigArgs>;
}

/**
 * Privacy metric to compute for reidentification risk analysis.
 */
export interface GooglePrivacyDlpV2PrivacyMetricArgs {
    /**
     * Categorical stats
     */
    categoricalStatsConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CategoricalStatsConfigArgs>;
    /**
     * delta-presence
     */
    deltaPresenceEstimationConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DeltaPresenceEstimationConfigArgs>;
    /**
     * K-anonymity
     */
    kAnonymityConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2KAnonymityConfigArgs>;
    /**
     * k-map
     */
    kMapEstimationConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2KMapEstimationConfigArgs>;
    /**
     * l-diversity
     */
    lDiversityConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2LDiversityConfigArgs>;
    /**
     * Numerical stats
     */
    numericalStatsConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2NumericalStatsConfigArgs>;
}

/**
 * Message for specifying a window around a finding to apply a detection rule.
 */
export interface GooglePrivacyDlpV2ProximityArgs {
    /**
     * Number of characters after the finding to consider.
     */
    windowAfter?: pulumi.Input<number>;
    /**
     * Number of characters before the finding to consider. For tabular data, if you want to modify the likelihood of an entire column of findngs, set this to 1. For more information, see [Hotword example: Set the match likelihood of a table column] (https://cloud.google.com/dlp/docs/creating-custom-infotypes-likelihood#match-column-values).
     */
    windowBefore?: pulumi.Input<number>;
}

/**
 * Publish findings of a DlpJob to Data Catalog. In Data Catalog, tag templates are applied to the resource that Cloud DLP scanned. Data Catalog tag templates are stored in the same project and region where the BigQuery table exists. For Cloud DLP to create and apply the tag template, the Cloud DLP service agent must have the `roles/datacatalog.tagTemplateOwner` permission on the project. The tag template contains fields summarizing the results of the DlpJob. Any field values previously written by another DlpJob are deleted. InfoType naming patterns are strictly enforced when using this feature. Findings are persisted in Data Catalog storage and are governed by service-specific policies for Data Catalog. For more information, see [Service Specific Terms](https://cloud.google.com/terms/service-terms). Only a single instance of this action can be specified. This action is allowed only if all resources being scanned are BigQuery tables. Compatible with: Inspect
 */
export interface GooglePrivacyDlpV2PublishFindingsToCloudDataCatalogArgs {
}

/**
 * Publish the result summary of a DlpJob to the Cloud Security Command Center (CSCC Alpha). This action is only available for projects which are parts of an organization and whitelisted for the alpha Cloud Security Command Center. The action will publish the count of finding instances and their info types. The summary of findings will be persisted in CSCC and are governed by CSCC service-specific policy, see https://cloud.google.com/terms/service-terms Only a single instance of this action can be specified. Compatible with: Inspect
 */
export interface GooglePrivacyDlpV2PublishSummaryToCsccArgs {
}

/**
 * Publish a message into a given Pub/Sub topic when DlpJob has completed. The message contains a single field, `DlpJobName`, which is equal to the finished job's [`DlpJob.name`](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob). Compatible with: Inspect, Risk
 */
export interface GooglePrivacyDlpV2PublishToPubSubArgs {
    /**
     * Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}.
     */
    topic?: pulumi.Input<string>;
}

/**
 * Enable Stackdriver metric dlp.googleapis.com/finding_count. This will publish a metric to stack driver on each infotype requested and how many findings were found for it. CustomDetectors will be bucketed as 'Custom' under the Stackdriver label 'info_type'.
 */
export interface GooglePrivacyDlpV2PublishToStackdriverArgs {
}

/**
 * A column with a semantic tag attached.
 */
export interface GooglePrivacyDlpV2QuasiIdArgs {
    /**
     * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
     */
    customTag?: pulumi.Input<string>;
    /**
     * Identifies the column.
     */
    field: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
     */
    inferred?: pulumi.Input<inputs.dlp.v2.GoogleProtobufEmptyArgs>;
    /**
     * A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
     */
    infoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
}

/**
 * A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
 */
export interface GooglePrivacyDlpV2QuasiIdFieldArgs {
    /**
     * A auxiliary field.
     */
    customTag?: pulumi.Input<string>;
    /**
     * Identifies the column.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * A quasi-identifier column has a custom_tag, used to know which column in the data corresponds to which column in the statistical model.
 */
export interface GooglePrivacyDlpV2QuasiIdentifierFieldArgs {
    /**
     * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
     */
    customTag?: pulumi.Input<string>;
    /**
     * Identifies the column.
     */
    field?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * A condition for determining whether a transformation should be applied to a field.
 */
export interface GooglePrivacyDlpV2RecordConditionArgs {
    /**
     * An expression.
     */
    expressions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ExpressionsArgs>;
}

/**
 * Configuration to suppress records whose suppression conditions evaluate to true.
 */
export interface GooglePrivacyDlpV2RecordSuppressionArgs {
    /**
     * A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
     */
    condition?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RecordConditionArgs>;
}

/**
 * A type of transformation that is applied over structured data such as a table.
 */
export interface GooglePrivacyDlpV2RecordTransformationsArgs {
    /**
     * Transform the record by applying various field transformations.
     */
    fieldTransformations?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldTransformationArgs>[]>;
    /**
     * Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
     */
    recordSuppressions?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RecordSuppressionArgs>[]>;
}

/**
 * Redact a given value. For example, if used with an `InfoTypeTransformation` transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the output would be 'My phone number is '.
 */
export interface GooglePrivacyDlpV2RedactConfigArgs {
}

/**
 * Message defining a custom regular expression.
 */
export interface GooglePrivacyDlpV2RegexArgs {
    /**
     * The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
     */
    groupIndexes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
     */
    pattern?: pulumi.Input<string>;
}

/**
 * Replace each input value with a value randomly selected from the dictionary.
 */
export interface GooglePrivacyDlpV2ReplaceDictionaryConfigArgs {
    /**
     * A list of words to select from for random replacement. The [limits](https://cloud.google.com/dlp/limits) page contains details about the size limits of dictionaries.
     */
    wordList?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2WordListArgs>;
}

/**
 * Replace each input value with a given `Value`.
 */
export interface GooglePrivacyDlpV2ReplaceValueConfigArgs {
    /**
     * Value to replace it with.
     */
    newValue?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ValueArgs>;
}

/**
 * Replace each matching finding with the name of the info_type.
 */
export interface GooglePrivacyDlpV2ReplaceWithInfoTypeConfigArgs {
}

/**
 * Configuration for a risk analysis job. See https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
 */
export interface GooglePrivacyDlpV2RiskAnalysisJobConfigArgs {
    /**
     * Actions to execute at the completion of the job. Are executed in the order provided.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ActionArgs>[]>;
    /**
     * Privacy metric to compute.
     */
    privacyMetric?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2PrivacyMetricArgs>;
    /**
     * Input dataset to compute metrics over.
     */
    sourceTable?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * If set, the detailed findings will be persisted to the specified OutputStorageConfig. Only a single instance of this action can be specified. Compatible with: Inspect, Risk
 */
export interface GooglePrivacyDlpV2SaveFindingsArgs {
    /**
     * Location to store findings outside of DLP.
     */
    outputConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2OutputStorageConfigArgs>;
}

/**
 * Schedule for inspect job triggers.
 */
export interface GooglePrivacyDlpV2ScheduleArgs {
    /**
     * With this option a job is started on a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days.
     */
    recurrencePeriodDuration?: pulumi.Input<string>;
}

/**
 * Apply transformation to the selected info_types.
 */
export interface GooglePrivacyDlpV2SelectedInfoTypesArgs {
    /**
     * InfoTypes to apply the transformation to. Required. Provided InfoType must be unique within the ImageTransformations message.
     */
    infoTypes: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>[]>;
}

/**
 * An auxiliary table containing statistical information on the relative frequency of different quasi-identifiers values. It has one or several quasi-identifiers columns, and one column that indicates the relative frequency of each quasi-identifier tuple. If a tuple is present in the data but not in the auxiliary table, the corresponding relative frequency is assumed to be zero (and thus, the tuple is highly reidentifiable).
 */
export interface GooglePrivacyDlpV2StatisticalTableArgs {
    /**
     * Quasi-identifier columns.
     */
    quasiIds: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2QuasiIdentifierFieldArgs>[]>;
    /**
     * The relative frequency column must contain a floating-point number between 0 and 1 (inclusive). Null values are assumed to be zero.
     */
    relativeFrequency: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * Auxiliary table location.
     */
    table: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * Shared message indicating Cloud storage type.
 */
export interface GooglePrivacyDlpV2StorageConfigArgs {
    /**
     * BigQuery options.
     */
    bigQueryOptions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryOptionsArgs>;
    /**
     * Cloud Storage options.
     */
    cloudStorageOptions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2CloudStorageOptionsArgs>;
    /**
     * Google Cloud Datastore options.
     */
    datastoreOptions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DatastoreOptionsArgs>;
    /**
     * Hybrid inspection options.
     */
    hybridOptions?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2HybridOptionsArgs>;
    timespanConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2TimespanConfigArgs>;
}

/**
 * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
 */
export interface GooglePrivacyDlpV2StoredInfoTypeConfigArgs {
    /**
     * Description of the StoredInfoType (max 256 characters).
     */
    description?: pulumi.Input<string>;
    /**
     * Store dictionary-based CustomInfoType.
     */
    dictionary?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DictionaryArgs>;
    /**
     * Display name of the StoredInfoType (max 256 characters).
     */
    displayName?: pulumi.Input<string>;
    /**
     * StoredInfoType where findings are defined by a dictionary of phrases.
     */
    largeCustomDictionary?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2LargeCustomDictionaryConfigArgs>;
    /**
     * Store regular expression-based StoredInfoType.
     */
    regex?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2RegexArgs>;
}

/**
 * A reference to a StoredInfoType to use with scanning.
 */
export interface GooglePrivacyDlpV2StoredTypeArgs {
    /**
     * Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`.
     */
    name?: pulumi.Input<string>;
}

/**
 * Message for detecting output from deidentification transformations such as [`CryptoReplaceFfxFpeConfig`](https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig). These types of transformations are those that perform pseudonymization, thereby producing a "surrogate" as output. This should be used in conjunction with a field on the transformation such as `surrogate_info_type`. This CustomInfoType does not support the use of `detection_rules`.
 */
export interface GooglePrivacyDlpV2SurrogateTypeArgs {
}

/**
 * Instructions regarding the table content being inspected.
 */
export interface GooglePrivacyDlpV2TableOptionsArgs {
    /**
     * The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided.
     */
    identifyingFields?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>[]>;
}

/**
 * A column with a semantic tag attached.
 */
export interface GooglePrivacyDlpV2TaggedFieldArgs {
    /**
     * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
     */
    customTag?: pulumi.Input<string>;
    /**
     * Identifies the column.
     */
    field: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
    /**
     * If no semantic tag is indicated, we infer the statistical model from the distribution of values in the input data
     */
    inferred?: pulumi.Input<inputs.dlp.v2.GoogleProtobufEmptyArgs>;
    /**
     * A column can be tagged with a InfoType to use the relevant public dataset as a statistical model of population, if available. We currently support US ZIP codes, region codes, ages and genders. To programmatically obtain the list of supported InfoTypes, use ListInfoTypes with the supported_by=RISK_ANALYSIS filter.
     */
    infoType?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2InfoTypeArgs>;
}

/**
 * Throw an error and fail the request when a transformation error occurs.
 */
export interface GooglePrivacyDlpV2ThrowErrorArgs {
}

/**
 * For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a portion of the value.
 */
export interface GooglePrivacyDlpV2TimePartConfigArgs {
    /**
     * The part of the time to keep.
     */
    partToExtract?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2TimePartConfigPartToExtract>;
}

/**
 * Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Cloud Storage and BigQuery.
 */
export interface GooglePrivacyDlpV2TimespanConfigArgs {
    /**
     * When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger or the timespan end_time used in the last run of the JobTrigger.
     */
    enableAutoPopulationOfTimespanConfig?: pulumi.Input<boolean>;
    /**
     * Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery. *For BigQuery* If this value is not specified and the table was modified between the given start and end times, the entire table will be scanned. If this value is specified, then rows are filtered based on the given start and end times. Rows with a `NULL` value in the provided BigQuery column are skipped. Valid data types of the provided BigQuery column are: `INTEGER`, `DATE`, `TIMESTAMP`, and `DATETIME`. If your BigQuery table is [partitioned at ingestion time](https://cloud.google.com/bigquery/docs/partitioned-tables#ingestion_time), you can use any of the following pseudo-columns as your timestamp field. When used with Cloud DLP, these pseudo-column names are case sensitive. - _PARTITIONTIME - _PARTITIONDATE - _PARTITION_LOAD_TIME *For Datastore* If this value is specified, then entities are filtered based on the given start and end times. If an entity does not contain the provided timestamp property or contains empty or invalid values, then it is included. Valid data types of the provided timestamp property are: `TIMESTAMP`. See the [known issue](https://cloud.google.com/dlp/docs/known-issues#bq-timespan) related to this operation.
     */
    timestampField?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2FieldIdArgs>;
}

/**
 * User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.
 */
export interface GooglePrivacyDlpV2TransformationConfigArgs {
    /**
     * De-identify template. If this template is specified, it will serve as the default de-identify template. This template cannot contain `record_transformations` since it can be used for unstructured content such as free-form text files. If this template is not set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify unstructured content.
     */
    deidentifyTemplate?: pulumi.Input<string>;
    /**
     * Image redact template. If this template is specified, it will serve as the de-identify template for images. If this template is not set, all findings in the image will be redacted with a black box.
     */
    imageRedactTemplate?: pulumi.Input<string>;
    /**
     * Structured de-identify template. If this template is specified, it will serve as the de-identify template for structured content such as delimited files and tables. If this template is not set but the `deidentify_template` is set, then `deidentify_template` will also apply to the structured content. If neither template is set, a default `ReplaceWithInfoTypeConfig` will be used to de-identify structured content.
     */
    structuredDeidentifyTemplate?: pulumi.Input<string>;
}

/**
 * Config for storing transformation details.
 */
export interface GooglePrivacyDlpV2TransformationDetailsStorageConfigArgs {
    /**
     * The BigQuery table in which to store the output. This may be an existing table or in a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_transformation_details_yyyy_mm_dd_[dlp_job_id]. Pacific time zone will be used for generating the date details.
     */
    table?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2BigQueryTableArgs>;
}

/**
 * How to handle transformation errors during de-identification. A transformation error occurs when the requested transformation is incompatible with the data. For example, trying to de-identify an IP address using a `DateShift` transformation would result in a transformation error, since date info cannot be extracted from an IP address. Information about any incompatible transformations, and how they were handled, is returned in the response as part of the `TransformationOverviews`.
 */
export interface GooglePrivacyDlpV2TransformationErrorHandlingArgs {
    /**
     * Ignore errors
     */
    leaveUntransformed?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2LeaveUntransformedArgs>;
    /**
     * Throw an error
     */
    throwError?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ThrowErrorArgs>;
}

/**
 * Use this to have a random data crypto key generated. It will be discarded after the request finishes.
 */
export interface GooglePrivacyDlpV2TransientCryptoKeyArgs {
    /**
     * Name of the key. This is an arbitrary string used to differentiate different keys. A unique key is generated per name: two separate `TransientCryptoKey` protos share the same generated key if their names are the same. When the data crypto key is generated, this name is not used in any way (repeating the api call will result in a different key being generated).
     */
    name: pulumi.Input<string>;
}

/**
 * What event needs to occur for a new job to be started.
 */
export interface GooglePrivacyDlpV2TriggerArgs {
    /**
     * For use with hybrid jobs. Jobs must be manually created and finished.
     */
    manual?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ManualArgs>;
    /**
     * Create a job on a repeating basis based on the elapse of time.
     */
    schedule?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2ScheduleArgs>;
}

/**
 * Using raw keys is prone to security risks due to accidentally leaking the key. Choose another type of key if possible.
 */
export interface GooglePrivacyDlpV2UnwrappedCryptoKeyArgs {
    /**
     * A 128/192/256 bit key.
     */
    key: pulumi.Input<string>;
}

/**
 * Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
 */
export interface GooglePrivacyDlpV2ValueArgs {
    /**
     * boolean
     */
    booleanValue?: pulumi.Input<boolean>;
    /**
     * date
     */
    dateValue?: pulumi.Input<inputs.dlp.v2.GoogleTypeDateArgs>;
    /**
     * day of week
     */
    dayOfWeekValue?: pulumi.Input<enums.dlp.v2.GooglePrivacyDlpV2ValueDayOfWeekValue>;
    /**
     * float
     */
    floatValue?: pulumi.Input<number>;
    /**
     * integer
     */
    integerValue?: pulumi.Input<string>;
    /**
     * string
     */
    stringValue?: pulumi.Input<string>;
    /**
     * time of day
     */
    timeValue?: pulumi.Input<inputs.dlp.v2.GoogleTypeTimeOfDayArgs>;
    /**
     * timestamp
     */
    timestampValue?: pulumi.Input<string>;
}

/**
 * Message defining a list of words or phrases to search for in the data.
 */
export interface GooglePrivacyDlpV2WordListArgs {
    /**
     * Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]
     */
    words?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
export interface GoogleProtobufEmptyArgs {
}

/**
 * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
export interface GoogleTypeDateArgs {
    /**
     * Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
     */
    day?: pulumi.Input<number>;
    /**
     * Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     */
    month?: pulumi.Input<number>;
    /**
     * Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     */
    year?: pulumi.Input<number>;
}

/**
 * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
 */
export interface GoogleTypeTimeOfDayArgs {
    /**
     * Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
     */
    hours?: pulumi.Input<number>;
    /**
     * Minutes of hour of day. Must be from 0 to 59.
     */
    minutes?: pulumi.Input<number>;
    /**
     * Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
     */
    nanos?: pulumi.Input<number>;
    /**
     * Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
     */
    seconds?: pulumi.Input<number>;
}

