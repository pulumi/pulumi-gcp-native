// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Error describes why the execution was abnormally terminated.
 */
export interface ErrorResponse {
    /**
     * Human-readable stack trace string.
     */
    context: string;
    /**
     * Error message and data returned represented as a JSON string.
     */
    payload: string;
    /**
     * Stack trace with detailed information of where error was generated.
     */
    stackTrace: outputs.workflowexecutions.v1beta.StackTraceResponse;
}

/**
 * Position contains source position information about the stack trace element such as line number, column number and length of the code block in bytes.
 */
export interface PositionResponse {
    /**
     * The source code column position (of the line) the current instruction was generated from.
     */
    column: string;
    /**
     * The number of bytes of source code making up this stack trace element.
     */
    length: string;
    /**
     * The source code line number the current instruction was generated from.
     */
    line: string;
}

/**
 * A single stack element (frame) where an error occurred.
 */
export interface StackTraceElementResponse {
    /**
     * The source position information of the stack trace element.
     */
    position: outputs.workflowexecutions.v1beta.PositionResponse;
    /**
     * The routine where the error occurred.
     */
    routine: string;
    /**
     * The step the error occurred at.
     */
    step: string;
}

/**
 * A collection of stack elements (frames) where an error occurred.
 */
export interface StackTraceResponse {
    /**
     * An array of stack elements.
     */
    elements: outputs.workflowexecutions.v1beta.StackTraceElementResponse[];
}

/**
 * Represents the current status of this execution.
 */
export interface StatusResponse {
    /**
     * A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.
     */
    currentSteps: outputs.workflowexecutions.v1beta.StepResponse[];
}

/**
 * Represents a step of the workflow this execution is running.
 */
export interface StepResponse {
    /**
     * Name of a routine within the workflow.
     */
    routine: string;
    /**
     * Name of a step within the routine.
     */
    step: string;
}

