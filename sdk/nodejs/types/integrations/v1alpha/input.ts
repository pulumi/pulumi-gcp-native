// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Attributes are additional options that can be associated with each event property. For more information, see go/integration-platform/event_bus/attributes_registry.md. Next available: 8
 */
export interface EnterpriseCrmEventbusProtoAttributesArgs {
    /**
     * Things like URL, Email, Currency, Timestamp (rather than string, int64...)
     */
    dataType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoAttributesDataType>;
    /**
     * Used to define defaults.
     */
    defaultValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoValueTypeArgs>;
    /**
     * Required for event execution. The validation will be done by the event bus when the event is triggered.
     */
    isRequired?: pulumi.Input<boolean>;
    /**
     * Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable.
     *
     * @deprecated Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable.
     */
    isSearchable?: pulumi.Input<boolean>;
    /**
     * See go/integration-platform/analytics/logging_task.md for details.
     */
    logSettings?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoLogSettingsArgs>;
    searchable?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoAttributesSearchable>;
    /**
     * List of tasks that can view this property, if empty then all.
     */
    taskVisibility?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * List of error enums for alerts.
 */
export interface EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListArgs {
    enumStrings?: pulumi.Input<pulumi.Input<string>[]>;
    filterType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListFilterType>;
}

/**
 * The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig. See go/eventbus-alert-config-examples
 */
export interface EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValueArgs {
    absolute?: pulumi.Input<string>;
    percentage?: pulumi.Input<number>;
}

export interface EnterpriseCrmEventbusProtoBooleanParameterArrayArgs {
    booleanValues?: pulumi.Input<pulumi.Input<boolean>[]>;
}

/**
 * Cloud Scheduler Trigger configuration
 */
export interface EnterpriseCrmEventbusProtoCloudSchedulerConfigArgs {
    /**
     * The cron tab of cloud scheduler trigger.
     */
    cronTab: pulumi.Input<string>;
    /**
     * Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
     */
    errorMessage?: pulumi.Input<string>;
    /**
     * The location where associated cloud scheduler job will be created
     */
    location: pulumi.Input<string>;
    /**
     * Service account used by Cloud Scheduler to trigger the integration at scheduled time
     */
    serviceAccountEmail: pulumi.Input<string>;
}

/**
 * This message recursively combines constituent conditions using logical AND.
 */
export interface EnterpriseCrmEventbusProtoCombinedConditionArgs {
    /**
     * A set of individual constituent conditions.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoConditionArgs>[]>;
}

/**
 * Condition that uses `operator` to evaluate the key against the value.
 */
export interface EnterpriseCrmEventbusProtoConditionArgs {
    /**
     * Key that's evaluated against the `value`. Please note the data type of the runtime value associated with the key should match the data type of `value`, else an IllegalArgumentException is thrown.
     */
    eventPropertyKey?: pulumi.Input<string>;
    /**
     * Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
     */
    operator?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoConditionOperator>;
    /**
     * Value that's checked for the key.
     */
    value?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoValueTypeArgs>;
}

/**
 * Represents two-dimensional positions.
 */
export interface EnterpriseCrmEventbusProtoCoordinateArgs {
    x?: pulumi.Input<number>;
    y?: pulumi.Input<number>;
}

export interface EnterpriseCrmEventbusProtoDoubleArrayArgs {
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EnterpriseCrmEventbusProtoDoubleParameterArrayArgs {
    doubleValues?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * LINT.IfChange This message is used for storing key value pair properties for each Event / Task in the EventBus. Please see go/cloud-crm-eng/platform/event_bus.md for more details.
 */
export interface EnterpriseCrmEventbusProtoEventBusPropertiesArgs {
    /**
     * An unordered list of property entries.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoPropertyEntryArgs>[]>;
}

/**
 * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4
 */
export interface EnterpriseCrmEventbusProtoEventParametersArgs {
    /**
     * Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParameterEntryArgs>[]>;
}

/**
 * Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
 */
export interface EnterpriseCrmEventbusProtoFailurePolicyArgs {
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the initial interval for backoff.
     */
    intervalInSeconds?: pulumi.Input<string>;
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
     */
    maxNumRetries?: pulumi.Input<number>;
    /**
     * Defines what happens to the task upon failure.
     */
    retryStrategy?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoFailurePolicyRetryStrategy>;
}

export interface EnterpriseCrmEventbusProtoIntArrayArgs {
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EnterpriseCrmEventbusProtoIntParameterArrayArgs {
    intValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information. See go/integration-platform/analytics/logging_task.md for details.
 */
export interface EnterpriseCrmEventbusProtoLogSettingsArgs {
    /**
     * The name of corresponding logging field of the event property. If omitted, assumes the same name as the event property key.
     */
    logFieldName?: pulumi.Input<string>;
    /**
     * Contains the scrubbing options, such as whether to scrub, obfuscate, etc.
     */
    sanitizeOptions?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmLoggingGwsSanitizeOptionsArgs>;
    seedPeriod?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoLogSettingsSeedPeriod>;
    seedScope?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoLogSettingsSeedScope>;
    /**
     * Contains the field limits for shortening, such as max string length and max array length.
     */
    shorteningLimits?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmLoggingGwsFieldLimitsArgs>;
}

/**
 * The task that is next in line to be executed, if the condition specified evaluated to true.
 */
export interface EnterpriseCrmEventbusProtoNextTaskArgs {
    /**
     * Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`
     *
     * @deprecated Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`
     */
    combinedConditions?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoCombinedConditionArgs>[]>;
    /**
     * Standard filter expression for this task to become an eligible next task.
     */
    condition?: pulumi.Input<string>;
    /**
     * User-provided description intended to give more business context about the next task edge or condition.
     */
    description?: pulumi.Input<string>;
    /**
     * User-provided label that is attached to this edge in the UI.
     */
    label?: pulumi.Input<string>;
    /**
     * ID of the next task.
     */
    taskConfigId?: pulumi.Input<string>;
    /**
     * Task number of the next task.
     */
    taskNumber?: pulumi.Input<string>;
}

/**
 * The teardown task that is next in line to be executed. We support only sequential execution of teardown tasks (i.e. no branching).
 */
export interface EnterpriseCrmEventbusProtoNextTeardownTaskArgs {
    /**
     * Name of the next teardown task.
     */
    name: pulumi.Input<string>;
}

/**
 * Represents a node identifier (type + id). Next highest id: 3
 */
export interface EnterpriseCrmEventbusProtoNodeIdentifierArgs {
    /**
     * Configuration of the edge.
     */
    elementIdentifier?: pulumi.Input<string>;
    /**
     * Destination node where the edge ends. It can only be a task config.
     */
    elementType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoNodeIdentifierElementType>;
}

export interface EnterpriseCrmEventbusProtoParamSpecEntryConfigArgs {
    /**
     * A short phrase to describe what this parameter contains.
     */
    descriptivePhrase?: pulumi.Input<string>;
    /**
     * Detailed help text for this parameter containing information not provided elsewhere. For example, instructions on how to migrate from a deprecated parameter.
     */
    helpText?: pulumi.Input<string>;
    /**
     * Whether the default value is hidden in the UI.
     */
    hideDefaultValue?: pulumi.Input<boolean>;
    inputDisplayOption?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOption>;
    /**
     * Whether this field is hidden in the UI.
     */
    isHidden?: pulumi.Input<boolean>;
    /**
     * A user-friendly label for the parameter.
     */
    label?: pulumi.Input<string>;
    parameterNameOption?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOption>;
    /**
     * A user-friendly label for subSection under which the parameter will be displayed.
     */
    subSectionLabel?: pulumi.Input<string>;
    /**
     * Placeholder text which will appear in the UI input form for this parameter.
     */
    uiPlaceholderText?: pulumi.Input<string>;
}

export interface EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinitionArgs {
    /**
     * The fully-qualified proto name. This message, for example, would be "enterprise.crm.eventbus.proto.ParamSpecEntry.ProtoDefinition".
     */
    fullName?: pulumi.Input<string>;
    /**
     * Path to the proto file that contains the message type's definition.
     */
    path?: pulumi.Input<string>;
}

export interface EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleArgs {
    doubleRange?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRangeArgs>;
    intRange?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRangeArgs>;
    stringRegex?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegexArgs>;
}

/**
 * Range used to validate doubles and floats.
 */
export interface EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRangeArgs {
    /**
     * The inclusive maximum of the acceptable range.
     */
    max?: pulumi.Input<number>;
    /**
     * The inclusive minimum of the acceptable range.
     */
    min?: pulumi.Input<number>;
}

/**
 * Range used to validate longs and ints.
 */
export interface EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRangeArgs {
    /**
     * The inclusive maximum of the acceptable range.
     */
    max?: pulumi.Input<string>;
    /**
     * The inclusive minimum of the acceptable range.
     */
    min?: pulumi.Input<string>;
}

/**
 * Rule used to validate strings.
 */
export interface EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegexArgs {
    /**
     * Whether the regex matcher is applied exclusively (if true, matching values will be rejected).
     */
    exclusive?: pulumi.Input<boolean>;
    /**
     * The regex applied to the input value(s).
     */
    regex?: pulumi.Input<string>;
}

/**
 * Key-value pair of EventBus parameters.
 */
export interface EnterpriseCrmEventbusProtoParameterEntryArgs {
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
     */
    key?: pulumi.Input<string>;
    /**
     * Values for the defined keys. Each value can either be string, int, double or any proto message.
     */
    value?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParameterValueTypeArgs>;
}

/**
 * LINT.IfChange To support various types of parameter values. Next available id: 14
 */
export interface EnterpriseCrmEventbusProtoParameterValueTypeArgs {
    booleanArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBooleanParameterArrayArgs>;
    booleanValue?: pulumi.Input<boolean>;
    doubleArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoDoubleParameterArrayArgs>;
    doubleValue?: pulumi.Input<number>;
    intArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoIntParameterArrayArgs>;
    intValue?: pulumi.Input<string>;
    protoArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoProtoParameterArrayArgs>;
    protoValue?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    serializedObjectValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoSerializedObjectParameterArgs>;
    stringArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoStringParameterArrayArgs>;
    stringValue?: pulumi.Input<string>;
}

/**
 * Key-value pair of EventBus property.
 */
export interface EnterpriseCrmEventbusProtoPropertyEntryArgs {
    /**
     * Key is used to retrieve the corresponding property value. This should be unique for a given fired event. The Tasks should be aware of the keys used while firing the events for them to be able to retrieve the values.
     */
    key?: pulumi.Input<string>;
    /**
     * Values for the defined keys. Each value can either be string, int, double or any proto message.
     */
    value?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoValueTypeArgs>;
}

export interface EnterpriseCrmEventbusProtoProtoParameterArrayArgs {
    protoValues?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
}

export interface EnterpriseCrmEventbusProtoSerializedObjectParameterArgs {
    objectValue?: pulumi.Input<string>;
}

export interface EnterpriseCrmEventbusProtoStringArrayArgs {
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EnterpriseCrmEventbusProtoStringParameterArrayArgs {
    stringValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Policy that dictates the behavior for the task after it completes successfully.
 */
export interface EnterpriseCrmEventbusProtoSuccessPolicyArgs {
    /**
     * State to which the execution snapshot status will be set if the task succeeds.
     */
    finalState?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoSuccessPolicyFinalState>;
}

/**
 * Message to be used to configure alerting in the {@code TaskConfig} protos for tasks in an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
 */
export interface EnterpriseCrmEventbusProtoTaskAlertConfigArgs {
    /**
     * The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week).
     */
    aggregationPeriod?: pulumi.Input<string>;
    /**
     * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
     */
    alertDisabled?: pulumi.Input<boolean>;
    /**
     * A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique in within the scope of the containing workflow.
     */
    alertName?: pulumi.Input<string>;
    /**
     * Client associated with this alert configuration. Must be a client enabled in one of the containing workflow's triggers.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Should be specified only for TASK_AVERAGE_DURATION and TASK_PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
     */
    durationThresholdMs?: pulumi.Input<string>;
    errorEnumList?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListArgs>;
    metricType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskAlertConfigMetricType>;
    /**
     * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
     */
    numAggregationPeriods?: pulumi.Input<number>;
    /**
     * Only count final task attempts, not retries.
     */
    onlyFinalAttempt?: pulumi.Input<boolean>;
    /**
     * Link to a playbook for resolving the issue that triggered this alert.
     */
    playbookUrl?: pulumi.Input<string>;
    /**
     * The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
     */
    thresholdType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskAlertConfigThresholdType>;
    /**
     * The metric value, above or below which the alert should be triggered.
     */
    thresholdValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValueArgs>;
    warningEnumList?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListArgs>;
}

/**
 * TaskMetadata are attributes that are associated to every common Task we have. Next available: 26
 */
export interface EnterpriseCrmEventbusProtoTaskMetadataArgs {
    /**
     * The new task name to replace the current task if it is deprecated. Otherwise, it is the same as the current task name.
     */
    activeTaskName?: pulumi.Input<string>;
    admins?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataAdminArgs>[]>;
    category?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataCategory>;
    /**
     * The Code Search link to the Task Java file.
     */
    codeSearchLink?: pulumi.Input<string>;
    /**
     * Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
     */
    defaultJsonValidationOption?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataDefaultJsonValidationOption>;
    /**
     * Contains the initial configuration of the task with default values set. For now, The string should be compatible to an ASCII-proto format.
     */
    defaultSpec?: pulumi.Input<string>;
    /**
     * In a few sentences, describe the purpose and usage of the task.
     */
    description?: pulumi.Input<string>;
    /**
     * The string name to show on the task list on the Workflow editor screen. This should be a very short, one to two words name for the task. (e.g. "Send Mail")
     */
    descriptiveName?: pulumi.Input<string>;
    /**
     * Snippet of markdown documentation to embed in the RHP for this task.
     */
    docMarkdown?: pulumi.Input<string>;
    externalCategory?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataExternalCategory>;
    /**
     * Sequence with which the task in specific category to be displayed in task discovery panel for external users.
     */
    externalCategorySequence?: pulumi.Input<number>;
    /**
     * External-facing documention embedded in the RHP for this task.
     */
    externalDocHtml?: pulumi.Input<string>;
    /**
     * Doc link for external-facing documentation (separate from g3doc).
     */
    externalDocLink?: pulumi.Input<string>;
    /**
     * DEPRECATED: Use external_doc_html.
     *
     * @deprecated DEPRECATED: Use external_doc_html.
     */
    externalDocMarkdown?: pulumi.Input<string>;
    /**
     * URL to the associated G3 Doc for the task if available
     */
    g3DocLink?: pulumi.Input<string>;
    /**
     * URL to gstatic image icon for this task. This icon shows up on the task list panel along with the task name in the Workflow Editor screen. Use the 24p, 2x, gray color icon image format. See go/icons.
     */
    iconLink?: pulumi.Input<string>;
    /**
     * The deprecation status of the current task. Default value is false;
     */
    isDeprecated?: pulumi.Input<boolean>;
    /**
     * The actual class name or the annotated name of the task. Task Author should initialize this field with value from the getName() method of the Task class.
     */
    name?: pulumi.Input<string>;
    /**
     * External-facing documention for standalone IP in pantheon embedded in the RHP for this task. Non null only if different from external_doc_html
     */
    standaloneExternalDocHtml?: pulumi.Input<string>;
    /**
     * Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
     */
    status?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataStatus>;
    system?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataSystem>;
    /**
     * A set of tags that pertain to a particular task. This can be used to improve the searchability of tasks with several names ("REST Caller" vs. "Call REST Endpoint") or to help users find tasks based on related words.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Admins are owners of a Task, and have all permissions on a particular task identified by the task name. By default, Eventbus periodically scans all task metadata and syncs (adds) any new admins defined here to Zanzibar.
 */
export interface EnterpriseCrmEventbusProtoTaskMetadataAdminArgs {
    googleGroupEmail?: pulumi.Input<string>;
    userEmail?: pulumi.Input<string>;
}

/**
 * Task authors would use this type to configure the UI for a particular task by specifying what UI config modules should be included to compose the UI. Learn more about config module framework: go/integration-platform-config-module-framework
 */
export interface EnterpriseCrmEventbusProtoTaskUiConfigArgs {
    /**
     * Configurations of included config modules.
     */
    taskUiModuleConfigs?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskUiModuleConfigArgs>[]>;
}

/**
 * Task author would use this type to configure a config module.
 */
export interface EnterpriseCrmEventbusProtoTaskUiModuleConfigArgs {
    /**
     * ID of the config module.
     */
    moduleId?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskUiModuleConfigModuleId>;
}

export interface EnterpriseCrmEventbusProtoTeardownArgs {
    /**
     * Required.
     */
    teardownTaskConfigs: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTeardownTaskConfigArgs>[]>;
}

export interface EnterpriseCrmEventbusProtoTeardownTaskConfigArgs {
    /**
     * The creator's email address.
     */
    creatorEmail?: pulumi.Input<string>;
    /**
     * Unique identifier of the teardown task within this Config. We use this field as the identifier to find next teardown tasks.
     */
    name: pulumi.Input<string>;
    nextTeardownTask?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoNextTeardownTaskArgs>;
    /**
     * The parameters the user can pass to this task.
     */
    parameters?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoEventParametersArgs>;
    properties?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoEventBusPropertiesArgs>;
    /**
     * Implementation class name.
     */
    teardownTaskImplementationClassName: pulumi.Input<string>;
}

export interface EnterpriseCrmEventbusProtoTriggerCriteriaArgs {
    /**
     * Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.
     */
    condition: pulumi.Input<string>;
    /**
     * Optional. To be used in TaskConfig for the implementation class.
     */
    parameters?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoEventParametersArgs>;
    /**
     * Optional. Implementation class name. The class should implement the “TypedTask” interface.
     */
    triggerCriteriaTaskImplementationClassName?: pulumi.Input<string>;
}

/**
 * Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
 */
export interface EnterpriseCrmEventbusProtoValueTypeArgs {
    booleanValue?: pulumi.Input<boolean>;
    doubleArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoDoubleArrayArgs>;
    doubleValue?: pulumi.Input<number>;
    intArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoIntArrayArgs>;
    intValue?: pulumi.Input<string>;
    protoValue?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    stringArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoStringArrayArgs>;
    stringValue?: pulumi.Input<string>;
}

/**
 * Message to be used to configure custom alerting in the {@code EventConfig} protos for an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
 */
export interface EnterpriseCrmEventbusProtoWorkflowAlertConfigArgs {
    /**
     * For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
     */
    aggregationPeriod?: pulumi.Input<string>;
    /**
     * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
     */
    alertDisabled?: pulumi.Input<boolean>;
    /**
     * A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
     */
    alertName?: pulumi.Input<string>;
    /**
     * Client associated with this alert configuration.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
     */
    durationThresholdMs?: pulumi.Input<string>;
    errorEnumList?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListArgs>;
    metricType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricType>;
    /**
     * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
     */
    numAggregationPeriods?: pulumi.Input<number>;
    /**
     * For either events or tasks, depending on the type of alert, count only final attempts, not retries.
     */
    onlyFinalAttempt?: pulumi.Input<boolean>;
    /**
     * Link to a playbook for resolving the issue that triggered this alert.
     */
    playbookUrl?: pulumi.Input<string>;
    /**
     * The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
     */
    thresholdType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdType>;
    /**
     * The metric value, above or below which the alert should be triggered. See go/eventbus-alert-config-examples.
     */
    thresholdValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValueArgs>;
    warningEnumList?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumListArgs>;
}

/**
 * Stats for the requested dimensions: QPS, duration, and error/warning rate
 */
export interface EnterpriseCrmEventbusStatsArgs {
    /**
     * Dimensions that these stats have been aggregated on.
     */
    dimensions?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusStatsDimensionsArgs>;
    /**
     * Average duration in seconds.
     */
    durationInSeconds?: pulumi.Input<number>;
    /**
     * Average error rate.
     */
    errorRate?: pulumi.Input<number>;
    /**
     * Queries per second.
     */
    qps?: pulumi.Input<number>;
    /**
     * Average warning rate.
     */
    warningRate?: pulumi.Input<number>;
}

export interface EnterpriseCrmEventbusStatsDimensionsArgs {
    clientId?: pulumi.Input<string>;
    /**
     * Whether to include or exclude the enums matching the regex.
     */
    enumFilterType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusStatsDimensionsEnumFilterType>;
    errorEnumString?: pulumi.Input<string>;
    retryAttempt?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmEventbusStatsDimensionsRetryAttempt>;
    taskName?: pulumi.Input<string>;
    taskNumber?: pulumi.Input<string>;
    /**
     * Stats have been or will be aggregated on set fields for any semantically-meaningful combination.
     */
    triggerId?: pulumi.Input<string>;
    warningEnumString?: pulumi.Input<string>;
    workflowId?: pulumi.Input<string>;
    workflowName?: pulumi.Input<string>;
}

export interface EnterpriseCrmFrontendsEventbusProtoBooleanParameterArrayArgs {
    booleanValues?: pulumi.Input<pulumi.Input<boolean>[]>;
}

export interface EnterpriseCrmFrontendsEventbusProtoDoubleParameterArrayArgs {
    doubleValues?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4
 */
export interface EnterpriseCrmFrontendsEventbusProtoEventParametersArgs {
    /**
     * Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParameterEntryArgs>[]>;
}

export interface EnterpriseCrmFrontendsEventbusProtoIntParameterArrayArgs {
    intValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Key-value pair of EventBus task parameters. Next id: 13
 */
export interface EnterpriseCrmFrontendsEventbusProtoParamSpecEntryArgs {
    /**
     * The FQCN of the Java object this represents. A string, for example, would be "java.lang.String". If this is "java.lang.Object", the parameter can be of any type.
     */
    className?: pulumi.Input<string>;
    /**
     * If it is a collection of objects, this would be the FCQN of every individual element in the collection. If this is "java.lang.Object", the parameter is a collection of any type.
     */
    collectionElementClassName?: pulumi.Input<string>;
    /**
     * Optional fields, such as help text and other useful info.
     */
    config?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryConfigArgs>;
    /**
     * The data type of the parameter.
     */
    dataType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataType>;
    /**
     * Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
     */
    defaultValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParameterValueTypeArgs>;
    /**
     * If set, this entry is deprecated, so further use of this parameter should be prohibited.
     */
    isDeprecated?: pulumi.Input<boolean>;
    isOutput?: pulumi.Input<boolean>;
    /**
     * If the data_type is JSON_VALUE, then this will define its schema.
     */
    jsonSchema?: pulumi.Input<string>;
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given task. These parameters must be predefined in the workflow definition.
     */
    key?: pulumi.Input<string>;
    /**
     * Populated if this represents a proto or proto array.
     */
    protoDef?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinitionArgs>;
    /**
     * If set, the user must provide an input value for this parameter.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Rule used to validate inputs (individual values and collection elements) for this parameter.
     */
    validationRule?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleArgs>;
}

export interface EnterpriseCrmFrontendsEventbusProtoParamSpecsMessageArgs {
    parameters?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParamSpecEntryArgs>[]>;
}

/**
 * Key-value pair of EventBus parameters.
 */
export interface EnterpriseCrmFrontendsEventbusProtoParameterEntryArgs {
    /**
     * Explicitly getting the type of the parameter.
     */
    dataType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParameterEntryDataType>;
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
     */
    key?: pulumi.Input<string>;
    /**
     * Values for the defined keys. Each value can either be string, int, double or any proto message.
     */
    value?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParameterValueTypeArgs>;
}

/**
 * To support various types of parameter values. Next available id: 14
 */
export interface EnterpriseCrmFrontendsEventbusProtoParameterValueTypeArgs {
    booleanArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoBooleanParameterArrayArgs>;
    booleanValue?: pulumi.Input<boolean>;
    doubleArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoDoubleParameterArrayArgs>;
    doubleValue?: pulumi.Input<number>;
    intArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoIntParameterArrayArgs>;
    intValue?: pulumi.Input<string>;
    jsonValue?: pulumi.Input<string>;
    protoArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoProtoParameterArrayArgs>;
    protoValue?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    serializedObjectValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameterArgs>;
    stringArray?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoStringParameterArrayArgs>;
    stringValue?: pulumi.Input<string>;
}

export interface EnterpriseCrmFrontendsEventbusProtoProtoParameterArrayArgs {
    protoValues?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
}

/**
 * Next available id: 4
 */
export interface EnterpriseCrmFrontendsEventbusProtoRollbackStrategyArgs {
    /**
     * Optional. The customized parameters the user can pass to this task.
     */
    parameters?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoEventParametersArgs>;
    /**
     * This is the name of the task that needs to be executed upon rollback of this task.
     */
    rollbackTaskImplementationClassName: pulumi.Input<string>;
    /**
     * These are the tasks numbers of the tasks whose `rollback_strategy.rollback_task_implementation_class_name` needs to be executed upon failure of this task.
     */
    taskNumbersToRollback: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameterArgs {
    objectValue?: pulumi.Input<string>;
}

export interface EnterpriseCrmFrontendsEventbusProtoStringParameterArrayArgs {
    stringValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task. Next available id: 27
 */
export interface EnterpriseCrmFrontendsEventbusProtoTaskConfigArgs {
    /**
     * Alert configurations on error rate, warning rate, number of runs, durations, etc.
     */
    alertConfigs?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskAlertConfigArgs>[]>;
    /**
     * Auto-generated.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The creator's email address. Auto-generated from the user's email.
     */
    creatorEmail?: pulumi.Input<string>;
    /**
     * User-provided description intended to give more business context about the task.
     */
    description?: pulumi.Input<string>;
    /**
     * If this config contains a TypedTask, allow validation to succeed if an input is read from the output of another TypedTask whose output type is declared as a superclass of the requested input type. For instance, if the previous task declares an output of type Message, any task with this flag enabled will pass validation when attempting to read any proto Message type from the resultant Event parameter.
     */
    disableStrictTypeValidation?: pulumi.Input<boolean>;
    /**
     * Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for asynchronous calls to Eventbus alone (Post To Queue, Schedule etc.).
     */
    failurePolicy?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoFailurePolicyArgs>;
    /**
     * The number of edges leading into this TaskConfig.
     */
    incomingEdgeCount?: pulumi.Input<number>;
    /**
     * If set, overrides the option configured in the Task implementation class.
     */
    jsonValidationOption?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskConfigJsonValidationOption>;
    /**
     * User-provided label that is attached to this TaskConfig in the UI.
     */
    label?: pulumi.Input<string>;
    /**
     * Auto-generated.
     */
    lastModifiedTime?: pulumi.Input<string>;
    /**
     * The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
     */
    nextTasks?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoNextTaskArgs>[]>;
    /**
     * The policy dictating the execution of the next set of tasks for the current task.
     */
    nextTasksExecutionPolicy?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskConfigNextTasksExecutionPolicy>;
    /**
     * The customized parameters the user can pass to this task.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Informs the front-end application where to draw this task config on the UI.
     */
    position?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoCoordinateArgs>;
    /**
     * Optional. Standard filter expression evaluated before execution. Independent of other conditions and tasks. Can be used to enable rollout. e.g. "rollout(5)" will only allow 5% of incoming traffic to task.
     */
    precondition?: pulumi.Input<string>;
    /**
     * Optional. User-provided label that is attached to precondition in the UI.
     */
    preconditionLabel?: pulumi.Input<string>;
    /**
     * Optional. Contains information about what needs to be done upon failure (either a permanent error or after it has been retried too many times).
     */
    rollbackStrategy?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoRollbackStrategyArgs>;
    /**
     * Determines what action to take upon successful task completion.
     */
    successPolicy?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoSuccessPolicyArgs>;
    /**
     * Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for synchronous calls to Eventbus alone (Post).
     */
    synchronousCallFailurePolicy?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoFailurePolicyArgs>;
    /**
     * Copy of the task entity that this task config is an instance of.
     */
    taskEntity?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskEntityArgs>;
    /**
     * The policy dictating the execution strategy of this task.
     */
    taskExecutionStrategy?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskExecutionStrategy>;
    /**
     * The name for the task.
     */
    taskName?: pulumi.Input<string>;
    /**
     * REQUIRED: the identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_number`).
     */
    taskNumber?: pulumi.Input<string>;
    /**
     * A string template that allows user to configure task parameters (with either literal default values or tokens which will be resolved at execution time) for the task. It will eventually replace the old "parameters" field. Please refer to go/eventbus-task-spec-example for detailed usage example.
     */
    taskSpec?: pulumi.Input<string>;
    /**
     * Used to define task-template name if task is of type task-template
     */
    taskTemplateName?: pulumi.Input<string>;
    /**
     * Defines the type of the task
     */
    taskType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskConfigTaskType>;
}

/**
 * Contains a task's metadata and associated information. Next available id: 7
 */
export interface EnterpriseCrmFrontendsEventbusProtoTaskEntityArgs {
    /**
     * True if the task has conflict with vpcsc
     */
    disabledForVpcSc?: pulumi.Input<boolean>;
    /**
     * Metadata inclueds the task name, author and so on.
     */
    metadata?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskMetadataArgs>;
    /**
     * Declarations for inputs/outputs for a TypedTask. This is also associated with the METADATA mask.
     */
    paramSpecs?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParamSpecsMessageArgs>;
    /**
     * Deprecated - statistics from the Monarch query.
     *
     * @deprecated Deprecated - statistics from the Monarch query.
     */
    stats?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusStatsArgs>;
    /**
     * Defines the type of the task
     */
    taskType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskType>;
    /**
     * UI configuration for this task Also associated with the METADATA mask.
     */
    uiConfig?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTaskUiConfigArgs>;
}

/**
 * Configuration detail of a trigger. Next available id: 17
 */
export interface EnterpriseCrmFrontendsEventbusProtoTriggerConfigArgs {
    /**
     * An alert threshold configuration for the [trigger + client + workflow] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + workflow] when published.
     */
    alertConfig?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoWorkflowAlertConfigArgs>[]>;
    cloudSchedulerConfig?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoCloudSchedulerConfigArgs>;
    /**
     * User-provided description intended to give more business context about the task.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of client ids which are enabled to execute the workflow using this trigger. In other words, these clients have the workflow execution privledges for this trigger. For API trigger, the client id in the incoming request is validated against the list of enabled clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled client.
     */
    enabledClients: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user created label for a particular trigger.
     */
    label?: pulumi.Input<string>;
    /**
     * Dictates how next tasks will be executed.
     */
    nextTasksExecutionPolicy?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicy>;
    /**
     * Optional. If set to true, any upcoming requests for this trigger config will be paused and the executions will be resumed later when the flag is reset. The workflow to which this trigger config belongs has to be in ACTIVE status for the executions to be paused or resumed.
     */
    pauseWorkflowExecutions?: pulumi.Input<boolean>;
    /**
     * Optional. Informs the front-end application where to draw this trigger config on the UI.
     */
    position?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoCoordinateArgs>;
    /**
     * Configurable properties of the trigger, not to be confused with workflow parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub triggers.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set of tasks numbers from where the workflow execution is started by this trigger. If this is empty, then workflow is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution graph).
     */
    startTasks?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoNextTaskArgs>[]>;
    /**
     * Optional. When set, Eventbus will run the task specified in the trigger_criteria and validate the result using the trigger_criteria.condition, and only execute the workflow when result is true.
     */
    triggerCriteria?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTriggerCriteriaArgs>;
    /**
     * The backend trigger ID.
     */
    triggerId?: pulumi.Input<string>;
    /**
     * A number to uniquely identify each trigger config within the workflow on UI.
     */
    triggerNumber: pulumi.Input<string>;
    triggerType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerType>;
}

export interface EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryArgs {
    /**
     * Metadata information about the parameters.
     */
    attributes?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoAttributesArgs>;
    /**
     * Child parameters nested within this parameter. This field only applies to protobuf parameters
     */
    children?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryArgs>[]>;
    /**
     * The data type of the parameter.
     */
    dataType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataType>;
    /**
     * Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
     */
    defaultValue?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoParameterValueTypeArgs>;
    /**
     * Specifies the input/output type for the parameter.
     */
    inOutType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutType>;
    /**
     * Whether this parameter is a transient parameter. go/ip-transient-parameters
     */
    isTransient?: pulumi.Input<boolean>;
    /**
     * This schema will be used to validate runtime JSON-typed values of this parameter.
     */
    jsonSchema?: pulumi.Input<string>;
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
     */
    key?: pulumi.Input<string>;
    /**
     * The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
     */
    producedBy?: pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmEventbusProtoNodeIdentifierArgs>;
    producer?: pulumi.Input<string>;
    /**
     * The name of the protobuf type if the parameter has a protobuf data type.
     */
    protoDefName?: pulumi.Input<string>;
    /**
     * If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
     */
    protoDefPath?: pulumi.Input<string>;
}

/**
 * LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as "children" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters.
 */
export interface EnterpriseCrmFrontendsEventbusProtoWorkflowParametersArgs {
    /**
     * Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryArgs>[]>;
}

/**
 * Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6
 */
export interface EnterpriseCrmLoggingGwsFieldLimitsArgs {
    logAction?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsFieldLimitsLogAction>;
    /**
     * To which type(s) of logs the limits apply.
     */
    logType?: pulumi.Input<pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsFieldLimitsLogTypeItem>[]>;
    /**
     * maximum array size. If the array exceds this size, the field (list) is truncated.
     */
    maxArraySize?: pulumi.Input<number>;
    /**
     * maximum string length. If the field exceeds this amount the field is shortened.
     */
    maxStringLength?: pulumi.Input<number>;
    shortenerType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsFieldLimitsShortenerType>;
}

/**
 * Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g., scrubbed). The specific sanitizer implementation is determined by run-time configuration and environment options (e.g., prod vs. qa). next_id: 5
 */
export interface EnterpriseCrmLoggingGwsSanitizeOptionsArgs {
    /**
     * If true, the value has already been sanitized and needs no further sanitization. For instance, a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
     */
    isAlreadySanitized?: pulumi.Input<boolean>;
    /**
     * To which type(s) of logs the sanitize options apply.
     */
    logType?: pulumi.Input<pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsSanitizeOptionsLogTypeItem>[]>;
    privacy?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsSanitizeOptionsPrivacy>;
    sanitizeType?: pulumi.Input<enums.integrations.v1alpha.EnterpriseCrmLoggingGwsSanitizeOptionsSanitizeType>;
}

/**
 * The access token represents the authorization of a specific application to access specific parts of a user’s data.
 */
export interface GoogleCloudIntegrationsV1alphaAccessTokenArgs {
    /**
     * The access token encapsulating the security identity of a process or thread.
     */
    accessToken?: pulumi.Input<string>;
    /**
     * The approximate time until the access token retrieved is valid.
     */
    accessTokenExpireTime: pulumi.Input<string>;
    /**
     * If the access token will expire, use the refresh token to obtain another access token.
     */
    refreshToken?: pulumi.Input<string>;
    /**
     * The approximate time until the refresh token retrieved is valid.
     */
    refreshTokenExpireTime?: pulumi.Input<string>;
    /**
     * Only support "bearer" token in v1 as bearer token is the predominant type used with OAuth 2.0.
     */
    tokenType?: pulumi.Input<string>;
}

/**
 * The credentials to authenticate a user agent with a server that is put in HTTP Authorization request header.
 */
export interface GoogleCloudIntegrationsV1alphaAuthTokenArgs {
    /**
     * The token for the auth type.
     */
    token?: pulumi.Input<string>;
    /**
     * Authentication type, e.g. "Basic", "Bearer", etc.
     */
    type?: pulumi.Input<string>;
}

/**
 * This message only contains a field of boolean array.
 */
export interface GoogleCloudIntegrationsV1alphaBooleanParameterArrayArgs {
    /**
     * Boolean array.
     */
    booleanValues?: pulumi.Input<pulumi.Input<boolean>[]>;
}

/**
 * Contains client certificate information
 */
export interface GoogleCloudIntegrationsV1alphaClientCertificateArgs {
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    encryptedPrivateKey?: pulumi.Input<string>;
    /**
     * 'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key.
     */
    passphrase?: pulumi.Input<string>;
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    sslCertificate?: pulumi.Input<string>;
}

/**
 * Cloud Scheduler Trigger configuration
 */
export interface GoogleCloudIntegrationsV1alphaCloudSchedulerConfigArgs {
    /**
     * The cron tab of cloud scheduler trigger.
     */
    cronTab: pulumi.Input<string>;
    /**
     * Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
     */
    errorMessage?: pulumi.Input<string>;
    /**
     * The location where associated cloud scheduler job will be created
     */
    location: pulumi.Input<string>;
    /**
     * Service account used by Cloud Scheduler to trigger the integration at scheduled time
     */
    serviceAccountEmail: pulumi.Input<string>;
}

/**
 * Defines parameters for a single, canonical credential.
 */
export interface GoogleCloudIntegrationsV1alphaCredentialArgs {
    /**
     * Auth token credential
     */
    authToken?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaAuthTokenArgs>;
    /**
     * Credential type associated with auth config.
     */
    credentialType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaCredentialCredentialType>;
    /**
     * JWT credential
     */
    jwt?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaJwtArgs>;
    /**
     * The api_key and oauth2_implicit are not covered in v1 and will be picked up once v1 is implemented. ApiKey api_key = 3; OAuth2 authorization code credential
     */
    oauth2AuthorizationCode?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeArgs>;
    /**
     * OAuth2Implicit oauth2_implicit = 5; OAuth2 client credentials
     */
    oauth2ClientCredentials?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsArgs>;
    /**
     * OAuth2 resource owner credentials
     */
    oauth2ResourceOwnerCredentials?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsArgs>;
    /**
     * Google OIDC ID Token
     */
    oidcToken?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOidcTokenArgs>;
    /**
     * Service account credential
     */
    serviceAccountCredentials?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaServiceAccountCredentialsArgs>;
    /**
     * Username and password credential
     */
    usernameAndPassword?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaUsernameAndPasswordArgs>;
}

/**
 * This message only contains a field of double number array.
 */
export interface GoogleCloudIntegrationsV1alphaDoubleParameterArrayArgs {
    /**
     * Double number array.
     */
    doubleValues?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
 */
export interface GoogleCloudIntegrationsV1alphaFailurePolicyArgs {
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the initial interval in seconds for backoff.
     */
    intervalTime?: pulumi.Input<string>;
    /**
     * Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * Defines what happens to the task upon failure.
     */
    retryStrategy?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategy>;
}

/**
 * This message only contains a field of integer array.
 */
export interface GoogleCloudIntegrationsV1alphaIntParameterArrayArgs {
    /**
     * Integer array.
     */
    intValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
 */
export interface GoogleCloudIntegrationsV1alphaIntegrationAlertConfigArgs {
    /**
     * The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
     */
    aggregationPeriod?: pulumi.Input<string>;
    /**
     * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
     */
    alertThreshold?: pulumi.Input<number>;
    /**
     * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.
     */
    disableAlert?: pulumi.Input<boolean>;
    /**
     * Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
     */
    durationThreshold?: pulumi.Input<string>;
    /**
     * The type of metric.
     */
    metricType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricType>;
    /**
     * For either events or tasks, depending on the type of alert, count only final attempts, not retries.
     */
    onlyFinalAttempt?: pulumi.Input<boolean>;
    /**
     * The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
     */
    thresholdType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdType>;
    /**
     * The metric value, above or below which the alert should be triggered.
     */
    thresholdValue?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValueArgs>;
}

/**
 * The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
 */
export interface GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValueArgs {
    /**
     * Absolute value threshold.
     */
    absolute?: pulumi.Input<string>;
    /**
     * Percentage threshold.
     */
    percentage?: pulumi.Input<number>;
}

/**
 * Integration Parameter is defined in the integration config and are used to provide information about data types of the expected parameters and provide any default values if needed. They can also be used to add custom attributes. These are static in nature and should not be used for dynamic event definition.
 */
export interface GoogleCloudIntegrationsV1alphaIntegrationParameterArgs {
    /**
     * Type of the parameter.
     */
    dataType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationParameterDataType>;
    /**
     * Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
     */
    defaultValue?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaValueTypeArgs>;
    /**
     * The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the input/output type for the parameter.
     */
    inputOutputType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationParameterInputOutputType>;
    /**
     * Whether this parameter is a transient parameter.
     */
    isTransient?: pulumi.Input<boolean>;
    /**
     * This schema will be used to validate runtime JSON-typed values of this parameter.
     */
    jsonSchema?: pulumi.Input<string>;
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
     */
    key?: pulumi.Input<string>;
    /**
     * The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
     */
    producer?: pulumi.Input<string>;
    /**
     * Searchable in the execution log or not.
     */
    searchable?: pulumi.Input<boolean>;
}

/**
 * Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be transferred between two parties, enabling the claims to be digitally signed or integrity protected.
 */
export interface GoogleCloudIntegrationsV1alphaJwtArgs {
    /**
     * The token calculated by the header, payload and signature.
     */
    jwt?: pulumi.Input<string>;
    /**
     * Identifies which algorithm is used to generate the signature.
     */
    jwtHeader?: pulumi.Input<string>;
    /**
     * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
     */
    jwtPayload?: pulumi.Input<string>;
    /**
     * User's pre-shared secret to sign the token.
     */
    secret?: pulumi.Input<string>;
}

/**
 * The task that is next in line to be executed, if the condition specified evaluated to true.
 */
export interface GoogleCloudIntegrationsV1alphaNextTaskArgs {
    /**
     * Standard filter expression for this task to become an eligible next task.
     */
    condition?: pulumi.Input<string>;
    /**
     * User-provided description intended to give additional business context about the task.
     */
    description?: pulumi.Input<string>;
    /**
     * User-provided label that is attached to this edge in the UI.
     */
    displayName?: pulumi.Input<string>;
    /**
     * ID of the next task.
     */
    taskConfigId?: pulumi.Input<string>;
    /**
     * Task number of the next task.
     */
    taskId?: pulumi.Input<string>;
}

/**
 * The OAuth Type where the client sends request with the client id and requested scopes to auth endpoint. User sees a consent screen and auth code is received at specified redirect url afterwards. The auth code is then combined with the client id and secret and sent to the token endpoint in exchange for the access and refresh token. The refresh token can be used to fetch new access tokens.
 */
export interface GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeArgs {
    /**
     * The access token received from the token endpoint.
     */
    accessToken?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaAccessTokenArgs>;
    /**
     * Indicates if the user has opted in Google Reauth Policy. If opted in, the refresh token will be valid for 20 hours, after which time users must re-authenticate in order to obtain a new one.
     */
    applyReauthPolicy?: pulumi.Input<boolean>;
    /**
     * The Auth Code that is used to initially retrieve the access token.
     */
    authCode?: pulumi.Input<string>;
    /**
     * The auth url endpoint to send the auth code request to.
     */
    authEndpoint?: pulumi.Input<string>;
    /**
     * The auth parameters sent along with the auth code request.
     */
    authParams?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapArgs>;
    /**
     * The client's id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The client's secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Represent how to pass parameters to fetch access token
     */
    requestType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCodeRequestType>;
    /**
     * A space-delimited list of requested scope permissions.
     */
    scope?: pulumi.Input<string>;
    /**
     * The token url endpoint to send the token request to.
     */
    tokenEndpoint?: pulumi.Input<string>;
    /**
     * The token parameters sent along with the token request.
     */
    tokenParams?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapArgs>;
}

/**
 * For client credentials grant, the client sends a POST request with grant_type as 'client_credentials' to the authorization server. The authorization server will respond with a JSON object containing the access token.
 */
export interface GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsArgs {
    /**
     * Access token fetched from the authorization server.
     */
    accessToken?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaAccessTokenArgs>;
    /**
     * The client's ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The client's secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Represent how to pass parameters to fetch access token
     */
    requestType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestType>;
    /**
     * A space-delimited list of requested scope permissions.
     */
    scope?: pulumi.Input<string>;
    /**
     * The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
     */
    tokenEndpoint?: pulumi.Input<string>;
    /**
     * Token parameters for the auth request.
     */
    tokenParams?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapArgs>;
}

/**
 * For resource owner credentials grant, the client will ask the user for their authorization credentials (ususally a username and password) and send a POST request to the authorization server. The authorization server will respond with a JSON object containing the access token.
 */
export interface GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsArgs {
    /**
     * Access token fetched from the authorization server.
     */
    accessToken?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaAccessTokenArgs>;
    /**
     * The client's ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The client's secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The user's password.
     */
    password?: pulumi.Input<string>;
    /**
     * Represent how to pass parameters to fetch access token
     */
    requestType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentialsRequestType>;
    /**
     * A space-delimited list of requested scope permissions.
     */
    scope?: pulumi.Input<string>;
    /**
     * The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
     */
    tokenEndpoint?: pulumi.Input<string>;
    /**
     * Token parameters for the auth request.
     */
    tokenParams?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapArgs>;
    /**
     * The user's username.
     */
    username?: pulumi.Input<string>;
}

/**
 * OIDC Token
 */
export interface GoogleCloudIntegrationsV1alphaOidcTokenArgs {
    /**
     * Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
     */
    audience?: pulumi.Input<string>;
    /**
     * The service account email to be used as the identity for the token.
     */
    serviceAccountEmail?: pulumi.Input<string>;
    /**
     * ID token obtained for the service account
     */
    token?: pulumi.Input<string>;
    /**
     * The approximate time until the token retrieved is valid.
     */
    tokenExpireTime?: pulumi.Input<string>;
}

/**
 * A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
 */
export interface GoogleCloudIntegrationsV1alphaParameterMapArgs {
    /**
     * A list of parameter map entries.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapEntryArgs>[]>;
    /**
     * Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
     */
    keyType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapKeyType>;
    /**
     * Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
     */
    valueType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapValueType>;
}

/**
 * Entry is a pair of key and value.
 */
export interface GoogleCloudIntegrationsV1alphaParameterMapEntryArgs {
    /**
     * Key of the map entry.
     */
    key?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapFieldArgs>;
    /**
     * Value of the map entry.
     */
    value?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaParameterMapFieldArgs>;
}

/**
 * Field represents either the key or value in an entry.
 */
export interface GoogleCloudIntegrationsV1alphaParameterMapFieldArgs {
    /**
     * Passing a literal value.
     */
    literalValue?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaValueTypeArgs>;
    /**
     * Referencing one of the Integration variables.
     */
    referenceKey?: pulumi.Input<string>;
}

/**
 * Represents the service account which can be used to generate access token for authenticating the service call.
 */
export interface GoogleCloudIntegrationsV1alphaServiceAccountCredentialsArgs {
    /**
     * A space-delimited list of requested scope permissions.
     */
    scope?: pulumi.Input<string>;
    /**
     * Name of the service account that has the permission to make the request.
     */
    serviceAccount?: pulumi.Input<string>;
}

/**
 * This message only contains a field of string array.
 */
export interface GoogleCloudIntegrationsV1alphaStringParameterArrayArgs {
    /**
     * String array.
     */
    stringValues?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Policy that dictates the behavior for the task after it completes successfully.
 */
export interface GoogleCloudIntegrationsV1alphaSuccessPolicyArgs {
    /**
     * State to which the execution snapshot status will be set if the task succeeds.
     */
    finalState?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaSuccessPolicyFinalState>;
}

/**
 * The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task.
 */
export interface GoogleCloudIntegrationsV1alphaTaskConfigArgs {
    /**
     * Optional. User-provided description intended to give additional business context about the task.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User-provided label that is attached to this TaskConfig in the UI.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for asynchronous calls to Eventbus alone (Post To Queue, Schedule etc.).
     */
    failurePolicy?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaFailurePolicyArgs>;
    /**
     * Optional. If set, overrides the option configured in the Task implementation class.
     */
    jsonValidationOption?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTaskConfigJsonValidationOption>;
    /**
     * Optional. The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
     */
    nextTasks?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaNextTaskArgs>[]>;
    /**
     * Optional. The policy dictating the execution of the next set of tasks for the current task.
     */
    nextTasksExecutionPolicy?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTaskConfigNextTasksExecutionPolicy>;
    /**
     * Optional. The customized parameters the user can pass to this task.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Determines what action to take upon successful task completion.
     */
    successPolicy?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaSuccessPolicyArgs>;
    /**
     * Optional. Determines the number of times the task will be retried on failure and with what retry strategy. This is applicable for synchronous calls to Eventbus alone (Post).
     */
    synchronousCallFailurePolicy?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaFailurePolicyArgs>;
    /**
     * Optional. The name for the task.
     */
    task?: pulumi.Input<string>;
    /**
     * Optional. The policy dictating the execution strategy of this task.
     */
    taskExecutionStrategy?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTaskConfigTaskExecutionStrategy>;
    /**
     * The identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_id`).
     */
    taskId: pulumi.Input<string>;
    /**
     * Optional. Used to define task-template name if task is of type task-template
     */
    taskTemplate?: pulumi.Input<string>;
}

/**
 * Configuration detail of a trigger.
 */
export interface GoogleCloudIntegrationsV1alphaTriggerConfigArgs {
    /**
     * Optional. An alert threshold configuration for the [trigger + client + integration] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + integration] when published.
     */
    alertConfig?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationAlertConfigArgs>[]>;
    /**
     * Optional. Cloud Scheduler Trigger related metadata
     */
    cloudSchedulerConfig?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaCloudSchedulerConfigArgs>;
    /**
     * Optional. User-provided description intended to give additional business context about the task.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. The user created label for a particular trigger.
     */
    label?: pulumi.Input<string>;
    /**
     * Optional. Dictates how next tasks will be executed.
     */
    nextTasksExecutionPolicy?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTriggerConfigNextTasksExecutionPolicy>;
    /**
     * Optional. Configurable properties of the trigger, not to be confused with integration parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Pub/sub triggers.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Set of tasks numbers from where the integration execution is started by this trigger. If this is empty, then integration is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same integration execution graph).
     */
    startTasks?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaNextTaskArgs>[]>;
    /**
     * Optional. The backend trigger ID.
     */
    triggerId?: pulumi.Input<string>;
    /**
     * A number to uniquely identify each trigger config within the integration on UI.
     */
    triggerNumber: pulumi.Input<string>;
    /**
     * Optional. Type of trigger
     */
    triggerType?: pulumi.Input<enums.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTriggerConfigTriggerType>;
}

/**
 * Username and password pair.
 */
export interface GoogleCloudIntegrationsV1alphaUsernameAndPasswordArgs {
    /**
     * Password to be used
     */
    password?: pulumi.Input<string>;
    /**
     * Username to be used
     */
    username?: pulumi.Input<string>;
}

/**
 * The type of the parameter.
 */
export interface GoogleCloudIntegrationsV1alphaValueTypeArgs {
    /**
     * Boolean Array.
     */
    booleanArray?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaBooleanParameterArrayArgs>;
    /**
     * Boolean.
     */
    booleanValue?: pulumi.Input<boolean>;
    /**
     * Double Number Array.
     */
    doubleArray?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaDoubleParameterArrayArgs>;
    /**
     * Double Number.
     */
    doubleValue?: pulumi.Input<number>;
    /**
     * Integer Array.
     */
    intArray?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntParameterArrayArgs>;
    /**
     * Integer.
     */
    intValue?: pulumi.Input<string>;
    /**
     * Json.
     */
    jsonValue?: pulumi.Input<string>;
    /**
     * String Array.
     */
    stringArray?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaStringParameterArrayArgs>;
    /**
     * String.
     */
    stringValue?: pulumi.Input<string>;
}

