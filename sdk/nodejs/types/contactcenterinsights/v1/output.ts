// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * The analysis resource.
 */
export interface GoogleCloudContactcenterinsightsV1AnalysisResponse {
    /**
     * The result of the analysis, which is populated when the analysis finishes.
     */
    analysisResult: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnalysisResultResponse;
    /**
     * The time at which the analysis was created, which occurs when the long-running operation completes.
     */
    createTime: string;
    /**
     * Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}
     */
    name: string;
    /**
     * The time at which the analysis was requested.
     */
    requestTime: string;
}

/**
 * Call-specific metadata created during analysis.
 */
export interface GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse {
    /**
     * A list of call annotations that apply to this call.
     */
    annotations: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1CallAnnotationResponse[];
    /**
     * All the entities in the call.
     */
    entities: {[key: string]: string};
    /**
     * All the matched intents in the call.
     */
    intents: {[key: string]: string};
    /**
     * Overall conversation-level issue modeling result.
     */
    issueModelResult: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1IssueModelResultResponse;
    /**
     * All the matched phrase matchers in the call.
     */
    phraseMatchers: {[key: string]: string};
    /**
     * Overall conversation-level sentiment for each channel of the call.
     */
    sentiments: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse[];
}

/**
 * The result of an analysis.
 */
export interface GoogleCloudContactcenterinsightsV1AnalysisResultResponse {
    /**
     * Call-specific metadata created by the analysis.
     */
    callAnalysisMetadata: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnalysisResultCallAnalysisMetadataResponse;
    /**
     * The time at which the analysis ended.
     */
    endTime: string;
}

/**
 * A point in a conversation that marks the start or the end of an annotation.
 */
export interface GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse {
    /**
     * The index in the sequence of transcribed pieces of the conversation where the boundary is located. This index starts at zero.
     */
    transcriptIndex: number;
    /**
     * The word index of this boundary with respect to the first word in the transcript piece. This index starts at zero.
     */
    wordIndex: number;
}

/**
 * The feedback that the customer has about a certain answer in the conversation.
 */
export interface GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse {
    /**
     * Indicates whether an answer or item was clicked by the human agent.
     */
    clicked: boolean;
    /**
     * The correctness level of an answer.
     */
    correctnessLevel: string;
    /**
     * Indicates whether an answer or item was displayed to the human agent in the agent desktop UI.
     */
    displayed: boolean;
}

/**
 * Agent Assist Article Suggestion data.
 */
export interface GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse {
    /**
     * The system's confidence score that this article is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    confidenceScore: number;
    /**
     * Map that contains metadata about the Article Suggestion and the document that it originates from.
     */
    metadata: {[key: string]: string};
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    queryRecord: string;
    /**
     * The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}
     */
    source: string;
    /**
     * Article title.
     */
    title: string;
    /**
     * Article URI.
     */
    uri: string;
}

/**
 * A piece of metadata that applies to a window of a call.
 */
export interface GoogleCloudContactcenterinsightsV1CallAnnotationResponse {
    /**
     * The boundary in the conversation where the annotation ends, inclusive.
     */
    annotationEndBoundary: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
    /**
     * The boundary in the conversation where the annotation starts, inclusive.
     */
    annotationStartBoundary: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
    /**
     * The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
     */
    channelTag: number;
    /**
     * Data specifying an entity mention.
     */
    entityMentionData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1EntityMentionDataResponse;
    /**
     * Data specifying a hold.
     */
    holdData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1HoldDataResponse;
    /**
     * Data specifying an intent match.
     */
    intentMatchData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1IntentMatchDataResponse;
    /**
     * Data specifying an interruption.
     */
    interruptionData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1InterruptionDataResponse;
    /**
     * Data specifying a phrase match.
     */
    phraseMatchData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse;
    /**
     * Data specifying sentiment.
     */
    sentimentData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
    /**
     * Data specifying silence.
     */
    silenceData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SilenceDataResponse;
}

/**
 * Call-specific metadata.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationCallMetadataResponse {
    /**
     * The audio channel that contains the agent.
     */
    agentChannel: number;
    /**
     * The audio channel that contains the customer.
     */
    customerChannel: number;
}

/**
 * The conversation source, which is a combination of transcript and audio.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationDataSourceResponse {
    /**
     * The source when the conversation comes from Dialogflow.
     */
    dialogflowSource: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1DialogflowSourceResponse;
    /**
     * A Cloud Storage location specification for the audio and transcript.
     */
    gcsSource: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1GcsSourceResponse;
}

/**
 * One channel of conversation-level sentiment data.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationLevelSentimentResponse {
    /**
     * The channel of the audio that the data applies to.
     */
    channelTag: number;
    /**
     * Data specifying sentiment.
     */
    sentimentData: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
}

/**
 * The call participant speaking for a given utterance.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationParticipantResponse {
    /**
     * Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
     *
     * @deprecated Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
     */
    dialogflowParticipant: string;
    /**
     * The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}
     */
    dialogflowParticipantName: string;
    /**
     * Obfuscated user ID from Dialogflow.
     */
    obfuscatedExternalUserId: string;
    /**
     * The role of the participant.
     */
    role: string;
    /**
     * A user-specified ID representing the participant.
     */
    userId: string;
}

/**
 * A message representing the transcript of a conversation.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationTranscriptResponse {
    /**
     * A list of sequential transcript segments that comprise the conversation.
     */
    transcriptSegments: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse[];
}

/**
 * Metadata from Dialogflow relating to the current transcript segment.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse {
    /**
     * Whether the transcript segment was covered under the configured smart reply allowlist in Agent Assist.
     */
    smartReplyAllowlistCovered: boolean;
}

/**
 * A segment of a full transcript.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse {
    /**
     * For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
     */
    channelTag: number;
    /**
     * A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
     */
    confidence: number;
    /**
     * CCAI metadata relating to the current transcript segment.
     */
    dialogflowSegmentMetadata: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse;
    /**
     * The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
     */
    languageCode: string;
    /**
     * The time that the message occurred, if provided.
     */
    messageTime: string;
    /**
     * The participant of this segment.
     */
    segmentParticipant: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ConversationParticipantResponse;
    /**
     * The sentiment for this transcript segment.
     */
    sentiment: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
    /**
     * The text of this segment.
     */
    text: string;
    /**
     * A list of the word-specific information for each word in the segment.
     */
    words: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse[];
}

/**
 * Word-level info for words in a transcript.
 */
export interface GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse {
    /**
     * A confidence estimate between 0.0 and 1.0 of the fidelity of this word. A default value of 0.0 indicates that the value is unset.
     */
    confidence: number;
    /**
     * Time offset of the end of this word relative to the beginning of the total conversation.
     */
    endOffset: string;
    /**
     * Time offset of the start of this word relative to the beginning of the total conversation.
     */
    startOffset: string;
    /**
     * The word itself. Includes punctuation marks that surround the word.
     */
    word: string;
}

/**
 * Dialogflow interaction data.
 */
export interface GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse {
    /**
     * The confidence of the match ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    confidence: number;
    /**
     * The Dialogflow intent resource path. Format: projects/{project}/agent/{agent}/intents/{intent}
     */
    dialogflowIntentId: string;
}

/**
 * A Dialogflow source of conversation data.
 */
export interface GoogleCloudContactcenterinsightsV1DialogflowSourceResponse {
    /**
     * Cloud Storage URI that points to a file that contains the conversation audio.
     */
    audioUri: string;
    /**
     * The name of the Dialogflow conversation that this conversation resource is derived from. Format: projects/{project}/locations/{location}/conversations/{conversation}
     */
    dialogflowConversation: string;
}

/**
 * The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
 */
export interface GoogleCloudContactcenterinsightsV1EntityMentionDataResponse {
    /**
     * The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to.
     */
    entityUniqueId: string;
    /**
     * Sentiment expressed for this mention of the entity.
     */
    sentiment: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
    /**
     * The type of the entity mention.
     */
    type: string;
}

/**
 * Exact match configuration.
 */
export interface GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse {
    /**
     * Whether to consider case sensitivity when performing an exact match.
     */
    caseSensitive: boolean;
}

/**
 * Agent Assist frequently-asked-question answer data.
 */
export interface GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse {
    /**
     * The piece of text from the `source` knowledge base document.
     */
    answer: string;
    /**
     * The system's confidence score that this answer is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    confidenceScore: number;
    /**
     * Map that contains metadata about the FAQ answer and the document that it originates from.
     */
    metadata: {[key: string]: string};
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    queryRecord: string;
    /**
     * The corresponding FAQ question.
     */
    question: string;
    /**
     * The knowledge document that this answer was extracted from. Format: projects/{project}/knowledgeBases/{knowledge_base}/documents/{document}.
     */
    source: string;
}

/**
 * A Cloud Storage source of conversation data.
 */
export interface GoogleCloudContactcenterinsightsV1GcsSourceResponse {
    /**
     * Cloud Storage URI that points to a file that contains the conversation audio.
     */
    audioUri: string;
    /**
     * Immutable. Cloud Storage URI that points to a file that contains the conversation transcript.
     */
    transcriptUri: string;
}

/**
 * The data for a hold annotation.
 */
export interface GoogleCloudContactcenterinsightsV1HoldDataResponse {
}

/**
 * The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
 */
export interface GoogleCloudContactcenterinsightsV1IntentMatchDataResponse {
    /**
     * The id of the matched intent. Can be used to retrieve the corresponding intent information.
     */
    intentUniqueId: string;
}

/**
 * The data for an interruption annotation.
 */
export interface GoogleCloudContactcenterinsightsV1InterruptionDataResponse {
}

/**
 * Information about the issue.
 */
export interface GoogleCloudContactcenterinsightsV1IssueAssignmentResponse {
    /**
     * Immutable. Display name of the assigned issue. This field is set at time of analyis and immutable since then.
     */
    displayName: string;
    /**
     * Resource name of the assigned issue.
     */
    issue: string;
    /**
     * Score indicating the likelihood of the issue assignment. currently bounded on [0,1].
     */
    score: number;
}

/**
 * Configs for the input data used to create the issue model.
 */
export interface GoogleCloudContactcenterinsightsV1IssueModelInputDataConfigResponse {
    /**
     * A filter to reduce the conversations used for training the model to a specific subset.
     */
    filter: string;
    /**
     * Medium of conversations used in training data. This field is being deprecated. To specify the medium to be used in training a new issue model, set the `medium` field on `filter`.
     */
    medium: string;
    /**
     * Number of conversations used in training. Output only.
     */
    trainingConversationsCount: string;
}

/**
 * Aggregated statistics about an issue model.
 */
export interface GoogleCloudContactcenterinsightsV1IssueModelLabelStatsResponse {
    /**
     * Number of conversations the issue model has analyzed at this point in time.
     */
    analyzedConversationsCount: string;
    /**
     * Statistics on each issue. Key is the issue's resource name.
     */
    issueStats: {[key: string]: string};
    /**
     * Number of analyzed conversations for which no issue was applicable at this point in time.
     */
    unclassifiedConversationsCount: string;
}

/**
 * Issue Modeling result on a conversation.
 */
export interface GoogleCloudContactcenterinsightsV1IssueModelResultResponse {
    /**
     * Issue model that generates the result. Format: projects/{project}/locations/{location}/issueModels/{issue_model}
     */
    issueModel: string;
    /**
     * All the matched issues.
     */
    issues: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1IssueAssignmentResponse[];
}

/**
 * The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
 */
export interface GoogleCloudContactcenterinsightsV1PhraseMatchDataResponse {
    /**
     * The human-readable name of the phrase matcher.
     */
    displayName: string;
    /**
     * The unique identifier (the resource name) of the phrase matcher.
     */
    phraseMatcher: string;
}

/**
 * Configuration information of a phrase match rule.
 */
export interface GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse {
    /**
     * The configuration for the exact match rule.
     */
    exactMatchConfig: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ExactMatchConfigResponse;
}

/**
 * A message representing a rule in the phrase matcher.
 */
export interface GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroupResponse {
    /**
     * A list of phase match rules that are included in this group.
     */
    phraseMatchRules: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse[];
    /**
     * The type of this phrase match rule group.
     */
    type: string;
}

/**
 * The data for a phrase match rule.
 */
export interface GoogleCloudContactcenterinsightsV1PhraseMatchRuleResponse {
    /**
     * Provides additional information about the rule that specifies how to apply the rule.
     */
    config: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfigResponse;
    /**
     * Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment.
     */
    negated: boolean;
    /**
     * The phrase to be matched.
     */
    query: string;
}

/**
 * An annotation that was generated during the customer and agent interaction.
 */
export interface GoogleCloudContactcenterinsightsV1RuntimeAnnotationResponse {
    /**
     * The unique identifier of the annotation. Format: projects/{project}/locations/{location}/conversationDatasets/{dataset}/conversationDataItems/{data_item}/conversationAnnotations/{annotation}
     */
    annotationId: string;
    /**
     * The feedback that the customer has about the answer in `data`.
     */
    answerFeedback: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnswerFeedbackResponse;
    /**
     * Agent Assist Article Suggestion data.
     */
    articleSuggestion: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1ArticleSuggestionDataResponse;
    /**
     * The time at which this annotation was created.
     */
    createTime: string;
    /**
     * Dialogflow interaction data.
     */
    dialogflowInteraction: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1DialogflowInteractionDataResponse;
    /**
     * The boundary in the conversation where the annotation ends, inclusive.
     */
    endBoundary: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
    /**
     * Agent Assist FAQ answer data.
     */
    faqAnswer: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1FaqAnswerDataResponse;
    /**
     * Agent Assist Smart Compose suggestion data.
     */
    smartComposeSuggestion: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse;
    /**
     * Agent Assist Smart Reply data.
     */
    smartReply: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1SmartReplyDataResponse;
    /**
     * The boundary in the conversation where the annotation starts, inclusive.
     */
    startBoundary: outputs.contactcenterinsights.v1.GoogleCloudContactcenterinsightsV1AnnotationBoundaryResponse;
}

/**
 * The data for a sentiment annotation.
 */
export interface GoogleCloudContactcenterinsightsV1SentimentDataResponse {
    /**
     * A non-negative number from 0 to infinity which represents the abolute magnitude of sentiment regardless of score.
     */
    magnitude: number;
    /**
     * The sentiment score between -1.0 (negative) and 1.0 (positive).
     */
    score: number;
}

/**
 * The data for a silence annotation.
 */
export interface GoogleCloudContactcenterinsightsV1SilenceDataResponse {
}

/**
 * Agent Assist Smart Compose suggestion data.
 */
export interface GoogleCloudContactcenterinsightsV1SmartComposeSuggestionDataResponse {
    /**
     * The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    confidenceScore: number;
    /**
     * Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
     */
    metadata: {[key: string]: string};
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    queryRecord: string;
    /**
     * The content of the suggestion.
     */
    suggestion: string;
}

/**
 * Agent Assist Smart Reply data.
 */
export interface GoogleCloudContactcenterinsightsV1SmartReplyDataResponse {
    /**
     * The system's confidence score that this reply is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    confidenceScore: number;
    /**
     * Map that contains metadata about the Smart Reply and the document from which it originates.
     */
    metadata: {[key: string]: string};
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    queryRecord: string;
    /**
     * The content of the reply.
     */
    reply: string;
}

