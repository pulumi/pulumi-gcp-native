// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Dynamic group metadata like queries and status.
 */
export interface DynamicGroupMetadataArgs {
    /**
     * Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
     */
    queries?: pulumi.Input<pulumi.Input<inputs.cloudidentity.v1beta1.DynamicGroupQueryArgs>[]>;
}

/**
 * Defines a query on a resource.
 */
export interface DynamicGroupQueryArgs {
    /**
     * Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
     */
    query?: pulumi.Input<string>;
    resourceType?: pulumi.Input<enums.cloudidentity.v1beta1.DynamicGroupQueryResourceType>;
}

/**
 * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
 */
export interface EntityKeyArgs {
    /**
     * The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
     */
    id?: pulumi.Input<string>;
    /**
     * The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The `MembershipRole` expiry details.
 */
export interface ExpiryDetailArgs {
    /**
     * The time at which the `MembershipRole` will expire.
     */
    expireTime?: pulumi.Input<string>;
}

/**
 * A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
 */
export interface MembershipRoleArgs {
    /**
     * The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
     */
    expiryDetail?: pulumi.Input<inputs.cloudidentity.v1beta1.ExpiryDetailArgs>;
    /**
     * The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
     */
    name?: pulumi.Input<string>;
    /**
     * Evaluations of restrictions applied to parent group on this membership.
     */
    restrictionEvaluations?: pulumi.Input<inputs.cloudidentity.v1beta1.RestrictionEvaluationsArgs>;
}

/**
 * The evaluated state of this restriction.
 */
export interface MembershipRoleRestrictionEvaluationArgs {
}

/**
 * POSIX Group definition to represent a group in a POSIX compliant system.
 */
export interface PosixGroupArgs {
    /**
     * GID of the POSIX group.
     */
    gid?: pulumi.Input<string>;
    /**
     * Name of the POSIX group.
     */
    name?: pulumi.Input<string>;
    /**
     * System identifier for which group name and gid apply to. If not specified it will default to empty value.
     */
    systemId?: pulumi.Input<string>;
}

/**
 * Evaluations of restrictions applied to parent group on this membership.
 */
export interface RestrictionEvaluationsArgs {
    /**
     * Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
     */
    memberRestrictionEvaluation?: pulumi.Input<inputs.cloudidentity.v1beta1.MembershipRoleRestrictionEvaluationArgs>;
}

/**
 * SAML IDP (identity provider) configuration.
 */
export interface SamlIdpConfigArgs {
    /**
     * The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
     */
    changePasswordUri?: pulumi.Input<string>;
    /**
     * The SAML **Entity ID** of the identity provider.
     */
    entityId: pulumi.Input<string>;
    /**
     * The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is currently not supported. Must use `HTTPS`.
     */
    logoutRedirectUri?: pulumi.Input<string>;
    /**
     * The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Currently assumed to accept the `HTTP-Redirect` binding.
     */
    singleSignOnServiceUri: pulumi.Input<string>;
}

/**
 * SAML SP (service provider) configuration.
 */
export interface SamlSpConfigArgs {
}

/**
 * Details that are applicable when `sso_mode` == `SAML_SSO`.
 */
export interface SamlSsoInfoArgs {
    /**
     * Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`. 
     */
    inboundSamlSsoProfile: pulumi.Input<string>;
}

/**
 * Controls sign-in behavior.
 */
export interface SignInBehaviorArgs {
    /**
     * When to redirect sign-ins to the IdP.
     */
    redirectCondition?: pulumi.Input<enums.cloudidentity.v1beta1.SignInBehaviorRedirectCondition>;
}

