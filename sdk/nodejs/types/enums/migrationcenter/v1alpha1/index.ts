// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ComputeEnginePreferencesLicenseType = {
    /**
     * Unspecified (default value).
     */
    LicenseTypeUnspecified: "LICENSE_TYPE_UNSPECIFIED",
    /**
     * Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.
     */
    LicenseTypeDefault: "LICENSE_TYPE_DEFAULT",
    /**
     * Bring-your-own-license (BYOL) plan. User provides the OS license.
     */
    LicenseTypeBringYourOwnLicense: "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE",
} as const;

/**
 * License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
 */
export type ComputeEnginePreferencesLicenseType = (typeof ComputeEnginePreferencesLicenseType)[keyof typeof ComputeEnginePreferencesLicenseType];

export const ComputeEnginePreferencesPersistentDiskType = {
    /**
     * Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
     */
    PersistentDiskTypeUnspecified: "PERSISTENT_DISK_TYPE_UNSPECIFIED",
    /**
     * Standard HDD Persistent Disk.
     */
    PersistentDiskTypeStandard: "PERSISTENT_DISK_TYPE_STANDARD",
    /**
     * Balanced Persistent Disk.
     */
    PersistentDiskTypeBalanced: "PERSISTENT_DISK_TYPE_BALANCED",
    /**
     * SSD Persistent Disk.
     */
    PersistentDiskTypeSsd: "PERSISTENT_DISK_TYPE_SSD",
} as const;

/**
 * Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
 */
export type ComputeEnginePreferencesPersistentDiskType = (typeof ComputeEnginePreferencesPersistentDiskType)[keyof typeof ComputeEnginePreferencesPersistentDiskType];

export const GCSPayloadInfoFormat = {
    /**
     * Default value.
     */
    ImportJobFormatUnspecified: "IMPORT_JOB_FORMAT_UNSPECIFIED",
    /**
     * Configuration management DB format.
     */
    ImportJobFormatCmdb: "IMPORT_JOB_FORMAT_CMDB",
    /**
     * RVTools format (XLSX).
     */
    ImportJobFormatRvtoolsXlsx: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
    /**
     * RVTools format (CSV).
     */
    ImportJobFormatRvtoolsCsv: "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
    /**
     * CSV format exported from AWS using the AWS collection script.
     */
    ImportJobFormatExportedAwsCsv: "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
    /**
     * CSV format exported from Azure using the Azure collection script.
     */
    ImportJobFormatExportedAzureCsv: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
    /**
     * CSV format created manually. For more information, see Manually create and upload data tables.
     */
    ImportJobFormatManualCsv: "IMPORT_JOB_FORMAT_MANUAL_CSV",
} as const;

/**
 * The import job format.
 */
export type GCSPayloadInfoFormat = (typeof GCSPayloadInfoFormat)[keyof typeof GCSPayloadInfoFormat];

export const ImportDataFileFormat = {
    /**
     * Default value.
     */
    ImportJobFormatUnspecified: "IMPORT_JOB_FORMAT_UNSPECIFIED",
    /**
     * Configuration management DB format.
     */
    ImportJobFormatCmdb: "IMPORT_JOB_FORMAT_CMDB",
    /**
     * RVTools format (XLSX).
     */
    ImportJobFormatRvtoolsXlsx: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
    /**
     * RVTools format (CSV).
     */
    ImportJobFormatRvtoolsCsv: "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
    /**
     * CSV format exported from AWS using the AWS collection script.
     */
    ImportJobFormatExportedAwsCsv: "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
    /**
     * CSV format exported from Azure using the Azure collection script.
     */
    ImportJobFormatExportedAzureCsv: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
    /**
     * CSV format created manually. For more information, see Manually create and upload data tables.
     */
    ImportJobFormatManualCsv: "IMPORT_JOB_FORMAT_MANUAL_CSV",
} as const;

/**
 * Required. The payload format.
 */
export type ImportDataFileFormat = (typeof ImportDataFileFormat)[keyof typeof ImportDataFileFormat];

export const InlinePayloadInfoFormat = {
    /**
     * Default value.
     */
    ImportJobFormatUnspecified: "IMPORT_JOB_FORMAT_UNSPECIFIED",
    /**
     * Configuration management DB format.
     */
    ImportJobFormatCmdb: "IMPORT_JOB_FORMAT_CMDB",
    /**
     * RVTools format (XLSX).
     */
    ImportJobFormatRvtoolsXlsx: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX",
    /**
     * RVTools format (CSV).
     */
    ImportJobFormatRvtoolsCsv: "IMPORT_JOB_FORMAT_RVTOOLS_CSV",
    /**
     * CSV format exported from AWS using the AWS collection script.
     */
    ImportJobFormatExportedAwsCsv: "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV",
    /**
     * CSV format exported from Azure using the Azure collection script.
     */
    ImportJobFormatExportedAzureCsv: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV",
    /**
     * CSV format created manually. For more information, see Manually create and upload data tables.
     */
    ImportJobFormatManualCsv: "IMPORT_JOB_FORMAT_MANUAL_CSV",
} as const;

/**
 * The import job format.
 */
export type InlinePayloadInfoFormat = (typeof InlinePayloadInfoFormat)[keyof typeof InlinePayloadInfoFormat];

export const ReportState = {
    /**
     * Default Report creation state.
     */
    StateUnspecified: "STATE_UNSPECIFIED",
    /**
     * Creating Report.
     */
    Pending: "PENDING",
    /**
     * Successfully created Report.
     */
    Succeeded: "SUCCEEDED",
    /**
     * Failed to create Report.
     */
    Failed: "FAILED",
} as const;

/**
 * Report creation state.
 */
export type ReportState = (typeof ReportState)[keyof typeof ReportState];

export const ReportType = {
    /**
     * Default Report type.
     */
    TypeUnspecified: "TYPE_UNSPECIFIED",
    /**
     * Total cost of ownership Report type.
     */
    TotalCostOfOwnership: "TOTAL_COST_OF_OWNERSHIP",
} as const;

/**
 * Report type.
 */
export type ReportType = (typeof ReportType)[keyof typeof ReportType];

export const SoleTenancyPreferencesCommitmentPlan = {
    /**
     * Unspecified commitment plan.
     */
    CommitmentPlanUnspecified: "COMMITMENT_PLAN_UNSPECIFIED",
    /**
     * No commitment plan (on-demand usage).
     */
    OnDemand: "ON_DEMAND",
    /**
     * 1 year commitment.
     */
    Commitment1Year: "COMMITMENT_1_YEAR",
    /**
     * 3 years commitment.
     */
    Commitment3Year: "COMMITMENT_3_YEAR",
} as const;

/**
 * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
 */
export type SoleTenancyPreferencesCommitmentPlan = (typeof SoleTenancyPreferencesCommitmentPlan)[keyof typeof SoleTenancyPreferencesCommitmentPlan];

export const SoleTenancyPreferencesHostMaintenancePolicy = {
    /**
     * Unspecified host maintenance policy.
     */
    HostMaintenancePolicyUnspecified: "HOST_MAINTENANCE_POLICY_UNSPECIFIED",
    /**
     * Default host maintenance policy.
     */
    HostMaintenancePolicyDefault: "HOST_MAINTENANCE_POLICY_DEFAULT",
    /**
     * Restart in place host maintenance policy.
     */
    HostMaintenancePolicyRestartInPlace: "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE",
    /**
     * Migrate within node group host maintenance policy.
     */
    HostMaintenancePolicyMigrateWithinNodeGroup: "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP",
} as const;

/**
 * Sole Tenancy nodes maintenance policy.
 */
export type SoleTenancyPreferencesHostMaintenancePolicy = (typeof SoleTenancyPreferencesHostMaintenancePolicy)[keyof typeof SoleTenancyPreferencesHostMaintenancePolicy];

export const SourceType = {
    /**
     * Unspecified
     */
    SourceTypeUnknown: "SOURCE_TYPE_UNKNOWN",
    /**
     * Manually uploaded file (e.g. CSV)
     */
    SourceTypeUpload: "SOURCE_TYPE_UPLOAD",
    /**
     * Guest-level info
     */
    SourceTypeGuestOsScan: "SOURCE_TYPE_GUEST_OS_SCAN",
    /**
     * Inventory-level scan
     */
    SourceTypeInventoryScan: "SOURCE_TYPE_INVENTORY_SCAN",
    /**
     * Third-party owned sources.
     */
    SourceTypeCustom: "SOURCE_TYPE_CUSTOM",
} as const;

/**
 * Data source type.
 */
export type SourceType = (typeof SourceType)[keyof typeof SourceType];

export const VirtualMachinePreferencesCommitmentPlan = {
    /**
     * Unspecified commitment plan.
     */
    CommitmentPlanUnspecified: "COMMITMENT_PLAN_UNSPECIFIED",
    /**
     * No commitment plan.
     */
    CommitmentPlanNone: "COMMITMENT_PLAN_NONE",
    /**
     * 1 year commitment.
     */
    CommitmentPlanOneYear: "COMMITMENT_PLAN_ONE_YEAR",
    /**
     * 3 years commitment.
     */
    CommitmentPlanThreeYears: "COMMITMENT_PLAN_THREE_YEARS",
} as const;

/**
 * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
 */
export type VirtualMachinePreferencesCommitmentPlan = (typeof VirtualMachinePreferencesCommitmentPlan)[keyof typeof VirtualMachinePreferencesCommitmentPlan];

export const VirtualMachinePreferencesSizingOptimizationCustomParametersAggregationMethod = {
    /**
     * Unspecified aggregation method. Can be used for default value.
     */
    AggregationMethodUnspecified: "AGGREGATION_METHOD_UNSPECIFIED",
    /**
     * Average of utilization data.
     */
    AggregationMethodAverage: "AGGREGATION_METHOD_AVERAGE",
    /**
     * Median of utilization data.
     */
    AggregationMethodMedian: "AGGREGATION_METHOD_MEDIAN",
    /**
     * 95th percentile of utilization data.
     */
    AggregationMethodNinetyFifthPercentile: "AGGREGATION_METHOD_NINETY_FIFTH_PERCENTILE",
    /**
     * Peak of utilization data.
     */
    AggregationMethodPeak: "AGGREGATION_METHOD_PEAK",
} as const;

/**
 * Optional. Type of statistical aggregation of a resource utilization data, on which to base the sizing metrics.
 */
export type VirtualMachinePreferencesSizingOptimizationCustomParametersAggregationMethod = (typeof VirtualMachinePreferencesSizingOptimizationCustomParametersAggregationMethod)[keyof typeof VirtualMachinePreferencesSizingOptimizationCustomParametersAggregationMethod];

export const VirtualMachinePreferencesSizingOptimizationStrategy = {
    /**
     * Unspecified (default value).
     */
    SizingOptimizationStrategyUnspecified: "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED",
    /**
     * No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.
     */
    SizingOptimizationStrategySameAsSource: "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE",
    /**
     * Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.
     */
    SizingOptimizationStrategyModerate: "SIZING_OPTIMIZATION_STRATEGY_MODERATE",
    /**
     * Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.
     */
    SizingOptimizationStrategyAggressive: "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE",
    /**
     * Virtual machine sizing will be determined by custom parameters. While not supported in the v1 API, this value is converted to UNSPECIFIED in conversions to the v1 API.
     */
    SizingOptimizationStrategyCustom: "SIZING_OPTIMIZATION_STRATEGY_CUSTOM",
} as const;

/**
 * Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
 */
export type VirtualMachinePreferencesSizingOptimizationStrategy = (typeof VirtualMachinePreferencesSizingOptimizationStrategy)[keyof typeof VirtualMachinePreferencesSizingOptimizationStrategy];

export const VirtualMachinePreferencesTargetProduct = {
    /**
     * Unspecified (default value).
     */
    ComputeMigrationTargetProductUnspecified: "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED",
    /**
     * Prefer to migrate to Google Cloud Compute Engine.
     */
    ComputeMigrationTargetProductComputeEngine: "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE",
    /**
     * Prefer to migrate to Google Cloud VMware Engine.
     */
    ComputeMigrationTargetProductVmwareEngine: "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE",
    /**
     * Prefer to migrate to Google Cloud Sole Tenant Nodes.
     */
    ComputeMigrationTargetProductSoleTenancy: "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY",
} as const;

/**
 * Target product for assets using this preference set. Specify either target product or business goal, but not both.
 */
export type VirtualMachinePreferencesTargetProduct = (typeof VirtualMachinePreferencesTargetProduct)[keyof typeof VirtualMachinePreferencesTargetProduct];

export const VmwareEnginePreferencesCommitmentPlan = {
    /**
     * Unspecified commitment plan.
     */
    CommitmentPlanUnspecified: "COMMITMENT_PLAN_UNSPECIFIED",
    /**
     * No commitment plan (on-demand usage).
     */
    OnDemand: "ON_DEMAND",
    /**
     * 1 year commitment (monthly payments).
     */
    Commitment1YearMonthlyPayments: "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS",
    /**
     * 3 year commitment (monthly payments).
     */
    Commitment3YearMonthlyPayments: "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS",
    /**
     * 1 year commitment (upfront payment).
     */
    Commitment1YearUpfrontPayment: "COMMITMENT_1_YEAR_UPFRONT_PAYMENT",
    /**
     * 3 years commitment (upfront payment).
     */
    Commitment3YearUpfrontPayment: "COMMITMENT_3_YEAR_UPFRONT_PAYMENT",
} as const;

/**
 * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
 */
export type VmwareEnginePreferencesCommitmentPlan = (typeof VmwareEnginePreferencesCommitmentPlan)[keyof typeof VmwareEnginePreferencesCommitmentPlan];
