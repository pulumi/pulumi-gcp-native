// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType = {
    StringAggregationTypeUnspecified: "STRING_AGGREGATION_TYPE_UNSPECIFIED",
    /**
     * Majority vote to aggregate answers.
     */
    MajorityVote: "MAJORITY_VOTE",
    /**
     * Unanimous answers will be adopted.
     */
    UnanimousVote: "UNANIMOUS_VOTE",
    /**
     * Preserve all answers by crowd compute.
     */
    NoAggregation: "NO_AGGREGATION",
} as const;

/**
 * Optional. The type of how to aggregate answers.
 */
export type GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType = (typeof GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType)[keyof typeof GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationType];

export const GoogleCloudDatalabelingV1beta1InputConfigAnnotationType = {
    AnnotationTypeUnspecified: "ANNOTATION_TYPE_UNSPECIFIED",
    /**
     * Classification annotations in an image. Allowed for continuous evaluation.
     */
    ImageClassificationAnnotation: "IMAGE_CLASSIFICATION_ANNOTATION",
    /**
     * Bounding box annotations in an image. A form of image object detection. Allowed for continuous evaluation.
     */
    ImageBoundingBoxAnnotation: "IMAGE_BOUNDING_BOX_ANNOTATION",
    /**
     * Oriented bounding box. The box does not have to be parallel to horizontal line.
     */
    ImageOrientedBoundingBoxAnnotation: "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",
    /**
     * Bounding poly annotations in an image.
     */
    ImageBoundingPolyAnnotation: "IMAGE_BOUNDING_POLY_ANNOTATION",
    /**
     * Polyline annotations in an image.
     */
    ImagePolylineAnnotation: "IMAGE_POLYLINE_ANNOTATION",
    /**
     * Segmentation annotations in an image.
     */
    ImageSegmentationAnnotation: "IMAGE_SEGMENTATION_ANNOTATION",
    /**
     * Classification annotations in video shots.
     */
    VideoShotsClassificationAnnotation: "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",
    /**
     * Video object tracking annotation.
     */
    VideoObjectTrackingAnnotation: "VIDEO_OBJECT_TRACKING_ANNOTATION",
    /**
     * Video object detection annotation.
     */
    VideoObjectDetectionAnnotation: "VIDEO_OBJECT_DETECTION_ANNOTATION",
    /**
     * Video event annotation.
     */
    VideoEventAnnotation: "VIDEO_EVENT_ANNOTATION",
    /**
     * Classification for text. Allowed for continuous evaluation.
     */
    TextClassificationAnnotation: "TEXT_CLASSIFICATION_ANNOTATION",
    /**
     * Entity extraction for text.
     */
    TextEntityExtractionAnnotation: "TEXT_ENTITY_EXTRACTION_ANNOTATION",
    /**
     * General classification. Allowed for continuous evaluation.
     */
    GeneralClassificationAnnotation: "GENERAL_CLASSIFICATION_ANNOTATION",
} as const;

/**
 * Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
 */
export type GoogleCloudDatalabelingV1beta1InputConfigAnnotationType = (typeof GoogleCloudDatalabelingV1beta1InputConfigAnnotationType)[keyof typeof GoogleCloudDatalabelingV1beta1InputConfigAnnotationType];

export const GoogleCloudDatalabelingV1beta1InputConfigDataType = {
    /**
     * Data type is unspecified.
     */
    DataTypeUnspecified: "DATA_TYPE_UNSPECIFIED",
    /**
     * Allowed for continuous evaluation.
     */
    Image: "IMAGE",
    /**
     * Video data type.
     */
    Video: "VIDEO",
    /**
     * Allowed for continuous evaluation.
     */
    Text: "TEXT",
    /**
     * Allowed for continuous evaluation.
     */
    GeneralData: "GENERAL_DATA",
} as const;

/**
 * Required. Data type must be specifed when user tries to import data.
 */
export type GoogleCloudDatalabelingV1beta1InputConfigDataType = (typeof GoogleCloudDatalabelingV1beta1InputConfigDataType)[keyof typeof GoogleCloudDatalabelingV1beta1InputConfigDataType];

export const InstructionDataType = {
    /**
     * Data type is unspecified.
     */
    DataTypeUnspecified: "DATA_TYPE_UNSPECIFIED",
    /**
     * Allowed for continuous evaluation.
     */
    Image: "IMAGE",
    /**
     * Video data type.
     */
    Video: "VIDEO",
    /**
     * Allowed for continuous evaluation.
     */
    Text: "TEXT",
    /**
     * Allowed for continuous evaluation.
     */
    GeneralData: "GENERAL_DATA",
} as const;

/**
 * Required. The data type of this instruction.
 */
export type InstructionDataType = (typeof InstructionDataType)[keyof typeof InstructionDataType];
