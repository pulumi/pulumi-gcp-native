// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const OSPolicyMode = {
    /**
     * Invalid mode
     */
    ModeUnspecified: "MODE_UNSPECIFIED",
    /**
     * This mode checks if the configuration resources in the policy are in their desired state. No actions are performed if they are not in the desired state. This mode is used for reporting purposes.
     */
    Validation: "VALIDATION",
    /**
     * This mode checks if the configuration resources in the policy are in their desired state, and if not, enforces the desired state.
     */
    Enforcement: "ENFORCEMENT",
} as const;

/**
 * Required. Policy mode
 */
export type OSPolicyMode = (typeof OSPolicyMode)[keyof typeof OSPolicyMode];

export const OSPolicyResourceExecResourceExecInterpreter = {
    /**
     * Invalid value, the request will return validation error.
     */
    InterpreterUnspecified: "INTERPRETER_UNSPECIFIED",
    /**
     * If an interpreter is not specified, the source is executed directly. This execution, without an interpreter, only succeeds for executables and scripts that have shebang lines.
     */
    None: "NONE",
    /**
     * Indicates that the script runs with `/bin/sh` on Linux and `cmd.exe` on Windows.
     */
    Shell: "SHELL",
    /**
     * Indicates that the script runs with PowerShell.
     */
    Powershell: "POWERSHELL",
} as const;

/**
 * Required. The script interpreter to use.
 */
export type OSPolicyResourceExecResourceExecInterpreter = (typeof OSPolicyResourceExecResourceExecInterpreter)[keyof typeof OSPolicyResourceExecResourceExecInterpreter];

export const OSPolicyResourceFileResourceState = {
    /**
     * Unspecified is invalid.
     */
    DesiredStateUnspecified: "DESIRED_STATE_UNSPECIFIED",
    /**
     * Ensure file at path is present.
     */
    Present: "PRESENT",
    /**
     * Ensure file at path is absent.
     */
    Absent: "ABSENT",
    /**
     * Ensure the contents of the file at path matches. If the file does not exist it will be created.
     */
    ContentsMatch: "CONTENTS_MATCH",
} as const;

/**
 * Required. Desired state of the file.
 */
export type OSPolicyResourceFileResourceState = (typeof OSPolicyResourceFileResourceState)[keyof typeof OSPolicyResourceFileResourceState];

export const OSPolicyResourcePackageResourceDesiredState = {
    /**
     * Unspecified is invalid.
     */
    DesiredStateUnspecified: "DESIRED_STATE_UNSPECIFIED",
    /**
     * Ensure that the package is installed.
     */
    Installed: "INSTALLED",
    /**
     * The agent ensures that the package is not installed and uninstalls it if detected.
     */
    Removed: "REMOVED",
} as const;

/**
 * Required. The desired state the agent should maintain for this package.
 */
export type OSPolicyResourcePackageResourceDesiredState = (typeof OSPolicyResourcePackageResourceDesiredState)[keyof typeof OSPolicyResourcePackageResourceDesiredState];

export const OSPolicyResourceRepositoryResourceAptRepositoryArchiveType = {
    /**
     * Unspecified is invalid.
     */
    ArchiveTypeUnspecified: "ARCHIVE_TYPE_UNSPECIFIED",
    /**
     * Deb indicates that the archive contains binary files.
     */
    Deb: "DEB",
    /**
     * Deb-src indicates that the archive contains source files.
     */
    DebSrc: "DEB_SRC",
} as const;

/**
 * Required. Type of archive files in this repository.
 */
export type OSPolicyResourceRepositoryResourceAptRepositoryArchiveType = (typeof OSPolicyResourceRepositoryResourceAptRepositoryArchiveType)[keyof typeof OSPolicyResourceRepositoryResourceAptRepositoryArchiveType];
