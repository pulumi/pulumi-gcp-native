// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AnimationFadeFadeType = {
    /**
     * The fade type is not specified.
     */
    FadeTypeUnspecified: "FADE_TYPE_UNSPECIFIED",
    /**
     * Fade the overlay object into view.
     */
    FadeIn: "FADE_IN",
    /**
     * Fade the overlay object out of view.
     */
    FadeOut: "FADE_OUT",
} as const;

/**
 * Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.
 */
export type AnimationFadeFadeType = (typeof AnimationFadeFadeType)[keyof typeof AnimationFadeFadeType];

export const DashConfigSegmentReferenceScheme = {
    /**
     * The segment reference scheme is not specified.
     */
    SegmentReferenceSchemeUnspecified: "SEGMENT_REFERENCE_SCHEME_UNSPECIFIED",
    /**
     * Explicitly lists the URLs of media files for each segment. For example, if SegmentSettings.individual_segments is `true`, then the manifest contains fields similar to the following: ```xml ... ```
     */
    SegmentList: "SEGMENT_LIST",
    /**
     * SegmentSettings.individual_segments must be set to `true` to use this segment reference scheme. Uses the DASH specification `` tag to determine the URLs of media files for each segment. For example: ```xml ... ```
     */
    SegmentTemplateNumber: "SEGMENT_TEMPLATE_NUMBER",
} as const;

/**
 * The segment reference scheme for a `DASH` manifest. The default is `SEGMENT_LIST`.
 */
export type DashConfigSegmentReferenceScheme = (typeof DashConfigSegmentReferenceScheme)[keyof typeof DashConfigSegmentReferenceScheme];

export const JobMode = {
    /**
     * The job processing mode is not specified.
     */
    ProcessingModeUnspecified: "PROCESSING_MODE_UNSPECIFIED",
    /**
     * The job processing mode is interactive mode. Interactive job will either be ran or rejected if quota does not allow for it.
     */
    ProcessingModeInteractive: "PROCESSING_MODE_INTERACTIVE",
    /**
     * The job processing mode is batch mode. Batch mode allows queuing of jobs.
     */
    ProcessingModeBatch: "PROCESSING_MODE_BATCH",
} as const;

/**
 * The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.
 */
export type JobMode = (typeof JobMode)[keyof typeof JobMode];

export const JobOptimization = {
    /**
     * The optimization strategy is not specified.
     */
    OptimizationStrategyUnspecified: "OPTIMIZATION_STRATEGY_UNSPECIFIED",
    /**
     * Prioritize job processing speed.
     */
    Autodetect: "AUTODETECT",
    /**
     * Disable all optimizations.
     */
    Disabled: "DISABLED",
} as const;

/**
 * Optional. The optimization strategy of the job. The default is `AUTODETECT`.
 */
export type JobOptimization = (typeof JobOptimization)[keyof typeof JobOptimization];

export const ManifestType = {
    /**
     * The manifest type is not specified.
     */
    ManifestTypeUnspecified: "MANIFEST_TYPE_UNSPECIFIED",
    /**
     * Create an HLS manifest. The corresponding file extension is `.m3u8`.
     */
    Hls: "HLS",
    /**
     * Create an MPEG-DASH manifest. The corresponding file extension is `.mpd`.
     */
    Dash: "DASH",
} as const;

/**
 * Required. Type of the manifest.
 */
export type ManifestType = (typeof ManifestType)[keyof typeof ManifestType];
