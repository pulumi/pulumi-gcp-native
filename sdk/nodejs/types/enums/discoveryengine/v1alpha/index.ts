// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ConversationState = {
    /**
     * Unknown.
     */
    StateUnspecified: "STATE_UNSPECIFIED",
    /**
     * Conversation is currently open.
     */
    InProgress: "IN_PROGRESS",
    /**
     * Conversation has been completed.
     */
    Completed: "COMPLETED",
} as const;

/**
 * The state of the Conversation.
 */
export type ConversationState = (typeof ConversationState)[keyof typeof ConversationState];

export const DataStoreContentConfig = {
    /**
     * Default value.
     */
    ContentConfigUnspecified: "CONTENT_CONFIG_UNSPECIFIED",
    /**
     * Only contains documents without any Document.content.
     */
    NoContent: "NO_CONTENT",
    /**
     * Only contains documents with Document.content.
     */
    ContentRequired: "CONTENT_REQUIRED",
    /**
     * The data store is used for public website search.
     */
    PublicWebsite: "PUBLIC_WEBSITE",
} as const;

/**
 * Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
 */
export type DataStoreContentConfig = (typeof DataStoreContentConfig)[keyof typeof DataStoreContentConfig];

export const DataStoreIndustryVertical = {
    /**
     * Value used when unset.
     */
    IndustryVerticalUnspecified: "INDUSTRY_VERTICAL_UNSPECIFIED",
    /**
     * The generic vertical for documents that are not specific to any industry vertical.
     */
    Generic: "GENERIC",
    /**
     * The media industry vertical.
     */
    Media: "MEDIA",
} as const;

/**
 * Immutable. The industry vertical that the data store registers.
 */
export type DataStoreIndustryVertical = (typeof DataStoreIndustryVertical)[keyof typeof DataStoreIndustryVertical];

export const DataStoreSolutionTypesItem = {
    /**
     * Default value.
     */
    SolutionTypeUnspecified: "SOLUTION_TYPE_UNSPECIFIED",
    /**
     * Used for Recommendations AI.
     */
    SolutionTypeRecommendation: "SOLUTION_TYPE_RECOMMENDATION",
    /**
     * Used for Discovery Search.
     */
    SolutionTypeSearch: "SOLUTION_TYPE_SEARCH",
    /**
     * Used for use cases related to the Generative AI agent.
     */
    SolutionTypeChat: "SOLUTION_TYPE_CHAT",
} as const;

export type DataStoreSolutionTypesItem = (typeof DataStoreSolutionTypesItem)[keyof typeof DataStoreSolutionTypesItem];

export const EngineIndustryVertical = {
    /**
     * Value used when unset.
     */
    IndustryVerticalUnspecified: "INDUSTRY_VERTICAL_UNSPECIFIED",
    /**
     * The generic vertical for documents that are not specific to any industry vertical.
     */
    Generic: "GENERIC",
    /**
     * The media industry vertical.
     */
    Media: "MEDIA",
} as const;

/**
 * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
 */
export type EngineIndustryVertical = (typeof EngineIndustryVertical)[keyof typeof EngineIndustryVertical];

export const EngineSolutionType = {
    /**
     * Default value.
     */
    SolutionTypeUnspecified: "SOLUTION_TYPE_UNSPECIFIED",
    /**
     * Used for Recommendations AI.
     */
    SolutionTypeRecommendation: "SOLUTION_TYPE_RECOMMENDATION",
    /**
     * Used for Discovery Search.
     */
    SolutionTypeSearch: "SOLUTION_TYPE_SEARCH",
    /**
     * Used for use cases related to the Generative AI agent.
     */
    SolutionTypeChat: "SOLUTION_TYPE_CHAT",
} as const;

/**
 * Required. The solutions of the engine.
 */
export type EngineSolutionType = (typeof EngineSolutionType)[keyof typeof EngineSolutionType];

export const GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState = {
    /**
     * Unspecified training state.
     */
    TrainingStateUnspecified: "TRAINING_STATE_UNSPECIFIED",
    /**
     * The engine training is paused.
     */
    Paused: "PAUSED",
    /**
     * The engine is training.
     */
    Training: "TRAINING",
} as const;

/**
 * The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before.
 */
export type GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState = (typeof GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState)[keyof typeof GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState];

export const GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem = {
    /**
     * Default value when the enum is unspecified. This is invalid to use.
     */
    SearchAddOnUnspecified: "SEARCH_ADD_ON_UNSPECIFIED",
    /**
     * Large language model add-on.
     */
    SearchAddOnLlm: "SEARCH_ADD_ON_LLM",
} as const;

export type GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem = (typeof GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem)[keyof typeof GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchAddOnsItem];

export const GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier = {
    /**
     * Default value when the enum is unspecified. This is invalid to use.
     */
    SearchTierUnspecified: "SEARCH_TIER_UNSPECIFIED",
    /**
     * Standard tier.
     */
    SearchTierStandard: "SEARCH_TIER_STANDARD",
    /**
     * Enterprise tier.
     */
    SearchTierEnterprise: "SEARCH_TIER_ENTERPRISE",
} as const;

/**
 * The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
 */
export type GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier = (typeof GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier)[keyof typeof GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier];

export const GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem = {
    /**
     * Default value. The summary skipped reason is not specified.
     */
    SummarySkippedReasonUnspecified: "SUMMARY_SKIPPED_REASON_UNSPECIFIED",
    /**
     * The adversarial query ignored case. Only populated when SummarySpec.ignore_adversarial_query is set to `true`.
     */
    AdversarialQueryIgnored: "ADVERSARIAL_QUERY_IGNORED",
    /**
     * The non-summary seeking query ignored case. Only populated when SummarySpec.ignore_non_summary_seeking_query is set to `true`.
     */
    NonSummarySeekingQueryIgnored: "NON_SUMMARY_SEEKING_QUERY_IGNORED",
    /**
     * The out-of-domain query ignored case. Google skips the summary if there are no high-relevance search results. For example, the data store contains facts about company A but the user query is asking questions about company B.
     */
    OutOfDomainQueryIgnored: "OUT_OF_DOMAIN_QUERY_IGNORED",
    /**
     * The potential policy violation case. Google skips the summary if there is a potential policy violation detected. This includes content that may be violent or toxic.
     */
    PotentialPolicyViolation: "POTENTIAL_POLICY_VIOLATION",
    /**
     * The LLM addon not enabled case. Google skips the summary if the LLM addon is not enabled.
     */
    LlmAddonNotEnabled: "LLM_ADDON_NOT_ENABLED",
} as const;

export type GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem = (typeof GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem)[keyof typeof GoogleCloudDiscoveryengineV1alphaSearchResponseSummarySummarySkippedReasonsItem];
