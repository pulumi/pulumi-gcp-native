// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const BareMetalNodePoolConfigOperatingSystem = {
    /**
     * No operating system runtime selected.
     */
    OperatingSystemUnspecified: "OPERATING_SYSTEM_UNSPECIFIED",
    /**
     * Linux operating system.
     */
    Linux: "LINUX",
} as const;

/**
 * Specifies the nodes operating system (default: LINUX).
 */
export type BareMetalNodePoolConfigOperatingSystem = (typeof BareMetalNodePoolConfigOperatingSystem)[keyof typeof BareMetalNodePoolConfigOperatingSystem];

export const BareMetalWorkloadNodeConfigContainerRuntime = {
    /**
     * No container runtime selected.
     */
    ContainerRuntimeUnspecified: "CONTAINER_RUNTIME_UNSPECIFIED",
    /**
     * Containerd runtime.
     */
    Containerd: "CONTAINERD",
} as const;

/**
 * Specifies which container runtime will be used.
 */
export type BareMetalWorkloadNodeConfigContainerRuntime = (typeof BareMetalWorkloadNodeConfigContainerRuntime)[keyof typeof BareMetalWorkloadNodeConfigContainerRuntime];

export const NodeTaintEffect = {
    /**
     * Not set.
     */
    EffectUnspecified: "EFFECT_UNSPECIFIED",
    /**
     * Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.
     */
    NoSchedule: "NO_SCHEDULE",
    /**
     * Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.
     */
    PreferNoSchedule: "PREFER_NO_SCHEDULE",
    /**
     * Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.
     */
    NoExecute: "NO_EXECUTE",
} as const;

/**
 * The taint effect.
 */
export type NodeTaintEffect = (typeof NodeTaintEffect)[keyof typeof NodeTaintEffect];
