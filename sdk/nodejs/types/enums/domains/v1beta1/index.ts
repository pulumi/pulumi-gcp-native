// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AuditLogConfigLogType = {
    /**
     * Default case. Should never be this.
     */
    LogTypeUnspecified: "LOG_TYPE_UNSPECIFIED",
    /**
     * Admin reads. Example: CloudIAM getIamPolicy
     */
    AdminRead: "ADMIN_READ",
    /**
     * Data writes. Example: CloudSQL Users create
     */
    DataWrite: "DATA_WRITE",
    /**
     * Data reads. Example: CloudSQL Users list
     */
    DataRead: "DATA_READ",
} as const;

/**
 * The log type that this config enables.
 */
export type AuditLogConfigLogType = (typeof AuditLogConfigLogType)[keyof typeof AuditLogConfigLogType];

export const ContactSettingsPrivacy = {
    /**
     * The contact privacy settings are undefined.
     */
    ContactPrivacyUnspecified: "CONTACT_PRIVACY_UNSPECIFIED",
    /**
     * All the data from `ContactSettings` is publicly available. When setting this option, you must also provide a `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the request.
     */
    PublicContactData: "PUBLIC_CONTACT_DATA",
    /**
     * Deprecated: For more information, see [Cloud Domains feature deprecation](https://cloud.google.com/domains/docs/deprecations/feature-deprecations) None of the data from `ContactSettings` is publicly available. Instead, proxy contact data is published for your domain. Email sent to the proxy email address is forwarded to the registrant's email address. Cloud Domains provides this privacy proxy service at no additional cost.
     */
    PrivateContactData: "PRIVATE_CONTACT_DATA",
    /**
     * The organization name (if provided) and limited non-identifying data from `ContactSettings` is available to the public (e.g. country and state). The remaining data is marked as `REDACTED FOR PRIVACY` in the WHOIS database. The actual information redacted depends on the domain. For details, see [the registration privacy article](https://support.google.com/domains/answer/3251242).
     */
    RedactedContactData: "REDACTED_CONTACT_DATA",
} as const;

/**
 * Required. Privacy setting for the contacts associated with the `Registration`.
 */
export type ContactSettingsPrivacy = (typeof ContactSettingsPrivacy)[keyof typeof ContactSettingsPrivacy];

export const DsRecordAlgorithm = {
    /**
     * The algorithm is unspecified.
     */
    AlgorithmUnspecified: "ALGORITHM_UNSPECIFIED",
    /**
     * RSA/MD5. Cannot be used for new deployments.
     */
    Rsamd5: "RSAMD5",
    /**
     * Diffie-Hellman. Cannot be used for new deployments.
     */
    Dh: "DH",
    /**
     * DSA/SHA1. Not recommended for new deployments.
     */
    Dsa: "DSA",
    /**
     * ECC. Not recommended for new deployments.
     */
    Ecc: "ECC",
    /**
     * RSA/SHA-1. Not recommended for new deployments.
     */
    Rsasha1: "RSASHA1",
    /**
     * DSA-NSEC3-SHA1. Not recommended for new deployments.
     */
    Dsansec3sha1: "DSANSEC3SHA1",
    /**
     * RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.
     */
    Rsasha1nsec3sha1: "RSASHA1NSEC3SHA1",
    /**
     * RSA/SHA-256.
     */
    Rsasha256: "RSASHA256",
    /**
     * RSA/SHA-512.
     */
    Rsasha512: "RSASHA512",
    /**
     * GOST R 34.10-2001.
     */
    Eccgost: "ECCGOST",
    /**
     * ECDSA Curve P-256 with SHA-256.
     */
    Ecdsap256sha256: "ECDSAP256SHA256",
    /**
     * ECDSA Curve P-384 with SHA-384.
     */
    Ecdsap384sha384: "ECDSAP384SHA384",
    /**
     * Ed25519.
     */
    Ed25519: "ED25519",
    /**
     * Ed448.
     */
    Ed448: "ED448",
    /**
     * Reserved for Indirect Keys. Cannot be used for new deployments.
     */
    Indirect: "INDIRECT",
    /**
     * Private algorithm. Cannot be used for new deployments.
     */
    Privatedns: "PRIVATEDNS",
    /**
     * Private algorithm OID. Cannot be used for new deployments.
     */
    Privateoid: "PRIVATEOID",
} as const;

/**
 * The algorithm used to generate the referenced DNSKEY.
 */
export type DsRecordAlgorithm = (typeof DsRecordAlgorithm)[keyof typeof DsRecordAlgorithm];

export const DsRecordDigestType = {
    /**
     * The DigestType is unspecified.
     */
    DigestTypeUnspecified: "DIGEST_TYPE_UNSPECIFIED",
    /**
     * SHA-1. Not recommended for new deployments.
     */
    Sha1: "SHA1",
    /**
     * SHA-256.
     */
    Sha256: "SHA256",
    /**
     * GOST R 34.11-94.
     */
    Gost3411: "GOST3411",
    /**
     * SHA-384.
     */
    Sha384: "SHA384",
} as const;

/**
 * The hash function used to generate the digest of the referenced DNSKEY.
 */
export type DsRecordDigestType = (typeof DsRecordDigestType)[keyof typeof DsRecordDigestType];

export const GoogleDomainsDnsDsState = {
    /**
     * DS state is unspecified.
     */
    DsStateUnspecified: "DS_STATE_UNSPECIFIED",
    /**
     * DNSSEC is disabled for this domain. No DS records for this domain are published in the parent DNS zone.
     */
    DsRecordsUnpublished: "DS_RECORDS_UNPUBLISHED",
    /**
     * DNSSEC is enabled for this domain. Appropriate DS records for this domain are published in the parent DNS zone. This option is valid only if the DNS zone referenced in the `Registration`'s `dns_provider` field is already DNSSEC-signed.
     */
    DsRecordsPublished: "DS_RECORDS_PUBLISHED",
} as const;

/**
 * Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC.
 */
export type GoogleDomainsDnsDsState = (typeof GoogleDomainsDnsDsState)[keyof typeof GoogleDomainsDnsDsState];

export const ManagementSettingsPreferredRenewalMethod = {
    /**
     * The renewal method is undefined.
     */
    RenewalMethodUnspecified: "RENEWAL_METHOD_UNSPECIFIED",
    /**
     * The domain is automatically renewed each year.
     */
    AutomaticRenewal: "AUTOMATIC_RENEWAL",
    /**
     * Deprecated: For more information, see [Cloud Domains feature deprecation](https://cloud.google.com/domains/docs/deprecations/feature-deprecations) This option was never used. Use RENEWAL_DISABLED instead.
     */
    ManualRenewal: "MANUAL_RENEWAL",
    /**
     * The domain won't be renewed and will expire at its expiration time.
     */
    RenewalDisabled: "RENEWAL_DISABLED",
} as const;

/**
 * Optional. The desired renewal method for this `Registration`. The actual `renewal_method` is automatically updated to reflect this choice. If unset or equal to `RENEWAL_METHOD_UNSPECIFIED`, it will be treated as if it were set to `AUTOMATIC_RENEWAL`. Can't be set to `RENEWAL_DISABLED` during resource creation and can only be updated when the `Registration` resource has state `ACTIVE` or `SUSPENDED`. When `preferred_renewal_method` is set to `AUTOMATIC_RENEWAL` the actual `renewal_method` can be set to `RENEWAL_DISABLED` in case of e.g. problems with the Billing Account or reported domain abuse. In such cases check the `issues` field on the `Registration`. After the problem is resolved the `renewal_method` will be automatically updated to `preferred_renewal_method` in a few hours.
 */
export type ManagementSettingsPreferredRenewalMethod = (typeof ManagementSettingsPreferredRenewalMethod)[keyof typeof ManagementSettingsPreferredRenewalMethod];

export const ManagementSettingsTransferLockState = {
    /**
     * The state is unspecified.
     */
    TransferLockStateUnspecified: "TRANSFER_LOCK_STATE_UNSPECIFIED",
    /**
     * The domain is unlocked and can be transferred to another registrar.
     */
    Unlocked: "UNLOCKED",
    /**
     * The domain is locked and cannot be transferred to another registrar.
     */
    Locked: "LOCKED",
} as const;

/**
 * Controls whether the domain can be transferred to another registrar.
 */
export type ManagementSettingsTransferLockState = (typeof ManagementSettingsTransferLockState)[keyof typeof ManagementSettingsTransferLockState];

export const RegistrationContactNoticesItem = {
    /**
     * The notice is undefined.
     */
    ContactNoticeUnspecified: "CONTACT_NOTICE_UNSPECIFIED",
    /**
     * Required when setting the `privacy` field of `ContactSettings` to `PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
     */
    PublicContactDataAcknowledgement: "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT",
} as const;

export type RegistrationContactNoticesItem = (typeof RegistrationContactNoticesItem)[keyof typeof RegistrationContactNoticesItem];

export const RegistrationDomainNoticesItem = {
    /**
     * The notice is undefined.
     */
    DomainNoticeUnspecified: "DOMAIN_NOTICE_UNSPECIFIED",
    /**
     * Indicates that the domain is preloaded on the HTTP Strict Transport Security list in browsers. Serving a website on such domain requires an SSL certificate. For details, see [how to get an SSL certificate](https://support.google.com/domains/answer/7638036).
     */
    HstsPreloaded: "HSTS_PRELOADED",
} as const;

export type RegistrationDomainNoticesItem = (typeof RegistrationDomainNoticesItem)[keyof typeof RegistrationDomainNoticesItem];
