// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AuditLogConfigLogType = {
    /**
     * Default case. Should never be this.
     */
    LogTypeUnspecified: "LOG_TYPE_UNSPECIFIED",
    /**
     * Admin reads. Example: CloudIAM getIamPolicy
     */
    AdminRead: "ADMIN_READ",
    /**
     * Data writes. Example: CloudSQL Users create
     */
    DataWrite: "DATA_WRITE",
    /**
     * Data reads. Example: CloudSQL Users list
     */
    DataRead: "DATA_READ",
} as const;

/**
 * The log type that this config enables.
 */
export type AuditLogConfigLogType = (typeof AuditLogConfigLogType)[keyof typeof AuditLogConfigLogType];

export const CertificateAuthorityTier = {
    /**
     * Not specified.
     */
    TierUnspecified: "TIER_UNSPECIFIED",
    /**
     * Enterprise tier.
     */
    Enterprise: "ENTERPRISE",
    /**
     * DevOps tier.
     */
    Devops: "DEVOPS",
} as const;

/**
 * Required. Immutable. The Tier of this CertificateAuthority.
 */
export type CertificateAuthorityTier = (typeof CertificateAuthorityTier)[keyof typeof CertificateAuthorityTier];

export const CertificateAuthorityType = {
    /**
     * Not specified.
     */
    TypeUnspecified: "TYPE_UNSPECIFIED",
    /**
     * Self-signed CA.
     */
    SelfSigned: "SELF_SIGNED",
    /**
     * Subordinate CA. Could be issued by a Private CA CertificateAuthority or an unmanaged CA.
     */
    Subordinate: "SUBORDINATE",
} as const;

/**
 * Required. Immutable. The Type of this CertificateAuthority.
 */
export type CertificateAuthorityType = (typeof CertificateAuthorityType)[keyof typeof CertificateAuthorityType];

export const KeyVersionSpecAlgorithm = {
    /**
     * Not specified.
     */
    SignHashAlgorithmUnspecified: "SIGN_HASH_ALGORITHM_UNSPECIFIED",
    /**
     * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256
     */
    RsaPss2048Sha256: "RSA_PSS_2048_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256
     */
    RsaPss3072Sha256: "RSA_PSS_3072_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256
     */
    RsaPss4096Sha256: "RSA_PSS_4096_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256
     */
    RsaPkcs12048Sha256: "RSA_PKCS1_2048_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256
     */
    RsaPkcs13072Sha256: "RSA_PKCS1_3072_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256
     */
    RsaPkcs14096Sha256: "RSA_PKCS1_4096_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256
     */
    EcP256Sha256: "EC_P256_SHA256",
    /**
     * maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384
     */
    EcP384Sha384: "EC_P384_SHA384",
} as const;

/**
 * Required. The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
 */
export type KeyVersionSpecAlgorithm = (typeof KeyVersionSpecAlgorithm)[keyof typeof KeyVersionSpecAlgorithm];

export const PublicKeyType = {
    /**
     * Default unspecified value.
     */
    KeyTypeUnspecified: "KEY_TYPE_UNSPECIFIED",
    /**
     * A PEM-encoded PKCS#1/RFC 3447 RSAPublicKey structure, or an RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing the former.
     */
    PemRsaKey: "PEM_RSA_KEY",
    /**
     * An RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing a PEM-encoded compressed NIST P-256/secp256r1/prime256v1 or P-384 key.
     */
    PemEcKey: "PEM_EC_KEY",
} as const;

/**
 * Optional. The type of public key. If specified, it must match the public key used for the`key` field.
 */
export type PublicKeyType = (typeof PublicKeyType)[keyof typeof PublicKeyType];
