// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ScanConfigErrorCode = {
    /**
     * There is no error.
     */
    CodeUnspecified: "CODE_UNSPECIFIED",
    /**
     * There is no error.
     */
    Ok: "OK",
    /**
     * Indicates an internal server error. Please DO NOT USE THIS ERROR CODE unless the root cause is truly unknown.
     */
    InternalError: "INTERNAL_ERROR",
    /**
     * One of the seed URLs is an App Engine URL but we cannot validate the scan settings due to an App Engine API backend error.
     */
    AppengineApiBackendError: "APPENGINE_API_BACKEND_ERROR",
    /**
     * One of the seed URLs is an App Engine URL but we cannot access the App Engine API to validate scan settings.
     */
    AppengineApiNotAccessible: "APPENGINE_API_NOT_ACCESSIBLE",
    /**
     * One of the seed URLs is an App Engine URL but the Default Host of the App Engine is not set.
     */
    AppengineDefaultHostMissing: "APPENGINE_DEFAULT_HOST_MISSING",
    /**
     * Google corporate accounts can not be used for scanning.
     */
    CannotUseGoogleComAccount: "CANNOT_USE_GOOGLE_COM_ACCOUNT",
    /**
     * The account of the scan creator can not be used for scanning.
     */
    CannotUseOwnerAccount: "CANNOT_USE_OWNER_ACCOUNT",
    /**
     * This scan targets Compute Engine, but we cannot validate scan settings due to a Compute Engine API backend error.
     */
    ComputeApiBackendError: "COMPUTE_API_BACKEND_ERROR",
    /**
     * This scan targets Compute Engine, but we cannot access the Compute Engine API to validate the scan settings.
     */
    ComputeApiNotAccessible: "COMPUTE_API_NOT_ACCESSIBLE",
    /**
     * The Custom Login URL does not belong to the current project.
     */
    CustomLoginUrlDoesNotBelongToCurrentProject: "CUSTOM_LOGIN_URL_DOES_NOT_BELONG_TO_CURRENT_PROJECT",
    /**
     * The Custom Login URL is malformed (can not be parsed).
     */
    CustomLoginUrlMalformed: "CUSTOM_LOGIN_URL_MALFORMED",
    /**
     * The Custom Login URL is mapped to a non-routable IP address in DNS.
     */
    CustomLoginUrlMappedToNonRoutableAddress: "CUSTOM_LOGIN_URL_MAPPED_TO_NON_ROUTABLE_ADDRESS",
    /**
     * The Custom Login URL is mapped to an IP address which is not reserved for the current project.
     */
    CustomLoginUrlMappedToUnreservedAddress: "CUSTOM_LOGIN_URL_MAPPED_TO_UNRESERVED_ADDRESS",
    /**
     * The Custom Login URL has a non-routable IP address.
     */
    CustomLoginUrlHasNonRoutableIpAddress: "CUSTOM_LOGIN_URL_HAS_NON_ROUTABLE_IP_ADDRESS",
    /**
     * The Custom Login URL has an IP address which is not reserved for the current project.
     */
    CustomLoginUrlHasUnreservedIpAddress: "CUSTOM_LOGIN_URL_HAS_UNRESERVED_IP_ADDRESS",
    /**
     * Another scan with the same name (case-sensitive) already exists.
     */
    DuplicateScanName: "DUPLICATE_SCAN_NAME",
    /**
     * A field is set to an invalid value.
     */
    InvalidFieldValue: "INVALID_FIELD_VALUE",
    /**
     * There was an error trying to authenticate to the scan target.
     */
    FailedToAuthenticateToTarget: "FAILED_TO_AUTHENTICATE_TO_TARGET",
    /**
     * Finding type value is not specified in the list findings request.
     */
    FindingTypeUnspecified: "FINDING_TYPE_UNSPECIFIED",
    /**
     * Scan targets Compute Engine, yet current project was not whitelisted for Google Compute Engine Scanning Alpha access.
     */
    ForbiddenToScanCompute: "FORBIDDEN_TO_SCAN_COMPUTE",
    /**
     * User tries to update managed scan
     */
    ForbiddenUpdateToManagedScan: "FORBIDDEN_UPDATE_TO_MANAGED_SCAN",
    /**
     * The supplied filter is malformed. For example, it can not be parsed, does not have a filter type in expression, or the same filter type appears more than once.
     */
    MalformedFilter: "MALFORMED_FILTER",
    /**
     * The supplied resource name is malformed (can not be parsed).
     */
    MalformedResourceName: "MALFORMED_RESOURCE_NAME",
    /**
     * The current project is not in an active state.
     */
    ProjectInactive: "PROJECT_INACTIVE",
    /**
     * A required field is not set.
     */
    RequiredField: "REQUIRED_FIELD",
    /**
     * Project id, scanconfig id, scanrun id, or finding id are not consistent with each other in resource name.
     */
    ResourceNameInconsistent: "RESOURCE_NAME_INCONSISTENT",
    /**
     * The scan being requested to start is already running.
     */
    ScanAlreadyRunning: "SCAN_ALREADY_RUNNING",
    /**
     * The scan that was requested to be stopped is not running.
     */
    ScanNotRunning: "SCAN_NOT_RUNNING",
    /**
     * One of the seed URLs does not belong to the current project.
     */
    SeedUrlDoesNotBelongToCurrentProject: "SEED_URL_DOES_NOT_BELONG_TO_CURRENT_PROJECT",
    /**
     * One of the seed URLs is malformed (can not be parsed).
     */
    SeedUrlMalformed: "SEED_URL_MALFORMED",
    /**
     * One of the seed URLs is mapped to a non-routable IP address in DNS.
     */
    SeedUrlMappedToNonRoutableAddress: "SEED_URL_MAPPED_TO_NON_ROUTABLE_ADDRESS",
    /**
     * One of the seed URLs is mapped to an IP address which is not reserved for the current project.
     */
    SeedUrlMappedToUnreservedAddress: "SEED_URL_MAPPED_TO_UNRESERVED_ADDRESS",
    /**
     * One of the seed URLs has on-routable IP address.
     */
    SeedUrlHasNonRoutableIpAddress: "SEED_URL_HAS_NON_ROUTABLE_IP_ADDRESS",
    /**
     * One of the seed URLs has an IP address that is not reserved for the current project.
     */
    SeedUrlHasUnreservedIpAddress: "SEED_URL_HAS_UNRESERVED_IP_ADDRESS",
    /**
     * The Web Security Scanner service account is not configured under the project.
     */
    ServiceAccountNotConfigured: "SERVICE_ACCOUNT_NOT_CONFIGURED",
    /**
     * A project has reached the maximum number of scans.
     */
    TooManyScans: "TOO_MANY_SCANS",
    /**
     * Resolving the details of the current project fails.
     */
    UnableToResolveProjectInfo: "UNABLE_TO_RESOLVE_PROJECT_INFO",
    /**
     * One or more blacklist patterns were in the wrong format.
     */
    UnsupportedBlacklistPatternFormat: "UNSUPPORTED_BLACKLIST_PATTERN_FORMAT",
    /**
     * The supplied filter is not supported.
     */
    UnsupportedFilter: "UNSUPPORTED_FILTER",
    /**
     * The supplied finding type is not supported. For example, we do not provide findings of the given finding type.
     */
    UnsupportedFindingType: "UNSUPPORTED_FINDING_TYPE",
    /**
     * The URL scheme of one or more of the supplied URLs is not supported.
     */
    UnsupportedUrlScheme: "UNSUPPORTED_URL_SCHEME",
} as const;

/**
 * Indicates the reason code for a configuration failure.
 */
export type ScanConfigErrorCode = (typeof ScanConfigErrorCode)[keyof typeof ScanConfigErrorCode];

export const ScanConfigExportToSecurityCommandCenter = {
    /**
     * Use default, which is ENABLED.
     */
    ExportToSecurityCommandCenterUnspecified: "EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED",
    /**
     * Export results of this scan to Security Command Center.
     */
    Enabled: "ENABLED",
    /**
     * Do not export results of this scan to Security Command Center.
     */
    Disabled: "DISABLED",
} as const;

/**
 * Controls export of scan configurations and results to Security Command Center.
 */
export type ScanConfigExportToSecurityCommandCenter = (typeof ScanConfigExportToSecurityCommandCenter)[keyof typeof ScanConfigExportToSecurityCommandCenter];

export const ScanConfigRiskLevel = {
    /**
     * Use default, which is NORMAL.
     */
    RiskLevelUnspecified: "RISK_LEVEL_UNSPECIFIED",
    /**
     * Normal scanning (Recommended)
     */
    Normal: "NORMAL",
    /**
     * Lower impact scanning
     */
    Low: "LOW",
} as const;

/**
 * The risk level selected for the scan
 */
export type ScanConfigRiskLevel = (typeof ScanConfigRiskLevel)[keyof typeof ScanConfigRiskLevel];

export const ScanConfigTargetPlatformsItem = {
    /**
     * The target platform is unknown. Requests with this enum value will be rejected with INVALID_ARGUMENT error.
     */
    TargetPlatformUnspecified: "TARGET_PLATFORM_UNSPECIFIED",
    /**
     * Google App Engine service.
     */
    AppEngine: "APP_ENGINE",
    /**
     * Google Compute Engine service.
     */
    Compute: "COMPUTE",
    /**
     * Google Cloud Run service.
     */
    CloudRun: "CLOUD_RUN",
    /**
     * Google Cloud Function service.
     */
    CloudFunctions: "CLOUD_FUNCTIONS",
} as const;

export type ScanConfigTargetPlatformsItem = (typeof ScanConfigTargetPlatformsItem)[keyof typeof ScanConfigTargetPlatformsItem];

export const ScanConfigUserAgent = {
    /**
     * The user agent is unknown. Service will default to CHROME_LINUX.
     */
    UserAgentUnspecified: "USER_AGENT_UNSPECIFIED",
    /**
     * Chrome on Linux. This is the service default if unspecified.
     */
    ChromeLinux: "CHROME_LINUX",
    /**
     * Chrome on Android.
     */
    ChromeAndroid: "CHROME_ANDROID",
    /**
     * Safari on IPhone.
     */
    SafariIphone: "SAFARI_IPHONE",
} as const;

/**
 * The user agent used during scanning.
 */
export type ScanConfigUserAgent = (typeof ScanConfigUserAgent)[keyof typeof ScanConfigUserAgent];

export const ScanRunErrorTraceCode = {
    /**
     * Default value is never used.
     */
    CodeUnspecified: "CODE_UNSPECIFIED",
    /**
     * Indicates that the scan run failed due to an internal server error.
     */
    InternalError: "INTERNAL_ERROR",
    /**
     * Indicates a scan configuration error, usually due to outdated ScanConfig settings, such as starting_urls or the DNS configuration.
     */
    ScanConfigIssue: "SCAN_CONFIG_ISSUE",
    /**
     * Indicates an authentication error, usually due to outdated ScanConfig authentication settings.
     */
    AuthenticationConfigIssue: "AUTHENTICATION_CONFIG_ISSUE",
    /**
     * Indicates a scan operation timeout, usually caused by a very large site.
     */
    TimedOutWhileScanning: "TIMED_OUT_WHILE_SCANNING",
    /**
     * Indicates that a scan encountered excessive redirects, either to authentication or some other page outside of the scan scope.
     */
    TooManyRedirects: "TOO_MANY_REDIRECTS",
    /**
     * Indicates that a scan encountered numerous errors from the web site pages. When available, most_common_http_error_code field indicates the most common HTTP error code encountered during the scan.
     */
    TooManyHttpErrors: "TOO_MANY_HTTP_ERRORS",
} as const;

/**
 * Indicates the error reason code.
 */
export type ScanRunErrorTraceCode = (typeof ScanRunErrorTraceCode)[keyof typeof ScanRunErrorTraceCode];

export const ScanRunExecutionState = {
    /**
     * Represents an invalid state caused by internal server error. This value should never be returned.
     */
    ExecutionStateUnspecified: "EXECUTION_STATE_UNSPECIFIED",
    /**
     * The scan is waiting in the queue.
     */
    Queued: "QUEUED",
    /**
     * The scan is in progress.
     */
    Scanning: "SCANNING",
    /**
     * The scan is either finished or stopped by user.
     */
    Finished: "FINISHED",
} as const;

/**
 * The execution state of the ScanRun.
 */
export type ScanRunExecutionState = (typeof ScanRunExecutionState)[keyof typeof ScanRunExecutionState];

export const ScanRunResultState = {
    /**
     * Default value. This value is returned when the ScanRun is not yet finished.
     */
    ResultStateUnspecified: "RESULT_STATE_UNSPECIFIED",
    /**
     * The scan finished without errors.
     */
    Success: "SUCCESS",
    /**
     * The scan finished with errors.
     */
    Error: "ERROR",
    /**
     * The scan was terminated by user.
     */
    Killed: "KILLED",
} as const;

/**
 * The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
 */
export type ScanRunResultState = (typeof ScanRunResultState)[keyof typeof ScanRunResultState];

export const ScanRunWarningTraceCode = {
    /**
     * Default value is never used.
     */
    CodeUnspecified: "CODE_UNSPECIFIED",
    /**
     * Indicates that a scan discovered an unexpectedly low number of URLs. This is sometimes caused by complex navigation features or by using a single URL for numerous pages.
     */
    InsufficientCrawlResults: "INSUFFICIENT_CRAWL_RESULTS",
    /**
     * Indicates that a scan discovered too many URLs to test, or excessive redundant URLs.
     */
    TooManyCrawlResults: "TOO_MANY_CRAWL_RESULTS",
    /**
     * Indicates that too many tests have been generated for the scan. Customer should try reducing the number of starting URLs, increasing the QPS rate, or narrowing down the scope of the scan using the excluded patterns.
     */
    TooManyFuzzTasks: "TOO_MANY_FUZZ_TASKS",
    /**
     * Indicates that a scan is blocked by IAP.
     */
    BlockedByIap: "BLOCKED_BY_IAP",
    /**
     * Indicates that no seed is found for a scan
     */
    NoStartingUrlFoundForManagedScan: "NO_STARTING_URL_FOUND_FOR_MANAGED_SCAN",
} as const;

/**
 * Indicates the warning code.
 */
export type ScanRunWarningTraceCode = (typeof ScanRunWarningTraceCode)[keyof typeof ScanRunWarningTraceCode];
