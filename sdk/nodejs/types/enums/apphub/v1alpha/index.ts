// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AuditLogConfigLogType = {
    /**
     * Default case. Should never be this.
     */
    LogTypeUnspecified: "LOG_TYPE_UNSPECIFIED",
    /**
     * Admin reads. Example: CloudIAM getIamPolicy
     */
    AdminRead: "ADMIN_READ",
    /**
     * Data writes. Example: CloudSQL Users create
     */
    DataWrite: "DATA_WRITE",
    /**
     * Data reads. Example: CloudSQL Users list
     */
    DataRead: "DATA_READ",
} as const;

/**
 * The log type that this config enables.
 */
export type AuditLogConfigLogType = (typeof AuditLogConfigLogType)[keyof typeof AuditLogConfigLogType];

export const CriticalityType = {
    /**
     * Unspecified type.
     */
    TypeUnspecified: "TYPE_UNSPECIFIED",
    /**
     * Mission critical service, application or workload.
     */
    MissionCritical: "MISSION_CRITICAL",
    /**
     * High impact.
     */
    High: "HIGH",
    /**
     * Medium impact.
     */
    Medium: "MEDIUM",
    /**
     * Low impact.
     */
    Low: "LOW",
} as const;

/**
 * Required. Criticality Type.
 */
export type CriticalityType = (typeof CriticalityType)[keyof typeof CriticalityType];

export const EnvironmentType = {
    /**
     * Unspecified type.
     */
    TypeUnspecified: "TYPE_UNSPECIFIED",
    /**
     * Production environment.
     */
    Production: "PRODUCTION",
    /**
     * Staging environment.
     */
    Staging: "STAGING",
    /**
     * Test environment.
     */
    Test: "TEST",
    /**
     * Development environment.
     */
    Development: "DEVELOPMENT",
} as const;

/**
 * Required. Environment Type.
 */
export type EnvironmentType = (typeof EnvironmentType)[keyof typeof EnvironmentType];

export const ScopeType = {
    /**
     * Unspecified type.
     */
    TypeUnspecified: "TYPE_UNSPECIFIED",
    /**
     * Regional type.
     */
    Regional: "REGIONAL",
} as const;

/**
 * Required. Scope Type.
 */
export type ScopeType = (typeof ScopeType)[keyof typeof ScopeType];
