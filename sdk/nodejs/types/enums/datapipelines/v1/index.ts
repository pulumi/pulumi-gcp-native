// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal = {
    /**
     * Run in the default mode.
     */
    FlexrsUnspecified: "FLEXRS_UNSPECIFIED",
    /**
     * Optimize for lower execution time.
     */
    FlexrsSpeedOptimized: "FLEXRS_SPEED_OPTIMIZED",
    /**
     * Optimize for lower cost.
     */
    FlexrsCostOptimized: "FLEXRS_COST_OPTIMIZED",
} as const;

/**
 * Set FlexRS goal for the job. https://cloud.google.com/dataflow/docs/guides/flexrs
 */
export type GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal = (typeof GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal)[keyof typeof GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentFlexrsGoal];

export const GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration = {
    /**
     * The configuration is unknown, or unspecified.
     */
    WorkerIpUnspecified: "WORKER_IP_UNSPECIFIED",
    /**
     * Workers should have public IP addresses.
     */
    WorkerIpPublic: "WORKER_IP_PUBLIC",
    /**
     * Workers should have private IP addresses.
     */
    WorkerIpPrivate: "WORKER_IP_PRIVATE",
} as const;

/**
 * Configuration for VM IPs.
 */
export type GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration = (typeof GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration)[keyof typeof GoogleCloudDatapipelinesV1FlexTemplateRuntimeEnvironmentIpConfiguration];

export const GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfiguration = {
    /**
     * The configuration is unknown, or unspecified.
     */
    WorkerIpUnspecified: "WORKER_IP_UNSPECIFIED",
    /**
     * Workers should have public IP addresses.
     */
    WorkerIpPublic: "WORKER_IP_PUBLIC",
    /**
     * Workers should have private IP addresses.
     */
    WorkerIpPrivate: "WORKER_IP_PRIVATE",
} as const;

/**
 * Configuration for VM IPs.
 */
export type GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfiguration = (typeof GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfiguration)[keyof typeof GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfiguration];

export const PipelineState = {
    /**
     * The pipeline state isn't specified.
     */
    StateUnspecified: "STATE_UNSPECIFIED",
    /**
     * The pipeline is getting started or resumed. When finished, the pipeline state will be 'PIPELINE_STATE_ACTIVE'.
     */
    StateResuming: "STATE_RESUMING",
    /**
     * The pipeline is actively running.
     */
    StateActive: "STATE_ACTIVE",
    /**
     * The pipeline is in the process of stopping. When finished, the pipeline state will be 'PIPELINE_STATE_ARCHIVED'.
     */
    StateStopping: "STATE_STOPPING",
    /**
     * The pipeline has been stopped. This is a terminal state and cannot be undone.
     */
    StateArchived: "STATE_ARCHIVED",
    /**
     * The pipeline is paused. This is a non-terminal state. When the pipeline is paused, it will hold processing jobs, but can be resumed later. For a batch pipeline, this means pausing the scheduler job. For a streaming pipeline, creating a job snapshot to resume from will give the same effect.
     */
    StatePaused: "STATE_PAUSED",
} as const;

/**
 * Required. The state of the pipeline. When the pipeline is created, the state is set to 'PIPELINE_STATE_ACTIVE' by default. State changes can be requested by setting the state to stopping, paused, or resuming. State cannot be changed through UpdatePipeline requests.
 */
export type PipelineState = (typeof PipelineState)[keyof typeof PipelineState];

export const PipelineType = {
    /**
     * The pipeline type isn't specified.
     */
    PipelineTypeUnspecified: "PIPELINE_TYPE_UNSPECIFIED",
    /**
     * A batch pipeline. It runs jobs on a specific schedule, and each job will automatically terminate once execution is finished.
     */
    PipelineTypeBatch: "PIPELINE_TYPE_BATCH",
    /**
     * A streaming pipeline. The underlying job is continuously running until it is manually terminated by the user. This type of pipeline doesn't have a schedule to run on, and the linked job gets created when the pipeline is created.
     */
    PipelineTypeStreaming: "PIPELINE_TYPE_STREAMING",
} as const;

/**
 * Required. The type of the pipeline. This field affects the scheduling of the pipeline and the type of metrics to show for the pipeline.
 */
export type PipelineType = (typeof PipelineType)[keyof typeof PipelineType];
