// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Scan authentication configuration.
 */
export interface AuthenticationArgs {
    /**
     * Authentication using a custom account.
     */
    customAccount?: pulumi.Input<inputs.websecurityscanner.v1beta.CustomAccountArgs>;
    /**
     * Authentication using a Google account.
     */
    googleAccount?: pulumi.Input<inputs.websecurityscanner.v1beta.GoogleAccountArgs>;
    /**
     * Authentication using Identity-Aware-Proxy (IAP).
     */
    iapCredential?: pulumi.Input<inputs.websecurityscanner.v1beta.IapCredentialArgs>;
}

/**
 * Describes authentication configuration that uses a custom account.
 */
export interface CustomAccountArgs {
    /**
     * The login form URL of the website.
     */
    loginUrl: pulumi.Input<string>;
    /**
     * Input only. The password of the custom account. The credential is stored encrypted and not returned in any response nor included in audit logs.
     */
    password: pulumi.Input<string>;
    /**
     * The user name of the custom account.
     */
    username: pulumi.Input<string>;
}

/**
 * Describes authentication configuration that uses a Google account.
 */
export interface GoogleAccountArgs {
    /**
     * Input only. The password of the Google account. The credential is stored encrypted and not returned in any response nor included in audit logs.
     */
    password: pulumi.Input<string>;
    /**
     * The user name of the Google account.
     */
    username: pulumi.Input<string>;
}

/**
 * Describes authentication configuration for Identity-Aware-Proxy (IAP).
 */
export interface IapCredentialArgs {
    /**
     * Authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
     */
    iapTestServiceAccountInfo?: pulumi.Input<inputs.websecurityscanner.v1beta.IapTestServiceAccountInfoArgs>;
}

/**
 * Describes authentication configuration when Web-Security-Scanner service account is added in Identity-Aware-Proxy (IAP) access policies.
 */
export interface IapTestServiceAccountInfoArgs {
    /**
     * Describes OAuth2 Client ID of resources protected by Identity-Aware-Proxy(IAP).
     */
    targetAudienceClientId: pulumi.Input<string>;
}

/**
 * Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
 */
export interface ScanConfigErrorArgs {
    /**
     * Indicates the reason code for a configuration failure.
     */
    code?: pulumi.Input<enums.websecurityscanner.v1beta.ScanConfigErrorCode>;
    /**
     * Indicates the full name of the ScanConfig field that triggers this error, for example "scan_config.max_qps". This field is provided for troubleshooting purposes only and its actual value can change in the future.
     */
    fieldName?: pulumi.Input<string>;
}

/**
 * A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
 */
export interface ScanRunArgs {
    /**
     * The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
     */
    endTime?: pulumi.Input<string>;
    /**
     * If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
     */
    errorTrace?: pulumi.Input<inputs.websecurityscanner.v1beta.ScanRunErrorTraceArgs>;
    /**
     * The execution state of the ScanRun.
     */
    executionState?: pulumi.Input<enums.websecurityscanner.v1beta.ScanRunExecutionState>;
    /**
     * Whether the scan run has found any vulnerabilities.
     */
    hasVulnerabilities?: pulumi.Input<boolean>;
    /**
     * The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
     */
    name?: pulumi.Input<string>;
    /**
     * The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
     */
    progressPercent?: pulumi.Input<number>;
    /**
     * The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
     */
    resultState?: pulumi.Input<enums.websecurityscanner.v1beta.ScanRunResultState>;
    /**
     * The time at which the ScanRun started.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
     */
    urlsCrawledCount?: pulumi.Input<string>;
    /**
     * The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
     */
    urlsTestedCount?: pulumi.Input<string>;
    /**
     * A list of warnings, if such are encountered during this scan run.
     */
    warningTraces?: pulumi.Input<pulumi.Input<inputs.websecurityscanner.v1beta.ScanRunWarningTraceArgs>[]>;
}

/**
 * Output only. Defines an error trace message for a ScanRun.
 */
export interface ScanRunErrorTraceArgs {
    /**
     * Indicates the error reason code.
     */
    code?: pulumi.Input<enums.websecurityscanner.v1beta.ScanRunErrorTraceCode>;
    /**
     * If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
     */
    mostCommonHttpErrorCode?: pulumi.Input<number>;
    /**
     * If the scan encounters SCAN_CONFIG_ISSUE error, this field has the error message encountered during scan configuration validation that is performed before each scan run.
     */
    scanConfigError?: pulumi.Input<inputs.websecurityscanner.v1beta.ScanConfigErrorArgs>;
}

/**
 * Output only. Defines a warning trace message for ScanRun. Warning traces provide customers with useful information that helps make the scanning process more effective.
 */
export interface ScanRunWarningTraceArgs {
    /**
     * Indicates the warning code.
     */
    code?: pulumi.Input<enums.websecurityscanner.v1beta.ScanRunWarningTraceCode>;
}

/**
 * Scan schedule configuration.
 */
export interface ScheduleArgs {
    /**
     * The duration of time between executions in days.
     */
    intervalDurationDays: pulumi.Input<number>;
    /**
     * A timestamp indicates when the next run will be scheduled. The value is refreshed by the server after each run. If unspecified, it will default to current server time, which means the scan will be scheduled to start immediately.
     */
    scheduleTime?: pulumi.Input<string>;
}

