// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Defines a policy of allowing every region by default and adding disallowed regions to a disallow list.
 */
export interface GoogleCloudIdentitytoolkitAdminV2AllowByDefaultArgs {
    /**
     * Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     */
    disallowedRegions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Defines a policy of only allowing regions by explicitly adding them to an allowlist.
 */
export interface GoogleCloudIdentitytoolkitAdminV2AllowlistOnlyArgs {
    /**
     * Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     */
    allowedRegions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Additional config for SignInWithApple.
 */
export interface GoogleCloudIdentitytoolkitAdminV2AppleSignInConfigArgs {
    /**
     * A list of Bundle ID's usable by this project
     */
    bundleIds?: pulumi.Input<pulumi.Input<string>[]>;
    codeFlowConfig?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs>;
}

/**
 * Options related to how clients making requests on behalf of a tenant should be configured.
 */
export interface GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs {
    /**
     * Configuration related to restricting a user's ability to affect their account.
     */
    permissions?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs>;
}

/**
 * Configuration related to restricting a user's ability to affect their account.
 */
export interface GoogleCloudIdentitytoolkitAdminV2ClientPermissionsArgs {
    /**
     * When true, end users cannot delete their account on the associated project through any of our API methods
     */
    disabledUserDeletion?: pulumi.Input<boolean>;
    /**
     * When true, end users cannot sign up for a new account on the associated project through any of our API methods
     */
    disabledUserSignup?: pulumi.Input<boolean>;
}

/**
 * Additional config for Apple for code flow.
 */
export interface GoogleCloudIdentitytoolkitAdminV2CodeFlowConfigArgs {
    /**
     * Key ID for the private key.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Private key used for signing the client secret JWT.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Apple Developer Team ID.
     */
    teamId?: pulumi.Input<string>;
}

/**
 * The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
 */
export interface GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs {
    /**
     * The x509 certificate
     */
    x509Certificate?: pulumi.Input<string>;
}

/**
 * The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
 */
export interface GoogleCloudIdentitytoolkitAdminV2IdpConfigArgs {
    /**
     * IDP's public keys for verifying signature in the assertions.
     */
    idpCertificates?: pulumi.Input<pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2IdpCertificateArgs>[]>;
    /**
     * Unique identifier for all SAML entities.
     */
    idpEntityId?: pulumi.Input<string>;
    /**
     * Indicates if outbounding SAMLRequest should be signed.
     */
    signRequest?: pulumi.Input<boolean>;
    /**
     * URL to send Authentication request to.
     */
    ssoUrl?: pulumi.Input<string>;
}

/**
 * Settings that the tenants will inherit from project level.
 */
export interface GoogleCloudIdentitytoolkitAdminV2InheritanceArgs {
    /**
     * Whether to allow the tenant to inherit custom domains, email templates, and custom SMTP settings. If true, email sent from tenant will follow the project level email sending configurations. If false (by default), emails will go with the default settings with no customizations.
     */
    emailSendingConfig?: pulumi.Input<boolean>;
}

/**
 * Configuration related to monitoring project activity.
 */
export interface GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs {
    /**
     * Configuration for logging requests made to this project to Stackdriver Logging
     */
    requestLogging?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs>;
}

/**
 * Options related to MultiFactor Authentication for the project.
 */
export interface GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs {
    /**
     * A list of usable second factors for this project.
     */
    enabledProviders?: pulumi.Input<pulumi.Input<enums.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersItem>[]>;
    /**
     * Whether MultiFactor Authentication has been enabled for this project.
     */
    state?: pulumi.Input<enums.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigState>;
}

/**
 * The response type to request for in the OAuth authorization flow. You can set either `id_token` or `code` to true, but not both. Setting both types to be simultaneously true (`{code: true, id_token: true}`) is not yet supported. See https://openid.net/specs/openid-connect-core-1_0.html#Authentication for a mapping of response type to OAuth 2.0 flow.
 */
export interface GoogleCloudIdentitytoolkitAdminV2OAuthResponseTypeArgs {
    /**
     * If true, authorization code is returned from IdP's authorization endpoint.
     */
    code?: pulumi.Input<boolean>;
    /**
     * If true, ID token is returned from IdP's authorization endpoint.
     */
    idToken?: pulumi.Input<boolean>;
    /**
     * Do not use. The `token` response type is not supported at the moment.
     */
    token?: pulumi.Input<boolean>;
}

/**
 * Configuration for logging requests made to this project to Stackdriver Logging
 */
export interface GoogleCloudIdentitytoolkitAdminV2RequestLoggingArgs {
    /**
     * Whether logging is enabled for this project or not.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the calling code of the destination phone number.
 */
export interface GoogleCloudIdentitytoolkitAdminV2SmsRegionConfigArgs {
    /**
     * A policy of allowing SMS to every region by default and adding disallowed regions to a disallow list.
     */
    allowByDefault?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2AllowByDefaultArgs>;
    /**
     * A policy of only allowing regions by explicitly adding them to an allowlist.
     */
    allowlistOnly?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2AllowlistOnlyArgs>;
}

/**
 * The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
 */
export interface GoogleCloudIdentitytoolkitAdminV2SpConfigArgs {
    /**
     * Callback URI where responses from IDP are handled.
     */
    callbackUri?: pulumi.Input<string>;
    /**
     * Unique identifier for all SAML entities.
     */
    spEntityId?: pulumi.Input<string>;
}

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
 */
export interface GoogleIamV1AuditConfigArgs {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.identitytoolkit.v2.GoogleIamV1AuditLogConfigArgs>[]>;
    /**
     * Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
     */
    service?: pulumi.Input<string>;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface GoogleIamV1AuditLogConfigArgs {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log type that this config enables.
     */
    logType?: pulumi.Input<enums.identitytoolkit.v2.GoogleIamV1AuditLogConfigLogType>;
}

/**
 * Associates `members`, or principals, with a `role`.
 */
export interface GoogleIamV1BindingArgs {
    /**
     * The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.identitytoolkit.v2.GoogleTypeExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. 
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
     */
    role?: pulumi.Input<string>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface GoogleTypeExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

