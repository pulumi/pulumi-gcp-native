// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Represents an 'access point' for the share.
 */
export interface AllowedClientArgs {
    /**
     * Allow dev flag. Which controls whether to allow creation of devices.
     */
    allowDev?: pulumi.Input<boolean>;
    /**
     * Allow the setuid flag.
     */
    allowSuid?: pulumi.Input<boolean>;
    /**
     * The subnet of IP addresses permitted to access the share.
     */
    allowedClientsCidr?: pulumi.Input<string>;
    /**
     * Mount permissions.
     */
    mountPermissions?: pulumi.Input<enums.baremetalsolution.v2.AllowedClientMountPermissions>;
    /**
     * The network the access point sits on.
     */
    network?: pulumi.Input<string>;
    /**
     * Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     */
    noRootSquash?: pulumi.Input<boolean>;
}

/**
 * Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
 */
export interface GoogleCloudBaremetalsolutionV2LogicalInterfaceArgs {
    /**
     * The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
     *
     * @deprecated The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
     */
    interfaceIndex?: pulumi.Input<number>;
    /**
     * List of logical network interfaces within a logical interface.
     */
    logicalNetworkInterfaces?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.LogicalNetworkInterfaceArgs>[]>;
    /**
     * Interface name. This is of syntax or and forms part of the network template name.
     */
    name?: pulumi.Input<string>;
}

/**
 * Configuration parameters for a new instance.
 */
export interface InstanceConfigArgs {
    /**
     * If true networks can be from different projects of the same vendor account.
     */
    accountNetworksEnabled?: pulumi.Input<boolean>;
    /**
     * Client network address. Filled if InstanceConfig.multivlan_config is false.
     */
    clientNetwork?: pulumi.Input<inputs.baremetalsolution.v2.NetworkAddressArgs>;
    /**
     * Whether the instance should be provisioned with Hyperthreading enabled.
     */
    hyperthreading?: pulumi.Input<boolean>;
    /**
     * A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
     */
    id?: pulumi.Input<string>;
    /**
     * Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     */
    instanceType?: pulumi.Input<string>;
    /**
     * List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
     */
    logicalInterfaces?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.GoogleCloudBaremetalsolutionV2LogicalInterfaceArgs>[]>;
    /**
     * The type of network configuration on the instance.
     */
    networkConfig?: pulumi.Input<enums.baremetalsolution.v2.InstanceConfigNetworkConfig>;
    /**
     * Server network template name. Filled if InstanceConfig.multivlan_config is true.
     */
    networkTemplate?: pulumi.Input<string>;
    /**
     * OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     */
    osImage?: pulumi.Input<string>;
    /**
     * Private network address, if any. Filled if InstanceConfig.multivlan_config is false.
     */
    privateNetwork?: pulumi.Input<inputs.baremetalsolution.v2.NetworkAddressArgs>;
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team .
     */
    userNote?: pulumi.Input<string>;
}

/**
 * A GCP vlan attachment.
 */
export interface IntakeVlanAttachmentArgs {
    /**
     * Identifier of the VLAN attachment.
     */
    id?: pulumi.Input<string>;
    /**
     * Attachment pairing key.
     */
    pairingKey?: pulumi.Input<string>;
}

/**
 * Each logical network interface is effectively a network and IP pair.
 */
export interface LogicalNetworkInterfaceArgs {
    /**
     * Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
     */
    defaultGateway?: pulumi.Input<boolean>;
    /**
     * An identifier for the `Network`, generated by the backend.
     */
    id?: pulumi.Input<string>;
    /**
     * IP address in the network
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Name of the network
     */
    network?: pulumi.Input<string>;
    /**
     * Type of network.
     */
    networkType?: pulumi.Input<enums.baremetalsolution.v2.LogicalNetworkInterfaceNetworkType>;
}

/**
 * A storage volume logical unit number (LUN).
 */
export interface LunArgs {
    /**
     * Display if this LUN is a boot LUN.
     */
    bootLun?: pulumi.Input<boolean>;
    /**
     * An identifier for the LUN, generated by the backend.
     */
    id?: pulumi.Input<string>;
    /**
     * The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
     */
    multiprotocolType?: pulumi.Input<enums.baremetalsolution.v2.LunMultiprotocolType>;
    /**
     * Display if this LUN can be shared between multiple physical servers.
     */
    shareable?: pulumi.Input<boolean>;
    /**
     * The size of this LUN, in gigabytes.
     */
    sizeGb?: pulumi.Input<string>;
    /**
     * The state of this storage volume.
     */
    state?: pulumi.Input<enums.baremetalsolution.v2.LunState>;
    /**
     * The storage type for this LUN.
     */
    storageType?: pulumi.Input<enums.baremetalsolution.v2.LunStorageType>;
    /**
     * Display the storage volume for this LUN.
     */
    storageVolume?: pulumi.Input<string>;
    /**
     * The WWID for this LUN.
     */
    wwid?: pulumi.Input<string>;
}

/**
 * A LUN(Logical Unit Number) range.
 */
export interface LunRangeArgs {
    /**
     * Number of LUNs to create.
     */
    quantity?: pulumi.Input<number>;
    /**
     * The requested size of each LUN, in GB.
     */
    sizeGb?: pulumi.Input<number>;
}

/**
 * A network.
 */
export interface NetworkAddressArgs {
    /**
     * IPv4 address to be assigned to the server.
     */
    address?: pulumi.Input<string>;
    /**
     * Name of the existing network to use.
     */
    existingNetworkId?: pulumi.Input<string>;
    /**
     * Id of the network to use, within the same ProvisioningConfig request.
     */
    networkId?: pulumi.Input<string>;
}

/**
 * Configuration parameters for a new network.
 */
export interface NetworkConfigArgs {
    /**
     * Interconnect bandwidth. Set only when type is CLIENT.
     */
    bandwidth?: pulumi.Input<enums.baremetalsolution.v2.NetworkConfigBandwidth>;
    /**
     * CIDR range of the network.
     */
    cidr?: pulumi.Input<string>;
    /**
     * The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
     */
    gcpService?: pulumi.Input<string>;
    /**
     * A transient unique identifier to identify a volume within an ProvisioningConfig request.
     */
    id?: pulumi.Input<string>;
    /**
     * The JumboFramesEnabled option for customer to set.
     */
    jumboFramesEnabled?: pulumi.Input<boolean>;
    /**
     * Service CIDR, if any.
     */
    serviceCidr?: pulumi.Input<enums.baremetalsolution.v2.NetworkConfigServiceCidr>;
    /**
     * The type of this network, either Client or Private.
     */
    type?: pulumi.Input<enums.baremetalsolution.v2.NetworkConfigType>;
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team .
     */
    userNote?: pulumi.Input<string>;
    /**
     * List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
     */
    vlanAttachments?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.IntakeVlanAttachmentArgs>[]>;
    /**
     * Whether the VLAN attachment pair is located in the same project.
     */
    vlanSameProject?: pulumi.Input<boolean>;
}

/**
 * A NFS export entry.
 */
export interface NfsExportArgs {
    /**
     * Allow dev flag in NfsShare AllowedClientsRequest.
     */
    allowDev?: pulumi.Input<boolean>;
    /**
     * Allow the setuid flag.
     */
    allowSuid?: pulumi.Input<boolean>;
    /**
     * A CIDR range.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
     */
    machineId?: pulumi.Input<string>;
    /**
     * Network to use to publish the export.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     */
    noRootSquash?: pulumi.Input<boolean>;
    /**
     * Export permissions.
     */
    permissions?: pulumi.Input<enums.baremetalsolution.v2.NfsExportPermissions>;
}

/**
 * Details about snapshot space reservation and usage on the storage volume.
 */
export interface SnapshotReservationDetailArgs {
    /**
     * The space on this storage volume reserved for snapshots, shown in GiB.
     */
    reservedSpaceGib?: pulumi.Input<string>;
    /**
     * Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.
     */
    reservedSpacePercent?: pulumi.Input<number>;
    /**
     * The amount, in GiB, of available space in this storage volume's reserved snapshot space.
     */
    reservedSpaceRemainingGib?: pulumi.Input<string>;
    /**
     * The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.
     */
    reservedSpaceUsedPercent?: pulumi.Input<number>;
}

/**
 * A storage volume.
 */
export interface VolumeArgs {
    /**
     * The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.
     */
    autoGrownSizeGib?: pulumi.Input<string>;
    /**
     * The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.
     */
    currentSizeGib?: pulumi.Input<string>;
    /**
     * Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.
     */
    emergencySizeGib?: pulumi.Input<string>;
    /**
     * An identifier for the `Volume`, generated by the backend.
     */
    id?: pulumi.Input<string>;
    /**
     * Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Maximum size volume can be expanded to in case of evergency, in GiB.
     */
    maxSizeGib?: pulumi.Input<string>;
    /**
     * Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.
     */
    notes?: pulumi.Input<string>;
    /**
     * Originally requested size, in GiB.
     */
    originallyRequestedSizeGib?: pulumi.Input<string>;
    /**
     * Immutable. Performance tier of the Volume. Default is SHARED.
     */
    performanceTier?: pulumi.Input<enums.baremetalsolution.v2.VolumePerformanceTier>;
    /**
     * Immutable. Pod name.
     */
    pod?: pulumi.Input<string>;
    /**
     * The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.
     */
    remainingSpaceGib?: pulumi.Input<string>;
    /**
     * The requested size of this storage volume, in GiB.
     */
    requestedSizeGib?: pulumi.Input<string>;
    /**
     * The behavior to use when snapshot reserved space is full.
     */
    snapshotAutoDeleteBehavior?: pulumi.Input<enums.baremetalsolution.v2.VolumeSnapshotAutoDeleteBehavior>;
    /**
     * Whether snapshots are enabled.
     */
    snapshotEnabled?: pulumi.Input<boolean>;
    /**
     * Details about snapshot space reservation and usage on the storage volume.
     */
    snapshotReservationDetail?: pulumi.Input<inputs.baremetalsolution.v2.SnapshotReservationDetailArgs>;
    /**
     * The name of the snapshot schedule policy in use for this volume, if any.
     */
    snapshotSchedulePolicy?: pulumi.Input<string>;
    /**
     * The state of this storage volume.
     */
    state?: pulumi.Input<enums.baremetalsolution.v2.VolumeState>;
    /**
     * The storage type for this volume.
     */
    storageType?: pulumi.Input<enums.baremetalsolution.v2.VolumeStorageType>;
}

/**
 * Configuration parameters for a new volume.
 */
export interface VolumeConfigArgs {
    /**
     * The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
     */
    gcpService?: pulumi.Input<string>;
    /**
     * A transient unique identifier to identify a volume within an ProvisioningConfig request.
     */
    id?: pulumi.Input<string>;
    /**
     * LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
     */
    lunRanges?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.LunRangeArgs>[]>;
    /**
     * Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
     */
    machineIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NFS exports. Set only when protocol is PROTOCOL_NFS.
     */
    nfsExports?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.NfsExportArgs>[]>;
    /**
     * Performance tier of the Volume. Default is SHARED.
     */
    performanceTier?: pulumi.Input<enums.baremetalsolution.v2.VolumeConfigPerformanceTier>;
    /**
     * Volume protocol.
     */
    protocol?: pulumi.Input<enums.baremetalsolution.v2.VolumeConfigProtocol>;
    /**
     * The requested size of this volume, in GB.
     */
    sizeGb?: pulumi.Input<number>;
    /**
     * Whether snapshots should be enabled.
     */
    snapshotsEnabled?: pulumi.Input<boolean>;
    /**
     * The type of this Volume.
     */
    type?: pulumi.Input<enums.baremetalsolution.v2.VolumeConfigType>;
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team .
     */
    userNote?: pulumi.Input<string>;
}

