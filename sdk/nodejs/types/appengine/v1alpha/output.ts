// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * An SSL certificate obtained from a certificate authority.
 */
export interface CertificateRawDataResponse {
    /**
     * Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY----- @InputOnly
     */
    privateKey: string;
    /**
     * PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- 
     */
    publicCertificate: string;
}

/**
 * A certificate managed by App Engine.
 */
export interface ManagedCertificateResponse {
    /**
     * Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.
     */
    lastRenewalTime: string;
    /**
     * Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.
     */
    status: string;
}

/**
 * A DNS resource record.
 */
export interface ResourceRecordResponse {
    /**
     * Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'.
     */
    name: string;
    /**
     * Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
     */
    rrdata: string;
    /**
     * Resource record type. Example: AAAA.
     */
    type: string;
}

/**
 * SSL configuration for a DomainMapping resource.
 */
export interface SslSettingsResponse {
    /**
     * ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345.
     */
    certificateId: string;
    /**
     * Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.
     */
    isManagedCertificate: boolean;
}

