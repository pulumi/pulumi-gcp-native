// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * An access-control entry.
 */
export interface BucketAccessControlArgs {
    /**
     * The name of the bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The domain associated with the entity, if any.
     */
    domain?: pulumi.Input<string>;
    /**
     * The email address associated with the entity, if any.
     */
    email?: pulumi.Input<string>;
    /**
     * The entity holding the permission, in one of the following forms: 
     * - user-userId 
     * - user-email 
     * - group-groupId 
     * - group-email 
     * - domain-domain 
     * - project-team-projectId 
     * - allUsers 
     * - allAuthenticatedUsers Examples: 
     * - The user liz@example.com would be user-liz@example.com. 
     * - The group example@googlegroups.com would be group-example@googlegroups.com. 
     * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
     */
    entity?: pulumi.Input<string>;
    /**
     * The ID for the entity, if any.
     */
    entityId?: pulumi.Input<string>;
    /**
     * HTTP 1.1 Entity tag for the access-control entry.
     */
    etag?: pulumi.Input<string>;
    /**
     * The ID of the access-control entry.
     */
    id?: pulumi.Input<string>;
    /**
     * The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
     */
    kind?: pulumi.Input<string>;
    /**
     * The project team associated with the entity, if any.
     */
    projectTeam?: pulumi.Input<inputs.storage.v1.BucketAccessControlProjectTeamArgs>;
    /**
     * The access permission for the entity.
     */
    role?: pulumi.Input<string>;
    /**
     * The link to this access-control entry.
     */
    selfLink?: pulumi.Input<string>;
}

/**
 * The project team associated with the entity, if any.
 */
export interface BucketAccessControlProjectTeamArgs {
    /**
     * The project number.
     */
    projectNumber?: pulumi.Input<string>;
    /**
     * The team.
     */
    team?: pulumi.Input<string>;
}

/**
 * The bucket's Autoclass configuration.
 */
export interface BucketAutoclassArgs {
    /**
     * Whether or not Autoclass is enabled on this bucket
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A date and time in RFC 3339 format representing the instant at which "enabled" was last toggled.
     */
    toggleTime?: pulumi.Input<string>;
}

/**
 * The bucket's billing configuration.
 */
export interface BucketBillingArgs {
    /**
     * When set to true, Requester Pays is enabled for this bucket.
     */
    requesterPays?: pulumi.Input<boolean>;
}

export interface BucketCorsItemArgs {
    /**
     * The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.
     */
    maxAgeSeconds?: pulumi.Input<number>;
    /**
     * The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
     */
    method?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
     */
    origin?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
     */
    responseHeader?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The bucket's custom placement configuration for Custom Dual Regions.
 */
export interface BucketCustomPlacementConfigArgs {
    /**
     * The list of regional locations in which data is placed.
     */
    dataLocations?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * Encryption configuration for a bucket.
 */
export interface BucketEncryptionArgs {
    /**
     * A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
     */
    defaultKmsKeyName?: pulumi.Input<string>;
}

/**
 * The bucket's IAM configuration.
 */
export interface BucketIamConfigurationArgs {
    /**
     * The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     */
    bucketPolicyOnly?: pulumi.Input<inputs.storage.v1.BucketIamConfigurationBucketPolicyOnlyArgs>;
    /**
     * The bucket's Public Access Prevention configuration. Currently, 'inherited' and 'enforced' are supported.
     */
    publicAccessPrevention?: pulumi.Input<string>;
    /**
     * The bucket's uniform bucket-level access configuration.
     */
    uniformBucketLevelAccess?: pulumi.Input<inputs.storage.v1.BucketIamConfigurationUniformBucketLevelAccessArgs>;
}

/**
 * The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
 */
export interface BucketIamConfigurationBucketPolicyOnlyArgs {
    /**
     * If set, access is controlled only by bucket-level or above IAM policies.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable.
     */
    lockedTime?: pulumi.Input<string>;
}

/**
 * The bucket's uniform bucket-level access configuration.
 */
export interface BucketIamConfigurationUniformBucketLevelAccessArgs {
    /**
     * If set, access is controlled only by bucket-level or above IAM policies.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable.
     */
    lockedTime?: pulumi.Input<string>;
}

export interface BucketIamPolicyBindingsItemArgs {
    /**
     * The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
     */
    condition?: pulumi.Input<inputs.storage.v1.ExprArgs>;
    /**
     * A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  
     * - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  
     * - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  
     * - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  
     * - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  
     * - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  
     * - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  
     * - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  
     * - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  
     * - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
     * The new IAM roles are:  
     * - roles/storage.admin — Full control of Google Cloud Storage resources.  
     * - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  
     * - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  
     * - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  
     * - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  
     * - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  
     * - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  
     * - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  
     * - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
     */
    role?: pulumi.Input<string>;
}

/**
 * The bucket's lifecycle configuration. See lifecycle management for more information.
 */
export interface BucketLifecycleArgs {
    /**
     * A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
     */
    rule?: pulumi.Input<pulumi.Input<inputs.storage.v1.BucketLifecycleRuleItemArgs>[]>;
}

export interface BucketLifecycleRuleItemArgs {
    /**
     * The action to take.
     */
    action?: pulumi.Input<inputs.storage.v1.BucketLifecycleRuleItemActionArgs>;
    /**
     * The condition(s) under which the action will be taken.
     */
    condition?: pulumi.Input<inputs.storage.v1.BucketLifecycleRuleItemConditionArgs>;
}

/**
 * The action to take.
 */
export interface BucketLifecycleRuleItemActionArgs {
    /**
     * Target storage class. Required iff the type of the action is SetStorageClass.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * Type of the action. Currently, only Delete, SetStorageClass, and AbortIncompleteMultipartUpload are supported.
     */
    type?: pulumi.Input<string>;
}

/**
 * The condition(s) under which the action will be taken.
 */
export interface BucketLifecycleRuleItemConditionArgs {
    /**
     * Age of an object (in days). This condition is satisfied when an object reaches the specified age.
     */
    age?: pulumi.Input<number>;
    /**
     * A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
     */
    createdBefore?: pulumi.Input<string>;
    /**
     * A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the custom time on an object is before this date in UTC.
     */
    customTimeBefore?: pulumi.Input<string>;
    /**
     * Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply.
     */
    daysSinceCustomTime?: pulumi.Input<number>;
    /**
     * Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent.
     */
    daysSinceNoncurrentTime?: pulumi.Input<number>;
    /**
     * Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
     */
    isLive?: pulumi.Input<boolean>;
    /**
     * A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the "Early Access" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released.
     */
    matchesPattern?: pulumi.Input<string>;
    /**
     * List of object name prefixes. This condition will be satisfied when at least one of the prefixes exactly matches the beginning of the object name.
     */
    matchesPrefix?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
     */
    matchesStorageClass?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of object name suffixes. This condition will be satisfied when at least one of the suffixes exactly matches the end of the object name.
     */
    matchesSuffix?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects.
     */
    noncurrentTimeBefore?: pulumi.Input<string>;
    /**
     * Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
     */
    numNewerVersions?: pulumi.Input<number>;
}

/**
 * The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
 */
export interface BucketLoggingArgs {
    /**
     * The destination bucket where the current bucket's logs should be placed.
     */
    logBucket?: pulumi.Input<string>;
    /**
     * A prefix for log object names.
     */
    logObjectPrefix?: pulumi.Input<string>;
}

/**
 * Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
 */
export interface BucketObjectCustomerEncryptionArgs {
    /**
     * The encryption algorithm.
     */
    encryptionAlgorithm?: pulumi.Input<string>;
    /**
     * SHA256 hash value of the encryption key.
     */
    keySha256?: pulumi.Input<string>;
}

/**
 * The owner of the object. This will always be the uploader of the object.
 */
export interface BucketObjectOwnerArgs {
    /**
     * The entity, in the form user-userId.
     */
    entity?: pulumi.Input<string>;
    /**
     * The ID for the entity.
     */
    entityId?: pulumi.Input<string>;
}

/**
 * The owner of the bucket. This is always the project team's owner group.
 */
export interface BucketOwnerArgs {
    /**
     * The entity, in the form project-owner-projectId.
     */
    entity?: pulumi.Input<string>;
    /**
     * The ID for the entity.
     */
    entityId?: pulumi.Input<string>;
}

/**
 * The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error.
 */
export interface BucketRetentionPolicyArgs {
    /**
     * Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format.
     */
    effectiveTime?: pulumi.Input<string>;
    /**
     * Once locked, an object retention policy cannot be modified.
     */
    isLocked?: pulumi.Input<boolean>;
    /**
     * The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes.
     */
    retentionPeriod?: pulumi.Input<string>;
}

/**
 * The bucket's versioning configuration.
 */
export interface BucketVersioningArgs {
    /**
     * While set to true, versioning is fully enabled for this bucket.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
 */
export interface BucketWebsiteArgs {
    /**
     * If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
     */
    mainPageSuffix?: pulumi.Input<string>;
    /**
     * If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
     */
    notFoundPage?: pulumi.Input<string>;
}

/**
 * The project team associated with the entity, if any.
 */
export interface DefaultObjectAccessControlProjectTeamArgs {
    /**
     * The project number.
     */
    projectNumber?: pulumi.Input<string>;
    /**
     * The team.
     */
    team?: pulumi.Input<string>;
}

/**
 * Represents an expression text. Example: title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
 */
export interface ExprArgs {
    /**
     * An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
     */
    expression?: pulumi.Input<string>;
    /**
     * An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

/**
 * An access-control entry.
 */
export interface ObjectAccessControlArgs {
    /**
     * The name of the bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The domain associated with the entity, if any.
     */
    domain?: pulumi.Input<string>;
    /**
     * The email address associated with the entity, if any.
     */
    email?: pulumi.Input<string>;
    /**
     * The entity holding the permission, in one of the following forms: 
     * - user-userId 
     * - user-email 
     * - group-groupId 
     * - group-email 
     * - domain-domain 
     * - project-team-projectId 
     * - allUsers 
     * - allAuthenticatedUsers Examples: 
     * - The user liz@example.com would be user-liz@example.com. 
     * - The group example@googlegroups.com would be group-example@googlegroups.com. 
     * - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
     */
    entity?: pulumi.Input<string>;
    /**
     * The ID for the entity, if any.
     */
    entityId?: pulumi.Input<string>;
    /**
     * HTTP 1.1 Entity tag for the access-control entry.
     */
    etag?: pulumi.Input<string>;
    /**
     * The content generation of the object, if applied to an object.
     */
    generation?: pulumi.Input<string>;
    /**
     * The ID of the access-control entry.
     */
    id?: pulumi.Input<string>;
    /**
     * The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
     */
    kind?: pulumi.Input<string>;
    /**
     * The name of the object, if applied to an object.
     */
    object?: pulumi.Input<string>;
    /**
     * The project team associated with the entity, if any.
     */
    projectTeam?: pulumi.Input<inputs.storage.v1.ObjectAccessControlProjectTeamArgs>;
    /**
     * The access permission for the entity.
     */
    role?: pulumi.Input<string>;
    /**
     * The link to this access-control entry.
     */
    selfLink?: pulumi.Input<string>;
}

/**
 * The project team associated with the entity, if any.
 */
export interface ObjectAccessControlProjectTeamArgs {
    /**
     * The project number.
     */
    projectNumber?: pulumi.Input<string>;
    /**
     * The team.
     */
    team?: pulumi.Input<string>;
}

export interface ObjectIamPolicyBindingsItemArgs {
    /**
     * The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently.
     */
    condition?: pulumi.Input<inputs.storage.v1.ExprArgs>;
    /**
     * A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  
     * - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  
     * - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  
     * - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  
     * - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  
     * - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  
     * - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  
     * - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  
     * - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  
     * - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.
     * The new IAM roles are:  
     * - roles/storage.admin — Full control of Google Cloud Storage resources.  
     * - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  
     * - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  
     * - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  
     * - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  
     * - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  
     * - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  
     * - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  
     * - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role.
     */
    role?: pulumi.Input<string>;
}

