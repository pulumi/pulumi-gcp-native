// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.If there are AuditConfigs for both allServices and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
 */
export interface AuditConfigArgs {
    /**
     * The configuration for logging of each type of permission.
     */
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.metastore.v1beta.AuditLogConfigArgs>[]>;
    /**
     * Specifies a service that will be enabled for audit logging. For example, storage.googleapis.com, cloudsql.googleapis.com. allServices is a special value that covers all services.
     */
    service?: pulumi.Input<string>;
}

/**
 * Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
 */
export interface AuditLogConfigArgs {
    /**
     * Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
     */
    exemptedMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The log type that this config enables.
     */
    logType?: pulumi.Input<enums.metastore.v1beta.AuditLogConfigLogType>;
}

/**
 * Associates members, or principals, with a role.
 */
export interface BindingArgs {
    /**
     * The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
     */
    condition?: pulumi.Input<inputs.metastore.v1beta.ExprArgs>;
    /**
     * Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.
     */
    role?: pulumi.Input<string>;
}

/**
 * Contains information of the customer's network configurations.
 */
export interface ConsumerArgs {
    /**
     * Immutable. The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint. It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network. There must be at least one IP address available in the subnet's primary range. The subnet is specified in the following form:`projects/{project_number}/regions/{region_id}/subnetworks/{subnetwork_id}
     */
    subnetwork?: pulumi.Input<string>;
}

/**
 * Specifies how metastore metadata should be integrated with the Data Catalog service.
 */
export interface DataCatalogConfigArgs {
    /**
     * Defines whether the metastore metadata should be synced to Data Catalog. The default value is to disable syncing metastore metadata to Data Catalog.
     */
    enabled?: pulumi.Input<boolean>;
}

/**
 * A specification of the location of and metadata about a database dump from a relational database management system.
 */
export interface DatabaseDumpArgs {
    /**
     * The type of the database.
     */
    databaseType?: pulumi.Input<enums.metastore.v1beta.DatabaseDumpDatabaseType>;
    /**
     * A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
     */
    gcsUri?: pulumi.Input<string>;
    /**
     * The name of the source database.
     */
    sourceDatabase?: pulumi.Input<string>;
    /**
     * Optional. The type of the database dump. If unspecified, defaults to MYSQL.
     */
    type?: pulumi.Input<enums.metastore.v1beta.DatabaseDumpType>;
}

/**
 * Specifies how metastore metadata should be integrated with the Dataplex service.
 */
export interface DataplexConfigArgs {
    /**
     * A reference to the Lake resources that this metastore service is attached to. The key is the lake resource name. Example: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
     */
    lakeResources?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * Encryption settings for the service.
 */
export interface EncryptionConfigArgs {
    /**
     * The fully qualified customer provided Cloud KMS key name to use for customer data encryption, in the following form:projects/{project_number}/locations/{location_id}/keyRings/{key_ring_id}/cryptoKeys/{crypto_key_id}.
     */
    kmsKey?: pulumi.Input<string>;
}

/**
 * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
 */
export interface ExprArgs {
    /**
     * Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
     */
    description?: pulumi.Input<string>;
    /**
     * Textual representation of an expression in Common Expression Language syntax.
     */
    expression?: pulumi.Input<string>;
    /**
     * Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
     */
    title?: pulumi.Input<string>;
}

/**
 * Specifies configuration information specific to running Hive metastore software as the metastore service.
 */
export interface HiveMetastoreConfigArgs {
    /**
     * A mapping of Hive metastore version to the auxiliary version configuration. When specified, a secondary Hive metastore service is created along with the primary service. All auxiliary versions must be less than the service's primary version. The key is the auxiliary service name and it must match the regular expression a-z?. This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
     */
    auxiliaryVersions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml). The mappings override system defaults (some keys cannot be overridden). These overrides are also applied to auxiliary versions and can be further customized in the auxiliary version's AuxiliaryVersionConfig.
     */
    configOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The protocol to use for the metastore service endpoint. If unspecified, defaults to THRIFT.
     */
    endpointProtocol?: pulumi.Input<enums.metastore.v1beta.HiveMetastoreConfigEndpointProtocol>;
    /**
     * Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the UpdateService method and specify this field's path (hive_metastore_config.kerberos_config) in the request's update_mask while omitting this field from the request's service.
     */
    kerberosConfig?: pulumi.Input<inputs.metastore.v1beta.KerberosConfigArgs>;
    /**
     * Immutable. The Hive metastore schema version.
     */
    version?: pulumi.Input<string>;
}

/**
 * Configuration information for a Kerberos principal.
 */
export interface KerberosConfigArgs {
    /**
     * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     */
    keytab?: pulumi.Input<inputs.metastore.v1beta.SecretArgs>;
    /**
     * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     */
    krb5ConfigGcsUri?: pulumi.Input<string>;
    /**
     * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
     */
    principal?: pulumi.Input<string>;
}

/**
 * Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
 */
export interface MaintenanceWindowArgs {
    /**
     * The day of week, when the window starts.
     */
    dayOfWeek?: pulumi.Input<enums.metastore.v1beta.MaintenanceWindowDayOfWeek>;
    /**
     * The hour of day (0-23) when the window starts.
     */
    hourOfDay?: pulumi.Input<number>;
}

/**
 * Specifies how metastore metadata should be integrated with external services.
 */
export interface MetadataIntegrationArgs {
    /**
     * The integration config for the Data Catalog service.
     */
    dataCatalogConfig?: pulumi.Input<inputs.metastore.v1beta.DataCatalogConfigArgs>;
    /**
     * The integration config for the Dataplex service.
     */
    dataplexConfig?: pulumi.Input<inputs.metastore.v1beta.DataplexConfigArgs>;
}

/**
 * Network configuration for the Dataproc Metastore service.
 */
export interface NetworkConfigArgs {
    /**
     * Immutable. The consumer-side network configuration for the Dataproc Metastore instance.
     */
    consumers?: pulumi.Input<pulumi.Input<inputs.metastore.v1beta.ConsumerArgs>[]>;
}

/**
 * A securely stored value.
 */
export interface SecretArgs {
    /**
     * The relative resource name of a Secret Manager secret version, in the following form:projects/{project_number}/secrets/{secret_id}/versions/{version_id}.
     */
    cloudSecret?: pulumi.Input<string>;
}

/**
 * Telemetry Configuration for the Dataproc Metastore service.
 */
export interface TelemetryConfigArgs {
    logFormat?: pulumi.Input<enums.metastore.v1beta.TelemetryConfigLogFormat>;
}

