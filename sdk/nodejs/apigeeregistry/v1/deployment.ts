// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a specified deployment.
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:apigeeregistry/v1:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.
     */
    public readonly accessGuidance!: pulumi.Output<string>;
    /**
     * Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string}>;
    /**
     * Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     */
    public readonly apiDeploymentId!: pulumi.Output<string>;
    public readonly apiId!: pulumi.Output<string>;
    /**
     * The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `apis/{api}/deployments/{deployment}`
     */
    public readonly apiSpecRevision!: pulumi.Output<string>;
    /**
     * Creation timestamp; when the deployment resource was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A detailed description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Human-meaningful name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The address where the deployment is serving. Changes to this value will update the revision.
     */
    public readonly endpointUri!: pulumi.Output<string>;
    /**
     * The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.
     */
    public readonly externalChannelUri!: pulumi.Output<string>;
    /**
     * Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.
     */
    public readonly intendedAudience!: pulumi.Output<string>;
    /**
     * Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Revision creation timestamp; when the represented revision was created.
     */
    public /*out*/ readonly revisionCreateTime!: pulumi.Output<string>;
    /**
     * Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.
     */
    public /*out*/ readonly revisionId!: pulumi.Output<string>;
    /**
     * Last update timestamp: when the represented revision was last modified.
     */
    public /*out*/ readonly revisionUpdateTime!: pulumi.Output<string>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.apiDeploymentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiDeploymentId'");
            }
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            resourceInputs["accessGuidance"] = args ? args.accessGuidance : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["apiDeploymentId"] = args ? args.apiDeploymentId : undefined;
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["apiSpecRevision"] = args ? args.apiSpecRevision : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endpointUri"] = args ? args.endpointUri : undefined;
            resourceInputs["externalChannelUri"] = args ? args.externalChannelUri : undefined;
            resourceInputs["intendedAudience"] = args ? args.intendedAudience : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["revisionCreateTime"] = undefined /*out*/;
            resourceInputs["revisionId"] = undefined /*out*/;
            resourceInputs["revisionUpdateTime"] = undefined /*out*/;
        } else {
            resourceInputs["accessGuidance"] = undefined /*out*/;
            resourceInputs["annotations"] = undefined /*out*/;
            resourceInputs["apiDeploymentId"] = undefined /*out*/;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["apiSpecRevision"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["endpointUri"] = undefined /*out*/;
            resourceInputs["externalChannelUri"] = undefined /*out*/;
            resourceInputs["intendedAudience"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["revisionCreateTime"] = undefined /*out*/;
            resourceInputs["revisionId"] = undefined /*out*/;
            resourceInputs["revisionUpdateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["apiDeploymentId", "apiId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.
     */
    accessGuidance?: pulumi.Input<string>;
    /**
     * Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     */
    apiDeploymentId: pulumi.Input<string>;
    apiId: pulumi.Input<string>;
    /**
     * The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `apis/{api}/deployments/{deployment}`
     */
    apiSpecRevision?: pulumi.Input<string>;
    /**
     * A detailed description.
     */
    description?: pulumi.Input<string>;
    /**
     * Human-meaningful name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The address where the deployment is serving. Changes to this value will update the revision.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.
     */
    externalChannelUri?: pulumi.Input<string>;
    /**
     * Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.
     */
    intendedAudience?: pulumi.Input<string>;
    /**
     * Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * Resource name.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
