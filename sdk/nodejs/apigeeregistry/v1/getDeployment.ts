// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Returns a specified deployment.
 */
export function getDeployment(args: GetDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:apigeeregistry/v1:getDeployment", {
        "apiId": args.apiId,
        "deploymentId": args.deploymentId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetDeploymentArgs {
    apiId: string;
    deploymentId: string;
    location: string;
    project?: string;
}

export interface GetDeploymentResult {
    /**
     * Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.
     */
    readonly accessGuidance: string;
    /**
     * Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
     */
    readonly annotations: {[key: string]: string};
    /**
     * The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`
     */
    readonly apiSpecRevision: string;
    /**
     * Creation timestamp; when the deployment resource was created.
     */
    readonly createTime: string;
    /**
     * A detailed description.
     */
    readonly description: string;
    /**
     * Human-meaningful name.
     */
    readonly displayName: string;
    /**
     * The address where the deployment is serving. Changes to this value will update the revision.
     */
    readonly endpointUri: string;
    /**
     * The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.
     */
    readonly externalChannelUri: string;
    /**
     * Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.
     */
    readonly intendedAudience: string;
    /**
     * Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
     */
    readonly labels: {[key: string]: string};
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Revision creation timestamp; when the represented revision was created.
     */
    readonly revisionCreateTime: string;
    /**
     * Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.
     */
    readonly revisionId: string;
    /**
     * Last update timestamp: when the represented revision was last modified.
     */
    readonly revisionUpdateTime: string;
}

export function getDeploymentOutput(args: GetDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentResult> {
    return pulumi.output(args).apply(a => getDeployment(a, opts))
}

export interface GetDeploymentOutputArgs {
    apiId: pulumi.Input<string>;
    deploymentId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
