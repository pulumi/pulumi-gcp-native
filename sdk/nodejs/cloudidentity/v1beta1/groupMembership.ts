// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a `Membership`.
 */
export class GroupMembership extends pulumi.CustomResource {
    /**
     * Get an existing GroupMembership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GroupMembership {
        return new GroupMembership(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:cloudidentity/v1beta1:GroupMembership';

    /**
     * Returns true if the given object is an instance of GroupMembership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupMembership {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupMembership.__pulumiType;
    }


    /**
     * Create a GroupMembership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupMembershipArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.groupsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupsId'");
            }
            if ((!args || args.membershipsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'membershipsId'");
            }
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["groupsId"] = args ? args.groupsId : undefined;
            inputs["memberKey"] = args ? args.memberKey : undefined;
            inputs["membershipsId"] = args ? args.membershipsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["preferredMemberKey"] = args ? args.preferredMemberKey : undefined;
            inputs["roles"] = args ? args.roles : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(GroupMembership.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a GroupMembership resource.
 */
export interface GroupMembershipArgs {
    /**
     * Output only. The time when the `Membership` was created.
     */
    readonly createTime?: pulumi.Input<string>;
    readonly groupsId: pulumi.Input<string>;
    /**
     * Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
     */
    readonly memberKey?: pulumi.Input<inputs.cloudidentity.v1beta1.EntityKey>;
    readonly membershipsId: pulumi.Input<string>;
    /**
     * Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Required. Immutable. The `EntityKey` of the member. Either `member_key` or `preferred_member_key` must be set when calling MembershipsService.CreateMembership but not both; both shall be set when returned.
     */
    readonly preferredMemberKey?: pulumi.Input<inputs.cloudidentity.v1beta1.EntityKey>;
    /**
     * The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
     */
    readonly roles?: pulumi.Input<pulumi.Input<inputs.cloudidentity.v1beta1.MembershipRole>[]>;
    /**
     * Output only. The type of the membership.
     */
    readonly type?: pulumi.Input<string>;
    /**
     * Output only. The time when the `Membership` was last updated.
     */
    readonly updateTime?: pulumi.Input<string>;
}
