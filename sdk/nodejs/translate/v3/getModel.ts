// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a model.
 */
export function getModel(args: GetModelArgs, opts?: pulumi.InvokeOptions): Promise<GetModelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:translate/v3:getModel", {
        "location": args.location,
        "modelId": args.modelId,
        "project": args.project,
    }, opts);
}

export interface GetModelArgs {
    location: string;
    modelId: string;
    project?: string;
}

export interface GetModelResult {
    /**
     * Timestamp when the model resource was created, which is also when the training started.
     */
    readonly createTime: string;
    /**
     * The dataset from which the model is trained, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`
     */
    readonly dataset: string;
    /**
     * The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
     */
    readonly displayName: string;
    /**
     * The resource name of the model, in form of `projects/{project-number-or-id}/locations/{location_id}/models/{model_id}`
     */
    readonly name: string;
    /**
     * The BCP-47 language code of the source language.
     */
    readonly sourceLanguageCode: string;
    /**
     * The BCP-47 language code of the target language.
     */
    readonly targetLanguageCode: string;
    /**
     * Number of examples (sentence pairs) used to test the model.
     */
    readonly testExampleCount: number;
    /**
     * Number of examples (sentence pairs) used to train the model.
     */
    readonly trainExampleCount: number;
    /**
     * Timestamp when this model was last updated.
     */
    readonly updateTime: string;
    /**
     * Number of examples (sentence pairs) used to validate the model.
     */
    readonly validateExampleCount: number;
}
/**
 * Gets a model.
 */
export function getModelOutput(args: GetModelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModelResult> {
    return pulumi.output(args).apply((a: any) => getModel(a, opts))
}

export interface GetModelOutputArgs {
    location: pulumi.Input<string>;
    modelId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
