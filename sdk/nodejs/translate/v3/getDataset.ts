// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a Dataset.
 */
export function getDataset(args: GetDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:translate/v3:getDataset", {
        "datasetId": args.datasetId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetDatasetArgs {
    datasetId: string;
    location: string;
    project?: string;
}

export interface GetDatasetResult {
    /**
     * Timestamp when this dataset was created.
     */
    readonly createTime: string;
    /**
     * The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
     */
    readonly displayName: string;
    /**
     * The number of examples in the dataset.
     */
    readonly exampleCount: number;
    /**
     * The resource name of the dataset, in form of `projects/{project-number-or-id}/locations/{location_id}/datasets/{dataset_id}`
     */
    readonly name: string;
    /**
     * The BCP-47 language code of the source language.
     */
    readonly sourceLanguageCode: string;
    /**
     * The BCP-47 language code of the target language.
     */
    readonly targetLanguageCode: string;
    /**
     * Number of test examples (sentence pairs).
     */
    readonly testExampleCount: number;
    /**
     * Number of training examples (sentence pairs).
     */
    readonly trainExampleCount: number;
    /**
     * Timestamp when this dataset was last updated.
     */
    readonly updateTime: string;
    /**
     * Number of validation examples (sentence pairs).
     */
    readonly validateExampleCount: number;
}
/**
 * Gets a Dataset.
 */
export function getDatasetOutput(args: GetDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasetResult> {
    return pulumi.output(args).apply((a: any) => getDataset(a, opts))
}

export interface GetDatasetOutputArgs {
    datasetId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
