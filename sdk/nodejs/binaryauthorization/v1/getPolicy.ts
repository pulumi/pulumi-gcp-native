// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a platform policy. Returns `NOT_FOUND` if the policy doesn't exist.
 */
export function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:binaryauthorization/v1:getPolicy", {
        "platformId": args.platformId,
        "policyId": args.policyId,
        "project": args.project,
    }, opts);
}

export interface GetPolicyArgs {
    platformId: string;
    policyId: string;
    project?: string;
}

export interface GetPolicyResult {
    /**
     * Optional. A description comment about the policy.
     */
    readonly description: string;
    /**
     * Optional. GKE platform-specific policy.
     */
    readonly gkePolicy: outputs.binaryauthorization.v1.GkePolicyResponse;
    /**
     * The relative resource name of the Binary Authorization platform policy, in the form of `projects/*&#47;platforms/*&#47;policies/*`.
     */
    readonly name: string;
    /**
     * Time when the policy was last updated.
     */
    readonly updateTime: string;
}
/**
 * Gets a platform policy. Returns `NOT_FOUND` if the policy doesn't exist.
 */
export function getPolicyOutput(args: GetPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicy(a, opts))
}

export interface GetPolicyOutputArgs {
    platformId: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
