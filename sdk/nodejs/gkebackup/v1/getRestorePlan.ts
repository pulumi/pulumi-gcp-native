// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieve the details of a single RestorePlan.
 */
export function getRestorePlan(args: GetRestorePlanArgs, opts?: pulumi.InvokeOptions): Promise<GetRestorePlanResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:gkebackup/v1:getRestorePlan", {
        "location": args.location,
        "project": args.project,
        "restorePlanId": args.restorePlanId,
    }, opts);
}

export interface GetRestorePlanArgs {
    location: string;
    project?: string;
    restorePlanId: string;
}

export interface GetRestorePlanResult {
    /**
     * Immutable. A reference to the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. Format: projects/*&#47;locations/*&#47;backupPlans/*.
     */
    readonly backupPlan: string;
    /**
     * Immutable. The target cluster into which Restores created via this RestorePlan will restore data. NOTE: the cluster's region must be the same as the RestorePlan. Valid formats: - projects/*&#47;locations/*&#47;clusters/* - projects/*&#47;zones/*&#47;clusters/*
     */
    readonly cluster: string;
    /**
     * The timestamp when this RestorePlan resource was created.
     */
    readonly createTime: string;
    /**
     * User specified descriptive string for this RestorePlan.
     */
    readonly description: string;
    /**
     * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestorePlan`, and systems are expected to put that etag in the request to `UpdateRestorePlan` or `DeleteRestorePlan` to ensure that their change will be applied to the same version of the resource.
     */
    readonly etag: string;
    /**
     * A set of custom labels supplied by user.
     */
    readonly labels: {[key: string]: string};
    /**
     * The full name of the RestorePlan resource. Format: projects/*&#47;locations/*&#47;restorePlans/*.
     */
    readonly name: string;
    /**
     * Configuration of Restores created via this RestorePlan.
     */
    readonly restoreConfig: outputs.gkebackup.v1.RestoreConfigResponse;
    /**
     * Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
     */
    readonly uid: string;
    /**
     * The timestamp when this RestorePlan resource was last updated.
     */
    readonly updateTime: string;
}

export function getRestorePlanOutput(args: GetRestorePlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRestorePlanResult> {
    return pulumi.output(args).apply(a => getRestorePlan(a, opts))
}

export interface GetRestorePlanOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    restorePlanId: pulumi.Input<string>;
}
