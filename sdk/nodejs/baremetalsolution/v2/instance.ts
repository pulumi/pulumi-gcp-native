// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Create an Instance.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:baremetalsolution/v2:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Create a time stamp.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The firmware version for the instance.
     */
    public /*out*/ readonly firmwareVersion!: pulumi.Output<string>;
    /**
     * True if you enable hyperthreading for the server, otherwise false. The default value is false.
     */
    public readonly hyperthreadingEnabled!: pulumi.Output<boolean>;
    /**
     * True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.
     */
    public /*out*/ readonly interactiveSerialConsoleEnabled!: pulumi.Output<boolean>;
    /**
     * Labels as key value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
     */
    public readonly logicalInterfaces!: pulumi.Output<outputs.baremetalsolution.v2.GoogleCloudBaremetalsolutionV2LogicalInterfaceResponse[]>;
    /**
     * Text field about info for logging in.
     */
    public /*out*/ readonly loginInfo!: pulumi.Output<string>;
    /**
     * Immutable. List of LUNs associated with this server.
     */
    public readonly luns!: pulumi.Output<outputs.baremetalsolution.v2.LunResponse[]>;
    /**
     * Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     */
    public readonly machineType!: pulumi.Output<string>;
    /**
     * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
     */
    public readonly networkTemplate!: pulumi.Output<string>;
    /**
     * List of networks associated with this server.
     */
    public /*out*/ readonly networks!: pulumi.Output<outputs.baremetalsolution.v2.NetworkResponse[]>;
    /**
     * The OS image currently installed on the server.
     */
    public readonly osImage!: pulumi.Output<string>;
    /**
     * Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
     */
    public readonly pod!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The state of the server.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Update a time stamp.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
     */
    public readonly volumes!: pulumi.Output<outputs.baremetalsolution.v2.VolumeResponse[]>;
    /**
     * The workload profile for the instance.
     */
    public readonly workloadProfile!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["hyperthreadingEnabled"] = args ? args.hyperthreadingEnabled : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["logicalInterfaces"] = args ? args.logicalInterfaces : undefined;
            resourceInputs["luns"] = args ? args.luns : undefined;
            resourceInputs["machineType"] = args ? args.machineType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkTemplate"] = args ? args.networkTemplate : undefined;
            resourceInputs["osImage"] = args ? args.osImage : undefined;
            resourceInputs["pod"] = args ? args.pod : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["workloadProfile"] = args ? args.workloadProfile : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["firmwareVersion"] = undefined /*out*/;
            resourceInputs["interactiveSerialConsoleEnabled"] = undefined /*out*/;
            resourceInputs["loginInfo"] = undefined /*out*/;
            resourceInputs["networks"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["firmwareVersion"] = undefined /*out*/;
            resourceInputs["hyperthreadingEnabled"] = undefined /*out*/;
            resourceInputs["interactiveSerialConsoleEnabled"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["logicalInterfaces"] = undefined /*out*/;
            resourceInputs["loginInfo"] = undefined /*out*/;
            resourceInputs["luns"] = undefined /*out*/;
            resourceInputs["machineType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkTemplate"] = undefined /*out*/;
            resourceInputs["networks"] = undefined /*out*/;
            resourceInputs["osImage"] = undefined /*out*/;
            resourceInputs["pod"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["volumes"] = undefined /*out*/;
            resourceInputs["workloadProfile"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * True if you enable hyperthreading for the server, otherwise false. The default value is false.
     */
    hyperthreadingEnabled?: pulumi.Input<boolean>;
    /**
     * Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.
     */
    logicalInterfaces?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.GoogleCloudBaremetalsolutionV2LogicalInterfaceArgs>[]>;
    /**
     * Immutable. List of LUNs associated with this server.
     */
    luns?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.LunArgs>[]>;
    /**
     * Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
     */
    machineType?: pulumi.Input<string>;
    /**
     * Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`
     */
    name?: pulumi.Input<string>;
    /**
     * Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of "bond" or "nic".
     */
    networkTemplate?: pulumi.Input<string>;
    /**
     * The OS image currently installed on the server.
     */
    osImage?: pulumi.Input<string>;
    /**
     * Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.
     */
    pod?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.baremetalsolution.v2.VolumeArgs>[]>;
    /**
     * The workload profile for the instance.
     */
    workloadProfile?: pulumi.Input<enums.baremetalsolution.v2.InstanceWorkloadProfile>;
}
