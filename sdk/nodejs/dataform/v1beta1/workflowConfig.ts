// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new WorkflowConfig in a given Repository.
 * Auto-naming is currently not supported for this resource.
 */
export class WorkflowConfig extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkflowConfig {
        return new WorkflowConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dataform/v1beta1:WorkflowConfig';

    /**
     * Returns true if the given object is an instance of WorkflowConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowConfig.__pulumiType;
    }

    /**
     * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
     */
    public readonly cronSchedule!: pulumi.Output<string>;
    /**
     * Optional. If left unset, a default InvocationConfig will be used.
     */
    public readonly invocationConfig!: pulumi.Output<outputs.dataform.v1beta1.InvocationConfigResponse>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The workflow config's name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Records of the 10 most recent scheduled execution attempts. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
     */
    public /*out*/ readonly recentScheduledExecutionRecords!: pulumi.Output<outputs.dataform.v1beta1.ScheduledExecutionRecordResponse[]>;
    /**
     * The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;releaseConfigs/*`.
     */
    public readonly releaseConfig!: pulumi.Output<string>;
    public readonly repositoryId!: pulumi.Output<string>;
    /**
     * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
     */
    public readonly timeZone!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
     */
    public readonly workflowConfigId!: pulumi.Output<string>;

    /**
     * Create a WorkflowConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.releaseConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'releaseConfig'");
            }
            if ((!args || args.repositoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryId'");
            }
            if ((!args || args.workflowConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workflowConfigId'");
            }
            resourceInputs["cronSchedule"] = args ? args.cronSchedule : undefined;
            resourceInputs["invocationConfig"] = args ? args.invocationConfig : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["releaseConfig"] = args ? args.releaseConfig : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["workflowConfigId"] = args ? args.workflowConfigId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recentScheduledExecutionRecords"] = undefined /*out*/;
        } else {
            resourceInputs["cronSchedule"] = undefined /*out*/;
            resourceInputs["invocationConfig"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["recentScheduledExecutionRecords"] = undefined /*out*/;
            resourceInputs["releaseConfig"] = undefined /*out*/;
            resourceInputs["repositoryId"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
            resourceInputs["workflowConfigId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project", "repositoryId", "workflowConfigId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(WorkflowConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkflowConfig resource.
 */
export interface WorkflowConfigArgs {
    /**
     * Optional. Optional schedule (in cron format) for automatic execution of this workflow config.
     */
    cronSchedule?: pulumi.Input<string>;
    /**
     * Optional. If left unset, a default InvocationConfig will be used.
     */
    invocationConfig?: pulumi.Input<inputs.dataform.v1beta1.InvocationConfigArgs>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The name of the release config whose release_compilation_result should be executed. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;releaseConfigs/*`.
     */
    releaseConfig: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
    /**
     * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the workflow config, which will become the final component of the workflow config's resource name.
     */
    workflowConfigId: pulumi.Input<string>;
}
