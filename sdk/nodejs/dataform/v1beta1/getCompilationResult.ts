// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Fetches a single CompilationResult.
 */
export function getCompilationResult(args: GetCompilationResultArgs, opts?: pulumi.InvokeOptions): Promise<GetCompilationResultResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dataform/v1beta1:getCompilationResult", {
        "compilationResultId": args.compilationResultId,
        "location": args.location,
        "project": args.project,
        "repositoryId": args.repositoryId,
    }, opts);
}

export interface GetCompilationResultArgs {
    compilationResultId: string;
    location: string;
    project?: string;
    repositoryId: string;
}

export interface GetCompilationResultResult {
    /**
     * Immutable. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
     */
    readonly codeCompilationConfig: outputs.dataform.v1beta1.CodeCompilationConfigResponse;
    /**
     * Errors encountered during project compilation.
     */
    readonly compilationErrors: outputs.dataform.v1beta1.CompilationErrorResponse[];
    /**
     * The version of `@dataform/core` that was used for compilation.
     */
    readonly dataformCoreVersion: string;
    /**
     * Immutable. Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
     */
    readonly gitCommitish: string;
    /**
     * The compilation result's name.
     */
    readonly name: string;
    /**
     * Immutable. The name of the release config to compile. The release config's 'current_compilation_result' field will be updated to this compilation result. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;releaseConfigs/*`.
     */
    readonly releaseConfig: string;
    /**
     * The fully resolved Git commit SHA of the code that was compiled. Not set for compilation results whose source is a workspace.
     */
    readonly resolvedGitCommitSha: string;
    /**
     * Immutable. The name of the workspace to compile. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;workspaces/*`.
     */
    readonly workspace: string;
}
/**
 * Fetches a single CompilationResult.
 */
export function getCompilationResultOutput(args: GetCompilationResultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCompilationResultResult> {
    return pulumi.output(args).apply((a: any) => getCompilationResult(a, opts))
}

export interface GetCompilationResultOutputArgs {
    compilationResultId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
