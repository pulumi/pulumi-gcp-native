// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new ReleaseConfig in a given Repository.
 * Auto-naming is currently not supported for this resource.
 */
export class ReleaseConfig extends pulumi.CustomResource {
    /**
     * Get an existing ReleaseConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReleaseConfig {
        return new ReleaseConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dataform/v1beta1:ReleaseConfig';

    /**
     * Returns true if the given object is an instance of ReleaseConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReleaseConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReleaseConfig.__pulumiType;
    }

    /**
     * Optional. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
     */
    public readonly codeCompilationConfig!: pulumi.Output<outputs.dataform.v1beta1.CodeCompilationConfigResponse>;
    /**
     * Optional. Optional schedule (in cron format) for automatic creation of compilation results.
     */
    public readonly cronSchedule!: pulumi.Output<string>;
    /**
     * Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
     */
    public readonly gitCommitish!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The release config's name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Records of the 10 most recent scheduled release attempts, ordered in in descending order of `release_time`. Updated whenever automatic creation of a compilation result is triggered by cron_schedule.
     */
    public /*out*/ readonly recentScheduledReleaseRecords!: pulumi.Output<outputs.dataform.v1beta1.ScheduledReleaseRecordResponse[]>;
    /**
     * Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is created from this release config, or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;compilationResults/*`.
     */
    public readonly releaseCompilationResult!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the release config, which will become the final component of the release config's resource name.
     */
    public readonly releaseConfigId!: pulumi.Output<string>;
    public readonly repositoryId!: pulumi.Output<string>;
    /**
     * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
     */
    public readonly timeZone!: pulumi.Output<string>;

    /**
     * Create a ReleaseConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReleaseConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.gitCommitish === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gitCommitish'");
            }
            if ((!args || args.releaseConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'releaseConfigId'");
            }
            if ((!args || args.repositoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryId'");
            }
            resourceInputs["codeCompilationConfig"] = args ? args.codeCompilationConfig : undefined;
            resourceInputs["cronSchedule"] = args ? args.cronSchedule : undefined;
            resourceInputs["gitCommitish"] = args ? args.gitCommitish : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["releaseCompilationResult"] = args ? args.releaseCompilationResult : undefined;
            resourceInputs["releaseConfigId"] = args ? args.releaseConfigId : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recentScheduledReleaseRecords"] = undefined /*out*/;
        } else {
            resourceInputs["codeCompilationConfig"] = undefined /*out*/;
            resourceInputs["cronSchedule"] = undefined /*out*/;
            resourceInputs["gitCommitish"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["recentScheduledReleaseRecords"] = undefined /*out*/;
            resourceInputs["releaseCompilationResult"] = undefined /*out*/;
            resourceInputs["releaseConfigId"] = undefined /*out*/;
            resourceInputs["repositoryId"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project", "releaseConfigId", "repositoryId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ReleaseConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ReleaseConfig resource.
 */
export interface ReleaseConfigArgs {
    /**
     * Optional. If set, fields of `code_compilation_config` override the default compilation settings that are specified in dataform.json.
     */
    codeCompilationConfig?: pulumi.Input<inputs.dataform.v1beta1.CodeCompilationConfigArgs>;
    /**
     * Optional. Optional schedule (in cron format) for automatic creation of compilation results.
     */
    cronSchedule?: pulumi.Input<string>;
    /**
     * Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository. Examples: - a commit SHA: `12ade345` - a tag: `tag1` - a branch name: `branch1`
     */
    gitCommitish: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. The name of the currently released compilation result for this release config. This value is updated when a compilation result is created from this release config, or when this resource is updated by API call (perhaps to roll back to an earlier release). The compilation result must have been created using this release config. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;compilationResults/*`.
     */
    releaseCompilationResult?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the release config, which will become the final component of the release config's resource name.
     */
    releaseConfigId: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
    /**
     * Optional. Specifies the time zone to be used when interpreting cron_schedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
     */
    timeZone?: pulumi.Input<string>;
}
