// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new WorkflowInvocation in a given Repository.
 * Auto-naming is currently not supported for this resource.
 */
export class WorkflowInvocation extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowInvocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkflowInvocation {
        return new WorkflowInvocation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dataform/v1beta1:WorkflowInvocation';

    /**
     * Returns true if the given object is an instance of WorkflowInvocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowInvocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowInvocation.__pulumiType;
    }

    /**
     * Immutable. The name of the compilation result to compile. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;compilationResults/*`.
     */
    public readonly compilationResult!: pulumi.Output<string>;
    /**
     * Immutable. If left unset, a default InvocationConfig will be used.
     */
    public readonly invocationConfig!: pulumi.Output<outputs.dataform.v1beta1.InvocationConfigResponse>;
    /**
     * This workflow invocation's timing details.
     */
    public /*out*/ readonly invocationTiming!: pulumi.Output<outputs.dataform.v1beta1.IntervalResponse>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The workflow invocation's name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly repositoryId!: pulumi.Output<string>;
    /**
     * This workflow invocation's current state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a WorkflowInvocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkflowInvocationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.repositoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryId'");
            }
            resourceInputs["compilationResult"] = args ? args.compilationResult : undefined;
            resourceInputs["invocationConfig"] = args ? args.invocationConfig : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["repositoryId"] = args ? args.repositoryId : undefined;
            resourceInputs["invocationTiming"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        } else {
            resourceInputs["compilationResult"] = undefined /*out*/;
            resourceInputs["invocationConfig"] = undefined /*out*/;
            resourceInputs["invocationTiming"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["repositoryId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project", "repositoryId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(WorkflowInvocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkflowInvocation resource.
 */
export interface WorkflowInvocationArgs {
    /**
     * Immutable. The name of the compilation result to compile. Must be in the format `projects/*&#47;locations/*&#47;repositories/*&#47;compilationResults/*`.
     */
    compilationResult?: pulumi.Input<string>;
    /**
     * Immutable. If left unset, a default InvocationConfig will be used.
     */
    invocationConfig?: pulumi.Input<inputs.dataform.v1beta1.InvocationConfigArgs>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
