// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Use this method to create a connection profile in a project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class ConnectionProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectionProfile {
        return new ConnectionProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:datastream/v1:ConnectionProfile';

    /**
     * Returns true if the given object is an instance of ConnectionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionProfile.__pulumiType;
    }

    /**
     * BigQuery Connection Profile configuration.
     */
    public readonly bigqueryProfile!: pulumi.Output<outputs.datastream.v1.BigQueryProfileResponse>;
    /**
     * Required. The connection profile identifier.
     */
    public readonly connectionProfileId!: pulumi.Output<string>;
    /**
     * The create time of the resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Optional. Create the connection profile without validating it.
     */
    public readonly force!: pulumi.Output<boolean | undefined>;
    /**
     * Forward SSH tunnel connectivity.
     */
    public readonly forwardSshConnectivity!: pulumi.Output<outputs.datastream.v1.ForwardSshTunnelConnectivityResponse>;
    /**
     * Cloud Storage ConnectionProfile configuration.
     */
    public readonly gcsProfile!: pulumi.Output<outputs.datastream.v1.GcsProfileResponse>;
    /**
     * Labels.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * MySQL ConnectionProfile configuration.
     */
    public readonly mysqlProfile!: pulumi.Output<outputs.datastream.v1.MysqlProfileResponse>;
    /**
     * The resource's name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Oracle ConnectionProfile configuration.
     */
    public readonly oracleProfile!: pulumi.Output<outputs.datastream.v1.OracleProfileResponse>;
    /**
     * PostgreSQL Connection Profile configuration.
     */
    public readonly postgresqlProfile!: pulumi.Output<outputs.datastream.v1.PostgresqlProfileResponse>;
    /**
     * Private connectivity.
     */
    public readonly privateConnectivity!: pulumi.Output<outputs.datastream.v1.PrivateConnectivityResponse>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Static Service IP connectivity.
     */
    public readonly staticServiceIpConnectivity!: pulumi.Output<outputs.datastream.v1.StaticServiceIpConnectivityResponse>;
    /**
     * The update time of the resource.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Optional. Only validate the connection profile, but don't create any resources. The default is false.
     */
    public readonly validateOnly!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ConnectionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.connectionProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionProfileId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["bigqueryProfile"] = args ? args.bigqueryProfile : undefined;
            resourceInputs["connectionProfileId"] = args ? args.connectionProfileId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["forwardSshConnectivity"] = args ? args.forwardSshConnectivity : undefined;
            resourceInputs["gcsProfile"] = args ? args.gcsProfile : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mysqlProfile"] = args ? args.mysqlProfile : undefined;
            resourceInputs["oracleProfile"] = args ? args.oracleProfile : undefined;
            resourceInputs["postgresqlProfile"] = args ? args.postgresqlProfile : undefined;
            resourceInputs["privateConnectivity"] = args ? args.privateConnectivity : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["staticServiceIpConnectivity"] = args ? args.staticServiceIpConnectivity : undefined;
            resourceInputs["validateOnly"] = args ? args.validateOnly : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["bigqueryProfile"] = undefined /*out*/;
            resourceInputs["connectionProfileId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["force"] = undefined /*out*/;
            resourceInputs["forwardSshConnectivity"] = undefined /*out*/;
            resourceInputs["gcsProfile"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["mysqlProfile"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["oracleProfile"] = undefined /*out*/;
            resourceInputs["postgresqlProfile"] = undefined /*out*/;
            resourceInputs["privateConnectivity"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["staticServiceIpConnectivity"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validateOnly"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["connectionProfileId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ConnectionProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ConnectionProfile resource.
 */
export interface ConnectionProfileArgs {
    /**
     * BigQuery Connection Profile configuration.
     */
    bigqueryProfile?: pulumi.Input<inputs.datastream.v1.BigQueryProfileArgs>;
    /**
     * Required. The connection profile identifier.
     */
    connectionProfileId: pulumi.Input<string>;
    /**
     * Display name.
     */
    displayName: pulumi.Input<string>;
    /**
     * Optional. Create the connection profile without validating it.
     */
    force?: pulumi.Input<boolean>;
    /**
     * Forward SSH tunnel connectivity.
     */
    forwardSshConnectivity?: pulumi.Input<inputs.datastream.v1.ForwardSshTunnelConnectivityArgs>;
    /**
     * Cloud Storage ConnectionProfile configuration.
     */
    gcsProfile?: pulumi.Input<inputs.datastream.v1.GcsProfileArgs>;
    /**
     * Labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * MySQL ConnectionProfile configuration.
     */
    mysqlProfile?: pulumi.Input<inputs.datastream.v1.MysqlProfileArgs>;
    /**
     * Oracle ConnectionProfile configuration.
     */
    oracleProfile?: pulumi.Input<inputs.datastream.v1.OracleProfileArgs>;
    /**
     * PostgreSQL Connection Profile configuration.
     */
    postgresqlProfile?: pulumi.Input<inputs.datastream.v1.PostgresqlProfileArgs>;
    /**
     * Private connectivity.
     */
    privateConnectivity?: pulumi.Input<inputs.datastream.v1.PrivateConnectivityArgs>;
    project?: pulumi.Input<string>;
    /**
     * Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Static Service IP connectivity.
     */
    staticServiceIpConnectivity?: pulumi.Input<inputs.datastream.v1.StaticServiceIpConnectivityArgs>;
    /**
     * Optional. Only validate the connection profile, but don't create any resources. The default is false.
     */
    validateOnly?: pulumi.Input<boolean>;
}
