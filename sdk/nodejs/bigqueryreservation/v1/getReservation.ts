// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Returns information about the reservation.
 */
export function getReservation(args: GetReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetReservationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:bigqueryreservation/v1:getReservation", {
        "location": args.location,
        "project": args.project,
        "reservationId": args.reservationId,
    }, opts);
}

export interface GetReservationArgs {
    location: string;
    project?: string;
    reservationId: string;
}

export interface GetReservationResult {
    /**
     * Creation time of the reservation.
     */
    readonly creationTime: string;
    /**
     * If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified in the slot_capacity field at most.
     */
    readonly ignoreIdleSlots: boolean;
    /**
     * The resource name of the reservation, e.g., `projects/*&#47;locations/*&#47;reservations/team1-prod`.
     */
    readonly name: string;
    /**
     * Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceed the project's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the project's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`. NOTE: for reservations in US or EU multi-regions slot capacity constraints are checked separately for default and auxiliary regions. See multi_region_auxiliary flag for more details.
     */
    readonly slotCapacity: string;
    /**
     * Last update time of the reservation.
     */
    readonly updateTime: string;
}

export function getReservationOutput(args: GetReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservationResult> {
    return pulumi.output(args).apply(a => getReservation(a, opts))
}

export interface GetReservationOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    reservationId: pulumi.Input<string>;
}
