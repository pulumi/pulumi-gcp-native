// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a SynonymSet for a particular context. Throws a NOT_FOUND exception if the Synonymset does not exist
 */
export function getSynonymSet(args: GetSynonymSetArgs, opts?: pulumi.InvokeOptions): Promise<GetSynonymSetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:contentwarehouse/v1:getSynonymSet", {
        "location": args.location,
        "project": args.project,
        "synonymSetId": args.synonymSetId,
    }, opts);
}

export interface GetSynonymSetArgs {
    location: string;
    project?: string;
    synonymSetId: string;
}

export interface GetSynonymSetResult {
    /**
     * This is a freeform field. Example contexts can be "sales," "engineering," "real estate," "accounting," etc. The context can be supplied during search requests.
     */
    readonly context: string;
    /**
     * The resource name of the SynonymSet This is mandatory for google.api.resource. Format: projects/{project_number}/locations/{location}/synonymSets/{context}.
     */
    readonly name: string;
    /**
     * List of Synonyms for the context.
     */
    readonly synonyms: outputs.contentwarehouse.v1.GoogleCloudContentwarehouseV1SynonymSetSynonymResponse[];
}

export function getSynonymSetOutput(args: GetSynonymSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSynonymSetResult> {
    return pulumi.output(args).apply(a => getSynonymSet(a, opts))
}

export interface GetSynonymSetOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    synonymSetId: pulumi.Input<string>;
}
