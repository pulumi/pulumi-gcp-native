// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.
 */
export function getRuntime(args: GetRuntimeArgs, opts?: pulumi.InvokeOptions): Promise<GetRuntimeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:notebooks/v1:getRuntime", {
        "location": args.location,
        "project": args.project,
        "runtimeId": args.runtimeId,
    }, opts);
}

export interface GetRuntimeArgs {
    location: string;
    project?: string;
    runtimeId: string;
}

export interface GetRuntimeResult {
    /**
     * The config settings for accessing runtime.
     */
    readonly accessConfig: outputs.notebooks.v1.RuntimeAccessConfigResponse;
    /**
     * Runtime creation time.
     */
    readonly createTime: string;
    /**
     * Runtime health_state.
     */
    readonly healthState: string;
    /**
     * Optional. The labels to associate with this Managed Notebook or Runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
     */
    readonly labels: {[key: string]: string};
    /**
     * Contains Runtime daemon metrics such as Service status and JupyterLab stats.
     */
    readonly metrics: outputs.notebooks.v1.RuntimeMetricsResponse;
    /**
     * The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`
     */
    readonly name: string;
    /**
     * The config settings for software inside the runtime.
     */
    readonly softwareConfig: outputs.notebooks.v1.RuntimeSoftwareConfigResponse;
    /**
     * Runtime state.
     */
    readonly state: string;
    /**
     * Runtime update time.
     */
    readonly updateTime: string;
    /**
     * Use a Compute Engine VM image to start the managed notebook instance.
     */
    readonly virtualMachine: outputs.notebooks.v1.VirtualMachineResponse;
}
/**
 * Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.
 */
export function getRuntimeOutput(args: GetRuntimeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuntimeResult> {
    return pulumi.output(args).apply((a: any) => getRuntime(a, opts))
}

export interface GetRuntimeOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    runtimeId: pulumi.Input<string>;
}
