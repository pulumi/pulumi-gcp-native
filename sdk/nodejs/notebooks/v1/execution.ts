// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new Scheduled Notebook in a given project and location.
 */
export class Execution extends pulumi.CustomResource {
    /**
     * Get an existing Execution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Execution {
        return new Execution(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:notebooks/v1:Execution';

    /**
     * Returns true if the given object is an instance of Execution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Execution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Execution.__pulumiType;
    }

    /**
     * Time the Execution was instantiated.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A brief description of this execution.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * execute metadata including name, hardware spec, region, labels, etc.
     */
    public readonly executionTemplate!: pulumi.Output<outputs.notebooks.v1.ExecutionTemplateResponse>;
    /**
     * The resource name of the execute. Format: `projects/{project_id}/locations/{location}/execution/{execution_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Output notebook file generated by this execution
     */
    public readonly outputNotebookFile!: pulumi.Output<string>;
    /**
     * State of the underlying AI Platform job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Time the Execution was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Execution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExecutionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.executionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionId'");
            }
            if ((!args || args.executionsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionsId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["executionId"] = args ? args.executionId : undefined;
            inputs["executionTemplate"] = args ? args.executionTemplate : undefined;
            inputs["executionsId"] = args ? args.executionsId : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["outputNotebookFile"] = args ? args.outputNotebookFile : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["executionTemplate"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["outputNotebookFile"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Execution.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Execution resource.
 */
export interface ExecutionArgs {
    /**
     * A brief description of this execution.
     */
    readonly description?: pulumi.Input<string>;
    readonly executionId: pulumi.Input<string>;
    /**
     * execute metadata including name, hardware spec, region, labels, etc.
     */
    readonly executionTemplate?: pulumi.Input<inputs.notebooks.v1.ExecutionTemplateArgs>;
    readonly executionsId: pulumi.Input<string>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Output notebook file generated by this execution
     */
    readonly outputNotebookFile?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
}
