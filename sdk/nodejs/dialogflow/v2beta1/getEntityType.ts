// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Retrieves the specified entity type.
 */
export function getEntityType(args: GetEntityTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dialogflow/v2beta1:getEntityType", {
        "entityTypeId": args.entityTypeId,
        "languageCode": args.languageCode,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEntityTypeArgs {
    entityTypeId: string;
    languageCode?: string;
    location: string;
    project?: string;
}

export interface GetEntityTypeResult {
    /**
     * Optional. Indicates whether the entity type can be automatically expanded.
     */
    readonly autoExpansionMode: string;
    /**
     * The name of the entity type.
     */
    readonly displayName: string;
    /**
     * Optional. Enables fuzzy entity extraction during classification.
     */
    readonly enableFuzzyExtraction: boolean;
    /**
     * Optional. The collection of entity entries associated with the entity type.
     */
    readonly entities: outputs.dialogflow.v2beta1.GoogleCloudDialogflowV2beta1EntityTypeEntityResponse[];
    /**
     * Indicates the kind of entity type.
     */
    readonly kind: string;
    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`
     */
    readonly name: string;
}
/**
 * Retrieves the specified entity type.
 */
export function getEntityTypeOutput(args: GetEntityTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityTypeResult> {
    return pulumi.output(args).apply((a: any) => getEntityType(a, opts))
}

export interface GetEntityTypeOutputArgs {
    entityTypeId: pulumi.Input<string>;
    languageCode?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
