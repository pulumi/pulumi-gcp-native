// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.
 */
export class ConversationProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConversationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConversationProfile {
        return new ConversationProfile(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:dialogflow/v2:ConversationProfile';

    /**
     * Returns true if the given object is an instance of ConversationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConversationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConversationProfile.__pulumiType;
    }


    /**
     * Create a ConversationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConversationProfileArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.conversationProfilesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'conversationProfilesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["automatedAgentConfig"] = args ? args.automatedAgentConfig : undefined;
            inputs["conversationProfilesId"] = args ? args.conversationProfilesId : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["humanAgentAssistantConfig"] = args ? args.humanAgentAssistantConfig : undefined;
            inputs["languageCode"] = args ? args.languageCode : undefined;
            inputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["newMessageEventNotificationConfig"] = args ? args.newMessageEventNotificationConfig : undefined;
            inputs["notificationConfig"] = args ? args.notificationConfig : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["sttConfig"] = args ? args.sttConfig : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ConversationProfile.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ConversationProfile resource.
 */
export interface ConversationProfileArgs {
    /**
     * Configuration for an automated agent to use with this profile.
     */
    readonly automatedAgentConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2AutomatedAgentConfig>;
    readonly conversationProfilesId: pulumi.Input<string>;
    /**
     * Output only. Create time of the conversation profile.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Required. Human readable name for this profile. Max length 1024 bytes.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Configuration for agent assistance to use with this profile.
     */
    readonly humanAgentAssistantConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2HumanAgentAssistantConfig>;
    /**
     * Language which represents the conversationProfile. If unspecified, the default language code en-us applies. Users need to create a ConversationProfile for each language they want to support.
     */
    readonly languageCode?: pulumi.Input<string>;
    /**
     * Configuration for logging conversation lifecycle events.
     */
    readonly loggingConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2LoggingConfig>;
    /**
     * The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Configuration for publishing new message events. Event will be sent in format of ConversationEvent
     */
    readonly newMessageEventNotificationConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2NotificationConfig>;
    /**
     * Configuration for publishing conversation lifecycle events.
     */
    readonly notificationConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2NotificationConfig>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Settings for speech transcription.
     */
    readonly sttConfig?: pulumi.Input<inputs.dialogflow.v2.GoogleCloudDialogflowV2SpeechToTextConfig>;
    /**
     * Output only. Update time of the conversation profile.
     */
    readonly updateTime?: pulumi.Input<string>;
}
