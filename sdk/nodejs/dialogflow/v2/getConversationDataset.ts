// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Retrieves the specified conversation dataset.
 */
export function getConversationDataset(args: GetConversationDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetConversationDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dialogflow/v2:getConversationDataset", {
        "conversationDatasetId": args.conversationDatasetId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetConversationDatasetArgs {
    conversationDatasetId: string;
    location: string;
    project?: string;
}

export interface GetConversationDatasetResult {
    /**
     * The number of conversations this conversation dataset contains.
     */
    readonly conversationCount: string;
    /**
     * Metadata set during conversation data import.
     */
    readonly conversationInfo: outputs.dialogflow.v2.GoogleCloudDialogflowV2ConversationInfoResponse;
    /**
     * Creation time of this dataset.
     */
    readonly createTime: string;
    /**
     * Optional. The description of the dataset. Maximum of 10000 bytes.
     */
    readonly description: string;
    /**
     * The display name of the dataset. Maximum of 64 bytes.
     */
    readonly displayName: string;
    /**
     * Input configurations set during conversation data import.
     */
    readonly inputConfig: outputs.dialogflow.v2.GoogleCloudDialogflowV2InputConfigResponse;
    /**
     * ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`
     */
    readonly name: string;
}
/**
 * Retrieves the specified conversation dataset.
 */
export function getConversationDatasetOutput(args: GetConversationDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConversationDatasetResult> {
    return pulumi.output(args).apply((a: any) => getConversationDataset(a, opts))
}

export interface GetConversationDatasetOutputArgs {
    conversationDatasetId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
