// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an entity type in the specified agent.
 */
export class AgentEntityType extends pulumi.CustomResource {
    /**
     * Get an existing AgentEntityType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AgentEntityType {
        return new AgentEntityType(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dialogflow/v3:AgentEntityType';

    /**
     * Returns true if the given object is an instance of AgentEntityType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentEntityType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentEntityType.__pulumiType;
    }

    /**
     * Indicates whether the entity type can be automatically expanded.
     */
    public readonly autoExpansionMode!: pulumi.Output<string>;
    /**
     * Required. The human-readable name of the entity type, unique within the agent.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Enables fuzzy entity extraction during classification.
     */
    public readonly enableFuzzyExtraction!: pulumi.Output<boolean>;
    /**
     * The collection of entity entries associated with the entity type.
     */
    public readonly entities!: pulumi.Output<outputs.dialogflow.v3.GoogleCloudDialogflowCxV3EntityTypeEntityResponse[]>;
    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     */
    public readonly excludedPhrases!: pulumi.Output<outputs.dialogflow.v3.GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse[]>;
    /**
     * Required. Indicates the kind of entity type.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     */
    public readonly redact!: pulumi.Output<boolean>;

    /**
     * Create a AgentEntityType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentEntityTypeArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.agentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentId'");
            }
            if ((!args || args.entityTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityTypeId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["agentId"] = args ? args.agentId : undefined;
            inputs["autoExpansionMode"] = args ? args.autoExpansionMode : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["enableFuzzyExtraction"] = args ? args.enableFuzzyExtraction : undefined;
            inputs["entities"] = args ? args.entities : undefined;
            inputs["entityTypeId"] = args ? args.entityTypeId : undefined;
            inputs["excludedPhrases"] = args ? args.excludedPhrases : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["languageCode"] = args ? args.languageCode : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["redact"] = args ? args.redact : undefined;
        } else {
            inputs["autoExpansionMode"] = undefined /*out*/;
            inputs["displayName"] = undefined /*out*/;
            inputs["enableFuzzyExtraction"] = undefined /*out*/;
            inputs["entities"] = undefined /*out*/;
            inputs["excludedPhrases"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["redact"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AgentEntityType.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a AgentEntityType resource.
 */
export interface AgentEntityTypeArgs {
    readonly agentId: pulumi.Input<string>;
    /**
     * Indicates whether the entity type can be automatically expanded.
     */
    readonly autoExpansionMode?: pulumi.Input<string>;
    /**
     * Required. The human-readable name of the entity type, unique within the agent.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * Enables fuzzy entity extraction during classification.
     */
    readonly enableFuzzyExtraction?: pulumi.Input<boolean>;
    /**
     * The collection of entity entries associated with the entity type.
     */
    readonly entities?: pulumi.Input<pulumi.Input<inputs.dialogflow.v3.GoogleCloudDialogflowCxV3EntityTypeEntityArgs>[]>;
    readonly entityTypeId: pulumi.Input<string>;
    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     */
    readonly excludedPhrases?: pulumi.Input<pulumi.Input<inputs.dialogflow.v3.GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseArgs>[]>;
    /**
     * Required. Indicates the kind of entity type.
     */
    readonly kind?: pulumi.Input<string>;
    readonly languageCode?: pulumi.Input<string>;
    readonly location: pulumi.Input<string>;
    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     */
    readonly name?: pulumi.Input<string>;
    readonly project: pulumi.Input<string>;
    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     */
    readonly redact?: pulumi.Input<boolean>;
}
