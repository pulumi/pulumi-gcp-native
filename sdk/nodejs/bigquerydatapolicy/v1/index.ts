// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DataPolicyArgs } from "./dataPolicy";
export type DataPolicy = import("./dataPolicy").DataPolicy;
export const DataPolicy: typeof import("./dataPolicy").DataPolicy = null as any;
utilities.lazyLoad(exports, ["DataPolicy"], () => require("./dataPolicy"));

export { DataPolicyIamBindingArgs } from "./dataPolicyIamBinding";
export type DataPolicyIamBinding = import("./dataPolicyIamBinding").DataPolicyIamBinding;
export const DataPolicyIamBinding: typeof import("./dataPolicyIamBinding").DataPolicyIamBinding = null as any;
utilities.lazyLoad(exports, ["DataPolicyIamBinding"], () => require("./dataPolicyIamBinding"));

export { DataPolicyIamMemberArgs } from "./dataPolicyIamMember";
export type DataPolicyIamMember = import("./dataPolicyIamMember").DataPolicyIamMember;
export const DataPolicyIamMember: typeof import("./dataPolicyIamMember").DataPolicyIamMember = null as any;
utilities.lazyLoad(exports, ["DataPolicyIamMember"], () => require("./dataPolicyIamMember"));

export { DataPolicyIamPolicyArgs } from "./dataPolicyIamPolicy";
export type DataPolicyIamPolicy = import("./dataPolicyIamPolicy").DataPolicyIamPolicy;
export const DataPolicyIamPolicy: typeof import("./dataPolicyIamPolicy").DataPolicyIamPolicy = null as any;
utilities.lazyLoad(exports, ["DataPolicyIamPolicy"], () => require("./dataPolicyIamPolicy"));

export { GetDataPolicyArgs, GetDataPolicyResult, GetDataPolicyOutputArgs } from "./getDataPolicy";
export const getDataPolicy: typeof import("./getDataPolicy").getDataPolicy = null as any;
export const getDataPolicyOutput: typeof import("./getDataPolicy").getDataPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDataPolicy","getDataPolicyOutput"], () => require("./getDataPolicy"));

export { GetDataPolicyIamPolicyArgs, GetDataPolicyIamPolicyResult, GetDataPolicyIamPolicyOutputArgs } from "./getDataPolicyIamPolicy";
export const getDataPolicyIamPolicy: typeof import("./getDataPolicyIamPolicy").getDataPolicyIamPolicy = null as any;
export const getDataPolicyIamPolicyOutput: typeof import("./getDataPolicyIamPolicy").getDataPolicyIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDataPolicyIamPolicy","getDataPolicyIamPolicyOutput"], () => require("./getDataPolicyIamPolicy"));


// Export enums:
export * from "../../types/enums/bigquerydatapolicy/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:bigquerydatapolicy/v1:DataPolicy":
                return new DataPolicy(name, <any>undefined, { urn })
            case "google-native:bigquerydatapolicy/v1:DataPolicyIamBinding":
                return new DataPolicyIamBinding(name, <any>undefined, { urn })
            case "google-native:bigquerydatapolicy/v1:DataPolicyIamMember":
                return new DataPolicyIamMember(name, <any>undefined, { urn })
            case "google-native:bigquerydatapolicy/v1:DataPolicyIamPolicy":
                return new DataPolicyIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "bigquerydatapolicy/v1", _module)
