// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.
 */
export function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:vpcaccess/v1beta1:getConnector", {
        "connectorId": args.connectorId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetConnectorArgs {
    connectorId: string;
    location: string;
    project?: string;
}

export interface GetConnectorResult {
    /**
     * List of projects using the connector.
     */
    readonly connectedProjects: string[];
    /**
     * The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.
     */
    readonly ipCidrRange: string;
    /**
     * Machine type of VM Instance underlying connector. Default is e2-micro
     */
    readonly machineType: string;
    /**
     * Maximum value of instances in autoscaling group underlying the connector.
     */
    readonly maxInstances: number;
    /**
     * Maximum throughput of the connector in Mbps. Refers to the expected throughput when using an `e2-micro` machine type. Value must be a multiple of 100 from 300 through 1000. Must be higher than the value specified by --min-throughput. If both max-throughput and max-instances are provided, max-instances takes precedence over max-throughput. The use of `max-throughput` is discouraged in favor of `max-instances`.
     */
    readonly maxThroughput: number;
    /**
     * Minimum value of instances in autoscaling group underlying the connector.
     */
    readonly minInstances: number;
    /**
     * Minimum throughput of the connector in Mbps. Refers to the expected throughput when using an `e2-micro` machine type. Value must be a multiple of 100 from 200 through 900. Must be lower than the value specified by --max-throughput. If both min-throughput and min-instances are provided, min-instances takes precedence over min-throughput. The use of `min-throughput` is discouraged in favor of `min-instances`.
     */
    readonly minThroughput: number;
    /**
     * The resource name in the format `projects/*&#47;locations/*&#47;connectors/*`.
     */
    readonly name: string;
    /**
     * Name of a VPC network.
     */
    readonly network: string;
    /**
     * State of the VPC access connector.
     */
    readonly state: string;
    /**
     * The subnet in which to house the VPC Access Connector.
     */
    readonly subnet: outputs.vpcaccess.v1beta1.SubnetResponse;
}
/**
 * Gets a Serverless VPC Access connector. Returns NOT_FOUND if the resource does not exist.
 */
export function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorResult> {
    return pulumi.output(args).apply((a: any) => getConnector(a, opts))
}

export interface GetConnectorOutputArgs {
    connectorId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
