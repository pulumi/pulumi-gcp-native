// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.
 */
export class TargetProject extends pulumi.CustomResource {
    /**
     * Get an existing TargetProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TargetProject {
        return new TargetProject(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:vmmigration/v1:TargetProject';

    /**
     * Returns true if the given object is an instance of TargetProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetProject.__pulumiType;
    }

    /**
     * The time this target project resource was created (not related to when the Compute Engine project it points to was created).
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The target project's description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the target project.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The target project ID (number) or project name.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The last time the target project resource was updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a TargetProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetProjectArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.targetProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetProjectId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["targetProjectId"] = args ? args.targetProjectId : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["project"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TargetProject.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a TargetProject resource.
 */
export interface TargetProjectArgs {
    /**
     * The target project's description.
     */
    description?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * The name of the target project.
     */
    name?: pulumi.Input<string>;
    /**
     * The target project ID (number) or project name.
     */
    project?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    targetProjectId: pulumi.Input<string>;
}
