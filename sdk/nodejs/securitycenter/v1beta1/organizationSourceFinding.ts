// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a finding. The corresponding source must exist for finding creation to succeed.
 */
export class OrganizationSourceFinding extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationSourceFinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OrganizationSourceFinding {
        return new OrganizationSourceFinding(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:securitycenter/v1beta1:OrganizationSourceFinding';

    /**
     * Returns true if the given object is an instance of OrganizationSourceFinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationSourceFinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationSourceFinding.__pulumiType;
    }


    /**
     * Create a OrganizationSourceFinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationSourceFindingArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.organizationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationsId'");
            }
            if ((!args || args.sourcesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourcesId'");
            }
            inputs["category"] = args ? args.category : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["eventTime"] = args ? args.eventTime : undefined;
            inputs["externalUri"] = args ? args.externalUri : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["organizationsId"] = args ? args.organizationsId : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["resourceName"] = args ? args.resourceName : undefined;
            inputs["securityMarks"] = args ? args.securityMarks : undefined;
            inputs["sourceProperties"] = args ? args.sourceProperties : undefined;
            inputs["sourcesId"] = args ? args.sourcesId : undefined;
            inputs["state"] = args ? args.state : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(OrganizationSourceFinding.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a OrganizationSourceFinding resource.
 */
export interface OrganizationSourceFindingArgs {
    /**
     * The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
     */
    readonly category?: pulumi.Input<string>;
    /**
     * The time at which the finding was created in Security Command Center.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved.
     */
    readonly eventTime?: pulumi.Input<string>;
    /**
     * The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
     */
    readonly externalUri?: pulumi.Input<string>;
    /**
     * The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
     */
    readonly name?: pulumi.Input<string>;
    readonly organizationsId: pulumi.Input<string>;
    /**
     * Immutable. The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
     */
    readonly parent?: pulumi.Input<string>;
    /**
     * For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
     */
    readonly resourceName?: pulumi.Input<string>;
    /**
     * Output only. User specified security marks. These marks are entirely managed by the user and come from the SecurityMarks resource that belongs to the finding.
     */
    readonly securityMarks?: pulumi.Input<inputs.securitycenter.v1beta1.GoogleCloudSecuritycenterV1beta1SecurityMarks>;
    /**
     * Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
     */
    readonly sourceProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly sourcesId: pulumi.Input<string>;
    /**
     * The state of the finding.
     */
    readonly state?: pulumi.Input<string>;
}
