// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single bare metal Cluster.
 */
export function getBareMetalCluster(args: GetBareMetalClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetBareMetalClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:gkeonprem/v1:getBareMetalCluster", {
        "bareMetalClusterId": args.bareMetalClusterId,
        "location": args.location,
        "project": args.project,
        "view": args.view,
    }, opts);
}

export interface GetBareMetalClusterArgs {
    bareMetalClusterId: string;
    location: string;
    project?: string;
    view?: string;
}

export interface GetBareMetalClusterResult {
    /**
     * The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
     */
    readonly adminClusterMembership: string;
    /**
     * The resource name of the bare metal admin cluster managing this user cluster.
     */
    readonly adminClusterName: string;
    /**
     * Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    readonly annotations: {[key: string]: string};
    /**
     * The Anthos clusters on bare metal version for your user cluster.
     */
    readonly bareMetalVersion: string;
    /**
     * Cluster operations configuration.
     */
    readonly clusterOperations: outputs.gkeonprem.v1.BareMetalClusterOperationsConfigResponse;
    /**
     * Control plane configuration.
     */
    readonly controlPlane: outputs.gkeonprem.v1.BareMetalControlPlaneConfigResponse;
    /**
     * The time when the bare metal user cluster was created.
     */
    readonly createTime: string;
    /**
     * The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty
     */
    readonly deleteTime: string;
    /**
     * A human readable description of this bare metal user cluster.
     */
    readonly description: string;
    /**
     * The IP address of the bare metal user cluster's API server.
     */
    readonly endpoint: string;
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    readonly etag: string;
    /**
     * Fleet configuration for the cluster.
     */
    readonly fleet: outputs.gkeonprem.v1.FleetResponse;
    /**
     * Load balancer configuration.
     */
    readonly loadBalancer: outputs.gkeonprem.v1.BareMetalLoadBalancerConfigResponse;
    /**
     * The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl.
     */
    readonly localName: string;
    /**
     * Maintenance configuration.
     */
    readonly maintenanceConfig: outputs.gkeonprem.v1.BareMetalMaintenanceConfigResponse;
    /**
     * Status of on-going maintenance tasks.
     */
    readonly maintenanceStatus: outputs.gkeonprem.v1.BareMetalMaintenanceStatusResponse;
    /**
     * Immutable. The bare metal user cluster resource name.
     */
    readonly name: string;
    /**
     * Network configuration.
     */
    readonly networkConfig: outputs.gkeonprem.v1.BareMetalNetworkConfigResponse;
    /**
     * Node access related configurations.
     */
    readonly nodeAccessConfig: outputs.gkeonprem.v1.BareMetalNodeAccessConfigResponse;
    /**
     * Workload node configuration.
     */
    readonly nodeConfig: outputs.gkeonprem.v1.BareMetalWorkloadNodeConfigResponse;
    /**
     * OS environment related configurations.
     */
    readonly osEnvironmentConfig: outputs.gkeonprem.v1.BareMetalOsEnvironmentConfigResponse;
    /**
     * Proxy configuration.
     */
    readonly proxy: outputs.gkeonprem.v1.BareMetalProxyConfigResponse;
    /**
     * If set, there are currently changes in flight to the bare metal user cluster.
     */
    readonly reconciling: boolean;
    /**
     * Security related setting configuration.
     */
    readonly securityConfig: outputs.gkeonprem.v1.BareMetalSecurityConfigResponse;
    /**
     * The current state of the bare metal user cluster.
     */
    readonly state: string;
    /**
     * Detailed cluster status.
     */
    readonly status: outputs.gkeonprem.v1.ResourceStatusResponse;
    /**
     * Storage configuration.
     */
    readonly storage: outputs.gkeonprem.v1.BareMetalStorageConfigResponse;
    /**
     * The unique identifier of the bare metal user cluster.
     */
    readonly uid: string;
    /**
     * The time when the bare metal user cluster was last updated.
     */
    readonly updateTime: string;
    /**
     * The result of the preflight check.
     */
    readonly validationCheck: outputs.gkeonprem.v1.ValidationCheckResponse;
}
/**
 * Gets details of a single bare metal Cluster.
 */
export function getBareMetalClusterOutput(args: GetBareMetalClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBareMetalClusterResult> {
    return pulumi.output(args).apply((a: any) => getBareMetalCluster(a, opts))
}

export interface GetBareMetalClusterOutputArgs {
    bareMetalClusterId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}
