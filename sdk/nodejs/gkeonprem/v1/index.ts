// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BareMetalAdminClusterArgs } from "./bareMetalAdminCluster";
export type BareMetalAdminCluster = import("./bareMetalAdminCluster").BareMetalAdminCluster;
export const BareMetalAdminCluster: typeof import("./bareMetalAdminCluster").BareMetalAdminCluster = null as any;
utilities.lazyLoad(exports, ["BareMetalAdminCluster"], () => require("./bareMetalAdminCluster"));

export { BareMetalAdminClusterIamBindingArgs } from "./bareMetalAdminClusterIamBinding";
export type BareMetalAdminClusterIamBinding = import("./bareMetalAdminClusterIamBinding").BareMetalAdminClusterIamBinding;
export const BareMetalAdminClusterIamBinding: typeof import("./bareMetalAdminClusterIamBinding").BareMetalAdminClusterIamBinding = null as any;
utilities.lazyLoad(exports, ["BareMetalAdminClusterIamBinding"], () => require("./bareMetalAdminClusterIamBinding"));

export { BareMetalAdminClusterIamMemberArgs } from "./bareMetalAdminClusterIamMember";
export type BareMetalAdminClusterIamMember = import("./bareMetalAdminClusterIamMember").BareMetalAdminClusterIamMember;
export const BareMetalAdminClusterIamMember: typeof import("./bareMetalAdminClusterIamMember").BareMetalAdminClusterIamMember = null as any;
utilities.lazyLoad(exports, ["BareMetalAdminClusterIamMember"], () => require("./bareMetalAdminClusterIamMember"));

export { BareMetalAdminClusterIamPolicyArgs } from "./bareMetalAdminClusterIamPolicy";
export type BareMetalAdminClusterIamPolicy = import("./bareMetalAdminClusterIamPolicy").BareMetalAdminClusterIamPolicy;
export const BareMetalAdminClusterIamPolicy: typeof import("./bareMetalAdminClusterIamPolicy").BareMetalAdminClusterIamPolicy = null as any;
utilities.lazyLoad(exports, ["BareMetalAdminClusterIamPolicy"], () => require("./bareMetalAdminClusterIamPolicy"));

export { BareMetalClusterArgs } from "./bareMetalCluster";
export type BareMetalCluster = import("./bareMetalCluster").BareMetalCluster;
export const BareMetalCluster: typeof import("./bareMetalCluster").BareMetalCluster = null as any;
utilities.lazyLoad(exports, ["BareMetalCluster"], () => require("./bareMetalCluster"));

export { BareMetalClusterBareMetalNodePoolIamBindingArgs } from "./bareMetalClusterBareMetalNodePoolIamBinding";
export type BareMetalClusterBareMetalNodePoolIamBinding = import("./bareMetalClusterBareMetalNodePoolIamBinding").BareMetalClusterBareMetalNodePoolIamBinding;
export const BareMetalClusterBareMetalNodePoolIamBinding: typeof import("./bareMetalClusterBareMetalNodePoolIamBinding").BareMetalClusterBareMetalNodePoolIamBinding = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterBareMetalNodePoolIamBinding"], () => require("./bareMetalClusterBareMetalNodePoolIamBinding"));

export { BareMetalClusterBareMetalNodePoolIamMemberArgs } from "./bareMetalClusterBareMetalNodePoolIamMember";
export type BareMetalClusterBareMetalNodePoolIamMember = import("./bareMetalClusterBareMetalNodePoolIamMember").BareMetalClusterBareMetalNodePoolIamMember;
export const BareMetalClusterBareMetalNodePoolIamMember: typeof import("./bareMetalClusterBareMetalNodePoolIamMember").BareMetalClusterBareMetalNodePoolIamMember = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterBareMetalNodePoolIamMember"], () => require("./bareMetalClusterBareMetalNodePoolIamMember"));

export { BareMetalClusterBareMetalNodePoolIamPolicyArgs } from "./bareMetalClusterBareMetalNodePoolIamPolicy";
export type BareMetalClusterBareMetalNodePoolIamPolicy = import("./bareMetalClusterBareMetalNodePoolIamPolicy").BareMetalClusterBareMetalNodePoolIamPolicy;
export const BareMetalClusterBareMetalNodePoolIamPolicy: typeof import("./bareMetalClusterBareMetalNodePoolIamPolicy").BareMetalClusterBareMetalNodePoolIamPolicy = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterBareMetalNodePoolIamPolicy"], () => require("./bareMetalClusterBareMetalNodePoolIamPolicy"));

export { BareMetalClusterIamBindingArgs } from "./bareMetalClusterIamBinding";
export type BareMetalClusterIamBinding = import("./bareMetalClusterIamBinding").BareMetalClusterIamBinding;
export const BareMetalClusterIamBinding: typeof import("./bareMetalClusterIamBinding").BareMetalClusterIamBinding = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterIamBinding"], () => require("./bareMetalClusterIamBinding"));

export { BareMetalClusterIamMemberArgs } from "./bareMetalClusterIamMember";
export type BareMetalClusterIamMember = import("./bareMetalClusterIamMember").BareMetalClusterIamMember;
export const BareMetalClusterIamMember: typeof import("./bareMetalClusterIamMember").BareMetalClusterIamMember = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterIamMember"], () => require("./bareMetalClusterIamMember"));

export { BareMetalClusterIamPolicyArgs } from "./bareMetalClusterIamPolicy";
export type BareMetalClusterIamPolicy = import("./bareMetalClusterIamPolicy").BareMetalClusterIamPolicy;
export const BareMetalClusterIamPolicy: typeof import("./bareMetalClusterIamPolicy").BareMetalClusterIamPolicy = null as any;
utilities.lazyLoad(exports, ["BareMetalClusterIamPolicy"], () => require("./bareMetalClusterIamPolicy"));

export { BareMetalNodePoolArgs } from "./bareMetalNodePool";
export type BareMetalNodePool = import("./bareMetalNodePool").BareMetalNodePool;
export const BareMetalNodePool: typeof import("./bareMetalNodePool").BareMetalNodePool = null as any;
utilities.lazyLoad(exports, ["BareMetalNodePool"], () => require("./bareMetalNodePool"));

export { GetBareMetalAdminClusterArgs, GetBareMetalAdminClusterResult, GetBareMetalAdminClusterOutputArgs } from "./getBareMetalAdminCluster";
export const getBareMetalAdminCluster: typeof import("./getBareMetalAdminCluster").getBareMetalAdminCluster = null as any;
export const getBareMetalAdminClusterOutput: typeof import("./getBareMetalAdminCluster").getBareMetalAdminClusterOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalAdminCluster","getBareMetalAdminClusterOutput"], () => require("./getBareMetalAdminCluster"));

export { GetBareMetalAdminClusterIamPolicyArgs, GetBareMetalAdminClusterIamPolicyResult, GetBareMetalAdminClusterIamPolicyOutputArgs } from "./getBareMetalAdminClusterIamPolicy";
export const getBareMetalAdminClusterIamPolicy: typeof import("./getBareMetalAdminClusterIamPolicy").getBareMetalAdminClusterIamPolicy = null as any;
export const getBareMetalAdminClusterIamPolicyOutput: typeof import("./getBareMetalAdminClusterIamPolicy").getBareMetalAdminClusterIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalAdminClusterIamPolicy","getBareMetalAdminClusterIamPolicyOutput"], () => require("./getBareMetalAdminClusterIamPolicy"));

export { GetBareMetalClusterArgs, GetBareMetalClusterResult, GetBareMetalClusterOutputArgs } from "./getBareMetalCluster";
export const getBareMetalCluster: typeof import("./getBareMetalCluster").getBareMetalCluster = null as any;
export const getBareMetalClusterOutput: typeof import("./getBareMetalCluster").getBareMetalClusterOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalCluster","getBareMetalClusterOutput"], () => require("./getBareMetalCluster"));

export { GetBareMetalClusterBareMetalNodePoolIamPolicyArgs, GetBareMetalClusterBareMetalNodePoolIamPolicyResult, GetBareMetalClusterBareMetalNodePoolIamPolicyOutputArgs } from "./getBareMetalClusterBareMetalNodePoolIamPolicy";
export const getBareMetalClusterBareMetalNodePoolIamPolicy: typeof import("./getBareMetalClusterBareMetalNodePoolIamPolicy").getBareMetalClusterBareMetalNodePoolIamPolicy = null as any;
export const getBareMetalClusterBareMetalNodePoolIamPolicyOutput: typeof import("./getBareMetalClusterBareMetalNodePoolIamPolicy").getBareMetalClusterBareMetalNodePoolIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalClusterBareMetalNodePoolIamPolicy","getBareMetalClusterBareMetalNodePoolIamPolicyOutput"], () => require("./getBareMetalClusterBareMetalNodePoolIamPolicy"));

export { GetBareMetalClusterIamPolicyArgs, GetBareMetalClusterIamPolicyResult, GetBareMetalClusterIamPolicyOutputArgs } from "./getBareMetalClusterIamPolicy";
export const getBareMetalClusterIamPolicy: typeof import("./getBareMetalClusterIamPolicy").getBareMetalClusterIamPolicy = null as any;
export const getBareMetalClusterIamPolicyOutput: typeof import("./getBareMetalClusterIamPolicy").getBareMetalClusterIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalClusterIamPolicy","getBareMetalClusterIamPolicyOutput"], () => require("./getBareMetalClusterIamPolicy"));

export { GetBareMetalNodePoolArgs, GetBareMetalNodePoolResult, GetBareMetalNodePoolOutputArgs } from "./getBareMetalNodePool";
export const getBareMetalNodePool: typeof import("./getBareMetalNodePool").getBareMetalNodePool = null as any;
export const getBareMetalNodePoolOutput: typeof import("./getBareMetalNodePool").getBareMetalNodePoolOutput = null as any;
utilities.lazyLoad(exports, ["getBareMetalNodePool","getBareMetalNodePoolOutput"], () => require("./getBareMetalNodePool"));

export { GetVmwareAdminClusterIamPolicyArgs, GetVmwareAdminClusterIamPolicyResult, GetVmwareAdminClusterIamPolicyOutputArgs } from "./getVmwareAdminClusterIamPolicy";
export const getVmwareAdminClusterIamPolicy: typeof import("./getVmwareAdminClusterIamPolicy").getVmwareAdminClusterIamPolicy = null as any;
export const getVmwareAdminClusterIamPolicyOutput: typeof import("./getVmwareAdminClusterIamPolicy").getVmwareAdminClusterIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareAdminClusterIamPolicy","getVmwareAdminClusterIamPolicyOutput"], () => require("./getVmwareAdminClusterIamPolicy"));

export { GetVmwareClusterArgs, GetVmwareClusterResult, GetVmwareClusterOutputArgs } from "./getVmwareCluster";
export const getVmwareCluster: typeof import("./getVmwareCluster").getVmwareCluster = null as any;
export const getVmwareClusterOutput: typeof import("./getVmwareCluster").getVmwareClusterOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareCluster","getVmwareClusterOutput"], () => require("./getVmwareCluster"));

export { GetVmwareClusterIamPolicyArgs, GetVmwareClusterIamPolicyResult, GetVmwareClusterIamPolicyOutputArgs } from "./getVmwareClusterIamPolicy";
export const getVmwareClusterIamPolicy: typeof import("./getVmwareClusterIamPolicy").getVmwareClusterIamPolicy = null as any;
export const getVmwareClusterIamPolicyOutput: typeof import("./getVmwareClusterIamPolicy").getVmwareClusterIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareClusterIamPolicy","getVmwareClusterIamPolicyOutput"], () => require("./getVmwareClusterIamPolicy"));

export { GetVmwareClusterVmwareNodePoolIamPolicyArgs, GetVmwareClusterVmwareNodePoolIamPolicyResult, GetVmwareClusterVmwareNodePoolIamPolicyOutputArgs } from "./getVmwareClusterVmwareNodePoolIamPolicy";
export const getVmwareClusterVmwareNodePoolIamPolicy: typeof import("./getVmwareClusterVmwareNodePoolIamPolicy").getVmwareClusterVmwareNodePoolIamPolicy = null as any;
export const getVmwareClusterVmwareNodePoolIamPolicyOutput: typeof import("./getVmwareClusterVmwareNodePoolIamPolicy").getVmwareClusterVmwareNodePoolIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareClusterVmwareNodePoolIamPolicy","getVmwareClusterVmwareNodePoolIamPolicyOutput"], () => require("./getVmwareClusterVmwareNodePoolIamPolicy"));

export { GetVmwareNodePoolArgs, GetVmwareNodePoolResult, GetVmwareNodePoolOutputArgs } from "./getVmwareNodePool";
export const getVmwareNodePool: typeof import("./getVmwareNodePool").getVmwareNodePool = null as any;
export const getVmwareNodePoolOutput: typeof import("./getVmwareNodePool").getVmwareNodePoolOutput = null as any;
utilities.lazyLoad(exports, ["getVmwareNodePool","getVmwareNodePoolOutput"], () => require("./getVmwareNodePool"));

export { VmwareAdminClusterIamBindingArgs } from "./vmwareAdminClusterIamBinding";
export type VmwareAdminClusterIamBinding = import("./vmwareAdminClusterIamBinding").VmwareAdminClusterIamBinding;
export const VmwareAdminClusterIamBinding: typeof import("./vmwareAdminClusterIamBinding").VmwareAdminClusterIamBinding = null as any;
utilities.lazyLoad(exports, ["VmwareAdminClusterIamBinding"], () => require("./vmwareAdminClusterIamBinding"));

export { VmwareAdminClusterIamMemberArgs } from "./vmwareAdminClusterIamMember";
export type VmwareAdminClusterIamMember = import("./vmwareAdminClusterIamMember").VmwareAdminClusterIamMember;
export const VmwareAdminClusterIamMember: typeof import("./vmwareAdminClusterIamMember").VmwareAdminClusterIamMember = null as any;
utilities.lazyLoad(exports, ["VmwareAdminClusterIamMember"], () => require("./vmwareAdminClusterIamMember"));

export { VmwareAdminClusterIamPolicyArgs } from "./vmwareAdminClusterIamPolicy";
export type VmwareAdminClusterIamPolicy = import("./vmwareAdminClusterIamPolicy").VmwareAdminClusterIamPolicy;
export const VmwareAdminClusterIamPolicy: typeof import("./vmwareAdminClusterIamPolicy").VmwareAdminClusterIamPolicy = null as any;
utilities.lazyLoad(exports, ["VmwareAdminClusterIamPolicy"], () => require("./vmwareAdminClusterIamPolicy"));

export { VmwareClusterArgs } from "./vmwareCluster";
export type VmwareCluster = import("./vmwareCluster").VmwareCluster;
export const VmwareCluster: typeof import("./vmwareCluster").VmwareCluster = null as any;
utilities.lazyLoad(exports, ["VmwareCluster"], () => require("./vmwareCluster"));

export { VmwareClusterIamBindingArgs } from "./vmwareClusterIamBinding";
export type VmwareClusterIamBinding = import("./vmwareClusterIamBinding").VmwareClusterIamBinding;
export const VmwareClusterIamBinding: typeof import("./vmwareClusterIamBinding").VmwareClusterIamBinding = null as any;
utilities.lazyLoad(exports, ["VmwareClusterIamBinding"], () => require("./vmwareClusterIamBinding"));

export { VmwareClusterIamMemberArgs } from "./vmwareClusterIamMember";
export type VmwareClusterIamMember = import("./vmwareClusterIamMember").VmwareClusterIamMember;
export const VmwareClusterIamMember: typeof import("./vmwareClusterIamMember").VmwareClusterIamMember = null as any;
utilities.lazyLoad(exports, ["VmwareClusterIamMember"], () => require("./vmwareClusterIamMember"));

export { VmwareClusterIamPolicyArgs } from "./vmwareClusterIamPolicy";
export type VmwareClusterIamPolicy = import("./vmwareClusterIamPolicy").VmwareClusterIamPolicy;
export const VmwareClusterIamPolicy: typeof import("./vmwareClusterIamPolicy").VmwareClusterIamPolicy = null as any;
utilities.lazyLoad(exports, ["VmwareClusterIamPolicy"], () => require("./vmwareClusterIamPolicy"));

export { VmwareClusterVmwareNodePoolIamBindingArgs } from "./vmwareClusterVmwareNodePoolIamBinding";
export type VmwareClusterVmwareNodePoolIamBinding = import("./vmwareClusterVmwareNodePoolIamBinding").VmwareClusterVmwareNodePoolIamBinding;
export const VmwareClusterVmwareNodePoolIamBinding: typeof import("./vmwareClusterVmwareNodePoolIamBinding").VmwareClusterVmwareNodePoolIamBinding = null as any;
utilities.lazyLoad(exports, ["VmwareClusterVmwareNodePoolIamBinding"], () => require("./vmwareClusterVmwareNodePoolIamBinding"));

export { VmwareClusterVmwareNodePoolIamMemberArgs } from "./vmwareClusterVmwareNodePoolIamMember";
export type VmwareClusterVmwareNodePoolIamMember = import("./vmwareClusterVmwareNodePoolIamMember").VmwareClusterVmwareNodePoolIamMember;
export const VmwareClusterVmwareNodePoolIamMember: typeof import("./vmwareClusterVmwareNodePoolIamMember").VmwareClusterVmwareNodePoolIamMember = null as any;
utilities.lazyLoad(exports, ["VmwareClusterVmwareNodePoolIamMember"], () => require("./vmwareClusterVmwareNodePoolIamMember"));

export { VmwareClusterVmwareNodePoolIamPolicyArgs } from "./vmwareClusterVmwareNodePoolIamPolicy";
export type VmwareClusterVmwareNodePoolIamPolicy = import("./vmwareClusterVmwareNodePoolIamPolicy").VmwareClusterVmwareNodePoolIamPolicy;
export const VmwareClusterVmwareNodePoolIamPolicy: typeof import("./vmwareClusterVmwareNodePoolIamPolicy").VmwareClusterVmwareNodePoolIamPolicy = null as any;
utilities.lazyLoad(exports, ["VmwareClusterVmwareNodePoolIamPolicy"], () => require("./vmwareClusterVmwareNodePoolIamPolicy"));

export { VmwareNodePoolArgs } from "./vmwareNodePool";
export type VmwareNodePool = import("./vmwareNodePool").VmwareNodePool;
export const VmwareNodePool: typeof import("./vmwareNodePool").VmwareNodePool = null as any;
utilities.lazyLoad(exports, ["VmwareNodePool"], () => require("./vmwareNodePool"));


// Export enums:
export * from "../../types/enums/gkeonprem/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:gkeonprem/v1:BareMetalAdminCluster":
                return new BareMetalAdminCluster(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalAdminClusterIamBinding":
                return new BareMetalAdminClusterIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalAdminClusterIamMember":
                return new BareMetalAdminClusterIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalAdminClusterIamPolicy":
                return new BareMetalAdminClusterIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalCluster":
                return new BareMetalCluster(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterBareMetalNodePoolIamBinding":
                return new BareMetalClusterBareMetalNodePoolIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterBareMetalNodePoolIamMember":
                return new BareMetalClusterBareMetalNodePoolIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterBareMetalNodePoolIamPolicy":
                return new BareMetalClusterBareMetalNodePoolIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterIamBinding":
                return new BareMetalClusterIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterIamMember":
                return new BareMetalClusterIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalClusterIamPolicy":
                return new BareMetalClusterIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:BareMetalNodePool":
                return new BareMetalNodePool(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareAdminClusterIamBinding":
                return new VmwareAdminClusterIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareAdminClusterIamMember":
                return new VmwareAdminClusterIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareAdminClusterIamPolicy":
                return new VmwareAdminClusterIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareCluster":
                return new VmwareCluster(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterIamBinding":
                return new VmwareClusterIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterIamMember":
                return new VmwareClusterIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterIamPolicy":
                return new VmwareClusterIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterVmwareNodePoolIamBinding":
                return new VmwareClusterVmwareNodePoolIamBinding(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterVmwareNodePoolIamMember":
                return new VmwareClusterVmwareNodePoolIamMember(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareClusterVmwareNodePoolIamPolicy":
                return new VmwareClusterVmwareNodePoolIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkeonprem/v1:VmwareNodePool":
                return new VmwareNodePool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "gkeonprem/v1", _module)
