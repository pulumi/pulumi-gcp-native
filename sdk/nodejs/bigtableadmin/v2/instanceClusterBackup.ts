// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Starts creating a new Cloud Bigtable Backup. The returned backup long-running operation can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup.
 */
export class InstanceClusterBackup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceClusterBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceClusterBackup {
        return new InstanceClusterBackup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:bigtableadmin/v2:InstanceClusterBackup';

    /**
     * Returns true if the given object is an instance of InstanceClusterBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceClusterBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceClusterBackup.__pulumiType;
    }


    /**
     * Create a InstanceClusterBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceClusterBackupArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.backupsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupsId'");
            }
            if ((!args || args.clustersId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clustersId'");
            }
            if ((!args || args.instancesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instancesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["backupsId"] = args ? args.backupsId : undefined;
            inputs["clustersId"] = args ? args.clustersId : undefined;
            inputs["encryptionInfo"] = args ? args.encryptionInfo : undefined;
            inputs["endTime"] = args ? args.endTime : undefined;
            inputs["expireTime"] = args ? args.expireTime : undefined;
            inputs["instancesId"] = args ? args.instancesId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["sizeBytes"] = args ? args.sizeBytes : undefined;
            inputs["sourceTable"] = args ? args.sourceTable : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["state"] = args ? args.state : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceClusterBackup.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceClusterBackup resource.
 */
export interface InstanceClusterBackupArgs {
    readonly backupsId: pulumi.Input<string>;
    readonly clustersId: pulumi.Input<string>;
    /**
     * Output only. The encryption information for the backup.
     */
    readonly encryptionInfo?: pulumi.Input<inputs.bigtableadmin.v2.EncryptionInfo>;
    /**
     * Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.
     */
    readonly endTime?: pulumi.Input<string>;
    /**
     * Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.
     */
    readonly expireTime?: pulumi.Input<string>;
    readonly instancesId: pulumi.Input<string>;
    /**
     * A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Output only. Size of the backup in bytes.
     */
    readonly sizeBytes?: pulumi.Input<string>;
    /**
     * Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.
     */
    readonly sourceTable?: pulumi.Input<string>;
    /**
     * Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp.
     */
    readonly startTime?: pulumi.Input<string>;
    /**
     * Output only. The current state of the backup.
     */
    readonly state?: pulumi.Input<string>;
}
