// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AppProfileArgs } from "./appProfile";
export type AppProfile = import("./appProfile").AppProfile;
export const AppProfile: typeof import("./appProfile").AppProfile = null as any;

export { BackupArgs } from "./backup";
export type Backup = import("./backup").Backup;
export const Backup: typeof import("./backup").Backup = null as any;

export { ClusterArgs } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;

export { GetAppProfileArgs, GetAppProfileResult, GetAppProfileOutputArgs } from "./getAppProfile";
export const getAppProfile: typeof import("./getAppProfile").getAppProfile = null as any;
export const getAppProfileOutput: typeof import("./getAppProfile").getAppProfileOutput = null as any;

export { GetBackupArgs, GetBackupResult, GetBackupOutputArgs } from "./getBackup";
export const getBackup: typeof import("./getBackup").getBackup = null as any;
export const getBackupOutput: typeof import("./getBackup").getBackupOutput = null as any;

export { GetClusterArgs, GetClusterResult, GetClusterOutputArgs } from "./getCluster";
export const getCluster: typeof import("./getCluster").getCluster = null as any;
export const getClusterOutput: typeof import("./getCluster").getClusterOutput = null as any;

export { GetInstanceArgs, GetInstanceResult, GetInstanceOutputArgs } from "./getInstance";
export const getInstance: typeof import("./getInstance").getInstance = null as any;
export const getInstanceOutput: typeof import("./getInstance").getInstanceOutput = null as any;

export { GetInstanceClusterBackupIamPolicyArgs, GetInstanceClusterBackupIamPolicyResult, GetInstanceClusterBackupIamPolicyOutputArgs } from "./getInstanceClusterBackupIamPolicy";
export const getInstanceClusterBackupIamPolicy: typeof import("./getInstanceClusterBackupIamPolicy").getInstanceClusterBackupIamPolicy = null as any;
export const getInstanceClusterBackupIamPolicyOutput: typeof import("./getInstanceClusterBackupIamPolicy").getInstanceClusterBackupIamPolicyOutput = null as any;

export { GetInstanceIamPolicyArgs, GetInstanceIamPolicyResult, GetInstanceIamPolicyOutputArgs } from "./getInstanceIamPolicy";
export const getInstanceIamPolicy: typeof import("./getInstanceIamPolicy").getInstanceIamPolicy = null as any;
export const getInstanceIamPolicyOutput: typeof import("./getInstanceIamPolicy").getInstanceIamPolicyOutput = null as any;

export { GetInstanceTableIamPolicyArgs, GetInstanceTableIamPolicyResult, GetInstanceTableIamPolicyOutputArgs } from "./getInstanceTableIamPolicy";
export const getInstanceTableIamPolicy: typeof import("./getInstanceTableIamPolicy").getInstanceTableIamPolicy = null as any;
export const getInstanceTableIamPolicyOutput: typeof import("./getInstanceTableIamPolicy").getInstanceTableIamPolicyOutput = null as any;

export { GetTableArgs, GetTableResult, GetTableOutputArgs } from "./getTable";
export const getTable: typeof import("./getTable").getTable = null as any;
export const getTableOutput: typeof import("./getTable").getTableOutput = null as any;

export { InstanceArgs } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;

export { InstanceClusterBackupIamPolicyArgs } from "./instanceClusterBackupIamPolicy";
export type InstanceClusterBackupIamPolicy = import("./instanceClusterBackupIamPolicy").InstanceClusterBackupIamPolicy;
export const InstanceClusterBackupIamPolicy: typeof import("./instanceClusterBackupIamPolicy").InstanceClusterBackupIamPolicy = null as any;

export { InstanceIamPolicyArgs } from "./instanceIamPolicy";
export type InstanceIamPolicy = import("./instanceIamPolicy").InstanceIamPolicy;
export const InstanceIamPolicy: typeof import("./instanceIamPolicy").InstanceIamPolicy = null as any;

export { InstanceTableIamPolicyArgs } from "./instanceTableIamPolicy";
export type InstanceTableIamPolicy = import("./instanceTableIamPolicy").InstanceTableIamPolicy;
export const InstanceTableIamPolicy: typeof import("./instanceTableIamPolicy").InstanceTableIamPolicy = null as any;

export { TableArgs } from "./table";
export type Table = import("./table").Table;
export const Table: typeof import("./table").Table = null as any;

utilities.lazyLoad(exports, ["AppProfile"], () => require("./appProfile"));
utilities.lazyLoad(exports, ["Backup"], () => require("./backup"));
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
utilities.lazyLoad(exports, ["getAppProfile","getAppProfileOutput"], () => require("./getAppProfile"));
utilities.lazyLoad(exports, ["getBackup","getBackupOutput"], () => require("./getBackup"));
utilities.lazyLoad(exports, ["getCluster","getClusterOutput"], () => require("./getCluster"));
utilities.lazyLoad(exports, ["getInstance","getInstanceOutput"], () => require("./getInstance"));
utilities.lazyLoad(exports, ["getInstanceClusterBackupIamPolicy","getInstanceClusterBackupIamPolicyOutput"], () => require("./getInstanceClusterBackupIamPolicy"));
utilities.lazyLoad(exports, ["getInstanceIamPolicy","getInstanceIamPolicyOutput"], () => require("./getInstanceIamPolicy"));
utilities.lazyLoad(exports, ["getInstanceTableIamPolicy","getInstanceTableIamPolicyOutput"], () => require("./getInstanceTableIamPolicy"));
utilities.lazyLoad(exports, ["getTable","getTableOutput"], () => require("./getTable"));
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
utilities.lazyLoad(exports, ["InstanceClusterBackupIamPolicy"], () => require("./instanceClusterBackupIamPolicy"));
utilities.lazyLoad(exports, ["InstanceIamPolicy"], () => require("./instanceIamPolicy"));
utilities.lazyLoad(exports, ["InstanceTableIamPolicy"], () => require("./instanceTableIamPolicy"));
utilities.lazyLoad(exports, ["Table"], () => require("./table"));

// Export enums:
export * from "../../types/enums/bigtableadmin/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:bigtableadmin/v2:AppProfile":
                return new AppProfile(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:InstanceClusterBackupIamPolicy":
                return new InstanceClusterBackupIamPolicy(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:InstanceIamPolicy":
                return new InstanceIamPolicy(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:InstanceTableIamPolicy":
                return new InstanceTableIamPolicy(name, <any>undefined, { urn })
            case "google-native:bigtableadmin/v2:Table":
                return new Table(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "bigtableadmin/v2", _module)
