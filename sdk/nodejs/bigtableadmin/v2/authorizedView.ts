// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new AuthorizedView in a table.
 */
export class AuthorizedView extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizedView resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuthorizedView {
        return new AuthorizedView(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:bigtableadmin/v2:AuthorizedView';

    /**
     * Returns true if the given object is an instance of AuthorizedView.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizedView {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizedView.__pulumiType;
    }

    /**
     * Required. The id of the AuthorizedView to create. This AuthorizedView must not already exist. The `authorized_view_id` appended to `parent` forms the full AuthorizedView name of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedView/{authorized_view}`.
     */
    public readonly authorizedViewId!: pulumi.Output<string>;
    /**
     * Set to true to make the AuthorizedView protected against deletion. The parent Table and containing Instance cannot be deleted if an AuthorizedView has this bit set.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * The etag for this AuthorizedView. If this is provided on update, it must match the server's etag. The server returns ABORTED error on a mismatched etag.
     */
    public readonly etag!: pulumi.Output<string>;
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Identifier. The name of this AuthorizedView. Values are of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * An AuthorizedView permitting access to an explicit subset of a Table.
     */
    public readonly subsetView!: pulumi.Output<outputs.bigtableadmin.v2.GoogleBigtableAdminV2AuthorizedViewSubsetViewResponse>;
    public readonly tableId!: pulumi.Output<string>;

    /**
     * Create a AuthorizedView resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizedViewArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authorizedViewId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorizedViewId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.tableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableId'");
            }
            resourceInputs["authorizedViewId"] = args ? args.authorizedViewId : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["subsetView"] = args ? args.subsetView : undefined;
            resourceInputs["tableId"] = args ? args.tableId : undefined;
        } else {
            resourceInputs["authorizedViewId"] = undefined /*out*/;
            resourceInputs["deletionProtection"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["subsetView"] = undefined /*out*/;
            resourceInputs["tableId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["authorizedViewId", "instanceId", "project", "tableId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AuthorizedView.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AuthorizedView resource.
 */
export interface AuthorizedViewArgs {
    /**
     * Required. The id of the AuthorizedView to create. This AuthorizedView must not already exist. The `authorized_view_id` appended to `parent` forms the full AuthorizedView name of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedView/{authorized_view}`.
     */
    authorizedViewId: pulumi.Input<string>;
    /**
     * Set to true to make the AuthorizedView protected against deletion. The parent Table and containing Instance cannot be deleted if an AuthorizedView has this bit set.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The etag for this AuthorizedView. If this is provided on update, it must match the server's etag. The server returns ABORTED error on a mismatched etag.
     */
    etag?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    /**
     * Identifier. The name of this AuthorizedView. Values are of the form `projects/{project}/instances/{instance}/tables/{table}/authorizedViews/{authorized_view}`
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * An AuthorizedView permitting access to an explicit subset of a Table.
     */
    subsetView?: pulumi.Input<inputs.bigtableadmin.v2.GoogleBigtableAdminV2AuthorizedViewSubsetViewArgs>;
    tableId: pulumi.Input<string>;
}
