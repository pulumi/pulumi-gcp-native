// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new table in the specified instance. The table can be created with a full set of initial column families, specified in the request.
 */
export class InstanceTable extends pulumi.CustomResource {
    /**
     * Get an existing InstanceTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceTable {
        return new InstanceTable(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:bigtableadmin/v2:InstanceTable';

    /**
     * Returns true if the given object is an instance of InstanceTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceTable.__pulumiType;
    }


    /**
     * Create a InstanceTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceTableArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instancesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instancesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            if ((!args || args.tablesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tablesId'");
            }
            inputs["initialSplits"] = args ? args.initialSplits : undefined;
            inputs["instancesId"] = args ? args.instancesId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["table"] = args ? args.table : undefined;
            inputs["tableId"] = args ? args.tableId : undefined;
            inputs["tablesId"] = args ? args.tablesId : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceTable.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceTable resource.
 */
export interface InstanceTableArgs {
    /**
     * The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `["a", "apple", "custom", "customer_1", "customer_2",` `"other", "zz"]` * initial_split_keys := `["apple", "customer_1", "customer_2", "other"]` * Key assignment: - Tablet 1 `[, apple) => {"a"}.` - Tablet 2 `[apple, customer_1) => {"apple", "custom"}.` - Tablet 3 `[customer_1, customer_2) => {"customer_1"}.` - Tablet 4 `[customer_2, other) => {"customer_2"}.` - Tablet 5 `[other, ) => {"other", "zz"}.`
     */
    readonly initialSplits?: pulumi.Input<pulumi.Input<inputs.bigtableadmin.v2.Split>[]>;
    readonly instancesId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * Required. The Table to create.
     */
    readonly table?: pulumi.Input<inputs.bigtableadmin.v2.Table>;
    /**
     * Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.
     */
    readonly tableId?: pulumi.Input<string>;
    readonly tablesId: pulumi.Input<string>;
}
