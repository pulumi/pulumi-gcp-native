// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new service configuration (version) for a managed service. This method only stores the service configuration. To roll out the service configuration to backend systems please call CreateServiceRollout. Only the 100 most recent service configurations and ones referenced by existing rollouts are kept for each service. The rest will be deleted eventually.
 */
export class ServiceConfig extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceConfig {
        return new ServiceConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp-native:servicemanagement/v1:ServiceConfig';

    /**
     * Returns true if the given object is an instance of ServiceConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceConfig.__pulumiType;
    }

    /**
     * A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
     */
    public readonly apis!: pulumi.Output<outputs.servicemanagement.v1.ApiResponse[]>;
    /**
     * Auth configuration.
     */
    public readonly authentication!: pulumi.Output<outputs.servicemanagement.v1.AuthenticationResponse>;
    /**
     * API backend configuration.
     */
    public readonly backend!: pulumi.Output<outputs.servicemanagement.v1.BackendResponse>;
    /**
     * Billing configuration.
     */
    public readonly billing!: pulumi.Output<outputs.servicemanagement.v1.BillingResponse>;
    /**
     * Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
     */
    public readonly configVersion!: pulumi.Output<number>;
    /**
     * Context configuration.
     */
    public readonly context!: pulumi.Output<outputs.servicemanagement.v1.ContextResponse>;
    /**
     * Configuration for the service control plane.
     */
    public readonly control!: pulumi.Output<outputs.servicemanagement.v1.ControlResponse>;
    /**
     * Custom error configuration.
     */
    public readonly customError!: pulumi.Output<outputs.servicemanagement.v1.CustomErrorResponse>;
    /**
     * Additional API documentation.
     */
    public readonly documentation!: pulumi.Output<outputs.servicemanagement.v1.DocumentationResponse>;
    /**
     * Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
     */
    public readonly endpoints!: pulumi.Output<outputs.servicemanagement.v1.EndpointResponse[]>;
    /**
     * A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name. Example: enums: - name: google.someapi.v1.SomeEnum
     */
    public readonly enums!: pulumi.Output<outputs.servicemanagement.v1.EnumResponse[]>;
    /**
     * HTTP configuration.
     */
    public readonly http!: pulumi.Output<outputs.servicemanagement.v1.HttpResponse>;
    /**
     * Logging configuration.
     */
    public readonly logging!: pulumi.Output<outputs.servicemanagement.v1.LoggingResponse>;
    /**
     * Defines the logs used by this service.
     */
    public readonly logs!: pulumi.Output<outputs.servicemanagement.v1.LogDescriptorResponse[]>;
    /**
     * Defines the metrics used by this service.
     */
    public readonly metrics!: pulumi.Output<outputs.servicemanagement.v1.MetricDescriptorResponse[]>;
    /**
     * Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
     */
    public readonly monitoredResources!: pulumi.Output<outputs.servicemanagement.v1.MonitoredResourceDescriptorResponse[]>;
    /**
     * Monitoring configuration.
     */
    public readonly monitoring!: pulumi.Output<outputs.servicemanagement.v1.MonitoringResponse>;
    /**
     * The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Google project that owns this service.
     */
    public readonly producerProjectId!: pulumi.Output<string>;
    /**
     * Quota configuration.
     */
    public readonly quota!: pulumi.Output<outputs.servicemanagement.v1.QuotaResponse>;
    /**
     * The source information for this configuration if available.
     */
    public readonly sourceInfo!: pulumi.Output<outputs.servicemanagement.v1.SourceInfoResponse>;
    /**
     * System parameter configuration.
     */
    public readonly systemParameters!: pulumi.Output<outputs.servicemanagement.v1.SystemParametersResponse>;
    /**
     * A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
     */
    public readonly systemTypes!: pulumi.Output<outputs.servicemanagement.v1.TypeResponse[]>;
    /**
     * The product title for this service.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name. Example: types: - name: google.protobuf.Int32
     */
    public readonly types!: pulumi.Output<outputs.servicemanagement.v1.TypeResponse[]>;
    /**
     * Configuration controlling usage of this service.
     */
    public readonly usage!: pulumi.Output<outputs.servicemanagement.v1.UsageResponse>;

    /**
     * Create a ServiceConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            inputs["apis"] = args ? args.apis : undefined;
            inputs["authentication"] = args ? args.authentication : undefined;
            inputs["backend"] = args ? args.backend : undefined;
            inputs["billing"] = args ? args.billing : undefined;
            inputs["configId"] = args ? args.configId : undefined;
            inputs["configVersion"] = args ? args.configVersion : undefined;
            inputs["context"] = args ? args.context : undefined;
            inputs["control"] = args ? args.control : undefined;
            inputs["customError"] = args ? args.customError : undefined;
            inputs["documentation"] = args ? args.documentation : undefined;
            inputs["endpoints"] = args ? args.endpoints : undefined;
            inputs["enums"] = args ? args.enums : undefined;
            inputs["http"] = args ? args.http : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["logging"] = args ? args.logging : undefined;
            inputs["logs"] = args ? args.logs : undefined;
            inputs["metrics"] = args ? args.metrics : undefined;
            inputs["monitoredResources"] = args ? args.monitoredResources : undefined;
            inputs["monitoring"] = args ? args.monitoring : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["producerProjectId"] = args ? args.producerProjectId : undefined;
            inputs["quota"] = args ? args.quota : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
            inputs["sourceInfo"] = args ? args.sourceInfo : undefined;
            inputs["systemParameters"] = args ? args.systemParameters : undefined;
            inputs["systemTypes"] = args ? args.systemTypes : undefined;
            inputs["title"] = args ? args.title : undefined;
            inputs["types"] = args ? args.types : undefined;
            inputs["usage"] = args ? args.usage : undefined;
        } else {
            inputs["apis"] = undefined /*out*/;
            inputs["authentication"] = undefined /*out*/;
            inputs["backend"] = undefined /*out*/;
            inputs["billing"] = undefined /*out*/;
            inputs["configVersion"] = undefined /*out*/;
            inputs["context"] = undefined /*out*/;
            inputs["control"] = undefined /*out*/;
            inputs["customError"] = undefined /*out*/;
            inputs["documentation"] = undefined /*out*/;
            inputs["endpoints"] = undefined /*out*/;
            inputs["enums"] = undefined /*out*/;
            inputs["http"] = undefined /*out*/;
            inputs["logging"] = undefined /*out*/;
            inputs["logs"] = undefined /*out*/;
            inputs["metrics"] = undefined /*out*/;
            inputs["monitoredResources"] = undefined /*out*/;
            inputs["monitoring"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["producerProjectId"] = undefined /*out*/;
            inputs["quota"] = undefined /*out*/;
            inputs["sourceInfo"] = undefined /*out*/;
            inputs["systemParameters"] = undefined /*out*/;
            inputs["systemTypes"] = undefined /*out*/;
            inputs["title"] = undefined /*out*/;
            inputs["types"] = undefined /*out*/;
            inputs["usage"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceConfig.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceConfig resource.
 */
export interface ServiceConfigArgs {
    /**
     * A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files.
     */
    readonly apis?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.Api>[]>;
    /**
     * Auth configuration.
     */
    readonly authentication?: pulumi.Input<inputs.servicemanagement.v1.Authentication>;
    /**
     * API backend configuration.
     */
    readonly backend?: pulumi.Input<inputs.servicemanagement.v1.Backend>;
    /**
     * Billing configuration.
     */
    readonly billing?: pulumi.Input<inputs.servicemanagement.v1.Billing>;
    readonly configId: pulumi.Input<string>;
    /**
     * Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`.
     */
    readonly configVersion?: pulumi.Input<number>;
    /**
     * Context configuration.
     */
    readonly context?: pulumi.Input<inputs.servicemanagement.v1.Context>;
    /**
     * Configuration for the service control plane.
     */
    readonly control?: pulumi.Input<inputs.servicemanagement.v1.Control>;
    /**
     * Custom error configuration.
     */
    readonly customError?: pulumi.Input<inputs.servicemanagement.v1.CustomError>;
    /**
     * Additional API documentation.
     */
    readonly documentation?: pulumi.Input<inputs.servicemanagement.v1.Documentation>;
    /**
     * Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs.
     */
    readonly endpoints?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.Endpoint>[]>;
    /**
     * A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name. Example: enums: - name: google.someapi.v1.SomeEnum
     */
    readonly enums?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.Enum>[]>;
    /**
     * HTTP configuration.
     */
    readonly http?: pulumi.Input<inputs.servicemanagement.v1.Http>;
    /**
     * A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead.
     */
    readonly id?: pulumi.Input<string>;
    /**
     * Logging configuration.
     */
    readonly logging?: pulumi.Input<inputs.servicemanagement.v1.Logging>;
    /**
     * Defines the logs used by this service.
     */
    readonly logs?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.LogDescriptor>[]>;
    /**
     * Defines the metrics used by this service.
     */
    readonly metrics?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.MetricDescriptor>[]>;
    /**
     * Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations.
     */
    readonly monitoredResources?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.MonitoredResourceDescriptor>[]>;
    /**
     * Monitoring configuration.
     */
    readonly monitoring?: pulumi.Input<inputs.servicemanagement.v1.Monitoring>;
    /**
     * The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The Google project that owns this service.
     */
    readonly producerProjectId?: pulumi.Input<string>;
    /**
     * Quota configuration.
     */
    readonly quota?: pulumi.Input<inputs.servicemanagement.v1.Quota>;
    readonly serviceName: pulumi.Input<string>;
    /**
     * The source information for this configuration if available.
     */
    readonly sourceInfo?: pulumi.Input<inputs.servicemanagement.v1.SourceInfo>;
    /**
     * System parameter configuration.
     */
    readonly systemParameters?: pulumi.Input<inputs.servicemanagement.v1.SystemParameters>;
    /**
     * A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF.
     */
    readonly systemTypes?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.Type>[]>;
    /**
     * The product title for this service.
     */
    readonly title?: pulumi.Input<string>;
    /**
     * A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name. Example: types: - name: google.protobuf.Int32
     */
    readonly types?: pulumi.Input<pulumi.Input<inputs.servicemanagement.v1.Type>[]>;
    /**
     * Configuration controlling usage of this service.
     */
    readonly usage?: pulumi.Input<inputs.servicemanagement.v1.Usage>;
}
