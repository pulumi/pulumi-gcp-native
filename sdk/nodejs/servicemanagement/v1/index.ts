// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ConfigArgs } from "./config";
export type Config = import("./config").Config;
export const Config: typeof import("./config").Config = null as any;
utilities.lazyLoad(exports, ["Config"], () => require("./config"));

export { GetConfigArgs, GetConfigResult, GetConfigOutputArgs } from "./getConfig";
export const getConfig: typeof import("./getConfig").getConfig = null as any;
export const getConfigOutput: typeof import("./getConfig").getConfigOutput = null as any;
utilities.lazyLoad(exports, ["getConfig","getConfigOutput"], () => require("./getConfig"));

export { GetRolloutArgs, GetRolloutResult, GetRolloutOutputArgs } from "./getRollout";
export const getRollout: typeof import("./getRollout").getRollout = null as any;
export const getRolloutOutput: typeof import("./getRollout").getRolloutOutput = null as any;
utilities.lazyLoad(exports, ["getRollout","getRolloutOutput"], () => require("./getRollout"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { GetServiceConsumerIamPolicyArgs, GetServiceConsumerIamPolicyResult, GetServiceConsumerIamPolicyOutputArgs } from "./getServiceConsumerIamPolicy";
export const getServiceConsumerIamPolicy: typeof import("./getServiceConsumerIamPolicy").getServiceConsumerIamPolicy = null as any;
export const getServiceConsumerIamPolicyOutput: typeof import("./getServiceConsumerIamPolicy").getServiceConsumerIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceConsumerIamPolicy","getServiceConsumerIamPolicyOutput"], () => require("./getServiceConsumerIamPolicy"));

export { GetServiceIamPolicyArgs, GetServiceIamPolicyResult, GetServiceIamPolicyOutputArgs } from "./getServiceIamPolicy";
export const getServiceIamPolicy: typeof import("./getServiceIamPolicy").getServiceIamPolicy = null as any;
export const getServiceIamPolicyOutput: typeof import("./getServiceIamPolicy").getServiceIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceIamPolicy","getServiceIamPolicyOutput"], () => require("./getServiceIamPolicy"));

export { RolloutArgs } from "./rollout";
export type Rollout = import("./rollout").Rollout;
export const Rollout: typeof import("./rollout").Rollout = null as any;
utilities.lazyLoad(exports, ["Rollout"], () => require("./rollout"));

export { ServiceArgs } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));

export { ServiceConsumerIamBindingArgs } from "./serviceConsumerIamBinding";
export type ServiceConsumerIamBinding = import("./serviceConsumerIamBinding").ServiceConsumerIamBinding;
export const ServiceConsumerIamBinding: typeof import("./serviceConsumerIamBinding").ServiceConsumerIamBinding = null as any;
utilities.lazyLoad(exports, ["ServiceConsumerIamBinding"], () => require("./serviceConsumerIamBinding"));

export { ServiceConsumerIamMemberArgs } from "./serviceConsumerIamMember";
export type ServiceConsumerIamMember = import("./serviceConsumerIamMember").ServiceConsumerIamMember;
export const ServiceConsumerIamMember: typeof import("./serviceConsumerIamMember").ServiceConsumerIamMember = null as any;
utilities.lazyLoad(exports, ["ServiceConsumerIamMember"], () => require("./serviceConsumerIamMember"));

export { ServiceConsumerIamPolicyArgs } from "./serviceConsumerIamPolicy";
export type ServiceConsumerIamPolicy = import("./serviceConsumerIamPolicy").ServiceConsumerIamPolicy;
export const ServiceConsumerIamPolicy: typeof import("./serviceConsumerIamPolicy").ServiceConsumerIamPolicy = null as any;
utilities.lazyLoad(exports, ["ServiceConsumerIamPolicy"], () => require("./serviceConsumerIamPolicy"));

export { ServiceIamBindingArgs } from "./serviceIamBinding";
export type ServiceIamBinding = import("./serviceIamBinding").ServiceIamBinding;
export const ServiceIamBinding: typeof import("./serviceIamBinding").ServiceIamBinding = null as any;
utilities.lazyLoad(exports, ["ServiceIamBinding"], () => require("./serviceIamBinding"));

export { ServiceIamMemberArgs } from "./serviceIamMember";
export type ServiceIamMember = import("./serviceIamMember").ServiceIamMember;
export const ServiceIamMember: typeof import("./serviceIamMember").ServiceIamMember = null as any;
utilities.lazyLoad(exports, ["ServiceIamMember"], () => require("./serviceIamMember"));

export { ServiceIamPolicyArgs } from "./serviceIamPolicy";
export type ServiceIamPolicy = import("./serviceIamPolicy").ServiceIamPolicy;
export const ServiceIamPolicy: typeof import("./serviceIamPolicy").ServiceIamPolicy = null as any;
utilities.lazyLoad(exports, ["ServiceIamPolicy"], () => require("./serviceIamPolicy"));


// Export enums:
export * from "../../types/enums/servicemanagement/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:servicemanagement/v1:Config":
                return new Config(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:Rollout":
                return new Rollout(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:Service":
                return new Service(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceConsumerIamBinding":
                return new ServiceConsumerIamBinding(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceConsumerIamMember":
                return new ServiceConsumerIamMember(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceConsumerIamPolicy":
                return new ServiceConsumerIamPolicy(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceIamBinding":
                return new ServiceIamBinding(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceIamMember":
                return new ServiceIamMember(name, <any>undefined, { urn })
            case "google-native:servicemanagement/v1:ServiceIamPolicy":
                return new ServiceIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "servicemanagement/v1", _module)
