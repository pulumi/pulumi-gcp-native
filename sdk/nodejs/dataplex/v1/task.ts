// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a task resource within a lake.
 * Auto-naming is currently not supported for this resource.
 */
export class Task extends pulumi.CustomResource {
    /**
     * Get an existing Task resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Task {
        return new Task(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dataplex/v1:Task';

    /**
     * Returns true if the given object is an instance of Task.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Task {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Task.__pulumiType;
    }

    /**
     * The time when the task was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Description of the task.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. User friendly display name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Spec related to how a task is executed.
     */
    public readonly executionSpec!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1TaskExecutionSpecResponse>;
    /**
     * Status of the latest task executions.
     */
    public /*out*/ readonly executionStatus!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1TaskExecutionStatusResponse>;
    /**
     * Optional. User-defined labels for the task.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly lakeId!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Config related to running custom Spark tasks.
     */
    public readonly spark!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1TaskSparkTaskConfigResponse>;
    /**
     * Current state of the task.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Required. Task identifier.
     */
    public readonly taskId!: pulumi.Output<string>;
    /**
     * Spec related to how often and when a task should be triggered.
     */
    public readonly triggerSpec!: pulumi.Output<outputs.dataplex.v1.GoogleCloudDataplexV1TaskTriggerSpecResponse>;
    /**
     * System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time when the task was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     */
    public readonly validateOnly!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Task resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.executionSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionSpec'");
            }
            if ((!args || args.lakeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lakeId'");
            }
            if ((!args || args.taskId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'taskId'");
            }
            if ((!args || args.triggerSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'triggerSpec'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["executionSpec"] = args ? args.executionSpec : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lakeId"] = args ? args.lakeId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["spark"] = args ? args.spark : undefined;
            resourceInputs["taskId"] = args ? args.taskId : undefined;
            resourceInputs["triggerSpec"] = args ? args.triggerSpec : undefined;
            resourceInputs["validateOnly"] = args ? args.validateOnly : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["executionStatus"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["executionSpec"] = undefined /*out*/;
            resourceInputs["executionStatus"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lakeId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["spark"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["taskId"] = undefined /*out*/;
            resourceInputs["triggerSpec"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validateOnly"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["lakeId", "location", "project", "taskId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Task.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Task resource.
 */
export interface TaskArgs {
    /**
     * Optional. Description of the task.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Spec related to how a task is executed.
     */
    executionSpec: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1TaskExecutionSpecArgs>;
    /**
     * Optional. User-defined labels for the task.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lakeId: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Config related to running custom Spark tasks.
     */
    spark?: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1TaskSparkTaskConfigArgs>;
    /**
     * Required. Task identifier.
     */
    taskId: pulumi.Input<string>;
    /**
     * Spec related to how often and when a task should be triggered.
     */
    triggerSpec: pulumi.Input<inputs.dataplex.v1.GoogleCloudDataplexV1TaskTriggerSpecArgs>;
    /**
     * Optional. Only validate the request, but do not perform mutations. The default is false.
     */
    validateOnly?: pulumi.Input<boolean>;
}
