// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Retrieves a DataTaxonomy resource.
 */
export function getDataTaxonomy(args: GetDataTaxonomyArgs, opts?: pulumi.InvokeOptions): Promise<GetDataTaxonomyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:dataplex/v1:getDataTaxonomy", {
        "dataTaxonomyId": args.dataTaxonomyId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetDataTaxonomyArgs {
    dataTaxonomyId: string;
    location: string;
    project?: string;
}

export interface GetDataTaxonomyResult {
    /**
     * The number of attributes in the DataTaxonomy.
     */
    readonly attributeCount: number;
    /**
     * The time when the DataTaxonomy was created.
     */
    readonly createTime: string;
    /**
     * Optional. Description of the DataTaxonomy.
     */
    readonly description: string;
    /**
     * Optional. User friendly display name.
     */
    readonly displayName: string;
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    readonly etag: string;
    /**
     * Optional. User-defined labels for the DataTaxonomy.
     */
    readonly labels: {[key: string]: string};
    /**
     * The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.
     */
    readonly name: string;
    /**
     * System generated globally unique ID for the dataTaxonomy. This ID will be different if the DataTaxonomy is deleted and re-created with the same name.
     */
    readonly uid: string;
    /**
     * The time when the DataTaxonomy was last updated.
     */
    readonly updateTime: string;
}

export function getDataTaxonomyOutput(args: GetDataTaxonomyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataTaxonomyResult> {
    return pulumi.output(args).apply(a => getDataTaxonomy(a, opts))
}

export interface GetDataTaxonomyOutputArgs {
    dataTaxonomyId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
