// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * GET /v1/projects/{project_id}/deviceSessions/{device_session_id} Return a DeviceSession, which documents the allocation status and whether the device is allocated. Clients making requests from this API must poll GetDeviceSession.
 */
export function getDeviceSession(args: GetDeviceSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceSessionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:testing/v1:getDeviceSession", {
        "deviceSessionId": args.deviceSessionId,
        "project": args.project,
    }, opts);
}

export interface GetDeviceSessionArgs {
    deviceSessionId: string;
    project?: string;
}

export interface GetDeviceSessionResult {
    /**
     * The timestamp that the session first became ACTIVE.
     */
    readonly activeStartTime: string;
    /**
     * The requested device
     */
    readonly androidDevice: outputs.testing.v1.AndroidDeviceResponse;
    /**
     * The time that the Session was created.
     */
    readonly createTime: string;
    /**
     * The title of the DeviceSession to be presented in the UI.
     */
    readonly displayName: string;
    /**
     * Optional. If the device is still in use at this time, any connections will be ended and the SessionState will transition from ACTIVE to FINISHED.
     */
    readonly expireTime: string;
    /**
     * The interval of time that this device must be interacted with before it transitions from ACTIVE to TIMEOUT_INACTIVITY.
     */
    readonly inactivityTimeout: string;
    /**
     * Optional. Name of the DeviceSession, e.g. "projects/{project_id}/deviceSessions/{session_id}"
     */
    readonly name: string;
    /**
     * Current state of the DeviceSession.
     */
    readonly state: string;
    /**
     * The historical state transitions of the session_state message including the current session state.
     */
    readonly stateHistories: outputs.testing.v1.SessionStateEventResponse[];
    /**
     * Optional. The amount of time that a device will be initially allocated for. This can eventually be extended with the UpdateDeviceSession RPC. Default: 30 minutes.
     */
    readonly ttl: string;
}
/**
 * GET /v1/projects/{project_id}/deviceSessions/{device_session_id} Return a DeviceSession, which documents the allocation status and whether the device is allocated. Clients making requests from this API must poll GetDeviceSession.
 */
export function getDeviceSessionOutput(args: GetDeviceSessionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceSessionResult> {
    return pulumi.output(args).apply((a: any) => getDeviceSession(a, opts))
}

export interface GetDeviceSessionOutputArgs {
    deviceSessionId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
