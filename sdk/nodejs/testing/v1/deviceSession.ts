// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * POST /v1/projects/{project_id}/deviceSessions
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class DeviceSession extends pulumi.CustomResource {
    /**
     * Get an existing DeviceSession resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeviceSession {
        return new DeviceSession(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:testing/v1:DeviceSession';

    /**
     * Returns true if the given object is an instance of DeviceSession.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceSession {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceSession.__pulumiType;
    }

    /**
     * The timestamp that the session first became ACTIVE.
     */
    public /*out*/ readonly activeStartTime!: pulumi.Output<string>;
    /**
     * The requested device
     */
    public readonly androidDevice!: pulumi.Output<outputs.testing.v1.AndroidDeviceResponse>;
    /**
     * The time that the Session was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The title of the DeviceSession to be presented in the UI.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * Optional. If the device is still in use at this time, any connections will be ended and the SessionState will transition from ACTIVE to FINISHED.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * The interval of time that this device must be interacted with before it transitions from ACTIVE to TIMEOUT_INACTIVITY.
     */
    public /*out*/ readonly inactivityTimeout!: pulumi.Output<string>;
    /**
     * Optional. Name of the DeviceSession, e.g. "projects/{project_id}/deviceSessions/{session_id}"
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Current state of the DeviceSession.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The historical state transitions of the session_state message including the current session state.
     */
    public /*out*/ readonly stateHistories!: pulumi.Output<outputs.testing.v1.SessionStateEventResponse[]>;
    /**
     * Optional. The amount of time that a device will be initially allocated for. This can eventually be extended with the UpdateDeviceSession RPC. Default: 30 minutes.
     */
    public readonly ttl!: pulumi.Output<string>;

    /**
     * Create a DeviceSession resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceSessionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.androidDevice === undefined) && !opts.urn) {
                throw new Error("Missing required property 'androidDevice'");
            }
            resourceInputs["androidDevice"] = args ? args.androidDevice : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["activeStartTime"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["inactivityTimeout"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateHistories"] = undefined /*out*/;
        } else {
            resourceInputs["activeStartTime"] = undefined /*out*/;
            resourceInputs["androidDevice"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["inactivityTimeout"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateHistories"] = undefined /*out*/;
            resourceInputs["ttl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DeviceSession.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DeviceSession resource.
 */
export interface DeviceSessionArgs {
    /**
     * The requested device
     */
    androidDevice: pulumi.Input<inputs.testing.v1.AndroidDeviceArgs>;
    /**
     * Optional. If the device is still in use at this time, any connections will be ended and the SessionState will transition from ACTIVE to FINISHED.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Optional. Name of the DeviceSession, e.g. "projects/{project_id}/deviceSessions/{session_id}"
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. The amount of time that a device will be initially allocated for. This can eventually be extended with the UpdateDeviceSession RPC. Default: 30 minutes.
     */
    ttl?: pulumi.Input<string>;
}
