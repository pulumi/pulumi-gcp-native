// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetKeyArgs, GetKeyResult, GetKeyOutputArgs } from "./getKey";
export const getKey: typeof import("./getKey").getKey = null as any;
export const getKeyOutput: typeof import("./getKey").getKeyOutput = null as any;
utilities.lazyLoad(exports, ["getKey","getKeyOutput"], () => require("./getKey"));

export { GetOrganizationRoleArgs, GetOrganizationRoleResult, GetOrganizationRoleOutputArgs } from "./getOrganizationRole";
export const getOrganizationRole: typeof import("./getOrganizationRole").getOrganizationRole = null as any;
export const getOrganizationRoleOutput: typeof import("./getOrganizationRole").getOrganizationRoleOutput = null as any;
utilities.lazyLoad(exports, ["getOrganizationRole","getOrganizationRoleOutput"], () => require("./getOrganizationRole"));

export { GetProviderArgs, GetProviderResult, GetProviderOutputArgs } from "./getProvider";
export const getProvider: typeof import("./getProvider").getProvider = null as any;
export const getProviderOutput: typeof import("./getProvider").getProviderOutput = null as any;
utilities.lazyLoad(exports, ["getProvider","getProviderOutput"], () => require("./getProvider"));

export { GetRoleArgs, GetRoleResult, GetRoleOutputArgs } from "./getRole";
export const getRole: typeof import("./getRole").getRole = null as any;
export const getRoleOutput: typeof import("./getRole").getRoleOutput = null as any;
utilities.lazyLoad(exports, ["getRole","getRoleOutput"], () => require("./getRole"));

export { GetServiceAccountArgs, GetServiceAccountResult, GetServiceAccountOutputArgs } from "./getServiceAccount";
export const getServiceAccount: typeof import("./getServiceAccount").getServiceAccount = null as any;
export const getServiceAccountOutput: typeof import("./getServiceAccount").getServiceAccountOutput = null as any;
utilities.lazyLoad(exports, ["getServiceAccount","getServiceAccountOutput"], () => require("./getServiceAccount"));

export { GetServiceAccountIamPolicyArgs, GetServiceAccountIamPolicyResult, GetServiceAccountIamPolicyOutputArgs } from "./getServiceAccountIamPolicy";
export const getServiceAccountIamPolicy: typeof import("./getServiceAccountIamPolicy").getServiceAccountIamPolicy = null as any;
export const getServiceAccountIamPolicyOutput: typeof import("./getServiceAccountIamPolicy").getServiceAccountIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceAccountIamPolicy","getServiceAccountIamPolicyOutput"], () => require("./getServiceAccountIamPolicy"));

export { GetWorkforcePoolArgs, GetWorkforcePoolResult, GetWorkforcePoolOutputArgs } from "./getWorkforcePool";
export const getWorkforcePool: typeof import("./getWorkforcePool").getWorkforcePool = null as any;
export const getWorkforcePoolOutput: typeof import("./getWorkforcePool").getWorkforcePoolOutput = null as any;
utilities.lazyLoad(exports, ["getWorkforcePool","getWorkforcePoolOutput"], () => require("./getWorkforcePool"));

export { GetWorkforcePoolIamPolicyArgs, GetWorkforcePoolIamPolicyResult, GetWorkforcePoolIamPolicyOutputArgs } from "./getWorkforcePoolIamPolicy";
export const getWorkforcePoolIamPolicy: typeof import("./getWorkforcePoolIamPolicy").getWorkforcePoolIamPolicy = null as any;
export const getWorkforcePoolIamPolicyOutput: typeof import("./getWorkforcePoolIamPolicy").getWorkforcePoolIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkforcePoolIamPolicy","getWorkforcePoolIamPolicyOutput"], () => require("./getWorkforcePoolIamPolicy"));

export { GetWorkforcePoolKeyArgs, GetWorkforcePoolKeyResult, GetWorkforcePoolKeyOutputArgs } from "./getWorkforcePoolKey";
export const getWorkforcePoolKey: typeof import("./getWorkforcePoolKey").getWorkforcePoolKey = null as any;
export const getWorkforcePoolKeyOutput: typeof import("./getWorkforcePoolKey").getWorkforcePoolKeyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkforcePoolKey","getWorkforcePoolKeyOutput"], () => require("./getWorkforcePoolKey"));

export { GetWorkforcePoolProviderArgs, GetWorkforcePoolProviderResult, GetWorkforcePoolProviderOutputArgs } from "./getWorkforcePoolProvider";
export const getWorkforcePoolProvider: typeof import("./getWorkforcePoolProvider").getWorkforcePoolProvider = null as any;
export const getWorkforcePoolProviderOutput: typeof import("./getWorkforcePoolProvider").getWorkforcePoolProviderOutput = null as any;
utilities.lazyLoad(exports, ["getWorkforcePoolProvider","getWorkforcePoolProviderOutput"], () => require("./getWorkforcePoolProvider"));

export { GetWorkloadIdentityPoolArgs, GetWorkloadIdentityPoolResult, GetWorkloadIdentityPoolOutputArgs } from "./getWorkloadIdentityPool";
export const getWorkloadIdentityPool: typeof import("./getWorkloadIdentityPool").getWorkloadIdentityPool = null as any;
export const getWorkloadIdentityPoolOutput: typeof import("./getWorkloadIdentityPool").getWorkloadIdentityPoolOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadIdentityPool","getWorkloadIdentityPoolOutput"], () => require("./getWorkloadIdentityPool"));

export { GetWorkloadIdentityPoolKeyArgs, GetWorkloadIdentityPoolKeyResult, GetWorkloadIdentityPoolKeyOutputArgs } from "./getWorkloadIdentityPoolKey";
export const getWorkloadIdentityPoolKey: typeof import("./getWorkloadIdentityPoolKey").getWorkloadIdentityPoolKey = null as any;
export const getWorkloadIdentityPoolKeyOutput: typeof import("./getWorkloadIdentityPoolKey").getWorkloadIdentityPoolKeyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkloadIdentityPoolKey","getWorkloadIdentityPoolKeyOutput"], () => require("./getWorkloadIdentityPoolKey"));

export { KeyArgs } from "./key";
export type Key = import("./key").Key;
export const Key: typeof import("./key").Key = null as any;
utilities.lazyLoad(exports, ["Key"], () => require("./key"));

export { OrganizationRoleArgs } from "./organizationRole";
export type OrganizationRole = import("./organizationRole").OrganizationRole;
export const OrganizationRole: typeof import("./organizationRole").OrganizationRole = null as any;
utilities.lazyLoad(exports, ["OrganizationRole"], () => require("./organizationRole"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { RoleArgs } from "./role";
export type Role = import("./role").Role;
export const Role: typeof import("./role").Role = null as any;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));

export { ServiceAccountArgs } from "./serviceAccount";
export type ServiceAccount = import("./serviceAccount").ServiceAccount;
export const ServiceAccount: typeof import("./serviceAccount").ServiceAccount = null as any;
utilities.lazyLoad(exports, ["ServiceAccount"], () => require("./serviceAccount"));

export { ServiceAccountIamBindingArgs } from "./serviceAccountIamBinding";
export type ServiceAccountIamBinding = import("./serviceAccountIamBinding").ServiceAccountIamBinding;
export const ServiceAccountIamBinding: typeof import("./serviceAccountIamBinding").ServiceAccountIamBinding = null as any;
utilities.lazyLoad(exports, ["ServiceAccountIamBinding"], () => require("./serviceAccountIamBinding"));

export { ServiceAccountIamMemberArgs } from "./serviceAccountIamMember";
export type ServiceAccountIamMember = import("./serviceAccountIamMember").ServiceAccountIamMember;
export const ServiceAccountIamMember: typeof import("./serviceAccountIamMember").ServiceAccountIamMember = null as any;
utilities.lazyLoad(exports, ["ServiceAccountIamMember"], () => require("./serviceAccountIamMember"));

export { ServiceAccountIamPolicyArgs } from "./serviceAccountIamPolicy";
export type ServiceAccountIamPolicy = import("./serviceAccountIamPolicy").ServiceAccountIamPolicy;
export const ServiceAccountIamPolicy: typeof import("./serviceAccountIamPolicy").ServiceAccountIamPolicy = null as any;
utilities.lazyLoad(exports, ["ServiceAccountIamPolicy"], () => require("./serviceAccountIamPolicy"));

export { WorkforcePoolArgs } from "./workforcePool";
export type WorkforcePool = import("./workforcePool").WorkforcePool;
export const WorkforcePool: typeof import("./workforcePool").WorkforcePool = null as any;
utilities.lazyLoad(exports, ["WorkforcePool"], () => require("./workforcePool"));

export { WorkforcePoolIamBindingArgs } from "./workforcePoolIamBinding";
export type WorkforcePoolIamBinding = import("./workforcePoolIamBinding").WorkforcePoolIamBinding;
export const WorkforcePoolIamBinding: typeof import("./workforcePoolIamBinding").WorkforcePoolIamBinding = null as any;
utilities.lazyLoad(exports, ["WorkforcePoolIamBinding"], () => require("./workforcePoolIamBinding"));

export { WorkforcePoolIamMemberArgs } from "./workforcePoolIamMember";
export type WorkforcePoolIamMember = import("./workforcePoolIamMember").WorkforcePoolIamMember;
export const WorkforcePoolIamMember: typeof import("./workforcePoolIamMember").WorkforcePoolIamMember = null as any;
utilities.lazyLoad(exports, ["WorkforcePoolIamMember"], () => require("./workforcePoolIamMember"));

export { WorkforcePoolIamPolicyArgs } from "./workforcePoolIamPolicy";
export type WorkforcePoolIamPolicy = import("./workforcePoolIamPolicy").WorkforcePoolIamPolicy;
export const WorkforcePoolIamPolicy: typeof import("./workforcePoolIamPolicy").WorkforcePoolIamPolicy = null as any;
utilities.lazyLoad(exports, ["WorkforcePoolIamPolicy"], () => require("./workforcePoolIamPolicy"));

export { WorkforcePoolKeyArgs } from "./workforcePoolKey";
export type WorkforcePoolKey = import("./workforcePoolKey").WorkforcePoolKey;
export const WorkforcePoolKey: typeof import("./workforcePoolKey").WorkforcePoolKey = null as any;
utilities.lazyLoad(exports, ["WorkforcePoolKey"], () => require("./workforcePoolKey"));

export { WorkforcePoolProviderArgs } from "./workforcePoolProvider";
export type WorkforcePoolProvider = import("./workforcePoolProvider").WorkforcePoolProvider;
export const WorkforcePoolProvider: typeof import("./workforcePoolProvider").WorkforcePoolProvider = null as any;
utilities.lazyLoad(exports, ["WorkforcePoolProvider"], () => require("./workforcePoolProvider"));

export { WorkloadIdentityPoolArgs } from "./workloadIdentityPool";
export type WorkloadIdentityPool = import("./workloadIdentityPool").WorkloadIdentityPool;
export const WorkloadIdentityPool: typeof import("./workloadIdentityPool").WorkloadIdentityPool = null as any;
utilities.lazyLoad(exports, ["WorkloadIdentityPool"], () => require("./workloadIdentityPool"));

export { WorkloadIdentityPoolKeyArgs } from "./workloadIdentityPoolKey";
export type WorkloadIdentityPoolKey = import("./workloadIdentityPoolKey").WorkloadIdentityPoolKey;
export const WorkloadIdentityPoolKey: typeof import("./workloadIdentityPoolKey").WorkloadIdentityPoolKey = null as any;
utilities.lazyLoad(exports, ["WorkloadIdentityPoolKey"], () => require("./workloadIdentityPoolKey"));


// Export enums:
export * from "../../types/enums/iam/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:iam/v1:Key":
                return new Key(name, <any>undefined, { urn })
            case "google-native:iam/v1:OrganizationRole":
                return new OrganizationRole(name, <any>undefined, { urn })
            case "google-native:iam/v1:Provider":
                return new Provider(name, <any>undefined, { urn })
            case "google-native:iam/v1:Role":
                return new Role(name, <any>undefined, { urn })
            case "google-native:iam/v1:ServiceAccount":
                return new ServiceAccount(name, <any>undefined, { urn })
            case "google-native:iam/v1:ServiceAccountIamBinding":
                return new ServiceAccountIamBinding(name, <any>undefined, { urn })
            case "google-native:iam/v1:ServiceAccountIamMember":
                return new ServiceAccountIamMember(name, <any>undefined, { urn })
            case "google-native:iam/v1:ServiceAccountIamPolicy":
                return new ServiceAccountIamPolicy(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePool":
                return new WorkforcePool(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePoolIamBinding":
                return new WorkforcePoolIamBinding(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePoolIamMember":
                return new WorkforcePoolIamMember(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePoolIamPolicy":
                return new WorkforcePoolIamPolicy(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePoolKey":
                return new WorkforcePoolKey(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkforcePoolProvider":
                return new WorkforcePoolProvider(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkloadIdentityPool":
                return new WorkloadIdentityPool(name, <any>undefined, { urn })
            case "google-native:iam/v1:WorkloadIdentityPoolKey":
                return new WorkloadIdentityPoolKey(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "iam/v1", _module)
