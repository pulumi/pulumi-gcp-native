// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new WorkforcePoolProviderKey in a WorkforcePoolProvider.
 * Auto-naming is currently not supported for this resource.
 */
export class WorkforcePoolKey extends pulumi.CustomResource {
    /**
     * Get an existing WorkforcePoolKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkforcePoolKey {
        return new WorkforcePoolKey(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:iam/v1:WorkforcePoolKey';

    /**
     * Returns true if the given object is an instance of WorkforcePoolKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkforcePoolKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkforcePoolKey.__pulumiType;
    }

    /**
     * The time after which the key will be permanently deleted and cannot be recovered. Note that the key may get purged before this time if the total limit of keys per provider is exceeded.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * Immutable. Public half of the asymmetric key.
     */
    public readonly keyData!: pulumi.Output<outputs.iam.v1.KeyDataResponse>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource name of the key.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly providerId!: pulumi.Output<string>;
    /**
     * The state of the key.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Immutable. The purpose of the key.
     */
    public readonly use!: pulumi.Output<string>;
    public readonly workforcePoolId!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     */
    public readonly workforcePoolProviderKeyId!: pulumi.Output<string>;

    /**
     * Create a WorkforcePoolKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkforcePoolKeyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.providerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerId'");
            }
            if ((!args || args.workforcePoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workforcePoolId'");
            }
            if ((!args || args.workforcePoolProviderKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workforcePoolProviderKeyId'");
            }
            resourceInputs["keyData"] = args ? args.keyData : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["providerId"] = args ? args.providerId : undefined;
            resourceInputs["use"] = args ? args.use : undefined;
            resourceInputs["workforcePoolId"] = args ? args.workforcePoolId : undefined;
            resourceInputs["workforcePoolProviderKeyId"] = args ? args.workforcePoolProviderKeyId : undefined;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        } else {
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["keyData"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["providerId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["use"] = undefined /*out*/;
            resourceInputs["workforcePoolId"] = undefined /*out*/;
            resourceInputs["workforcePoolProviderKeyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "providerId", "workforcePoolId", "workforcePoolProviderKeyId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(WorkforcePoolKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a WorkforcePoolKey resource.
 */
export interface WorkforcePoolKeyArgs {
    /**
     * Immutable. Public half of the asymmetric key.
     */
    keyData?: pulumi.Input<inputs.iam.v1.KeyDataArgs>;
    location?: pulumi.Input<string>;
    providerId: pulumi.Input<string>;
    /**
     * Immutable. The purpose of the key.
     */
    use?: pulumi.Input<enums.iam.v1.WorkforcePoolKeyUse>;
    workforcePoolId: pulumi.Input<string>;
    /**
     * Required. The ID to use for the key, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     */
    workforcePoolProviderKeyId: pulumi.Input<string>;
}
