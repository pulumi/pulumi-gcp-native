// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates and returns a new ProductSet resource. Possible errors: * Returns INVALID_ARGUMENT if display_name is missing, or is longer than 4096 characters.
 */
export class ProductSet extends pulumi.CustomResource {
    /**
     * Get an existing ProductSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ProductSet {
        return new ProductSet(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:vision/v1:ProductSet';

    /**
     * Returns true if the given object is an instance of ProductSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProductSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductSet.__pulumiType;
    }

    /**
     * The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * If there was an error with indexing the product set, the field is populated. This field is ignored when creating a ProductSet.
     */
    public /*out*/ readonly indexError!: pulumi.Output<outputs.vision.v1.StatusResponse>;
    /**
     * The time at which this ProductSet was last indexed. Query results will reflect all updates before this time. If this ProductSet has never been indexed, this timestamp is the default value "1970-01-01T00:00:00Z". This field is ignored when creating a ProductSet.
     */
    public /*out*/ readonly indexTime!: pulumi.Output<string>;
    /**
     * The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ProductSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProductSetArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["productSetId"] = args ? args.productSetId : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["indexError"] = undefined /*out*/;
            inputs["indexTime"] = undefined /*out*/;
        } else {
            inputs["displayName"] = undefined /*out*/;
            inputs["indexError"] = undefined /*out*/;
            inputs["indexTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ProductSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ProductSet resource.
 */
export interface ProductSetArgs {
    /**
     * The user-provided name for this ProductSet. Must not be empty. Must be at most 4096 characters long.
     */
    displayName?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    /**
     * The resource name of the ProductSet. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`. This field is ignored when creating a ProductSet.
     */
    name?: pulumi.Input<string>;
    productSetId?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
