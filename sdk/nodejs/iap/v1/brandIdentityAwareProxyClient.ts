// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned by IAP. Requires that the brand for the project exists and that it is set for internal-only use.
 */
export class BrandIdentityAwareProxyClient extends pulumi.CustomResource {
    /**
     * Get an existing BrandIdentityAwareProxyClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BrandIdentityAwareProxyClient {
        return new BrandIdentityAwareProxyClient(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:iap/v1:BrandIdentityAwareProxyClient';

    /**
     * Returns true if the given object is an instance of BrandIdentityAwareProxyClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BrandIdentityAwareProxyClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BrandIdentityAwareProxyClient.__pulumiType;
    }

    /**
     * Human-friendly name given to the OAuth client.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Unique identifier of the OAuth client.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Client secret of the OAuth client.
     */
    public /*out*/ readonly secret!: pulumi.Output<string>;

    /**
     * Create a BrandIdentityAwareProxyClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BrandIdentityAwareProxyClientArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.brandId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'brandId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["brandId"] = args ? args.brandId : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["secret"] = undefined /*out*/;
        } else {
            inputs["displayName"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["secret"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(BrandIdentityAwareProxyClient.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a BrandIdentityAwareProxyClient resource.
 */
export interface BrandIdentityAwareProxyClientArgs {
    readonly brandId: pulumi.Input<string>;
    /**
     * Human-friendly name given to the OAuth client.
     */
    readonly displayName?: pulumi.Input<string>;
    readonly project: pulumi.Input<string>;
}
