// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AuthorizedCertificateArgs } from "./authorizedCertificate";
export type AuthorizedCertificate = import("./authorizedCertificate").AuthorizedCertificate;
export const AuthorizedCertificate: typeof import("./authorizedCertificate").AuthorizedCertificate = null as any;
utilities.lazyLoad(exports, ["AuthorizedCertificate"], () => require("./authorizedCertificate"));

export { DomainMappingArgs } from "./domainMapping";
export type DomainMapping = import("./domainMapping").DomainMapping;
export const DomainMapping: typeof import("./domainMapping").DomainMapping = null as any;
utilities.lazyLoad(exports, ["DomainMapping"], () => require("./domainMapping"));

export { GetAuthorizedCertificateArgs, GetAuthorizedCertificateResult, GetAuthorizedCertificateOutputArgs } from "./getAuthorizedCertificate";
export const getAuthorizedCertificate: typeof import("./getAuthorizedCertificate").getAuthorizedCertificate = null as any;
export const getAuthorizedCertificateOutput: typeof import("./getAuthorizedCertificate").getAuthorizedCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getAuthorizedCertificate","getAuthorizedCertificateOutput"], () => require("./getAuthorizedCertificate"));

export { GetDomainMappingArgs, GetDomainMappingResult, GetDomainMappingOutputArgs } from "./getDomainMapping";
export const getDomainMapping: typeof import("./getDomainMapping").getDomainMapping = null as any;
export const getDomainMappingOutput: typeof import("./getDomainMapping").getDomainMappingOutput = null as any;
utilities.lazyLoad(exports, ["getDomainMapping","getDomainMappingOutput"], () => require("./getDomainMapping"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:appengine/v1alpha:AuthorizedCertificate":
                return new AuthorizedCertificate(name, <any>undefined, { urn })
            case "google-native:appengine/v1alpha:DomainMapping":
                return new DomainMapping(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "appengine/v1alpha", _module)
