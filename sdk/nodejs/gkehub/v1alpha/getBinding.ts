// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns the details of a MembershipBinding.
 */
export function getBinding(args: GetBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:gkehub/v1alpha:getBinding", {
        "bindingId": args.bindingId,
        "location": args.location,
        "membershipId": args.membershipId,
        "project": args.project,
    }, opts);
}

export interface GetBindingArgs {
    bindingId: string;
    location: string;
    membershipId: string;
    project?: string;
}

export interface GetBindingResult {
    /**
     * When the membership binding was created.
     */
    readonly createTime: string;
    /**
     * When the membership binding was deleted.
     */
    readonly deleteTime: string;
    /**
     * Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.
     */
    readonly fleet: boolean;
    /**
     * The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
     */
    readonly name: string;
    /**
     * A Workspace resource name in the format `projects/*&#47;locations/*&#47;scopes/*`.
     */
    readonly scope: string;
    /**
     * State of the membership binding resource.
     */
    readonly state: outputs.gkehub.v1alpha.MembershipBindingLifecycleStateResponse;
    /**
     * Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.
     */
    readonly uid: string;
    /**
     * When the membership binding was last updated.
     */
    readonly updateTime: string;
}
/**
 * Returns the details of a MembershipBinding.
 */
export function getBindingOutput(args: GetBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBindingResult> {
    return pulumi.output(args).apply((a: any) => getBinding(a, opts))
}

export interface GetBindingOutputArgs {
    bindingId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    membershipId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
