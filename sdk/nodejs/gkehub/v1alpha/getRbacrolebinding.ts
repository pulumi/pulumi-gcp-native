// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns the details of a RBACRoleBinding.
 */
export function getRbacrolebinding(args: GetRbacrolebindingArgs, opts?: pulumi.InvokeOptions): Promise<GetRbacrolebindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:gkehub/v1alpha:getRbacrolebinding", {
        "location": args.location,
        "namespaceId": args.namespaceId,
        "project": args.project,
        "rbacrolebindingId": args.rbacrolebindingId,
    }, opts);
}

export interface GetRbacrolebindingArgs {
    location: string;
    namespaceId: string;
    project?: string;
    rbacrolebindingId: string;
}

export interface GetRbacrolebindingResult {
    /**
     * When the rbacrolebinding was created.
     */
    readonly createTime: string;
    /**
     * When the rbacrolebinding was deleted.
     */
    readonly deleteTime: string;
    /**
     * group is the group, as seen by the kubernetes cluster.
     */
    readonly group: string;
    /**
     * The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
     */
    readonly name: string;
    /**
     * Role to bind to the principal
     */
    readonly role: outputs.gkehub.v1alpha.RoleResponse;
    /**
     * State of the rbacrolebinding resource.
     */
    readonly state: outputs.gkehub.v1alpha.RBACRoleBindingLifecycleStateResponse;
    /**
     * Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
     */
    readonly uid: string;
    /**
     * When the rbacrolebinding was last updated.
     */
    readonly updateTime: string;
    /**
     * user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
     */
    readonly user: string;
}
/**
 * Returns the details of a RBACRoleBinding.
 */
export function getRbacrolebindingOutput(args: GetRbacrolebindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRbacrolebindingResult> {
    return pulumi.output(args).apply((a: any) => getRbacrolebinding(a, opts))
}

export interface GetRbacrolebindingOutputArgs {
    location: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    rbacrolebindingId: pulumi.Input<string>;
}
