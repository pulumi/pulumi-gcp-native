// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { BindingArgs } from "./binding";
export type Binding = import("./binding").Binding;
export const Binding: typeof import("./binding").Binding = null as any;
utilities.lazyLoad(exports, ["Binding"], () => require("./binding"));

export { FeatureArgs } from "./feature";
export type Feature = import("./feature").Feature;
export const Feature: typeof import("./feature").Feature = null as any;
utilities.lazyLoad(exports, ["Feature"], () => require("./feature"));

export { FeatureIamBindingArgs } from "./featureIamBinding";
export type FeatureIamBinding = import("./featureIamBinding").FeatureIamBinding;
export const FeatureIamBinding: typeof import("./featureIamBinding").FeatureIamBinding = null as any;
utilities.lazyLoad(exports, ["FeatureIamBinding"], () => require("./featureIamBinding"));

export { FeatureIamMemberArgs } from "./featureIamMember";
export type FeatureIamMember = import("./featureIamMember").FeatureIamMember;
export const FeatureIamMember: typeof import("./featureIamMember").FeatureIamMember = null as any;
utilities.lazyLoad(exports, ["FeatureIamMember"], () => require("./featureIamMember"));

export { FeatureIamPolicyArgs } from "./featureIamPolicy";
export type FeatureIamPolicy = import("./featureIamPolicy").FeatureIamPolicy;
export const FeatureIamPolicy: typeof import("./featureIamPolicy").FeatureIamPolicy = null as any;
utilities.lazyLoad(exports, ["FeatureIamPolicy"], () => require("./featureIamPolicy"));

export { FleetArgs } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));

export { GetBindingArgs, GetBindingResult, GetBindingOutputArgs } from "./getBinding";
export const getBinding: typeof import("./getBinding").getBinding = null as any;
export const getBindingOutput: typeof import("./getBinding").getBindingOutput = null as any;
utilities.lazyLoad(exports, ["getBinding","getBindingOutput"], () => require("./getBinding"));

export { GetFeatureArgs, GetFeatureResult, GetFeatureOutputArgs } from "./getFeature";
export const getFeature: typeof import("./getFeature").getFeature = null as any;
export const getFeatureOutput: typeof import("./getFeature").getFeatureOutput = null as any;
utilities.lazyLoad(exports, ["getFeature","getFeatureOutput"], () => require("./getFeature"));

export { GetFeatureIamPolicyArgs, GetFeatureIamPolicyResult, GetFeatureIamPolicyOutputArgs } from "./getFeatureIamPolicy";
export const getFeatureIamPolicy: typeof import("./getFeatureIamPolicy").getFeatureIamPolicy = null as any;
export const getFeatureIamPolicyOutput: typeof import("./getFeatureIamPolicy").getFeatureIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getFeatureIamPolicy","getFeatureIamPolicyOutput"], () => require("./getFeatureIamPolicy"));

export { GetFleetArgs, GetFleetResult, GetFleetOutputArgs } from "./getFleet";
export const getFleet: typeof import("./getFleet").getFleet = null as any;
export const getFleetOutput: typeof import("./getFleet").getFleetOutput = null as any;
utilities.lazyLoad(exports, ["getFleet","getFleetOutput"], () => require("./getFleet"));

export { GetMembershipArgs, GetMembershipResult, GetMembershipOutputArgs } from "./getMembership";
export const getMembership: typeof import("./getMembership").getMembership = null as any;
export const getMembershipOutput: typeof import("./getMembership").getMembershipOutput = null as any;
utilities.lazyLoad(exports, ["getMembership","getMembershipOutput"], () => require("./getMembership"));

export { GetMembershipIamPolicyArgs, GetMembershipIamPolicyResult, GetMembershipIamPolicyOutputArgs } from "./getMembershipIamPolicy";
export const getMembershipIamPolicy: typeof import("./getMembershipIamPolicy").getMembershipIamPolicy = null as any;
export const getMembershipIamPolicyOutput: typeof import("./getMembershipIamPolicy").getMembershipIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getMembershipIamPolicy","getMembershipIamPolicyOutput"], () => require("./getMembershipIamPolicy"));

export { GetMembershipRbacRoleBindingArgs, GetMembershipRbacRoleBindingResult, GetMembershipRbacRoleBindingOutputArgs } from "./getMembershipRbacRoleBinding";
export const getMembershipRbacRoleBinding: typeof import("./getMembershipRbacRoleBinding").getMembershipRbacRoleBinding = null as any;
export const getMembershipRbacRoleBindingOutput: typeof import("./getMembershipRbacRoleBinding").getMembershipRbacRoleBindingOutput = null as any;
utilities.lazyLoad(exports, ["getMembershipRbacRoleBinding","getMembershipRbacRoleBindingOutput"], () => require("./getMembershipRbacRoleBinding"));

export { GetNamespaceArgs, GetNamespaceResult, GetNamespaceOutputArgs } from "./getNamespace";
export const getNamespace: typeof import("./getNamespace").getNamespace = null as any;
export const getNamespaceOutput: typeof import("./getNamespace").getNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getNamespace","getNamespaceOutput"], () => require("./getNamespace"));

export { GetScopeArgs, GetScopeResult, GetScopeOutputArgs } from "./getScope";
export const getScope: typeof import("./getScope").getScope = null as any;
export const getScopeOutput: typeof import("./getScope").getScopeOutput = null as any;
utilities.lazyLoad(exports, ["getScope","getScopeOutput"], () => require("./getScope"));

export { GetScopeIamPolicyArgs, GetScopeIamPolicyResult, GetScopeIamPolicyOutputArgs } from "./getScopeIamPolicy";
export const getScopeIamPolicy: typeof import("./getScopeIamPolicy").getScopeIamPolicy = null as any;
export const getScopeIamPolicyOutput: typeof import("./getScopeIamPolicy").getScopeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getScopeIamPolicy","getScopeIamPolicyOutput"], () => require("./getScopeIamPolicy"));

export { GetScopeRbacRoleBindingArgs, GetScopeRbacRoleBindingResult, GetScopeRbacRoleBindingOutputArgs } from "./getScopeRbacRoleBinding";
export const getScopeRbacRoleBinding: typeof import("./getScopeRbacRoleBinding").getScopeRbacRoleBinding = null as any;
export const getScopeRbacRoleBindingOutput: typeof import("./getScopeRbacRoleBinding").getScopeRbacRoleBindingOutput = null as any;
utilities.lazyLoad(exports, ["getScopeRbacRoleBinding","getScopeRbacRoleBindingOutput"], () => require("./getScopeRbacRoleBinding"));

export { MembershipArgs } from "./membership";
export type Membership = import("./membership").Membership;
export const Membership: typeof import("./membership").Membership = null as any;
utilities.lazyLoad(exports, ["Membership"], () => require("./membership"));

export { MembershipIamBindingArgs } from "./membershipIamBinding";
export type MembershipIamBinding = import("./membershipIamBinding").MembershipIamBinding;
export const MembershipIamBinding: typeof import("./membershipIamBinding").MembershipIamBinding = null as any;
utilities.lazyLoad(exports, ["MembershipIamBinding"], () => require("./membershipIamBinding"));

export { MembershipIamMemberArgs } from "./membershipIamMember";
export type MembershipIamMember = import("./membershipIamMember").MembershipIamMember;
export const MembershipIamMember: typeof import("./membershipIamMember").MembershipIamMember = null as any;
utilities.lazyLoad(exports, ["MembershipIamMember"], () => require("./membershipIamMember"));

export { MembershipIamPolicyArgs } from "./membershipIamPolicy";
export type MembershipIamPolicy = import("./membershipIamPolicy").MembershipIamPolicy;
export const MembershipIamPolicy: typeof import("./membershipIamPolicy").MembershipIamPolicy = null as any;
utilities.lazyLoad(exports, ["MembershipIamPolicy"], () => require("./membershipIamPolicy"));

export { MembershipRbacRoleBindingArgs } from "./membershipRbacRoleBinding";
export type MembershipRbacRoleBinding = import("./membershipRbacRoleBinding").MembershipRbacRoleBinding;
export const MembershipRbacRoleBinding: typeof import("./membershipRbacRoleBinding").MembershipRbacRoleBinding = null as any;
utilities.lazyLoad(exports, ["MembershipRbacRoleBinding"], () => require("./membershipRbacRoleBinding"));

export { NamespaceArgs } from "./namespace";
export type Namespace = import("./namespace").Namespace;
export const Namespace: typeof import("./namespace").Namespace = null as any;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));

export { ScopeArgs } from "./scope";
export type Scope = import("./scope").Scope;
export const Scope: typeof import("./scope").Scope = null as any;
utilities.lazyLoad(exports, ["Scope"], () => require("./scope"));

export { ScopeIamBindingArgs } from "./scopeIamBinding";
export type ScopeIamBinding = import("./scopeIamBinding").ScopeIamBinding;
export const ScopeIamBinding: typeof import("./scopeIamBinding").ScopeIamBinding = null as any;
utilities.lazyLoad(exports, ["ScopeIamBinding"], () => require("./scopeIamBinding"));

export { ScopeIamMemberArgs } from "./scopeIamMember";
export type ScopeIamMember = import("./scopeIamMember").ScopeIamMember;
export const ScopeIamMember: typeof import("./scopeIamMember").ScopeIamMember = null as any;
utilities.lazyLoad(exports, ["ScopeIamMember"], () => require("./scopeIamMember"));

export { ScopeIamPolicyArgs } from "./scopeIamPolicy";
export type ScopeIamPolicy = import("./scopeIamPolicy").ScopeIamPolicy;
export const ScopeIamPolicy: typeof import("./scopeIamPolicy").ScopeIamPolicy = null as any;
utilities.lazyLoad(exports, ["ScopeIamPolicy"], () => require("./scopeIamPolicy"));

export { ScopeRbacRoleBindingArgs } from "./scopeRbacRoleBinding";
export type ScopeRbacRoleBinding = import("./scopeRbacRoleBinding").ScopeRbacRoleBinding;
export const ScopeRbacRoleBinding: typeof import("./scopeRbacRoleBinding").ScopeRbacRoleBinding = null as any;
utilities.lazyLoad(exports, ["ScopeRbacRoleBinding"], () => require("./scopeRbacRoleBinding"));


// Export enums:
export * from "../../types/enums/gkehub/v1alpha";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:gkehub/v1alpha:Binding":
                return new Binding(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:Feature":
                return new Feature(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:FeatureIamBinding":
                return new FeatureIamBinding(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:FeatureIamMember":
                return new FeatureIamMember(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:FeatureIamPolicy":
                return new FeatureIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:Membership":
                return new Membership(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:MembershipIamBinding":
                return new MembershipIamBinding(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:MembershipIamMember":
                return new MembershipIamMember(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:MembershipIamPolicy":
                return new MembershipIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:MembershipRbacRoleBinding":
                return new MembershipRbacRoleBinding(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:Scope":
                return new Scope(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:ScopeIamBinding":
                return new ScopeIamBinding(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:ScopeIamMember":
                return new ScopeIamMember(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:ScopeIamPolicy":
                return new ScopeIamPolicy(name, <any>undefined, { urn })
            case "google-native:gkehub/v1alpha:ScopeRbacRoleBinding":
                return new ScopeRbacRoleBinding(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "gkehub/v1alpha", _module)
