// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * ========= MembershipFeature Services ========= Gets details of a membershipFeature.
 */
export function getFeature(args: GetFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetFeatureResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:gkehub/v2alpha:getFeature", {
        "featureId": args.featureId,
        "location": args.location,
        "membershipId": args.membershipId,
        "project": args.project,
    }, opts);
}

export interface GetFeatureArgs {
    featureId: string;
    location: string;
    membershipId: string;
    project?: string;
}

export interface GetFeatureResult {
    /**
     * When the MembershipFeature resource was created.
     */
    readonly createTime: string;
    /**
     * When the MembershipFeature resource was deleted.
     */
    readonly deleteTime: string;
    /**
     * Reference information for a FeatureConfig applied on the MembershipFeature.
     */
    readonly featureConfigRef: outputs.gkehub.v2alpha.FeatureConfigRefResponse;
    /**
     * GCP labels for this MembershipFeature.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name of the membershipFeature, in the format: `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`. Note that `membershipFeatures` is shortened to `features` in the resource name. (see http://go/aip/122#collection-identifiers)
     */
    readonly name: string;
    /**
     * Lifecycle information of the resource itself.
     */
    readonly resourceState: outputs.gkehub.v2alpha.ResourceStateResponse;
    /**
     * Spec of this membershipFeature.
     */
    readonly spec: outputs.gkehub.v2alpha.FeatureSpecResponse;
    /**
     * State of the this membershipFeature.
     */
    readonly state: outputs.gkehub.v2alpha.FeatureStateResponse;
    /**
     * When the MembershipFeature resource was last updated.
     */
    readonly updateTime: string;
}

export function getFeatureOutput(args: GetFeatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFeatureResult> {
    return pulumi.output(args).apply(a => getFeature(a, opts))
}

export interface GetFeatureOutputArgs {
    featureId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    membershipId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
