// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the specified occurrence.
 */
export function getOccurrence(args: GetOccurrenceArgs, opts?: pulumi.InvokeOptions): Promise<GetOccurrenceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:containeranalysis/v1beta1:getOccurrence", {
        "occurrenceId": args.occurrenceId,
        "project": args.project,
    }, opts);
}

export interface GetOccurrenceArgs {
    occurrenceId: string;
    project?: string;
}

export interface GetOccurrenceResult {
    /**
     * Describes an attestation of an artifact.
     */
    readonly attestation: outputs.containeranalysis.v1beta1.DetailsResponse;
    /**
     * Describes a verifiable build.
     */
    readonly build: outputs.containeranalysis.v1beta1.GrafeasV1beta1BuildDetailsResponse;
    /**
     * The time this occurrence was created.
     */
    readonly createTime: string;
    /**
     * Describes the deployment of an artifact on a runtime.
     */
    readonly deployment: outputs.containeranalysis.v1beta1.GrafeasV1beta1DeploymentDetailsResponse;
    /**
     * Describes how this resource derives from the basis in the associated note.
     */
    readonly derivedImage: outputs.containeranalysis.v1beta1.GrafeasV1beta1ImageDetailsResponse;
    /**
     * Describes when a resource was discovered.
     */
    readonly discovered: outputs.containeranalysis.v1beta1.GrafeasV1beta1DiscoveryDetailsResponse;
    /**
     * https://github.com/secure-systems-lab/dsse
     */
    readonly envelope: outputs.containeranalysis.v1beta1.EnvelopeResponse;
    /**
     * Describes the installation of a package on the linked resource.
     */
    readonly installation: outputs.containeranalysis.v1beta1.GrafeasV1beta1PackageDetailsResponse;
    /**
     * Describes a specific in-toto link.
     */
    readonly intoto: outputs.containeranalysis.v1beta1.GrafeasV1beta1IntotoDetailsResponse;
    /**
     * This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     */
    readonly kind: string;
    /**
     * The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     */
    readonly name: string;
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     */
    readonly noteName: string;
    /**
     * A description of actions that can be taken to remedy the note.
     */
    readonly remediation: string;
    /**
     * Immutable. The resource for which the occurrence applies.
     */
    readonly resource: outputs.containeranalysis.v1beta1.ResourceResponse;
    /**
     * Describes a specific software bill of materials document.
     */
    readonly sbom: outputs.containeranalysis.v1beta1.DocumentOccurrenceResponse;
    /**
     * Describes a specific SPDX File.
     */
    readonly spdxFile: outputs.containeranalysis.v1beta1.FileOccurrenceResponse;
    /**
     * Describes a specific SPDX Package.
     */
    readonly spdxPackage: outputs.containeranalysis.v1beta1.PackageInfoOccurrenceResponse;
    /**
     * Describes a specific SPDX Relationship.
     */
    readonly spdxRelationship: outputs.containeranalysis.v1beta1.RelationshipOccurrenceResponse;
    /**
     * The time this occurrence was last updated.
     */
    readonly updateTime: string;
    /**
     * Describes a security vulnerability.
     */
    readonly vulnerability: outputs.containeranalysis.v1beta1.GrafeasV1beta1VulnerabilityDetailsResponse;
}
/**
 * Gets the specified occurrence.
 */
export function getOccurrenceOutput(args: GetOccurrenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOccurrenceResult> {
    return pulumi.output(args).apply((a: any) => getOccurrence(a, opts))
}

export interface GetOccurrenceOutputArgs {
    occurrenceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
