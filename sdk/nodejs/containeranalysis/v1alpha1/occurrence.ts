// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new `Occurrence`. Use this method to create `Occurrences` for a resource.
 */
export class Occurrence extends pulumi.CustomResource {
    /**
     * Get an existing Occurrence resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Occurrence {
        return new Occurrence(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:containeranalysis/v1alpha1:Occurrence';

    /**
     * Returns true if the given object is an instance of Occurrence.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Occurrence {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Occurrence.__pulumiType;
    }

    /**
     * Describes an attestation of an artifact.
     */
    public readonly attestation!: pulumi.Output<outputs.containeranalysis.v1alpha1.AttestationResponse>;
    /**
     * Build details for a verifiable build.
     */
    public readonly buildDetails!: pulumi.Output<outputs.containeranalysis.v1alpha1.BuildDetailsResponse>;
    /**
     * The time this `Occurrence` was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Describes the deployment of an artifact on a runtime.
     */
    public readonly deployment!: pulumi.Output<outputs.containeranalysis.v1alpha1.DeploymentResponse>;
    /**
     * Describes how this resource derives from the basis in the associated note.
     */
    public readonly derivedImage!: pulumi.Output<outputs.containeranalysis.v1alpha1.DerivedResponse>;
    /**
     * Describes the initial scan status for this resource.
     */
    public readonly discovered!: pulumi.Output<outputs.containeranalysis.v1alpha1.DiscoveredResponse>;
    /**
     * Describes the installation of a package on the linked resource.
     */
    public readonly installation!: pulumi.Output<outputs.containeranalysis.v1alpha1.InstallationResponse>;
    /**
     * This explicitly denotes which of the `Occurrence` details are specified. This field can be used as a filter in list requests.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The name of the `Occurrence` in the form "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An analysis note associated with this image, in the form "providers/{provider_id}/notes/{NOTE_ID}" This field can be used as a filter in list requests.
     */
    public readonly noteName!: pulumi.Output<string>;
    /**
     * A description of actions that can be taken to remedy the `Note`
     */
    public readonly remediation!: pulumi.Output<string>;
    /**
     *  The resource for which the `Occurrence` applies.
     */
    public readonly resource!: pulumi.Output<outputs.containeranalysis.v1alpha1.ResourceResponse>;
    /**
     * The unique URL of the image or the container for which the `Occurrence` applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.
     */
    public readonly resourceUrl!: pulumi.Output<string>;
    /**
     * The time this `Occurrence` was last updated.
     */
    public readonly updateTime!: pulumi.Output<string>;
    /**
     * Describes an upgrade.
     */
    public readonly upgrade!: pulumi.Output<outputs.containeranalysis.v1alpha1.UpgradeOccurrenceResponse>;
    /**
     * Details of a security vulnerability note.
     */
    public readonly vulnerabilityDetails!: pulumi.Output<outputs.containeranalysis.v1alpha1.VulnerabilityDetailsResponse>;

    /**
     * Create a Occurrence resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccurrenceArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.occurrenceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'occurrenceId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["attestation"] = args ? args.attestation : undefined;
            inputs["buildDetails"] = args ? args.buildDetails : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["deployment"] = args ? args.deployment : undefined;
            inputs["derivedImage"] = args ? args.derivedImage : undefined;
            inputs["discovered"] = args ? args.discovered : undefined;
            inputs["installation"] = args ? args.installation : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["noteName"] = args ? args.noteName : undefined;
            inputs["occurrenceId"] = args ? args.occurrenceId : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["remediation"] = args ? args.remediation : undefined;
            inputs["resource"] = args ? args.resource : undefined;
            inputs["resourceUrl"] = args ? args.resourceUrl : undefined;
            inputs["updateTime"] = args ? args.updateTime : undefined;
            inputs["upgrade"] = args ? args.upgrade : undefined;
            inputs["vulnerabilityDetails"] = args ? args.vulnerabilityDetails : undefined;
        } else {
            inputs["attestation"] = undefined /*out*/;
            inputs["buildDetails"] = undefined /*out*/;
            inputs["createTime"] = undefined /*out*/;
            inputs["deployment"] = undefined /*out*/;
            inputs["derivedImage"] = undefined /*out*/;
            inputs["discovered"] = undefined /*out*/;
            inputs["installation"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["noteName"] = undefined /*out*/;
            inputs["remediation"] = undefined /*out*/;
            inputs["resource"] = undefined /*out*/;
            inputs["resourceUrl"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
            inputs["upgrade"] = undefined /*out*/;
            inputs["vulnerabilityDetails"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Occurrence.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Occurrence resource.
 */
export interface OccurrenceArgs {
    /**
     * Describes an attestation of an artifact.
     */
    readonly attestation?: pulumi.Input<inputs.containeranalysis.v1alpha1.AttestationArgs>;
    /**
     * Build details for a verifiable build.
     */
    readonly buildDetails?: pulumi.Input<inputs.containeranalysis.v1alpha1.BuildDetailsArgs>;
    /**
     * The time this `Occurrence` was created.
     */
    readonly createTime?: pulumi.Input<string>;
    /**
     * Describes the deployment of an artifact on a runtime.
     */
    readonly deployment?: pulumi.Input<inputs.containeranalysis.v1alpha1.DeploymentArgs>;
    /**
     * Describes how this resource derives from the basis in the associated note.
     */
    readonly derivedImage?: pulumi.Input<inputs.containeranalysis.v1alpha1.DerivedArgs>;
    /**
     * Describes the initial scan status for this resource.
     */
    readonly discovered?: pulumi.Input<inputs.containeranalysis.v1alpha1.DiscoveredArgs>;
    /**
     * Describes the installation of a package on the linked resource.
     */
    readonly installation?: pulumi.Input<inputs.containeranalysis.v1alpha1.InstallationArgs>;
    /**
     * This explicitly denotes which of the `Occurrence` details are specified. This field can be used as a filter in list requests.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * The name of the `Occurrence` in the form "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
     */
    readonly name?: pulumi.Input<string>;
    /**
     * An analysis note associated with this image, in the form "providers/{provider_id}/notes/{NOTE_ID}" This field can be used as a filter in list requests.
     */
    readonly noteName?: pulumi.Input<string>;
    readonly occurrenceId: pulumi.Input<string>;
    readonly project: pulumi.Input<string>;
    /**
     * A description of actions that can be taken to remedy the `Note`
     */
    readonly remediation?: pulumi.Input<string>;
    /**
     *  The resource for which the `Occurrence` applies.
     */
    readonly resource?: pulumi.Input<inputs.containeranalysis.v1alpha1.ResourceArgs>;
    /**
     * The unique URL of the image or the container for which the `Occurrence` applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.
     */
    readonly resourceUrl?: pulumi.Input<string>;
    /**
     * The time this `Occurrence` was last updated.
     */
    readonly updateTime?: pulumi.Input<string>;
    /**
     * Describes an upgrade.
     */
    readonly upgrade?: pulumi.Input<inputs.containeranalysis.v1alpha1.UpgradeOccurrenceArgs>;
    /**
     * Details of a security vulnerability note.
     */
    readonly vulnerabilityDetails?: pulumi.Input<inputs.containeranalysis.v1alpha1.VulnerabilityDetailsArgs>;
}
