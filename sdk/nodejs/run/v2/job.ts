// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Create a Job.
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:run/v2:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using 'run.googleapis.com' or 'serving.knative.dev' namespaces. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string}>;
    /**
     * Settings for the Binary Authorization feature.
     */
    public readonly binaryAuthorization!: pulumi.Output<outputs.run.v2.GoogleCloudRunV2BinaryAuthorizationResponse>;
    /**
     * Arbitrary identifier for the API client.
     */
    public readonly client!: pulumi.Output<string>;
    /**
     * Arbitrary version identifier for the API client.
     */
    public readonly clientVersion!: pulumi.Output<string>;
    /**
     * The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     */
    public /*out*/ readonly conditions!: pulumi.Output<outputs.run.v2.GoogleCloudRunV2ConditionResponse[]>;
    /**
     * The creation time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Email address of the authenticated creator.
     */
    public /*out*/ readonly creator!: pulumi.Output<string>;
    /**
     * The deletion time.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Number of executions created for this job.
     */
    public /*out*/ readonly executionCount!: pulumi.Output<number>;
    /**
     * For a deleted resource, the time after which it will be permamently deleted.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * A number that monotonically increases every time the user modifies the desired state.
     */
    public /*out*/ readonly generation!: pulumi.Output<string>;
    /**
     * Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
     */
    public readonly jobId!: pulumi.Output<string>;
    /**
     * KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with 'run.googleapis.com' or 'serving.knative.dev' namespaces. Those labels are read-only, and user changes will not be preserved.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Email address of the last authenticated modifier.
     */
    public /*out*/ readonly lastModifier!: pulumi.Output<string>;
    /**
     * Name of the last created execution.
     */
    public /*out*/ readonly latestCreatedExecution!: pulumi.Output<outputs.run.v2.GoogleCloudRunV2ExecutionReferenceResponse>;
    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     */
    public readonly launchStage!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     */
    public /*out*/ readonly observedGeneration!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The template used to create executions for this Job.
     */
    public readonly template!: pulumi.Output<outputs.run.v2.GoogleCloudRunV2ExecutionTemplateResponse>;
    /**
     * The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.
     */
    public /*out*/ readonly terminalCondition!: pulumi.Output<outputs.run.v2.GoogleCloudRunV2ConditionResponse>;
    /**
     * Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The last-modified time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
     */
    public readonly validateOnly!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.jobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobId'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["binaryAuthorization"] = args ? args.binaryAuthorization : undefined;
            resourceInputs["client"] = args ? args.client : undefined;
            resourceInputs["clientVersion"] = args ? args.clientVersion : undefined;
            resourceInputs["jobId"] = args ? args.jobId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["launchStage"] = args ? args.launchStage : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["validateOnly"] = args ? args.validateOnly : undefined;
            resourceInputs["conditions"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["executionCount"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["generation"] = undefined /*out*/;
            resourceInputs["lastModifier"] = undefined /*out*/;
            resourceInputs["latestCreatedExecution"] = undefined /*out*/;
            resourceInputs["observedGeneration"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["terminalCondition"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["annotations"] = undefined /*out*/;
            resourceInputs["binaryAuthorization"] = undefined /*out*/;
            resourceInputs["client"] = undefined /*out*/;
            resourceInputs["clientVersion"] = undefined /*out*/;
            resourceInputs["conditions"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["executionCount"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["generation"] = undefined /*out*/;
            resourceInputs["jobId"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lastModifier"] = undefined /*out*/;
            resourceInputs["latestCreatedExecution"] = undefined /*out*/;
            resourceInputs["launchStage"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["observedGeneration"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["template"] = undefined /*out*/;
            resourceInputs["terminalCondition"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validateOnly"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["jobId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run will populate some annotations using 'run.googleapis.com' or 'serving.knative.dev' namespaces. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Settings for the Binary Authorization feature.
     */
    binaryAuthorization?: pulumi.Input<inputs.run.v2.GoogleCloudRunV2BinaryAuthorizationArgs>;
    /**
     * Arbitrary identifier for the API client.
     */
    client?: pulumi.Input<string>;
    /**
     * Arbitrary version identifier for the API client.
     */
    clientVersion?: pulumi.Input<string>;
    /**
     * Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.
     */
    jobId: pulumi.Input<string>;
    /**
     * KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with 'run.googleapis.com' or 'serving.knative.dev' namespaces. Those labels are read-only, and user changes will not be preserved.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.
     */
    launchStage?: pulumi.Input<enums.run.v2.JobLaunchStage>;
    location?: pulumi.Input<string>;
    /**
     * The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The template used to create executions for this Job.
     */
    template: pulumi.Input<inputs.run.v2.GoogleCloudRunV2ExecutionTemplateArgs>;
    /**
     * Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.
     */
    validateOnly?: pulumi.Input<boolean>;
}
