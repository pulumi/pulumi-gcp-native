// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a task and adds it to a queue. Tasks cannot be updated after creation; there is no UpdateTask command. * For App Engine queues, the maximum task size is 100KB. * For pull queues, the maximum task size is 1MB.
 */
export class QueueTask extends pulumi.CustomResource {
    /**
     * Get an existing QueueTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): QueueTask {
        return new QueueTask(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:cloudtasks/v2beta2:QueueTask';

    /**
     * Returns true if the given object is an instance of QueueTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QueueTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QueueTask.__pulumiType;
    }

    /**
     * App Engine HTTP request that is sent to the task's target. Can be set only if app_engine_http_target is set on the queue. An App Engine task is a task that has AppEngineHttpRequest set.
     */
    public readonly appEngineHttpRequest!: pulumi.Output<outputs.cloudtasks.v2beta2.AppEngineHttpRequestResponse>;
    /**
     * The time that the task was created. `create_time` will be truncated to the nearest second.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * LeaseTasks to process the task. Can be set only if pull_target is set on the queue. A pull task is a task that has PullMessage set.
     */
    public readonly pullMessage!: pulumi.Output<outputs.cloudtasks.v2beta2.PullMessageResponse>;
    /**
     * The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. For pull queues, this is the time when the task is available to be leased; if a task is currently leased, this is the time when the current lease expires, that is, the time that the task was leased plus the lease_duration. `schedule_time` will be truncated to the nearest microsecond.
     */
    public readonly scheduleTime!: pulumi.Output<string>;
    /**
     * The task status.
     */
    public readonly status!: pulumi.Output<outputs.cloudtasks.v2beta2.TaskStatusResponse>;
    /**
     * The view specifies which subset of the Task has been returned.
     */
    public readonly view!: pulumi.Output<string>;

    /**
     * Create a QueueTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueTaskArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            if ((!args || args.queuesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queuesId'");
            }
            if ((!args || args.tasksId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tasksId'");
            }
            inputs["appEngineHttpRequest"] = args ? args.appEngineHttpRequest : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["pullMessage"] = args ? args.pullMessage : undefined;
            inputs["queuesId"] = args ? args.queuesId : undefined;
            inputs["responseView"] = args ? args.responseView : undefined;
            inputs["scheduleTime"] = args ? args.scheduleTime : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["tasksId"] = args ? args.tasksId : undefined;
            inputs["view"] = args ? args.view : undefined;
        } else {
            inputs["appEngineHttpRequest"] = undefined /*out*/;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["pullMessage"] = undefined /*out*/;
            inputs["scheduleTime"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["view"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(QueueTask.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a QueueTask resource.
 */
export interface QueueTaskArgs {
    /**
     * App Engine HTTP request that is sent to the task's target. Can be set only if app_engine_http_target is set on the queue. An App Engine task is a task that has AppEngineHttpRequest set.
     */
    readonly appEngineHttpRequest?: pulumi.Input<inputs.cloudtasks.v2beta2.AppEngineHttpRequest>;
    /**
     * The time that the task was created. `create_time` will be truncated to the nearest second.
     */
    readonly createTime?: pulumi.Input<string>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * LeaseTasks to process the task. Can be set only if pull_target is set on the queue. A pull task is a task that has PullMessage set.
     */
    readonly pullMessage?: pulumi.Input<inputs.cloudtasks.v2beta2.PullMessage>;
    readonly queuesId: pulumi.Input<string>;
    /**
     * The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
     */
    readonly responseView?: pulumi.Input<string>;
    /**
     * The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. For pull queues, this is the time when the task is available to be leased; if a task is currently leased, this is the time when the current lease expires, that is, the time that the task was leased plus the lease_duration. `schedule_time` will be truncated to the nearest microsecond.
     */
    readonly scheduleTime?: pulumi.Input<string>;
    /**
     * The task status.
     */
    readonly status?: pulumi.Input<inputs.cloudtasks.v2beta2.TaskStatus>;
    readonly tasksId: pulumi.Input<string>;
    /**
     * The view specifies which subset of the Task has been returned.
     */
    readonly view?: pulumi.Input<string>;
}
