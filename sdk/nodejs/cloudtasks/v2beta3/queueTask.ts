// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a task and adds it to a queue. Tasks cannot be updated after creation; there is no UpdateTask command. * The maximum task size is 100KB.
 */
export class QueueTask extends pulumi.CustomResource {
    /**
     * Get an existing QueueTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): QueueTask {
        return new QueueTask(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:cloudtasks/v2beta3:QueueTask';

    /**
     * Returns true if the given object is an instance of QueueTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QueueTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QueueTask.__pulumiType;
    }


    /**
     * Create a QueueTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueTaskArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            if ((!args || args.queuesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queuesId'");
            }
            if ((!args || args.tasksId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tasksId'");
            }
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["queuesId"] = args ? args.queuesId : undefined;
            inputs["responseView"] = args ? args.responseView : undefined;
            inputs["task"] = args ? args.task : undefined;
            inputs["tasksId"] = args ? args.tasksId : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(QueueTask.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a QueueTask resource.
 */
export interface QueueTaskArgs {
    readonly locationsId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    readonly queuesId: pulumi.Input<string>;
    /**
     * The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
     */
    readonly responseView?: pulumi.Input<string>;
    /**
     * Required. The task to add. Task names have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`. The user can optionally specify a task name. If a name is not specified then the system will generate a random unique task id, which will be set in the task returned in the response. If schedule_time is not set or is in the past then Cloud Tasks will set it to the current time. Task De-duplication: Explicitly specifying a task ID enables task de-duplication. If a task's ID is identical to that of an existing task or a task that was deleted or executed recently then the call will fail with ALREADY_EXISTS. If the task's queue was created using Cloud Tasks, then another task with the same name can't be created for ~1hour after the original task was deleted or executed. If the task's queue was created using queue.yaml or queue.xml, then another task with the same name can't be created for ~9days after the original task was deleted or executed. Because there is an extra lookup cost to identify duplicate task names, these CreateTask calls have significantly increased latency. Using hashed strings for the task id or for the prefix of the task id is recommended. Choosing task ids that are sequential or have sequential prefixes, for example using a timestamp, causes an increase in latency and error rates in all task commands. The infrastructure relies on an approximately uniform distribution of task ids to store and serve tasks efficiently.
     */
    readonly task?: pulumi.Input<inputs.cloudtasks.v2beta3.Task>;
    readonly tasksId: pulumi.Input<string>;
}
