// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a feed in a parent project/folder/organization to listen to its asset updates.
 */
export class Feed extends pulumi.CustomResource {
    /**
     * Get an existing Feed resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Feed {
        return new Feed(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:cloudasset/v1:Feed';

    /**
     * Returns true if the given object is an instance of Feed.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Feed {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Feed.__pulumiType;
    }


    /**
     * Create a Feed resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeedArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.feedsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'feedsId'");
            }
            if ((!args || args.v1Id === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v1Id'");
            }
            if ((!args || args.v1Id1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v1Id1'");
            }
            inputs["feed"] = args ? args.feed : undefined;
            inputs["feedId"] = args ? args.feedId : undefined;
            inputs["feedsId"] = args ? args.feedsId : undefined;
            inputs["v1Id"] = args ? args.v1Id : undefined;
            inputs["v1Id1"] = args ? args.v1Id1 : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Feed.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Feed resource.
 */
export interface FeedArgs {
    /**
     * Required. The feed details. The field `name` must be empty and it will be generated in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id organizations/organization_number/feeds/feed_id
     */
    readonly feed?: pulumi.Input<inputs.cloudasset.v1.Feed>;
    /**
     * Required. This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization.
     */
    readonly feedId?: pulumi.Input<string>;
    readonly feedsId: pulumi.Input<string>;
    readonly v1Id: pulumi.Input<string>;
    readonly v1Id1: pulumi.Input<string>;
}
