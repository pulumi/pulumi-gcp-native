// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new FirewallEndpointAssociation in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class FirewallEndpointAssociation extends pulumi.CustomResource {
    /**
     * Get an existing FirewallEndpointAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FirewallEndpointAssociation {
        return new FirewallEndpointAssociation(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networksecurity/v1beta1:FirewallEndpointAssociation';

    /**
     * Returns true if the given object is an instance of FirewallEndpointAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallEndpointAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallEndpointAssociation.__pulumiType;
    }

    /**
     * Create time stamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The URL of the FirewallEndpoint that is being associated.
     */
    public readonly firewallEndpoint!: pulumi.Output<string>;
    /**
     * Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
     */
    public readonly firewallEndpointAssociationId!: pulumi.Output<string | undefined>;
    /**
     * Optional. Labels as key value pairs
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * name of resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The URL of the network that is being associated.
     */
    public readonly network!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Whether reconciling is in progress, recommended per https://google.aip.dev/128.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Current state of the association.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Optional. The URL of the TlsInspectionPolicy that is being associated.
     */
    public readonly tlsInspectionPolicy!: pulumi.Output<string>;
    /**
     * Update time stamp
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a FirewallEndpointAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallEndpointAssociationArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.firewallEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallEndpoint'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["firewallEndpoint"] = args ? args.firewallEndpoint : undefined;
            resourceInputs["firewallEndpointAssociationId"] = args ? args.firewallEndpointAssociationId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["tlsInspectionPolicy"] = args ? args.tlsInspectionPolicy : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["firewallEndpoint"] = undefined /*out*/;
            resourceInputs["firewallEndpointAssociationId"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tlsInspectionPolicy"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(FirewallEndpointAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FirewallEndpointAssociation resource.
 */
export interface FirewallEndpointAssociationArgs {
    /**
     * The URL of the FirewallEndpoint that is being associated.
     */
    firewallEndpoint: pulumi.Input<string>;
    /**
     * Optional. Id of the requesting object. If auto-generating Id server-side, remove this field and firewall_endpoint_association_id from the method_signature of Create RPC.
     */
    firewallEndpointAssociationId?: pulumi.Input<string>;
    /**
     * Optional. Labels as key value pairs
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * The URL of the network that is being associated.
     */
    network: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Optional. The URL of the TlsInspectionPolicy that is being associated.
     */
    tlsInspectionPolicy?: pulumi.Input<string>;
}
