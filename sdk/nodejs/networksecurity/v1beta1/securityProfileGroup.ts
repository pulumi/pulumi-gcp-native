// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a new SecurityProfileGroup in a given organization and location.
 * Auto-naming is currently not supported for this resource.
 */
export class SecurityProfileGroup extends pulumi.CustomResource {
    /**
     * Get an existing SecurityProfileGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityProfileGroup {
        return new SecurityProfileGroup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networksecurity/v1beta1:SecurityProfileGroup';

    /**
     * Returns true if the given object is an instance of SecurityProfileGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityProfileGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityProfileGroup.__pulumiType;
    }

    /**
     * Resource creation timestamp.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. An optional description of the profile group. Max length 2048 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Optional. Labels as key value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. Identifier. Name of the SecurityProfileGroup resource. It matches pattern `projects|organizations/*&#47;locations/{location}/securityProfileGroups/{security_profile_group}`.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * Required. Short name of the SecurityProfileGroup resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "security_profile_group1".
     */
    public readonly securityProfileGroupId!: pulumi.Output<string>;
    /**
     * Optional. Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
     */
    public readonly threatPreventionProfile!: pulumi.Output<string>;
    /**
     * Last resource update timestamp.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a SecurityProfileGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityProfileGroupArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.securityProfileGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityProfileGroupId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["securityProfileGroupId"] = args ? args.securityProfileGroupId : undefined;
            resourceInputs["threatPreventionProfile"] = args ? args.threatPreventionProfile : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["securityProfileGroupId"] = undefined /*out*/;
            resourceInputs["threatPreventionProfile"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "organizationId", "securityProfileGroupId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(SecurityProfileGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a SecurityProfileGroup resource.
 */
export interface SecurityProfileGroupArgs {
    /**
     * Optional. An optional description of the profile group. Max length 2048 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. Identifier. Name of the SecurityProfileGroup resource. It matches pattern `projects|organizations/*&#47;locations/{location}/securityProfileGroups/{security_profile_group}`.
     */
    name?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    /**
     * Required. Short name of the SecurityProfileGroup resource to be created. This value should be 1-63 characters long, containing only letters, numbers, hyphens, and underscores, and should not start with a number. E.g. "security_profile_group1".
     */
    securityProfileGroupId: pulumi.Input<string>;
    /**
     * Optional. Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
     */
    threatPreventionProfile?: pulumi.Input<string>;
}
