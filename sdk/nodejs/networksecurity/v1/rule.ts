// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new GatewaySecurityPolicy in a given project and location.
 * Auto-naming is currently not supported for this resource.
 */
export class Rule extends pulumi.CustomResource {
    /**
     * Get an existing Rule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Rule {
        return new Rule(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networksecurity/v1:Rule';

    /**
     * Returns true if the given object is an instance of Rule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rule.__pulumiType;
    }

    /**
     * Optional. CEL expression for matching on L7/application level criteria.
     */
    public readonly applicationMatcher!: pulumi.Output<string>;
    /**
     * Profile which tells what the primitive action should be.
     */
    public readonly basicProfile!: pulumi.Output<string>;
    /**
     * Time when the rule was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Free-text description of the resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Whether the rule is enforced.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly gatewaySecurityPolicyId!: pulumi.Output<string>;
    /**
     * The ID to use for the rule, which will become the final component of the rule's resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
     */
    public readonly gatewaySecurityPolicyRuleId!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Priority of the rule. Lower number corresponds to higher precedence.
     */
    public readonly priority!: pulumi.Output<number>;
    public readonly project!: pulumi.Output<string>;
    /**
     * CEL expression for matching on session criteria.
     */
    public readonly sessionMatcher!: pulumi.Output<string>;
    /**
     * Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
     */
    public readonly tlsInspectionEnabled!: pulumi.Output<boolean>;
    /**
     * Time when the rule was updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Rule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.basicProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'basicProfile'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.gatewaySecurityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewaySecurityPolicyId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.sessionMatcher === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sessionMatcher'");
            }
            resourceInputs["applicationMatcher"] = args ? args.applicationMatcher : undefined;
            resourceInputs["basicProfile"] = args ? args.basicProfile : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["gatewaySecurityPolicyId"] = args ? args.gatewaySecurityPolicyId : undefined;
            resourceInputs["gatewaySecurityPolicyRuleId"] = args ? args.gatewaySecurityPolicyRuleId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sessionMatcher"] = args ? args.sessionMatcher : undefined;
            resourceInputs["tlsInspectionEnabled"] = args ? args.tlsInspectionEnabled : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["applicationMatcher"] = undefined /*out*/;
            resourceInputs["basicProfile"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["gatewaySecurityPolicyId"] = undefined /*out*/;
            resourceInputs["gatewaySecurityPolicyRuleId"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["sessionMatcher"] = undefined /*out*/;
            resourceInputs["tlsInspectionEnabled"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["gatewaySecurityPolicyId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Rule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Rule resource.
 */
export interface RuleArgs {
    /**
     * Optional. CEL expression for matching on L7/application level criteria.
     */
    applicationMatcher?: pulumi.Input<string>;
    /**
     * Profile which tells what the primitive action should be.
     */
    basicProfile: pulumi.Input<enums.networksecurity.v1.RuleBasicProfile>;
    /**
     * Optional. Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the rule is enforced.
     */
    enabled: pulumi.Input<boolean>;
    gatewaySecurityPolicyId: pulumi.Input<string>;
    /**
     * The ID to use for the rule, which will become the final component of the rule's resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
     */
    gatewaySecurityPolicyRuleId?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
     */
    name: pulumi.Input<string>;
    /**
     * Priority of the rule. Lower number corresponds to higher precedence.
     */
    priority: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * CEL expression for matching on session criteria.
     */
    sessionMatcher: pulumi.Input<string>;
    /**
     * Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
     */
    tlsInspectionEnabled?: pulumi.Input<boolean>;
}
