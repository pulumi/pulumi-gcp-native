// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Fetches the representation of an existing Response Policy Rule.
 */
export function getResponsePolicyRule(args: GetResponsePolicyRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetResponsePolicyRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:dns/v1:getResponsePolicyRule", {
        "clientOperationId": args.clientOperationId,
        "project": args.project,
        "responsePolicy": args.responsePolicy,
        "responsePolicyRule": args.responsePolicyRule,
    }, opts);
}

export interface GetResponsePolicyRuleArgs {
    clientOperationId?: string;
    project?: string;
    responsePolicy: string;
    responsePolicyRule: string;
}

export interface GetResponsePolicyRuleResult {
    /**
     * Answer this query with a behavior rather than DNS data.
     */
    readonly behavior: string;
    /**
     * The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
     */
    readonly dnsName: string;
    readonly kind: string;
    /**
     * Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
     */
    readonly localData: outputs.dns.v1.ResponsePolicyRuleLocalDataResponse;
    /**
     * An identifier for this rule. Must be unique with the ResponsePolicy.
     */
    readonly ruleName: string;
}
/**
 * Fetches the representation of an existing Response Policy Rule.
 */
export function getResponsePolicyRuleOutput(args: GetResponsePolicyRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResponsePolicyRuleResult> {
    return pulumi.output(args).apply((a: any) => getResponsePolicyRule(a, opts))
}

export interface GetResponsePolicyRuleOutputArgs {
    clientOperationId?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    responsePolicy: pulumi.Input<string>;
    responsePolicyRule: pulumi.Input<string>;
}
