// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new FeatureView in a given FeatureOnlineStore.
 * Auto-naming is currently not supported for this resource.
 */
export class FeatureView extends pulumi.CustomResource {
    /**
     * Get an existing FeatureView resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FeatureView {
        return new FeatureView(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:aiplatform/v1:FeatureView';

    /**
     * Returns true if the given object is an instance of FeatureView.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FeatureView {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FeatureView.__pulumiType;
    }

    /**
     * Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
     */
    public readonly bigQuerySource!: pulumi.Output<outputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewBigQuerySourceResponse>;
    /**
     * Timestamp when this FeatureView was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    public readonly etag!: pulumi.Output<string>;
    public readonly featureOnlineStoreId!: pulumi.Output<string>;
    /**
     * Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
     */
    public readonly featureRegistrySource!: pulumi.Output<outputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceResponse>;
    /**
     * Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
     */
    public readonly featureViewId!: pulumi.Output<string>;
    /**
     * Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
     */
    public readonly runSyncImmediately!: pulumi.Output<boolean | undefined>;
    /**
     * Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
     */
    public readonly syncConfig!: pulumi.Output<outputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewSyncConfigResponse>;
    /**
     * Timestamp when this FeatureView was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a FeatureView resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeatureViewArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.featureOnlineStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureOnlineStoreId'");
            }
            if ((!args || args.featureViewId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featureViewId'");
            }
            resourceInputs["bigQuerySource"] = args ? args.bigQuerySource : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["featureOnlineStoreId"] = args ? args.featureOnlineStoreId : undefined;
            resourceInputs["featureRegistrySource"] = args ? args.featureRegistrySource : undefined;
            resourceInputs["featureViewId"] = args ? args.featureViewId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["runSyncImmediately"] = args ? args.runSyncImmediately : undefined;
            resourceInputs["syncConfig"] = args ? args.syncConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["bigQuerySource"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["featureOnlineStoreId"] = undefined /*out*/;
            resourceInputs["featureRegistrySource"] = undefined /*out*/;
            resourceInputs["featureViewId"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["runSyncImmediately"] = undefined /*out*/;
            resourceInputs["syncConfig"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["featureOnlineStoreId", "featureViewId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(FeatureView.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a FeatureView resource.
 */
export interface FeatureViewArgs {
    /**
     * Optional. Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
     */
    bigQuerySource?: pulumi.Input<inputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewBigQuerySourceArgs>;
    /**
     * Optional. Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    etag?: pulumi.Input<string>;
    featureOnlineStoreId: pulumi.Input<string>;
    /**
     * Optional. Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
     */
    featureRegistrySource?: pulumi.Input<inputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceArgs>;
    /**
     * Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
     */
    featureViewId: pulumi.Input<string>;
    /**
     * Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
     */
    runSyncImmediately?: pulumi.Input<boolean>;
    /**
     * Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for each entityId of this FeatureView are made ready for online serving.
     */
    syncConfig?: pulumi.Input<inputs.aiplatform.v1.GoogleCloudAiplatformV1FeatureViewSyncConfigArgs>;
}
