// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Retrieves a specific Artifact.
 */
export function getArtifact(args: GetArtifactArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1:getArtifact", {
        "artifactId": args.artifactId,
        "location": args.location,
        "metadataStoreId": args.metadataStoreId,
        "project": args.project,
    }, opts);
}

export interface GetArtifactArgs {
    artifactId: string;
    location: string;
    metadataStoreId: string;
    project?: string;
}

export interface GetArtifactResult {
    /**
     * Timestamp when this Artifact was created.
     */
    readonly createTime: string;
    /**
     * Description of the Artifact
     */
    readonly description: string;
    /**
     * User provided display name of the Artifact. May be up to 128 Unicode characters.
     */
    readonly displayName: string;
    /**
     * An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    readonly etag: string;
    /**
     * The labels with user-defined metadata to organize your Artifacts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Artifact (System labels are excluded).
     */
    readonly labels: {[key: string]: string};
    /**
     * Properties of the Artifact. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
     */
    readonly metadata: {[key: string]: any};
    /**
     * The resource name of the Artifact.
     */
    readonly name: string;
    /**
     * The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
     */
    readonly schemaTitle: string;
    /**
     * The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
     */
    readonly schemaVersion: string;
    /**
     * The state of this Artifact. This is a property of the Artifact, and does not imply or capture any ongoing process. This property is managed by clients (such as Vertex AI Pipelines), and the system does not prescribe or check the validity of state transitions.
     */
    readonly state: string;
    /**
     * Timestamp when this Artifact was last updated.
     */
    readonly updateTime: string;
    /**
     * The uniform resource identifier of the artifact file. May be empty if there is no actual artifact file.
     */
    readonly uri: string;
}
/**
 * Retrieves a specific Artifact.
 */
export function getArtifactOutput(args: GetArtifactOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactResult> {
    return pulumi.output(args).apply((a: any) => getArtifact(a, opts))
}

export interface GetArtifactOutputArgs {
    artifactId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    metadataStoreId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
