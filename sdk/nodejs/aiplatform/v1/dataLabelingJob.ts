// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a DataLabelingJob.
 * Auto-naming is currently not supported for this resource.
 */
export class DataLabelingJob extends pulumi.CustomResource {
    /**
     * Get an existing DataLabelingJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataLabelingJob {
        return new DataLabelingJob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:aiplatform/v1:DataLabelingJob';

    /**
     * Returns true if the given object is an instance of DataLabelingJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataLabelingJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataLabelingJob.__pulumiType;
    }

    /**
     * Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
     */
    public readonly activeLearningConfig!: pulumi.Output<outputs.aiplatform.v1.GoogleCloudAiplatformV1ActiveLearningConfigResponse>;
    /**
     * Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
     */
    public readonly annotationLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Timestamp when this DataLabelingJob was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Estimated cost(in US dollars) that the DataLabelingJob has incurred to date.
     */
    public /*out*/ readonly currentSpend!: pulumi.Output<outputs.aiplatform.v1.GoogleTypeMoneyResponse>;
    /**
     * Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     */
    public readonly datasets!: pulumi.Output<string[]>;
    /**
     * The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
     */
    public readonly encryptionSpec!: pulumi.Output<outputs.aiplatform.v1.GoogleCloudAiplatformV1EncryptionSpecResponse>;
    /**
     * DataLabelingJob errors. It is only populated when job's state is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
     */
    public /*out*/ readonly error!: pulumi.Output<outputs.aiplatform.v1.GoogleRpcStatusResponse>;
    /**
     * Input config parameters for the DataLabelingJob.
     */
    public readonly inputs!: pulumi.Output<any>;
    /**
     * Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
     */
    public readonly inputsSchemaUri!: pulumi.Output<string>;
    /**
     * The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
     */
    public readonly instructionUri!: pulumi.Output<string>;
    /**
     * Number of labelers to work on each DataItem.
     */
    public readonly labelerCount!: pulumi.Output<number>;
    /**
     * Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
     */
    public /*out*/ readonly labelingProgress!: pulumi.Output<number>;
    /**
     * The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name of the DataLabelingJob.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The SpecialistPools' resource names associated with this job.
     */
    public readonly specialistPools!: pulumi.Output<string[]>;
    /**
     * The detailed state of the job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Timestamp when this DataLabelingJob was updated most recently.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a DataLabelingJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataLabelingJobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.datasets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasets'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.inputs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputs'");
            }
            if ((!args || args.inputsSchemaUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inputsSchemaUri'");
            }
            if ((!args || args.instructionUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instructionUri'");
            }
            if ((!args || args.labelerCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labelerCount'");
            }
            resourceInputs["activeLearningConfig"] = args ? args.activeLearningConfig : undefined;
            resourceInputs["annotationLabels"] = args ? args.annotationLabels : undefined;
            resourceInputs["datasets"] = args ? args.datasets : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionSpec"] = args ? args.encryptionSpec : undefined;
            resourceInputs["inputs"] = args ? args.inputs : undefined;
            resourceInputs["inputsSchemaUri"] = args ? args.inputsSchemaUri : undefined;
            resourceInputs["instructionUri"] = args ? args.instructionUri : undefined;
            resourceInputs["labelerCount"] = args ? args.labelerCount : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["specialistPools"] = args ? args.specialistPools : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["currentSpend"] = undefined /*out*/;
            resourceInputs["error"] = undefined /*out*/;
            resourceInputs["labelingProgress"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["activeLearningConfig"] = undefined /*out*/;
            resourceInputs["annotationLabels"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["currentSpend"] = undefined /*out*/;
            resourceInputs["datasets"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["encryptionSpec"] = undefined /*out*/;
            resourceInputs["error"] = undefined /*out*/;
            resourceInputs["inputs"] = undefined /*out*/;
            resourceInputs["inputsSchemaUri"] = undefined /*out*/;
            resourceInputs["instructionUri"] = undefined /*out*/;
            resourceInputs["labelerCount"] = undefined /*out*/;
            resourceInputs["labelingProgress"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["specialistPools"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataLabelingJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DataLabelingJob resource.
 */
export interface DataLabelingJobArgs {
    /**
     * Parameters that configure the active learning pipeline. Active learning will label the data incrementally via several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
     */
    activeLearningConfig?: pulumi.Input<inputs.aiplatform.v1.GoogleCloudAiplatformV1ActiveLearningConfigArgs>;
    /**
     * Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
     */
    annotationLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     */
    datasets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
     */
    displayName: pulumi.Input<string>;
    /**
     * Customer-managed encryption key spec for a DataLabelingJob. If set, this DataLabelingJob will be secured by this key. Note: Annotations created in the DataLabelingJob are associated with the EncryptionSpec of the Dataset they are exported to.
     */
    encryptionSpec?: pulumi.Input<inputs.aiplatform.v1.GoogleCloudAiplatformV1EncryptionSpecArgs>;
    /**
     * Input config parameters for the DataLabelingJob.
     */
    inputs: any;
    /**
     * Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
     */
    inputsSchemaUri: pulumi.Input<string>;
    /**
     * The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
     */
    instructionUri: pulumi.Input<string>;
    /**
     * Number of labelers to work on each DataItem.
     */
    labelerCount: pulumi.Input<number>;
    /**
     * The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The SpecialistPools' resource names associated with this job.
     */
    specialistPools?: pulumi.Input<pulumi.Input<string>[]>;
}
