// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a TensorboardTimeSeries.
 */
export function getTimeSeries(args: GetTimeSeriesArgs, opts?: pulumi.InvokeOptions): Promise<GetTimeSeriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1:getTimeSeries", {
        "experimentId": args.experimentId,
        "location": args.location,
        "project": args.project,
        "runId": args.runId,
        "tensorboardId": args.tensorboardId,
        "timeSeriesId": args.timeSeriesId,
    }, opts);
}

export interface GetTimeSeriesArgs {
    experimentId: string;
    location: string;
    project?: string;
    runId: string;
    tensorboardId: string;
    timeSeriesId: string;
}

export interface GetTimeSeriesResult {
    /**
     * Timestamp when this TensorboardTimeSeries was created.
     */
    readonly createTime: string;
    /**
     * Description of this TensorboardTimeSeries.
     */
    readonly description: string;
    /**
     * User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
     */
    readonly displayName: string;
    /**
     * Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    readonly etag: string;
    /**
     * Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries.
     */
    readonly metadata: outputs.aiplatform.v1.GoogleCloudAiplatformV1TensorboardTimeSeriesMetadataResponse;
    /**
     * Name of the TensorboardTimeSeries.
     */
    readonly name: string;
    /**
     * Data of the current plugin, with the size limited to 65KB.
     */
    readonly pluginData: string;
    /**
     * Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob
     */
    readonly pluginName: string;
    /**
     * Timestamp when this TensorboardTimeSeries was last updated.
     */
    readonly updateTime: string;
    /**
     * Immutable. Type of TensorboardTimeSeries value.
     */
    readonly valueType: string;
}
/**
 * Gets a TensorboardTimeSeries.
 */
export function getTimeSeriesOutput(args: GetTimeSeriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTimeSeriesResult> {
    return pulumi.output(args).apply((a: any) => getTimeSeries(a, opts))
}

export interface GetTimeSeriesOutputArgs {
    experimentId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    runId: pulumi.Input<string>;
    tensorboardId: pulumi.Input<string>;
    timeSeriesId: pulumi.Input<string>;
}
