// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a Trial.
 */
export function getTrial(args: GetTrialArgs, opts?: pulumi.InvokeOptions): Promise<GetTrialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1:getTrial", {
        "location": args.location,
        "project": args.project,
        "studyId": args.studyId,
        "trialId": args.trialId,
    }, opts);
}

export interface GetTrialArgs {
    location: string;
    project?: string;
    studyId: string;
    trialId: string;
}

export interface GetTrialResult {
    /**
     * The identifier of the client that originally requested this Trial. Each client is identified by a unique client_id. When a client asks for a suggestion, Vertex AI Vizier will assign it a Trial. The client should evaluate the Trial, complete it, and report back to Vertex AI Vizier. If suggestion is asked again by same client_id before the Trial is completed, the same Trial will be returned. Multiple clients with different client_ids can ask for suggestions simultaneously, each of them will get their own Trial.
     */
    readonly clientId: string;
    /**
     * The CustomJob name linked to the Trial. It's set for a HyperparameterTuningJob's Trial.
     */
    readonly customJob: string;
    /**
     * Time when the Trial's status changed to `SUCCEEDED` or `INFEASIBLE`.
     */
    readonly endTime: string;
    /**
     * The final measurement containing the objective value.
     */
    readonly finalMeasurement: outputs.aiplatform.v1.GoogleCloudAiplatformV1MeasurementResponse;
    /**
     * A human readable string describing why the Trial is infeasible. This is set only if Trial state is `INFEASIBLE`.
     */
    readonly infeasibleReason: string;
    /**
     * A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_duration). These are used for early stopping computations.
     */
    readonly measurements: outputs.aiplatform.v1.GoogleCloudAiplatformV1MeasurementResponse[];
    /**
     * Resource name of the Trial assigned by the service.
     */
    readonly name: string;
    /**
     * The parameters of the Trial.
     */
    readonly parameters: outputs.aiplatform.v1.GoogleCloudAiplatformV1TrialParameterResponse[];
    /**
     * Time when the Trial was started.
     */
    readonly startTime: string;
    /**
     * The detailed state of the Trial.
     */
    readonly state: string;
    /**
     * URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a HyperparameterTuningJob and the job's trial_job_spec.enable_web_access field is `true`. The keys are names of each node used for the trial; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
     */
    readonly webAccessUris: {[key: string]: string};
}
/**
 * Gets a Trial.
 */
export function getTrialOutput(args: GetTrialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrialResult> {
    return pulumi.output(args).apply((a: any) => getTrial(a, opts))
}

export interface GetTrialOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    studyId: pulumi.Input<string>;
    trialId: pulumi.Input<string>;
}
