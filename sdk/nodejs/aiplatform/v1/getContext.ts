// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Retrieves a specific Context.
 */
export function getContext(args: GetContextArgs, opts?: pulumi.InvokeOptions): Promise<GetContextResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1:getContext", {
        "contextId": args.contextId,
        "location": args.location,
        "metadataStoreId": args.metadataStoreId,
        "project": args.project,
    }, opts);
}

export interface GetContextArgs {
    contextId: string;
    location: string;
    metadataStoreId: string;
    project?: string;
}

export interface GetContextResult {
    /**
     * Timestamp when this Context was created.
     */
    readonly createTime: string;
    /**
     * Description of the Context
     */
    readonly description: string;
    /**
     * User provided display name of the Context. May be up to 128 Unicode characters.
     */
    readonly displayName: string;
    /**
     * An eTag used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    readonly etag: string;
    /**
     * The labels with user-defined metadata to organize your Contexts. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Context (System labels are excluded).
     */
    readonly labels: {[key: string]: string};
    /**
     * Properties of the Context. Top level metadata keys' heading and trailing spaces will be trimmed. The size of this field should not exceed 200KB.
     */
    readonly metadata: {[key: string]: any};
    /**
     * Immutable. The resource name of the Context.
     */
    readonly name: string;
    /**
     * A list of resource names of Contexts that are parents of this Context. A Context may have at most 10 parent_contexts.
     */
    readonly parentContexts: string[];
    /**
     * The title of the schema describing the metadata. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
     */
    readonly schemaTitle: string;
    /**
     * The version of the schema in schema_name to use. Schema title and version is expected to be registered in earlier Create Schema calls. And both are used together as unique identifiers to identify schemas within the local metadata store.
     */
    readonly schemaVersion: string;
    /**
     * Timestamp when this Context was last updated.
     */
    readonly updateTime: string;
}
/**
 * Retrieves a specific Context.
 */
export function getContextOutput(args: GetContextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContextResult> {
    return pulumi.output(args).apply((a: any) => getContext(a, opts))
}

export interface GetContextOutputArgs {
    contextId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    metadataStoreId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
