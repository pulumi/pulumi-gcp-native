// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets a RagCorpus.
 */
export function getRagCorpora(args: GetRagCorporaArgs, opts?: pulumi.InvokeOptions): Promise<GetRagCorporaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1beta1:getRagCorpora", {
        "location": args.location,
        "project": args.project,
        "ragCorporaId": args.ragCorporaId,
    }, opts);
}

export interface GetRagCorporaArgs {
    location: string;
    project?: string;
    ragCorporaId: string;
}

export interface GetRagCorporaResult {
    /**
     * Timestamp when this RagCorpus was created.
     */
    readonly createTime: string;
    /**
     * Optional. The description of the RagCorpus.
     */
    readonly description: string;
    /**
     * The display name of the RagCorpus. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    readonly displayName: string;
    /**
     * The resource name of the RagCorpus.
     */
    readonly name: string;
    /**
     * Timestamp when this RagCorpus was last updated.
     */
    readonly updateTime: string;
}
/**
 * Gets a RagCorpus.
 */
export function getRagCorporaOutput(args: GetRagCorporaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRagCorporaResult> {
    return pulumi.output(args).apply((a: any) => getRagCorpora(a, opts))
}

export interface GetRagCorporaOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    ragCorporaId: pulumi.Input<string>;
}
