// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a PersistentResource.
 */
export function getPersistentResource(args: GetPersistentResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetPersistentResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1beta1:getPersistentResource", {
        "location": args.location,
        "persistentResourceId": args.persistentResourceId,
        "project": args.project,
    }, opts);
}

export interface GetPersistentResourceArgs {
    location: string;
    persistentResourceId: string;
    project?: string;
}

export interface GetPersistentResourceResult {
    /**
     * Time when the PersistentResource was created.
     */
    readonly createTime: string;
    /**
     * Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     */
    readonly displayName: string;
    /**
     * Optional. Customer-managed encryption key spec for a PersistentResource. If set, this PersistentResource and all sub-resources of this PersistentResource will be secured by this key.
     */
    readonly encryptionSpec: outputs.aiplatform.v1beta1.GoogleCloudAiplatformV1beta1EncryptionSpecResponse;
    /**
     * Only populated when persistent resource's state is `STOPPING` or `ERROR`.
     */
    readonly error: outputs.aiplatform.v1beta1.GoogleRpcStatusResponse;
    /**
     * Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * Immutable. Resource name of a PersistentResource.
     */
    readonly name: string;
    /**
     * Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.
     */
    readonly network: string;
    /**
     * Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
     */
    readonly reservedIpRanges: string[];
    /**
     * The spec of the pools of different resources.
     */
    readonly resourcePools: outputs.aiplatform.v1beta1.GoogleCloudAiplatformV1beta1ResourcePoolResponse[];
    /**
     * Runtime information of the Persistent Resource.
     */
    readonly resourceRuntime: outputs.aiplatform.v1beta1.GoogleCloudAiplatformV1beta1ResourceRuntimeResponse;
    /**
     * Optional. Persistent Resource runtime spec. For example, used for Ray cluster configuration.
     */
    readonly resourceRuntimeSpec: outputs.aiplatform.v1beta1.GoogleCloudAiplatformV1beta1ResourceRuntimeSpecResponse;
    /**
     * Time when the PersistentResource for the first time entered the `RUNNING` state.
     */
    readonly startTime: string;
    /**
     * The detailed state of a Study.
     */
    readonly state: string;
    /**
     * Time when the PersistentResource was most recently updated.
     */
    readonly updateTime: string;
}
/**
 * Gets a PersistentResource.
 */
export function getPersistentResourceOutput(args: GetPersistentResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersistentResourceResult> {
    return pulumi.output(args).apply((a: any) => getPersistentResource(a, opts))
}

export interface GetPersistentResourceOutputArgs {
    location: pulumi.Input<string>;
    persistentResourceId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
