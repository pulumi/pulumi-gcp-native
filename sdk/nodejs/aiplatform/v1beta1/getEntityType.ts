// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single EntityType.
 */
export function getEntityType(args: GetEntityTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:aiplatform/v1beta1:getEntityType", {
        "entityTypeId": args.entityTypeId,
        "featurestoreId": args.featurestoreId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetEntityTypeArgs {
    entityTypeId: string;
    featurestoreId: string;
    location: string;
    project?: string;
}

export interface GetEntityTypeResult {
    /**
     * Timestamp when this EntityType was created.
     */
    readonly createTime: string;
    /**
     * Optional. Description of the EntityType.
     */
    readonly description: string;
    /**
     * Optional. Used to perform a consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    readonly etag: string;
    /**
     * Optional. The labels with user-defined metadata to organize your EntityTypes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one EntityType (System labels are excluded)." System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
     */
    readonly labels: {[key: string]: string};
    /**
     * Optional. The default monitoring configuration for all Features with value type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 under this EntityType. If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
     */
    readonly monitoringConfig: outputs.aiplatform.v1beta1.GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfigResponse;
    /**
     * Immutable. Name of the EntityType. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` The last part entity_type is assigned by the client. The entity_type can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z and underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given a featurestore.
     */
    readonly name: string;
    /**
     * Optional. Config for data retention policy in offline storage. TTL in days for feature values that will be stored in offline storage. The Feature Store offline storage periodically removes obsolete feature values older than `offline_storage_ttl_days` since the feature generation time. If unset (or explicitly set to 0), default to 4000 days TTL.
     */
    readonly offlineStorageTtlDays: number;
    /**
     * Timestamp when this EntityType was most recently updated.
     */
    readonly updateTime: string;
}
/**
 * Gets details of a single EntityType.
 */
export function getEntityTypeOutput(args: GetEntityTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityTypeResult> {
    return pulumi.output(args).apply((a: any) => getEntityType(a, opts))
}

export interface GetEntityTypeOutputArgs {
    entityTypeId: pulumi.Input<string>;
    featurestoreId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
