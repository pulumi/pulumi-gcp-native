// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a TargetSite.
 * Auto-naming is currently not supported for this resource.
 */
export class TargetSite extends pulumi.CustomResource {
    /**
     * Get an existing TargetSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TargetSite {
        return new TargetSite(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:discoveryengine/v1alpha:TargetSite';

    /**
     * Returns true if the given object is an instance of TargetSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetSite {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetSite.__pulumiType;
    }

    public readonly collectionId!: pulumi.Output<string>;
    public readonly dataStoreId!: pulumi.Output<string>;
    /**
     * Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
     */
    public readonly exactMatch!: pulumi.Output<boolean>;
    /**
     * Failure reason.
     */
    public /*out*/ readonly failureReason!: pulumi.Output<outputs.discoveryengine.v1alpha.GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonResponse>;
    /**
     * This is system-generated based on the provided_uri_pattern.
     */
    public /*out*/ readonly generatedUriPattern!: pulumi.Output<string>;
    /**
     * Indexing status.
     */
    public /*out*/ readonly indexingStatus!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
     */
    public readonly providedUriPattern!: pulumi.Output<string>;
    /**
     * Site ownership and validity verification status.
     */
    public /*out*/ readonly siteVerificationInfo!: pulumi.Output<outputs.discoveryengine.v1alpha.GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoResponse>;
    /**
     * The type of the target site, e.g., whether the site is to be included or excluded.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The target site's last updated time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a TargetSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetSiteArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.collectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'collectionId'");
            }
            if ((!args || args.dataStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataStoreId'");
            }
            if ((!args || args.providedUriPattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providedUriPattern'");
            }
            resourceInputs["collectionId"] = args ? args.collectionId : undefined;
            resourceInputs["dataStoreId"] = args ? args.dataStoreId : undefined;
            resourceInputs["exactMatch"] = args ? args.exactMatch : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["providedUriPattern"] = args ? args.providedUriPattern : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["generatedUriPattern"] = undefined /*out*/;
            resourceInputs["indexingStatus"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["siteVerificationInfo"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["collectionId"] = undefined /*out*/;
            resourceInputs["dataStoreId"] = undefined /*out*/;
            resourceInputs["exactMatch"] = undefined /*out*/;
            resourceInputs["failureReason"] = undefined /*out*/;
            resourceInputs["generatedUriPattern"] = undefined /*out*/;
            resourceInputs["indexingStatus"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["providedUriPattern"] = undefined /*out*/;
            resourceInputs["siteVerificationInfo"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["collectionId", "dataStoreId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(TargetSite.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TargetSite resource.
 */
export interface TargetSiteArgs {
    collectionId: pulumi.Input<string>;
    dataStoreId: pulumi.Input<string>;
    /**
     * Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
     */
    exactMatch?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
     */
    providedUriPattern: pulumi.Input<string>;
    /**
     * The type of the target site, e.g., whether the site is to be included or excluded.
     */
    type?: pulumi.Input<enums.discoveryengine.v1alpha.TargetSiteType>;
}
