// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a Document.
 */
export class Document extends pulumi.CustomResource {
    /**
     * Get an existing Document resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Document {
        return new Document(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:discoveryengine/v1beta:Document';

    /**
     * Returns true if the given object is an instance of Document.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Document {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Document.__pulumiType;
    }

    public readonly branchId!: pulumi.Output<string>;
    public readonly collectionId!: pulumi.Output<string>;
    /**
     * The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
     */
    public readonly content!: pulumi.Output<outputs.discoveryengine.v1beta.GoogleCloudDiscoveryengineV1betaDocumentContentResponse>;
    public readonly dataStoreId!: pulumi.Output<string>;
    /**
     * This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
     */
    public /*out*/ readonly derivedStructData!: pulumi.Output<{[key: string]: any}>;
    /**
     * Required. The ID to use for the Document, which will become the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
     */
    public readonly documentId!: pulumi.Output<string>;
    /**
     * The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    public readonly jsonData!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    public readonly parentDocumentId!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The identifier of the schema located in the same data store.
     */
    public readonly schemaId!: pulumi.Output<string>;
    /**
     * The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    public readonly structData!: pulumi.Output<{[key: string]: any}>;

    /**
     * Create a Document resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.branchId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'branchId'");
            }
            if ((!args || args.collectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'collectionId'");
            }
            if ((!args || args.dataStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataStoreId'");
            }
            if ((!args || args.documentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'documentId'");
            }
            resourceInputs["branchId"] = args ? args.branchId : undefined;
            resourceInputs["collectionId"] = args ? args.collectionId : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["dataStoreId"] = args ? args.dataStoreId : undefined;
            resourceInputs["documentId"] = args ? args.documentId : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["jsonData"] = args ? args.jsonData : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentDocumentId"] = args ? args.parentDocumentId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["schemaId"] = args ? args.schemaId : undefined;
            resourceInputs["structData"] = args ? args.structData : undefined;
            resourceInputs["derivedStructData"] = undefined /*out*/;
        } else {
            resourceInputs["branchId"] = undefined /*out*/;
            resourceInputs["collectionId"] = undefined /*out*/;
            resourceInputs["content"] = undefined /*out*/;
            resourceInputs["dataStoreId"] = undefined /*out*/;
            resourceInputs["derivedStructData"] = undefined /*out*/;
            resourceInputs["documentId"] = undefined /*out*/;
            resourceInputs["jsonData"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parentDocumentId"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["schemaId"] = undefined /*out*/;
            resourceInputs["structData"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["branchId", "collectionId", "dataStoreId", "documentId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Document.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Document resource.
 */
export interface DocumentArgs {
    branchId: pulumi.Input<string>;
    collectionId: pulumi.Input<string>;
    /**
     * The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
     */
    content?: pulumi.Input<inputs.discoveryengine.v1beta.GoogleCloudDiscoveryengineV1betaDocumentContentArgs>;
    dataStoreId: pulumi.Input<string>;
    /**
     * Required. The ID to use for the Document, which will become the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
     */
    documentId: pulumi.Input<string>;
    /**
     * Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    id?: pulumi.Input<string>;
    /**
     * The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    jsonData?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    parentDocumentId?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The identifier of the schema located in the same data store.
     */
    schemaId?: pulumi.Input<string>;
    /**
     * The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    structData?: pulumi.Input<{[key: string]: any}>;
}
