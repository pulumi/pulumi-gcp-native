// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a DataStore.
 */
export function getDataStore(args: GetDataStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetDataStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:discoveryengine/v1beta:getDataStore", {
        "collectionId": args.collectionId,
        "dataStoreId": args.dataStoreId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetDataStoreArgs {
    collectionId: string;
    dataStoreId: string;
    location: string;
    project?: string;
}

export interface GetDataStoreResult {
    /**
     * Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
     */
    readonly contentConfig: string;
    /**
     * Timestamp the DataStore was created at.
     */
    readonly createTime: string;
    /**
     * The id of the default Schema asscociated to this data store.
     */
    readonly defaultSchemaId: string;
    /**
     * The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    readonly displayName: string;
    /**
     * Configuration for Document understanding and enrichment.
     */
    readonly documentProcessingConfig: outputs.discoveryengine.v1beta.GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigResponse;
    /**
     * Immutable. The industry vertical that the data store registers.
     */
    readonly industryVertical: string;
    /**
     * Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     */
    readonly name: string;
    /**
     * The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled.
     */
    readonly solutionTypes: string[];
    /**
     * The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against certain rules on schema. Learn more from [this doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
     */
    readonly startingSchema: outputs.discoveryengine.v1beta.GoogleCloudDiscoveryengineV1betaSchemaResponse;
}
/**
 * Gets a DataStore.
 */
export function getDataStoreOutput(args: GetDataStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataStoreResult> {
    return pulumi.output(args).apply((a: any) => getDataStore(a, opts))
}

export interface GetDataStoreOutputArgs {
    collectionId: pulumi.Input<string>;
    dataStoreId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
