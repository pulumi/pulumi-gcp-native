// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a Document.
 */
export function getDocument(args: GetDocumentArgs, opts?: pulumi.InvokeOptions): Promise<GetDocumentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:discoveryengine/v1beta:getDocument", {
        "branchId": args.branchId,
        "collectionId": args.collectionId,
        "dataStoreId": args.dataStoreId,
        "documentId": args.documentId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetDocumentArgs {
    branchId: string;
    collectionId: string;
    dataStoreId: string;
    documentId: string;
    location: string;
    project?: string;
}

export interface GetDocumentResult {
    /**
     * The unstructured data linked to this document. Content must be set if this document is under a `CONTENT_REQUIRED` data store.
     */
    readonly content: outputs.discoveryengine.v1beta.GoogleCloudDiscoveryengineV1betaDocumentContentResponse;
    /**
     * This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
     */
    readonly derivedStructData: {[key: string]: any};
    /**
     * The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    readonly jsonData: string;
    /**
     * Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     */
    readonly name: string;
    /**
     * The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    readonly parentDocumentId: string;
    /**
     * The identifier of the schema located in the same data store.
     */
    readonly schemaId: string;
    /**
     * The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
     */
    readonly structData: {[key: string]: any};
}
/**
 * Gets a Document.
 */
export function getDocumentOutput(args: GetDocumentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDocumentResult> {
    return pulumi.output(args).apply((a: any) => getDocument(a, opts))
}

export interface GetDocumentOutputArgs {
    branchId: pulumi.Input<string>;
    collectionId: pulumi.Input<string>;
    dataStoreId: pulumi.Input<string>;
    documentId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
