// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DefaultSupportedIdpConfigArgs } from "./defaultSupportedIdpConfig";
export type DefaultSupportedIdpConfig = import("./defaultSupportedIdpConfig").DefaultSupportedIdpConfig;
export const DefaultSupportedIdpConfig: typeof import("./defaultSupportedIdpConfig").DefaultSupportedIdpConfig = null as any;

export { GetDefaultSupportedIdpConfigArgs, GetDefaultSupportedIdpConfigResult, GetDefaultSupportedIdpConfigOutputArgs } from "./getDefaultSupportedIdpConfig";
export const getDefaultSupportedIdpConfig: typeof import("./getDefaultSupportedIdpConfig").getDefaultSupportedIdpConfig = null as any;
export const getDefaultSupportedIdpConfigOutput: typeof import("./getDefaultSupportedIdpConfig").getDefaultSupportedIdpConfigOutput = null as any;

export { GetInboundSamlConfigArgs, GetInboundSamlConfigResult, GetInboundSamlConfigOutputArgs } from "./getInboundSamlConfig";
export const getInboundSamlConfig: typeof import("./getInboundSamlConfig").getInboundSamlConfig = null as any;
export const getInboundSamlConfigOutput: typeof import("./getInboundSamlConfig").getInboundSamlConfigOutput = null as any;

export { GetOauthIdpConfigArgs, GetOauthIdpConfigResult, GetOauthIdpConfigOutputArgs } from "./getOauthIdpConfig";
export const getOauthIdpConfig: typeof import("./getOauthIdpConfig").getOauthIdpConfig = null as any;
export const getOauthIdpConfigOutput: typeof import("./getOauthIdpConfig").getOauthIdpConfigOutput = null as any;

export { GetTenantArgs, GetTenantResult, GetTenantOutputArgs } from "./getTenant";
export const getTenant: typeof import("./getTenant").getTenant = null as any;
export const getTenantOutput: typeof import("./getTenant").getTenantOutput = null as any;

export { GetTenantIamPolicyArgs, GetTenantIamPolicyResult, GetTenantIamPolicyOutputArgs } from "./getTenantIamPolicy";
export const getTenantIamPolicy: typeof import("./getTenantIamPolicy").getTenantIamPolicy = null as any;
export const getTenantIamPolicyOutput: typeof import("./getTenantIamPolicy").getTenantIamPolicyOutput = null as any;

export { InboundSamlConfigArgs } from "./inboundSamlConfig";
export type InboundSamlConfig = import("./inboundSamlConfig").InboundSamlConfig;
export const InboundSamlConfig: typeof import("./inboundSamlConfig").InboundSamlConfig = null as any;

export { OauthIdpConfigArgs } from "./oauthIdpConfig";
export type OauthIdpConfig = import("./oauthIdpConfig").OauthIdpConfig;
export const OauthIdpConfig: typeof import("./oauthIdpConfig").OauthIdpConfig = null as any;

export { TenantArgs } from "./tenant";
export type Tenant = import("./tenant").Tenant;
export const Tenant: typeof import("./tenant").Tenant = null as any;

export { TenantIamPolicyArgs } from "./tenantIamPolicy";
export type TenantIamPolicy = import("./tenantIamPolicy").TenantIamPolicy;
export const TenantIamPolicy: typeof import("./tenantIamPolicy").TenantIamPolicy = null as any;

utilities.lazyLoad(exports, ["DefaultSupportedIdpConfig"], () => require("./defaultSupportedIdpConfig"));
utilities.lazyLoad(exports, ["getDefaultSupportedIdpConfig","getDefaultSupportedIdpConfigOutput"], () => require("./getDefaultSupportedIdpConfig"));
utilities.lazyLoad(exports, ["getInboundSamlConfig","getInboundSamlConfigOutput"], () => require("./getInboundSamlConfig"));
utilities.lazyLoad(exports, ["getOauthIdpConfig","getOauthIdpConfigOutput"], () => require("./getOauthIdpConfig"));
utilities.lazyLoad(exports, ["getTenant","getTenantOutput"], () => require("./getTenant"));
utilities.lazyLoad(exports, ["getTenantIamPolicy","getTenantIamPolicyOutput"], () => require("./getTenantIamPolicy"));
utilities.lazyLoad(exports, ["InboundSamlConfig"], () => require("./inboundSamlConfig"));
utilities.lazyLoad(exports, ["OauthIdpConfig"], () => require("./oauthIdpConfig"));
utilities.lazyLoad(exports, ["Tenant"], () => require("./tenant"));
utilities.lazyLoad(exports, ["TenantIamPolicy"], () => require("./tenantIamPolicy"));

// Export enums:
export * from "../../types/enums/identitytoolkit/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:identitytoolkit/v2:DefaultSupportedIdpConfig":
                return new DefaultSupportedIdpConfig(name, <any>undefined, { urn })
            case "google-native:identitytoolkit/v2:InboundSamlConfig":
                return new InboundSamlConfig(name, <any>undefined, { urn })
            case "google-native:identitytoolkit/v2:OauthIdpConfig":
                return new OauthIdpConfig(name, <any>undefined, { urn })
            case "google-native:identitytoolkit/v2:Tenant":
                return new Tenant(name, <any>undefined, { urn })
            case "google-native:identitytoolkit/v2:TenantIamPolicy":
                return new TenantIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "identitytoolkit/v2", _module)
