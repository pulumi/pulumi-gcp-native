// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Create a tenant. Requires write permission on the Agent project.
 * Auto-naming is currently not supported for this resource.
 */
export class Tenant extends pulumi.CustomResource {
    /**
     * Get an existing Tenant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Tenant {
        return new Tenant(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:identitytoolkit/v2:Tenant';

    /**
     * Returns true if the given object is an instance of Tenant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tenant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tenant.__pulumiType;
    }

    /**
     * Whether to allow email/password user authentication.
     */
    public readonly allowPasswordSignup!: pulumi.Output<boolean>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days.
     */
    public readonly autodeleteAnonymousUsers!: pulumi.Output<boolean>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    public readonly client!: pulumi.Output<outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigResponse>;
    /**
     * Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
     */
    public readonly disableAuth!: pulumi.Output<boolean>;
    /**
     * Display name of the tenant.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Whether to enable anonymous user authentication.
     */
    public readonly enableAnonymousUser!: pulumi.Output<boolean>;
    /**
     * Whether to enable email link user authentication.
     */
    public readonly enableEmailLinkSignin!: pulumi.Output<boolean>;
    /**
     * Hash config information of a tenant for display on Pantheon. This can only be displayed on Pantheon to avoid the sensitive information to get accidentally leaked. Only returned in GetTenant response to restrict reading of this information. Requires firebaseauth.configs.getHashConfig permission on the agent project for returning this field.
     */
    public /*out*/ readonly hashConfig!: pulumi.Output<outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2HashConfigResponse>;
    /**
     * Specify the settings that the tenant could inherit.
     */
    public readonly inheritance!: pulumi.Output<outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2InheritanceResponse>;
    /**
     * The tenant-level configuration of MFA options.
     */
    public readonly mfaConfig!: pulumi.Output<outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigResponse>;
    /**
     * Configuration related to monitoring project activity.
     */
    public readonly monitoring!: pulumi.Output<outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MonitoringConfigResponse>;
    /**
     * Resource name of a tenant. For example: "projects/{project-id}/tenants/{tenant-id}"
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
     */
    public readonly testPhoneNumbers!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Tenant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TenantArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["allowPasswordSignup"] = args ? args.allowPasswordSignup : undefined;
            resourceInputs["autodeleteAnonymousUsers"] = args ? args.autodeleteAnonymousUsers : undefined;
            resourceInputs["client"] = args ? args.client : undefined;
            resourceInputs["disableAuth"] = args ? args.disableAuth : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableAnonymousUser"] = args ? args.enableAnonymousUser : undefined;
            resourceInputs["enableEmailLinkSignin"] = args ? args.enableEmailLinkSignin : undefined;
            resourceInputs["inheritance"] = args ? args.inheritance : undefined;
            resourceInputs["mfaConfig"] = args ? args.mfaConfig : undefined;
            resourceInputs["monitoring"] = args ? args.monitoring : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["testPhoneNumbers"] = args ? args.testPhoneNumbers : undefined;
            resourceInputs["hashConfig"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["allowPasswordSignup"] = undefined /*out*/;
            resourceInputs["autodeleteAnonymousUsers"] = undefined /*out*/;
            resourceInputs["client"] = undefined /*out*/;
            resourceInputs["disableAuth"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["enableAnonymousUser"] = undefined /*out*/;
            resourceInputs["enableEmailLinkSignin"] = undefined /*out*/;
            resourceInputs["hashConfig"] = undefined /*out*/;
            resourceInputs["inheritance"] = undefined /*out*/;
            resourceInputs["mfaConfig"] = undefined /*out*/;
            resourceInputs["monitoring"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["testPhoneNumbers"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Tenant.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Tenant resource.
 */
export interface TenantArgs {
    /**
     * Whether to allow email/password user authentication.
     */
    allowPasswordSignup?: pulumi.Input<boolean>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days.
     */
    autodeleteAnonymousUsers?: pulumi.Input<boolean>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    client?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2ClientPermissionConfigArgs>;
    /**
     * Whether authentication is disabled for the tenant. If true, the users under the disabled tenant are not allowed to sign-in. Admins of the disabled tenant are not able to manage its users.
     */
    disableAuth?: pulumi.Input<boolean>;
    /**
     * Display name of the tenant.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Whether to enable anonymous user authentication.
     */
    enableAnonymousUser?: pulumi.Input<boolean>;
    /**
     * Whether to enable email link user authentication.
     */
    enableEmailLinkSignin?: pulumi.Input<boolean>;
    /**
     * Specify the settings that the tenant could inherit.
     */
    inheritance?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2InheritanceArgs>;
    /**
     * The tenant-level configuration of MFA options.
     */
    mfaConfig?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigArgs>;
    /**
     * Configuration related to monitoring project activity.
     */
    monitoring?: pulumi.Input<inputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2MonitoringConfigArgs>;
    project?: pulumi.Input<string>;
    /**
     * A map of pairs that can be used for MFA. The phone number should be in E.164 format (https://www.itu.int/rec/T-REC-E.164/) and a maximum of 10 pairs can be added (error will be thrown once exceeded).
     */
    testPhoneNumbers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
