// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Retrieve an inbound SAML configuration for an Identity Toolkit project.
 */
export function getInboundSamlConfig(args: GetInboundSamlConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetInboundSamlConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:identitytoolkit/v2:getInboundSamlConfig", {
        "inboundSamlConfigId": args.inboundSamlConfigId,
        "project": args.project,
        "tenantId": args.tenantId,
    }, opts);
}

export interface GetInboundSamlConfigArgs {
    inboundSamlConfigId: string;
    project?: string;
    tenantId: string;
}

export interface GetInboundSamlConfigResult {
    /**
     * The config's display name set by developers.
     */
    readonly displayName: string;
    /**
     * True if allows the user to sign in with the provider.
     */
    readonly enabled: boolean;
    /**
     * The SAML IdP (Identity Provider) configuration when the project acts as the relying party.
     */
    readonly idpConfig: outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2IdpConfigResponse;
    /**
     * The name of the InboundSamlConfig resource, for example: 'projects/my-awesome-project/inboundSamlConfigs/my-config-id'. Ignored during create requests.
     */
    readonly name: string;
    /**
     * The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
     */
    readonly spConfig: outputs.identitytoolkit.v2.GoogleCloudIdentitytoolkitAdminV2SpConfigResponse;
}

export function getInboundSamlConfigOutput(args: GetInboundSamlConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInboundSamlConfigResult> {
    return pulumi.output(args).apply(a => getInboundSamlConfig(a, opts))
}

export interface GetInboundSamlConfigOutputArgs {
    inboundSamlConfigId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}
