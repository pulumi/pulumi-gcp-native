// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AndroidAppArgs } from "./androidApp";
export type AndroidApp = import("./androidApp").AndroidApp;
export const AndroidApp: typeof import("./androidApp").AndroidApp = null as any;

export { GetAndroidAppArgs, GetAndroidAppResult, GetAndroidAppOutputArgs } from "./getAndroidApp";
export const getAndroidApp: typeof import("./getAndroidApp").getAndroidApp = null as any;
export const getAndroidAppOutput: typeof import("./getAndroidApp").getAndroidAppOutput = null as any;

export { GetIosAppArgs, GetIosAppResult, GetIosAppOutputArgs } from "./getIosApp";
export const getIosApp: typeof import("./getIosApp").getIosApp = null as any;
export const getIosAppOutput: typeof import("./getIosApp").getIosAppOutput = null as any;

export { GetWebAppArgs, GetWebAppResult, GetWebAppOutputArgs } from "./getWebApp";
export const getWebApp: typeof import("./getWebApp").getWebApp = null as any;
export const getWebAppOutput: typeof import("./getWebApp").getWebAppOutput = null as any;

export { IosAppArgs } from "./iosApp";
export type IosApp = import("./iosApp").IosApp;
export const IosApp: typeof import("./iosApp").IosApp = null as any;

export { WebAppArgs } from "./webApp";
export type WebApp = import("./webApp").WebApp;
export const WebApp: typeof import("./webApp").WebApp = null as any;

utilities.lazyLoad(exports, ["AndroidApp"], () => require("./androidApp"));
utilities.lazyLoad(exports, ["getAndroidApp","getAndroidAppOutput"], () => require("./getAndroidApp"));
utilities.lazyLoad(exports, ["getIosApp","getIosAppOutput"], () => require("./getIosApp"));
utilities.lazyLoad(exports, ["getWebApp","getWebAppOutput"], () => require("./getWebApp"));
utilities.lazyLoad(exports, ["IosApp"], () => require("./iosApp"));
utilities.lazyLoad(exports, ["WebApp"], () => require("./webApp"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:firebase/v1beta1:AndroidApp":
                return new AndroidApp(name, <any>undefined, { urn })
            case "google-native:firebase/v1beta1:IosApp":
                return new IosApp(name, <any>undefined, { urn })
            case "google-native:firebase/v1beta1:WebApp":
                return new WebApp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "firebase/v1beta1", _module)
