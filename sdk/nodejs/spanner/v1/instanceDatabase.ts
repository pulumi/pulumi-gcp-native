// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new Cloud Spanner database and starts to prepare it for serving. The returned long-running operation will have a name of the format `/operations/` and can be used to track preparation of the database. The metadata field type is CreateDatabaseMetadata. The response field type is Database, if successful.
 */
export class InstanceDatabase extends pulumi.CustomResource {
    /**
     * Get an existing InstanceDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceDatabase {
        return new InstanceDatabase(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:spanner/v1:InstanceDatabase';

    /**
     * Returns true if the given object is an instance of InstanceDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceDatabase.__pulumiType;
    }


    /**
     * Create a InstanceDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceDatabaseArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.databasesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databasesId'");
            }
            if ((!args || args.instancesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instancesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["createStatement"] = args ? args.createStatement : undefined;
            inputs["databasesId"] = args ? args.databasesId : undefined;
            inputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            inputs["extraStatements"] = args ? args.extraStatements : undefined;
            inputs["instancesId"] = args ? args.instancesId : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceDatabase.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceDatabase resource.
 */
export interface InstanceDatabaseArgs {
    /**
     * Required. A `CREATE DATABASE` statement, which specifies the ID of the new database. The database ID must conform to the regular expression `a-z*[a-z0-9]` and be between 2 and 30 characters in length. If the database ID is a reserved word or if it contains a hyphen, the database ID must be enclosed in backticks (`` ` ``).
     */
    readonly createStatement?: pulumi.Input<string>;
    readonly databasesId: pulumi.Input<string>;
    /**
     * Optional. The encryption configuration for the database. If this field is not specified, Cloud Spanner will encrypt/decrypt all data at rest using Google default encryption.
     */
    readonly encryptionConfig?: pulumi.Input<inputs.spanner.v1.EncryptionConfig>;
    /**
     * Optional. A list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.
     */
    readonly extraStatements?: pulumi.Input<pulumi.Input<string>[]>;
    readonly instancesId: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
}
