// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Starts creating a new Cloud Spanner Backup. The returned backup long-running operation will have a name of the format `projects//instances//backups//operations/` and can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup. There can be only one pending backup creation per database. Backup creation of different databases can run concurrently.
 */
export class InstanceBackup extends pulumi.CustomResource {
    /**
     * Get an existing InstanceBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceBackup {
        return new InstanceBackup(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:spanner/v1:InstanceBackup';

    /**
     * Returns true if the given object is an instance of InstanceBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceBackup.__pulumiType;
    }

    /**
     * The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.
     */
    public readonly database!: pulumi.Output<string>;
    /**
     * The encryption information for the backup.
     */
    public /*out*/ readonly encryptionInfo!: pulumi.Output<outputs.spanner.v1.EncryptionInfoResponse>;
    /**
     * Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.
     */
    public /*out*/ readonly referencingDatabases!: pulumi.Output<string[]>;
    /**
     * Size of the backup in bytes.
     */
    public /*out*/ readonly sizeBytes!: pulumi.Output<string>;
    /**
     * The current state of the backup.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.
     */
    public readonly versionTime!: pulumi.Output<string>;

    /**
     * Create a InstanceBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceBackupArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.backupsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupsId'");
            }
            if ((!args || args.instancesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instancesId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            inputs["backupsId"] = args ? args.backupsId : undefined;
            inputs["database"] = args ? args.database : undefined;
            inputs["expireTime"] = args ? args.expireTime : undefined;
            inputs["instancesId"] = args ? args.instancesId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["versionTime"] = args ? args.versionTime : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["encryptionInfo"] = undefined /*out*/;
            inputs["referencingDatabases"] = undefined /*out*/;
            inputs["sizeBytes"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["database"] = undefined /*out*/;
            inputs["encryptionInfo"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["referencingDatabases"] = undefined /*out*/;
            inputs["sizeBytes"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["versionTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceBackup.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a InstanceBackup resource.
 */
export interface InstanceBackupArgs {
    readonly backupsId: pulumi.Input<string>;
    /**
     * Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.
     */
    readonly database?: pulumi.Input<string>;
    /**
     * Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.
     */
    readonly expireTime?: pulumi.Input<string>;
    readonly instancesId: pulumi.Input<string>;
    /**
     * Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.
     */
    readonly name?: pulumi.Input<string>;
    readonly projectsId: pulumi.Input<string>;
    /**
     * The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.
     */
    readonly versionTime?: pulumi.Input<string>;
}
