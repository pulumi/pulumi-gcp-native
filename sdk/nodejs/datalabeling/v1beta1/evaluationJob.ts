// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an evaluation job.
 */
export class EvaluationJob extends pulumi.CustomResource {
    /**
     * Get an existing EvaluationJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EvaluationJob {
        return new EvaluationJob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:datalabeling/v1beta1:EvaluationJob';

    /**
     * Returns true if the given object is an instance of EvaluationJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EvaluationJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EvaluationJob.__pulumiType;
    }

    /**
     * Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
     */
    public readonly annotationSpecSet!: pulumi.Output<string>;
    /**
     * Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
     */
    public readonly attempts!: pulumi.Output<outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1AttemptResponse[]>;
    /**
     * Timestamp of when this evaluation job was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Required. Description of the job. The description can be up to 25,000 characters long.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Required. Configuration details for the evaluation job.
     */
    public readonly evaluationJobConfig!: pulumi.Output<outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse>;
    /**
     * Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
     */
    public readonly labelMissingGroundTruth!: pulumi.Output<boolean>;
    /**
     * Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
     */
    public readonly modelVersion!: pulumi.Output<string>;
    /**
     * After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * Describes the current state of the job.
     */
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a EvaluationJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvaluationJobArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["annotationSpecSet"] = args ? args.annotationSpecSet : undefined;
            inputs["attempts"] = args ? args.attempts : undefined;
            inputs["createTime"] = args ? args.createTime : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["evaluationJobConfig"] = args ? args.evaluationJobConfig : undefined;
            inputs["labelMissingGroundTruth"] = args ? args.labelMissingGroundTruth : undefined;
            inputs["modelVersion"] = args ? args.modelVersion : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["state"] = args ? args.state : undefined;
        } else {
            inputs["annotationSpecSet"] = undefined /*out*/;
            inputs["attempts"] = undefined /*out*/;
            inputs["createTime"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["evaluationJobConfig"] = undefined /*out*/;
            inputs["labelMissingGroundTruth"] = undefined /*out*/;
            inputs["modelVersion"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["schedule"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(EvaluationJob.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a EvaluationJob resource.
 */
export interface EvaluationJobArgs {
    /**
     * Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
     */
    annotationSpecSet?: pulumi.Input<string>;
    /**
     * Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.
     */
    attempts?: pulumi.Input<pulumi.Input<inputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1AttemptArgs>[]>;
    /**
     * Timestamp of when this evaluation job was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Required. Description of the job. The description can be up to 25,000 characters long.
     */
    description?: pulumi.Input<string>;
    /**
     * Required. Configuration details for the evaluation job.
     */
    evaluationJobConfig?: pulumi.Input<inputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1EvaluationJobConfigArgs>;
    /**
     * Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.
     */
    labelMissingGroundTruth?: pulumi.Input<boolean>;
    /**
     * Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: "projects/{project_id}/models/{model_name}/versions/{version_name}" There can only be one evaluation job per model version.
     */
    modelVersion?: pulumi.Input<string>;
    /**
     * After you create a job, Data Labeling Service assigns a name to the job with the following format: "projects/{project_id}/evaluationJobs/ {evaluation_job_id}"
     */
    name?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    /**
     * Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Describes the current state of the job.
     */
    state?: pulumi.Input<string>;
}
