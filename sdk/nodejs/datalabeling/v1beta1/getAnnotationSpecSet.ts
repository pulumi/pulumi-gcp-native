// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an annotation spec set by resource name.
 */
export function getAnnotationSpecSet(args: GetAnnotationSpecSetArgs, opts?: pulumi.InvokeOptions): Promise<GetAnnotationSpecSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:datalabeling/v1beta1:getAnnotationSpecSet", {
        "annotationSpecSetId": args.annotationSpecSetId,
        "project": args.project,
    }, opts);
}

export interface GetAnnotationSpecSetArgs {
    annotationSpecSetId: string;
    project?: string;
}

export interface GetAnnotationSpecSetResult {
    /**
     * The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task.
     */
    readonly annotationSpecs: outputs.datalabeling.v1beta1.GoogleCloudDatalabelingV1beta1AnnotationSpecResponse[];
    /**
     * The names of any related resources that are blocking changes to the annotation spec set.
     */
    readonly blockingResources: string[];
    /**
     * Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long.
     */
    readonly description: string;
    /**
     * The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.
     */
    readonly displayName: string;
    /**
     * The AnnotationSpecSet resource name in the following format: "projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
     */
    readonly name: string;
}
/**
 * Gets an annotation spec set by resource name.
 */
export function getAnnotationSpecSetOutput(args: GetAnnotationSpecSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnnotationSpecSetResult> {
    return pulumi.output(args).apply((a: any) => getAnnotationSpecSet(a, opts))
}

export interface GetAnnotationSpecSetOutputArgs {
    annotationSpecSetId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
