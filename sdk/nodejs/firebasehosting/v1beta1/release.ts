// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new release, which makes the content of the specified version actively display on the appropriate URL(s).
 * Auto-naming is currently not supported for this resource.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 */
export class Release extends pulumi.CustomResource {
    /**
     * Get an existing Release resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Release {
        return new Release(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:firebasehosting/v1beta1:Release';

    /**
     * Returns true if the given object is an instance of Release.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Release {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Release.__pulumiType;
    }

    public readonly channelId!: pulumi.Output<string>;
    /**
     * The deploy description when the release was created. The value can be up to 512 characters.
     */
    public readonly message!: pulumi.Output<string>;
    /**
     * The unique identifier for the release, in either of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is provided in the response body when you call [`releases.create`](sites.releases/create) or [`channels.releases.create`](sites.channels.releases/create).
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The time at which the version is set to be public.
     */
    public /*out*/ readonly releaseTime!: pulumi.Output<string>;
    /**
     * Identifies the user who created the release.
     */
    public /*out*/ readonly releaseUser!: pulumi.Output<outputs.firebasehosting.v1beta1.ActingUserResponse>;
    public readonly siteId!: pulumi.Output<string>;
    /**
     * Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The configuration and content that was released.
     */
    public /*out*/ readonly version!: pulumi.Output<outputs.firebasehosting.v1beta1.VersionResponse>;
    /**
     *  The unique identifier for a version, in the format: sites/SITE_ID/versions/ VERSION_ID The SITE_ID in this version identifier must match the SITE_ID in the `parent` parameter. This query parameter must be empty if the `type` field in the request body is `SITE_DISABLE`.
     */
    public readonly versionName!: pulumi.Output<string | undefined>;

    /**
     * Create a Release resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReleaseArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.channelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelId'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            resourceInputs["channelId"] = args ? args.channelId : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["versionName"] = args ? args.versionName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["releaseTime"] = undefined /*out*/;
            resourceInputs["releaseUser"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["channelId"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["releaseTime"] = undefined /*out*/;
            resourceInputs["releaseUser"] = undefined /*out*/;
            resourceInputs["siteId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["versionName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["channelId", "project", "siteId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Release.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Release resource.
 */
export interface ReleaseArgs {
    channelId: pulumi.Input<string>;
    /**
     * The deploy description when the release was created. The value can be up to 512 characters.
     */
    message?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    /**
     * Explains the reason for the release. Specify a value for this field only when creating a `SITE_DISABLE` type release.
     */
    type?: pulumi.Input<enums.firebasehosting.v1beta1.ReleaseType>;
    /**
     *  The unique identifier for a version, in the format: sites/SITE_ID/versions/ VERSION_ID The SITE_ID in this version identifier must match the SITE_ID in the `parent` parameter. This query parameter must be empty if the `type` field in the request body is `SITE_DISABLE`.
     */
    versionName?: pulumi.Input<string>;
}
