// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new channel in the specified site.
 */
export class SiteChannel extends pulumi.CustomResource {
    /**
     * Get an existing SiteChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SiteChannel {
        return new SiteChannel(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp-native:firebasehosting/v1beta1:SiteChannel';

    /**
     * Returns true if the given object is an instance of SiteChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SiteChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SiteChannel.__pulumiType;
    }

    /**
     * The time at which the channel was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in the output whether it's set directly or via the `ttl` field.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * Text labels used for extra metadata and/or filtering.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The fully-qualified resource name for the channel, in the format: sites/ SITE_ID/channels/CHANNEL_ID
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The current release for the channel, if any.
     */
    public /*out*/ readonly release!: pulumi.Output<outputs.firebasehosting.v1beta1.ReleaseResponse>;
    /**
     * The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.
     */
    public readonly retainedReleaseCount!: pulumi.Output<number>;
    /**
     * Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.
     */
    public readonly ttl!: pulumi.Output<string>;
    /**
     * The time at which the channel was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The URL at which the content of this channel's current release can be viewed. This URL is a Firebase-provided subdomain of `web.app`. The content of this channel's current release can also be viewed at the Firebase-provided subdomain of `firebaseapp.com`. If this channel is the `live` channel for the Hosting site, then the content of this channel's current release can also be viewed at any connected custom domains.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a SiteChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteChannelArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.channelsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelsId'");
            }
            if ((!args || args.sitesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sitesId'");
            }
            inputs["channelsId"] = args ? args.channelsId : undefined;
            inputs["expireTime"] = args ? args.expireTime : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["retainedReleaseCount"] = args ? args.retainedReleaseCount : undefined;
            inputs["sitesId"] = args ? args.sitesId : undefined;
            inputs["ttl"] = args ? args.ttl : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["release"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        } else {
            inputs["createTime"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["labels"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["release"] = undefined /*out*/;
            inputs["retainedReleaseCount"] = undefined /*out*/;
            inputs["ttl"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
            inputs["url"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SiteChannel.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a SiteChannel resource.
 */
export interface SiteChannelArgs {
    readonly channelsId: pulumi.Input<string>;
    /**
     * The time at which the channel will be automatically deleted. If null, the channel will not be automatically deleted. This field is present in the output whether it's set directly or via the `ttl` field.
     */
    readonly expireTime?: pulumi.Input<string>;
    /**
     * Text labels used for extra metadata and/or filtering.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The fully-qualified resource name for the channel, in the format: sites/ SITE_ID/channels/CHANNEL_ID
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The number of previous releases to retain on the channel for rollback or other purposes. Must be a number between 1-100. Defaults to 10 for new channels.
     */
    readonly retainedReleaseCount?: pulumi.Input<number>;
    readonly sitesId: pulumi.Input<string>;
    /**
     * Input only. A time-to-live for this channel. Sets `expire_time` to the provided duration past the time of the request.
     */
    readonly ttl?: pulumi.Input<string>;
}
