// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an EntryGroup.
 */
export function getEntryGroup(args: GetEntryGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEntryGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:datacatalog/v1beta1:getEntryGroup", {
        "entryGroupId": args.entryGroupId,
        "location": args.location,
        "project": args.project,
        "readMask": args.readMask,
    }, opts);
}

export interface GetEntryGroupArgs {
    entryGroupId: string;
    location: string;
    project?: string;
    readMask?: string;
}

export interface GetEntryGroupResult {
    /**
     * Timestamps about this EntryGroup. Default value is empty timestamps.
     */
    readonly dataCatalogTimestamps: outputs.datacatalog.v1beta1.GoogleCloudDatacatalogV1beta1SystemTimestampsResponse;
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.
     */
    readonly description: string;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
     */
    readonly displayName: string;
    /**
     * The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
     */
    readonly name: string;
}
/**
 * Gets an EntryGroup.
 */
export function getEntryGroupOutput(args: GetEntryGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntryGroupResult> {
    return pulumi.output(args).apply((a: any) => getEntryGroup(a, opts))
}

export interface GetEntryGroupOutputArgs {
    entryGroupId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    readMask?: pulumi.Input<string>;
}
