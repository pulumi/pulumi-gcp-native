// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
 */
export class TagTemplateField extends pulumi.CustomResource {
    /**
     * Get an existing TagTemplateField resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TagTemplateField {
        return new TagTemplateField(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:datacatalog/v1beta1:TagTemplateField';

    /**
     * Returns true if the given object is an instance of TagTemplateField.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TagTemplateField {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TagTemplateField.__pulumiType;
    }


    /**
     * Create a TagTemplateField resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagTemplateFieldArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.fieldsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fieldsId'");
            }
            if ((!args || args.locationsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationsId'");
            }
            if ((!args || args.projectsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectsId'");
            }
            if ((!args || args.tagTemplatesId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagTemplatesId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["fieldsId"] = args ? args.fieldsId : undefined;
            inputs["isRequired"] = args ? args.isRequired : undefined;
            inputs["locationsId"] = args ? args.locationsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["order"] = args ? args.order : undefined;
            inputs["projectsId"] = args ? args.projectsId : undefined;
            inputs["tagTemplatesId"] = args ? args.tagTemplatesId : undefined;
            inputs["type"] = args ? args.type : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TagTemplateField.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a TagTemplateField resource.
 */
export interface TagTemplateFieldArgs {
    /**
     * The description for this field. Defaults to an empty string.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The display name for this field. Defaults to an empty string.
     */
    readonly displayName?: pulumi.Input<string>;
    readonly fieldsId: pulumi.Input<string>;
    /**
     * Whether this is a required field. Defaults to false.
     */
    readonly isRequired?: pulumi.Input<boolean>;
    readonly locationsId: pulumi.Input<string>;
    /**
     * Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
     */
    readonly order?: pulumi.Input<number>;
    readonly projectsId: pulumi.Input<string>;
    readonly tagTemplatesId: pulumi.Input<string>;
    /**
     * Required. The type of value this tag field can contain.
     */
    readonly type?: pulumi.Input<inputs.datacatalog.v1beta1.GoogleCloudDatacatalogV1beta1FieldType>;
}
