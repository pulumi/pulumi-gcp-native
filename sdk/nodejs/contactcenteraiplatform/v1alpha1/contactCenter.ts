// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new ContactCenter in a given project and location.
 */
export class ContactCenter extends pulumi.CustomResource {
    /**
     * Get an existing ContactCenter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContactCenter {
        return new ContactCenter(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:contactcenteraiplatform/v1alpha1:ContactCenter';

    /**
     * Returns true if the given object is an instance of ContactCenter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContactCenter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContactCenter.__pulumiType;
    }

    /**
     * Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
     */
    public readonly ccaipManagedUsers!: pulumi.Output<boolean>;
    /**
     * Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC
     */
    public readonly contactCenterId!: pulumi.Output<string>;
    /**
     * [Output only] Create time stamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
     */
    public readonly customerDomainPrefix!: pulumi.Output<string>;
    /**
     * A user friendly name for the ContactCenter.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The configuration of this instance, it is currently immutable once created.
     */
    public readonly instanceConfig!: pulumi.Output<outputs.contactcenteraiplatform.v1alpha1.InstanceConfigResponse>;
    /**
     * Labels as key value pairs
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * name of resource
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Optional. Params that sets up Google as IdP.
     */
    public readonly samlParams!: pulumi.Output<outputs.contactcenteraiplatform.v1alpha1.SAMLParamsResponse>;
    /**
     * The state of this contact center.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * [Output only] Update time stamp
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * URIs to access the deployed ContactCenters.
     */
    public /*out*/ readonly uris!: pulumi.Output<outputs.contactcenteraiplatform.v1alpha1.URIsResponse>;
    /**
     * Optional. Email address of the first admin users.
     */
    public readonly userEmail!: pulumi.Output<string>;

    /**
     * Create a ContactCenter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactCenterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.contactCenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactCenterId'");
            }
            if ((!args || args.customerDomainPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerDomainPrefix'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["ccaipManagedUsers"] = args ? args.ccaipManagedUsers : undefined;
            resourceInputs["contactCenterId"] = args ? args.contactCenterId : undefined;
            resourceInputs["customerDomainPrefix"] = args ? args.customerDomainPrefix : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["instanceConfig"] = args ? args.instanceConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["samlParams"] = args ? args.samlParams : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["uris"] = undefined /*out*/;
        } else {
            resourceInputs["ccaipManagedUsers"] = undefined /*out*/;
            resourceInputs["contactCenterId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["customerDomainPrefix"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["instanceConfig"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["samlParams"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["uris"] = undefined /*out*/;
            resourceInputs["userEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["contactCenterId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ContactCenter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ContactCenter resource.
 */
export interface ContactCenterArgs {
    /**
     * Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
     */
    ccaipManagedUsers?: pulumi.Input<boolean>;
    /**
     * Required. Id of the requesting object If auto-generating Id server-side, remove this field and contact_center_id from the method_signature of Create RPC
     */
    contactCenterId: pulumi.Input<string>;
    /**
     * Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
     */
    customerDomainPrefix: pulumi.Input<string>;
    /**
     * A user friendly name for the ContactCenter.
     */
    displayName: pulumi.Input<string>;
    /**
     * The configuration of this instance, it is currently immutable once created.
     */
    instanceConfig?: pulumi.Input<inputs.contactcenteraiplatform.v1alpha1.InstanceConfigArgs>;
    /**
     * Labels as key value pairs
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * name of resource
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Optional. Params that sets up Google as IdP.
     */
    samlParams?: pulumi.Input<inputs.contactcenteraiplatform.v1alpha1.SAMLParamsArgs>;
    /**
     * Optional. Email address of the first admin users.
     */
    userEmail?: pulumi.Input<string>;
}
