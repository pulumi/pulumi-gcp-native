// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetHubArgs, GetHubResult, GetHubOutputArgs } from "./getHub";
export const getHub: typeof import("./getHub").getHub = null as any;
export const getHubOutput: typeof import("./getHub").getHubOutput = null as any;
utilities.lazyLoad(exports, ["getHub","getHubOutput"], () => require("./getHub"));

export { GetHubIamPolicyArgs, GetHubIamPolicyResult, GetHubIamPolicyOutputArgs } from "./getHubIamPolicy";
export const getHubIamPolicy: typeof import("./getHubIamPolicy").getHubIamPolicy = null as any;
export const getHubIamPolicyOutput: typeof import("./getHubIamPolicy").getHubIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getHubIamPolicy","getHubIamPolicyOutput"], () => require("./getHubIamPolicy"));

export { GetInternalRangeArgs, GetInternalRangeResult, GetInternalRangeOutputArgs } from "./getInternalRange";
export const getInternalRange: typeof import("./getInternalRange").getInternalRange = null as any;
export const getInternalRangeOutput: typeof import("./getInternalRange").getInternalRangeOutput = null as any;
utilities.lazyLoad(exports, ["getInternalRange","getInternalRangeOutput"], () => require("./getInternalRange"));

export { GetInternalRangeIamPolicyArgs, GetInternalRangeIamPolicyResult, GetInternalRangeIamPolicyOutputArgs } from "./getInternalRangeIamPolicy";
export const getInternalRangeIamPolicy: typeof import("./getInternalRangeIamPolicy").getInternalRangeIamPolicy = null as any;
export const getInternalRangeIamPolicyOutput: typeof import("./getInternalRangeIamPolicy").getInternalRangeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getInternalRangeIamPolicy","getInternalRangeIamPolicyOutput"], () => require("./getInternalRangeIamPolicy"));

export { GetSpokeArgs, GetSpokeResult, GetSpokeOutputArgs } from "./getSpoke";
export const getSpoke: typeof import("./getSpoke").getSpoke = null as any;
export const getSpokeOutput: typeof import("./getSpoke").getSpokeOutput = null as any;
utilities.lazyLoad(exports, ["getSpoke","getSpokeOutput"], () => require("./getSpoke"));

export { GetSpokeIamPolicyArgs, GetSpokeIamPolicyResult, GetSpokeIamPolicyOutputArgs } from "./getSpokeIamPolicy";
export const getSpokeIamPolicy: typeof import("./getSpokeIamPolicy").getSpokeIamPolicy = null as any;
export const getSpokeIamPolicyOutput: typeof import("./getSpokeIamPolicy").getSpokeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getSpokeIamPolicy","getSpokeIamPolicyOutput"], () => require("./getSpokeIamPolicy"));

export { HubArgs } from "./hub";
export type Hub = import("./hub").Hub;
export const Hub: typeof import("./hub").Hub = null as any;
utilities.lazyLoad(exports, ["Hub"], () => require("./hub"));

export { HubIamBindingArgs } from "./hubIamBinding";
export type HubIamBinding = import("./hubIamBinding").HubIamBinding;
export const HubIamBinding: typeof import("./hubIamBinding").HubIamBinding = null as any;
utilities.lazyLoad(exports, ["HubIamBinding"], () => require("./hubIamBinding"));

export { HubIamMemberArgs } from "./hubIamMember";
export type HubIamMember = import("./hubIamMember").HubIamMember;
export const HubIamMember: typeof import("./hubIamMember").HubIamMember = null as any;
utilities.lazyLoad(exports, ["HubIamMember"], () => require("./hubIamMember"));

export { HubIamPolicyArgs } from "./hubIamPolicy";
export type HubIamPolicy = import("./hubIamPolicy").HubIamPolicy;
export const HubIamPolicy: typeof import("./hubIamPolicy").HubIamPolicy = null as any;
utilities.lazyLoad(exports, ["HubIamPolicy"], () => require("./hubIamPolicy"));

export { InternalRangeArgs } from "./internalRange";
export type InternalRange = import("./internalRange").InternalRange;
export const InternalRange: typeof import("./internalRange").InternalRange = null as any;
utilities.lazyLoad(exports, ["InternalRange"], () => require("./internalRange"));

export { InternalRangeIamBindingArgs } from "./internalRangeIamBinding";
export type InternalRangeIamBinding = import("./internalRangeIamBinding").InternalRangeIamBinding;
export const InternalRangeIamBinding: typeof import("./internalRangeIamBinding").InternalRangeIamBinding = null as any;
utilities.lazyLoad(exports, ["InternalRangeIamBinding"], () => require("./internalRangeIamBinding"));

export { InternalRangeIamMemberArgs } from "./internalRangeIamMember";
export type InternalRangeIamMember = import("./internalRangeIamMember").InternalRangeIamMember;
export const InternalRangeIamMember: typeof import("./internalRangeIamMember").InternalRangeIamMember = null as any;
utilities.lazyLoad(exports, ["InternalRangeIamMember"], () => require("./internalRangeIamMember"));

export { InternalRangeIamPolicyArgs } from "./internalRangeIamPolicy";
export type InternalRangeIamPolicy = import("./internalRangeIamPolicy").InternalRangeIamPolicy;
export const InternalRangeIamPolicy: typeof import("./internalRangeIamPolicy").InternalRangeIamPolicy = null as any;
utilities.lazyLoad(exports, ["InternalRangeIamPolicy"], () => require("./internalRangeIamPolicy"));

export { SpokeArgs } from "./spoke";
export type Spoke = import("./spoke").Spoke;
export const Spoke: typeof import("./spoke").Spoke = null as any;
utilities.lazyLoad(exports, ["Spoke"], () => require("./spoke"));

export { SpokeIamBindingArgs } from "./spokeIamBinding";
export type SpokeIamBinding = import("./spokeIamBinding").SpokeIamBinding;
export const SpokeIamBinding: typeof import("./spokeIamBinding").SpokeIamBinding = null as any;
utilities.lazyLoad(exports, ["SpokeIamBinding"], () => require("./spokeIamBinding"));

export { SpokeIamMemberArgs } from "./spokeIamMember";
export type SpokeIamMember = import("./spokeIamMember").SpokeIamMember;
export const SpokeIamMember: typeof import("./spokeIamMember").SpokeIamMember = null as any;
utilities.lazyLoad(exports, ["SpokeIamMember"], () => require("./spokeIamMember"));

export { SpokeIamPolicyArgs } from "./spokeIamPolicy";
export type SpokeIamPolicy = import("./spokeIamPolicy").SpokeIamPolicy;
export const SpokeIamPolicy: typeof import("./spokeIamPolicy").SpokeIamPolicy = null as any;
utilities.lazyLoad(exports, ["SpokeIamPolicy"], () => require("./spokeIamPolicy"));


// Export enums:
export * from "../../types/enums/networkconnectivity/v1alpha1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:networkconnectivity/v1alpha1:Hub":
                return new Hub(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamBinding":
                return new HubIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamMember":
                return new HubIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamPolicy":
                return new HubIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRange":
                return new InternalRange(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamBinding":
                return new InternalRangeIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamMember":
                return new InternalRangeIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamPolicy":
                return new InternalRangeIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:Spoke":
                return new Spoke(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamBinding":
                return new SpokeIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamMember":
                return new SpokeIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamPolicy":
                return new SpokeIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "networkconnectivity/v1alpha1", _module)
