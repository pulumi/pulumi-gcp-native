// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetHubArgs, GetHubResult, GetHubOutputArgs } from "./getHub";
export const getHub: typeof import("./getHub").getHub = null as any;
export const getHubOutput: typeof import("./getHub").getHubOutput = null as any;

export { GetHubIamPolicyArgs, GetHubIamPolicyResult, GetHubIamPolicyOutputArgs } from "./getHubIamPolicy";
export const getHubIamPolicy: typeof import("./getHubIamPolicy").getHubIamPolicy = null as any;
export const getHubIamPolicyOutput: typeof import("./getHubIamPolicy").getHubIamPolicyOutput = null as any;

export { GetInternalRangeIamPolicyArgs, GetInternalRangeIamPolicyResult, GetInternalRangeIamPolicyOutputArgs } from "./getInternalRangeIamPolicy";
export const getInternalRangeIamPolicy: typeof import("./getInternalRangeIamPolicy").getInternalRangeIamPolicy = null as any;
export const getInternalRangeIamPolicyOutput: typeof import("./getInternalRangeIamPolicy").getInternalRangeIamPolicyOutput = null as any;

export { GetServiceClassIamPolicyArgs, GetServiceClassIamPolicyResult, GetServiceClassIamPolicyOutputArgs } from "./getServiceClassIamPolicy";
export const getServiceClassIamPolicy: typeof import("./getServiceClassIamPolicy").getServiceClassIamPolicy = null as any;
export const getServiceClassIamPolicyOutput: typeof import("./getServiceClassIamPolicy").getServiceClassIamPolicyOutput = null as any;

export { GetServiceConnectionMapIamPolicyArgs, GetServiceConnectionMapIamPolicyResult, GetServiceConnectionMapIamPolicyOutputArgs } from "./getServiceConnectionMapIamPolicy";
export const getServiceConnectionMapIamPolicy: typeof import("./getServiceConnectionMapIamPolicy").getServiceConnectionMapIamPolicy = null as any;
export const getServiceConnectionMapIamPolicyOutput: typeof import("./getServiceConnectionMapIamPolicy").getServiceConnectionMapIamPolicyOutput = null as any;

export { GetServiceConnectionPolicyIamPolicyArgs, GetServiceConnectionPolicyIamPolicyResult, GetServiceConnectionPolicyIamPolicyOutputArgs } from "./getServiceConnectionPolicyIamPolicy";
export const getServiceConnectionPolicyIamPolicy: typeof import("./getServiceConnectionPolicyIamPolicy").getServiceConnectionPolicyIamPolicy = null as any;
export const getServiceConnectionPolicyIamPolicyOutput: typeof import("./getServiceConnectionPolicyIamPolicy").getServiceConnectionPolicyIamPolicyOutput = null as any;

export { GetSpokeArgs, GetSpokeResult, GetSpokeOutputArgs } from "./getSpoke";
export const getSpoke: typeof import("./getSpoke").getSpoke = null as any;
export const getSpokeOutput: typeof import("./getSpoke").getSpokeOutput = null as any;

export { GetSpokeIamPolicyArgs, GetSpokeIamPolicyResult, GetSpokeIamPolicyOutputArgs } from "./getSpokeIamPolicy";
export const getSpokeIamPolicy: typeof import("./getSpokeIamPolicy").getSpokeIamPolicy = null as any;
export const getSpokeIamPolicyOutput: typeof import("./getSpokeIamPolicy").getSpokeIamPolicyOutput = null as any;

export { HubArgs } from "./hub";
export type Hub = import("./hub").Hub;
export const Hub: typeof import("./hub").Hub = null as any;

export { HubIamBindingArgs } from "./hubIamBinding";
export type HubIamBinding = import("./hubIamBinding").HubIamBinding;
export const HubIamBinding: typeof import("./hubIamBinding").HubIamBinding = null as any;

export { HubIamMemberArgs } from "./hubIamMember";
export type HubIamMember = import("./hubIamMember").HubIamMember;
export const HubIamMember: typeof import("./hubIamMember").HubIamMember = null as any;

export { HubIamPolicyArgs } from "./hubIamPolicy";
export type HubIamPolicy = import("./hubIamPolicy").HubIamPolicy;
export const HubIamPolicy: typeof import("./hubIamPolicy").HubIamPolicy = null as any;

export { InternalRangeIamBindingArgs } from "./internalRangeIamBinding";
export type InternalRangeIamBinding = import("./internalRangeIamBinding").InternalRangeIamBinding;
export const InternalRangeIamBinding: typeof import("./internalRangeIamBinding").InternalRangeIamBinding = null as any;

export { InternalRangeIamMemberArgs } from "./internalRangeIamMember";
export type InternalRangeIamMember = import("./internalRangeIamMember").InternalRangeIamMember;
export const InternalRangeIamMember: typeof import("./internalRangeIamMember").InternalRangeIamMember = null as any;

export { InternalRangeIamPolicyArgs } from "./internalRangeIamPolicy";
export type InternalRangeIamPolicy = import("./internalRangeIamPolicy").InternalRangeIamPolicy;
export const InternalRangeIamPolicy: typeof import("./internalRangeIamPolicy").InternalRangeIamPolicy = null as any;

export { ServiceClassIamBindingArgs } from "./serviceClassIamBinding";
export type ServiceClassIamBinding = import("./serviceClassIamBinding").ServiceClassIamBinding;
export const ServiceClassIamBinding: typeof import("./serviceClassIamBinding").ServiceClassIamBinding = null as any;

export { ServiceClassIamMemberArgs } from "./serviceClassIamMember";
export type ServiceClassIamMember = import("./serviceClassIamMember").ServiceClassIamMember;
export const ServiceClassIamMember: typeof import("./serviceClassIamMember").ServiceClassIamMember = null as any;

export { ServiceClassIamPolicyArgs } from "./serviceClassIamPolicy";
export type ServiceClassIamPolicy = import("./serviceClassIamPolicy").ServiceClassIamPolicy;
export const ServiceClassIamPolicy: typeof import("./serviceClassIamPolicy").ServiceClassIamPolicy = null as any;

export { ServiceConnectionMapIamBindingArgs } from "./serviceConnectionMapIamBinding";
export type ServiceConnectionMapIamBinding = import("./serviceConnectionMapIamBinding").ServiceConnectionMapIamBinding;
export const ServiceConnectionMapIamBinding: typeof import("./serviceConnectionMapIamBinding").ServiceConnectionMapIamBinding = null as any;

export { ServiceConnectionMapIamMemberArgs } from "./serviceConnectionMapIamMember";
export type ServiceConnectionMapIamMember = import("./serviceConnectionMapIamMember").ServiceConnectionMapIamMember;
export const ServiceConnectionMapIamMember: typeof import("./serviceConnectionMapIamMember").ServiceConnectionMapIamMember = null as any;

export { ServiceConnectionMapIamPolicyArgs } from "./serviceConnectionMapIamPolicy";
export type ServiceConnectionMapIamPolicy = import("./serviceConnectionMapIamPolicy").ServiceConnectionMapIamPolicy;
export const ServiceConnectionMapIamPolicy: typeof import("./serviceConnectionMapIamPolicy").ServiceConnectionMapIamPolicy = null as any;

export { ServiceConnectionPolicyIamBindingArgs } from "./serviceConnectionPolicyIamBinding";
export type ServiceConnectionPolicyIamBinding = import("./serviceConnectionPolicyIamBinding").ServiceConnectionPolicyIamBinding;
export const ServiceConnectionPolicyIamBinding: typeof import("./serviceConnectionPolicyIamBinding").ServiceConnectionPolicyIamBinding = null as any;

export { ServiceConnectionPolicyIamMemberArgs } from "./serviceConnectionPolicyIamMember";
export type ServiceConnectionPolicyIamMember = import("./serviceConnectionPolicyIamMember").ServiceConnectionPolicyIamMember;
export const ServiceConnectionPolicyIamMember: typeof import("./serviceConnectionPolicyIamMember").ServiceConnectionPolicyIamMember = null as any;

export { ServiceConnectionPolicyIamPolicyArgs } from "./serviceConnectionPolicyIamPolicy";
export type ServiceConnectionPolicyIamPolicy = import("./serviceConnectionPolicyIamPolicy").ServiceConnectionPolicyIamPolicy;
export const ServiceConnectionPolicyIamPolicy: typeof import("./serviceConnectionPolicyIamPolicy").ServiceConnectionPolicyIamPolicy = null as any;

export { SpokeArgs } from "./spoke";
export type Spoke = import("./spoke").Spoke;
export const Spoke: typeof import("./spoke").Spoke = null as any;

export { SpokeIamBindingArgs } from "./spokeIamBinding";
export type SpokeIamBinding = import("./spokeIamBinding").SpokeIamBinding;
export const SpokeIamBinding: typeof import("./spokeIamBinding").SpokeIamBinding = null as any;

export { SpokeIamMemberArgs } from "./spokeIamMember";
export type SpokeIamMember = import("./spokeIamMember").SpokeIamMember;
export const SpokeIamMember: typeof import("./spokeIamMember").SpokeIamMember = null as any;

export { SpokeIamPolicyArgs } from "./spokeIamPolicy";
export type SpokeIamPolicy = import("./spokeIamPolicy").SpokeIamPolicy;
export const SpokeIamPolicy: typeof import("./spokeIamPolicy").SpokeIamPolicy = null as any;

utilities.lazyLoad(exports, ["getHub","getHubOutput"], () => require("./getHub"));
utilities.lazyLoad(exports, ["getHubIamPolicy","getHubIamPolicyOutput"], () => require("./getHubIamPolicy"));
utilities.lazyLoad(exports, ["getInternalRangeIamPolicy","getInternalRangeIamPolicyOutput"], () => require("./getInternalRangeIamPolicy"));
utilities.lazyLoad(exports, ["getServiceClassIamPolicy","getServiceClassIamPolicyOutput"], () => require("./getServiceClassIamPolicy"));
utilities.lazyLoad(exports, ["getServiceConnectionMapIamPolicy","getServiceConnectionMapIamPolicyOutput"], () => require("./getServiceConnectionMapIamPolicy"));
utilities.lazyLoad(exports, ["getServiceConnectionPolicyIamPolicy","getServiceConnectionPolicyIamPolicyOutput"], () => require("./getServiceConnectionPolicyIamPolicy"));
utilities.lazyLoad(exports, ["getSpoke","getSpokeOutput"], () => require("./getSpoke"));
utilities.lazyLoad(exports, ["getSpokeIamPolicy","getSpokeIamPolicyOutput"], () => require("./getSpokeIamPolicy"));
utilities.lazyLoad(exports, ["Hub"], () => require("./hub"));
utilities.lazyLoad(exports, ["HubIamBinding"], () => require("./hubIamBinding"));
utilities.lazyLoad(exports, ["HubIamMember"], () => require("./hubIamMember"));
utilities.lazyLoad(exports, ["HubIamPolicy"], () => require("./hubIamPolicy"));
utilities.lazyLoad(exports, ["InternalRangeIamBinding"], () => require("./internalRangeIamBinding"));
utilities.lazyLoad(exports, ["InternalRangeIamMember"], () => require("./internalRangeIamMember"));
utilities.lazyLoad(exports, ["InternalRangeIamPolicy"], () => require("./internalRangeIamPolicy"));
utilities.lazyLoad(exports, ["ServiceClassIamBinding"], () => require("./serviceClassIamBinding"));
utilities.lazyLoad(exports, ["ServiceClassIamMember"], () => require("./serviceClassIamMember"));
utilities.lazyLoad(exports, ["ServiceClassIamPolicy"], () => require("./serviceClassIamPolicy"));
utilities.lazyLoad(exports, ["ServiceConnectionMapIamBinding"], () => require("./serviceConnectionMapIamBinding"));
utilities.lazyLoad(exports, ["ServiceConnectionMapIamMember"], () => require("./serviceConnectionMapIamMember"));
utilities.lazyLoad(exports, ["ServiceConnectionMapIamPolicy"], () => require("./serviceConnectionMapIamPolicy"));
utilities.lazyLoad(exports, ["ServiceConnectionPolicyIamBinding"], () => require("./serviceConnectionPolicyIamBinding"));
utilities.lazyLoad(exports, ["ServiceConnectionPolicyIamMember"], () => require("./serviceConnectionPolicyIamMember"));
utilities.lazyLoad(exports, ["ServiceConnectionPolicyIamPolicy"], () => require("./serviceConnectionPolicyIamPolicy"));
utilities.lazyLoad(exports, ["Spoke"], () => require("./spoke"));
utilities.lazyLoad(exports, ["SpokeIamBinding"], () => require("./spokeIamBinding"));
utilities.lazyLoad(exports, ["SpokeIamMember"], () => require("./spokeIamMember"));
utilities.lazyLoad(exports, ["SpokeIamPolicy"], () => require("./spokeIamPolicy"));

// Export enums:
export * from "../../types/enums/networkconnectivity/v1alpha1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:networkconnectivity/v1alpha1:Hub":
                return new Hub(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamBinding":
                return new HubIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamMember":
                return new HubIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:HubIamPolicy":
                return new HubIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamBinding":
                return new InternalRangeIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamMember":
                return new InternalRangeIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:InternalRangeIamPolicy":
                return new InternalRangeIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceClassIamBinding":
                return new ServiceClassIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceClassIamMember":
                return new ServiceClassIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceClassIamPolicy":
                return new ServiceClassIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionMapIamBinding":
                return new ServiceConnectionMapIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionMapIamMember":
                return new ServiceConnectionMapIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionMapIamPolicy":
                return new ServiceConnectionMapIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionPolicyIamBinding":
                return new ServiceConnectionPolicyIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionPolicyIamMember":
                return new ServiceConnectionPolicyIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:ServiceConnectionPolicyIamPolicy":
                return new ServiceConnectionPolicyIamPolicy(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:Spoke":
                return new Spoke(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamBinding":
                return new SpokeIamBinding(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamMember":
                return new SpokeIamMember(name, <any>undefined, { urn })
            case "google-native:networkconnectivity/v1alpha1:SpokeIamPolicy":
                return new SpokeIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "networkconnectivity/v1alpha1", _module)
