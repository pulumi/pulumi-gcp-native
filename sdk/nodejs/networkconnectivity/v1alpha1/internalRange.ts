// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new InternalRange in a given project and location.
 */
export class InternalRange extends pulumi.CustomResource {
    /**
     * Get an existing InternalRange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InternalRange {
        return new InternalRange(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networkconnectivity/v1alpha1:InternalRange';

    /**
     * Returns true if the given object is an instance of InternalRange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InternalRange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InternalRange.__pulumiType;
    }

    /**
     * Time when the InternalRange was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * A description of this resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
     */
    public readonly internalRangeId!: pulumi.Output<string | undefined>;
    /**
     * IP range that this InternalRange defines.
     */
    public readonly ipCidrRange!: pulumi.Output<string>;
    /**
     * User-defined labels.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * Optional. Types of resources that are allowed to overlap with the current InternalRange.
     */
    public readonly overlaps!: pulumi.Output<string[]>;
    /**
     * The type of peering set for this InternalRange.
     */
    public readonly peering!: pulumi.Output<string>;
    /**
     * An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
     */
    public readonly prefixLength!: pulumi.Output<number>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
     */
    public readonly targetCidrRange!: pulumi.Output<string[]>;
    /**
     * Time when the InternalRange was updated.
     */
    public readonly updateTime!: pulumi.Output<string>;
    /**
     * The type of usage set for this InternalRange.
     */
    public readonly usage!: pulumi.Output<string>;
    /**
     * The list of resources that refer to this internal range. Resources that use the InternalRange for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this InternalRange. Having a user, based on this reference, prevents deletion of the InternalRange referred to. Can be empty.
     */
    public /*out*/ readonly users!: pulumi.Output<string[]>;

    /**
     * Create a InternalRange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InternalRangeArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["internalRangeId"] = args ? args.internalRangeId : undefined;
            resourceInputs["ipCidrRange"] = args ? args.ipCidrRange : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["overlaps"] = args ? args.overlaps : undefined;
            resourceInputs["peering"] = args ? args.peering : undefined;
            resourceInputs["prefixLength"] = args ? args.prefixLength : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["targetCidrRange"] = args ? args.targetCidrRange : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
            resourceInputs["usage"] = args ? args.usage : undefined;
            resourceInputs["users"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["internalRangeId"] = undefined /*out*/;
            resourceInputs["ipCidrRange"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["overlaps"] = undefined /*out*/;
            resourceInputs["peering"] = undefined /*out*/;
            resourceInputs["prefixLength"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["targetCidrRange"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["usage"] = undefined /*out*/;
            resourceInputs["users"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(InternalRange.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a InternalRange resource.
 */
export interface InternalRangeArgs {
    /**
     * Time when the InternalRange was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.
     */
    internalRangeId?: pulumi.Input<string>;
    /**
     * IP range that this InternalRange defines.
     */
    ipCidrRange?: pulumi.Input<string>;
    /**
     * User-defined labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. The name of a InternalRange. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    name?: pulumi.Input<string>;
    /**
     * The URL or resource ID of the network in which to reserve the Internal Range. The network cannot be deleted if there are any reserved Internal Ranges referring to it. Legacy network is not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123
     */
    network?: pulumi.Input<string>;
    /**
     * Optional. Types of resources that are allowed to overlap with the current InternalRange.
     */
    overlaps?: pulumi.Input<pulumi.Input<enums.networkconnectivity.v1alpha1.InternalRangeOverlapsItem>[]>;
    /**
     * The type of peering set for this InternalRange.
     */
    peering?: pulumi.Input<enums.networkconnectivity.v1alpha1.InternalRangePeering>;
    /**
     * An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, it's an error if the range sizes don't match. Can also be used during updates to change the range size.
     */
    prefixLength?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
     */
    targetCidrRange?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Time when the InternalRange was updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * The type of usage set for this InternalRange.
     */
    usage?: pulumi.Input<enums.networkconnectivity.v1alpha1.InternalRangeUsage>;
}
