// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new ServiceConnectionMap in a given project and location.
 */
export class ServiceConnectionMap extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConnectionMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceConnectionMap {
        return new ServiceConnectionMap(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:networkconnectivity/v1:ServiceConnectionMap';

    /**
     * Returns true if the given object is an instance of ServiceConnectionMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceConnectionMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceConnectionMap.__pulumiType;
    }

    /**
     * The PSC configurations on consumer side.
     */
    public readonly consumerPscConfigs!: pulumi.Output<outputs.networkconnectivity.v1.ConsumerPscConfigResponse[]>;
    /**
     * PSC connection details on consumer side.
     */
    public /*out*/ readonly consumerPscConnections!: pulumi.Output<outputs.networkconnectivity.v1.ConsumerPscConnectionResponse[]>;
    /**
     * Time when the ServiceConnectionMap was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A description of this resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * The infrastructure used for connections between consumers/producers.
     */
    public /*out*/ readonly infrastructure!: pulumi.Output<string>;
    /**
     * User-defined labels.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The PSC configurations on producer side.
     */
    public readonly producerPscConfigs!: pulumi.Output<outputs.networkconnectivity.v1.ProducerPscConfigResponse[]>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
     */
    public readonly serviceClass!: pulumi.Output<string>;
    /**
     * The service class uri this ServiceConnectionMap is for.
     */
    public /*out*/ readonly serviceClassUri!: pulumi.Output<string>;
    /**
     * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
     */
    public readonly serviceConnectionMapId!: pulumi.Output<string | undefined>;
    /**
     * The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
     */
    public readonly token!: pulumi.Output<string>;
    /**
     * Time when the ServiceConnectionMap was updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ServiceConnectionMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceConnectionMapArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["consumerPscConfigs"] = args ? args.consumerPscConfigs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["producerPscConfigs"] = args ? args.producerPscConfigs : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["serviceClass"] = args ? args.serviceClass : undefined;
            resourceInputs["serviceConnectionMapId"] = args ? args.serviceConnectionMapId : undefined;
            resourceInputs["token"] = args ? args.token : undefined;
            resourceInputs["consumerPscConnections"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["infrastructure"] = undefined /*out*/;
            resourceInputs["serviceClassUri"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["consumerPscConfigs"] = undefined /*out*/;
            resourceInputs["consumerPscConnections"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["infrastructure"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["producerPscConfigs"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["serviceClass"] = undefined /*out*/;
            resourceInputs["serviceClassUri"] = undefined /*out*/;
            resourceInputs["serviceConnectionMapId"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ServiceConnectionMap.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ServiceConnectionMap resource.
 */
export interface ServiceConnectionMapArgs {
    /**
     * The PSC configurations on consumer side.
     */
    consumerPscConfigs?: pulumi.Input<pulumi.Input<inputs.networkconnectivity.v1.ConsumerPscConfigArgs>[]>;
    /**
     * A description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    etag?: pulumi.Input<string>;
    /**
     * User-defined labels.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    /**
     * Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    name?: pulumi.Input<string>;
    /**
     * The PSC configurations on producer side.
     */
    producerPscConfigs?: pulumi.Input<pulumi.Input<inputs.networkconnectivity.v1.ProducerPscConfigArgs>[]>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.
     */
    serviceClass?: pulumi.Input<string>;
    /**
     * Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.
     */
    serviceConnectionMapId?: pulumi.Input<string>;
    /**
     * The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.
     */
    token?: pulumi.Input<string>;
}
