// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single policy-based route.
 */
export function getPolicyBasedRoute(args: GetPolicyBasedRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyBasedRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:networkconnectivity/v1:getPolicyBasedRoute", {
        "policyBasedRouteId": args.policyBasedRouteId,
        "project": args.project,
    }, opts);
}

export interface GetPolicyBasedRouteArgs {
    policyBasedRouteId: string;
    project?: string;
}

export interface GetPolicyBasedRouteResult {
    /**
     * Time when the policy-based route was created.
     */
    readonly createTime: string;
    /**
     * Optional. An optional description of this resource. Provide this field when you create the resource.
     */
    readonly description: string;
    /**
     * The filter to match L4 traffic.
     */
    readonly filter: outputs.networkconnectivity.v1.FilterResponse;
    /**
     * Optional. The interconnect attachments that this policy-based route applies to.
     */
    readonly interconnectAttachment: outputs.networkconnectivity.v1.InterconnectAttachmentResponse;
    /**
     * Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.
     */
    readonly kind: string;
    /**
     * User-defined labels.
     */
    readonly labels: {[key: string]: string};
    /**
     * Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`
     */
    readonly name: string;
    /**
     * Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
     */
    readonly network: string;
    /**
     * Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.
     */
    readonly nextHopIlbIp: string;
    /**
     * Optional. Other routes that will be referenced to determine the next hop of the packet.
     */
    readonly nextHopOtherRoutes: string;
    /**
     * Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
     */
    readonly priority: number;
    /**
     * Server-defined fully-qualified URL for this resource.
     */
    readonly selfLink: string;
    /**
     * Time when the policy-based route was updated.
     */
    readonly updateTime: string;
    /**
     * Optional. VM instances to which this policy-based route applies to.
     */
    readonly virtualMachine: outputs.networkconnectivity.v1.VirtualMachineResponse;
    /**
     * If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     */
    readonly warnings: outputs.networkconnectivity.v1.WarningsResponse[];
}
/**
 * Gets details of a single policy-based route.
 */
export function getPolicyBasedRouteOutput(args: GetPolicyBasedRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyBasedRouteResult> {
    return pulumi.output(args).apply((a: any) => getPolicyBasedRoute(a, opts))
}

export interface GetPolicyBasedRouteOutputArgs {
    policyBasedRouteId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
