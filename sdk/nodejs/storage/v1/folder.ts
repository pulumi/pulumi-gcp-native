// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new folder. Only applicable to buckets with hierarchical namespace enabled.
 */
export class Folder extends pulumi.CustomResource {
    /**
     * Get an existing Folder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Folder {
        return new Folder(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:storage/v1:Folder';

    /**
     * Returns true if the given object is an instance of Folder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Folder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Folder.__pulumiType;
    }

    public readonly bucket!: pulumi.Output<string>;
    /**
     * The creation time of the folder in RFC 3339 format.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The kind of item this is. For folders, this is always storage#folder.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.
     */
    public readonly metageneration!: pulumi.Output<string>;
    /**
     * The name of the folder. Required if not specified by URL parameter.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Only present if the folder is part of an ongoing rename folder operation. Contains information which can be used to query the operation status.
     */
    public readonly pendingRenameInfo!: pulumi.Output<outputs.storage.v1.FolderPendingRenameInfoResponse>;
    /**
     * If true, any parent folder which doesn’t exist will be created automatically.
     */
    public readonly recursive!: pulumi.Output<boolean | undefined>;
    /**
     * The link to this folder.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * The modification time of the folder metadata in RFC 3339 format.
     */
    public readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Folder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FolderArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["metageneration"] = args ? args.metageneration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pendingRenameInfo"] = args ? args.pendingRenameInfo : undefined;
            resourceInputs["recursive"] = args ? args.recursive : undefined;
            resourceInputs["selfLink"] = args ? args.selfLink : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
        } else {
            resourceInputs["bucket"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["metageneration"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pendingRenameInfo"] = undefined /*out*/;
            resourceInputs["recursive"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["bucket"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Folder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Folder resource.
 */
export interface FolderArgs {
    /**
     * The name of the bucket containing this folder.
     */
    bucket: pulumi.Input<string>;
    /**
     * The creation time of the folder in RFC 3339 format.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ID of the folder, including the bucket name, folder name.
     */
    id?: pulumi.Input<string>;
    /**
     * The kind of item this is. For folders, this is always storage#folder.
     */
    kind?: pulumi.Input<string>;
    /**
     * The version of the metadata for this folder. Used for preconditions and for detecting changes in metadata.
     */
    metageneration?: pulumi.Input<string>;
    /**
     * The name of the folder. Required if not specified by URL parameter.
     */
    name?: pulumi.Input<string>;
    /**
     * Only present if the folder is part of an ongoing rename folder operation. Contains information which can be used to query the operation status.
     */
    pendingRenameInfo?: pulumi.Input<inputs.storage.v1.FolderPendingRenameInfoArgs>;
    /**
     * If true, any parent folder which doesn’t exist will be created automatically.
     */
    recursive?: pulumi.Input<boolean>;
    /**
     * The link to this folder.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The modification time of the folder metadata in RFC 3339 format.
     */
    updateTime?: pulumi.Input<string>;
}
