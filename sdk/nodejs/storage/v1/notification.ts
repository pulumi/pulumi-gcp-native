// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Creates a notification subscription for a given bucket.
 */
export class Notification extends pulumi.CustomResource {
    /**
     * Get an existing Notification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Notification {
        return new Notification(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:storage/v1:Notification';

    /**
     * Returns true if the given object is an instance of Notification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Notification {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Notification.__pulumiType;
    }

    /**
     * An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
     */
    public readonly custom_attributes!: pulumi.Output<{[key: string]: string}>;
    /**
     * HTTP 1.1 Entity tag for this subscription notification.
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * If present, only send notifications about listed event types. If empty, sent notifications for all event types.
     */
    public readonly event_types!: pulumi.Output<string[]>;
    /**
     * The kind of item this is. For notifications, this is always storage#notification.
     */
    public readonly kind!: pulumi.Output<string>;
    /**
     * If present, only apply this notification configuration to object names that begin with this prefix.
     */
    public readonly object_name_prefix!: pulumi.Output<string>;
    /**
     * The desired content of the Payload.
     */
    public readonly payload_format!: pulumi.Output<string>;
    /**
     * The canonical URL of this notification.
     */
    public readonly selfLink!: pulumi.Output<string>;
    /**
     * The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
     */
    public readonly topic!: pulumi.Output<string>;

    /**
     * Create a Notification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            inputs["bucket"] = args ? args.bucket : undefined;
            inputs["custom_attributes"] = args ? args.custom_attributes : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["event_types"] = args ? args.event_types : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["object_name_prefix"] = args ? args.object_name_prefix : undefined;
            inputs["payload_format"] = args ? args.payload_format : undefined;
            inputs["provisionalUserProject"] = args ? args.provisionalUserProject : undefined;
            inputs["selfLink"] = args ? args.selfLink : undefined;
            inputs["topic"] = args ? args.topic : undefined;
            inputs["userProject"] = args ? args.userProject : undefined;
        } else {
            inputs["custom_attributes"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["event_types"] = undefined /*out*/;
            inputs["kind"] = undefined /*out*/;
            inputs["object_name_prefix"] = undefined /*out*/;
            inputs["payload_format"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["topic"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Notification.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Notification resource.
 */
export interface NotificationArgs {
    readonly bucket: pulumi.Input<string>;
    /**
     * An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
     */
    readonly custom_attributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * HTTP 1.1 Entity tag for this subscription notification.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * If present, only send notifications about listed event types. If empty, sent notifications for all event types.
     */
    readonly event_types?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the notification.
     */
    readonly id?: pulumi.Input<string>;
    /**
     * The kind of item this is. For notifications, this is always storage#notification.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * If present, only apply this notification configuration to object names that begin with this prefix.
     */
    readonly object_name_prefix?: pulumi.Input<string>;
    /**
     * The desired content of the Payload.
     */
    readonly payload_format?: pulumi.Input<string>;
    readonly provisionalUserProject?: pulumi.Input<string>;
    /**
     * The canonical URL of this notification.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
     */
    readonly topic?: pulumi.Input<string>;
    readonly userProject?: pulumi.Input<string>;
}
