// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetReleaseArgs, GetReleaseResult, GetReleaseOutputArgs } from "./getRelease";
export const getRelease: typeof import("./getRelease").getRelease = null as any;
export const getReleaseOutput: typeof import("./getRelease").getReleaseOutput = null as any;
utilities.lazyLoad(exports, ["getRelease","getReleaseOutput"], () => require("./getRelease"));

export { GetRulesetArgs, GetRulesetResult, GetRulesetOutputArgs } from "./getRuleset";
export const getRuleset: typeof import("./getRuleset").getRuleset = null as any;
export const getRulesetOutput: typeof import("./getRuleset").getRulesetOutput = null as any;
utilities.lazyLoad(exports, ["getRuleset","getRulesetOutput"], () => require("./getRuleset"));

export { ReleaseArgs } from "./release";
export type Release = import("./release").Release;
export const Release: typeof import("./release").Release = null as any;
utilities.lazyLoad(exports, ["Release"], () => require("./release"));

export { RulesetArgs } from "./ruleset";
export type Ruleset = import("./ruleset").Ruleset;
export const Ruleset: typeof import("./ruleset").Ruleset = null as any;
utilities.lazyLoad(exports, ["Ruleset"], () => require("./ruleset"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:firebaserules/v1:Release":
                return new Release(name, <any>undefined, { urn })
            case "google-native:firebaserules/v1:Ruleset":
                return new Ruleset(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "firebaserules/v1", _module)
