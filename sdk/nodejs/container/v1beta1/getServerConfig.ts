// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns configuration info about the Google Kubernetes Engine service.
 */
export function getServerConfig(args: GetServerConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetServerConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:container/v1beta1:getServerConfig", {
        "location": args.location,
        "project": args.project,
        "projectId": args.projectId,
        "zone": args.zone,
    }, opts);
}

export interface GetServerConfigArgs {
    location: string;
    project?: string;
    projectId: string;
    zone: string;
}

export interface GetServerConfigResult {
    /**
     * List of release channel configurations.
     */
    readonly channels: outputs.container.v1beta1.ReleaseChannelConfigResponse[];
    /**
     * Version of Kubernetes the service deploys by default.
     */
    readonly defaultClusterVersion: string;
    /**
     * Default image type.
     */
    readonly defaultImageType: string;
    /**
     * List of valid image types.
     */
    readonly validImageTypes: string[];
    /**
     * List of valid master versions, in descending order.
     */
    readonly validMasterVersions: string[];
    /**
     * List of valid node upgrade target versions, in descending order.
     */
    readonly validNodeVersions: string[];
    /**
     * Maps of Kubernetes version and supported Windows server versions.
     */
    readonly windowsVersionMaps: outputs.container.v1beta1.WindowsVersionsResponse;
}
/**
 * Returns configuration info about the Google Kubernetes Engine service.
 */
export function getServerConfigOutput(args: GetServerConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerConfigResult> {
    return pulumi.output(args).apply((a: any) => getServerConfig(a, opts))
}

export interface GetServerConfigOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
