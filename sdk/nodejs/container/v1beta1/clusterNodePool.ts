// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a node pool for a cluster.
 */
export class ClusterNodePool extends pulumi.CustomResource {
    /**
     * Get an existing ClusterNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterNodePool {
        return new ClusterNodePool(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:container/v1beta1:ClusterNodePool';

    /**
     * Returns true if the given object is an instance of ClusterNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterNodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterNodePool.__pulumiType;
    }

    /**
     * Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.
     */
    public /*out*/ readonly autoscaling!: pulumi.Output<outputs.container.v1beta1.NodePoolAutoscalingResponse>;
    /**
     * Which conditions caused the current node pool state.
     */
    public /*out*/ readonly conditions!: pulumi.Output<outputs.container.v1beta1.StatusConditionResponse[]>;
    /**
     * The node configuration of the pool.
     */
    public /*out*/ readonly config!: pulumi.Output<outputs.container.v1beta1.NodeConfigResponse>;
    /**
     * The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.
     */
    public /*out*/ readonly initialNodeCount!: pulumi.Output<number>;
    /**
     * [Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool.
     */
    public /*out*/ readonly instanceGroupUrls!: pulumi.Output<string[]>;
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.
     */
    public /*out*/ readonly locations!: pulumi.Output<string[]>;
    /**
     * NodeManagement configuration for this NodePool.
     */
    public /*out*/ readonly management!: pulumi.Output<outputs.container.v1beta1.NodeManagementResponse>;
    /**
     * The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
     */
    public /*out*/ readonly maxPodsConstraint!: pulumi.Output<outputs.container.v1beta1.MaxPodsConstraintResponse>;
    /**
     * The name of the node pool.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.
     */
    public /*out*/ readonly networkConfig!: pulumi.Output<outputs.container.v1beta1.NodeNetworkConfigResponse>;
    /**
     * [Output only] The pod CIDR block size per node in this node pool.
     */
    public /*out*/ readonly podIpv4CidrSize!: pulumi.Output<number>;
    /**
     * [Output only] Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * [Output only] The status of the nodes in this pool instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    /**
     * Upgrade settings control disruption and speed of the upgrade.
     */
    public /*out*/ readonly upgradeSettings!: pulumi.Output<outputs.container.v1beta1.UpgradeSettingsResponse>;
    /**
     * The version of the Kubernetes of this node.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a ClusterNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterNodePoolArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.nodePoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodePoolId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            inputs["clusterId"] = args ? args.clusterId : undefined;
            inputs["nodePool"] = args ? args.nodePool : undefined;
            inputs["nodePoolId"] = args ? args.nodePoolId : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["projectId"] = args ? args.projectId : undefined;
            inputs["zone"] = args ? args.zone : undefined;
            inputs["autoscaling"] = undefined /*out*/;
            inputs["conditions"] = undefined /*out*/;
            inputs["config"] = undefined /*out*/;
            inputs["initialNodeCount"] = undefined /*out*/;
            inputs["instanceGroupUrls"] = undefined /*out*/;
            inputs["locations"] = undefined /*out*/;
            inputs["management"] = undefined /*out*/;
            inputs["maxPodsConstraint"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkConfig"] = undefined /*out*/;
            inputs["podIpv4CidrSize"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["statusMessage"] = undefined /*out*/;
            inputs["upgradeSettings"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        } else {
            inputs["autoscaling"] = undefined /*out*/;
            inputs["conditions"] = undefined /*out*/;
            inputs["config"] = undefined /*out*/;
            inputs["initialNodeCount"] = undefined /*out*/;
            inputs["instanceGroupUrls"] = undefined /*out*/;
            inputs["locations"] = undefined /*out*/;
            inputs["management"] = undefined /*out*/;
            inputs["maxPodsConstraint"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["networkConfig"] = undefined /*out*/;
            inputs["podIpv4CidrSize"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
            inputs["statusMessage"] = undefined /*out*/;
            inputs["upgradeSettings"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ClusterNodePool.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a ClusterNodePool resource.
 */
export interface ClusterNodePoolArgs {
    /**
     * Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.
     */
    readonly clusterId: pulumi.Input<string>;
    /**
     * Required. The node pool to create.
     */
    readonly nodePool?: pulumi.Input<inputs.container.v1beta1.NodePool>;
    readonly nodePoolId: pulumi.Input<string>;
    /**
     * The parent (project, location, cluster id) where the node pool will be created. Specified in the format `projects/*&#47;locations/*&#47;clusters/*`.
     */
    readonly parent?: pulumi.Input<string>;
    /**
     * Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the parent field.
     */
    readonly projectId: pulumi.Input<string>;
    /**
     * Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.
     */
    readonly zone: pulumi.Input<string>;
}
