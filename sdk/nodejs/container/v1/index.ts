// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./cluster";
import { Cluster } from "./cluster";

export { GetClusterArgs, GetClusterResult, GetClusterOutputArgs } from "./getCluster";
export const getCluster: typeof import("./getCluster").getCluster = null as any;
export const getClusterOutput: typeof import("./getCluster").getClusterOutput = null as any;

export { GetNodePoolArgs, GetNodePoolResult, GetNodePoolOutputArgs } from "./getNodePool";
export const getNodePool: typeof import("./getNodePool").getNodePool = null as any;
export const getNodePoolOutput: typeof import("./getNodePool").getNodePoolOutput = null as any;

export { GetServerConfigArgs, GetServerConfigResult, GetServerConfigOutputArgs } from "./getServerConfig";
export const getServerConfig: typeof import("./getServerConfig").getServerConfig = null as any;
export const getServerConfigOutput: typeof import("./getServerConfig").getServerConfigOutput = null as any;

export { NodePoolArgs } from "./nodePool";
export type NodePool = import("./nodePool").NodePool;
export const NodePool: typeof import("./nodePool").NodePool = null as any;

utilities.lazyLoad(exports, ["getCluster","getClusterOutput"], () => require("./getCluster"));
utilities.lazyLoad(exports, ["getNodePool","getNodePoolOutput"], () => require("./getNodePool"));
utilities.lazyLoad(exports, ["getServerConfig","getServerConfigOutput"], () => require("./getServerConfig"));
utilities.lazyLoad(exports, ["NodePool"], () => require("./nodePool"));

// Export enums:
export * from "../../types/enums/container/v1";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "google-native:container/v1:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "google-native:container/v1:NodePool":
                return new NodePool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("google-native", "container/v1", _module)
