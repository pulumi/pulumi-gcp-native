// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets details of a single workflow.
 */
export function getWorkflow(args: GetWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:workflows/v1:getWorkflow", {
        "location": args.location,
        "project": args.project,
        "revisionId": args.revisionId,
        "workflowId": args.workflowId,
    }, opts);
}

export interface GetWorkflowArgs {
    location: string;
    project?: string;
    revisionId?: string;
    workflowId: string;
}

export interface GetWorkflowResult {
    /**
     * Optional. Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both the workflow and the execution specify a logging level, the execution level takes precedence.
     */
    readonly callLogLevel: string;
    /**
     * The timestamp for when the workflow was created. This is a workflow-wide field and is not tied to a specific revision.
     */
    readonly createTime: string;
    /**
     * Optional. The resource name of a KMS crypto key used to encrypt or decrypt the data associated with the workflow. Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. If not provided, data associated with the workflow will not be CMEK-encrypted.
     */
    readonly cryptoKeyName: string;
    /**
     * Description of the workflow provided by the user. Must be at most 1000 Unicode characters long. This is a workflow-wide field and is not tied to a specific revision.
     */
    readonly description: string;
    /**
     * Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed. This is a workflow-wide field and is not tied to a specific revision.
     */
    readonly labels: {[key: string]: string};
    /**
     * The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}. This is a workflow-wide field and is not tied to a specific revision.
     */
    readonly name: string;
    /**
     * The timestamp for the latest revision of the workflow's creation.
     */
    readonly revisionCreateTime: string;
    /**
     * The revision of the workflow. A new revision of a workflow is created as a result of updating the following properties of a workflow: - Service account - Workflow code to be executed The format is "000001-a4d", where the first six characters define the zero-padded revision ordinal number. They are followed by a hyphen and three hexadecimal random characters.
     */
    readonly revisionId: string;
    /**
     * The service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or {account} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
     */
    readonly serviceAccount: string;
    /**
     * Workflow code to be executed. The size limit is 128KB.
     */
    readonly sourceContents: string;
    /**
     * State of the workflow deployment.
     */
    readonly state: string;
    /**
     * Error regarding the state of the workflow. For example, this field will have error details if the execution data is unavailable due to revoked KMS key permissions.
     */
    readonly stateError: outputs.workflows.v1.StateErrorResponse;
    /**
     * The timestamp for when the workflow was last updated. This is a workflow-wide field and is not tied to a specific revision.
     */
    readonly updateTime: string;
    /**
     * Optional. User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 40KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
     */
    readonly userEnvVars: {[key: string]: string};
}
/**
 * Gets details of a single workflow.
 */
export function getWorkflowOutput(args: GetWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getWorkflow(a, opts))
}

export interface GetWorkflowOutputArgs {
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    revisionId?: pulumi.Input<string>;
    workflowId: pulumi.Input<string>;
}
