// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets a Service in an Application.
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apphub/v1alpha:getService", {
        "applicationId": args.applicationId,
        "location": args.location,
        "project": args.project,
        "serviceId": args.serviceId,
    }, opts);
}

export interface GetServiceArgs {
    applicationId: string;
    location: string;
    project?: string;
    serviceId: string;
}

export interface GetServiceResult {
    /**
     * Optional. Consumer provided attributes.
     */
    readonly attributes: outputs.apphub.v1alpha.AttributesResponse;
    /**
     * Create time.
     */
    readonly createTime: string;
    /**
     * Optional. User-defined description of a Service. Can have a maximum length of 2048 characters.
     */
    readonly description: string;
    /**
     * Immutable. The resource name of the original discovered service.
     */
    readonly discoveredService: string;
    /**
     * Optional. User-defined name for the Service. Can have a maximum length of 63 characters.
     */
    readonly displayName: string;
    /**
     * Identifier. The resource name of a Service. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
     */
    readonly name: string;
    /**
     * Properties of an underlying compute resource that can comprise a Service. These are immutable.
     */
    readonly serviceProperties: outputs.apphub.v1alpha.ServicePropertiesResponse;
    /**
     * Reference to an underlying networking resource that can comprise a Service. These are immutable.
     */
    readonly serviceReference: outputs.apphub.v1alpha.ServiceReferenceResponse;
    /**
     * Service state.
     */
    readonly state: string;
    /**
     * A universally unique identifier (UUID) for the `Service` in the UUID4 format.
     */
    readonly uid: string;
    /**
     * Update time.
     */
    readonly updateTime: string;
}
/**
 * Gets a Service in an Application.
 */
export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply((a: any) => getService(a, opts))
}

export interface GetServiceOutputArgs {
    applicationId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
}
