// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets an Application in a host project and location.
 */
export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-native:apphub/v1:getApplication", {
        "applicationId": args.applicationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

export interface GetApplicationArgs {
    applicationId: string;
    location: string;
    project?: string;
}

export interface GetApplicationResult {
    /**
     * Optional. Consumer provided attributes.
     */
    readonly attributes: outputs.apphub.v1.AttributesResponse;
    /**
     * Create time.
     */
    readonly createTime: string;
    /**
     * Optional. User-defined description of an Application. Can have a maximum length of 2048 characters.
     */
    readonly description: string;
    /**
     * Optional. User-defined name for the Application. Can have a maximum length of 63 characters.
     */
    readonly displayName: string;
    /**
     * Identifier. The resource name of an Application. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}"
     */
    readonly name: string;
    /**
     * Immutable. Defines what data can be included into this Application. Limits which Services and Workloads can be registered.
     */
    readonly scope: outputs.apphub.v1.ScopeResponse;
    /**
     * Application state.
     */
    readonly state: string;
    /**
     * A universally unique identifier (in UUID4 format) for the `Application`.
     */
    readonly uid: string;
    /**
     * Update time.
     */
    readonly updateTime: string;
}
/**
 * Gets an Application in a host project and location.
 */
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply((a: any) => getApplication(a, opts))
}

export interface GetApplicationOutputArgs {
    applicationId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
