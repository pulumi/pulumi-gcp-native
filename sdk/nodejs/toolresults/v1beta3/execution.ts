// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist
 * Auto-naming is currently not supported for this resource.
 */
export class Execution extends pulumi.CustomResource {
    /**
     * Get an existing Execution resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Execution {
        return new Execution(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:toolresults/v1beta3:Execution';

    /**
     * Returns true if the given object is an instance of Execution.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Execution {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Execution.__pulumiType;
    }

    /**
     * The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set
     */
    public readonly completionTime!: pulumi.Output<outputs.toolresults.v1beta3.TimestampResponse>;
    /**
     * The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set
     */
    public readonly creationTime!: pulumi.Output<outputs.toolresults.v1beta3.TimestampResponse>;
    /**
     * The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set
     */
    public readonly dimensionDefinitions!: pulumi.Output<outputs.toolresults.v1beta3.MatrixDimensionDefinitionResponse[]>;
    /**
     * A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set
     */
    public readonly executionId!: pulumi.Output<string>;
    /**
     * Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional
     */
    public readonly outcome!: pulumi.Output<outputs.toolresults.v1beta3.OutcomeResponse>;
    /**
     * Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional
     */
    public readonly specification!: pulumi.Output<outputs.toolresults.v1beta3.SpecificationResponse>;
    /**
     * The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set
     */
    public readonly testExecutionMatrixId!: pulumi.Output<string>;

    /**
     * Create a Execution resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExecutionArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.historyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'historyId'");
            }
            inputs["completionTime"] = args ? args.completionTime : undefined;
            inputs["creationTime"] = args ? args.creationTime : undefined;
            inputs["dimensionDefinitions"] = args ? args.dimensionDefinitions : undefined;
            inputs["executionId"] = args ? args.executionId : undefined;
            inputs["historyId"] = args ? args.historyId : undefined;
            inputs["outcome"] = args ? args.outcome : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["requestId"] = args ? args.requestId : undefined;
            inputs["specification"] = args ? args.specification : undefined;
            inputs["state"] = args ? args.state : undefined;
            inputs["testExecutionMatrixId"] = args ? args.testExecutionMatrixId : undefined;
        } else {
            inputs["completionTime"] = undefined /*out*/;
            inputs["creationTime"] = undefined /*out*/;
            inputs["dimensionDefinitions"] = undefined /*out*/;
            inputs["executionId"] = undefined /*out*/;
            inputs["outcome"] = undefined /*out*/;
            inputs["specification"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["testExecutionMatrixId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Execution.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Execution resource.
 */
export interface ExecutionArgs {
    /**
     * The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set
     */
    completionTime?: pulumi.Input<inputs.toolresults.v1beta3.TimestampArgs>;
    /**
     * The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set
     */
    creationTime?: pulumi.Input<inputs.toolresults.v1beta3.TimestampArgs>;
    /**
     * The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set
     */
    dimensionDefinitions?: pulumi.Input<pulumi.Input<inputs.toolresults.v1beta3.MatrixDimensionDefinitionArgs>[]>;
    /**
     * A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set
     */
    executionId?: pulumi.Input<string>;
    historyId: pulumi.Input<string>;
    /**
     * Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional
     */
    outcome?: pulumi.Input<inputs.toolresults.v1beta3.OutcomeArgs>;
    project?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    /**
     * Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional
     */
    specification?: pulumi.Input<inputs.toolresults.v1beta3.SpecificationArgs>;
    /**
     * The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional
     */
    state?: pulumi.Input<enums.toolresults.v1beta3.ExecutionState>;
    /**
     * TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set
     */
    testExecutionMatrixId?: pulumi.Input<string>;
}
