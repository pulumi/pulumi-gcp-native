// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does not exist
 */
export class PerfSampleSeries extends pulumi.CustomResource {
    /**
     * Get an existing PerfSampleSeries resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PerfSampleSeries {
        return new PerfSampleSeries(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:toolresults/v1beta3:PerfSampleSeries';

    /**
     * Returns true if the given object is an instance of PerfSampleSeries.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PerfSampleSeries {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PerfSampleSeries.__pulumiType;
    }

    /**
     * Basic series represented by a line chart
     */
    public readonly basicPerfSampleSeries!: pulumi.Output<outputs.toolresults.v1beta3.BasicPerfSampleSeriesResponse>;
    /**
     * A tool results execution ID. @OutputOnly
     */
    public readonly executionId!: pulumi.Output<string>;
    /**
     * A tool results history ID. @OutputOnly
     */
    public readonly historyId!: pulumi.Output<string>;
    /**
     * The cloud project @OutputOnly
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * A sample series id @OutputOnly
     */
    public readonly sampleSeriesId!: pulumi.Output<string>;
    /**
     * A tool results step ID. @OutputOnly
     */
    public readonly stepId!: pulumi.Output<string>;

    /**
     * Create a PerfSampleSeries resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PerfSampleSeriesArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.executionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionId'");
            }
            if ((!args || args.historyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'historyId'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.stepId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stepId'");
            }
            inputs["basicPerfSampleSeries"] = args ? args.basicPerfSampleSeries : undefined;
            inputs["executionId"] = args ? args.executionId : undefined;
            inputs["historyId"] = args ? args.historyId : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["sampleSeriesId"] = args ? args.sampleSeriesId : undefined;
            inputs["stepId"] = args ? args.stepId : undefined;
        } else {
            inputs["basicPerfSampleSeries"] = undefined /*out*/;
            inputs["executionId"] = undefined /*out*/;
            inputs["historyId"] = undefined /*out*/;
            inputs["project"] = undefined /*out*/;
            inputs["sampleSeriesId"] = undefined /*out*/;
            inputs["stepId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(PerfSampleSeries.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a PerfSampleSeries resource.
 */
export interface PerfSampleSeriesArgs {
    /**
     * Basic series represented by a line chart
     */
    readonly basicPerfSampleSeries?: pulumi.Input<inputs.toolresults.v1beta3.BasicPerfSampleSeriesArgs>;
    /**
     * A tool results execution ID. @OutputOnly
     */
    readonly executionId: pulumi.Input<string>;
    /**
     * A tool results history ID. @OutputOnly
     */
    readonly historyId: pulumi.Input<string>;
    /**
     * The cloud project @OutputOnly
     */
    readonly project: pulumi.Input<string>;
    /**
     * A sample series id @OutputOnly
     */
    readonly sampleSeriesId?: pulumi.Input<string>;
    /**
     * A tool results step ID. @OutputOnly
     */
    readonly stepId: pulumi.Input<string>;
}
