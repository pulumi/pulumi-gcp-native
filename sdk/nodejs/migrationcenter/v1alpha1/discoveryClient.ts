// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new discovery client.
 * Auto-naming is currently not supported for this resource.
 */
export class DiscoveryClient extends pulumi.CustomResource {
    /**
     * Get an existing DiscoveryClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DiscoveryClient {
        return new DiscoveryClient(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:migrationcenter/v1alpha1:DiscoveryClient';

    /**
     * Returns true if the given object is an instance of DiscoveryClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiscoveryClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiscoveryClient.__pulumiType;
    }

    /**
     * Time when the discovery client was first created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Free text description. Maximum length is 1000 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
     */
    public readonly discoveryClientId!: pulumi.Output<string>;
    /**
     * Optional. Free text display name. Maximum length is 63 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Errors affecting client functionality.
     */
    public /*out*/ readonly errors!: pulumi.Output<outputs.migrationcenter.v1alpha1.StatusResponse[]>;
    /**
     * Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).
     */
    public /*out*/ readonly heartbeatTime!: pulumi.Output<string>;
    /**
     * Optional. Labels as key value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Identifier. Full name of this discovery client.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * Service account used by the discovery client for various operation.
     */
    public readonly serviceAccount!: pulumi.Output<string>;
    /**
     * This field is intended for internal use.
     */
    public /*out*/ readonly signalsEndpoint!: pulumi.Output<string>;
    /**
     * Full name of the source object associated with this discovery client.
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * Current state of the discovery client.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
     */
    public readonly ttl!: pulumi.Output<string>;
    /**
     * Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Client version, as reported in recent heartbeat.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a DiscoveryClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiscoveryClientArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.discoveryClientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'discoveryClientId'");
            }
            if ((!args || args.serviceAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccount'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["discoveryClientId"] = args ? args.discoveryClientId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["heartbeatTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["signalsEndpoint"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["discoveryClientId"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["heartbeatTime"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["serviceAccount"] = undefined /*out*/;
            resourceInputs["signalsEndpoint"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["ttl"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["discoveryClientId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DiscoveryClient.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DiscoveryClient resource.
 */
export interface DiscoveryClientArgs {
    /**
     * Optional. Free text description. Maximum length is 1000 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Required. User specified ID for the discovery client. It will become the last component of the discovery client name. The ID must be unique within the project, is restricted to lower-cased letters and has a maximum length of 63 characters. The ID must match the regular expression: `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.
     */
    discoveryClientId: pulumi.Input<string>;
    /**
     * Optional. Free text display name. Maximum length is 63 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Optional. Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
    /**
     * Service account used by the discovery client for various operation.
     */
    serviceAccount: pulumi.Input<string>;
    /**
     * Full name of the source object associated with this discovery client.
     */
    source: pulumi.Input<string>;
    /**
     * Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.
     */
    ttl?: pulumi.Input<string>;
}
