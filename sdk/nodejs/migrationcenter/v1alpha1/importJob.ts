// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates an import job.
 * Auto-naming is currently not supported for this resource.
 */
export class ImportJob extends pulumi.CustomResource {
    /**
     * Get an existing ImportJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ImportJob {
        return new ImportJob(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:migrationcenter/v1alpha1:ImportJob';

    /**
     * Returns true if the given object is an instance of ImportJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImportJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImportJob.__pulumiType;
    }

    /**
     * Reference to a source.
     */
    public readonly assetSource!: pulumi.Output<string>;
    /**
     * The timestamp when the import job was completed.
     */
    public /*out*/ readonly completeTime!: pulumi.Output<string>;
    /**
     * The timestamp when the import job was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * User-friendly display name. Maximum length is 63 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The report with the results of running the import job.
     */
    public /*out*/ readonly executionReport!: pulumi.Output<outputs.migrationcenter.v1alpha1.ExecutionReportResponse>;
    /**
     * The payload is in Google Cloud Storage.
     */
    public readonly gcsPayload!: pulumi.Output<outputs.migrationcenter.v1alpha1.GCSPayloadInfoResponse>;
    /**
     * Required. ID of the import job.
     */
    public readonly importJobId!: pulumi.Output<string>;
    /**
     * The payload is included in the request, mainly used for small import jobs.
     */
    public readonly inlinePayload!: pulumi.Output<outputs.migrationcenter.v1alpha1.InlinePayloadInfoResponse>;
    /**
     * Labels as key value pairs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The full name of the import job.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    public readonly requestId!: pulumi.Output<string | undefined>;
    /**
     * The state of the import job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The timestamp when the import job was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The report with the validation results of the import job.
     */
    public /*out*/ readonly validationReport!: pulumi.Output<outputs.migrationcenter.v1alpha1.ValidationReportResponse>;

    /**
     * Create a ImportJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImportJobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.assetSource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assetSource'");
            }
            if ((!args || args.importJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'importJobId'");
            }
            resourceInputs["assetSource"] = args ? args.assetSource : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["gcsPayload"] = args ? args.gcsPayload : undefined;
            resourceInputs["importJobId"] = args ? args.importJobId : undefined;
            resourceInputs["inlinePayload"] = args ? args.inlinePayload : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestId"] = args ? args.requestId : undefined;
            resourceInputs["completeTime"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["executionReport"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validationReport"] = undefined /*out*/;
        } else {
            resourceInputs["assetSource"] = undefined /*out*/;
            resourceInputs["completeTime"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["executionReport"] = undefined /*out*/;
            resourceInputs["gcsPayload"] = undefined /*out*/;
            resourceInputs["importJobId"] = undefined /*out*/;
            resourceInputs["inlinePayload"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["requestId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validationReport"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["importJobId", "location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ImportJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ImportJob resource.
 */
export interface ImportJobArgs {
    /**
     * Reference to a source.
     */
    assetSource: pulumi.Input<string>;
    /**
     * User-friendly display name. Maximum length is 63 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The payload is in Google Cloud Storage.
     */
    gcsPayload?: pulumi.Input<inputs.migrationcenter.v1alpha1.GCSPayloadInfoArgs>;
    /**
     * Required. ID of the import job.
     */
    importJobId: pulumi.Input<string>;
    /**
     * The payload is included in the request, mainly used for small import jobs.
     */
    inlinePayload?: pulumi.Input<inputs.migrationcenter.v1alpha1.InlinePayloadInfoArgs>;
    /**
     * Labels as key value pairs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
     */
    requestId?: pulumi.Input<string>;
}
