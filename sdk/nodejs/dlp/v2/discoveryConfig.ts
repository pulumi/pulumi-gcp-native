// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a config for discovery to scan and profile storage.
 */
export class DiscoveryConfig extends pulumi.CustomResource {
    /**
     * Get an existing DiscoveryConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DiscoveryConfig {
        return new DiscoveryConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:dlp/v2:DiscoveryConfig';

    /**
     * Returns true if the given object is an instance of DiscoveryConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DiscoveryConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DiscoveryConfig.__pulumiType;
    }

    /**
     * Actions to execute at the completion of scanning.
     */
    public readonly actions!: pulumi.Output<outputs.dlp.v2.GooglePrivacyDlpV2DataProfileActionResponse[]>;
    /**
     * The creation timestamp of a DiscoveryConfig.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Display name (max 100 chars)
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
     */
    public /*out*/ readonly errors!: pulumi.Output<outputs.dlp.v2.GooglePrivacyDlpV2ErrorResponse[]>;
    /**
     * Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
     */
    public readonly inspectTemplates!: pulumi.Output<string[]>;
    /**
     * The timestamp of the last time this config was executed.
     */
    public /*out*/ readonly lastRunTime!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Only set when the parent is an org.
     */
    public readonly orgConfig!: pulumi.Output<outputs.dlp.v2.GooglePrivacyDlpV2OrgConfigResponse>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A status for this configuration.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Target to match against for determining what to scan and how frequently.
     */
    public readonly targets!: pulumi.Output<outputs.dlp.v2.GooglePrivacyDlpV2DiscoveryTargetResponse[]>;
    /**
     * The last update timestamp of a DiscoveryConfig.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a DiscoveryConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiscoveryConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["inspectTemplates"] = args ? args.inspectTemplates : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgConfig"] = args ? args.orgConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["lastRunTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["inspectTemplates"] = undefined /*out*/;
            resourceInputs["lastRunTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["orgConfig"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["targets"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DiscoveryConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a DiscoveryConfig resource.
 */
export interface DiscoveryConfigArgs {
    /**
     * Actions to execute at the completion of scanning.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DataProfileActionArgs>[]>;
    /**
     * The config ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     */
    configId?: pulumi.Input<string>;
    /**
     * Display name (max 100 chars)
     */
    displayName?: pulumi.Input<string>;
    /**
     * Detection logic for profile generation. Not all template features are used by Discovery. FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple templates may be provided if there is data in multiple regions. At most one template must be specified per-region (including "global"). Each region is scanned using the applicable template. If no region-specific template is specified, but a "global" template is specified, it will be copied to that region and used instead. If no global or region-specific template is provided for a region with data, that region's data will not be scanned. For more information, see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
     */
    inspectTemplates?: pulumi.Input<pulumi.Input<string>[]>;
    location?: pulumi.Input<string>;
    /**
     * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
     */
    name?: pulumi.Input<string>;
    /**
     * Only set when the parent is an org.
     */
    orgConfig?: pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2OrgConfigArgs>;
    project?: pulumi.Input<string>;
    /**
     * A status for this configuration.
     */
    status: pulumi.Input<enums.dlp.v2.DiscoveryConfigStatus>;
    /**
     * Target to match against for determining what to scan and how frequently.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.dlp.v2.GooglePrivacyDlpV2DiscoveryTargetArgs>[]>;
}
