// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new user in a Cloud SQL instance.
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp-native:sqladmin/v1beta4:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }


    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["etag"] = args ? args.etag : undefined;
            inputs["host"] = args ? args.host : undefined;
            inputs["instance"] = args ? args.instance : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["sqlserverUserDetails"] = args ? args.sqlserverUserDetails : undefined;
            inputs["type"] = args ? args.type : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(User.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * This field is deprecated and will be removed from a future version of the API.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion.
     */
    readonly host?: pulumi.Input<string>;
    /**
     * The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL.
     */
    readonly instance: pulumi.Input<string>;
    /**
     * This is always *sql#user*.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The password for the user.
     */
    readonly password?: pulumi.Input<string>;
    /**
     * The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.
     */
    readonly project: pulumi.Input<string>;
    readonly sqlserverUserDetails?: pulumi.Input<inputs.sqladmin.v1beta4.SqlServerUserDetails>;
    /**
     * The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.
     */
    readonly type?: pulumi.Input<string>;
}
