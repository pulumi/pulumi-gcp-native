// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../../types";
import * as utilities from "../../utilities";

/**
 * Creates a new backup run on demand. This method is applicable only to Second Generation instances.
 */
export class BackupRun extends pulumi.CustomResource {
    /**
     * Get an existing BackupRun resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackupRun {
        return new BackupRun(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-cloud:sqladmin/v1beta4:BackupRun';

    /**
     * Returns true if the given object is an instance of BackupRun.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupRun {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupRun.__pulumiType;
    }


    /**
     * Create a BackupRun resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupRunArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.id === undefined) && !opts.urn) {
                throw new Error("Missing required property 'id'");
            }
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            inputs["backupKind"] = args ? args.backupKind : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["diskEncryptionConfiguration"] = args ? args.diskEncryptionConfiguration : undefined;
            inputs["diskEncryptionStatus"] = args ? args.diskEncryptionStatus : undefined;
            inputs["endTime"] = args ? args.endTime : undefined;
            inputs["enqueuedTime"] = args ? args.enqueuedTime : undefined;
            inputs["error"] = args ? args.error : undefined;
            inputs["id"] = args ? args.id : undefined;
            inputs["instance"] = args ? args.instance : undefined;
            inputs["kind"] = args ? args.kind : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["selfLink"] = args ? args.selfLink : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["windowStartTime"] = args ? args.windowStartTime : undefined;
        } else {
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(BackupRun.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a BackupRun resource.
 */
export interface BackupRunArgs {
    /**
     * Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
     */
    readonly backupKind?: pulumi.Input<string>;
    /**
     * The description of this run, only applicable to on-demand backups.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Encryption configuration specific to a backup. Applies only to Second Generation instances.
     */
    readonly diskEncryptionConfiguration?: pulumi.Input<inputs.sqladmin.v1beta4.DiskEncryptionConfiguration>;
    /**
     * Encryption status specific to a backup. Applies only to Second Generation instances.
     */
    readonly diskEncryptionStatus?: pulumi.Input<inputs.sqladmin.v1beta4.DiskEncryptionStatus>;
    /**
     * The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.
     */
    readonly endTime?: pulumi.Input<string>;
    /**
     * The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.
     */
    readonly enqueuedTime?: pulumi.Input<string>;
    /**
     * Information about why the backup operation failed. This is only present if the run has the FAILED status.
     */
    readonly error?: pulumi.Input<inputs.sqladmin.v1beta4.OperationError>;
    /**
     * The identifier for this backup run. Unique only for a specific Cloud SQL instance.
     */
    readonly id: pulumi.Input<string>;
    /**
     * Name of the database instance.
     */
    readonly instance: pulumi.Input<string>;
    /**
     * This is always *sql#backupRun*.
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Location of the backups.
     */
    readonly location?: pulumi.Input<string>;
    readonly project: pulumi.Input<string>;
    /**
     * The URI of this resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.
     */
    readonly startTime?: pulumi.Input<string>;
    /**
     * The status of this run.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
     */
    readonly type?: pulumi.Input<string>;
    /**
     * The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.
     */
    readonly windowStartTime?: pulumi.Input<string>;
}
