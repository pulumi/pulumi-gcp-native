// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Returns an IntegrationTemplateVersion in the specified project.
 */
export function getTemplatesVersion(args: GetTemplatesVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplatesVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:integrations/v1alpha:getTemplatesVersion", {
        "integrationtemplateId": args.integrationtemplateId,
        "location": args.location,
        "productId": args.productId,
        "project": args.project,
        "versionId": args.versionId,
    }, opts);
}

export interface GetTemplatesVersionArgs {
    integrationtemplateId: string;
    location: string;
    productId: string;
    project?: string;
    versionId: string;
}

export interface GetTemplatesVersionResult {
    /**
     * Auto-generated.
     */
    readonly createTime: string;
    /**
     * Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
     */
    readonly databasePersistencePolicy: string;
    /**
     * Optional. The templateversion description. Permitted format is alphanumeric with underscores and no spaces.
     */
    readonly description: string;
    /**
     * Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    readonly lastModifierEmail: string;
    /**
     * Auto-generated primary key. Format: projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}
     */
    readonly name: string;
    /**
     * Optional. ID of the IntegrationVersion that was used to create this IntegrationTemplateVersion
     */
    readonly parentIntegrationVersionId: string;
    /**
     * An increasing sequence that is set when a new snapshot is created.
     */
    readonly snapshotNumber: string;
    /**
     * Optional. Generated by eventbus. User should not set it as an input.
     */
    readonly status: string;
    /**
     * Optional. Task configuration for the IntegrationTemplateVersion. It's optional, but the IntegrationTemplateVersion doesn't do anything without task_configs.
     */
    readonly taskConfigs: outputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTaskConfigResponse[];
    /**
     * Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
     */
    readonly teardown: outputs.integrations.v1alpha.EnterpriseCrmEventbusProtoTeardownResponse;
    /**
     * Optional. Parameters that are expected to be passed to the IntegrationTemplateVersion when an event is triggered. This consists of all the parameters that are expected in the IntegrationTemplateVersion execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
     */
    readonly templateParameters: outputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoWorkflowParametersResponse;
    /**
     * Optional. Trigger configurations.
     */
    readonly triggerConfigs: outputs.integrations.v1alpha.EnterpriseCrmFrontendsEventbusProtoTriggerConfigResponse[];
    /**
     * Auto-generated.
     */
    readonly updateTime: string;
    /**
     * Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
     */
    readonly userLabel: string;
}

export function getTemplatesVersionOutput(args: GetTemplatesVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplatesVersionResult> {
    return pulumi.output(args).apply(a => getTemplatesVersion(a, opts))
}

export interface GetTemplatesVersionOutputArgs {
    integrationtemplateId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    productId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
}
