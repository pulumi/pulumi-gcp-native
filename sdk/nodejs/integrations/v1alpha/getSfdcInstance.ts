// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

/**
 * Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND exception will be thrown.
 */
export function getSfdcInstance(args: GetSfdcInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetSfdcInstanceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("google-native:integrations/v1alpha:getSfdcInstance", {
        "location": args.location,
        "productId": args.productId,
        "project": args.project,
        "sfdcInstanceId": args.sfdcInstanceId,
    }, opts);
}

export interface GetSfdcInstanceArgs {
    location: string;
    productId: string;
    project?: string;
    sfdcInstanceId: string;
}

export interface GetSfdcInstanceResult {
    /**
     * A list of AuthConfigs that can be tried to open the channel to SFDC
     */
    readonly authConfigId: string[];
    /**
     * Time when the instance is created
     */
    readonly createTime: string;
    /**
     * Time when the instance was deleted. Empty if not deleted.
     */
    readonly deleteTime: string;
    /**
     * A description of the sfdc instance.
     */
    readonly description: string;
    /**
     * User selected unique name/alias to easily reference an instance.
     */
    readonly displayName: string;
    /**
     * Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
     */
    readonly name: string;
    /**
     * URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig).
     */
    readonly serviceAuthority: string;
    /**
     * The SFDC Org Id. This is defined in salesforce.
     */
    readonly sfdcOrgId: string;
    /**
     * Time when the instance was last updated
     */
    readonly updateTime: string;
}

export function getSfdcInstanceOutput(args: GetSfdcInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSfdcInstanceResult> {
    return pulumi.output(args).apply(a => getSfdcInstance(a, opts))
}

export interface GetSfdcInstanceOutputArgs {
    location: pulumi.Input<string>;
    productId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    sfdcInstanceId: pulumi.Input<string>;
}
