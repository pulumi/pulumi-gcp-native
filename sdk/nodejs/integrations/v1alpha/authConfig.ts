// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store the encrypted credentials in Spanner. Returns the encrypted auth config.
 * Auto-naming is currently not supported for this resource.
 */
export class AuthConfig extends pulumi.CustomResource {
    /**
     * Get an existing AuthConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuthConfig {
        return new AuthConfig(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:integrations/v1alpha:AuthConfig';

    /**
     * Returns true if the given object is an instance of AuthConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthConfig.__pulumiType;
    }

    /**
     * Certificate id for client certificate
     */
    public readonly certificateId!: pulumi.Output<string>;
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    public readonly clientCertificateEncryptedPrivateKey!: pulumi.Output<string | undefined>;
    /**
     * 'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key.
     */
    public readonly clientCertificatePassphrase!: pulumi.Output<string | undefined>;
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    public readonly clientCertificateSslCertificate!: pulumi.Output<string | undefined>;
    /**
     * The timestamp when the auth config is created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    public readonly creatorEmail!: pulumi.Output<string>;
    /**
     * Credential type of the encrypted credential.
     */
    public readonly credentialType!: pulumi.Output<string>;
    /**
     * Raw auth credentials.
     */
    public readonly decryptedCredential!: pulumi.Output<outputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaCredentialResponse>;
    /**
     * A description of the auth config.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the auth config.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
     */
    public readonly encryptedCredential!: pulumi.Output<string>;
    /**
     * User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
     */
    public readonly expiryNotificationDuration!: pulumi.Output<string[]>;
    /**
     * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    public readonly lastModifierEmail!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
     */
    public readonly overrideValidTime!: pulumi.Output<string>;
    public readonly productId!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The reason / details of the current status.
     */
    public readonly reason!: pulumi.Output<string>;
    /**
     * The status of the auth config.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * The timestamp when the auth config is modified.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
     */
    public readonly validTime!: pulumi.Output<string>;
    /**
     * The visibility of the auth config.
     */
    public readonly visibility!: pulumi.Output<string>;

    /**
     * Create a AuthConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthConfigArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["clientCertificateEncryptedPrivateKey"] = args ? args.clientCertificateEncryptedPrivateKey : undefined;
            resourceInputs["clientCertificatePassphrase"] = args ? args.clientCertificatePassphrase : undefined;
            resourceInputs["clientCertificateSslCertificate"] = args ? args.clientCertificateSslCertificate : undefined;
            resourceInputs["creatorEmail"] = args ? args.creatorEmail : undefined;
            resourceInputs["credentialType"] = args ? args.credentialType : undefined;
            resourceInputs["decryptedCredential"] = args ? args.decryptedCredential : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptedCredential"] = args ? args.encryptedCredential : undefined;
            resourceInputs["expiryNotificationDuration"] = args ? args.expiryNotificationDuration : undefined;
            resourceInputs["lastModifierEmail"] = args ? args.lastModifierEmail : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideValidTime"] = args ? args.overrideValidTime : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["reason"] = args ? args.reason : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["validTime"] = args ? args.validTime : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        } else {
            resourceInputs["certificateId"] = undefined /*out*/;
            resourceInputs["clientCertificateEncryptedPrivateKey"] = undefined /*out*/;
            resourceInputs["clientCertificatePassphrase"] = undefined /*out*/;
            resourceInputs["clientCertificateSslCertificate"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creatorEmail"] = undefined /*out*/;
            resourceInputs["credentialType"] = undefined /*out*/;
            resourceInputs["decryptedCredential"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["encryptedCredential"] = undefined /*out*/;
            resourceInputs["expiryNotificationDuration"] = undefined /*out*/;
            resourceInputs["lastModifierEmail"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["overrideValidTime"] = undefined /*out*/;
            resourceInputs["productId"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["reason"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["validTime"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["location", "productId", "project"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(AuthConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AuthConfig resource.
 */
export interface AuthConfigArgs {
    /**
     * Certificate id for client certificate
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    clientCertificateEncryptedPrivateKey?: pulumi.Input<string>;
    /**
     * 'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key.
     */
    clientCertificatePassphrase?: pulumi.Input<string>;
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    clientCertificateSslCertificate?: pulumi.Input<string>;
    /**
     * The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    creatorEmail?: pulumi.Input<string>;
    /**
     * Credential type of the encrypted credential.
     */
    credentialType?: pulumi.Input<enums.integrations.v1alpha.AuthConfigCredentialType>;
    /**
     * Raw auth credentials.
     */
    decryptedCredential?: pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaCredentialArgs>;
    /**
     * A description of the auth config.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the auth config.
     */
    displayName: pulumi.Input<string>;
    /**
     * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
     */
    encryptedCredential?: pulumi.Input<string>;
    /**
     * User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
     */
    expiryNotificationDuration?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    lastModifierEmail?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
     */
    name?: pulumi.Input<string>;
    /**
     * User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
     */
    overrideValidTime?: pulumi.Input<string>;
    productId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The reason / details of the current status.
     */
    reason?: pulumi.Input<string>;
    /**
     * The status of the auth config.
     */
    state?: pulumi.Input<enums.integrations.v1alpha.AuthConfigState>;
    /**
     * The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
     */
    validTime?: pulumi.Input<string>;
    /**
     * The visibility of the auth config.
     */
    visibility?: pulumi.Input<enums.integrations.v1alpha.AuthConfigVisibility>;
}
