// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Creates a new test case
 * Auto-naming is currently not supported for this resource.
 */
export class TestCase extends pulumi.CustomResource {
    /**
     * Get an existing TestCase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TestCase {
        return new TestCase(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-native:integrations/v1alpha:TestCase';

    /**
     * Returns true if the given object is an instance of TestCase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TestCase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TestCase.__pulumiType;
    }

    /**
     * Auto-generated.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    public readonly creatorEmail!: pulumi.Output<string>;
    /**
     * Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
     */
    public readonly databasePersistencePolicy!: pulumi.Output<string>;
    /**
     * Optional. Description of the test case.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The display name of test case.
     */
    public readonly displayName!: pulumi.Output<string>;
    public readonly integrationId!: pulumi.Output<string>;
    /**
     * The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    public readonly lastModifierEmail!: pulumi.Output<string>;
    public readonly location!: pulumi.Output<string>;
    /**
     * Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    public readonly lockHolderEmail!: pulumi.Output<string>;
    /**
     * Auto-generated primary key.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Required. Required
     */
    public readonly testCaseId!: pulumi.Output<string>;
    /**
     * Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
     */
    public readonly testInputParameters!: pulumi.Output<outputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationParameterResponse[]>;
    /**
     * Optional. However, the test case doesn't mock or assert anything without test_task_configs.
     */
    public readonly testTaskConfigs!: pulumi.Output<outputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTestTaskConfigResponse[]>;
    /**
     * This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
     */
    public readonly triggerId!: pulumi.Output<string>;
    /**
     * Auto-generated.
     */
    public readonly updateTime!: pulumi.Output<string>;
    public readonly versionId!: pulumi.Output<string>;
    /**
     * ID of the workflow with which this test case is associated
     */
    public readonly workflowId!: pulumi.Output<string>;

    /**
     * Create a TestCase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TestCaseArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.integrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationId'");
            }
            if ((!args || args.testCaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'testCaseId'");
            }
            if ((!args || args.triggerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'triggerId'");
            }
            if ((!args || args.versionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionId'");
            }
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["creatorEmail"] = args ? args.creatorEmail : undefined;
            resourceInputs["databasePersistencePolicy"] = args ? args.databasePersistencePolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["integrationId"] = args ? args.integrationId : undefined;
            resourceInputs["lastModifierEmail"] = args ? args.lastModifierEmail : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["lockHolderEmail"] = args ? args.lockHolderEmail : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["testCaseId"] = args ? args.testCaseId : undefined;
            resourceInputs["testInputParameters"] = args ? args.testInputParameters : undefined;
            resourceInputs["testTaskConfigs"] = args ? args.testTaskConfigs : undefined;
            resourceInputs["triggerId"] = args ? args.triggerId : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["workflowId"] = args ? args.workflowId : undefined;
            resourceInputs["name"] = undefined /*out*/;
        } else {
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creatorEmail"] = undefined /*out*/;
            resourceInputs["databasePersistencePolicy"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["integrationId"] = undefined /*out*/;
            resourceInputs["lastModifierEmail"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["lockHolderEmail"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["testCaseId"] = undefined /*out*/;
            resourceInputs["testInputParameters"] = undefined /*out*/;
            resourceInputs["testTaskConfigs"] = undefined /*out*/;
            resourceInputs["triggerId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
            resourceInputs["workflowId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["integrationId", "location", "project", "testCaseId", "versionId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(TestCase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a TestCase resource.
 */
export interface TestCaseArgs {
    /**
     * Auto-generated.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    creatorEmail?: pulumi.Input<string>;
    /**
     * Optional. Various policies for how to persist the test execution info including execution info, execution export info, execution metadata index and execution param index..
     */
    databasePersistencePolicy?: pulumi.Input<enums.integrations.v1alpha.TestCaseDatabasePersistencePolicy>;
    /**
     * Optional. Description of the test case.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of test case.
     */
    displayName: pulumi.Input<string>;
    integrationId: pulumi.Input<string>;
    /**
     * The last modifer's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    lastModifierEmail?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     */
    lockHolderEmail?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Required. Required
     */
    testCaseId: pulumi.Input<string>;
    /**
     * Optional. Parameters that are expected to be passed to the test case when the test case is triggered. This gives the user the ability to provide default values. This should include all the output variables of the trigger as input variables.
     */
    testInputParameters?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaIntegrationParameterArgs>[]>;
    /**
     * Optional. However, the test case doesn't mock or assert anything without test_task_configs.
     */
    testTaskConfigs?: pulumi.Input<pulumi.Input<inputs.integrations.v1alpha.GoogleCloudIntegrationsV1alphaTestTaskConfigArgs>[]>;
    /**
     * This defines the trigger ID in workflow which is considered to be executed as starting point of the test case
     */
    triggerId: pulumi.Input<string>;
    /**
     * Auto-generated.
     */
    updateTime?: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
    /**
     * ID of the workflow with which this test case is associated
     */
    workflowId?: pulumi.Input<string>;
}
